


 *
 *                PCIE_CFG000 = First 32-bits of PCIE type 0 config space (Device ID and Vendor ID Register)
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG000 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <15:0>  VENDID          RO/WRSL  0x177d      0x177d    Vendor ID, writable through PEM(0..1)_CFG_WR                              
                                                         However, the application must not change this field.               
                                                        During and EPROM Load is a value of 0xFFFF is loaded to this
                                                        field and a value of 0xFFFF is loaded to the DEVID field of
							this register, the value will not be loaded, EEPROM load will
							stop, and the FastLinkEnable bit will be set in the
							PCIE_CFG452 register.
 <31:16> DEVID           RO/WRSL  0x90        0x90      Device ID, writable through PEM(0..1)_CFG_WR                              
                                                         However, the application must not change this field.               
 							For EEPROM loads also see VENDID of this register.
----------------------------------------------------------------------------------------------------
===

 *
 *                PCIE_CFG001 = Second 32-bits of PCIE type 0 config space (Command/Status Register)
 *

     ==============================================================
     PCIEEP(0..1)_CFG001 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     ISAE            R/W      0x0         0x0       I/O Space Enable                                                     
 <1>     MSAE            R/W      0x0         0x0       Memory Space Enable                                                  
 <2>     ME              R/W      0x0         0x0       Bus Master Enable                                                    
 <3>     SCSE            RO       0x0         0x0       Special Cycle Enable                                                 
                                                         Not applicable for PCI Express. Must be hardwired to 0.
 <4>     MWICE           RO       0x0         0x0       Memory Write and Invalidate                                          
                                                         Not applicable for PCI Express. Must be hardwired to 0. 
 <5>     VPS             RO       0x0         0x0       VGA Palette Snoop                                                    
                                                         Not applicable for PCI Express. Must be hardwired to 0. 
 <6>     PER             R/W      0x0         0x0       Parity Error Response                                                
 <7>     IDS_WCC         RO       0x0         0x0       IDSEL Stepping/Wait Cycle Control                                    
                                                         Not applicable for PCI Express. Must be hardwired to 0
 <8>     SEE             R/W      0x0         0x0       SERR# Enable                                                         
 <9>     FBBE            RO       0x0         0x0       Fast Back-to-Back Enable                                             
                                                         Not applicable for PCI Express. Must be hardwired to 0. 
 <10>    I_DIS           R/W      0x0         0x0       INTx Assertion Disable                                               
 <18:11> NS              RAZ      NS          NS        Reserved                                                             
 <19>    I_STAT          RO       0x0         0x0       INTx Status                                                          
 <20>    CL              RO       0x1         0x1       Capabilities List                                                    
                                                         Indicates presence of an extended capability item. 
                                                         Hardwired to 1.
 <21>    M66             RO       0x0         0x0       66 MHz Capable                                                       
                                                         Not applicable for PCI Express. Hardwired to 0. 
 <22>    NS              RAZ      NS          NS        Reserved                                                             
 <23>    FBB             RO       0x0         0x0       Fast Back-to-Back Capable                                            
                                                         Not applicable for PCI Express. Hardwired to 0. 
 <24>    MDPE            R/W1C    0x0         0x0       Master Data Parity Error                                             
 <26:25> DEVT            RO       0x0         0x0       DEVSEL Timing                                                        
                                                         Not applicable for PCI Express. Hardwired to 0. 
 <27>    STA             R/W1C    0x0         0x0       Signaled Target Abort                                                
 <28>    RTA             R/W1C    0x0         0x0       Received Target Abort                                                
 <29>    RMA             R/W1C    0x0         0x0       Received Master Abort                                                
 <30>    SSE             R/W1C    0x0         0x0       Signaled System Error                                                
 <31>    DPE             R/W1C    0x0         0x0       Detected Parity Error                                                
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG002 = Third 32-bits of PCIE type 0 config space (Revision ID/Class Code Register)
 *

     ==============================================================
     PCIEEP(0..1)_CFG002 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   RID             RO/WRSL  0x00        0x00      Revision ID, writable through PEM(0..1)_CFG_WR                            
                                                         However, the application must not change this field.                                             
 <15:8>  PI              RO/WRSL  0x00        0x0       Programming Interface, writable through PEM(0..1)_CFG_WR                  
                                                         However, the application must not change this field.                                             
 <23:16> SC              RO/WRSL  0x30        0x30      Subclass Code, writable through PEM(0..1)_CFG_WR                          
                                                         However, the application must not change this field.                                             
 <31:24> BCC             RO/WRSL  0x0B        0x0B      Base Class Code, writable through PEM(0..1)_CFG_WR                        
                                                         However, the application must not change this field.                              
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG003 = Fourth 32-bits of PCIE type 0 config space (Cache Line Size/Master Latency Timer/Header Type Register/BIST Register)
 *

     ==============================================================
     PCIEEP(0..1)_CFG003 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   CLS             R/W      0x00        0x0       Cache Line Size                                                      
                                                         The Cache Line Size register is RW for legacy compatibility 
                                                         purposes and is not applicable to PCI Express device 
                                                         functionality. 
                                                         Writing to the Cache Line Size register does not impact 
                                                         functionality.
 <15:8>  LT              RO       0x00        0x0       Master Latency Timer                                                 
                                                         Not applicable for PCI Express, hardwired to 0.
 <22:16> CHF             RO       0x0         0x0       Configuration Header Format                                          
                                                         Hardwired to 0 for type 0.
 <23>    MFD             RO/WRSL  0x0         0x0       Multi Function Device                                                
                                                         The Multi Function Device bit is writable through PEM(0..1)_CFG_WR.
                                                         However, this is a single function device. Therefore, the 
                                                         application must not write a 1 to this bit.
 <31:24> BIST            RO       0x00        0x0       The BIST register functions are not supported.                       
                                                         All 8 bits of the BIST register are hardwired to 0.                   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG004 = Fifth 32-bits of PCIE type 0 config space (Base Address Register 0 - Low) 
 *
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG004 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:14> LBAB            R/W      0x0000000   0x0       Lower bits of the BAR 0 base address                                 
 <13:4>  NS              RAZ      NS          NS        Reserved                                                             
                                                         If the Bit Mask Register (PCIE_CFG004_MASK or PCIE_CFG005_MASK)
                                                         is changed, see LBAB.                    
 <3>     PF              RO/WRSL  0x1         0x1       Prefetchable                                                         
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <2:1>   TYP             RO/WRSL  0x2         0x2       BAR type                                                             
                                                            o 00 = 32-bit BAR 
                                                            o 10 = 64-bit BAR
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.                                               
 <0>     MSPC            RO/WRSL  0x0         0x0       Memory Space Indicator                                               
                                                            o 0 = BAR 0 is a memory BAR             
                                                            o 1 = BAR 0 is an I/O BAR
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG005 = Sixth 32-bits of PCIE type 0 config space (Base Address Register 0 - High)
 *
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG005 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  UBAB            R/W      0x0         0x0       Contains the upper 32 bits of the BAR 0 base address.                
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG006 = Seventh 32-bits of PCIE type 0 config space (Base Address Register 1 - Low)
 *
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG006 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:26> LBAB            R/W      0x0000000   0x0       Lower bits of the BAR 1 base address                                 
 <25:4>  NS              RAZ      NS          NS        Reserved                                                             
                                                         If the Bit Mask Register (PCIE_CFG006_MASK or PCIE_CFG007_MASK)
                                                         is changed, see LBAB.
 <3>     PF              RO/WRSL  0x1         0x1       Prefetchable                                                         
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <2:1>   TYP             RO/WRSL  0x2         0x2       BAR type                                                             
                                                            o 00 = 32-bit BAR 
                                                            o 10 = 64-bit BAR
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.                                               
 <0>     MSPC            RO/WRSL  0x0         0x0       Memory Space Indicator                                               
                                                            o 0 = BAR 0 is a memory BAR             
                                                            o 1 = BAR 0 is an I/O BAR
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG007 = Eighth 32-bits of PCIE type 0 config space (Base Address Register 1 - High)
 *
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG007 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  UBAB            R/W      0x0         0x0       Contains the upper 32 bits of the BAR 1 base address.                
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG008 = Ninth 32-bits of PCIE type 0 config space (Base Address Register 2 - Low)
 *
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG008 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:4>  NS              RAZ      NS          NS        Reserved                                                             
                                                         If the Bit Mask Register (PCIE_CFG008_MASK or PCIE_CFG009_MASK)
                                                         is changed, see LBAB.
 <3>     PF              RO/WRSL  0x1         0x1       Prefetchable                                                         
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <2:1>   TYP             RO/WRSL  0x2         0x2       BAR type                                                             
                                                            o 00 = 32-bit BAR 
                                                            o 10 = 64-bit BAR
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.                                               
 <0>     MSPC            RO/WRSL  0x0         0x0       Memory Space Indicator                                               
                                                            o 0 = BAR 0 is a memory BAR             
                                                            o 1 = BAR 0 is an I/O BAR
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG009 = Tenth 32-bits of PCIE type 0 config space (Base Address Register 2 - High)
 *
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG009 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:9>  UBAB            R/W      0x0         0x0       Contains the upper 32 bits of the BAR 2 base address.                
 <8:0>   NS              RAZ      NS          NS        Reserved                                                             
                                                         If the Bit Mask Register (PCIE_CFG008_MASK or PCIE_CFG009_MASK)
                                                         is changed, see UBAB.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG010 = Eleventh 32-bits of PCIE type 0 config space (CardBus CIS Pointer Register) 
 *
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG010 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  CISP            RO/WRSL  0x0         0x0       CardBus CIS Pointer                                                  
                                                         Optional, writable through PEM(0..1)_CFG_WR.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG011 = Twelfth 32-bits of PCIE type 0 config space (Subsystem ID and Subsystem Vendor ID Register) 
 *
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG011 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <15:0>  SSVID           RO/WRSL  0x177d      0x177d    Subsystem Vendor ID                                                  
                                                         Assigned by PCI-SIG, writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <31:16> SSID            RO/WRSL  0x1         0x1       Subsystem ID                                                         
                                                         Assigned by PCI-SIG, writable through PEM(0..1)_CFG_WR.                                                                                                           However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG012 = Thirteenth 32-bits of PCIE type 0 config space (Expansion ROM Base Address Register) 
 *
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG012 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:16> ERADDR          R/W      0x00000     0x0       Expansion ROM Address                                                
 <15:1>  NS              RAZ      NS          NS        Reserved                                                             
 <0>     ER_EN           R/W      0x0         0x0       Expansion ROM Enable                                                 
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG013 = Fourteenth 32-bits of PCIE type 0 config space (Capability Pointer Register)
 *

     ==============================================================
     PCIEEP(0..1)_CFG013 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   CP              RO/WRSL  0x40        0x40      First Capability Pointer.                                            
                                                         Points to Power Management Capability structure by 
                                                         default, writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <31:8>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG015 = Sixteenth 32-bits of PCIE type 0 config space (Interrupt Line Register/Interrupt Pin/Bridge Control Register)
 *

     ==============================================================
     PCIEEP(0..1)_CFG015 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   IL              R/W      0xFF        0xFF      Interrupt Line                                                       
 <15:8>  INTA            RO/WRSL  0x01        0x01      Interrupt Pin                                                        
                                                         Identifies the legacy interrupt Message that the device 
                                                         (or device function) uses.
                                                         The Interrupt Pin register is writable through PEM(0..1)_CFG_WR.
                                                         In a single-function configuration, only INTA is used. 
                                                         Therefore, the application must not change this field.
 <23:16> MG              RO       0x00        0x00      Minimum Grant       (Hardwired to 0)                                 
 <31:24> ML              RO       0x00        0x00      Maximum Latency     (Hardwired to 0)                                 
----------------------------------------------------------------------------------------------------
===

 *
 *                 PCIE_CFG016 = Seventeenth 32-bits of PCIE type 0 config space 
 *                  (Power Management Capability ID/
 *                  Power Management Next Item Pointer/
 *                  Power Management Capabilities Register)
 *

     ==============================================================
     PCIEEP(0..1)_CFG016 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   PMCID           RO       0x01        0x0       Power Management Capability ID                                       
 <15:8>  NCP             RO/WRSL  0x50        0x0       Next Capability Pointer                                              
                                                         Points to the MSI capabilities by default, writable 
                                                         through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <18:16> PMSV            RO/WRSL  0x03        0x0       Power Management Specification Version, writable through PEM(0..1)_CFG_WR 
                                                         However, the application must not change this field.              
 <19>    PME_Clock       RO       0x0         0x0       PME Clock, hardwired to 0                                            
 <20>    NS              RAZ      NS          NS        Reserved                                                             
 <21>    DSI             RO/WRSL  0x0         0x0       Device Specific Initialization (DSI), writable through PEM(0..1)_CFG_WR   
                                                         However, the application must not change this field.               
 <24:22> AUXC            RO/WRSL  0x0         0x0       AUX Current, writable through PEM(0..1)_CFG_WR                            
                                                         However, the application must not change this field.               
 <25>    D1S             RO/WRSL  0x0         0x0       D1 Support, writable through PEM(0..1)_CFG_WR                             
                                                         However, the application must not change this field.               
 <26>    D2S             RO/WRSL  0x0         0x0       D2 Support, writable through PEM(0..1)_CFG_WR                             
                                                         However, the application must not change this field.               
 <31:27> PMES            RO/WRSL  0x0         0x0       PME_Support                                                          
                                                         o Bit 11: If set, PME Messages can be generated from D0
                                                         o Bit 12: If set, PME Messages can be generated from D1
                                                         o Bit 13: If set, PME Messages can be generated from D2
                                                         o Bit 14: If set, PME Messages can be generated from D3hot
                                                         o Bit 15: If set, PME Messages can be generated from D3cold
                                                         The PME_Support field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG017 = Eighteenth 32-bits of PCIE type 0 config space (Power Management Control and Status Register)
 *
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG017 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <1:0>   PS              R/W      0x0         0x0       Power State                                                          
                                                         Controls the device power state:
                                                           o 00b: D0
                                                           o 01b: D1
                                                           o 10b: D2
                                                           o 11b: D3
                                                         The written value is ignored if the specific state is 
                                                         not supported.
 <2>     NS              RAZ      NS          NS        Reserved                                                             
 <3>     NSR             RO/WRSL  0x0         0x0       No Soft Reset, writable through PEM(0..1)_CFG_WR                          
                                                         However, the application must not change this field.               
 <7:4>   NS              RAZ      NS          NS        Reserved                                                             
 <8>     PMEENS          R/W      0x0         0x0       PME Enable                                                           
                                                         A value of 1 indicates that the device is enabled to 
                                                         generate PME.
 <12:9>  PMDS            RO       0x0         0x0       Data Select (not supported)                                          
 <14:13> PMEDSIA         RO       0x0         0x0       Data Scale (not supported)                                           
 <15>    PMESS           R/W1C    0x0         0x0       PME Status                                                           
                                                        Indicates if a previously enabled PME event occurred or not.
 <21:16> NS              RAZ      NS          NS        Reserved                                                             
 <22>    BD3H            RO       0x0         0x0       B2/B3 Support, hardwired to 0                                        
 <23>    BPCCEE          RO       0x0         0x0       Bus Power/Clock Control Enable, hardwired to 0                       
 <31:24> PMDIA           RO       0x00        0x0       Data register for additional information (not supported)             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG020 = Twenty-first 32-bits of PCIE type 0 config space
 *                  (MSI Capability ID/
 *                   MSI Next Item Pointer/
 *                   MSI Control Register)
 *
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG020 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   MSICID          RO       0x05        0x05      MSI Capability ID                                                    
 <15:8>  NCP             RO/WRSL  0x70        0x70      Next Capability Pointer                                              
                                                         Points to PCI Express Capabilities by default, 
                                                         writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <16>    MSIEN           R/W      0x0         0x0       MSI Enabled                                                          
                                                         When set, INTx must be disabled.
 <19:17> MMC             RO/WRSL  0x0         0x0       Multiple Message Capable, writable through PEM(0..1)_CFG_WR               
                                                         However, the application must not change this field.
 <22:20> MME             R/W      0x0         0x0       Multiple Message Enabled                                             
                                                         Indicates that multiple Message mode is enabled by system 
                                                         software. The number of Messages enabled must be less than 
                                                         or equal to the Multiple Message Capable value.
 <23>    M64             RO/WRSL  0x1         0x1       64-bit Address Capable, writable through PEM(0..1)_CFG_WR                 
                                                         However, the application must not change this field.               
 <31:24> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG021 = Twenty-second 32-bits of PCIE type 0 config space (MSI Lower 32 Bits Address Register)
 *
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG021 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <1:0>   NS              RAZ      NS          NS        Reserved                                                             
 <31:2>  LMSI            R/W      0x00000000  0x0       Lower 32-bit Address                                                 
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG022 = Twenty-third 32-bits of PCIE type 0 config space (MSI Upper 32 bits Address Register)
 *
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG022 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  UMSI            R/W      0x00000000  0x0       Upper 32-bit Address                                                 
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG023 = Twenty-fourth 32-bits of PCIE type 0 config space (MSI Data Register) 
 *                 

     ==============================================================
     PCIEEP(0..1)_CFG023 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <15:0>  MSIMD           R/W      0x0000      0x0       MSI Data                                                             
                                                         Pattern assigned by system software, bits [4:0] are Or-ed with 
                                                         MSI_VECTOR to generate 32 MSI Messages per function.
 <31:16> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG028 = Twenty-ninth 32-bits of PCIE type 0 config space
 *                  (PCI Express Capabilities List Register/
 *                   PCI Express Capabilities Register)
 *
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG028 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   PCIEID          RO       0x10        0x10      PCIE Capability ID                                                    
 <15:8>  NCP             RO/WRSL  0x0         0x0       Next Capability Pointer                                               
                                                         Writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <19:16> PCIECV          RO       0x2         0x2       PCI Express Capability Version                                        
 <23:20> DPT             RO       0x0         0x0       Device Port Type                                                      
 <24>    SI              RO/WRSL  0x0         0x0       Slot Implemented                                                      
                                                         This bit is writable through PEM(0..1)_CFG_WR.
                                                         However, it must be 0 for 
                                                         an Endpoint device. Therefore, the application must not write a 
                                                         1 to this bit.
 <29:25> IMN             RO/WRSL  0x0         0x0       Interrupt Message Number                                              
                                                         Updated by hardware, writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <31:30> NS              RAZ      NS          NS        Reserved                                                              
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG029 = Thirtieth 32-bits of PCIE type 0 config space (Device Capabilities Register) 
 *
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG029 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <2:0>   MPSS            RO/WRSL  0x1         0x1       Max_Payload_Size Supported, writable through PEM(0..1)_CFG_WR             
                                                         However, the application must not change this field.               
 <4:3>   PFS             RO/WRSL  0x0         0x0       Phantom Function Supported                                           
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, Phantom 
                                                         Function is not supported. Therefore, the application must not 
                                                         write any value other than 0x0 to this field.
 <5>     ETFS            RO/WRSL  0x0         0x0       Extended Tag Field Supported                                         
                                                         This bit is writable through PEM(0..1)_CFG_WR.
                                                         However, the application
                                                         must not write a 1 to this bit.
 <8:6>   EL0AL           RO/WRSL  0x4         0x4       Endpoint L0s Acceptable Latency, writable through PEM(0..1)_CFG_WR        
                                                         However, the application must not change this field.               
 <11:9>  EL1AL           RO/WRSL  0x3         0x3       Endpoint L1 Acceptable Latency, writable through PEM(0..1)_CFG_WR         
                                                         However, the application must not change this field.
 <12>    NS              RAZ      NS          NS        Undefined                                                            
 <13>    NS              RAZ      NS          NS        Undefined                                                            
 <14>    NS              RAZ      NS          NS        Undefined                                                            
 <15>    RBER            RO/WRSL  0x1         0x1       Role-Based Error Reporting, writable through PEM(0..1)_CFG_WR             
                                                         However, the application must not change this field.
 <17:16> NS              RAZ      NS          NS        Reserved                                                             
 <25:18> CSPLV           RO       0x00        0x0       Captured Slot Power Limit Value                                      
                                                         From Message from RC, upstream port only.
 <27:26> CSPLS           RO       0x0         0x0       Captured Slot Power Limit Scale                                      
                                                         From Message from RC, upstream port only.
 <31:28> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG030 = Thirty-first 32-bits of PCIE type 0 config space 
 *                  (Device Control Register/Device Status Register)
 *
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG030 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     CE_EN           R/W      0x0         0x0       Correctable Error Reporting Enable                                   
 <1>     NFE_EN          R/W      0x0         0x0       Non-Fatal Error Reporting Enable                                     
 <2>     FE_EN           R/W      0x0         0x0       Fatal Error Reporting Enable                                         
 <3>     UR_EN           R/W      0x0         0x0       Unsupported Request Reporting Enable                                 
 <4>     RO_EN           R/W      0x1         0x1       Enable Relaxed Ordering                                              
 <7:5>   MPS             R/W      0x0         0x0       Max Payload Size                                                     
                                                         Legal values:
                                                          0  = 128B
                                                          1  = 256B
                                                         Larger sizes not supported by OCTEON.
                                                        Note: DPI_SLI_PRT#_CFG[MPS] must be set to the same
                                                              value for proper functionality.
 <8>     ETF_EN          R/W      0x0         0x0       Extended Tag Field Enable                                            
                                                         This bit should never be set - OCTEON requests never use
                                                         extended tags.
 <9>     PF_EN           R/W      0x0         0x0       Phantom Function Enable                                              
                                                         This bit should never be set - OCTEON requests never use
                                                         phantom functions.
 <10>    AP_EN           R/W      0x0         0x0       AUX Power PM Enable                                                  
 <11>    NS_EN           R/W      0x1         0x1       Enable No Snoop                                                      
 <14:12> MRRS            R/W      0x2         0x2       Max Read Request Size                                                
                                                         0 = 128B
                                                         1 = 256B
                                                         2 = 512B
                                                         3 = 1024B
                                                         4 = 2048B
                                                         5 = 4096B
                                                        Note: SLI_S2M_PORT#_CTL[MRRS] and DPI_SLI_PRT#_CFG[MRRS] and 
							      also must be set properly.
                                                              SLI_S2M_PORT#_CTL[MRRS] and DPI_SLI_PRT#_CFG[MRRS] must 
                                                              not exceed the desired max read request size.
 <15>    NS              RAZ      NS          NS        Reserved                                                             
 <16>    CE_D            R/W1C    0x0         0x0       Correctable Error Detected                                           
                                                         Errors are logged in this register regardless of whether 
                                                         error reporting is enabled in the Device Control register.
							CE_D is set if we receive any of the errors in PCIE_CFG068
							for example a Replay Timer Timeout.  Also, it can be set if
							we get any of the errors in PCIE_CFG066 that has a severity
							set to Nonfatal and meets the Advisory Nonfatal criteria,
							which most ECRC errors 
							should be.
 <17>    NFE_D           R/W1C    0x0         0x0       Non-Fatal Error detected                                             
                                                         Errors are logged in this register regardless of whether 
                                                         error reporting is enabled in the Device Control register.
							NFE_D is set if we receive any of the errors in PCIE_CFG066
							that has a severity set to Nonfatal and does NOT meet Advisory
							Nonfatal criteria , which
							most poisoned TLP's should be.
 <18>    FE_D            R/W1C    0x0         0x0       Fatal Error Detected                                                 
                                                         Errors are logged in this register regardless of whether 
                                                         error reporting is enabled in the Device Control register.
							FE_D is set if receive any of the errors in PCIE_CFG066 that
							has a severity set to Fatal.  Malformed TLP's generally fit
							into this category.
 <19>    UR_D            R/W1C    0x0         0x0       Unsupported Request Detected                                         
                                                         Errors are logged in this register regardless of whether 
                                                         error reporting is enabled in the Device Control register.
							UR_D occurs when we receive something we don't support.
							Unsupported requests are Nonfatal errors, so UR_D should
							cause NFE_D.  Receiving a  vendor defined message should
							cause an unsupported request.
 <20>    AP_D            RO       0x0         0x0       Aux Power Detected                                                   
                                                         Set to 1 if Aux power detected.
 <21>    TP              RO       0x0         0x0       Transaction Pending                                                  
                                                         Set to 1 when Non-Posted Requests are not yet completed 
                                                         and clear when they are completed.
 <31:22> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG031 = Thirty-second 32-bits of PCIE type 0 config space 
 *                  (Link Capabilities Register)
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG031 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>   MLS             RO/WRSL  0x2         NS        Maximum Link Speed                                                   
                                                         The following values are accepted:
							 0001b: 2.5 GHz supported 
                                                         0010b: 5.0 GHz and 2.5 GHz supported          
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <9:4>   MLW             RO/WRSL  0x4         0x4       Maximum Link Width                                                   
                                                         The default value is the value you specify during hardware 
                                                         configuration (x1, x4, x8, or x16), writable through PEM(0..1)_CFG_WR.
 <11:10> ASLPMS          RO/WRSL  0x3         0x3       Active State Link PM Support                                         
                                                         The default value is the value you specify during hardware 
                                                         configuration, writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <14:12> L0EL            RO/WRSL  0x6         0x6       L0s Exit Latency                                                     
                                                         The default value is the value you specify during hardware 
                                                         configuration, writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <17:15> L1EL            RO/WRSL  0x6         0x6       L1 Exit Latency                                                      
                                                         The default value is the value you specify during hardware 
                                                         configuration, writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <18>    CPM             RO/WRSL  0x0         0x0       Clock Power Management                                               
                                                         The default value is the value you specify during hardware 
                                                         configuration, writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <19>    SDERC           RO       0x0         0x0       Surprise Down Error Reporting Capable                                
                                                         Not supported, hardwired to 0x0.
 <20>    DLLARC          RO       0x0         0x0       Data Link Layer Active Reporting Capable                             
 <21>    LBNC            RO       0x0         0x0       Link Bandwith Notification Capability                                
 <23:22> NS              RAZ      NS          NS        Reserved                                                             
 <31:24> PNUM            RO/WRSL  0x0         0x0       Port Number, writable through PEM(0..1)_CFG_WR                            
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG032 = Thirty-third 32-bits of PCIE type 0 config space 
 *                  (Link Control Register/Link Status Register)
 *
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG032 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <1:0>   ASLPC           R/W      0x0         0x0       Active State Link PM Control                                         
 <2>     NS              RAZ      NS          NS        Reserved                                                             
 <3>     RCB             RO       0x0         0x0       Read Completion Boundary (RCB)                                       
 <4>     LD              RO       0x0         0x0       Link Disable                                                         
                                                         Not applicable for an upstream Port or Endpoint device, 
                                                         hardwired to 0.
 <5>     RL              RO       0x0         0x0       Retrain Link                                                         
                                                         Not applicable for an upstream Port or Endpoint device, 
                                                         hardwired to 0.
 <6>     CCC             R/W      0x0         0x0       Common Clock Configuration                                           
 <7>     ES              R/W      0x0         0x0       Extended Synch                                                       
 <8>     ECPM            R/W      0x0         0x0       Enable Clock Power Management                                        
                                                         Hardwired to 0 if Clock Power Management is disabled in 
                                                         the Link Capabilities register.
 <9>     HAWD            R/W      0x0         0x0       Hardware Autonomous Width Disable                                    
                                                         (Not Supported)
 <15:10> NS              RAZ      NS          NS        Reserved                                                             
 <19:16> LS              RO       0x1         0x1       Link Speed                                                           
                                                         The negotiated Link speed:
                                                         1 == The negotiated Link speed: 2.5 Gbps
                                                         2 == The negotiated Link speed: 5.0 Gbps
 <25:20> NLW             RO       0x0         0x8       Negotiated Link Width                                                
                                                         Set automatically by hardware after Link initialization.
 <26>    NS              RAZ      NS          NS        Undefined                                                            
 <27>    LT              RO       0x0         0x0       Link Training                                                        
                                                         Not applicable for an upstream Port or Endpoint device, 
                                                         hardwired to 0.
 <28>    SCC             RO/WRSL  0x1         0x1       Slot Clock Configuration                                             
                                                         Indicates that the component uses the same physical reference 
                                                         clock that the platform provides on the connector. 
                                                         Writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <29>    DLLA            RO       0x0         0x0       Data Link Layer Active                                               
                                                         Not applicable for an upstream Port or Endpoint device, 
                                                         hardwired to 0.
 <31:30> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG033 = Thirty-fourth 32-bits of PCIE type 0 config space 
 *                  (Slot Capabilities Register)
 *

     ==============================================================
     PCIEEP(0..1)_CFG033 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     ABP             RO/WRSL  0x0         0x0       Attention Button Present, writable through PEM(0..1)_CFG_WR               
                                                         However, the application must not change this field.
 <1>     PCP             RO/WRSL  0x0         0x0       Power Controller Present, writable through PEM(0..1)_CFG_WR               
                                                         However, the application must not change this field.
 <2>     MRLSP           RO/WRSL  0x0         0x0       MRL Sensor Present, writable through PEM(0..1)_CFG_WR                     
                                                         However, the application must not change this field.
 <3>     AIP             RO/WRSL  0x0         0x0       Attention Indicator Present, writable through PEM(0..1)_CFG_WR            
                                                         However, the application must not change this field.
 <4>     PIP             RO/WRSL  0x0         0x0       Power Indicator Present, writable through PEM(0..1)_CFG_WR                
                                                         However, the application must not change this field.
 <5>     HP_S            RO/WRSL  0x0         0x0       Hot-Plug Surprise, writable through PEM(0..1)_CFG_WR                      
                                                         However, the application must not change this field.
 <6>     HP_C            RO/WRSL  0x0         0x0       Hot-Plug Capable, writable through PEM(0..1)_CFG_WR                       
                                                         However, the application must not change this field.
 <14:7>  SP_LV           RO/WRSL  0x0         0x0       Slot Power Limit Value, writable through PEM(0..1)_CFG_WR                 
                                                         However, the application must not change this field.
 <16:15> SP_LS           RO/WRSL  0x0         0x0       Slot Power Limit Scale, writable through PEM(0..1)_CFG_WR                 
                                                         However, the application must not change this field.
 <17>    EMIP            RO/WRSL  0x0         0x0       Electromechanical Interlock Present, writable through PEM(0..1)_CFG_WR    
                                                         However, the application must not change this field.
 <18>    NCCS            RO/WRSL  0x0         0x0       No Command Complete Support, writable through PEM(0..1)_CFG_WR            
                                                         However, the application must not change this field.
 <31:19> PS_NUM          RO/WRSL  0x0000      0x0       Physical Slot Number, writable through PEM(0..1)_CFG_WR                   
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG034 = Thirty-fifth 32-bits of PCIE type 0 config space 
 *                  (Slot Control Register/Slot Status Register)
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG034 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     ABP_EN          R/W      0x0         0x0       Attention Button Pressed Enable                                      
 <1>     PF_EN           R/W      0x0         0x0       Power Fault Detected Enable                                          
 <2>     MRLS_EN         R/W      0x0         0x0       MRL Sensor Changed Enable                                            
 <3>     PD_EN           R/W      0x0         0x0       Presence Detect Changed Enable                                       
 <4>     CCINT_EN        R/W      0x0         0x0       Command Completed Interrupt Enable                                   
 <5>     HPINT_EN        R/W      0x0         0x0       Hot-Plug Interrupt Enable                                            
 <7:6>   AIC             R/W      0x0         0x0       Attention Indicator Control                                          
 <9:8>   PIC             R/W      0x0         0x0       Power Indicator Control                                              
 <10>    PCC             R/W      0x0         0x0       Power Controller Control                                             
 <11>    EMIC            R/W      0x0         0x0       Electromechanical Interlock Control                                  
 <12>    DLLS_EN         RO       0x0         0x0       Data Link Layer State Changed Enable                                 
                                                         Not applicable for an upstream Port or Endpoint device, 
                                                         hardwired to 0. 
 <15:13> NS              RAZ      NS          NS        Reserved                                                             
 <16>    ABP_D           R/W1C    0x0         0x0       Attention Button Pressed                                             
 <17>    PF_D            R/W1C    0x0         0x0       Power Fault Detected                                                 
 <18>    MRLS_C          R/W1C    0x0         0x0       MRL Sensor Changed                                                   
 <19>    PD_C            R/W1C    0x0         0x0       Presence Detect Changed                                              
 <20>    CCINT_D         R/W1C    0x0         0x0       Command Completed                                                    
 <21>    MRLSS           RO       0x0         0x0       MRL Sensor State                                                     
 <22>    PDS             RO       0x0         0x0       Presence Detect State                                                
 <23>    EMIS            RO       0x0         0x0       Electromechanical Interlock Status                                   
 <24>    DLLS_C          RO       0x0         0x0       Data Link Layer State Changed                                        
                                                         Not applicable for an upstream Port or Endpoint device, 
                                                         hardwired to 0. 
 <31:25> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG037 = Thirty-eighth 32-bits of PCIE type 0 config space 
 *                  (Device Capabilities 2 Register)
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG037 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>   CTRS            RO       0x0         0x0       Completion Timeout Ranges Supported                                  
                                                         Value of 0 indicates that Completion Timeout Programming
                                                         is not supported
							 Completion timeout is 16.7ms.
 <4>     CTDS            RO       0x1         0x1       Completion Timeout Disable Supported                                 
 <31:5>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG038 = Thirty-ninth 32-bits of PCIE type 0 config space 
 *                  (Device Control 2 Register/Device Status 2 Register)
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG038 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>   CTV             RO       0x0         0x0       Completion Timeout Value                                             
                                                         Completion Timeout Programming is not supported
							 Completion timeout is 16.7ms.
 <4>     CTD             R/W      0x0         0x0       Completion Timeout Disable                                           
 <31:5>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  PCIE_CFG039 = Fourtieth 32-bits of PCIE type 0 config space 
 *                  (Link Capabilities 2 Register)
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG039 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG040 = Fourty-first 32-bits of PCIE type 0 config space 
 *                  (Link Control 2 Register/Link Status 2 Register)
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG040 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>   TLS             R/W      NS          NS        Target Link Speed                                                    
                                                         For Downstream ports, this field sets an upper limit on link  
                                                         operational speed by restricting the values advertised by 
                                                         the upstream component in its training sequences:
                                                           0001: 2.5Gb/s Target Link Speed
                                                           0010: 5Gb/s Target Link Speed
                                                         All other encodings are reserved.
                                                         If a value is written to this field that does not correspond to 
                                                         a speed included in the Supported Link Speeds field, the 
                                                         result is undefined.
                                                         For both Upstream and Downstream ports, this field is 
                                                         used to set the target compliance mode speed when 
                                                         software is using the Enter Compliance bit to force a link 
                                                         into compliance mode.
                                                         Out of reset this will have a value of 1 or 2 which is
                                                         selected by qlmCfgx[1].
 <4>     EC              R/W      0x0         0x0       Enter Compliance                                                     
                                                         Software is permitted to force a link to enter Compliance 
                                                         mode at the speed indicated in the Target Link Speed 
                                                         field by setting this bit to 1b in both components on a link 
                                                         and then initiating a hot reset on the link.
 <5>     HASD            RO       0x0         0x0       Hardware Autonomous Speed Disable                                    
                                                         When asserted, the 
                                                         application must disable hardware from changing the Link 
                                                         speed for device-specific reasons other than attempting to 
                                                         correct unreliable Link operation by reducing Link speed. 
                                                         Initial transition to the highest supported common link 
                                                         speed is not blocked by this signal.
 <6>     SDE             RO       0x0         0x0       Selectable De-emphasis                                               
                                                         Not applicable for an upstream Port or Endpoint device. 
                                                         Hardwired to 0.
 <9:7>   TM              R/W      0x000       0x000     Transmit Margin                                                      
                                                         This field controls the value of the non-de-emphasized 
                                                         voltage level at the Transmitter pins: 
                                                          000: 800-1200 mV for full swing 400-600 mV for half-swing
                                                          001-010: values must be monotonic with a non-zero slope
                                                          011: 200-400 mV for full-swing and 100-200 mV for halfswing
                                                          100-111: reserved
                                                         This field is reset to 000b on entry to the LTSSM Polling. 
                                                         Compliance substate.
                                                         When operating in 5.0 GT/s mode with full swing, the 
                                                         de-emphasis ratio must be maintained within +/- 1 dB 
                                                         from the specification-defined operational value  
                                                         either -3.5 or -6 dB). 
 <10>    EMC             R/W      0x0         0x0       Enter Modified Compliance                                            
                                                         When this bit is set to 1b, the device transmits a modified 
                                                         compliance pattern if the LTSSM enters Polling. 
                                                         Compliance state.
 <11>    CSOS            R/W      0x0         0x0       Compliance SOS                                                       
                                                         When set to 1b, the LTSSM is required to send SKP 
                                                         Ordered Sets periodically in between the (modified) 
                                                         compliance patterns.
                                                         Note: When the Link is operating at 2.5 GT/s, the setting 
                                                         of this bit has no effect.
 <12>    CDE             R/W      0x0         0x0       Compliance De-emphasis                                               
                                                         This bit sets the de-emphasis level in Polling. Compliance 
                                                         state if the entry occurred due to the Tx Compliance 
                                                         Receive bit being 1b. Encodings:
                                                          1b: -3.5 dB
                                                          0b: -6 dB
                                                         Note: When the Link is operating at 2.5 GT/s, the setting 
                                                         of this bit has no effect. 
 <15:13> NS              RAZ      NS          NS        Reserved                                                             
 <16>    CDL             RO       0x0         0x0       Current De-emphasis Level                                            
                                                         When the Link is operating at 5 GT/s speed, this bit 
                                                         reflects the level of de-emphasis. Encodings:
                                                          1b: -3.5 dB
                                                          0b: -6 dB
                                                         Note: The value in this bit is undefined when the Link is 
                                                         operating at 2.5 GT/s speed
 <31:17> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG041 = Fourty-second 32-bits of PCIE type 0 config space 
 *                  (Slot Capabilities 2 Register)
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG041 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG042 = Fourty-third 32-bits of PCIE type 0 config space 
 *                  (Slot Control 2 Register/Slot Status 2 Register)
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG042 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG064 = Sixty-fifth 32-bits of PCIE type 0 config space 
 *                  (PCI Express Enhanced Capability Header)
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG064 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <15:0>  PCIEEC          RO       0x1         0x0       PCIE Express Extended Capability                                     
 <19:16> CV              RO       0x1         0x0       Capability Version                                                   
 <31:20> NCO             RO       0x0         0x0       Next Capability Offset                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG065 = Sixty-sixth 32-bits of PCIE type 0 config space 
 *                  (Uncorrectable Error Status Register)
 *

     ==============================================================
     PCIEEP(0..1)_CFG065 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     NS              RAZ      NS          NS        Undefined                                                            
                                                         (Was Training Error Status for PCI Express 1.0a)
 <3:1>   NS              RAZ      NS          NS        Reserved                                                             
 <4>     DLPES           R/W1C    0x0         0x0       Data Link Protocol Error Status                                      
 <5>     SDES            RO       0x0         0x0       Surprise Down Error Status (not supported)                           
 <11:6>  NS              RAZ      NS          NS        Reserved                                                             
 <12>    PTLPS           R/W1C    0x0         0x0       Poisoned TLP Status                                                  
 <13>    FCPES           R/W1C    0x0         0x0       Flow Control Protocol Error Status                                   
 <14>    CTS             R/W1C    0x0         0x0       Completion Timeout Status                                            
 <15>    CAS             R/W1C    0x0         0x0       Completer Abort Status                                               
 <16>    UCS             R/W1C    0x0         0x0       Unexpected Completion Status                                         
 <17>    ROS             R/W1C    0x0         0x0       Receiver Overflow Status                                             
 <18>    MTLPS           R/W1C    0x0         0x0       Malformed TLP Status                                                 
 <19>    ECRCES          R/W1C    0x0         0x0       ECRC Error Status                                                    
 <20>    URES            R/W1C    0x0         0x0       Unsupported Request Error Status                                     
 <31:21> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG066 = Sixty-seventh 32-bits of PCIE type 0 config space 
 *                  (Uncorrectable Error Mask Register) 
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG066 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     NS              RAZ      NS          NS        Undefined                                                            
                                                         (Was Training Error Mask for PCI Express 1.0a)
 <3:1>   NS              RAZ      NS          NS        Reserved                                                             
 <4>     DLPEM           R/W      0x0         0x0       Data Link Protocol Error Mask                                        
 <5>     SDEM            RO       0x0         0x0       Surprise Down Error Mask (not supported)                             
 <11:6>  NS              RAZ      NS          NS        Reserved                                                             
 <12>    PTLPM           R/W      0x0         0x0       Poisoned TLP Mask                                                    
 <13>    FCPEM           R/W      0x0         0x0       Flow Control Protocol Error Mask                                     
 <14>    CTM             R/W      0x0         0x0       Completion Timeout Mask                                              
 <15>    CAM             R/W      0x0         0x0       Completer Abort Mask                                                 
 <16>    UCM             R/W      0x0         0x0       Unexpected Completion Mask                                           
 <17>    ROM             R/W      0x0         0x0       Receiver Overflow Mask                                               
 <18>    MTLPM           R/W      0x0         0x0       Malformed TLP Mask                                                   
 <19>    ECRCEM          R/W      0x0         0x0       ECRC Error Mask                                                      
 <20>    UREM            R/W      0x0         0x0       Unsupported Request Error Mask                                       
 <31:21> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG067 = Sixty-eighth 32-bits of PCIE type 0 config space 
 *                  (Uncorrectable Error Severity Register)
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG067 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     NS              RAZ      NS          NS        Undefined                                                            
                                                         (Was Training Error Severity for PCI Express 1.0a)
 <3:1>   NS              RAZ      NS          NS        Reserved                                                             
 <4>     DLPES           R/W      0x1         0x1       Data Link Protocol Error Severity                                    
 <5>     SDES            RO       0x1         0x1       Surprise Down Error Severity (not supported)                         
 <11:6>  NS              RAZ      NS          NS        Reserved                                                             
 <12>    PTLPS           R/W      0x0         0x0       Poisoned TLP Severity                                                
 <13>    FCPES           R/W      0x1         0x1       Flow Control Protocol Error Severity                                 
 <14>    CTS             R/W      0x0         0x0       Completion Timeout Severity                                          
 <15>    CAS             R/W      0x0         0x0       Completer Abort Severity                                             
 <16>    UCS             R/W      0x0         0x0       Unexpected Completion Severity                                       
 <17>    ROS             R/W      0x1         0x1       Receiver Overflow Severity                                           
 <18>    MTLPS           R/W      0x1         0x1       Malformed TLP Severity                                               
 <19>    ECRCES          R/W      0x0         0x0       ECRC Error Severity                                                  
 <20>    URES            R/W      0x0         0x0       Unsupported Request Error Severity                                   
 <31:21> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG068 = Sixty-ninth 32-bits of PCIE type 0 config space 
 *                  (Correctable Error Status Register)
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG068 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     RES             R/W1C    0x0         0x0       Receiver Error Status                                                
 <5:1>   NS              RAZ      NS          NS        Reserved                                                             
 <6>     BTLPS           R/W1C    0x0         0x0       Bad TLP Status                                                       
 <7>     BDLLPS          R/W1C    0x0         0x0       Bad DLLP Status                                                      
 <8>     RNRS            R/W1C    0x0         0x0       REPLAY_NUM Rollover Status                                           
 <11:9>  NS              RAZ      NS          NS        Reserved                                                             
 <12>    RTTS            R/W1C    0x0         0x0       Reply Timer Timeout Status                                           
 <13>    ANFES           R/W1C    0x0         0x0       Advisory Non-Fatal Error Status                                      
 <31:14> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG069 = Seventieth 32-bits of PCIE type 0 config space 
 *                  (Correctable Error Mask Register) 
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG069 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     REM             R/W      0x0         0x0       Receiver Error Mask                                                  
 <5:1>   NS              RAZ      NS          NS        Reserved                                                             
 <6>     BTLPM           R/W      0x0         0x0       Bad TLP Mask                                                         
 <7>     BDLLPM          R/W      0x0         0x0       Bad DLLP Mask                                                        
 <8>     RNRM            R/W      0x0         0x0       REPLAY_NUM Rollover Mask                                             
 <11:9>  NS              RAZ      NS          NS        Reserved                                                             
 <12>    RTTM            R/W      0x0         0x0       Reply Timer Timeout Mask                                             
 <13>    ANFEM           R/W      0x1         0x1       Advisory Non-Fatal Error Mask                                        
 <31:14> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG070 = Seventy-first 32-bits of PCIE type 0 config space 
 *                  (Advanced Error Capabilities and Control Register) 
 *

     ==============================================================
     PCIEEP(0..1)_CFG070 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <4:0>   FEP             RO       0x00        0x0       First Error Pointer                                                  
 <5>     GC              RO       0x1         0x1       ECRC Generation Capability                                           
 <6>     GE              R/W      0x0         0x0       ECRC Generation Enable                                               
 <7>     CC              RO       0x1         0x1       ECRC Check Capable                                                   
 <8>     CE              R/W      0x0         0x0       ECRC Check Enable                                                    
 <31:9>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG071 = Seventy-second 32-bits of PCIE type 0 config space 
 *                  (Header Log Register 1) 
 *

     ==============================================================
     PCIEEP(0..1)_CFG071 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DWORD1          RO       0x0         0x0       Header Log Register (first DWORD)                                    
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  PCIE_CFG072 = Seventy-third 32-bits of PCIE type 0 config space 
 *                  (Header Log Register 2) 
 *

     ==============================================================
     PCIEEP(0..1)_CFG072 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DWORD2          RO       0x0         0x0       Header Log Register (second DWORD)                                   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG073 = Seventy-fourth 32-bits of PCIE type 0 config space 
 *                  (Header Log Register 3) 
 *

     ==============================================================
     PCIEEP(0..1)_CFG073 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DWORD3          RO       0x0         0x0       Header Log Register (third DWORD)                                    
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG074 = Seventy-fifth 32-bits of PCIE type 0 config space 
 *                  (Header Log Register 4) 
 *

     ==============================================================
     PCIEEP(0..1)_CFG074 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DWORD4          RO       0x0         0x0       Header Log Register (fourth DWORD)                                   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG448 = Four hundred forty-ninth 32-bits of PCIE type 0 config space
 *                  (Ack Latency Timer and Replay Timer Register) 
 *

     ==============================================================
     PCIEEP(0..1)_CFG448 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <15:0>  RTLTL           R/W      0x102F      0x102F    Round Trip Latency Time Limit                                        
                                                         The Ack/Nak latency timer expires when it reaches this limit.
                                                         The default is then updated based on the Negotiated Link Width 
                                                         and Max_Payload_Size.
 <31:16> RTL             R/W      0x308D      0x308D    Replay Time Limit                                                    
                                                         The replay timer expires when it reaches this limit. The PCI 
                                                         Express bus initiates a replay upon reception of a Nak or when 
                                                         the replay timer expires.
                                                         The default is then updated based on the Negotiated Link Width 
                                                         and Max_Payload_Size.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG449 = Four hundred fiftieth 32-bits of PCIE type 0 config space
 *                  (Other Message Register) 
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG449 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  OMR             R/W      0xFFFFFFFF  NS        Other Message Register                                               
                                                         This register can be used for either of the following purposes:
                                                         o To send a specific PCI Express Message, the application 
                                                           writes the payload of the Message into this register, then 
                                                           sets bit 0 of the Port Link Control Register to send the 
                                                           Message.
                                                         o To store a corruption pattern for corrupting the LCRC on all 
                                                           TLPs, the application places a 32-bit corruption pattern into 
                                                           this register and enables this function by setting bit 25 of 
                                                           the Port Link Control Register. When enabled, the transmit 
                                                           LCRC result is XOR'd with this pattern before inserting 
                                                           it into the packet.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG450 = Four hundred fifty-first 32-bits of PCIE type 0 config space
 *                  (Port Force Link Register)
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG450 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   LINK_NUM        RO       0x0         0x0       Link Number                                                          
                                                         Not used for Endpoint
 <14:8>  NS              RAZ      NS          NS        Reserved                                                             
 <15>    FORCE_LINK      R/W      0x0         0x0       Force Link                                                           
                                                         Forces the Link to the state specified by the Link State field. 
                                                         The Force Link pulse will trigger Link re-negotiation.
                                                         * As the The Force Link is a pulse, writing a 1 to it does 
                                                           trigger the forced link state event, even thought reading it 
                                                           always returns a 0. 
 <21:16> LINK_STATE      R/W      0x00        0x0       Link State                                                           
                                                         The Link state that the PCI Express Bus will be forced to 
                                                         when bit 15 (Force Link) is set. 
                                                         State encoding:
                                                         o DETECT_QUIET              00h
                                                         o DETECT_ACT                01h
                                                         o POLL_ACTIVE               02h
                                                         o POLL_COMPLIANCE           03h
                                                         o POLL_CONFIG               04h
                                                         o PRE_DETECT_QUIET          05h
                                                         o DETECT_WAIT               06h
                                                         o CFG_LINKWD_START          07h
                                                         o CFG_LINKWD_ACEPT          08h
                                                         o CFG_LANENUM_WAIT          09h
                                                         o CFG_LANENUM_ACEPT         0Ah
                                                         o CFG_COMPLETE              0Bh
                                                         o CFG_IDLE                  0Ch
                                                         o RCVRY_LOCK                0Dh
                                                         o RCVRY_SPEED               0Eh
                                                         o RCVRY_RCVRCFG             0Fh
                                                         o RCVRY_IDLE                10h
                                                         o L0                        11h
                                                         o L0S                       12h
                                                         o L123_SEND_EIDLE           13h
                                                         o L1_IDLE                   14h
                                                         o L2_IDLE                   15h
                                                         o L2_WAKE                   16h
                                                         o DISABLED_ENTRY            17h
                                                         o DISABLED_IDLE             18h
                                                         o DISABLED                  19h
                                                         o LPBK_ENTRY                1Ah
                                                         o LPBK_ACTIVE               1Bh
                                                         o LPBK_EXIT                 1Ch
                                                         o LPBK_EXIT_TIMEOUT         1Dh
                                                         o HOT_RESET_ENTRY           1Eh
                                                         o HOT_RESET                 1Fh
 <23:22> NS              RAZ      NS          NS        Reserved                                                             
 <31:24> LPEC            R/W      0x7         0x7       Low Power Entrance Count                                             
                                                         The Power Management state will wait for this many clock cycles 
                                                         for the associated completion of a CfgWr to PCIE_CFG017 register
							 Power State (PS) field register to go low-power. This register 
                                                         is intended for applications that do not let the PCI Express 
                                                         bus handle a completion for configuration request to the 
                                                         Power Management Control and Status (PCIE_CFG017) register.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG451 = Four hundred fifty-second 32-bits of PCIE type 0 config space
 *                  (Ack Frequency Register)
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG451 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   ACK_FREQ        R/W      0x0         0x0       Ack Frequency                                                        
                                                         The number of pending Ack's specified here (up to 255) before 
                                                         sending an Ack.
 <15:8>  N_FTS           R/W      0x80        0x80      N_FTS                                                                
                                                         The number of Fast Training Sequence ordered sets to be 
                                                         transmitted when transitioning from L0s to L0. The maximum 
                                                         number of FTS ordered-sets that a component can request is 255.
                                                         Note: A value of zero is not supported; a value of 
                                                               zero can cause the LTSSM to go into the recovery state 
                                                               when exiting from L0s.
 <23:16> N_FTS_CC        R/W      0x80        0x80      N_FTS when common clock is used.                                     
                                                         The number of Fast Training Sequence ordered sets to be 
                                                         transmitted when transitioning from L0s to L0. The maximum 
                                                         number of FTS ordered-sets that a component can request is 255.
                                                          Note: A value of zero is not supported; a value of 
                                                                zero can cause the LTSSM to go into the recovery state 
                                                                when exiting from L0s.
 <26:24> L0EL            R/W      0x3         0x3       L0s Entrance Latency                                                 
                                                         Values correspond to:
                                                         o 000: 1 ms
                                                         o 001: 2 ms
                                                         o 010: 3 ms
                                                         o 011: 4 ms
                                                         o 100: 5 ms
                                                         o 101: 6 ms
                                                         o 110 or 111: 7 ms
 <29:27> L1EL            R/W      0x3         0x3       L1 Entrance Latency                                                  
                                                         Values correspond to:
                                                         o 000: 1 ms
                                                         o 001: 2 ms
                                                         o 010: 4 ms
                                                         o 011: 8 ms
                                                         o 100: 16 ms
                                                         o 101: 32 ms
                                                         o 110 or 111: 64 ms
 <31:30> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG452 = Four hundred fifty-third 32-bits of PCIE type 0 config space
 *                  (Port Link Control Register)
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG452 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     OMR             R/W      0x0         0x0       Other Message Request                                                
                                                         When software writes a `1' to this bit, the PCI Express bus
                                                         transmits the Message contained in the Other Message register.
 <1>     SD              R/W      0x0         0x0       Scramble Disable                                                     
                                                         Turns off data scrambling.
 <2>     LE              R/W      0x0         0x0       Loopback Enable                                                      
                                                         Initiate loopback mode as a master. On a 0->1 transition,
                                                         the PCIe core sends TS ordered sets with the loopback bit set
                                                         to cause the link partner to enter into loopback mode as a
                                                         slave. Normal transmission is not possible when LE=1. To exit
                                                         loopback mode, take the link through a reset sequence.
 <3>     RA              R/W      0x0         0x0       Reset Assert                                                         
                                                         Triggers a recovery and forces the LTSSM to the Hot Reset 
                                                         state (downstream port only).
 <4>     NS              RAZ      NS          NS        Reserved                                                             
 <5>     DLLLE           R/W      0x1         0x1       DLL Link Enable                                                      
                                                         Enables Link initialization. If DLL Link Enable = 0, the PCI 
                                                         Express bus does not transmit InitFC DLLPs and does not 
                                                         establish a Link.
 <6>     NS              RAZ      NS          NS        Reserved                                                             
 <7>     FLM             R/W      0x0         0x0       Fast Link Mode                                                       
                                                         Sets all internal timers to fast mode for simulation purposes.
                                                         If during an eeprom load, the first word loaded is 0xffffffff,
                                                         then the EEPROM load will be terminated and this bit will be set.
 <11:8>  NS              RO       0x1         0x1       Reserved                                                             
 <15:12> NS              RAZ      NS          NS        Reserved                                                             
 <21:16> LME             R/W      0x7         0x7       Link Mode Enable                                                     
                                                         o 000001: x1
                                                         o 000011: x2
                                                         o 000111: x4
                                                         o 001111: x8  (not supported)
                                                         o 011111: x16 (not supported)
                                                         o 111111: x32 (not supported)
                                                         This field indicates the MAXIMUM number of lanes supported
                                                         by the PCIe port. The value can be set less than 0x7
                                                         to limit the number of lanes the PCIe will attempt to use.
                                                         If the value of 0x7 set by the HW is not desired, 
							 this field can be programmed to a smaller value (i.e. EEPROM)
							 See also MLW.
                                                         (Note: The value of this field does NOT indicate the number
                                                          of lanes in use by the PCIe. LME sets the max number of lanes
                                                          in the PCIe core that COULD be used. As per the PCIe specs,
							  the PCIe core can negotiate a smaller link width, so all
							  of x4, x2, and x1 are supported when LME=0x7,
							  for example.)
 <24:22> NS             RAZ      NS          NS        Reserved                                                              
 <25>    ECCRC          R/W      0x0         0x0       Enable Corrupted CRC                                                  
                                                        Causes corrupt LCRC for TLPs when set, 
                                                        using the pattern contained in the Other Message register.
                                                        This is a test feature, not to be used in normal operation.
 <31:26> NS             RAZ      NS          NS        Reserved                                                              
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG453 = Four hundred fifty-fourth 32-bits of PCIE type 0 config space
 *                  (Lane Skew Register) 
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG453 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <23:0>  ILST            R/W      0x000000    0x0       Insert Lane Skew for Transmit                                        
                                                         Causes skew between lanes for test purposes. There are three 
                                                         bits per Lane. The value is in units of one symbol time. For 
                                                         example, the value 010b for a Lane forces a skew of two symbol 
                                                         times for that Lane. The maximum skew value for any Lane is 5 
                                                         symbol times.
 <24>    FCD             R/W      0x0         0x0       Flow Control Disable                                                 
                                                         Prevents the PCI Express bus from sending FC DLLPs.
 <25>    ACK_NAK         R/W      0x0         0x0       Ack/Nak Disable                                                      
                                                         Prevents the PCI Express bus from sending Ack and Nak DLLPs.
 <30:26> NS              RAZ      NS          NS        Reserved                                                             
 <31>    DLLD            R/W      0x0         0x0       Disable Lane-to-Lane Deskew                                          
                                                         Disables the internal Lane-to-Lane deskew logic.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG454 = Four hundred fifty-fifth 32-bits of PCIE type 0 config space
 *                  (Symbol Number Register) 
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG454 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>   NTSS            R/W      0xA         0xA       Number of TS Symbols                                                 
                                                         Sets the number of TS identifier symbols that are sent in TS1 
                                                         and TS2 ordered sets.
 <7:4>   NS              RO       NS          NS        Reserved                                                             
 <10:8>  NSKPS           R/W      0x3         0x3       Number of SKP Symbols                                                
 <13:11> NS              RAZ      NS          NS        Reserved                                                             
 <18:14> TMRT            R/W      0x8         0x8       Timer Modifier for Replay Timer                                      
                                                         Increases the timer value for the replay timer, in increments 
                                                         of 64 clock cycles.
 <23:19> TMANLT          R/W      0x0         0x0       Timer Modifier for Ack/Nak Latency Timer                             
                                                         Increases the timer value for the Ack/Nak latency timer, in 
                                                         increments of 64 clock cycles.
 <28:24> TMFCWT          R/W      0x0         0x0       Timer Modifier for Flow Control Watchdog Timer                       
                                                         Increases the timer value for the Flow Control watchdog timer, 
                                                         in increments of 16 clock cycles.
 <31:29> NS              RO       NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG455 = Four hundred fifty-sixth 32-bits of PCIE type 0 config space
 *                  (Symbol Timer Register/Filter Mask Register 1)
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG455 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <10:0>  SKPIV           R/W      0x500       0x500     SKP Interval Value                                                   
 <14:11> NS              RAZ      NS          NS        Reserved                                                             
 <15>    DFCWT           R/W      0x0         0x0       Disable FC Watchdog Timer                                            
 <16>    M_FUN           R/W      0x0         0x0       Mask function                                                        
 <17>    M_POIS_FILT     R/W      0x1         0x1       Mask poisoned TLP filtering                                          
 <18>    M_BAR_MATCH     R/W      0x0         0x0       Mask BAR match filtering                                             
 <19>    M_CFG1_FILT     R/W      0x0         0x0       Mask Type 1 Configuration Request filtering                          
 <20>    M_LK_FILT       R/W      0x0         0x0       Mask Locked Request filtering                                        
 <21>    M_CPL_TAG_ERR   R/W      0x0         0x0       Mask Tag error rules for received Completions                        
 <22>    M_CPL_RID_ERR   R/W      0x0         0x0       Mask Requester ID mismatch error for received Completions            
 <23>    M_CPL_FUN_ERR   R/W      0x0         0x0       Mask function mismatch error for received Completions                
 <24>    M_CPL_TC_ERR    R/W      0x0         0x0       Mask Traffic Class mismatch error for received Completions           
 <25>    M_CPL_ATTR_ERR  R/W      0x0         0x0       Mask Attributes mismatch error for received Completions              
 <26>    M_CPL_LEN_ERR   R/W      0x0         0x0       Mask Length mismatch error for received Completions                  
 <27>    M_ECRC_FILT     R/W      0x0         0x0       Mask ECRC error filtering                                            
 <28>    M_CPL_ECRC_FILT R/W      0x0         0x0       Mask ECRC error filtering for Completions                            
 <29>    MSG_CTRL        R/W      0x0         0x0       Message Control                                                      
                                                         The application must not change this field.
 <30>    M_IO_FILT       R/W      0x0         0x0       Mask filtering of received I/O Requests (RC mode only)               
 <31>    M_CFG0_FILT     R/W      0x0         0x0       Mask filtering of received Configuration Requests (RC mode only)     
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG456 = Four hundred fifty-seventh 32-bits of PCIE type 0 config space
 *                  (Filter Mask Register 2)
 *
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG456 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:2>  NS              RAZ      NS          NS        Reserved                                                             
 <1>     M_VEND1_DRP     R/W      0x0         0x0       Mask Vendor MSG Type 1 dropped silently                              
 <0>     M_VEND0_DRP     R/W      0x0         0x0       Mask Vendor MSG Type 0 dropped with UR error reporting.              
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG458 = Four hundred fifty-ninth 32-bits of PCIE type 0 config space
 *                  (Debug Register 0) 
 *
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG458 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DBG_INFO_L32    RO       0x0         0x0       Debug Info Lower 32 Bits                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG459 = Four hundred sixtieth 32-bits of PCIE type 0 config space
 *                  (Debug Register 1) 
 *
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG459 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DBG_INFO_U32     RO       0x0         0x0      Debug Info Upper 32 Bits                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG460 = Four hundred sixty-first 32-bits of PCIE type 0 config space
 *                  (Transmit Posted FC Credit Status)
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG460 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  TPDFCC          RO       0x0         0x0       Transmit Posted Data FC Credits                                      
                                                         The Posted Data credits advertised by the receiver at the other 
                                                         end of the Link, updated with each UpdateFC DLLP.
 <19:12> TPHFCC          RO       0x0         0x0       Transmit Posted Header FC Credits                                    
                                                         The Posted Header credits advertised by the receiver at the 
                                                         other end of the Link, updated with each UpdateFC DLLP.
 <31:20> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  PCIE_CFG461 = Four hundred sixty-second 32-bits of PCIE type 0 config space
 *                  (Transmit Non-Posted FC Credit Status) 
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG461 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  TCDFCC          RO       0x0         0x0       Transmit Non-Posted Data FC Credits                                  
                                                         The Non-Posted Data credits advertised by the receiver at the 
                                                         other end of the Link, updated with each UpdateFC DLLP.
 <19:12> TCHFCC          RO       0x0         0x0       Transmit Non-Posted Header FC Credits                                
                                                         The Non-Posted Header credits advertised by the receiver at the 
                                                         other end of the Link, updated with each UpdateFC DLLP.
 <31:20> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG462 = Four hundred sixty-third 32-bits of PCIE type 0 config space
 *                  (Transmit Completion FC Credit Status )
 *
 *  

     ==============================================================
     PCIEEP(0..1)_CFG462 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  TCDFCC          RO       0x0         0x0       Transmit Completion Data FC Credits                                  
                                                         The Completion Data credits advertised by the receiver at the 
                                                         other end of the Link, updated with each UpdateFC DLLP.
 <19:12> TCHFCC          RO       0x0         0x0       Transmit Completion Header FC Credits                                
                                                         The Completion Header credits advertised by the receiver at the 
                                                         other end of the Link, updated with each UpdateFC DLLP.
 <31:20> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG463 = Four hundred sixty-fourth 32-bits of PCIE type 0 config space
 *                  (Queue Status) 
 *
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG463 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     RTLPFCCNR       RO       0x0         0x0       Received TLP FC Credits Not Returned                                 
                                                         Indicates that the PCI Express bus has sent a TLP but has not 
                                                         yet received an UpdateFC DLLP indicating that the credits for 
							 that TLP have been restored by the receiver at the other end of 
                                                         the Link.
 <1>     TRBNE           RO       0x0         0x0       Transmit Retry Buffer Not Empty                                      
                                                         Indicates that there is data in the transmit retry buffer.
 <2>     RQNE            RO       0x0         0x0       Received Queue Not Empty                                             
                                                         Indicates there is data in one or more of the receive buffers.
 <31:3>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG464 = Four hundred sixty-fifth 32-bits of PCIE type 0 config space
 *                  (VC Transmit Arbitration Register 1)
 *
 *

     ==============================================================
     PCIEEP(0..1)_CFG464 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   WRR_VC0         RO       0xF         0xF       WRR Weight for VC0                                                   
 <15:8>  WRR_VC1         RO       0x0         0x0       WRR Weight for VC1                                                   
 <23:16> WRR_VC2         RO       0x0         0x0       WRR Weight for VC2                                                   
 <31:24> WRR_VC3         RO       0x0         0x0       WRR Weight for VC3                                                   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG465 = Four hundred sixty-sixth 32-bits of PCIE type 0 config space
 *                  (VC Transmit Arbitration Register 2)
 *
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG465 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   WRR_VC4         RO       0x0         0x0       WRR Weight for VC4                                                   
 <15:8>  WRR_VC5         RO       0x0         0x0       WRR Weight for VC5                                                   
 <23:16> WRR_VC6         RO       0x0         0x0       WRR Weight for VC6                                                   
 <31:24> WRR_VC7         RO       0x0         0x0       WRR Weight for VC7                                                   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG466 = Four hundred sixty-seventh 32-bits of PCIE type 0 config space
 *                  (VC0 Posted Receive Queue Control)
 *
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG466 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  DATA_CREDITS    RO/WRSL  0x080       0x080     VC0 Posted Data Credits                                              
                                                         The number of initial Posted data credits for VC0, used for all 
                                                         receive queue buffer configurations.
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.

 <19:12> HEADER_CREDITS  RO/WRSL  0x60        0x60      VC0 Posted Header Credits                                            
                                                         The number of initial Posted header credits for VC0, used for 
                                                         all receive queue buffer configurations.
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 
 <20>    NS              RAZ      NS          NS        Reserved                                                             
 <23:21> QUEUE_MODE      RO/WRSL  0x2         0x2      VC0 Posted TLP Queue Mode                                             
                                                         The operating mode of the Posted receive queue for VC0, used 
                                                         only in the segmented-buffer configuration, writable through
                                                         PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
                                                         Only one bit can be set at a time:
                                                         o Bit 23: Bypass
                                                         o Bit 22: Cut-through
                                                         o Bit 21: Store-and-forward
 <29:24> NS              RAZ      NS          NS        Reserved                                                             
 <30>    TYPE_ORDERING   RO/WRSL  0x1         0x1       TLP Type Ordering for VC0                                            
                                                         Determines the TLP type ordering rule for VC0 receive queues, 
                                                         used only in the segmented-buffer configuration, writable 
                                                         through PEM(0..1)_CFG_WR:
                                                         o 1: Ordering of received TLPs follows the rules in 
                                                              PCI Express Base Specification
                                                         o 0: Strict ordering for received TLPs: Posted, then 
                                                              Completion, then Non-Posted
                                                         However, the application must not change this field.
 <31>    RX_QUEUE_ORDER  RO/WRSL  0x0         0x0       VC Ordering for Receive Queues                                       
                                                         Determines the VC ordering rule for the receive queues, used 
                                                         only in the segmented-buffer configuration, 
                                                         writable through PEM(0..1)_CFG_WR:
                                                         o 1: Strict ordering, higher numbered VCs have higher priority
                                                         o 0: Round robin
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG467 = Four hundred sixty-eighth 32-bits of PCIE type 0 config space
 *                  (VC0 Non-Posted Receive Queue Control)
 *
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG467 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  DATA_CREDITS    RO/WRSL  0x020       0x20       VC0 Non-Posted Data Credits                                          
                                                         The number of initial Non-Posted data credits for VC0, used for 
                                                         all receive queue buffer configurations.
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <19:12> HEADER_CREDITS  RO/WRSL  0x20        0x20      VC0 Non-Posted Header Credits                                        
                                                         The number of initial Non-Posted header credits for VC0, used 
                                                         for all receive queue buffer configurations.
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <20>    NS              RAZ      NS          NS        Reserved                                                             
 <23:21> QUEUE_MODE      RO/WRSL  0x2         0x2       VC0 Non-Posted TLP Queue Mode                                        
                                                         The operating mode of the Non-Posted receive queue for VC0, 
                                                         used only in the segmented-buffer configuration, writable 
                                                         through PEM(0..1)_CFG_WR.
                                                         Only one bit can be set at a time:
                                                         o Bit 23: Bypass
                                                         o Bit 22: Cut-through
                                                         o Bit 21: Store-and-forward
                                                         However, the application must not change this field.
 <31:24> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG468 = Four hundred sixty-ninth 32-bits of PCIE type 0 config space
 *                  (VC0 Completion Receive Queue Control)
 *
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG468 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  DATA_CREDITS    RO/WRSL  0x000       0x00      VC0 Completion Data Credits                                          
                                                         The number of initial Completion data credits for VC0, used for 
                                                         all receive queue buffer configurations.
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <19:12> HEADER_CREDITS  RO/WRSL  0x00        0x00      VC0 Completion Header Credits                                        
                                                         The number of initial Completion header credits for VC0, used 
                                                         for all receive queue buffer configurations.
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <20>    NS              RAZ      NS          NS        Reserved                                                             
 <23:21> QUEUE_MODE      RO/WRSL  0x2         0x2       VC0 Completion TLP Queue Mode                                        
                                                         The operating mode of the Completion receive queue for VC0, 
                                                         used only in the segmented-buffer configuration, writable 
                                                         through PEM(0..1)_CFG_WR.
                                                         Only one bit can be set at a time:
                                                         o Bit 23: Bypass
                                                         o Bit 22: Cut-through
                                                         o Bit 21: Store-and-forward
                                                         However, the application must not change this field.
 <31:24> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG490 = Four hundred ninety-first 32-bits of PCIE type 0 config space
 *                  (VC0 Posted Buffer Depth)
 *

     ==============================================================
     PCIEEP(0..1)_CFG490 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <13:0>  DATA_DEPTH      RO/WRSL  0x0188      0x188     VC0 Posted Data Queue Depth                                          
                                                         Sets the number of entries in the Posted data queue for VC0 
                                                         when using the segmented-buffer configuration, writable 
                                                         through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <15:14> NS              RAZ      NS          NS        Reserved                                                             
 <25:16> HEADER_DEPTH    RO/WRSL  0x066       0x66      VC0 Posted Header Queue Depth                                        
                                                         Sets the number of entries in the Posted header queue for VC0 
                                                         when using the segmented-buffer configuration, writable through 
                                                         PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <31:26> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG491 = Four hundred ninety-second 32-bits of PCIE type 0 config space
 *                  (VC0 Non-Posted Buffer Depth)
 *

     ==============================================================
     PCIEEP(0..1)_CFG491 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <13:0>  DATA_DEPTH      RO/WRSL  0x0088      0x88      VC0 Non-Posted Data Queue Depth                                      
                                                         Sets the number of entries in the Non-Posted data queue for VC0 
                                                         when using the segmented-buffer configuration, writable 
                                                         through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <15:14> NS              RAZ      NS          NS        Reserved                                                             
 <25:16> HEADER_DEPTH    RO/WRSL  0x026       0x26      VC0 Non-Posted Header Queue Depth                                    
                                                         Sets the number of entries in the Non-Posted header queue for 
                                                         VC0 when using the segmented-buffer configuration, writable 
                                                         through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <31:26> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG492 = Four hundred ninety-third 32-bits of PCIE type 0 config space
 *                  (VC0 Completion Buffer Depth)
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG492 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <13:0>  DATA_DEPTH      RO/WRSL  0x0188      0x188     VC0 Completion Data Queue Depth                                      
                                                         Sets the number of entries in the Completion data queue for VC0 
                                                         when using the segmented-buffer configuration, writable 
                                                         through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <15:14> NS              RAZ      NS          NS        Reserved                                                             
 <25:16> HEADER_DEPTH    RO/WRSL  0x066       0x66      VC0 Completion Header Queue Depth                                    
                                                         Sets the number of entries in the Completion header queue for 
                                                         VC0 when using the segmented-buffer configuration, writable 
                                                         through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <31:26> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG515 = Five hundred sixteenth 32-bits of PCIE type 0 config space
 *                  (Port Logic Register (Gen2)) 
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG515 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   N_FTS           R/W      0x80        0x80      N_FTS                                                                
                                                         Sets the Number of Fast Training Sequences (N_FTS) that 
                                                         the core advertises as its N_FTS during GEN2 Link training. 
                                                         This value is used to inform the Link partner about the PHYs
                                                         ability to recover synchronization after a low power state.
                                                         Note: Do not set N_FTS to zero; doing so can cause the 
                                                               LTSSM to go into the recovery state when exiting from 
                                                               L0s.
 <16:8>  LE              R/W      0x8         0x8       Lane Enable                                                          
                                                         Indicates the number of lanes to check for exit from electrical 
                                                         idle in Polling.Active and Polling.Compliance. 1 = x1, 2 = x2, 
                                                         etc. Used to limit the maximum link width to ignore broken 
                                                         lanes that detect a receiver, but will not exit electrical 
                                                         idle and 
                                                         would otherwise prevent a valid link from being configured.
 <17>    DSC             R/W      0x0         0x0       Directed Speed Change                                                
                                                         Indicates to the LTSSM whether or not to initiate a speed 
                                                         change.
 <18>    CPYTS           R/W      0x0         0x0       Config PHY Tx Swing                                                  
                                                         Indicates the voltage level the PHY should drive. When set to
                                                         1, indicates Full Swing. When set to 0, indicates Low Swing
 <19>    CTCRB           R/W      0x0         0x0       Config Tx Compliance Receive Bit                                     
                                                         When set to 1, signals LTSSM to transmit TS ordered sets 
                                                         with the compliance receive bit assert (equal to 1).
 <20>    S_D_E           R/W      0x0         0x0       SEL_DE_EMPHASIS                                                      
                                                         Used to set the de-emphasis level for upstream ports.
 <31:21> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG516 = Five hundred seventeenth 32-bits of PCIE type 0 config space
 *                  (PHY Status Register) 
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG516 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PHY_STAT        RO       0x0         0x0       PHY Status                                                           
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG517 = Five hundred eighteenth 32-bits of PCIE type 0 config space
 *                  (PHY Control Register)
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG517 Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PHY_CTRL        R/W      0x0         0x0       PHY Control                                                          
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG004_MASK (BAR Mask 0 - Low)
 *                   The BAR 0 Mask register is invisible to host software and not readable from the application.
 *                   The BAR 0 Mask register is only writable through PEM(0..1)_CFG_WR.
 *
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG004_MASK Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:1>  LMASK           WORSL    0x1FFF      0x1FFF    Bar Mask Low                                                         
 <0>     ENB             WORSL    0x1         0x1       Bar Enable                                                           
                                                         o 0: BAR 0 is disabled
                                                         o 1: BAR 0 is enabled
                                                         Bit 0 is interpreted as BAR Enable when writing to the BAR Mask 
                                                         register rather than as a mask bit because bit 0 of a BAR is 
                                                         always masked from writing by host software. Bit 0 must be
                                                         written prior to writing the other mask bits.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG005_MASK = (BAR Mask 0 - High)
 *                   The BAR 0 Mask register is invisible to host software and not readable from the application.
 *                   The BAR 0 Mask register is only writable through PEM(0..1)_CFG_WR.
 *
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG005_MASK Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  UMASK           WORSL    0x0         0x0       Bar Mask High                                                        
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG006_MASK (BAR Mask 1 - Low)
 *                   The BAR 1 Mask register is invisible to host software and not readable from the application.
 *                   The BAR 1 Mask register is only writable through PEM(0..1)_CFG_WR.
 *
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG006_MASK Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:1>  LMASK           WORSL    0x1FFFFFF   0x1FFFFFF Bar Mask Low                                                         
 <0>     ENB             WORSL    0x1         0x1       Bar Enable                                                           
                                                         o 0: BAR 1 is disabled
                                                         o 1: BAR 1 is enabled
                                                         Bit 0 is interpreted as BAR Enable when writing to the BAR Mask 
                                                         register rather than as a mask bit because bit 0 of a BAR is 
                                                         always masked from writing by host software. Bit 0 must be
                                                         written prior to writing the other mask bits.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG007_MASK (BAR Mask 1 - High)
 *                   The BAR 1 Mask register is invisible to host software and not readable from the application.
 *                   The BAR 1 Mask register is only writable through PEM(0..1)_CFG_WR.
 *
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG007_MASK Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  UMASK           WORSL    0x0         0x0       Bar Mask High                                                        
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG008_MASK (BAR Mask 2 - Low)
 *                   The BAR 2 Mask register is invisible to host software and not readable from the application.
 *                   The BAR 2 Mask register is only writable through PEM(0..1)_CFG_WR.
 * 
 *

     ==============================================================
     PCIEEP(0..1)_CFG008_MASK Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:1>  LMASK           WORSL    0x7FFFFFFF 0x7FFFFFFF Bar Mask Low                                                         
 <0>     ENB             WORSL    0x1         0x1       Bar Enable                                                           
                                                         o 0: BAR 2 is disabled
                                                         o 1: BAR 2 is enabled
                                                         Bit 0 is interpreted as BAR Enable when writing to the BAR Mask 
                                                         register rather than as a mask bit because bit 0 of a BAR is 
                                                         always masked from writing by host software. Bit 0 must be
                                                         written prior to writing the other mask bits.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG009_MASK (BAR Mask 2 - High)
 *                   The BAR 2 Mask register is invisible to host software and not readable from the application.
 *                   The BAR 2 Mask register is only writable through PEM(0..1)_CFG_WR.
 *

     ==============================================================
     PCIEEP(0..1)_CFG009_MASK Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  UMASK           WORSL    0x1FF        0x1FF      Bar Mask High                                                        
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG012_MASK (Exapansion ROM BAR Mask)
 *                   The ROM Mask register is invisible to host software and not readable from the application.
 *                   The ROM Mask register is only writable through PEM(0..1)_CFG_WR.
 *

     ==============================================================
     PCIEEP(0..1)_CFG012_MASK Type=PCICONFIGEP
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:1>  MASK            WORSL    0x00007FFF 0x00007FFF Bar Mask Low                                                                 NS
 <0>     ENB             WORSL    0x1         0x1       Bar Enable                                                                   NS               
                                                         o 0: BAR ROM is disabled
                                                         o 1: BAR ROM is enabled
                                                         Bit 0 is interpreted as BAR Enable when writing to the BAR Mask 
                                                         register rather than as a mask bit because bit 0 of a BAR is 
                                                         always masked from writing by host software. Bit 0 must be
                                                         written prior to writing the other mask bits.
----------------------------------------------------------------------------------------------------
===



 *
 *                PCIE_CFG000 = First 32-bits of PCIE type 1 config space (Device ID and Vendor ID Register)
 *                  
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG000 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <15:0>  VENDID          R/W      0x177d      0x177d    Vendor ID, writable through PEM(0..1)_CFG_WR                              
                                                         However, the application must not change this field.                              
 <31:16> DEVID           R/W      0x90        0x90      Device ID, writable through PEM(0..1)_CFG_WR                              
                                                         However, the application must not change this field.               
----------------------------------------------------------------------------------------------------
===

 *
 *                PCIE_CFG001 = Second 32-bits of PCIE type 1 config space (Command/Status Register)
 *

     ==============================================================
     PCIERC(0..1)_CFG001 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     ISAE            R/W      0x0         0x0       I/O Space Enable                                                     
 <1>     MSAE            R/W      0x0         0x0       Memory Space Enable                                                  
 <2>     ME              R/W      0x0         0x0       Bus Master Enable                                                    
 <3>     SCSE            RO       0x0         0x0       Special Cycle Enable                                                 
                                                         Not applicable for PCI Express. Must be hardwired to 0.
 <4>     MWICE           RO       0x0         0x0       Memory Write and Invalidate                                          
                                                         Not applicable for PCI Express. Must be hardwired to 0. 
 <5>     VPS             RO       0x0         0x0       VGA Palette Snoop                                                    
                                                         Not applicable for PCI Express. Must be hardwired to 0. 
 <6>     PER             R/W      0x0         0x0       Parity Error Response                                                
 <7>     IDS_WCC         RO       0x0         0x0       IDSEL Stepping/Wait Cycle Control                                    
                                                         Not applicable for PCI Express. Must be hardwired to 0
 <8>     SEE             R/W      0x0         0x0       SERR# Enable                                                         
 <9>     FBBE            RO       0x0         0x0       Fast Back-to-Back Enable                                             
                                                         Not applicable for PCI Express. Must be hardwired to 0. 
 <10>    I_DIS           R/W      0x0         0x0       INTx Assertion Disable                                               
 <18:11> NS              RAZ      NS          NS        Reserved                                                             
 <19>    I_STAT          RO       0x0         0x0       INTx Status                                                          
 <20>    CL              RO       0x1         0x1       Capabilities List                                                    
                                                         Indicates presence of an extended capability item. 
                                                         Hardwired to 1.
 <21>    M66             RO       0x0         0x0       66 MHz Capable                                                       
                                                         Not applicable for PCI Express. Hardwired to 0. 
 <22>    NS              RO       NS          NS        Reserved                                                             
 <23>    FBB             RO       0x0         0x0       Fast Back-to-Back Capable                                            
                                                         Not applicable for PCI Express. Hardwired to 0. 
 <24>    MDPE            R/W1C    0x0         0x0       Master Data Parity Error                                             
 <26:25> DEVT            RO       0x0         0x0       DEVSEL Timing                                                        
                                                         Not applicable for PCI Express. Hardwired to 0. 
 <27>    STA             R/W1C    0x0         0x0       Signaled Target Abort                                                
 <28>    RTA             R/W1C    0x0         0x0       Received Target Abort                                                
 <29>    RMA             R/W1C    0x0         0x0       Received Master Abort                                                
 <30>    SSE             R/W1C    0x0         0x0       Signaled System Error                                                
 <31>    DPE             R/W1C    0x0         0x0       Detected Parity Error                                                
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG002 = Third 32-bits of PCIE type 1 config space (Revision ID/Class Code Register)
 *

     ==============================================================
     PCIERC(0..1)_CFG002 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   RID             R/W      0x00        0x00      Revision ID, writable through PEM(0..1)_CFG_WR                            
                                                         However, the application must not change this field.                                             
 <15:8>  PI              R/W      0x00        0x0       Programming Interface, writable through PEM(0..1)_CFG_WR                  
                                                         However, the application must not change this field.                                             
 <23:16> SC              R/W      0x30        0x30      Subclass Code, writable through PEM(0..1)_CFG_WR                          
                                                         However, the application must not change this field.                                             
 <31:24> BCC             R/W      0x0B        0x0B      Base Class Code, writable through PEM(0..1)_CFG_WR                        
                                                         However, the application must not change this field.                              
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG003 = Fourth 32-bits of PCIE type 1 config space (Cache Line Size/Master Latency Timer/Header Type Register/BIST Register)
 *

     ==============================================================
     PCIERC(0..1)_CFG003 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   CLS             R/W      0x00        0x0       Cache Line Size                                                      
                                                         The Cache Line Size register is RW for legacy compatibility 
                                                         purposes and is not applicable to PCI Express device 
                                                         functionality. 
 <15:8>  LT              RO       0x00        0x0       Master Latency Timer                                                 
                                                         Not applicable for PCI Express, hardwired to 0.
 <22:16> CHF             RO       0x1         0x1       Configuration Header Format                                          
                                                         Hardwired to 1.
 <23>    MFD             R/W      0x0         0x0       Multi Function Device                                                
                                                         The Multi Function Device bit is writable through PEM(0..1)_CFG_WR.
                                                         However, this is a single function device. Therefore, the 
                                                         application must not write a 1 to this bit.
 <31:24> BIST            RO       0x00        0x0       The BIST register functions are not supported.                       
                                                         All 8 bits of the BIST register are hardwired to 0.                   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG004 = Fifth 32-bits of PCIE type 1 config space (Base Address Register 0 - Low) 
 *

     ==============================================================
     PCIERC(0..1)_CFG004 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  NS              RO       NS          NS        Unused                                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG005 = Sixth 32-bits of PCIE type 1 config space (Base Address Register 0 - High)
 *

     ==============================================================
     PCIERC(0..1)_CFG005 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  NS              RO       NS          NS        Unused                                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG006 = Seventh 32-bits of PCIE type 1 config space (Bus Number Registers)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG006 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   PBNUM           R/W      0x00        0x0       Primary Bus Number                                                   
 <15:8>  SBNUM           R/W      0x00        0x0       Secondary Bus Number                                                 
 <23:16> SUBBNUM         R/W      0x00        0x0       Subordinate Bus Number                                               
 <31:24> SLT             RO       0x00        0x0       Secondary Latency Timer                                              
                                                         Not applicable to PCI Express, hardwired to 0x00.
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  PCIE_CFG007 = Eighth 32-bits of PCIE type 1 config space (IO Base and IO Limit/Secondary Status Register)
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG007 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     IO32A           R/W      0x1         0x1       32-Bit I/O Space                                                     
                                                         o 0 = 16-bit I/O addressing
                                                         o 1 = 32-bit I/O addressing
                                                         This bit is writable through PEM(0..1)_CFG_WR.
                                                         When the application 
                                                         writes to this bit through PEM(0..1)_CFG_WR,
                                                         the same value is written 
                                                         to bit 8 of this register.
 <3:1>   NS              RAZ      0x00        0x0       Reserved                                                             
 <7:4>   LIO_BASE        R/W      0x00        0x0       I/O Space Base                                                       
 <8>     IO32B           RO       0x1         0x1       32-Bit I/O Space                                                     
 <11:9>  NS              RAZ      0x00        0x0       Reserved                                                             
 <15:12> LIO_LIMI        R/W      0x00        0x0       I/O Space Limit                                                      
 <20:16> NS              RAZ      NS          NS        Reserved                                                             
 <21>    M66             RO       0x0         0x0       66 MHz Capable                                                       
                                                         Not applicable for PCI Express. Hardwired to 0. 
 <22>    NS              RO       NS          NS        Reserved                                                             
 <23>    FBB             RO       0x0         0x0       Fast Back-to-Back Capable                                            
                                                         Not applicable for PCI Express. Hardwired to 0. 
 <24>    MDPE            R/W1C    0x0         0x0       Master Data Parity Error                                             
 <26:25> DEVT            RO       0x0         0x0       DEVSEL Timing                                                        
                                                         Not applicable for PCI Express. Hardwired to 0. 
 <27>    STA             R/W1C    0x0         0x0       Signaled Target Abort                                                
 <28>    RTA             R/W1C    0x0         0x0       Received Target Abort                                                
 <29>    RMA             R/W1C    0x0         0x0       Received Master Abort                                                
 <30>    SSE             R/W1C    0x0         0x0       Signaled System Error                                                
 <31>    DPE             R/W1C    0x0         0x0       Detected Parity Error                                                
----------------------------------------------------------------------------------------------------
===

 *
 *                 PCIE_CFG008 = Ninth 32-bits of PCIE type 1 config space (Memory Base and Memory Limit Register)
 *

     ==============================================================
     PCIERC(0..1)_CFG008 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>   NS              RO       NS          NS        Reserved                                                             
 <15:4>  MB_ADDR         R/W      0x00        0x0       Memory Base Address                                                  
 <19:16> NS              RO       NS          NS        Reserved                                                             
 <31:20> ML_ADDR         R/W      0x00        0x0       Memory Limit Address                                                 
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG009 = Tenth 32-bits of PCIE type 1 config space (Prefetchable Memory Base and Limit Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG009 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     MEM64A          R/W      0x1         0x1       64-Bit Memory Addressing                                             
                                                         o 0 = 32-bit memory addressing
                                                         o 1 = 64-bit memory addressing
                                                         This bit is writable through PEM(0..1)_CFG_WR.
                                                         When the application 
                                                         writes to this bit through PEM(0..1)_CFG_WR,
                                                         the same value is written 
                                                         to bit 16 of this register.
 <3:1>   NS              RO       NS          NS        Reserved                                                             
 <15:4>  LMEM_BASE       R/W      0x000       0x0       Upper 12 bits of 32-bit Prefetchable Memory Start Address            
 <16>    MEM64B          RO       0x1         0x1       64-Bit Memory Addressing                                             
                                                         o 0 = 32-bit memory addressing
                                                         o 1 = 64-bit memory addressing
 <19:17> NS              RO       NS          NS        Reserved                                                             
 <31:20> LMEM_LIMIT      R/W      0x000       0x0       Upper 12 bits of 32-bit Prefetchable Memory End Address              
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG010 = Eleventh 32-bits of PCIE type 1 config space (Prefetchable Base Upper 32 Bits Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG010 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  UMEM_BASE       R/W      0x00000000  0x0       Upper 32 Bits of Base Address of Prefetchable Memory Space           
                                                         Used only when 64-bit prefetchable memory addressing is 
                                                         enabled.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG011 = Twelfth 32-bits of PCIE type 1 config space (Prefetchable Limit Upper 32 Bits Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG011 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  UMEM_LIMIT      R/W      0x00000000  0x0       Upper 32 Bits of Limit Address of Prefetchable Memory Space          
                                                         Used only when 64-bit prefetchable memory addressing is 
                                                         enabled.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG012 = Thirteenth 32-bits of PCIE type 1 config space (IO Base and Limit Upper 16 Bits Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG012 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <15:0>  UIO_BASE        R/W      0x0000      0x0       Upper 16 Bits of I/O Base (if 32-bit I/O decoding is supported       
                                                         for devices on the secondary side)                    
 <31:16> UIO_LIMIT       R/W      0x0000      0x0       Upper 16 Bits of I/O Limit (if 32-bit I/O decoding is supported      
                                                         for devices on the secondary side)                    
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG013 = Fourteenth 32-bits of PCIE type 1 config space (Capability Pointer Register)
 *

     ==============================================================
     PCIERC(0..1)_CFG013 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   CP              R/W      0x40        0x40      First Capability Pointer.                                            
                                                         Points to Power Management Capability structure by 
                                                         default, writable through PEM(0..1)_CFG_WR
                                                         However, the application must not change this field.
 <31:8>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG014 = Fifteenth 32-bits of PCIE type 1 config space (Expansion ROM Base Address Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG014 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  NS              RAZ      NS          NS        Unused                                                               
----------------------------------------------------------------------------------------------------
===



 *
 *                  PCIE_CFG015 = Sixteenth 32-bits of PCIE type 1 config space (Interrupt Line Register/Interrupt Pin/Bridge Control Register)
 *

     ==============================================================
     PCIERC(0..1)_CFG015 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   IL              R/W      0xFF        0xFF      Interrupt Line                                                       
 <15:8>  INTA            R/W      0x01        0x01      Interrupt Pin                                                        
                                                         Identifies the legacy interrupt Message that the device 
                                                         (or device function) uses.
                                                         The Interrupt Pin register is writable through PEM(0..1)_CFG_WR.
                                                         In a single-function configuration, only INTA is used. 
                                                         Therefore, the application must not change this field.               
 <16>    PERE            R/W      0x0         0x0       Parity Error Response Enable                                         
 <17>    SEE             R/W      0x0         0x0       SERR Enable                                                          
 <18>    ISAE            R/W      0x0         0x0       ISA Enable                                                           
 <19>    VGAE            R/W      0x0         0x0       VGA Enable                                                           
 <20>    VGA16D          R/W      0x0         0x0       VGA 16-Bit Decode                                                    
 <21>    MAM             RO       0x0         0x0       Master Abort Mode                                                    
                                                         Not applicable to PCI Express, hardwired to 0.
 <22>    SBRST           R/W      0x0         0x0       Secondary Bus Reset                                                  
                                                         Hot reset. Causes TS1s with the hot reset bit to be sent to
                                                         the link partner. When set, SW should wait 2ms before
                                                         clearing. The link partner normally responds by sending TS1s
                                                         with the hot reset bit set, which will cause a link
                                                         down event - refer to "PCIe Link-Down Reset in RC Mode"
                                                         section.
 <23>    FBBE            RO       0x0         0x0       Fast Back-to-Back Transactions Enable                                
                                                         Not applicable to PCI Express, hardwired to 0.
 <24>    PDT             RO       0x0         0x0       Primary Discard Timer                                                
                                                         Not applicable to PCI Express, hardwired to 0.
 <25>    SDT             RO       0x0         0x0       Secondary Discard Timer                                              
                                                         Not applicable to PCI Express, hardwired to 0.
 <26>    DTS             RO       0x0         0x0       Discard Timer Status                                                 
                                                         Not applicable to PCI Express, hardwired to 0.
 <27>    DTSEES          RO       0x0         0x0       Discard Timer SERR Enable Status                                     
                                                         Not applicable to PCI Express, hardwired to 0.
 <31:28> NS              RO       NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                 PCIE_CFG016 = Seventeenth 32-bits of PCIE type 1 config space 
 *                  (Power Management Capability ID/
 *                  Power Management Next Item Pointer/
 *                  Power Management Capabilities Register)
 *

     ==============================================================
     PCIERC(0..1)_CFG016 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   PMCID           RO       0x01        0x01      Power Management Capability ID                                       
 <15:8>  NCP             R/W      0x50        0x50      Next Capability Pointer                                              
                                                         Points to the MSI capabilities by default, writable 
                                                         through PEM(0..1)_CFG_WR.
 <18:16> PMSV            R/W      0x03        0x03      Power Management Specification Version, writable through PEM(0..1)_CFG_WR 
                                                         However, the application must not change this field.
 <19>    PME_Clock       RO       0x0         0x0       PME Clock, hardwired to 0                                            
 <20>    NS              RAZ      NS          NS        Reserved                                                             
 <21>    DSI             R/W      0x0         0x0       Device Specific Initialization (DSI), writable through PEM(0..1)_CFG_WR   
                                                         However, the application must not change this field.
 <24:22> AUXC            R/W      0x0         0x0       AUX Current, writable through PEM(0..1)_CFG_WR                            
                                                         However, the application must not change this field.
 <25>    D1S             R/W      0x0         0x0       D1 Support, writable through PEM(0..1)_CFG_WR                             
                                                         However, the application must not change this field.
 <26>    D2S             R/W      0x0         0x0       D2 Support, writable through PEM(0..1)_CFG_WR                             
                                                         However, the application must not change this field.
 <31:27> PMES            R/W      0x0         0x0       PME_Support                                                          
                                                         A value of 0 for any bit indicates that the 
                                                         device (or function) is not capable of generating PME Messages 
                                                         while in that power state:
                                                         o Bit 11: If set, PME Messages can be generated from D0
                                                         o Bit 12: If set, PME Messages can be generated from D1
                                                         o Bit 13: If set, PME Messages can be generated from D2
                                                         o Bit 14: If set, PME Messages can be generated from D3hot
                                                         o Bit 15: If set, PME Messages can be generated from D3cold
                                                         The PME_Support field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG017 = Eighteenth 32-bits of PCIE type 1 config space (Power Management Control and Status Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG017 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <1:0>   PS              R/W      0x0         0x0       Power State                                                          
                                                         Controls the device power state:
                                                           o 00b: D0
                                                           o 01b: D1
                                                           o 10b: D2
                                                           o 11b: D3
                                                         The written value is ignored if the specific state is 
                                                         not supported.
 <2>     NS              RAZ      NS          NS        Reserved                                                             
 <3>     NSR             R/W      0x0         0x0       No Soft Reset, writable through PEM(0..1)_CFG_WR                          
                                                         However, the application must not change this field.
 <7:4>   NS              RAZ      NS          NS        Reserved                                                             
 <8>     PMEENS          R/W      0x0         0x0       PME Enable                                                           
                                                         A value of 1 indicates that the device is enabled to 
                                                         generate PME.
 <12:9>  PMDS            RO       0x0         0x0       Data Select (not supported)                                          
 <14:13> PMEDSIA         RO       0x0         0x0       Data Scale (not supported)                                           
 <15>    PMESS           R/W1C    0x0         0x0       PME Status                                                           
                                                        Indicates if a previously enabled PME event occurred or not.
 <21:16> NS              RAZ      NS          NS        Reserved                                                             
 <22>    BD3H            RO       0x0         0x0       B2/B3 Support, hardwired to 0                                        
 <23>    BPCCEE          RO       0x0         0x0       Bus Power/Clock Control Enable, hardwired to 0                       
 <31:24> PMDIA           RO       0x00        0x0       Data register for additional information (not supported)             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG020 = Twenty-first 32-bits of PCIE type 1 config space
 *                  (MSI Capability ID/
 *                   MSI Next Item Pointer/
 *                   MSI Control Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG020 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   MSICID          RO       0x05        0x05      MSI Capability ID                                                    
 <15:8>  NCP             R/W      0x70        0x70      Next Capability Pointer                                              
                                                         Points to PCI Express Capabilities by default, 
                                                         writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <16>    MSIEN           R/W      0x0         0x0       MSI Enabled                                                          
                                                         When set, INTx must be disabled.
                                                         This bit must never be set, as internal-MSI is not supported in
                                                         RC mode. (Note that this has no effect on external MSI, which
                                                         will be commonly used in RC mode.)
 <19:17> MMC             R/W      0x0         0x0       Multiple Message Capable, writable through PEM(0..1)_CFG_WR               
                                                         However, the application must not change this field.
 <22:20> MME             R/W      0x0         0x0       Multiple Message Enabled                                             
                                                         Indicates that multiple Message mode is enabled by system 
                                                         software. The number of Messages enabled must be less than 
                                                         or equal to the Multiple Message Capable value.
 <23>    M64             R/W      0x1         0x1       64-bit Address Capable, writable through PEM(0..1)_CFG_WR                 
                                                         However, the application must not change this field.
 <31:24> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG021 = Twenty-second 32-bits of PCIE type 1 config space (MSI Lower 32 Bits Address Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG021 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <1:0>   NS              RAZ      NS          NS        Reserved                                                             
 <31:2>  LMSI            R/W      0x00000000  0x0       Lower 32-bit Address                                                 
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG022 = Twenty-third 32-bits of PCIE type 1 config space (MSI Upper 32 bits Address Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG022 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  UMSI            R/W      0x00000000  0x0       Upper 32-bit Address                                                 

----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG023 = Twenty-fourth 32-bits of PCIE type 1 config space (MSI Data Register) 
 *                 

     ==============================================================
     PCIERC(0..1)_CFG023 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <15:0>  MSIMD           R/W      0x0000      0x0       MSI Data                                                             
                                                         Pattern assigned by system software, bits [4:0] are Or-ed with 
                                                         MSI_VECTOR to generate 32 MSI Messages per function.
 <31:16> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG028 = Twenty-ninth 32-bits of PCIE type 1 config space
 *                  (PCI Express Capabilities List Register/
 *                   PCI Express Capabilities Register)
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG028 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   PCIEID          RO       0x10        0x10      PCIE Capability ID                                                    
 <15:8>  NCP             R/W      0x00        0x0       Next Capability Pointer                                               
                                                         writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <19:16> PCIECV          RO       0x2         0x2       PCI Express Capability Version                                        
 <23:20> DPT             RO       0x4         0x4       Device Port Type                                                      
 <24>    SI              R/W      0x0         0x0       Slot Implemented                                                      
                                                         This bit is writable through PEM(0..1)_CFG_WR.
                                                         However, it must 0 for an 
                                                         Endpoint device. Therefore, the application must not write a 
                                                         1 to this bit.
 <29:25> IMN             R/W      0x0         0x0       Interrupt Message Number                                              
                                                        Updated by hardware, writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <31:30> NS              RAZ      NS          NS        RsvdP                                                                 
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG029 = Thirtieth 32-bits of PCIE type 1 config space (Device Capabilities Register) 
 *

     ==============================================================
     PCIERC(0..1)_CFG029 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <2:0>   MPSS            R/W      0x1         0x1       Max_Payload_Size Supported, writable through PEM(0..1)_CFG_WR             
                                                         However, the application must not change this field.
 <4:3>   PFS             R/W      0x0         0x0       Phantom Function Supported                                           
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, Phantom 
                                                         Function is not supported. Therefore, the application must not 
                                                         write any value other than 0x0 to this field.
 <5>     ETFS            R/W      0x0         0x0       Extended Tag Field Supported                                         
                                                         This bit is writable through PEM(0..1)_CFG_WR.
                                                         However, the application
                                                         must not write a 1 to this bit.
 <8:6>   EL0AL           R/W      0x0         0x0       Endpoint L0s Acceptable Latency, writable through PEM(0..1)_CFG_WR        
                                                         Must be 0x0 for non-endpoint devices.               
 <11:9>  EL1AL           R/W      0x0         0x0       Endpoint L1 Acceptable Latency, writable through PEM(0..1)_CFG_WR         
                                                         Must be 0x0 for non-endpoint devices.               
 <12>    NS              RAZ      NS          NS        Undefined                                                            
 <13>    NS              RAZ      NS          NS        Undefined                                                            
 <14>    NS              RAZ      0x0         0x0       Undefined                                                            
 <15>    RBER            R/W      0x1         0x1       Role-Based Error Reporting, writable through PEM(0..1)_CFG_WR             
                                                         However, the application must not change this field.
 <17:16> NS              RAZ      NS          NS        Reserved                                                             
 <25:18> CSPLV           RO       0x00        0x0       Captured Slot Power Limit Value                                      
                                                         Not applicable for RC port, upstream port only.
 <27:26> CSPLS           RO       0x0         0x0       Captured Slot Power Limit Scale                                      
                                                         Not applicable for RC port, upstream port only.
 <31:28> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG030 = Thirty-first 32-bits of PCIE type 1 config space 
 *                  (Device Control Register/Device Status Register)
 *

     ==============================================================
     PCIERC(0..1)_CFG030 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     CE_EN           R/W      0x0         0x0       Correctable Error Reporting Enable                                   
 <1>     NFE_EN          R/W      0x0         0x0       Non-Fatal Error Reporting Enable                                     
 <2>     FE_EN           R/W      0x0         0x0       Fatal Error Reporting Enable                                         
 <3>     UR_EN           R/W      0x0         0x0       Unsupported Request Reporting Enable                                 
 <4>     RO_EN           R/W      0x1         0x1       Enable Relaxed Ordering                                              
 <7:5>   MPS             R/W      0x0         0x0       Max Payload Size                                                     
                                                         Legal values:
                                                          0  = 128B
                                                          1  = 256B
                                                         Larger sizes not supported.
                                                        Note: Both PCI Express Ports must be set to the same value
                                                              for Peer-to-Peer to function properly.               
                                                        Note: DPI_SLI_PRT#_CFG[MPS] must also be set to the same
                                                              value for proper functionality.
 <8>     ETF_EN          R/W      0x0         0x0       Extended Tag Field Enable                                            
                                                          This bit should never be set - OCTEON requests never use
                                                          extended tags.
 <9>     PF_EN           R/W      0x0         0x0       Phantom Function Enable                                              
                                                          This bit should never be set - OCTEON requests never use
                                                          phantom functions.
 <10>    AP_EN           R/W      0x0         0x0       AUX Power PM Enable                                                  
 <11>    NS_EN           R/W      0x1         0x1       Enable No Snoop                                                      
 <14:12> MRRS            R/W      0x2         0x2       Max Read Request Size                                                
                                                         0 = 128B
                                                         1 = 256B
                                                         2 = 512B
                                                         3 = 1024B
                                                         4 = 2048B
                                                         5 = 4096B
                                                        Note: SLI_S2M_PORT#_CTL[MRRS] and DPI_SLI_PRT#_CFG[MRRS] and 
							      also must be set properly.
                                                              SLI_S2M_PORT#_CTL[MRRS] and DPI_SLI_PRT#_CFG[MRRS] must 
                                                              not exceed the desired max read request size.
 <15>    NS              RAZ      NS          NS        Reserved                                                             
 <16>    CE_D            R/W1C    0x0         0x0       Correctable Error Detected                                           
                                                         Errors are logged in this register regardless of whether 
                                                         error reporting is enabled in the Device Control register.
							CE_D is set if we receive any of the errors in PCIE_CFG068
							for example a Replay Timer Timeout.  Also, it can be set if
							we get any of the errors in PCIE_CFG066 that has a severity
							set to Nonfatal and meets the Advisory Nonfatal criteria,
							which most ECRC errors should be.
 <17>    NFE_D           R/W1C    0x0         0x0       Non-Fatal Error detected                                             
                                                        Errors are logged in this register regardless of whether 
                                                         error reporting is enabled in the Device Control register.
							NFE_D is set if we receive any of the errors in PCIE_CFG066
							that has a severity set to Nonfatal and does NOT meet Advisory
							Nonfatal criteria , which
							most poisoned TLP's should be.
 <18>    FE_D            R/W1C    0x0         0x0       Fatal Error Detected                                                 
                                                        Errors are logged in this register regardless of whether 
                                                         error reporting is enabled in the Device Control register.
							FE_D is set if receive any of the errors in PCIE_CFG066 that
							has a severity set to Fatal.  Malformed TLP's generally fit
							into this category.
 <19>    UR_D            R/W1C    0x0         0x0       Unsupported Request Detected                                         
                                                        Errors are logged in this register regardless of whether 
                                                         error reporting is enabled in the Device Control register.
							UR_D occurs when we receive something we don't support.
							Unsupported requests are Nonfatal errors, so UR_D should
							cause NFE_D.  Receiving a  vendor defined message should
							cause an unsupported request.
 <20>    AP_D            RO       0x0         0x0       Aux Power Detected                                                   
                                                         Set to 1 if Aux power detected.
 <21>    TP              RO       0x0         0x0       Transaction Pending                                                  
                                                         Set to 1 when Non-Posted Requests are not yet completed 
                                                         and clear when they are completed.
 <31:22> NS              RAZ      NS       NS           Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG031 = Thirty-second 32-bits of PCIE type 1 config space 
 *                  (Link Capabilities Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG031 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>   MLS             R/W      0x2         NS        Maximum Link Speed                                                   
                                                         The following values are accepted:
							 0001b: 2.5 GHz supported 
                                                         0010b: 5.0 GHz and 2.5 GHz supported          
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <9:4>   MLW             R/W      0x8         0x4       Maximum Link Width                                                   
                                                         The default value is the value you specify during hardware 
                                                         configuration (x1, x4, x8, or x16), writable through PEM(0..1)_CFG_WR.
 <11:10> ASLPMS          R/W      0x3         0x3       Active State Link PM Support                                         
                                                         The default value is the value you specify during hardware 
                                                         configuration, writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <14:12> L0EL            R/W      0x6         0x6       L0s Exit Latency                                                     
                                                         The default value is the value you specify during hardware 
                                                         configuration, writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <17:15> L1EL            R/W      0x6         0x6       L1 Exit Latency                                                      
                                                         The default value is the value you specify during hardware 
                                                         configuration, writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <18>    CPM             R/W      0x0         0x0       Clock Power Management                                               
                                                         The default value is the value you specify during hardware 
                                                         configuration, writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <19>    SDERC           RO       0x0         0x0       Surprise Down Error Reporting Capable                                
                                                         Not supported, hardwired to 0x0.
 <20>    DLLARC          RO       0x1         0x1       Data Link Layer Active Reporting Capable                             
                                                         Set to 1 for Root Complex devices and 0 for Endpoint devices.
 <21>    LBNC            RO       0x1         0x1       Link Bandwith Notification Capability                                
 <23:22> NS              RAZ      NS          NS        Reserved                                                             
 <31:24> PNUM            R/W      0x0         0x0       Port Number, writable through PEM(0..1)_CFG_WR                            
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG032 = Thirty-third 32-bits of PCIE type 1 config space 
 *                  (Link Control Register/Link Status Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG032 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <1:0>   ASLPC           R/W      0x0         0x0       Active State Link PM Control                                         
 <2>     NS              RAZ      NS          NS        Reserved                                                             
 <3>     RCB             R/W      0x1         0x1       Read Completion Boundary (RCB), writable through PEM(0..1)_CFG_WR         
                                                         However, the application must not change this field
							 because an RCB of 64 bytes is not supported.                
 <4>     LD              R/W      0x0         0x0       Link Disable                                                         
 <5>     RL              R/W      0x0         0x0       Retrain Link                                                         
 <6>     CCC             R/W      0x0         0x0       Common Clock Configuration                                           
 <7>     ES              R/W      0x0         0x0       Extended Synch                                                       
 <8>     ECPM            R/W      0x0         0x0       Enable Clock Power Management                                        
                                                         Hardwired to 0 if Clock Power Management is disabled in 
                                                         the Link Capabilities register.
 <9>     HAWD            R/W      0x0         0x0       Hardware Autonomous Width Disable                                    
                                                         (Not Supported)
 <10>    LBM_INT_ENB     R/W      0x0         0x0       Link Bandwidth Management Interrupt Enable                           
                                                         This interrupt is for Gen2 and is not supported. This bit should
                                                         always be written to zero.
 <11>    LAB_INT_ENB     R/W      0x0         0x0       Link Autonomous Bandwidth Interrupt Enable                           
                                                         This interrupt is for Gen2 and is not supported. This bit should
                                                         always be written to zero.
 <15:12> NS              RAZ      NS          NS        Reserved                                                             
 <19:16> LS              RO       NS          NS        Link Speed                                                           
                                                         The negotiated Link speed:
                                                         1 == The negotiated Link speed: 2.5 Gbps
                                                         2 == The negotiated Link speed: 5.0 Gbps
 <25:20> NLW             RO       0x0         0x0       Negotiated Link Width                                                
                                                         Set automatically by hardware after Link initialization.
 <26>    NS              RAZ      NS          NS        Undefined                                                            
 <27>    LT              RO       0x0         0x0       Link Training                                                        
 <28>    SCC             R/W      0x1         0x0       Slot Clock Configuration                                             
                                                         Indicates that the component uses the same physical reference 
                                                         clock that the platform provides on the connector. The default 
                                                         value is the value you select during hardware configuration, 
                                                         writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <29>    DLLA            RO       0x0         0x1       Data Link Layer Active                                               
 <30>    LBM             R/W1C    0x0         0x0       Link Bandwidth Management Status                                     
 <31>    LAB             R/W1C    0x0         0x0       Link Autonomous Bandwidth Status                                     
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG033 = Thirty-fourth 32-bits of PCIE type 1 config space 
 *                  (Slot Capabilities Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG033 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     ABP             R/W      0x0         0x0       Attention Button Present, writable through PEM(0..1)_CFG_WR               
                                                         However, the application must not change this field.
 <1>     PCP             R/W      0x0         0x0       Power Controller Present, writable through PEM(0..1)_CFG_WR               
                                                         However, the application must not change this field.
 <2>     MRLSP           R/W      0x0         0x0       MRL Sensor Present, writable through PEM(0..1)_CFG_WR                     
                                                         However, the application must not change this field.
 <3>     AIP             R/W      0x0         0x0       Attention Indicator Present, writable through PEM(0..1)_CFG_WR            
                                                         However, the application must not change this field.
 <4>     PIP             R/W      0x0         0x0       Power Indicator Present, writable through PEM(0..1)_CFG_WR                
                                                         However, the application must not change this field.
 <5>     HP_S            R/W      0x0         0x0       Hot-Plug Surprise, writable through PEM(0..1)_CFG_WR                      
                                                         However, the application must not change this field.
 <6>     HP_C            R/W      0x0         0x0       Hot-Plug Capable, writable through PEM(0..1)_CFG_WR                       
                                                         However, the application must not change this field.
 <14:7>  SP_LV           R/W      0x0         0x0       Slot Power Limit Value, writable through PEM(0..1)_CFG_WR.                
 <16:15> SP_LS           R/W      0x0         0x0       Slot Power Limit Scale, writable through PEM(0..1)_CFG_WR.                
 <17>    EMIP            R/W      0x0         0x0       Electromechanical Interlock Present, writable through PEM(0..1)_CFG_WR    
                                                         However, the application must not change this field.
 <18>    NCCS            R/W      0x0         0x0       No Command Complete Support, writable through PEM(0..1)_CFG_WR            
                                                         However, the application must not change this field.
 <31:19> PS_NUM          R/W      0x0000      0x0       Physical Slot Number, writable through PEM(0..1)_CFG_WR                   
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG034 = Thirty-fifth 32-bits of PCIE type 1 config space 
 *                  (Slot Control Register/Slot Status Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG034 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     ABP_EN          R/W      0x0         0x0       Attention Button Pressed Enable                                      
 <1>     PF_EN           R/W      0x0         0x0       Power Fault Detected Enable                                          
 <2>     MRLS_EN         R/W      0x0         0x0       MRL Sensor Changed Enable                                            
 <3>     PD_EN           R/W      0x0         0x0       Presence Detect Changed Enable                                       
 <4>     CCINT_EN        R/W      0x0         0x0       Command Completed Interrupt Enable                                   
 <5>     HPINT_EN        R/W      0x0         0x0       Hot-Plug Interrupt Enable                                            
 <7:6>   AIC             R/W      0x3         0x3       Attention Indicator Control                                          
 <9:8>   PIC             R/W      0x3         0x3       Power Indicator Control                                              
 <10>    PCC             R/W      0x0         0x0       Power Controller Control                                             
 <11>    EMIC            R/W      0x0         0x0       Electromechanical Interlock Control                                  
 <12>    DLLS_EN         R/W      0x0         0x0       Data Link Layer State Changed Enable                                 
 <15:13> NS              RAZ      NS          NS        Reserved                                                             
 <16>    ABP_D           R/W1C    0x0         0x0       Attention Button Pressed                                             
 <17>    PF_D            R/W1C    0x0         0x0       Power Fault Detected                                                 
 <18>    MRLS_C          R/W1C    0x0         0x0       MRL Sensor Changed                                                   
 <19>    PD_C            R/W1C    0x0         0x0       Presence Detect Changed                                              
 <20>    CCINT_D         R/W1C    0x0         0x0       Command Completed                                                    
 <21>    MRLSS           RO       0x0         0x0       MRL Sensor State                                                     
 <22>    PDS             RO       0x1         0x1       Presence Detect State                                                
 <23>    EMIS            RO       0x0         0x0       Electromechanical Interlock Status                                   
 <24>    DLLS_C          R/W1C    0x0         0x0       Data Link Layer State Changed                                        
 <31:25> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  PCIE_CFG035 = Thirty-sixth 32-bits of PCIE type 1 config space 
 *                  (Root Control Register/Root Capabilities Register)
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG035 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     SECEE           R/W      0x0         0x0       System Error on Correctable Error Enable                             
 <1>     SENFEE          R/W      0x0         0x0       System Error on Non-fatal Error Enable                               
 <2>     SEFEE           R/W      0x0         0x0       System Error on Fatal Error Enable                                   
 <3>     PMEIE           R/W      0x0         0x0       PME Interrupt Enable                                                 
 <4>     CRSSVE          RO       0x0         0x0       CRS Software Visibility Enable                                       
                                                         Not supported, hardwired to 0x0.
 <15:5>  NS              RAZ      NS          NS        Reserved                                                             
 <16>    CRSSV           RO       0x0         0x0       CRS Software Visibility                                              
                                                         Not supported, hardwired to 0x0.
 <31:17> NS              RAZ      NS          NS        Reserved                                                             

----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG036 = Thirty-seventh 32-bits of PCIE type 1 config space 
 *                  (Root Status Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG036 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <15:0>  PME_RID         RO       0x0         0x0       PME Requester ID                                                     
 <16>    PME_STAT        R/W1C    0x0         0x0       PME Status                                                           
 <17>    PME_PEND        RO       0x0         0x0       PME Pending                                                          
 <31:18> NS              RAZ      0x0         0x0       Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG037 = Thirty-eighth 32-bits of PCIE type 1 config space 
 *                  (Device Capabilities 2 Register)
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG037 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>   CTRS            RO       0x0         0x0       Completion Timeout Ranges Supported                                  
                                                         Value of 0 indicates that Completion Timeout Programming
                                                         is not supported
							 Completion timeout is 16.7ms.
 <4>     CTDS            RO       0x1         0x1       Completion Timeout Disable Supported                                 
 <31:5>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG038 = Thirty-ninth 32-bits of PCIE type 1 config space 
 *                  (Device Control 2 Register)
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG038 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>   CTV             RO       0x0         0x0       Completion Timeout Value                                             
                                                         Completion Timeout Programming is not supported
							 Completion timeout is 16.7ms.
 <4>     CTD             R/W      0x0         0x0       Completion Timeout Disable                                           
 <31:5>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  PCIE_CFG039 = Fourtieth 32-bits of PCIE type 1 config space 
 *                  (Link Capabilities 2 Register)
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG039 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG040 = Fourty-first 32-bits of PCIE type 1 config space 
 *                  (Link Control 2 Register/Link Status 2 Register)
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG040 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>   TLS             R/W      NS          NS        Target Link Speed                                                    
                                                         For Downstream ports, this field sets an upper limit on link  
                                                         operational speed by restricting the values advertised by 
                                                         the upstream component in its training sequences:
                                                           0001: 2.5Gb/s Target Link Speed
                                                           0010: 5Gb/s Target Link Speed
                                                         All other encodings are reserved.
                                                         If a value is written to this field that does not correspond to 
                                                         a speed included in the Supported Link Speeds field, the 
                                                         result is undefined.
                                                         For both Upstream and Downstream ports, this field is 
                                                         used to set the target compliance mode speed when 
                                                         software is using the Enter Compliance bit to force a link 
                                                         into compliance mode.
                                                         Out of reset this will have a value of 1 or 2 which is
                                                         selected by qlmCfgx[1].
 <4>     EC              R/W      0x0         0x0       Enter Compliance                                                     
                                                         Software is permitted to force a link to enter Compliance 
                                                         mode at the speed indicated in the Target Link Speed 
                                                         field by setting this bit to 1b in both components on a link 
                                                         and then initiating a hot reset on the link.
 <5>     HASD            R/W       0x0         0x0      Hardware Autonomous Speed Disable                                    
                                                         When asserted, the 
                                                         application must disable hardware from changing the Link 
                                                         speed for device-specific reasons other than attempting to 
                                                         correct unreliable Link operation by reducing Link speed. 
                                                         Initial transition to the highest supported common link 
                                                         speed is not blocked by this signal.
 <6>     SDE             R/W      0x0         0x0       Selectable De-emphasis                                               
                                                         When the Link is operating at 5.0 GT/s speed, selects the 
                                                         level of de-emphasis:
                                                          1: -3.5 dB
                                                          0: -6 dB
                                                         When the Link is operating at 2.5 GT/s speed, the setting 
                                                         of this bit has no effect.
 <9:7>   TM              R/W      0x000       0x000     Transmit Margin                                                      
                                                         This field controls the value of the non-de-emphasized 
                                                         voltage level at the Transmitter pins: 
                                                          000: 800-1200 mV for full swing 400-600 mV for half-swing
                                                          001-010: values must be monotonic with a non-zero slope
                                                          011: 200-400 mV for full-swing and 100-200 mV for halfswing
                                                          100-111: reserved
                                                         This field is reset to 000b on entry to the LTSSM Polling. 
                                                         Compliance substate.
                                                         When operating in 5.0 GT/s mode with full swing, the 
                                                         de-emphasis ratio must be maintained within +/- 1 dB 
                                                         from the specification-defined operational value  
                                                         either -3.5 or -6 dB). 
 <10>    EMC             R/W      0x0         0x0       Enter Modified Compliance                                            
                                                         When this bit is set to 1b, the device transmits a modified 
                                                         compliance pattern if the LTSSM enters Polling. 
                                                         Compliance state.
 <11>    CSOS            R/W      0x0         0x0       Compliance SOS                                                       
                                                         When set to 1b, the LTSSM is required to send SKP 
                                                         Ordered Sets periodically in between the (modified) 
                                                         compliance patterns.
                                                         Note: When the Link is operating at 2.5 GT/s, the setting 
                                                         of this bit has no effect.
 <12>    CDE             R/W      0x0         0x0       Compliance De-emphasis                                               
                                                         This bit sets the de-emphasis level in Polling. Compliance 
                                                         state if the entry occurred due to the Tx Compliance 
                                                         Receive bit being 1b. Encodings:
                                                          1b: -3.5 dB
                                                          0b: -6 dB
                                                         Note: When the Link is operating at 2.5 GT/s, the setting 
                                                         of this bit has no effect. 
 <15:13> NS              RAZ      NS          NS        Reserved                                                             
 <16>    CDL             RO       0x0         0x0       Current De-emphasis Level                                            
                                                         When the Link is operating at 5 GT/s speed, this bit 
                                                         reflects the level of de-emphasis. Encodings:
                                                          1b: -3.5 dB
                                                          0b: -6 dB
                                                         Note: The value in this bit is undefined when the Link is 
                                                         operating at 2.5 GT/s speed
 <31:17> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG041 = Fourty-second 32-bits of PCIE type 1 config space 
 *                  (Slot Capabilities 2 Register)
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG041 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG042 = Fourty-third 32-bits of PCIE type 1 config space 
 *                  (Slot Control 2 Register/Slot Status 2 Register)
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG042 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  PCIE_CFG064 = Sixty-fifth 32-bits of PCIE type 1 config space 
 *                  (PCI Express Enhanced Capability Header)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG064 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <15:0>  PCIEEC          RO       0x1         0x1       PCIE Express Extended Capability                                     
 <19:16> CV              RO       0x1         0x1       Capability Version                                                   
 <31:20> NCO             RO       0x000       0x0       Next Capability Offset                                               
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG065 = Sixty-sixth 32-bits of PCIE type 1 config space 
 *                  (Uncorrectable Error Status Register) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG065 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     NS              RAZ      NS          NS        Undefined                                                            
                                                         (Was Training Error Status for PCI Express 1.0a)
 <3:1>   NS              RAZ      NS          NS        Reserved                                                             
 <4>     DLPES           R/W1C    0x0         0x0       Data Link Protocol Error Status                                      
 <5>     SDES            RO       0x0         0x0       Surprise Down Error Status (not supported)                           
 <11:6>  NS              RAZ      NS          NS        Reserved                                                             
 <12>    PTLPS           R/W1C    0x0         0x0       Poisoned TLP Status                                                  
 <13>    FCPES           R/W1C    0x0         0x0       Flow Control Protocol Error Status                                   
 <14>    CTS             R/W1C    0x0         0x0       Completion Timeout Status                                            
 <15>    CAS             R/W1C    0x0         0x0       Completer Abort Status                                               
 <16>    UCS             R/W1C    0x0         0x0       Unexpected Completion Status                                         
 <17>    ROS             R/W1C    0x0         0x0       Receiver Overflow Status                                             
 <18>    MTLPS           R/W1C    0x0         0x0       Malformed TLP Status                                                 
 <19>    ECRCES          R/W1C    0x0         0x0       ECRC Error Status                                                    
 <20>    URES            R/W1C    0x0         0x0       Unsupported Request Error Status                                     
 <31:21> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG066 = Sixty-seventh 32-bits of PCIE type 1 config space 
 *                  (Uncorrectable Error Mask Register) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG066 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     NS              RAZ      NS          NS        Undefined                                                            
                                                         (Was Training Error Mask for PCI Express 1.0a)
 <3:1>   NS              RAZ      NS          NS        Reserved                                                             
 <4>     DLPEM           R/W      0x0         0x0       Data Link Protocol Error Mask                                        
 <5>     SDEM            RO       0x0         0x0       Surprise Down Error Mask (not supported)                             
 <11:6>  NS              RAZ      NS          NS        Reserved                                                             
 <12>    PTLPM           R/W      0x0         0x0       Poisoned TLP Mask                                                    
 <13>    FCPEM           R/W      0x0         0x0       Flow Control Protocol Error Mask                                     
 <14>    CTM             R/W      0x0         0x0       Completion Timeout Mask                                              
 <15>    CAM             R/W      0x0         0x0       Completer Abort Mask                                                 
 <16>    UCM             R/W      0x0         0x0       Unexpected Completion Mask                                           
 <17>    ROM             R/W      0x0         0x0       Receiver Overflow Mask                                               
 <18>    MTLPM           R/W      0x0         0x0       Malformed TLP Mask                                                   
 <19>    ECRCEM          R/W      0x0         0x0       ECRC Error Mask                                                      
 <20>    UREM            R/W      0x0         0x0       Unsupported Request Error Mask                                       
 <31:21> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG067 = Sixty-eighth 32-bits of PCIE type 1 config space 
 *                  (Uncorrectable Error Severity Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG067 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     NS              RAZ      NS          NS        Undefined                                                            
                                                         (Was Training Error Severity for PCI Express 1.0a)
 <3:1>   NS              RAZ      NS          NS        Reserved                                                             
 <4>     DLPES           R/W      0x1         0x1       Data Link Protocol Error Severity                                    
 <5>     SDES            RO       0x1         0x1       Surprise Down Error Severity (not supported)                         
 <11:6>  NS              RAZ      NS          NS        Reserved                                                             
 <12>    PTLPS           R/W      0x0         0x0       Poisoned TLP Severity                                                
 <13>    FCPES           R/W      0x1         0x1       Flow Control Protocol Error Severity                                 
 <14>    CTS             R/W      0x0         0x0       Completion Timeout Severity                                          
 <15>    CAS             R/W      0x0         0x0       Completer Abort Severity                                             
 <16>    UCS             R/W      0x0         0x0       Unexpected Completion Severity                                       
 <17>    ROS             R/W      0x1         0x1       Receiver Overflow Severity                                           
 <18>    MTLPS           R/W      0x1         0x1       Malformed TLP Severity                                               
 <19>    ECRCES          R/W      0x0         0x0       ECRC Error Severity                                                  
 <20>    URES            R/W      0x0         0x0       Unsupported Request Error Severity                                   
 <31:21> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG068 = Sixty-ninth 32-bits of PCIE type 1 config space 
 *                  (Correctable Error Status Register) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG068 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     RES             R/W1C    0x0         0x0       Receiver Error Status                                                
 <5:1>   NS              RAZ      NS          NS        Reserved                                                             
 <6>     BTLPS           R/W1C    0x0         0x0       Bad TLP Status                                                       
 <7>     BDLLPS          R/W1C    0x0         0x0       Bad DLLP Status                                                      
 <8>     RNRS            R/W1C    0x0         0x0       REPLAY_NUM Rollover Status                                           
 <11:9>  NS              RAZ      NS          NS        Reserved                                                             
 <12>    RTTS            R/W1C    0x0         0x0       Replay Timer Timeout Status                                          
 <13>    ANFES           R/W1C    0x0         0x0       Advisory Non-Fatal Error Status                                      
 <31:14> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG069 = Seventieth 32-bits of PCIE type 1 config space 
 *                  (Correctable Error Mask Register) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG069 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     REM             R/W      0x0         0x0       Receiver Error Mask                                                  
 <5:1>   NS              RAZ      NS          NS        Reserved                                                             
 <6>     BTLPM           R/W      0x0         0x0       Bad TLP Mask                                                         
 <7>     BDLLPM          R/W      0x0         0x0       Bad DLLP Mask                                                        
 <8>     RNRM            R/W      0x0         0x0       REPLAY_NUM Rollover Mask                                             
 <11:9>  NS              RAZ      NS          NS        Reserved                                                             
 <12>    RTTM            R/W      0x0         0x0       Replay Timer Timeout Mask                                            
 <13>    ANFEM           R/W      0x1         0x1       Advisory Non-Fatal Error Mask                                        
 <31:14> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG070 = Seventy-first 32-bits of PCIE type 1 config space 
 *                  (Advanced Capabilities and Control Register) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG070 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <4:0>   FEP             RO       0x00        0x0       First Error Pointer                                                  
 <5>     GC              RO       0x1         0x1       ECRC Generation Capability                                           
 <6>     GE              R/W      0x0         0x0       ECRC Generation Enable                                               
 <7>     CC              RO       0x1         0x1       ECRC Check Capable                                                   
 <8>     CE              R/W      0x0         0x0       ECRC Check Enable                                                    
 <31:9>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG071 = Seventy-second 32-bits of PCIE type 1 config space 
 *                  (Header Log Register 1) 
 *
 * The Header Log registers collect the header for the TLP corresponding to a detected error.
 *

     ==============================================================
     PCIERC(0..1)_CFG071 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DWORD1          RO       0x0         0x0       Header Log Register (first DWORD)                                    
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  PCIE_CFG072 = Seventy-third 32-bits of PCIE type 1 config space 
 *                  (Header Log Register 2) 
 *
 * The Header Log registers collect the header for the TLP corresponding to a detected error.
 *

     ==============================================================
     PCIERC(0..1)_CFG072 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DWORD2          RO       0x0         0x0       Header Log Register (second DWORD)                                   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG073 = Seventy-fourth 32-bits of PCIE type 1 config space 
 *                  (Header Log Register 3) 
 *
 * The Header Log registers collect the header for the TLP corresponding to a detected error.
 *

     ==============================================================
     PCIERC(0..1)_CFG073 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DWORD3          RO       0x0         0x0       Header Log Register (third DWORD)                                    
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG074 = Seventy-fifth 32-bits of PCIE type 1 config space 
 *                  (Header Log Register 4) 
 *
 * The Header Log registers collect the header for the TLP corresponding to a detected error.
 *

     ==============================================================
     PCIERC(0..1)_CFG074 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DWORD4          RO       0x0         0x0       Header Log Register (fourth DWORD)                                   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG075 = Seventy-sixth 32-bits of PCIE type 1 config space 
 *                  (Root Error Command Register) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG075 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     CERE            R/W      0x0         0x0       Correctable Error Reporting Enable                                   
 <1>     NFERE           R/W      0x0         0x0       Non-Fatal Error Reporting Enable                                     
 <2>     FERE            R/W      0x0         0x0       Fatal Error Reporting Enable                                         
 <31:3>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG076 = Seventy-seventh 32-bits of PCIE type 1 config space 
 *                  (Root Error Status Register) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG076 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     ECR             R/W1C    0x0         0x0       ERR_COR Received                                                     
 <1>     MULTI_ECR       R/W1C    0x0         0x0       Multiple ERR_COR Received                                            
 <2>     EFNFR           R/W1C    0x0         0x0       ERR_FATAL/NONFATAL Received                                          
 <3>     MULTI_EFNFR     R/W1C    0x0         0x0       Multiple ERR_FATAL/NONFATAL Received                                 
 <4>     FUF             R/W1C    0x0         0x0       First Uncorrectable Fatal                                            
 <5>     NFEMR           R/W1C    0x0         0x0       Non-Fatal Error Messages Received                                    
 <6>     FEMR            R/W1C    0x0         0x0       Fatal Error Messages Received                                        
 <26:7>  NS              RAZ      NS          NS        Reserved                                                             
 <31:27> AEIMN           R/W      0x0         0x0       Advanced Error Interrupt Message Number,                             
                                                         writable through PEM(0..1)_CFG_WR           
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG077 = Seventy-eighth 32-bits of PCIE type 1 config space
 *                  (Error Source Identification Register) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG077 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <15:0>  ECSI            RO       0x0         0x0       ERR_COR Source Identification                                        
 <31:16> EFNFSI          RO       0x0         0x0       ERR_FATAL/NONFATAL Source Identification                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG448 = Four hundred forty-ninth 32-bits of PCIE type 1 config space
 *                  (Ack Latency Timer and Replay Timer Register) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG448 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <15:0>  RTLTL           R/W      0x102F      0x102F    Round Trip Latency Time Limit                                        
                                                         The Ack/Nak latency timer expires when it reaches this limit.
                                                         The default is then updated based on the Negotiated Link Width 
                                                         and Max_Payload_Size.               
 <31:16> RTL             R/W      0x308D      0x308D    Replay Time Limit                                                    
                                                         The replay timer expires when it reaches this limit. The PCI 
                                                         Express bus initiates a replay upon reception of a Nak or when 
                                                         the replay timer expires.
                                                         The default is then updated based on the Negotiated Link Width 
                                                         and Max_Payload_Size.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG449 = Four hundred fiftieth 32-bits of PCIE type 1 config space
 *                  (Other Message Register) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG449 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  OMR             R/W      0xFFFFFFFF  NS        Other Message Register                                               
                                                         This register can be used for either of the following purposes:
                                                         o To send a specific PCI Express Message, the application 
                                                           writes the payload of the Message into this register, then 
                                                           sets bit 0 of the Port Link Control Register to send the 
                                                           Message.
                                                         o To store a corruption pattern for corrupting the LCRC on all 
                                                           TLPs, the application places a 32-bit corruption pattern into 
                                                           this register and enables this function by setting bit 25 of 
                                                           the Port Link Control Register. When enabled, the transmit 
                                                           LCRC result is XOR'd with this pattern before inserting 
                                                           it into the packet.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG450 = Four hundred fifty-first 32-bits of PCIE type 1 config space
 *                  (Port Force Link Register) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG450 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   LINK_NUM        R/W      0x4         0x4       Link Number                                                          
 <14:8>  NS              RAZ      NS          NS        Reserved                                                             
 <15>    FORCE_LINK      R/W      0x0         0x0       Force Link                                                           
                                                         Forces the Link to the state specified by the Link State field. 
                                                         The Force Link pulse will trigger Link re-negotiation.
                                                         * As the The Force Link is a pulse, writing a 1 to it does 
                                                           trigger the forced link state event, even thought reading it 
                                                           always returns a 0. 
 <21:16> LINK_STATE      R/W      0x00        0x0       Link State                                                           
                                                         The Link state that the PCI Express Bus will be forced to 
                                                         when bit 15 (Force Link) is set.
                                                         State encoding:
                                                         o DETECT_QUIET              00h
                                                         o DETECT_ACT                01h
                                                         o POLL_ACTIVE               02h
                                                         o POLL_COMPLIANCE           03h
                                                         o POLL_CONFIG               04h
                                                         o PRE_DETECT_QUIET          05h
                                                         o DETECT_WAIT               06h
                                                         o CFG_LINKWD_START          07h
                                                         o CFG_LINKWD_ACEPT          08h
                                                         o CFG_LANENUM_WAIT          09h
                                                         o CFG_LANENUM_ACEPT         0Ah
                                                         o CFG_COMPLETE              0Bh
                                                         o CFG_IDLE                  0Ch
                                                         o RCVRY_LOCK                0Dh
                                                         o RCVRY_SPEED               0Eh
                                                         o RCVRY_RCVRCFG             0Fh
                                                         o RCVRY_IDLE                10h
                                                         o L0                        11h
                                                         o L0S                       12h
                                                         o L123_SEND_EIDLE           13h
                                                         o L1_IDLE                   14h
                                                         o L2_IDLE                   15h
                                                         o L2_WAKE                   16h
                                                         o DISABLED_ENTRY            17h
                                                         o DISABLED_IDLE             18h
                                                         o DISABLED                  19h
                                                         o LPBK_ENTRY                1Ah
                                                         o LPBK_ACTIVE               1Bh
                                                         o LPBK_EXIT                 1Ch
                                                         o LPBK_EXIT_TIMEOUT         1Dh
                                                         o HOT_RESET_ENTRY           1Eh
                                                         o HOT_RESET                 1Fh
 <23:22> NS              RAZ      NS          NS        Reserved                                                             
 <31:24> LPEC            RO       0x7         0x7       Low Power Entrance Count                                             
                                                         The Power Management state will wait for this many clock cycles 
                                                         for the associated completion of a CfgWr to PCIE_CFG017 register
							 Power State (PS) field register to go low-power. This register 
                                                         is intended for applications that do not let the PCI Express 
                                                         bus handle a completion for configuration request to the 
                                                         Power Management Control and Status (PCIE_CFG017) register.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG451 = Four hundred fifty-second 32-bits of PCIE type 1 config space
 *                  (Ack Frequency Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG451 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   ACK_FREQ        R/W      0x0         0x0       Ack Frequency                                                        
                                                         The number of pending Ack's specified here (up to 255) before 
                                                         sending an Ack.
 <15:8>  N_FTS           R/W      0x80        0x80      N_FTS                                                                
                                                         The number of Fast Training Sequence ordered sets to be 
                                                         transmitted when transitioning from L0s to L0. The maximum 
                                                         number of FTS ordered-sets that a component can request is 255.
                                                         Note: The core does not support a value of zero; a value of 
                                                               zero can cause the LTSSM to go into the recovery state 
                                                               when exiting from L0s.
 <23:16> N_FTS_CC        R/W      0x80        0x80      N_FTS when common clock is used.                                     
                                                         The number of Fast Training Sequence ordered sets to be 
                                                         transmitted when transitioning from L0s to L0. The maximum 
                                                         number of FTS ordered-sets that a component can request is 255.
                                                          Note: The core does not support a value of zero; a value of 
                                                                zero can cause the LTSSM to go into the recovery state 
                                                                when exiting from L0s.
 <26:24> L0EL            R/W      0x3         0x3       L0s Entrance Latency                                                 
                                                         Values correspond to:
                                                         o 000: 1 ms
                                                         o 001: 2 ms
                                                         o 010: 3 ms
                                                         o 011: 4 ms
                                                         o 100: 5 ms
                                                         o 101: 6 ms
                                                         o 110 or 111: 7 ms
 <29:27> L1EL            R/W      0x3         0x3       L1 Entrance Latency                                                  
                                                         Values correspond to:
                                                         o 000: 1 ms
                                                         o 001: 2 ms
                                                         o 010: 4 ms
                                                         o 011: 8 ms
                                                         o 100: 16 ms
                                                         o 101: 32 ms
                                                         o 110 or 111: 64 ms
 <31:30> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG452 = Four hundred fifty-third 32-bits of PCIE type 1 config space
 *                  (Port Link Control Register) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG452 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     OMR             R/W      0x0         0x0       Other Message Request                                                
                                                         When software writes a `1' to this bit, the PCI Express bus
                                                         transmits the Message contained in the Other Message register.
 <1>     SD              R/W      0x0         0x0       Scramble Disable                                                     
                                                         Turns off data scrambling.
 <2>     LE              R/W      0x0         0x0       Loopback Enable                                                      
                                                         Initiate loopback mode as a master. On a 0->1 transition,
                                                         the PCIe core sends TS ordered sets with the loopback bit set
                                                         to cause the link partner to enter into loopback mode as a
                                                         slave. Normal transmission is not possible when LE=1. To exit
                                                         loopback mode, take the link through a reset sequence.
 <3>     RA              R/W      0x0         0x0       Reset Assert                                                         
                                                         Triggers a recovery and forces the LTSSM to the Hot Reset 
                                                         state (downstream port only).
 <4>     NS              RAZ      NS          NS        Reserved                                                             
 <5>     DLLLE           R/W      0x1         0x1       DLL Link Enable                                                      
                                                         Enables Link initialization. If DLL Link Enable = 0, the PCI 
                                                         Express bus does not transmit InitFC DLLPs and does not
                                                         establish a Link.
 <6>     NS              RAZ      NS          NS        Reserved                                                             
 <7>     FLM             R/W      0x0         0x0       Fast Link Mode                                                       
                                                         Sets all internal timers to fast mode for simulation purposes.
 <11:8>  NS              RO       0x1         0x1       Reserved                                                             
 <15:12> NS              RAZ      NS          NS        Reserved                                                             
 <21:16> LME             R/W      0xF         0x7       Link Mode Enable                                                     
                                                         o 000001: x1
                                                         o 000011: x2
                                                         o 000111: x4
                                                         o 001111: x8  (not supported)
                                                         o 011111: x16 (not supported)
                                                         o 111111: x32 (not supported)
                                                         This field indicates the MAXIMUM number of lanes supported
                                                         by the PCIe port. The value can be set less than 0x7
                                                         to limit the number of lanes the PCIe will attempt to use.
                                                         The programming of this field needs to be done by SW BEFORE
                                                         enabling the link. See also MLW.
                                                         (Note: The value of this field does NOT indicate the number
                                                          of lanes in use by the PCIe. LME sets the max number of lanes
                                                          in the PCIe core that COULD be used. As per the PCIe specs,
							  the PCIe core can negotiate a smaller link width, so all
							  of x4, x2, and x1 are supported when LME=0x7,
							  for example.)
<24:22> NS             RAZ      NS          NS        Reserved                                                              
<25>    ECCRC          R/W      0x0         0x0       Enable Corrupted CRC                                                  
                                                        Causes corrupt LCRC for TLPs when set, 
                                                        using the pattern contained in the Other Message register.
                                                        This is a test feature, not to be used in normal operation.
 <31:26> NS             RAZ      NS          NS        Reserved                                                              
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG453 = Four hundred fifty-fourth 32-bits of PCIE type 1 config space
 *                  (Lane Skew Register) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG453 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <23:0>  ILST            R/W      0x000000    0x0       Insert Lane Skew for Transmit (not supported for x16)                
                                                         Causes skew between lanes for test purposes. There are three 
                                                         bits per Lane. The value is in units of one symbol time. For 
                                                         example, the value 010b for a Lane forces a skew of two symbol 
                                                         times for that Lane. The maximum skew value for any Lane is 5 
                                                         symbol times.
 <24>    FCD             R/W      0x0         0x0       Flow Control Disable                                                 
                                                         Prevents the PCI Express bus from sending FC DLLPs.
 <25>    ACK_NAK         R/W      0x0         0x0       Ack/Nak Disable                                                      
                                                         Prevents the PCI Express bus from sending Ack and Nak DLLPs.
 <30:26> NS              RAZ      NS          NS        Reserved                                                             
 <31>    DLLD            R/W      0x0         0x0       Disable Lane-to-Lane Deskew                                          
                                                         Disables the internal Lane-to-Lane deskew logic.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG454 = Four hundred fifty-fifth 32-bits of PCIE type 1 config space
 *                  (Symbol Number Register) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG454 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>   NTSS            R/W      0xA         0xA       Number of TS Symbols                                                 
                                                         Sets the number of TS identifier symbols that are sent in TS1 
                                                         and TS2 ordered sets.
 <7:4>   NS              RO       NS          NS        Reserved                                                             
 <10:8>  NSKPS           R/W      0x3         0x3       Number of SKP Symbols                                                
 <13:11> NS              RAZ      NS          NS        Reserved                                                             
 <18:14> TMRT            R/W      0x8         0x8       Timer Modifier for Replay Timer                                      
                                                         Increases the timer value for the replay timer, in increments 
                                                         of 64 clock cycles.
 <23:19> TMANLT          R/W      0x0         0x0       Timer Modifier for Ack/Nak Latency Timer                             
                                                         Increases the timer value for the Ack/Nak latency timer, in 
                                                         increments of 64 clock cycles.
 <28:24> TMFCWT          R/W      0x0         0x0       Timer Modifier for Flow Control Watchdog Timer                       
                                                         Increases the timer value for the Flow Control watchdog timer, 
                                                         in increments of 16 clock cycles.
 <31:29> NS              RO       NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG455 = Four hundred fifty-sixth 32-bits of PCIE type 1 config space
 *                  (Symbol Timer Register/Filter Mask Register 1)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG455 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <10:0>  SKPIV           R/W      0x500       0x500     SKP Interval Value                                                   
 <14:11> NS              RAZ      NS          NS        Reserved                                                             
 <15>    DFCWT           R/W      0x0         0x0       Disable FC Watchdog Timer                                            
 <16>    M_FUN           R/W      0x0         0x0       Mask function                                                        
 <17>    M_POIS_FILT     R/W      0x1         0x1       Mask poisoned TLP filtering                                          
 <18>    M_BAR_MATCH     R/W      0x0         0x0       Mask BAR match filtering                                             
 <19>    M_CFG1_FILT     R/W      0x0         0x0       Mask Type 1 Configuration Request filtering                          
 <20>    M_LK_FILT       R/W      0x0         0x0       Mask Locked Request filtering                                        
 <21>    M_CPL_TAG_ERR   R/W      0x0         0x0       Mask Tag error rules for received Completions                        
 <22>    M_CPL_RID_ERR   R/W      0x0         0x0       Mask Requester ID mismatch error for received Completions            
 <23>    M_CPL_FUN_ERR   R/W      0x0         0x0       Mask function mismatch error for received Completions                
 <24>    M_CPL_TC_ERR    R/W      0x0         0x0       Mask Traffic Class mismatch error for received Completions           
 <25>    M_CPL_ATTR_ERR  R/W      0x0         0x0       Mask Attributes mismatch error for received Completions              
 <26>    M_CPL_LEN_ERR   R/W      0x0         0x0       Mask Length mismatch error for received Completions                  
 <27>    M_ECRC_FILT     R/W      0x0         0x0       Mask ECRC error filtering                                            
 <28>    M_CPL_ECRC_FILT R/W      0x0         0x0       Mask ECRC error filtering for Completions                            
 <29>    MSG_CTRL        R/W      0x0         0x0       Message Control                                                      
                                                         The application must not change this field.
 <30>    M_IO_FILT       R/W      0x0         0x0       Mask filtering of received I/O Requests (RC mode only)               
 <31>    M_CFG0_FILT     R/W      0x0         0x0       Mask filtering of received Configuration Requests (RC mode only)     
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG456 = Four hundred fifty-seventh 32-bits of PCIE type 1 config space
 *                  (Filter Mask Register 2)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG456 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:2>  NS              RAZ      NS          NS        Reserved                                                             
 <1>     M_VEND1_DRP     R/W      0x0         0x0       Mask Vendor MSG Type 1 dropped silently                              
 <0>     M_VEND0_DRP     R/W      0x0         0x0       Mask Vendor MSG Type 0 dropped with UR error reporting.              
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG458 = Four hundred fifty-ninth 32-bits of PCIE type 1 config space
 *                  (Debug Register 0) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG458 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DBG_INFO_L32    RO       0x0         0x0       The value on cxpl_debug_info[31:0].                                  
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG459 = Four hundred sixtieth 32-bits of PCIE type 1 config space
 *                  (Debug Register 1) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG459 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DBG_INFO_U32    RO       0x0         0x0       The value on cxpl_debug_info[63:32].                                 
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG460 = Four hundred sixty-first 32-bits of PCIE type 1 config space
 *                  (Transmit Posted FC Credit Status)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG460 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  TPDFCC          RO       0x0         0x0       Transmit Posted Data FC Credits                                      
                                                         The Posted Data credits advertised by the receiver at the other 
                                                         end of the Link, updated with each UpdateFC DLLP.
 <19:12> TPHFCC          RO       0x0         0x0       Transmit Posted Header FC Credits                                    
                                                         The Posted Header credits advertised by the receiver at the 
                                                         other end of the Link, updated with each UpdateFC DLLP.
 <31:20> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG461 = Four hundred sixty-second 32-bits of PCIE type 1 config space
 *                  (Transmit Non-Posted FC Credit Status) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG461 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  TCDFCC          RO       0x0         0x0       Transmit Non-Posted Data FC Credits                                  
                                                         The Non-Posted Data credits advertised by the receiver at the 
                                                         other end of the Link, updated with each UpdateFC DLLP.
 <19:12> TCHFCC          RO       0x0         0x0       Transmit Non-Posted Header FC Credits                                
                                                         The Non-Posted Header credits advertised by the receiver at the 
                                                         other end of the Link, updated with each UpdateFC DLLP.
 <31:20> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG462 = Four hundred sixty-third 32-bits of PCIE type 1 config space
 *                  (Transmit Completion FC Credit Status )
 *
 *  
 *

     ==============================================================
     PCIERC(0..1)_CFG462 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  TCDFCC          RO       0x0         0x0       Transmit Completion Data FC Credits                                  
                                                         The Completion Data credits advertised by the receiver at the 
                                                         other end of the Link, updated with each UpdateFC DLLP.
 <19:12> TCHFCC          RO       0x0         0x0       Transmit Completion Header FC Credits                                
                                                         The Completion Header credits advertised by the receiver at the 
                                                         other end of the Link, updated with each UpdateFC DLLP.
 <31:20> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG463 = Four hundred sixty-fourth 32-bits of PCIE type 1 config space
 *                  (Queue Status) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG463 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     RTLPFCCNR       RO       0x0         0x0       Received TLP FC Credits Not Returned                                 
                                                         Indicates that the PCI Express bus has sent a TLP but has not 
                                                         yet received an UpdateFC DLLP indicating that the credits for 
							 that TLP have been restored by the receiver at the other end of 
                                                         the Link.
 <1>     TRBNE           RO       0x0         0x0       Transmit Retry Buffer Not Empty                                      
                                                         Indicates that there is data in the transmit retry buffer.
 <2>     RQNE            RO       0x0         0x0       Received Queue Not Empty                                             
                                                         Indicates there is data in one or more of the receive buffers.
 <31:3>  NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG464 = Four hundred sixty-fifth 32-bits of PCIE type 1 config space
 *                  (VC Transmit Arbitration Register 1)
 *
 *

     ==============================================================
     PCIERC(0..1)_CFG464 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   WRR_VC0         RO       0xF         0xF       WRR Weight for VC0                                                   
 <15:8>  WRR_VC1         RO       0x0         0x0       WRR Weight for VC1                                                   
 <23:16> WRR_VC2         RO       0x0         0x0       WRR Weight for VC2                                                   
 <31:24> WRR_VC3         RO       0x0         0x0       WRR Weight for VC3                                                   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG465 = Four hundred sixty-sixth 32-bits of config space
 *                  (VC Transmit Arbitration Register 2)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG465 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   WRR_VC4         RO       0x0         0x0       WRR Weight for VC4                                                   
 <15:8>  WRR_VC5         RO       0x0         0x0       WRR Weight for VC5                                                   
 <23:16> WRR_VC6         RO       0x0         0x0       WRR Weight for VC6                                                   
 <31:24> WRR_VC7         RO       0x0         0x0       WRR Weight for VC7                                                   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG466 = Four hundred sixty-seventh 32-bits of PCIE type 1 config space
 *                  (VC0 Posted Receive Queue Control)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG466 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  DATA_CREDITS    R/W      0x080       0x80      VC0 Posted Data Credits                                              
                                                         The number of initial Posted data credits for VC0, used for all 
                                                         receive queue buffer configurations.
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <19:12> HEADER_CREDITS  R/W      0x60        0x60      VC0 Posted Header Credits                                            
                                                         The number of initial Posted header credits for VC0, used for 
                                                         all receive queue buffer configurations.
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <20>    NS              RAZ      NS          NS        Reserved                                                             
 <23:21> QUEUE_MODE      R/W      0x2         0x2       VC0 Posted TLP Queue Mode                                            
                                                         The operating mode of the Posted receive queue for VC0, used 
                                                         only in the segmented-buffer configuration, writable through
                                                         PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field. 
                                                         Only one bit can be set at a time:
                                                         o Bit 23: Bypass
                                                         o Bit 22: Cut-through
                                                         o Bit 21: Store-and-forward
 <29:24> NS              RAZ      NS          NS        Reserved                                                             
 <30>    TYPE_ORDERING   R/W      0x1         0x1       TLP Type Ordering for VC0                                            
                                                         Determines the TLP type ordering rule for VC0 receive queues, 
                                                         used only in the segmented-buffer configuration, writable 
                                                         through PEM(0..1)_CFG_WR:
                                                         o 1: Ordering of received TLPs follows the rules in 
                                                              PCI Express Base Specification
                                                         o 0: Strict ordering for received TLPs: Posted, then 
                                                              Completion, then Non-Posted
                                                         However, the application must not change this field.
 <31>    RX_QUEUE_ORDER  R/W      0x0         0x0       VC Ordering for Receive Queues                                       
                                                         Determines the VC ordering rule for the receive queues, used 
                                                         only in the segmented-buffer configuration, 
                                                         writable through PEM(0..1)_CFG_WR:
                                                         o 1: Strict ordering, higher numbered VCs have higher priority
                                                         o 0: Round robin
                                                         However, the application must not change this field.
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG467 = Four hundred sixty-eighth 32-bits of PCIE type 1 config space
 *                  (VC0 Non-Posted Receive Queue Control)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG467 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  DATA_CREDITS    R/W      0x020       0x020      VC0 Non-Posted Data Credits                                          
                                                         The number of initial Non-Posted data credits for VC0, used for 
                                                         all receive queue buffer configurations.
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <19:12> HEADER_CREDITS  R/W      0x20        0x20      VC0 Non-Posted Header Credits                                        
                                                         The number of initial Non-Posted header credits for VC0, used 
                                                         for all receive queue buffer configurations.
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <20>    NS              RAZ      NS          NS        Reserved                                                             
 <23:21> QUEUE_MODE      R/W      0x2         0x2       VC0 Non-Posted TLP Queue Mode                                        
                                                         The operating mode of the Non-Posted receive queue for VC0, 
                                                         used only in the segmented-buffer configuration, writable 
                                                         through PEM(0..1)_CFG_WR.
                                                         Only one bit can be set at a time:
                                                         o Bit 23: Bypass
                                                         o Bit 22: Cut-through
                                                         o Bit 21: Store-and-forward
                                                         However, the application must not change this field.
 <31:24> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG468 = Four hundred sixty-ninth 32-bits of PCIE type 1 config space
 *                  (VC0 Completion Receive Queue Control)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG468 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  DATA_CREDITS    R/W      0x080       0x080     VC0 Completion Data Credits                                          
                                                         The number of initial Completion data credits for VC0, used for 
                                                         all receive queue buffer configurations.
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <19:12> HEADER_CREDITS  R/W      0x60        0x60      VC0 Completion Header Credits                                        
                                                         The number of initial Completion header credits for VC0, used 
                                                         for all receive queue buffer configurations.
                                                         This field is writable through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <20>    NS              RAZ      NS          NS        Reserved                                                             
 <23:21> QUEUE_MODE      R/W      0x2         0x2       VC0 Completion TLP Queue Mode                                        
                                                         The operating mode of the Completion receive queue for VC0, 
                                                         used only in the segmented-buffer configuration, writable 
                                                         through PEM(0..1)_CFG_WR.
                                                         Only one bit can be set at a time:
                                                         o Bit 23: Bypass
                                                         o Bit 22: Cut-through
                                                         o Bit 21: Store-and-forward
                                                         However, the application must not change this field.
 <31:24> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG490 = Four hundred ninety-first 32-bits of PCIE type 1 config space
 *                  (VC0 Posted Buffer Depth)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG490 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <13:0>  DATA_DEPTH      R/W      0x0188      0x188     VC0 Posted Data Queue Depth                                          
                                                         Sets the number of entries in the Posted data queue for VC0 
                                                         when using the segmented-buffer configuration, writable 
                                                         through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <15:14> NS              RAZ      NS          NS        Reserved                                                             
 <25:16> HEADER_DEPTH    R/W      0x066       0x66      VC0 Posted Header Queue Depth                                        
                                                         Sets the number of entries in the Posted header queue for VC0 
                                                         when using the segmented-buffer configuration, writable through 
                                                         PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <31:26> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG491 = Four hundred ninety-second 32-bits of PCIE type 1 config space
 *                  (VC0 Non-Posted Buffer Depth)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG491 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <13:0>  DATA_DEPTH      R/W      0x0088      0x88      VC0 Non-Posted Data Queue Depth                                      
                                                         Sets the number of entries in the Non-Posted data queue for VC0 
                                                         when using the segmented-buffer configuration, writable 
                                                         through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <15:14> NS              RAZ      NS          NS        Reserved                                                             
 <25:16> HEADER_DEPTH    R/W      0x026       0x26      VC0 Non-Posted Header Queue Depth                                    
                                                         Sets the number of entries in the Non-Posted header queue for 
                                                         VC0 when using the segmented-buffer configuration, writable 
                                                         through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <31:26> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG492 = Four hundred ninety-third 32-bits of PCIE type 1 config space
 *                  (VC0 Completion Buffer Depth)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG492 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <13:0>  DATA_DEPTH      R/W      0x0188      0x188     VC0 Completion Data Queue Depth                                      
                                                         Sets the number of entries in the Completion data queue for VC0 
                                                         when using the segmented-buffer configuration, writable 
                                                         through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <15:14> NS              RAZ      NS          NS        Reserved                                                             
 <25:16> HEADER_DEPTH    R/W      0x066       0x66      VC0 Completion Header Queue Depth                                    
                                                         Sets the number of entries in the Completion header queue for 
                                                         VC0 when using the segmented-buffer configuration, writable 
                                                         through PEM(0..1)_CFG_WR.
                                                         However, the application must not change this field.
 <31:26> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG515 = Five hundred sixteenth 32-bits of PCIE type 1 config space
 *                  (Port Logic Register (Gen2)) 
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG515 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   N_FTS           R/W      0x80        0x80      N_FTS                                                                
                                                         Sets the Number of Fast Training Sequences (N_FTS) that 
                                                         the core advertises as its N_FTS during GEN2 Link training. 
                                                         This value is used to inform the Link partner about the PHYs
                                                         ability to recover synchronization after a low power state.
                                                         Note: Do not set N_FTS to zero; doing so can cause the 
                                                               LTSSM to go into the recovery state when exiting from 
                                                               L0s.
 <16:8>  LE              R/W      0x8         0x8       Lane Enable                                                          
                                                         Indicates the number of lanes to check for exit from electrical 
                                                         idle in Polling.Active and Polling.Compliance. 1 = x1, 2 = x2, 
                                                         etc. Used to limit the maximum link width to ignore broken 
                                                         lanes that detect a receiver, but will not exit electrical 
                                                         idle and 
                                                         would otherwise prevent a valid link from being configured.
 <17>    DSC             R/W      0x0         0x0       Directed Speed Change                                                
                                                         Indicates to the LTSSM whether or not to initiate a speed 
                                                         change.
 <18>    CPYTS           R/W      0x0         0x0       Config PHY Tx Swing                                                  
                                                         Indicates the voltage level the PHY should drive. When set to
                                                         1, indicates Full Swing. When set to 0, indicates Low Swing
 <19>    CTCRB           R/W      0x0         0x0       Config Tx Compliance Receive Bit                                     
                                                         When set to 1, signals LTSSM to transmit TS ordered sets 
                                                         with the compliance receive bit assert (equal to 1).
 <20>    S_D_E           R/W      0x0         0x0       SEL_DE_EMPHASIS                                                      
                                                         Used to set the de-emphasis level for upstream ports.
 <31:21> NS              RAZ      NS          NS        Reserved                                                             
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG516 = Five hundred seventeenth 32-bits of PCIE type 1 config space
 *                  (PHY Status Register) 
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG516 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PHY_STAT        RO       0x0         0x0       PHY Status                                                           
----------------------------------------------------------------------------------------------------
===

 *
 *                  PCIE_CFG517 = Five hundred eighteenth 32-bits of PCIE type 1 config space
 *                  (PHY Control Register)
 *
 * 
 *

     ==============================================================
     PCIERC(0..1)_CFG517 Type=PCICONFIGRC
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PHY_CTRL        R/W      0x0         0x0       PHY Control                                                          
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_INT_REG = Interrupt Register
 *

     ==============================================================
     AGL_GMX_RX(0..1)_INT_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:20> NS       RAZ      NS          NS        Reserved				            |   
 <19>    PAUSE_DRP R/W1C   0x0         0         Pause packet was dropped due to full GMX RX FIFO   |	
 <18>    PHY_DUPX R/W1C    0x0         0         Change in the RGMII inbound LinkDuplex		    |		  NS
 <17>    PHY_SPD  R/W1C    0x0         0         Change in the RGMII inbound LinkSpeed 		    |		  NS
 <16>    PHY_LINK R/W1C    0x0         0         Change in the RGMII inbound LinkStatus		    |		  NS
 <15>    IFGERR   R/W1C    0x0         0         Interframe Gap Violation			    |	
						  Does not necessarily indicate a failure	    |
 <14>    COLDET   R/W1C    0x0         0         Collision Detection				    |	
 <13>    FALERR   R/W1C    0x0         0         False carrier error or extend error after slottime |	
 <12>    RSVERR   R/W1C    0x0         0         Packet reserved opcodes			    |	
 <11>    PCTERR   R/W1C    0x0         0         Bad Preamble / Protocol			    |	
 <10>    OVRERR   R/W1C    0x0         0         Internal Data Aggregation Overflow		    |	
						  This interrupt should never assert		    |
 <9>     NIBERR   R/W1C    0x0         0         Nibble error (hi_nibble != lo_nibble)		    |		  NS
 <8>     SKPERR   R/W1C    0x0         0         Skipper error					    |	
 <7>     RCVERR   R/W1C    0x0         0         Frame was received with Packet Data reception error|	
 <6>     LENERR   R/W1C    0x0         0         Frame was received with length error		    |	
 <5>     ALNERR   R/W1C    0x0         0         Frame was received with an alignment error	    |	
 <4>     FCSERR   R/W1C    0x0         0         Frame was received with FCS/CRC error		    |	
 <3>     JABBER   R/W1C    0x0         0         Frame was received with length > sys_length	    |	
 <2>     MAXERR   R/W1C    0x0         0         Frame was received with length > max_length	    |	
 <1>     CAREXT   R/W1C    0x0         0         Carrier extend error				    |	
 <0>     MINERR   R/W1C    0x0         0         Frame was received with length < min_length	    |	

Notes:

(1) exceptions will only be raised to the control processor if the
    corresponding bit in the AGL_GMX_RX_INT_EN register is set.

(2) exception conditions 10:0 can also set the rcv/opcode in the received
    packet's workQ entry.  The AGL_GMX_RX_FRM_CHK register provides a bit mask
    for configuring which conditions set the error.

(3) in half duplex operation, the expectation is that collisions will appear
    as MINERRs.

(4) JABBER - An RX Jabber error indicates that a packet was received which
	     is longer than the maximum allowed packet as defined by the
	     system.  GMX will truncate the packet at the JABBER count.
	     Failure to do so could lead to system instabilty.

(6) MAXERR - for untagged frames, the total frame DA+SA+TL+DATA+PAD+FCS >
             AGL_GMX_RX_FRM_MAX.  For tagged frames, DA+SA+VLAN+TL+DATA+PAD+FCS
             > AGL_GMX_RX_FRM_MAX + 4*VLAN_VAL + 4*VLAN_STACKED.

(7) MINERR - total frame DA+SA+TL+DATA+PAD+FCS < AGL_GMX_RX_FRM_MIN.

(8) ALNERR - Indicates that the packet received was not an integer number of
	     bytes.  If FCS checking is enabled, ALNERR will only assert if
	     the FCS is bad.  If FCS checking is disabled, ALNERR will
	     assert in all non-integer frame cases.

(9) Collisions - Collisions can only occur in half-duplex mode.  A collision
                 is assumed by the receiver when the received
		 frame < AGL_GMX_RX_FRM_MIN - this is normally a MINERR

(A) LENERR - Length errors occur when the received packet does not match the
	     length field.  LENERR is only checked for packets between 64
	     and 1500 bytes.  For untagged frames, the length must exact
	     match.  For tagged frames the length or length+4 must match.

(B) PCTERR - checks that the frame begins with a valid PREAMBLE sequence.
             Does not check the number of PREAMBLE cycles.

(C) OVRERR - Not to be included in the HRM

	     OVRERR is an architectural assertion check internal to GMX to
	     make sure no assumption was violated.  In a correctly operating
	     system, this interrupt can never fire.

	     GMX has an internal arbiter which selects which of 4 ports to
	     buffer in the main RX FIFO.  If we normally buffer 8 bytes,
	     then each port will typically push a tick every 8 cycles - if
	     the packet interface is going as fast as possible.  If there
	     are four ports, they push every two cycles.  So that's the
	     assumption.  That the inbound module will always be able to
	     consume the tick before another is produced.  If that doesn't
	     happen - that's when OVRERR will assert.

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 * 
 * AGL_GMX_RX_INT_EN = Interrupt Enable
 *

     ==============================================================
     AGL_GMX_RX(0..1)_INT_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:20> NS       RAZ      NS          NS        Reserved				            |   
 <19>    PAUSE_DRP R/W     0x0         0         Pause packet was dropped due to full GMX RX FIFO   |	
 <18>    PHY_DUPX R/W      0x0         0         Change in the RMGII inbound LinkDuplex		    |		  NS
 <17>    PHY_SPD  R/W      0x0         0         Change in the RMGII inbound LinkSpeed 		    |		  NS
 <16>    PHY_LINK R/W      0x0         0         Change in the RMGII inbound LinkStatus		    |		  NS
 <15>    IFGERR   R/W      0x0         0         Interframe Gap Violation			    |	
 <14>    COLDET   R/W      0x0         0         Collision Detection				    |	
 <13>    FALERR   R/W      0x0         0         False carrier error or extend error after slottime |	
 <12>    RSVERR   R/W      0x0         0         Packet reserved opcodes			    |	
 <11>    PCTERR   R/W      0x0         0         Bad Preamble / Protocol			    |	
 <10>    OVRERR   R/W      0x0         0         Internal Data Aggregation Overflow		    |	
 <9>     NIBERR   R/W      0x0         0         Nibble error (hi_nibble != lo_nibble)		    |		  NS
 <8>     SKPERR   R/W      0x0         0         Skipper error					    |	
 <7>     RCVERR   R/W      0x0         0         Frame was received with RMGII Data reception error |	
 <6>     LENERR   R/W      0x0         0         Frame was received with length error		    |	
 <5>     ALNERR   R/W      0x0         0         Frame was received with an alignment error	    |	
 <4>     FCSERR   R/W      0x0         0         Frame was received with FCS/CRC error		    |	
 <3>     JABBER   R/W      0x0         0         Frame was received with length > sys_length	    |	
 <2>     MAXERR   R/W      0x0         0         Frame was received with length > max_length	    |	
 <1>     CAREXT   R/W      0x0         0         Carrier extend error				    |	
 <0>     MINERR   R/W      0x0         0         Frame was received with length < min_length	    |	

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_PRT_CFG = Port description
 *

     ==============================================================
     AGL_GMX_PRT(0..1)_CFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:14> NS        RAZ     NS          NS        Reserved				            |   
 <13>    TX_IDLE   RO      0x1         NS        TX Machine is idle				    |	
 <12>    RX_IDLE   RO      0x1         NS        RX Machine is idle				    |	
 <11:9>  NS        RAZ     NS          NS        Reserved				            |   
 <8>     SPEED_MSB R/W     0x0         NS        Link Speed MSB [SPEED_MSB:SPEED]		    |   
						  10 = 10Mbs operation				    |
						  00 = 100Mbs operation				    |
						  01 = 1000Mbs operation			    |
						  11 = Reserved					    |
 <7>    NS         RAZ     NS          NS        Reserved				            |   
 <6>    BURST	   R/W     0x0         NS	 Half-Duplex Burst Enable			    |   
						  Only valid for 1000Mbs half-duplex operation	    |
						   0 = burst length of 0x2000 (halfdup / 1000Mbs)   |
						   1 = burst length of 0x0    (all other modes)	    |
 <5>    TX_EN	   R/W     0x0         NS 	 Port enable.  Must be set for Octane to send       |	
						  RMGII traffic.   When this bit clear on a given   |
						  port, then all packet cycles will appear as	    |
						  inter-frame cycles.				    |
 <4>    RX_EN	   R/W     0x0         NS 	 Port enable.  Must be set for Octane to receive    |	
						  RMGII traffic.  When this bit clear on a given    |
						  port, then the all packet cycles will appear as   |
						  inter-frame cycles.				    |
 <3>    SLOTTIME   R/W     0x1         NS	 Slot Time for Half-Duplex operation		    |   
						  0 = 512 bitimes (10/100Mbs operation)		    |
						  1 = 4096 bitimes (1000Mbs operation)		    |
 <2>    DUPLEX     R/W     0x1         NS        Duplex    					    |   
						  0 = Half Duplex (collisions/extentions/bursts)    |
						  1 = Full Duplex				    |
 <1>    SPEED      R/W     0x1         NS        Link Speed LSB [SPEED_MSB:SPEED]		    |   
						  10 = 10Mbs operation				    |
						  00 = 100Mbs operation				    |
						  01 = 1000Mbs operation			    |
						  11 = Reserved					    |
 <0>    EN         R/W     0x0         NS        Link Enable                                        |   
						  When EN is clear, packets will not be received    |
						  or transmitted (including PAUSE and JAM packets). |
						  If EN is cleared while a packet is currently	    |
						  being received or transmitted, the packet will    |
						  be allowed to complete before the bus is idled.   |
						  On the RX side, subsequent packets in a burst	    |
						  will be ignored.				    |

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_FRM_CTL = Frame Control
 *

     ==============================================================
     AGL_GMX_RX(0..1)_FRM_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:13> NS       RAZ      NS          NS        Reserved				            |   
 <12>    PTP_MODE R/W      0x0         0         Timestamp mode					    |   
						  When PTP_MODE is set, a 64-bit timestamp will be  |
						  prepended to every incoming packet. The timestamp |
						  bytes are added to the packet in such a way as to |
						  not modify the packet's receive byte count.  This |
						  implies that the AGL_GMX_RX_JABBER,		    |
						  AGL_GMX_RX_FRM_MIN, AGL_GMX_RX_FRM_MAX,	    |
						  AGL_GMX_RX_DECISION, AGL_GMX_RX_UDD_SKP, and the  |
						  AGL_GMX_RX_STATS_* do not require any adjustment  |
						  as they operate on the received packet size.	    |
						  If PTP_MODE=1 and PRE_CHK=1, PRE_STRP must be 1.  |
 <11>    NS       RAZ      NS          NS        Reserved				            |   
 <10>    NULL_DIS R/W      0x0         0         When set, do not modify the MOD bits on NULL ticks |	
						  due to PARITAL packets			    |
 <9>     PRE_ALIGN R/W	   0x1	       1	 When set, PREAMBLE parser aligns the the SFD byte  |	
						  regardless of the number of previous PREAMBLE	    |
						  nibbles.  In this mode, PRE_STRP should be set to |
						  account for the variable nature of the PREAMBLE.  |
 						  PRE_CHK must be set to enable this and all	    |
 						  PREAMBLE features.				    |
 <8>     PAD_LEN  R/W      0x0         0         When set, disables the length check for non-min    |   
						  sized pkts with padding in the client data	    |
 <7>     VLAN_LEN R/W      0x0         0         When set, disables the length check for VLAN pkts  |   
 <6>     PRE_FREE RO	   0x1	       1	 When set, PREAMBLE checking is less strict.	    |	
						  AGL will begin the frame at the first SFD.	    |
						  PRE_FREE must be set if PRE_ALIGN is set.	    |
						  PRE_CHK must be set to enable this and all	    |
						  PREAMBLE features.				    |
 <5>	 CTL_SMAC R/W      0x0         0         Control Pause Frames can match station SMAC	    |	
 <4>     CTL_MCST R/W      0x1         1         Control Pause Frames can match globally assign	    |	
						  Multicast address				    |
 <3>     CTL_BCK  R/W      0x1         1	 Forward pause information to TX block		    |   
 <2>	 CTL_DRP  R/W      0x1         1	 Drop Control Pause Frames			    |   
 <1>     PRE_STRP R/W      0x1         1         Strip off the preamble (when present)		    |   
                                                  0=PREAMBLE+SFD is sent to core as part of frame   |
                                                  1=PREAMBLE+SFD is dropped			    |
						  PRE_STRP must be set if PRE_ALIGN is set.	    |
						  PRE_CHK must be set to enable this and all	    |
						  PREAMBLE features.				    |
 <0>     PRE_CHK  R/W      0x1         1         This port is configured to send a valid 802.3	    |   
						  PREAMBLE to begin every frame. AGL checks that a  |
						  valid PREAMBLE is received (based on PRE_FREE).   |
						  When a problem does occur within the PREAMBLE	    |
						  seqeunce, the frame is marked as bad and not sent |
						  into the core.  The AGL_GMX_RX_INT_REG[PCTERR]    |
						  interrupt is also raised.			    |

Notes:

* PRE_STRP
  When PRE_CHK is set (indicating that the PREAMBLE will be sent), PRE_STRP
  determines if the PREAMBLE+SFD bytes are thrown away or sent to the Octane
  core as part of the packet.

  In either mode, the PREAMBLE+SFD bytes are not counted toward the packet
  size when checking against the MIN and MAX bounds.  Furthermore, the bytes
  are skipped when locating the start of the L2 header for DMAC and Control
  frame recognition.

* CTL_BCK/CTL_DRP
  These bits control how the HW handles incoming PAUSE packets.  Here are
  the most common modes of operation:
    CTL_BCK=1,CTL_DRP=1   - HW does it all
    CTL_BCK=0,CTL_DRP=0   - SW sees all pause frames
    CTL_BCK=0,CTL_DRP=1   - all pause frames are completely ignored

  These control bits should be set to CTL_BCK=0,CTL_DRP=0 in halfdup mode.
  Since PAUSE packets only apply to fulldup operation, any PAUSE packet
  would constitute an exception which should be handled by the processing
  cores.  PAUSE packets should not be forwarded.

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_FRM_CHK = Which frame errors will set the ERR bit of the frame
 *

     ==============================================================
     AGL_GMX_RX(0..1)_FRM_CHK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:10> NS       RAZ      NS          NS        Reserved				            |   
 <9>     NIBERR   R/W      0x1         1         Nibble error					    |	
 <8>     SKPERR   R/W      0x1         1         Skipper error					    |	
 <7>     RCVERR   R/W      0x1         1         Frame was received with packet data reception error|	
 <6>     LENERR   R/W      0x1         1         Frame was received with length error		    |	
 <5>     ALNERR   R/W      0x1         1         Frame was received with an alignment error	    |	
 <4>     FCSERR   R/W      0x1         1         Frame was received with FCS/CRC error		    |	
 <3>     JABBER   R/W      0x1         1         Frame was received with length > sys_length	    |	
 <2>     MAXERR   R/W      0x1         1         Frame was received with length > max_length	    |	
 <1>     CAREXT   R/W      0x1         1         Carrier extend error				    |	
 <0>     MINERR   R/W      0x1         1         Frame was received with length < min_length	    |	

Notes:

If AGL_GMX_RX_UDD_SKP[LEN] != 0, then LENERR will be forced to zero in HW.

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_FRM_MIN = Frame Min length
 *

     ==============================================================
     AGL_GMX_RX(0..1)_FRM_MIN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |   
 <15:0>  LEN	  R/W      0x40        0x40	 Byte count for Min-sized frame check               |   
						  AGL_GMX_RXn_FRM_CHK[MINERR] enables the check	    |
						  for port n.					    |
						  If enabled, failing packets set the MINERR	    |
						  interrupt and the MIX opcode is set to UNDER_FCS  |
						  (0x6, if packet has bad FCS) or UNDER_ERR (0x8,   |
						  if packet has good FCS).			    |

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_FRM_MAX = Frame Max length
 *

     ==============================================================
     AGL_GMX_RX(0..1)_FRM_MAX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |   
 <15:0>  LEN	  R/W      0x600       0x600	 Byte count for Max-sized frame check		    |   
						  AGL_GMX_RXn_FRM_CHK[MAXERR] enables the check	    |
						  for port n.					    |
						  If enabled, failing packets set the MAXERR	    |
						  interrupt and the MIX opcode is set to OVER_FCS   |
						  (0x3, if packet has bad FCS) or OVER_ERR (0x4, if |
						  packet has good FCS).	  			    |
						  LEN <= AGL_GMX_RX_JABBER[CNT]			    |

Notes:

When changing the LEN field, be sure that LEN does not exceed
AGL_GMX_RX_JABBER[CNT]. Failure to meet this constraint will cause packets that
are within the maximum length parameter to be rejected because they exceed
the AGL_GMX_RX_JABBER[CNT] limit.

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_JABBER = The max size packet after which GMX will truncate
 *

     ==============================================================
     AGL_GMX_RX(0..1)_JABBER Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |   
 <15:0>  CNT      R/W      0x2800      0x2800    Byte count for jabber check			    |   
  						  Failing packets set the JABBER interrupt and are  |
						  optionally sent with opcode==JABBER		    |
						  GMX will truncate the packet to CNT bytes	    |
						  CNT >= AGL_GMX_RX_FRM_MAX[LEN]			    |

Notes: 

  CNT must be 8-byte aligned such that CNT[2:0] == 0

  The packet that will be sent to the packet input logic will have an
  additionl 8 bytes if AGL_GMX_RX_FRM_CTL[PRE_CHK] is set and
  AGL_GMX_RX_FRM_CTL[PRE_STRP] is clear.  The max packet that will be sent is
  defined as...

       max_sized_packet = AGL_GMX_RX_JABBER[CNT]+((AGL_GMX_RX_FRM_CTL[PRE_CHK] & !AGL_GMX_RX_FRM_CTL[PRE_STRP])*8)

  Be sure the CNT field value is at least as large as the
  AGL_GMX_RX_FRM_MAX[LEN] value. Failure to meet this constraint will cause
  packets that are within the AGL_GMX_RX_FRM_MAX[LEN] length to be rejected
  because they exceed the CNT limit.

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_DECISION = The byte count to decide when to accept or filter a packet
 *

     ==============================================================
     AGL_GMX_RX(0..1)_DECISION Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:5>  NS       RAZ      NS          NS        Reserved				            |   
 <4:0>   CNT      R/W      0x18        0x18      The byte count to decide when to accept or filter  |   
                                                   a packet.					    |

Notes:

As each byte in a packet is received by GMX, the L2 byte count is compared
against the AGL_GMX_RX_DECISION[CNT].  The L2 byte count is the number of bytes
from the beginning of the L2 header (DMAC).  In normal operation, the L2
header begins after the PREAMBLE+SFD (AGL_GMX_RX_FRM_CTL[PRE_CHK]=1) and any
optional UDD skip data (AGL_GMX_RX_UDD_SKP[LEN]).

When AGL_GMX_RX_FRM_CTL[PRE_CHK] is clear, PREAMBLE+SFD are prepended to the
packet and would require UDD skip length to account for them.

						L2 Size
Port Mode	      <=AGL_GMX_RX_DECISION bytes (default=24)	>AGL_GMX_RX_DECISION bytes (default=24)

MII/Full Duplex       accept packet				apply filters
		      no filtering is applied			accept packet based on DMAC and PAUSE packet filters

MII/Half Duplex       drop packet				apply filters
		      packet is unconditionally dropped		accept packet based on DMAC

where l2_size = MAX(0, total_packet_size - AGL_GMX_RX_UDD_SKP[LEN] - ((AGL_GMX_RX_FRM_CTL[PRE_CHK]==1)*8)

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_UDD_SKP = Amount of User-defined data before the start of the L2 data
 *

     ==============================================================
     AGL_GMX_RX(0..1)_UDD_SKP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:9> NS        RAZ      NS          NS        Reserved				            |   
 <8>	FCSSEL    R/W      0x0         0         Include the skip bytes in the FCS calculation      |   
						  0 = all skip bytes are included in FCS            |
						  1 = the skip bytes are not included in FCS        |
 <7>	NS        RAZ      NS          NS        Reserved				            |   
 <6:0>  LEN	  R/W      0x0         0	 Amount of User-defined data before the start of    |   
						  the L2 data.  Zero means L2 comes first.          |
						  Max value is 64.				    |

Notes:

(1) The skip bytes are part of the packet and will be sent down the NCB
    packet interface and will be handled by PKI.

(2) The system can determine if the UDD bytes are included in the FCS check
    by using the FCSSEL field - if the FCS check is enabled.

(3) Assume that the preamble/sfd is always at the start of the frame - even
    before UDD bytes.  In most cases, there will be no preamble in these
    cases since it will be MII to MII communication without a PHY
    involved.

(4) We can still do address filtering and control packet filtering is the
    user desires.
 
(5) UDD_SKP must be 0 in half-duplex operation unless
    AGL_GMX_RX_FRM_CTL[PRE_CHK] is clear.  If AGL_GMX_RX_FRM_CTL[PRE_CHK] is set,
    then UDD_SKP will normally be 8.

(6) In all cases, the UDD bytes will be sent down the packet interface as
    part of the packet.  The UDD bytes are never stripped from the actual
    packet.

(7) If LEN != 0, then AGL_GMX_RX_FRM_CHK[LENERR] will be disabled and AGL_GMX_RX_INT_REG[LENERR] will be zero

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_STATS_CTL = RX Stats Control register
 *

     ==============================================================
     AGL_GMX_RX(0..1)_STATS_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1> NS        RAZ      NS          NS        Reserved				            |   
 <0>    RD_CLR	  R/W      0x0	       0	 RX Stats registers will clear on reads		    |   

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_IFG = RX Min IFG
 *

     ==============================================================
     AGL_GMX_RX(0..1)_IFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS        RAZ      NS         NS        Reserved				            |   
 <3:0>   IFG	   R/W      0x8	       8	 Min IFG (in IFG*8 bits) between packets used to    |   
						  determine IFGERR. Normally IFG is 96 bits.	    | 
						  Note in some operating modes, IFG cycles can be   |
						  inserted or removed in order to achieve clock rate|
						  adaptation. For these reasons, the default value  |
						  is slightly conservative and does not check upto  |
						  the full 96 bits of IFG.			    |

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_INBND = RGMII InBand Link Status
 *

     ==============================================================
     AGL_GMX_RX(0..1)_RX_INBND Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS        RAZ     NS          NS        Reserved				            |         NS
 <3>     DUPLEX	   RO      0x0	       NS	 RGMII Inbound LinkDuplex             		    |   	  NS
						  0=half-duplex					    |
						  1=full-duplex					    |
 <2:1>   SPEED	   RO      0x0	       NS	 RGMII Inbound LinkSpeed             		    |   	  NS
						  00=2.5MHz					    |
						  01=25MHz					    |
						  10=125MHz					    |
						  11=Reserved					    |
 <0>     STATUS	   RO      0x0	       NS	 RGMII Inbound LinkStatus             		    |   	  NS
						  0=down       					    |
						  1=up         					    |

Notes:
These fields are only valid if the attached PHY is operating in RGMII mode
and supports the optional in-band status (see section 3.4.1 of the RGMII
specification, version 1.3 for more information).

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_PAUSE_DROP_TIME = The TIME field in a PAUSE Packet which was dropped due to GMX RX FIFO full condition
 *

     ==============================================================
     AGL_GMX_RX(0..1)_PAUSE_DROP_TIME Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16>  NS        RAZ     NS          NS        Reserved				            |   
 <15:0>   STATUS    R/W1C   0x0	        NS	  Time extracted from the dropped PAUSE packet	    |	

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_RX_STATS_PKTS
 *
 * Count of good received packets - packets that are not recognized as PAUSE
 * packets, dropped due the DMAC filter, dropped due FIFO full status, or
 * have any other OPCODE (FCS, Length, etc).
 *

     ==============================================================
     AGL_GMX_RX(0..1)_STATS_PKTS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |   
 <31:0>  CNT      RC/W     0x0         NS        Count of received good packets                     |   

Notes:
- Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

     ==============================================================
     AGL_GMX_RX(0..1)_STATS_OCTS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |   
 <47:0>  CNT      RC/W    0x0         NS        Octet count of received good packets               |   

Notes:
- Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_RX_STATS_PKTS_CTL
 *
 * Count of all packets received that were recognized as Flow Control or
 * PAUSE packets.  PAUSE packets with any kind of error are counted in
 * AGL_GMX_RX_STATS_PKTS_BAD.  Pause packets can be optionally dropped or
 * forwarded based on the AGL_GMX_RX_FRM_CTL[CTL_DRP] bit.  This count
 * increments regardless of whether the packet is dropped.  Pause packets
 * will never be counted in AGL_GMX_RX_STATS_PKTS.  Packets dropped due the dmac
 * filter will be counted in AGL_GMX_RX_STATS_PKTS_DMAC and not here.
 *

     ==============================================================
     AGL_GMX_RX(0..1)_STATS_PKTS_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |   
 <31:0>  CNT      RC/W    0x0         NS        Count of received pause packets                    |   

Notes:
- Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

     ==============================================================
     AGL_GMX_RX(0..1)_STATS_OCTS_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |   
 <47:0>  CNT      RC/W    0x0         NS        Octet count of received pause packets              |   

Notes:
- Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_RX_STATS_PKTS_DMAC
 *
 * Count of all packets received that were dropped by the dmac filter.
 * Packets that match the DMAC will be dropped and counted here regardless
 * of if they were bad packets.  These packets will never be counted in
 * AGL_GMX_RX_STATS_PKTS.
 *
 * Some packets that were not able to satisify the DECISION_CNT may not
 * actually be dropped by Octeon, but they will be counted here as if they
 * were dropped.
 *

     ==============================================================
     AGL_GMX_RX(0..1)_STATS_PKTS_DMAC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |   
 <31:0>  CNT      RC/W    0x0         NS        Count of filtered dmac packets                     |   

Notes:
- Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

     ==============================================================
     AGL_GMX_RX(0..1)_STATS_OCTS_DMAC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |   
 <47:0>  CNT      RC/W    0x0         NS        Octet count of filtered dmac packets               |   

Notes:
- Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_RX_STATS_PKTS_DRP
 *
 * Count of all packets received that were dropped due to a full receive
 * FIFO.  This counts good and bad packets received - all packets dropped by
 * the FIFO.  It does not count packets dropped by the dmac or pause packet
 * filters.
 *

     ==============================================================
     AGL_GMX_RX(0..1)_STATS_PKTS_DRP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |   
 <31:0>  CNT      RC/W    0x0         NS        Count of dropped packets                           |   

Notes:
- Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

     ==============================================================
     AGL_GMX_RX(0..1)_STATS_OCTS_DRP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |   
 <47:0>  CNT      RC/W    0x0         NS        Octet count of dropped packets                     |   

Notes:
- Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_RX_STATS_PKTS_BAD
 *
 * Count of all packets received with some error that were not dropped
 * either due to the dmac filter or lack of room in the receive FIFO.
 *

     ==============================================================
     AGL_GMX_RX(0..1)_STATS_PKTS_BAD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |   
 <31:0>  CNT      RC/W    0x0         NS        Count of bad packets                               |   

Notes:
- Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_ADR_CTL = Address Filtering Control
 *

     ==============================================================
     AGL_GMX_RX(0..1)_ADR_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ      NS          NS        Reserved				            |   
 <3>     CAM_MODE R/W      0x0         NS        Allow or deny DMAC address filter		    |   
						  0 = reject the packet on DMAC address match	    |
						  1 = accept the packet on DMAC address match	    |
 <2:1>   MCST     R/W      0x0         NS        Multicast Mode					    |	
						  0 = Use the Address Filter CAM		    |
						  1 = Force reject all multicast packets	    |
						  2 = Force accept all multicast packets	    |
						  3 = Reserved					    |
 <0>     BCST     R/W      0x1         NS        Accept All Broadcast Packets			    |   

Notes:

* ALGORITHM
  Here is some pseudo code that represents the address filter behavior.

     @verbatim
     bool dmac_addr_filter(uint8 prt, uint48 dmac) {
       ASSERT(prt >= 0 && prt <= 3);
       if (is_bcst(dmac))                               // broadcast accept
         return (AGL_GMX_RX{prt}_ADR_CTL[BCST] ? ACCEPT : REJECT);
       if (is_mcst(dmac) & AGL_GMX_RX{prt}_ADR_CTL[MCST] == 1)   // multicast reject
         return REJECT;
       if (is_mcst(dmac) & AGL_GMX_RX{prt}_ADR_CTL[MCST] == 2)   // multicast accept
         return ACCEPT;

       cam_hit = 0;
     
       for (i=0; i<8; i++) {
         if (AGL_GMX_RX{prt}_ADR_CAM_EN[EN<i>] == 0)
           continue;
	 uint48 unswizzled_mac_adr = 0x0;
	 for (j=5; j>=0; j--) {
	    unswizzled_mac_adr = (unswizzled_mac_adr << 8) | AGL_GMX_RX{prt}_ADR_CAM{j}[ADR<i*8+7:i*8>];
	 }
         if (unswizzled_mac_adr == dmac) {
           cam_hit = 1;
           break;
         }
       }
     
       if (cam_hit)
         return (AGL_GMX_RX{prt}_ADR_CTL[CAM_MODE] ? ACCEPT : REJECT);
       else
         return (AGL_GMX_RX{prt}_ADR_CTL[CAM_MODE] ? REJECT : ACCEPT);
     }
     @endverbatim

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_ADR_CAM_EN = Address Filtering Control Enable
 *

     ==============================================================
     AGL_GMX_RX(0..1)_ADR_CAM_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved				            |   
 <7:0>   EN       R/W      0x0         NS        CAM Entry Enables				    |   

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 
 *
 * AGL_GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     AGL_GMX_RX(0..1)_ADR_CAM0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ADR      R/W      0x0         NS        The DMAC address to match on			    |   
						  Each entry contributes 8bits to one of 8 matchers |
						  Write transactions to AGL_GMX_RX_ADR_CAM will not     |
						  change the CSR when AGL_GMX_PRT_CFG[EN] is enabled    |
						  The CAM matches against unicst or multicst DMAC   |
						  addresses.					    |

Notes:

Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 
 *
 * AGL_GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     AGL_GMX_RX(0..1)_ADR_CAM1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ADR      R/W      0x0         NS        The DMAC address to match on			    |   
						  Each entry contributes 8bits to one of 8 matchers |
						  Write transactions to AGL_GMX_RX_ADR_CAM will not     |
						  change the CSR when AGL_GMX_PRT_CFG[EN] is enabled    |
						  The CAM matches against unicst or multicst DMAC   |
						  addresses.					    |

Notes:

Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 
 *
 * AGL_GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     AGL_GMX_RX(0..1)_ADR_CAM2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ADR      R/W      0x0         NS        The DMAC address to match on			    |   
						  Each entry contributes 8bits to one of 8 matchers |
						  Write transactions to AGL_GMX_RX_ADR_CAM will not     |
						  change the CSR when AGL_GMX_PRT_CFG[EN] is enabled    |
						  The CAM matches against unicst or multicst DMAC   |
						  addresses.					    |

Notes:

Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 
 *
 * AGL_GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     AGL_GMX_RX(0..1)_ADR_CAM3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ADR      R/W      0x0         NS        The DMAC address to match on			    |   
						  Each entry contributes 8bits to one of 8 matchers |
						  Write transactions to AGL_GMX_RX_ADR_CAM will not     |
						  change the CSR when AGL_GMX_PRT_CFG[EN] is enabled    |
						  The CAM matches against unicst or multicst DMAC   |
						  addresses.					    |

Notes:

Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 
 *
 * AGL_GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     AGL_GMX_RX(0..1)_ADR_CAM4 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ADR      R/W      0x0         NS        The DMAC address to match on			    |   
						  Each entry contributes 8bits to one of 8 matchers |
						  Write transactions to AGL_GMX_RX_ADR_CAM will not     |
						  change the CSR when AGL_GMX_PRT_CFG[EN] is enabled    |
						  The CAM matches against unicst or multicst DMAC   |
						  addresses.					    |

Notes:

Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 
 *
 * AGL_GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     AGL_GMX_RX(0..1)_ADR_CAM5 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ADR      R/W      0x0         NS        The DMAC address to match on			    |   
						  Each entry contributes 8bits to one of 8 matchers |
						  Write transactions to AGL_GMX_RX_ADR_CAM will not     |
						  change the CSR when AGL_GMX_PRT_CFG[EN] is enabled    |
						  The CAM matches against unicst or multicst DMAC   |
						  addresses.					    |

Notes:

Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===




 *
 * AGL_GMX_BIST = GMX BIST Results
 *

     ==============================================================
     AGL_GMX_BIST Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:25> NS       RAZ      NS          NS        Reserved				            |   
 <24:0>  STATUS   RO       0x0         0         BIST Results.                                      |   
                                                  HW sets a bit in BIST for for memory that fails   |

						   0: gmx#.inb.fif_bnk0				    |
						   1: gmx#.inb.fif_bnk1				    |
						   2: gmx#.inb.fif_bnk2				    |
						   3: gmx#.inb.fif_bnk3				    |
						   4: gmx#.inb.fif_bnk_ext0			    |
						   5: gmx#.inb.fif_bnk_ext1			    |
						   6: gmx#.inb.fif_bnk_ext2			    |
						   7: gmx#.inb.fif_bnk_ext3			    |
						   8: gmx#.outb.fif.fif_bnk0			    |
						   9: gmx#.outb.fif.fif_bnk1			    |
						  10: RAZ			    		    |
						  11: RAZ			    		    |
						  12: gmx#.outb.fif.fif_bnk_ext0		    |
						  13: gmx#.outb.fif.fif_bnk_ext1		    |
						  14: RAZ		    			    |
						  15: RAZ					    |
						  16: gmx#.csr.gmi0.srf8x64m1_bist		    |
						  17: gmx#.csr.gmi1.srf8x64m1_bist		    |
						  18: RAZ					    |
						  19: RAZ					    |
						  20: gmx#.csr.drf20x32m2_bist			    |
						  21: gmx#.csr.drf20x48m2_bist			    |
						  22: gmx#.outb.stat.drf16x27m1_bist		    |
						  23: gmx#.outb.stat.drf40x64m1_bist		    |
						  24: RAZ					    |

Notes:

Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_BP_DROP = FIFO mark for packet drop
 *

     ==============================================================
     AGL_GMX_RX_BP_DROP(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6> NS       RAZ      NS          NS        Reserved				            |   
 <5:0>  MARK     R/W      2	      2		Number of 8B ticks to reserve in the RX FIFO.	    |	
						 When the FIFO exceeds this count, packets will     |
						 be dropped and not buffered.			    |
						 MARK should typically be programmed to 2.	    |
						 Failure to program correctly can lead to system    |
						 instability.					    |

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_BP_ON = Hiwater mark for port/interface backpressure
 *

     ==============================================================
     AGL_GMX_RX_BP_ON(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:9>  NS       RAZ      NS          NS        Reserved				            |   
 <8:0>   MARK     R/W      0x40	       0x40	 Hiwater mark (8B ticks) for backpressure. 	    |   

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_BP_OFF = Lowater mark for packet drop
 *

     ==============================================================
     AGL_GMX_RX_BP_OFF(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6>  NS       RAZ      NS          NS        Reserved				            |   
 <5:0>   MARK     R/W      0x10        0x10      Water mark (8B ticks) to deassert backpressure	    |   

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_CLK = RGMII TX Clock Generation Register
 *

     ==============================================================
     AGL_GMX_TX(0..1)_CLK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6>  NS       RAZ      NS          NS        Reserved				            |         NS
 <5:0>	 CLK_CNT  R/W	   0x1	       1	 Controls the RGMII TXC frequency		    |		  NS
						  TXC(period) =					    |
						   rgm_ref_clk(period)*CLK_CNT			    |

Notes:
Normal Programming Values:
 (1) RGMII, 1000Mbs   (AGL_GMX_PRT_CFG[SPEED]==1), CLK_CNT == 1
 (2) RGMII, 10/100Mbs (AGL_GMX_PRT_CFG[SPEED]==0), CLK_CNT == 50/5
 (3) MII,   10/100Mbs (AGL_GMX_PRT_CFG[SPEED]==0), CLK_CNT == 1

RGMII Example:
 Given a 125MHz PLL reference clock...
  CLK_CNT ==  1 ==> 125.0MHz TXC clock period (8ns* 1)
  CLK_CNT ==  5 ==>  25.0MHz TXC clock period (8ns* 5)
  CLK_CNT == 50 ==>   2.5MHz TXC clock period (8ns*50)

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_THRESH = Packet TX Threshold
 *

     ==============================================================
     AGL_GMX_TX(0..1)_THRESH Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6>  NS       RAZ      NS          NS        Reserved				            |   
 <5:0>	 CNT	  R/W	   0x20	       0x20	 Number of 16B ticks to accumulate in the TX FIFO   |	
						  before sending on the packet interface	    |
						  This register should be large enough to prevent   |
						  underflow on the packet interface and must never  |
						  be set below 4.  This register cannot exceed the  |
						  the TX FIFO depth which is 128, 8B entries.	    |

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_APPEND = Packet TX Append Control
 *

     ==============================================================
     AGL_GMX_TX(0..1)_APPEND Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ      NS          NS        Reserved				            |   
 <3>     FORCE_FCS R/W     0x1         0x1       Append the Ethernet FCS on each pause packet 	    |	
						  when FCS is clear.  Pause packets are normally    |
						  padded to 60 bytes.  If			    |
						  AGL_GMX_TX_MIN_PKT[MIN_SIZE] exceeds 59, then	    |
						  FORCE_FCS will not be used.			    |
 <2>	 FCS      R/W	   0x1	       0x1	 Append the Ethernet FCS on each packet 	    |	
 <1>	 PAD      R/W	   0x1	       0x1	 Append PAD bytes such that min sized         	    |	
 <0>	 PREAMBLE R/W	   0x1	       0x1	 Prepend the Ethernet preamble on each transfer	    |	

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_SMAC = Packet SMAC
 *

     ==============================================================
     AGL_GMX_SMAC(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |   
 <47:0>	 SMAC 	  R/W	   0x0         NS	 The SMAC field is used for generating and	    |	
						  accepting Control Pause packets		    |

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_TX_PAUSE_PKT_TIME = Packet TX Pause Packet pause_time field
 *

     ==============================================================
     AGL_GMX_TX(0..1)_PAUSE_PKT_TIME Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |   
 <15:0>	 TIME 	  R/W	   0x60        NS	 The pause_time field placed is outbnd pause pkts   |	
                                                  pause_time is in 512 bit-times		    |
						  Normally, TIME > AGL_GMX_TX_PAUSE_PKT_INTERVAL	    |

Notes:

Choosing proper values of AGL_GMX_TX_PAUSE_PKT_TIME[TIME] and
AGL_GMX_TX_PAUSE_PKT_INTERVAL[INTERVAL] can be challenging to the system
designer.  It is suggested that TIME be much greater than INTERVAL and
AGL_GMX_TX_PAUSE_ZERO[SEND] be set.  This allows a periodic refresh of the PAUSE
count and then when the backpressure condition is lifted, a PAUSE packet
with TIME==0 will be sent indicating that Octane is ready for additional
data.

If the system chooses to not set AGL_GMX_TX_PAUSE_ZERO[SEND], then it is
suggested that TIME and INTERVAL are programmed such that they satisify the
following rule...

   INTERVAL <= TIME - (largest_pkt_size + IFG + pause_pkt_size)

where largest_pkt_size is that largest packet that the system can send
(normally 1518B), IFG is the interframe gap and pause_pkt_size is the size
of the PAUSE packet (normally 64B).

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_TX_MIN_PKT = Packet TX Min Size Packet (PAD upto min size)
 *

     ==============================================================
     AGL_GMX_TX(0..1)_MIN_PKT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved				            |   
 <7:0>	 MIN_SIZE R/W	   0x3b	       59	 Min frame in bytes before the FCS is applied	    |	
                                                  Padding is only appened when			    |
						  AGL_GMX_TX_APPEND[PAD] for the coresponding packet|
						  port is set. Packets will be padded to	    |
						  MIN_SIZE+1 The reset value will pad to 60 bytes.  |

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_TX_PAUSE_PKT_INTERVAL = Packet TX Pause Packet transmission interval - how often PAUSE packets will be sent
 *

     ==============================================================
     AGL_GMX_TX(0..1)_PAUSE_PKT_INTERVAL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |   
 <15:0>	 INTERVAL R/W	   0x10	       NS	 Arbitrate for a pause packet every (INTERVAL*512)  |	
						  bit-times.					    |
						  Normally, 0 < INTERVAL < AGL_GMX_TX_PAUSE_PKT_TIME    |
						  INTERVAL=0, will only send a single PAUSE packet  |
						  for each backpressure event			    |

Notes:

Choosing proper values of AGL_GMX_TX_PAUSE_PKT_TIME[TIME] and
AGL_GMX_TX_PAUSE_PKT_INTERVAL[INTERVAL] can be challenging to the system
designer.  It is suggested that TIME be much greater than INTERVAL and
AGL_GMX_TX_PAUSE_ZERO[SEND] be set.  This allows a periodic refresh of the PAUSE
count and then when the backpressure condition is lifted, a PAUSE packet
with TIME==0 will be sent indicating that Octane is ready for additional
data.

If the system chooses to not set AGL_GMX_TX_PAUSE_ZERO[SEND], then it is
suggested that TIME and INTERVAL are programmed such that they satisify the
following rule...

   INTERVAL <= TIME - (largest_pkt_size + IFG + pause_pkt_size)

where largest_pkt_size is that largest packet that the system can send
(normally 1518B), IFG is the interframe gap and pause_pkt_size is the size
of the PAUSE packet (normally 64B).

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_TX_SOFT_PAUSE = Packet TX Software Pause
 *

     ==============================================================
     AGL_GMX_TX(0..1)_SOFT_PAUSE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |   
 <15:0>	 TIME	  R/W	   0x0	       NS	 Back off the TX bus for (TIME*512) bit-times	    |	
						  for full-duplex operation only		    |

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_TX_PAUSE_TOGO = Packet TX Amount of time remaining to backpressure
 *

     ==============================================================
     AGL_GMX_TX(0..1)_PAUSE_TOGO Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |   
 <15:0>	 TIME	  RO	   NS	       NS	 Amount of time remaining to backpressure	    |	

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_TX_PAUSE_ZERO = Packet TX Amount of time remaining to backpressure
 *

     ==============================================================
     AGL_GMX_TX(0..1)_PAUSE_ZERO Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved				            |   
 <0>	 SEND	  R/W	   1	       1	 When backpressure condition clear, send PAUSE	    |	
						  packet with pause_time of zero to enable the	    |
						  channel					    |

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 *
 * AGL_GMX_TX_STATS_CTL = TX Stats Control register
 *

     ==============================================================
     AGL_GMX_TX(0..1)_STATS_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1> NS        RAZ      NS          NS        Reserved				            |   
 <0>    RD_CLR	  R/W      0x0	       0	 Stats registers will clear on reads		    |   

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_CTL = TX Control register
 *

     ==============================================================
     AGL_GMX_TX(0..1)_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2> NS        RAZ      NS          NS        Reserved				            |   
 <1>    XSDEF_EN  R/W      0x1	       1	 Enables the excessive deferral check for stats	    |   
						  and interrupts				    |
 <0>    XSCOL_EN  R/W      0x1	       1	 Enables the excessive collision check for stats    |   
						  and interrupts				    |

Notes:

Additionally reset when MIX<prt>_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 * AGL_GMX_TX_STAT0 = AGL_GMX_TX_STATS_XSDEF / AGL_GMX_TX_STATS_XSCOL

     ==============================================================
     AGL_GMX_TX(0..1)_STAT0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> XSDEF    RC/W     0x0         NS        Number of packets dropped (never successfully      |   
						  sent) due to excessive deferal		    |
 <31:0>  XSCOL    RC/W     0x0         NS        Number of packets dropped (never successfully	    |   
						  sent) due to excessive collision.  Defined by     |
						  AGL_GMX_TX_COL_ATTEMPT[LIMIT].			    |

Notes:
- Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 * AGL_GMX_TX_STAT1 = AGL_GMX_TX_STATS_SCOL  / AGL_GMX_TX_STATS_MCOL

     ==============================================================
     AGL_GMX_TX(0..1)_STAT1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> SCOL     RC/W     0x0         NS        Number of packets sent with a single collision     |   
 <31:0>  MCOL     RC/W     0x0         NS        Number of packets sent with multiple collisions    |   
						  but < AGL_GMX_TX_COL_ATTEMPT[LIMIT].		    |

Notes:
- Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 * AGL_GMX_TX_STAT2 = AGL_GMX_TX_STATS_OCTS

     ==============================================================
     AGL_GMX_TX(0..1)_STAT2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |   
 <47:0>  OCTS     RC/W     0x0         NS        Number of total octets sent on the interface.	    |   
						  Does not count octets from frames that were	    |
						  truncated due to collisions in halfdup mode.	    |

Notes:
- Octect counts are the sum of all data transmitted on the wire including
  packet data, pad bytes, fcs bytes, pause bytes, and jam bytes.  The octect
  counts do not include PREAMBLE byte or EXTEND cycles.
- Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 * AGL_GMX_TX_STAT3 = AGL_GMX_TX_STATS_PKTS

     ==============================================================
     AGL_GMX_TX(0..1)_STAT3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |   
 <31:0>  PKTS     RC/W     0x0         NS        Number of total frames sent on the interface.	    |   
						  Does not count frames that were truncated due to  |
						   collisions in halfdup mode.			    |

Notes:
- Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 * AGL_GMX_TX_STAT4 = AGL_GMX_TX_STATS_HIST1 (64) / AGL_GMX_TX_STATS_HIST0 (<64)

     ==============================================================
     AGL_GMX_TX(0..1)_STAT4 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> HIST1    RC/W     0x0         NS        Number of packets sent with an octet count of 64.  |   
 <31:0>  HIST0    RC/W     0x0         NS        Number of packets sent with an octet count         |   
						  of < 64. 					    |

Notes:
- Packet length is the sum of all data transmitted on the wire for the given
  packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
  bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
- Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 * AGL_GMX_TX_STAT5 = AGL_GMX_TX_STATS_HIST3 (128- 255) / AGL_GMX_TX_STATS_HIST2 (65- 127)

     ==============================================================
     AGL_GMX_TX(0..1)_STAT5 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> HIST3    RC/W     0x0         NS        Number of packets sent with an octet count of      |   
						  128 - 255.					    |
 <31:0>  HIST2    RC/W     0x0         NS        Number of packets sent with an octet count of      |   
						  65 - 127.					    |

Notes:
- Packet length is the sum of all data transmitted on the wire for the given
  packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
  bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
- Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 * AGL_GMX_TX_STAT6 = AGL_GMX_TX_STATS_HIST5 (512-1023) / AGL_GMX_TX_STATS_HIST4 (256-511)

     ==============================================================
     AGL_GMX_TX(0..1)_STAT6 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> HIST5    RC/W     0x0         NS        Number of packets sent with an octet count of      |   
						  512 - 1023.					    |
 <31:0>  HIST4    RC/W     0x0         NS        Number of packets sent with an octet count of      |   
						  256 - 511.					    |

Notes:
- Packet length is the sum of all data transmitted on the wire for the given
  packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
  bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
- Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 * AGL_GMX_TX_STAT7 = AGL_GMX_TX_STATS_HIST7 (1024-1518) / AGL_GMX_TX_STATS_HIST6 (>1518)

     ==============================================================
     AGL_GMX_TX(0..1)_STAT7 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> HIST7    RC/W     0x0         NS        Number of packets sent with an octet count         |   
						  of > 1518.					    |
 <31:0>  HIST6    RC/W     0x0         NS        Number of packets sent with an octet count of      |   
						  1024 - 1518.					    |

Notes:
- Packet length is the sum of all data transmitted on the wire for the given
  packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
  bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
- Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 * AGL_GMX_TX_STAT8 = AGL_GMX_TX_STATS_MCST  / AGL_GMX_TX_STATS_BCST

     ==============================================================
     AGL_GMX_TX(0..1)_STAT8 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> MCST     RC/W     0x0         NS        Number of packets sent to multicast DMAC.          |   
						  Does not include BCST packets.		    |
 <31:0>  BCST     RC/W     0x0         NS        Number of packets sent to broadcast DMAC.	    |   
						  Does not include MCST packets.		    |

Notes:
- Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Note, GMX determines if the packet is MCST or BCST from the DMAC of the
  packet.  GMX assumes that the DMAC lies in the first 6 bytes of the packet
  as per the 802.3 frame definition.  If the system requires additional data
  before the L2 header, then the MCST and BCST counters may not reflect
  reality and should be ignored by software.
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===

 * AGL_GMX_TX_STAT9 = AGL_GMX_TX_STATS_UNDFLW / AGL_GMX_TX_STATS_CTL

     ==============================================================
     AGL_GMX_TX(0..1)_STAT9 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> UNDFLW   RC/W     0x0         NS        Number of underflow packets			    |   
 <31:0>  CTL      RC/W     0x0         NS        Number of Control packets (PAUSE flow control)	    |   
						  generated by GMX.  It does not include control    |
						  packets forwarded or generated by the PP's.	    |

Notes:
- Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Not reset when MIX*_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===



 *
 * Common
 *

 *
 * AGL_GMX_TX_IFG = Packet TX Interframe Gap
 *

     ==============================================================
     AGL_GMX_TX_IFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved				            |   
 <7:4>	 IFG2	  R/W	   0x4	       NS	 1/3 of the interframe gap timing		    |	
						  If CRS is detected during IFG2, then the	    |
						  interFrameSpacing timer is not reset and a frame  |
						  is transmited once the timer expires.		    |
 <3:0>	 IFG1	  R/W	   0x8	       NS	 2/3 of the interframe gap timing		    |	
						  If CRS is detected during IFG1, then the	    |
						  interFrameSpacing timer is reset and a frame is   |
						  not transmited.				    |

Notes:

Notes:
* Programming IFG1 and IFG2.

  For half-duplex systems that require IEEE 802.3 compatibility, IFG1 must
  be in the range of 1-8, IFG2 must be in the range of 4-12, and the
  IFG1+IFG2 sum must be 12.

  For full-duplex systems that require IEEE 802.3 compatibility, IFG1 must
  be in the range of 1-11, IFG2 must be in the range of 1-11, and the
  IFG1+IFG2 sum must be 12.

  For all other systems, IFG1 and IFG2 can be any value in the range of
  1-15.  Allowing for a total possible IFG sum of 2-30.

Additionally reset when both MIX0/1_CTL[RESET] are set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_JAM = Packet TX Jam Pattern
 *

     ==============================================================
     AGL_GMX_TX_JAM Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved				            |   
 <7:0>	 JAM	  R/W	   0xEE	       NS	 Jam pattern					    |	

Notes:

Additionally reset when both MIX0/1_CTL[RESET] are set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_COL_ATTEMPT = Packet TX collision attempts before dropping frame
 *

     ==============================================================
     AGL_GMX_TX_COL_ATTEMPT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:5>  NS       RAZ      NS          NS        Reserved				            |   
 <4:0>	 LIMIT    R/W	   0x10	       16	 Collision Attempts				    |	

Notes:

Additionally reset when both MIX0/1_CTL[RESET] are set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_PAUSE_PKT_DMAC = Packet TX Pause Packet DMAC field
 *

     ==============================================================
     AGL_GMX_TX_PAUSE_PKT_DMAC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |   
 <47:0>	 DMAC 	  R/W	   0x0180c2000001 0x0180c2000001 The DMAC field placed is outbnd pause pkts |	

Notes:

Additionally reset when both MIX0/1_CTL[RESET] are set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_PAUSE_PKT_TYPE = Packet TX Pause Packet TYPE field
 *

     ==============================================================
     AGL_GMX_TX_PAUSE_PKT_TYPE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |   
 <15:0>	 TYPE 	  R/W	   0x8808      0x8808	 The TYPE field placed is outbnd pause pkts	    |	

Notes:

Additionally reset when both MIX0/1_CTL[RESET] are set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_OVR_BP = Packet TX Override BackPressure
 *

     ==============================================================
     AGL_GMX_TX_OVR_BP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:10> NS       RAZ      NS          NS        Reserved				            |   
 <9:8>   EN	  R/W	   0x0	       0	 Per port Enable back pressure override		    |	
 <7:6>   NS       RAZ      NS          NS        Reserved				            |   
 <5:4>	 BP	  R/W	   0x0	       0	 Port BackPressure status to use		    |	
						  0=Port is available				    |
						  1=Port should be back pressured		    |
 <3:2>   NS       RAZ      NS          NS        Reserved				            |   
 <1:0>   IGN_FULL R/W	   0x0	       0	 Ignore the RX FIFO full when computing BP	    |	

Notes:

IGN_FULL[0], BP[0], EN[0] will be reset when MIX0_CTL[RESET] is set to 1.
IGN_FULL[1], BP[1], EN[1] will be reset when MIX1_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_BP = Packet TX BackPressure Register
 *

     ==============================================================
     AGL_GMX_TX_BP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ      NS          NS        Reserved				            |   
 <1:0>	 BP 	  RO	   0x0	       0	 Port BackPressure status			    |	
						  0=Port is available				    |
						  1=Port should be back pressured		    |

Notes:

BP[0] will be reset when MIX0_CTL[RESET] is set to 1.
BP[1] will be reset when MIX1_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_RX_PRT_INFO = state information for the ports
 *

     ==============================================================
     AGL_GMX_RX_PRT_INFO Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:18> NS       RAZ      NS          NS        Reserved				            |   
 <17:16> DROP     RO	   0x0	       0x0	 Port indication that data was dropped		    |	
 <15:2>  NS       RAZ      NS          NS        Reserved				            |   
 <1:0>	 COMMIT   RO	   0x0	       0x0	 Port indication that SOP was accepted		    |	

Notes:

COMMIT[0], DROP[0] will be reset when MIX0_CTL[RESET] is set to 1.
COMMIT[1], DROP[1] will be reset when MIX1_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_LFSR = LFSR used to implement truncated binary exponential backoff
 *

     ==============================================================
     AGL_GMX_TX_LFSR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |   
 <15:0>	 LFSR     R/W	   0xffff      NS     	 The current state of the LFSR used to feed random  |	
						  numbers to compute truncated binary exponential   |
						  backoff.					    |

Notes:

Additionally reset when both MIX0/1_CTL[RESET] are set to 1.
----------------------------------------------------------------------------------------------------
===


 *
 * AGL_GMX_TX_INT_REG = Interrupt Register
 *

     ==============================================================
     AGL_GMX_TX_INT_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:22> NS       RAZ      NS          NS        Reserved				            |   
 <21:20> PTP_LOST R/W1C    0x0         0         A packet with a PTP request was not able to be	    |	
						  sent due to XSCOL			            |
 <19:18> NS       RAZ      NS          NS        Reserved				            |   
 <17:16> LATE_COL R/W1C    0x0         0         TX Late Collision				    |   
 <15:14> NS       RAZ      NS          NS        Reserved					    |   
 <13:12> XSDEF    R/W1C    0x0         0         TX Excessive deferral (halfdup mode only)	    |	
 <11:10> NS       RAZ      NS          NS        Reserved					    |   
 <9:8>   XSCOL    R/W1C    0x0         0         TX Excessive collisions (halfdup mode only)	    |	
 <7:4>   NS       RAZ      NS          NS        Reserved					    |   
 <3:2>   UNDFLW   R/W1C    0x0         0         TX Underflow					    |	
 <1>     NS       RAZ      NS          NS        Reserved					    |   
 <0>     PKO_NXA  R/W1C    0x0         0         Port address out-of-range from PKO Interface	    |	

Notes:

UNDFLW[0], XSCOL[0], XSDEF[0], LATE_COL[0], PTP_LOST[0] will be reset when MIX0_CTL[RESET] is set to 1.
UNDFLW[1], XSCOL[1], XSDEF[1], LATE_COL[1], PTP_LOST[1] will be reset when MIX1_CTL[RESET] is set to 1.
PKO_NXA will bee reset when both MIX0/1_CTL[RESET] are set to 1.
----------------------------------------------------------------------------------------------------
===


 * 
 * AGL_GMX_TX_INT_EN = Interrupt Enable
 *

     ==============================================================
     AGL_GMX_TX_INT_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:24> NS       RAZ      NS          NS        Reserved				            |   
 <23:22> NS       RAZ      NS          NS        Reserved				            |   
 <21:20> PTP_LOST R/W      0x0         0         A packet with a PTP request was not able to be	    |	
						  sent due to XSCOL			            |
 <19:18> NS       RAZ      NS          NS        Reserved				            |   
 <17:16> LATE_COL R/W      0x0         0         TX Late Collision				    |   
 <15:14> NS       RAZ      NS          NS        Reserved				            |   
 <13:12> XSDEF    R/W      0x0         0         TX Excessive deferral (halfdup mode only)	    |	
 <11:10> NS       RAZ      NS          NS        Reserved				            |   
 <9:8>   XSCOL    R/W      0x0         0         TX Excessive collisions (halfdup mode only)	    |	
 <7:4>   NS       RAZ      NS          NS        Reserved				            |   
 <3:2>   UNDFLW   R/W      0x0         0         TX Underflow					    |	
 <1>     NS       RAZ      NS          NS        Reserved				            |   
 <0>     PKO_NXA  R/W      0x0         0         Port address out-of-range from PKO Interface	    |	

Notes:

UNDFLW[0], XSCOL[0], XSDEF[0], LATE_COL[0], PTP_LOST[0] will be reset when MIX0_CTL[RESET] is set to 1.
UNDFLW[1], XSCOL[1], XSDEF[1], LATE_COL[1], PTP_LOST[1] will be reset when MIX1_CTL[RESET] is set to 1.
PKO_NXA will bee reset when both MIX0/1_CTL[RESET] are set to 1.
----------------------------------------------------------------------------------------------------
===


 * 
 * AGL_GMX_BAD_REG = A collection of things that have gone very, very wrong
 *

     ==============================================================
     AGL_GMX_BAD_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:38> NS       RAZ      NS          NS        Reserved				            |   
 <37>	 TXPSH1	  R/W1C	   0x0	       0x0	 TX FIFO overflow (MII1)			    |	
 <36>	 TXPOP1	  R/W1C	   0x0	       0x0	 TX FIFO underflow (MII1)			    |	
 <35>	 OVRFLW1  R/W1C	   0x0	       0x0	 RX FIFO overflow (MII1)			    |	
 <34>	 TXPSH	  R/W1C	   0x0	       0x0	 TX FIFO overflow (MII0)			    |	
 <33>	 TXPOP	  R/W1C	   0x0	       0x0	 TX FIFO underflow (MII0)			    |	
 <32>	 OVRFLW	  R/W1C	   0x0	       0x0	 RX FIFO overflow (MII0)			    |	
 <31:27> NS       RAZ      NS          NS        Reserved				            |   
 <26>    STATOVR  R/W1C    0x0         0         TX Statistics overflow				    |   
 <25:24> NS       RAZ      NS          NS        Reserved				            |   
 <23:22> LOSTSTAT R/W1C    0x0         0         TX Statistics data was over-written		    |	
						  In MII/RGMII, one bit per port		    |
						  TX Stats are corrupted                            |
 <21:4>  NS       RAZ      0x0         0         Reserved					    |   
 <3:2>   OUT_OVR  R/W1C    0x0         0         Outbound data FIFO overflow                   	    |   
 <1:0>   NS       RAZ      0x0         0         Reserved					    |   

Notes:

OUT_OVR[0], LOSTSTAT[0], OVRFLW, TXPOP, TXPSH    will be reset when MIX0_CTL[RESET] is set to 1.
OUT_OVR[1], LOSTSTAT[1], OVRFLW1, TXPOP1, TXPSH1 will be reset when MIX1_CTL[RESET] is set to 1.
STATOVR will be reset when both MIX0/1_CTL[RESET] are set to 1.
----------------------------------------------------------------------------------------------------
===

 * 
 * AGL_GMX_STAT_BP = Number of cycles that the TX/Stats block has help up operation
 *

     ==============================================================
     AGL_GMX_STAT_BP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:17> NS       RAZ      NS          NS        Reserved				            |   
 <16>    BP       RO       0x0         0         Current BP state				    |   
 <15:0>  CNT      R/W1C    0x0         0         Number of cycles that BP has been asserted	    |   
						  Saturating counter                                |

Notes:

Additionally reset when both MIX0/1_CTL[RESET] are set to 1.
----------------------------------------------------------------------------------------------------
===


 * 
 * AGL_GMX_RX_TX_STATUS = GMX RX/TX Status
 *

     ==============================================================
     AGL_GMX_RX_TX_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6>  NS       RAZ      NS          NS        Reserved				            |   
 <5:4>   TX       RC       0           0         Transmit data since last read			    |   
 <3:2>   NS       RAZ      NS          NS        Reserved				            |   
 <1:0>   RX       RC       0           0         Receive data since last read			    |   

Notes:

RX[0], TX[0] will be reset when MIX0_CTL[RESET] is set to 1.
RX[1], TX[1] will be reset when MIX1_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 * 
 * AGL_PRT_CTL = AGL Port Control
 *

     ==============================================================
     AGL_PRT(0..1)_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>	 DRV_BYP   R/W     0           0         Bypass the compensation controller and use	    |	
						  DRV_NCTL and DRV_PCTL				    |
						  Note: the reset value was changed from pass1	    |
						  to pass2.					    |
 <62>    NS        RAZ     NS          NS        Reserved				            |   
 <61:56> CMP_PCTL  RO      NS          NS        PCTL drive strength from the compensation ctl	    |	
 <55:54> NS        RAZ     NS          NS        Reserved				            |   
 <53:48> CMP_NCTL  RO      NS          NS        NCTL drive strength from the compensation ctl	    |	
 <47:46> NS        RAZ     NS          NS        Reserved				            |   
 <45:40> DRV_PCTL  R/W     19          NS        PCTL drive strength to use in bypass mode	    |	
						  Reset value of 19 is for 50 ohm termination	    |
 <39:38> NS        RAZ     NS          NS        Reserved				            |   
 <37:32> DRV_NCTL  R/W     15          NS        NCTL drive strength to use in bypass mode	    |	
						  Reset value of 15 is for 50 ohm termination	    |
 <31:29> NS        RAZ     NS          NS        Reserved				            |   
 <28:24> CLK_SET   RO      NS          NS        The clock delay as determined by the DLL	    |	
 <23>	 CLKRX_BYP R/W     0           NS        Bypass the RX clock delay setting		    |	
						  Skews RXC from RXD,RXCTL in RGMII mode	    |
						  By default, HW internally shifts the RXC clock    |
						  to sample RXD,RXCTL assuming clock and data and   |
						  sourced synchronously from the link partner.	    |
						  In MII mode, the CLKRX_BYP is forced to 1.	    |
 <22:21> NS        RAZ     NS          NS        Reserved				            |   
 <20:16> CLKRX_SET R/W     0           NS        RX clock delay setting to use in bypass mode	    |	
						  Skews RXC from RXD in RGMII mode		    |
 <15>	 CLKTX_BYP R/W     1           NS        Bypass the TX clock delay setting		    |	
						  Skews TXC from TXD,TXCTL in RGMII mode	    |
						  By default, clock and data and sourced	    |
						  synchronously.				    |
						  In MII mode, the CLKRX_BYP is forced to 1.	    |
 <14:13> NS        RAZ     NS          NS        Reserved				            |   
 <12:8>  CLKTX_SET R/W     0           NS        TX clock delay setting to use in bypass mode	    |	
						  Skews TXC from TXD in RGMII mode		    |
 <7:5>   NS        RAZ     NS          NS        Reserved				            |   
 <4>     DLLRST	   R/W     1           0         DLL Reset	   				    |   
 <3>     COMP	   R/W     0           1         Compensation Enable   				    |   
 <2>     ENABLE    R/W     0           1         Port Enable     				    |   
						  Note: the reset value was changed from pass1	    |
						  to pass2.					    |
 <1>     CLKRST    R/W     1           0         Clock Tree Reset				    |   
 <0>     MODE      R/W     1           NS        Port Mode       				    |   
						  MODE must be set the same for all ports in which  |
						  AGL_PRTx_CTL[ENABLE] is set.			    |
						  0=RGMII					    |
						  1=MII						    |

Notes:

AGL_PRT0_CTL will be reset when MIX0_CTL[RESET] is set to 1.
AGL_PRT1_CTL will be reset when MIX1_CTL[RESET] is set to 1.
----------------------------------------------------------------------------------------------------
===


 * Specify the RSL base addresses for the block
 *
 *                  DFA_CONFIG = DFA Configuration Register
 *
 * Description: 
 *

     ==============================================================
     DFA_CONFIG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     DTECLKDIS  R/W      1      0        DFA Clock Disable Source                                   
                                            When SET, the DFA clocks for DTE(thread engine) 
                                            operation are disabled (to conserve overall chip clocking
                                            power when the DFA function is not used). 
                                            NOTE: When SET, SW MUST NEVER issue NCB-Direct CSR 
                                            operations to the DFA (will result in NCB Bus Timeout 
                                            errors). 
                                            NOTE: This should only be written to a different value
                                            during power-on SW initialization.

                                            SWNOTE: The MIO_FUS___DFA_DTE_DISABLE fuse bit will
                                            be forced into this register at reset. If the fuse bit 
                                            contains '1', writes to DTECLKDIS are disallowed and 
                                            will always be read as '1'.                                               

<3:1>   CLDTECRIP  R/W       0      0       Encoding which represents #of DTEs to cripple for each     
                                            cluster. Typically DTE_CLCRIP=0 which enables all DTEs 
                                            within each cluster. However, when the DFA performance 
                                            counters are used, SW may want to limit the #of DTEs
                                            per cluster available, as there are only 4 parallel 
                                            performance counters. 
                                               DTE_CLCRIP | #DTEs crippled(per cluster)
                                            ------------+-----------------------------
                                                   0    |  0      DTE[15:0]:ON
                                                   1    |  1/2    DTE[15:8]:OFF  /DTE[7:0]:ON   
                                                   2    |  1/4    DTE[15:12]:OFF /DTE[11:0]:ON  
                                                   3    |  3/4    DTE[15:4]:OFF  /DTE[3:0]:ON  
                                                   4    |  1/8    DTE[15:14]:OFF /DTE[13:0]:ON  
                                                   5    |  5/8    DTE[15:6]:OFF  /DTE[5:0]:ON  
                                                   6    |  3/8    DTE[15:10]:OFF /DTE[9:0]:ON  
                                                   7    |  7/8    DTE[15:2]:OFF  /DTE[1:0]:ON  

					    NOTE: Higher numbered DTEs are crippled first. For instance, 
                                            on o63 (with 16 DTEs/cluster), if DTE_CLCRIP=1(1/2), then 
                                            DTE#s [15:8] within the cluster are crippled and only 
                                            DTE#s [7:0] are available. 

                                            IMPNOTE: The encodings are done in such a way as to later 
                                            be used with fuses (for future o2 revisions which will disable
                                            some #of DTEs). Blowing a fuse has the effect that there will
                                            always be fewer DTEs available. [ie: we never want a customer
                                            to blow additional fuses to get more DTEs]. 

                                            SWNOTE: The MIO_FUS___DFA_NUMDTE_CRIPPLE[2:0] fuse bits will
                                            be forced into this register at reset. Any fuse bits that 
                                            contain '1' will be disallowed during a write and will always 
                                            be read as '1'.                                               

<7:4>   CLMSKCRIP  R/W       0      0       Cluster Cripple Mask                                      
                                            A one in each bit of the mask represents which DTE cluster to 
                                            cripple.   
                                            NOTE: o63 has only a single Cluster (therefore CLMSKCRIP[0]
                                            is the only bit used. 
                                            o2 has 4 clusters, where all CLMSKCRIP mask bits are used.

                                            SWNOTE: The MIO_FUS___DFA_CLMASK_CRIPPLE[3:0] fuse bits will
                                            be forced into this register at reset. Any fuse bits that 
                                            contain '1' will be disallowed during a write and will always
                                            be read as '1'.                                                

<63:8>  NS        RAZ       NS     NS       RESERVED						      
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_CONTROL = DFA Control Register
 *
 * Description: 
 *

     ==============================================================
     DFA_CONTROL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     IMODE     R/W       1       1        NCB-Inbound Arbiter 				      
                                             (0=FP {LP=NRQ,HP=NRP}, 1=RR)
                                             NOTE: This should only be written to a different value
                                             during power-on SW initialization.  
<1>     QMODE     R/W       1       1        NCB-NRQ Arbiter Mode 				      
                                             (0=Fixed Priority {LP=IRF,RWF,PRF,HP=GRF}/1=RR
                                             NOTE: This should only be written to a different value
                                             during power-on SW initialization.  
 
<2>     PMODE     R/W       1       1        NCB-NRP Arbiter Mode 				      
                                             (0=Fixed Priority {LP=WQF,DFF,HP=RGF}/1=RR
                                             NOTE: This should only be written to a different value
                                             during power-on SW initialization.  
 
<4:3>   NS        RAZ       NS      NS       RESERVED						      
 
<5>     SBDLCK    R/W       0       0        DFA Scoreboard LOCK Strobe			              
                                             *FOR INTERNAL USE ONLY* 
				             DFA Scoreboard debug control  
                                             When written with a '1', the DFA Scoreboard Debug
                                             registers (DFA_SBD_DBG[0-3]) are all locked down. 
                                             This allows SW to lock down the contents of the entire
                                             SBD for a single instant in time. All subsequent reads
                                             of the DFA scoreboard registers will return the data
                                             from that instant in time. 

<9:6>  SBDNUM    R/W       0       0         SBD Debug Entry#                                         
                                             *FOR INTERNAL USE ONLY*
					     DFA Scoreboard debug control  
                                             Selects which one of 16 DFA Scoreboard entries is
                                             latched into the DFA_SBD_DBG[0-3] registers.  
                                              
<63:10> NS        RAZ       NS      NS       RESERVED						      
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_ERROR = DFA ERROR Register
 *
 * Description: 
 *

     ==============================================================
     DFA_ERROR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 
<0>     DBLOVF    R/W1C     0       0        Doorbell Overflow detected - Status bit                  
                                             When set, the 20b accumulated doorbell register      
                                             had overflowed (SW wrote too many doorbell requests). 
 
                                             If the DBLINA had previously been enabled(set), 
                                             an interrupt will be posted. Software can clear 
                                             the interrupt by writing a 1 to this register bit. 
 
                                             NOTE: Detection of a Doorbell Register overflow
                                             is a catastrophic error which may leave the DFA
                                             HW in an unrecoverable state.    

<3:1>   DC0PERR   R/W1C     0       0        RAM[3:1] Parity Error Detected from Node Cluster #0      
                                             See also DFA_DTCFADR register which contains the
                                             failing addresses for the internal node cache RAMs. 

<15:4>  NS        RAZ       NS      NS       RESERVED						      

<16>    CNDRD     RO        0       0        If DC0PERR[0]=1 indicating a RAM1 Parity error,          
                                             this additional bit further specifies that the 
                                             RAM1 parity error was detected during a CND-RD 
                                             (Cache Node Metadata Read). 

                                             *DON'T PUT IN HRM*
                                             For CNDRD Parity Error, the previous CNA arc fetch 
                                             information is written to RWORD1+ as follows:     
                                                RWORD1+[NTYPE]=MNODE
                                                RWORD1+[NDNID]=cna.ndnid
                                                RWORD1+[NHMSK]=cna.hmsk
                                                RWORD1+[NNPTR]=cna.nnptr[13:0]

<63:17> NS        RAZ       NS      NS       RESERVED						      
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_INTMSK = DFA ERROR Interrupt Mask Register
 *
 * Description: 
 *

     ==============================================================
     DFA_INTMSK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>    DBLINA    R/W       0       0        Doorbell Overflow Interrupt Enable bit.                  
                                             When set, doorbell overflow conditions are reported.

<3:1>  DC0PENA   R/W       0       0        RAM[3:1] Parity Error Enabled Node Cluster #0            

<63:4> NS        RAZ       NS      NS       RESERVED						     
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_DEBUG0 = DFA Scoreboard Debug #0 Register
 * *FOR INTERNAL USE ONLY*
 * Description: When the DFA_CONTROL[SBDLCK] bit is written '1', the contents of this register are locked down. 
 * Otherwise, the contents of this register are the 'active' contents of the DFA Scoreboard at the time of the
 * CSR read. 
 * VERIFICATION NOTE: Read data is unsafe. X's(undefined data) can propagate (in the behavioral model) 
 * on the reads unless the DTE Engine specified by DFA_CONTROL[SBDNUM] has previously been assigned an 
 * instruction. 
 * 

     ==============================================================
     DFA_DEBUG0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0> SBD0       RO        NS       NS      DFA ScoreBoard #0 Data       	                      
                                             (DFA Scoreboard Debug)	   
 	                                        [63:38]   (26) rptr[28:3]: Result Base Pointer (QW-aligned)
 	                                        [37:22]   (16) Cumulative Result Write Counter (for HDR write) 	  
 	                                        [21]       (1) Waiting for GRdRsp EOT
	                                        [20]       (1) Waiting for GRdReq Issue (to NRQ)
	                                        [19]       (1) GLPTR/GLCNT Valid 
	                                        [18]       (1) Completion Mark Detected
	                                        [17:15]    (3) Completion Code [0=PDGONE/1=PERR/2=RFULL/3=TERM]
                                                [14]       (1) Completion Detected
	                                        [13]       (1) Waiting for HDR RWrCmtRsp
	                                        [12]       (1) Waiting for LAST RESULT RWrCmtRsp
	                                        [11]       (1) Waiting for HDR RWrReq
                                                [10]        (1) Waiting for RWrReq
                                                [9]        (1) Waiting for WQWrReq issue 
	                                        [8]        (1) Waiting for PRdRsp EOT
	                                        [7]        (1) Waiting for PRdReq Issue (to NRQ)
	                                        [6]        (1) Packet Data Valid
	                                        [5]        (1) WQVLD
	                                        [4]        (1) WQ Done Point (either WQWrReq issued (for WQPTR<>0) OR HDR RWrCmtRsp)
	                                        [3]        (1) Resultant write STF/P Mode
                                                [2]        (1) Packet Data LDT mode
                                                [1]        (1) Gather Mode
                                                [0]        (1) Valid
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_DEBUG1 = DFA Scoreboard Debug #1 Register
 * *FOR INTERNAL USE ONLY*
 * Description: When the DFA_CONTROL[SBDLCK] bit is written '1', the contents of this register are locked down. 
 * Otherwise, the contents of this register are the 'active' contents of the DFA Scoreboard at the time of the
 * CSR read. 
 * VERIFICATION NOTE: Read data is unsafe. X's(undefined data) can propagate (in the behavioral model) 
 * on the reads unless the DTE Engine specified by DFA_CONTROL[SBDNUM] has previously been assigned an 
 * instruction. 
 *

     ==============================================================
     DFA_DEBUG1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0> SBD1       RO        NS       NS      DFA ScoreBoard #1 Data       	                      
                                             DFA Scoreboard Debug Data
                                                [63:56]   (8) UNUSED
                                                [55:16]  (40) Packet Data Pointer
                                                [15:0]   (16) Packet Data Counter
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_DEBUG2 = DFA Scoreboard Debug #2 Register
 *
 * Description: When the DFA_CONTROL[SBDLCK] bit is written '1', the contents of this register are locked down. 
 * Otherwise, the contents of this register are the 'active' contents of the DFA Scoreboard at the time of the
 * CSR read. 
 * VERIFICATION NOTE: Read data is unsafe. X's(undefined data) can propagate (in the behavioral model) 
 * on the reads unless the DTE Engine specified by DFA_CONTROL[SBDNUM] has previously been assigned an 
 * instruction. 
 *

     ==============================================================
     DFA_DEBUG2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0> SBD2       RO        NS       NS      DFA ScoreBoard #2 Data       	                      
                                                [63:45] (19) UNUSED
                                                [44:42]  (3) Instruction Type
                                                [41:5]  (37) rwptr[39:3]: Result Write Pointer		   
                                                [4:0]    (5) prwcnt[4:0]: Pending Result Write Counter
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_DEBUG3 = DFA Scoreboard Debug #3 Register
 *
 * Description: When the DFA_CONTROL[SBDLCK] bit is written '1', the contents of this register are locked down. 
 * Otherwise, the contents of this register are the 'active' contents of the DFA Scoreboard at the time of the
 * CSR read. 
 * VERIFICATION NOTE: Read data is unsafe. X's(undefined data) can propagate (in the behavioral model) 
 * on the reads unless the DTE Engine specified by DFA_CONTROL[SBDNUM] has previously been assigned an 
 * instruction. 
 *

     ==============================================================
     DFA_DEBUG3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0> SBD3       RO        NS       NS      DFA ScoreBoard #3 Data       	                      
                                             [63:52] (11) rptr[39:29]: Result Base Pointer (QW-aligned)
                                             [52:16] (37) glptr[39:3]: Gather List Pointer
                                             [15:0]  (16) glcnt Gather List Counter 
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_DTCFADR = DFA DTC Failing Address Register
 *
 * Description: DFA Node Cache Failing Address/Control Error Capture information 
 * This register contains useful information to help in isolating a Node Cache RAM failure. 
 * NOTE: The first detected PERR failure is captured in DFA_DTCFADR (locked down), until the 
 * corresponding PERR Interrupt is cleared by writing one (W1C). (see: DFA_ERR[DC0PERR[2:0]]). 
 *

     ==============================================================
     DFA_DTCFADR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<13:0>   RAM1FADR  RO        NS       NS     DFA RAM1 Failing Address       	                      
                                             If DFA_ERR[DC0PERR<0>]=1, this field indicates the
                                             failing RAM1 Address. The failing address is locked 
                                             down until the DC0PERR<0> W1C occurs.
<15:14>  NS        RAZ       NS       NS     RESERVED		 				      
<24:16>  RAM2FADR  RO        NS       NS     DFA RAM2 Failing Address       	                      
                                             If DFA_ERR[DC0PERR<1>]=1, this field indicates the
                                             failing RAM2 Address. The failing address is locked 
                                             down until the DC0PERR<1> W1C occurs.

<31:25>  NS        RAZ       NS       NS     RESERVED		 				      
<43:32>  RAM3FADR  RO        NS       NS     DFA RAM3 Failing Address       	                      
                                             If DFA_ERR[DC0PERR<2>]=1, this field indicates the
                                             failing RAM3 Address. The failing address is locked 
                                             down until the DC0PERR<2> W1C occurs. 
         
<63:44>  NS        RAZ       NS       NS     RESERVED		 				      
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_PFC_GCTL = DFA Performance Counter Global Control
 * *FOR INTERNAL USE ONLY*
 * Description: 
 * 

     ==============================================================
     DFA_PFC_GCTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     CNT0ENA    R/W     0           0         Performance Counter 0 Enable 		                
                                                 When this bit is set, the performance counter #0
                                                 is enabled.   
<1>     CNT1ENA    R/W     0           0         Performance Counter 1 Enable 		                
                                                 When this bit is set, the performance counter #1
                                                 is enabled.   
<2>     CNT2ENA    R/W     0           0         Performance Counter 2 Enable 		                
                                                 When this bit is set, the performance counter #2
                                                 is enabled.   
<3>     CNT3ENA    R/W     0           0         Performance Counter 3 Enable 		                
                                                 When this bit is set, the performance counter #3
                                                 is enabled.   
<4>     CNT0WCLR   R/W     0           0         Performance Counter #0 Write Clear 			
                                                 If this bit is set, CSR writes to the DFA_PFC0_CNT
                                                 will clear the count value. 
                                                 If this bit is clear, CSR writes to the DFA_PFC0_CNT
                                                 will continue the count from the written value.  
<5>     CNT1WCLR   R/W     0           0         Performance Counter #1 Write Clear 			
                                                 If this bit is set, CSR writes to the DFA_PFC1_CNT
                                                 will clear the count value. 
                                                 If this bit is clear, CSR writes to the DFA_PFC1_CNT
                                                 will continue the count from the written value.  
<6>     CNT2WCLR   R/W     0           0         Performance Counter #2 Write Clear 			
                                                 If this bit is set, CSR writes to the DFA_PFC2_CNT
                                                 will clear the count value. 
                                                 If this bit is clear, CSR writes to the DFA_PFC2_CNT
                                                 will continue the count from the written value.  
<7>     CNT3WCLR   R/W     0           0         Performance Counter #3 Write Clear 			
                                                 If this bit is set, CSR writes to the DFA_PFC3_CNT
                                                 will clear the count value. 
                                                 If this bit is clear, CSR writes to the DFA_PFC3_CNT
                                                 will continue the count from the written value.  
<8>     CNT0RCLR   R/W     0           0         Performance Counter #0 Read Clear 			
                                                 If this bit is set, CSR reads to the DFA_PFC0_CNT
                                                 will clear the count value. This allows SW to maintain
                                                 'cumulative' counters to avoid HW wraparound. 
<9>     CNT1RCLR   R/W     0           0         Performance Counter #1 Read Clear 			
                                                 If this bit is set, CSR reads to the DFA_PFC1_CNT
                                                 will clear the count value. This allows SW to maintain
                                                 'cumulative' counters to avoid HW wraparound. 
<10>    CNT2RCLR   R/W     0           0         Performance Counter #2 Read Clear 			
                                                 If this bit is set, CSR reads to the DFA_PFC2_CNT
                                                 will clear the count value. This allows SW to maintain
                                                 'cumulative' counters to avoid HW wraparound. 
<11>    CNT3RCLR   R/W     0           0         Performance Counter #3 Read Clear 			
                                                 If this bit is set, CSR reads to the DFA_PFC3_CNT
                                                 will clear the count value. This allows SW to maintain
                                	         'cumulative' counters to avoid HW wraparound. 
<14:12> SNODE      R/W     0x0         0x0       Starting Node Selector                                 
                                                 When DFA_PFCx_CTL[EVSEL]=Node Transition(31), the SNODE 
						 field is used to select Starting Node, and the ENODE 
						 field is used to select the Ending Node.   
                                                   0: LDNODE
                                                   1: SDNODE
                                                   2: LCNODE
                                                   3: SCNODE
                                                   4: LMNODE
                                                   5: SMNODE
                                                   6: MONODE
                                                   7: RESERVED
<17:15>  ENODE     R/W     0x0         0x0       Ending Node Selector                                   
                                                 When DFA_PFCx_CTL[EVSEL]=Node Transition(31), the ENODE 
                                                 field is used to select Ending Node, and the SNODE 
                                                 field is used to select the Starting Node.   
                                                   0: LDNODE
                                                   1: SDNODE
                                                   2: LCNODE
                                                   3: SCNODE
                                                   4: LMNODE
                                                   5: SMNODE
                                                   6: MONODE
                                                   7: RESERVED 
<19:18>  EDNODE    R/W     0x0         0x0       Ending DNODE Selector                                  
                                                 When ENODE=0/1(*DNODE), this field is used to further
                                                 specify the Ending DNODE transition sub-type: 
                                                    0: ALL DNODE sub-types
                                                    1: ->D2e (explicit DNODE transition node-arc alone transitions to DNODE)
                                                    2: ->D2i (implicit DNODE transition:arc-present triggers transition)
                                                    3: ->D1r (rescan DNODE transition)
<20>     PMODE     R/W     0x0         0x0       Select Mode                                            
                                                 0: Events are selected on a per-cluster DTE# (CLNUM/CLDTE)
                                                 DFA_PFCx_CTL[CLNUM,CLDTE] specifies the cluster-DTE for
                                                 each 1(of 4) performance counters.  
                                                 1: Events are selected on a per-graph basis (VGID=virtual Graph ID). 
                                                 NOTE: Only EVSEL=[0...31] can be used in conjunction with PMODE=1. 
                                                 DFA_PFC_GCTL[VGID] specifies the Virtual graph ID used across
                                                 all four performance counters. 
<28:21>  VGID      R/W     0x0         0x0       Virtual Graph Id#                                      
                                                 When PMODE=1(per-graph selector), this field is used
                                                 to select/monitor only those events which are
                                                 associated with this selected VGID(virtual graph ID). 
                                                 This field is used globally across all four performance
                                                 counters.  
                                                 IMPNOTE: I implemented a global VGID across all 4 performance 
                                                 counters to save wires/area.  
<63:29>   NS         RAZ     NS       NS         RESERVED		 				 
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_PFC0_CTL = DFA Performance Counter#0 Control  
 * *FOR INTERNAL USE ONLY*
 * Description: 
 *

     ==============================================================
     DFA_PFC0_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <1:0>   CLNUM     R/W     0x0      0x0     Performance Counter#0 Cluster Selector                    
                                            When DFA_PFC_GCTL[PMODE]=0 (per-cluster DTE), this field 
                                            is used to select/monitor the cluster# for all events
                                            associated with Performance Counter#0. 
 <5:2>   CLDTE     R/W     0x0      0x0     Performance Counter#0 Cluster DTE Selector                
                                            When DFA_PFC_GCTL[PMODE]=0 (per-cluster DTE), this field
                                            is used to select/monitor the cluster's DTE# for all events
                                            associated with Performance Counter#0. 
 <7:6>	 NS        RAZ     NS       NS      RESERVED		 				      
 <13:8>  EVSEL     R/W     NS       NS      Performance Counter#0 Event Selector      	              
                                            // Events [0-31] are based on PMODE(0:per cluster-DTE 1:per graph)
                                              0:  #Total Cycles
                                              1:  #LDNODE visits
                                              2:  #SDNODE visits
                                              3:  #DNODE visits (LD/SD)
                                              4:  #LCNODE visits
                                              5:  #SCNODE visits
                                              6:  #CNODE visits (LC/SC)
                                              7:  #LMNODE visits
                                              8:  #SMNODE visits
                                              9:  #MNODE visits (LM/SM)	
                                              10: #MONODE visits
                                              11: #CACHE visits (DNODE,CNODE) exc: CNDRD,MPHIDX
                                              12: #CACHE visits (DNODE,CNODE)+(CNDRD,MPHIDX)
                                              13: #MEMORY visits (MNODE+MONODE) 
                                              14: #CNDRDs detected (occur for SCNODE->*MNODE transitions) 
                                              15: #MPHIDX detected (occur for ->LMNODE transitions)
                                              16: #RESCANs detected (occur when HASH collision is detected)
                                              17: #GWALK iterations STALLED - Packet data/Result Buffer
                                              18: #GWALK iterations NON-STALLED
                                              19: #CLOAD iterations   
                                              20: #MLOAD iterations 
					          [NOTE: If PMODE=1(per-graph) the MLOAD IWORD0.VGID will be used to discern graph#]. 
                                              21: #RWORD1+ writes
                                              22: #cycles Cluster is busy
                                              23: #GWALK Instructions
                                              24: #CLOAD Instructions
                                              25: #MLOAD Instructions 
					          [NOTE: If PMODE=1(per-graph) the MLOAD IWORD0.VGID will be used to discern graph#]. 
                                              26: #GFREE Instructions
                                              27-30: RESERVED 
                                              31: # Node Transitions detected (see DFA_PFC_GCTL[SNODE,ENODE,EDNODE] registers
                                            //=============================================================
					    // Events [32-63] are used ONLY FOR PMODE=0(per-cluster DTE mode): 
                                              32: #cycles a specific cluster-DTE remains active(valid state)				  
                                              33: #cycles a specific cluster-DTE waits for Memory Response Data
                                              34: #cycles a specific cluster-DTE waits in resource stall state 
                                                     (waiting for packet data or result buffer space)
                                              35: #cycles a specific cluster-DTE waits in resource pending state 
                                              36-63: RESERVED
                                            //=============================================================
 <63:14> NS        RAZ       NS       NS     RESERVED		 				      
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_PFC0_CNT = DFA Performance Counter #0
 * *FOR INTERNAL USE ONLY*
 * Description: 
 * 

     ==============================================================
     DFA_PFC0_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  PFCNT0   R/W      0x0         NS        Performance Counter #0                               
                                                 When DFA_PFC_GCTL[CNT0ENA]=1, the event selected
                                                 by DFA_PFC0_CTL[EVSEL] is counted.
                                                 See also DFA_PFC_GCTL[CNT0WCLR] and DFA_PFC_GCTL
                                                 [CNT0RCLR] for special clear count cases available
                                                 for SW data collection.
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_PFC1_CTL = DFA Performance Counter#1 Control  
 * *FOR INTERNAL USE ONLY*
 * Description: 
 *

     ==============================================================
     DFA_PFC1_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <1:0>   CLNUM     R/W     0x0      0x0     Performance Counter#1 Cluster Selector                    
                                            When DFA_PFC_GCTL[PMODE]=0 (per-cluster DTE), this field 
                                            is used to select/monitor the cluster# for all events
                                            associated with Performance Counter#1. 
 <5:2>   CLDTE     R/W     0x0      0x0     Performance Counter#1 Cluster DTE Selector                
                                            When DFA_PFC_GCTL[PMODE]=0 (per-cluster DTE), this field
                                            is used to select/monitor the cluster's DTE# for all events
                                            associated with Performance Counter#1. 
 <7:6>   NS        RAZ     NS       NS      RESERVED		 				      
 <13:8>  EVSEL     R/W     NS       NS      Performance Counter#1 Event Selector      	              
                                              0:  #Cycles
                                              1:  #LDNODE visits
                                              2:  #SDNODE visits
                                              3:  #DNODE visits (LD/SD)
                                              4:  #LCNODE visits
                                              5:  #SCNODE visits
                                              6:  #CNODE visits (LC/SC)
                                              7:  #LMNODE visits
                                              8:  #SMNODE visits
                                              9:  #MNODE visits (LM/SM)	
                                              10: #MONODE visits
                                              11: #CACHE visits (DNODE,CNODE) exc: CNDRD,MPHIDX
                                              12: #CACHE visits (DNODE,CNODE)+(CNDRD,MPHIDX)
                                              13: #MEMORY visits (MNODE+MONODE) 
                                              14: #CNDRDs detected (occur for SCNODE->*MNODE transitions) 
                                              15: #MPHIDX detected (occur for ->LMNODE transitions)
                                              16: #RESCANs detected (occur when HASH collision is detected)
                                              17: #GWALK STALLs detected - Packet data/Result Buffer
                                              18: #GWALK DTE cycles (all DTE-GNT[3a]) 
                                              19: #CLOAD DTE cycles
                                              20: #MLOAD DTE cycles
                                              21: #cycles waiting for Memory Response Data
                                              22: #cycles waiting in resource stall state (waiting for packet data or result buffer space)
                                              23: #cycles waiting in resource pending state 
                                              24: #RWORD1+ writes
                                              25: #DTE-VLD cycles				  
                                              26: #DTE Transitions detected (see DFA_PFC_GCTL[SNODE,ENODE] registers
                                              27: #GWALK Instructions
                                              28: #CLOAD Instructions
                                              29: #MLOAD Instructions 
                                              30: #GFREE Instructions (== #GFREE DTE cycles)
                                              31: RESERVED
                                              32: #DTE-Busy cycles (ALL DTE-GNT strobes)
 
 <63:14> NS        RAZ       NS       NS     RESERVED		 				      
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_PFC1_CNT = DFA Performance Counter #1
 * *FOR INTERNAL USE ONLY*
 * Description: 
 * 

     ==============================================================
     DFA_PFC1_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  PFCNT1   R/W      0x0         NS        Performance Counter #1                               
                                                 When DFA_PFC_GCTL[CNT1ENA]=1, the event selected
                                                 by DFA_PFC1_CTL[EVSEL] is counted.
                                                 See also DFA_PFC_GCTL[CNT1WCLR] and DFA_PFC_GCTL
                                                 [CNT1RCLR] for special clear count cases available
                                                 for SW data collection.
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_PFC2_CTL = DFA Performance Counter#2 Control  
 * *FOR INTERNAL USE ONLY*
 * Description: 
 *

     ==============================================================
     DFA_PFC2_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <1:0>   CLNUM     R/W     0x0      0x0     Performance Counter#2 Cluster Selector                    
                                            When DFA_PFC_GCTL[PMODE]=0 (per-cluster DTE), this field 
                                            is used to select/monitor the cluster# for all events
                                            associated with Performance Counter#2. 
 <5:2>   CLDTE     R/W     0x0      0x0     Performance Counter#2 Cluster DTE Selector                
                                            When DFA_PFC_GCTL[PMODE]=0 (per-cluster DTE), this field
                                            is used to select/monitor the cluster's DTE# for all events
                                            associated with Performance Counter#2. 
 <7:6>   NS        RAZ     NS       NS      RESERVED		 				      
 <13:8>  EVSEL     R/W     NS       NS      Performance Counter#2 Event Selector      	              
                                              0:  #Cycles
                                              1:  #LDNODE visits
                                              2:  #SDNODE visits
                                              3:  #DNODE visits (LD/SD)
                                              4:  #LCNODE visits
                                              5:  #SCNODE visits
                                              6:  #CNODE visits (LC/SC)
                                              7:  #LMNODE visits
                                              8:  #SMNODE visits
                                              9:  #MNODE visits (LM/SM)	
                                              10: #MONODE visits
                                              11: #CACHE visits (DNODE,CNODE) exc: CNDRD,MPHIDX
                                              12: #CACHE visits (DNODE,CNODE)+(CNDRD,MPHIDX)
                                              13: #MEMORY visits (MNODE+MONODE) 
                                              14: #CNDRDs detected (occur for SCNODE->*MNODE transitions) 
                                              15: #MPHIDX detected (occur for ->LMNODE transitions)
                                              16: #RESCANs detected (occur when HASH collision is detected)
                                              17: #GWALK STALLs detected - Packet data/Result Buffer
                                              18: #GWALK DTE cycles (all DTE-GNT[3a]) 
                                              19: #CLOAD DTE cycles
                                              20: #MLOAD DTE cycles
                                              21: #cycles waiting for Memory Response Data
                                              22: #cycles waiting in resource stall state (waiting for packet data or result buffer space)
                                              23: #cycles waiting in resource pending state 
                                              24: #RWORD1+ writes
                                              25: #DTE-VLD cycles				  
                                              26: #DTE Transitions detected (see DFA_PFC_GCTL[SNODE,ENODE] registers
                                              27: #GWALK Instructions
                                              28: #CLOAD Instructions
                                              29: #MLOAD Instructions 
                                              30: #GFREE Instructions (== #GFREE DTE cycles)
                                              31: RESERVED
                                              32: #DTE-Busy cycles (ALL DTE-GNT strobes)
 <63:14> NS        RAZ       NS       NS     RESERVED		 				      
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_PFC2_CNT = DFA Performance Counter #2
 * *FOR INTERNAL USE ONLY*
 * Description: 
 * 

     ==============================================================
     DFA_PFC2_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  PFCNT2   R/W      0x0         NS        Performance Counter #2                               
                                                 When DFA_PFC_GCTL[CNT2ENA]=1, the event selected
                                                 by DFA_PFC2_CTL[EVSEL] is counted.
                                                 See also DFA_PFC_GCTL[CNT2WCLR] and DFA_PFC_GCTL
                                                 [CNT2RCLR] for special clear count cases available
                                                 for SW data collection.
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_PFC3_CTL = DFA Performance Counter#3 Control  
 * *FOR INTERNAL USE ONLY*
 * Description: 
 *

     ==============================================================
     DFA_PFC3_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <1:0>   CLNUM     R/W     0x0      0x0     Performance Counter#3 Cluster Selector                    
                                            When DFA_PFC_GCTL[PMODE]=0 (per-cluster DTE), this field 
                                            is used to select/monitor the cluster# for all events
                                            associated with Performance Counter#3. 
 <5:2>   CLDTE     R/W     0x0      0x0     Performance Counter#3 Cluster DTE Selector                
                                            When DFA_PFC_GCTL[PMODE]=0 (per-cluster DTE), this field
                                            is used to select/monitor the cluster's DTE# for all events
                                            associated with Performance Counter#3. 
 <7:6>   NS        RAZ     NS       NS      RESERVED		 				      
 <13:8>  EVSEL     R/W     NS       NS      Performance Counter#3 Event Selector      	              
                                              0:  #Cycles
                                              1:  #LDNODE visits
                                              2:  #SDNODE visits
                                              3:  #DNODE visits (LD/SD)
                                              4:  #LCNODE visits
                                              5:  #SCNODE visits
                                              6:  #CNODE visits (LC/SC)
                                              7:  #LMNODE visits
                                              8:  #SMNODE visits
                                              9:  #MNODE visits (LM/SM)	
                                              10: #MONODE visits
                                              11: #CACHE visits (DNODE,CNODE) exc: CNDRD,MPHIDX
                                              12: #CACHE visits (DNODE,CNODE)+(CNDRD,MPHIDX)
                                              13: #MEMORY visits (MNODE+MONODE) 
                                              14: #CNDRDs detected (occur for SCNODE->*MNODE transitions) 
                                              15: #MPHIDX detected (occur for ->LMNODE transitions)
                                              16: #RESCANs detected (occur when HASH collision is detected)
                                              17: #GWALK STALLs detected - Packet data/Result Buffer
                                              18: #GWALK DTE cycles (all DTE-GNT[3a]) 
                                              19: #CLOAD DTE cycles
                                              20: #MLOAD DTE cycles
                                              21: #cycles waiting for Memory Response Data
                                              22: #cycles waiting in resource stall state (waiting for packet data or result buffer space)
                                              23: #cycles waiting in resource pending state 
                                              24: #RWORD1+ writes
                                              25: #DTE-VLD cycles				  
                                              26: #DTE Transitions detected (see DFA_PFC_GCTL[SNODE,ENODE] registers
                                              27: #GWALK Instructions
                                              28: #CLOAD Instructions
                                              29: #MLOAD Instructions 
                                              30: #GFREE Instructions (== #GFREE DTE cycles)
                                              31: RESERVED
                                              32: #DTE-Busy cycles (ALL DTE-GNT strobes) 
 <63:14> NS        RAZ       NS       NS     RESERVED		 				      
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_PFC3_CNT = DFA Performance Counter #3
 * *FOR INTERNAL USE ONLY*
 * Description: 
 * 

     ==============================================================
     DFA_PFC3_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  PFCNT3   R/W      0x0         NS        Performance Counter #3                               
                                                 When DFA_PFC_GCTL[CNT3ENA]=1, the event selected
                                                 by DFA_PFC3_CTL[EVSEL] is counted.
                                                 See also DFA_PFC_GCTL[CNT3WCLR] and DFA_PFC_GCTL
                                                 [CNT3RCLR] for special clear count cases available
                                                 for SW data collection.
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_BIST0 = DFA Bist Status (per-DTC)
 *
 * Description: 
 *

     ==============================================================
     DFA_BIST0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      PDB     RO       0           0       Bist Results for PDB RAM(s)                            
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD 
<3:1>    NS      RAZ      0           0       RESERVED				                     
<4>      RDF     RO       0           0       Bist Results for RWB[3:0] RAM(s)                       
                                                0: GOOD (or bist in progress/never run)	
                                                1: BAD             
<7:5>    NS      RAZ      0           0       RESERVED				                     
<9:8>    DTX     RO       0           0       Bist Results for DTX RAM(s)                            
                                                0: GOOD (or bist in progress/never run)	
                                                1: BAD             
<15:10>  NS      RAZ      0           0       RESERVED				                     
<17:16>  STX     RO       0           0       Bist Results for STX RAM(s)                            
                                                0: GOOD (or bist in progress/never run)	
                                                1: BAD             
<23:18>  NS      RAZ      0           0       RESERVED				                     
<24>     GFB      RO       0           0      Bist Results for GFB RAM(s)                            
                                                0: GOOD (or bist in progress/never run)	
                                                1: BAD
<27:25>  NS       RAZ      0           0      RESERVED				                     
<28>     MWB      RO       0           0      Bist Results for MWB RAM(s)                            
                                                0: GOOD (or bist in progress/never run)	
                                                1: BAD
<63:29>  NS       RAZ      0           0      RESERVED				                     

----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_BIST1 = DFA Bist Status (Globals)
 *
 * Description: 
 *

     ==============================================================
     DFA_BIST1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      GFU      RO       0           0       Bist Results for GFU RAM                              
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD 
<1>      GIB      RO       0           0       Bist Results for GIB RAM                              
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD
<2>      GIF      RO       0           0       Bist Results for GIF RAM                              
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD
<3>      NCD      RO       0           0       Bist Results for NCD RAM                              
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD
<4>      GUTP     RO       0           0       Bist Results for NCD RAM                              
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD
<7:5>    NS       RAZ      0           0       RESERVED				                     

<8>      GUTV     RO       0           0       Bist Results for GUTV RAM                             
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD   
<9>      CRQ      RO       0           0       Bist Results for CRQ RAM                              
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD   
<10>     RAM1     RO       0           0       Bist Results for RAM1 RAM                             
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD   
<11>     RAM2     RO       0           0       Bist Results for RAM2 RAM                             
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD   
<12>     RAM3     RO       0           0       Bist Results for RAM3 RAM                             
                                                0: GOOD (or bist in progress/never run)
                                                1: BAD   

<63:13>  NS       RAZ      0           0       RESERVED				                     
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_DBELL = DFA Doorbell Register
 *
 * Description: 
 *  NOTE: To write to the DFA_DBELL register, a device would issue an IOBST directed at the DFA with addr[34:33]=2'b00.
 *        To read the DFA_DBELL register, a device would issue an IOBLD64 directed at the DFA with addr[34:33]=2'b00.      
 * 
 *  NOTE: If DFA_CONFIG[DTECLKDIS]=1 (DFA-DTE clocks disabled), reads/writes to the DFA_DBELL register do not take effect. 
 *  NOTE: If FUSE[TBD]="DFA DTE disable" is blown, reads/writes to the DFA_DBELL register do not take effect. 
 * 

     ==============================================================
     DFA_DBELL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <19:0>  DBELL    R/W      0x0         NS        Represents the cumulative total of pending           
                                                 DFA instructions which SW has previously written 
                                                 into the DFA Instruction FIFO (DIF) in main memory. 
                                                 Each DFA instruction contains a fixed size 32B 
                                                 instruction word which is executed by the DFA HW. 
                                                 The DBL register can hold up to 1M-1 (2^20-1) 
                                                 pending DFA instruction requests. 

                                                 During a read (by SW), the 'most recent' contents
                                                 of the DFA_DBELL register are returned at the time
                                                 the NCB-INB bus is driven.

						 NOTE: Since DFA HW updates this register, its 
                                                 contents are unpredictable in SW. 

 <63:20> NS       RAZ      NS          NS        RESERVED                                             
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_DIFRDPTR = DFA Instruction FIFO (DIF) RDPTR Register
 *
 * Description: 
 *  NOTE: To write to the DFA_DIFRDPTR register, a device would issue an IOBST directed at the DFA with addr[34:33]=2'b01.
 *        To read the DFA_DIFRDPTR register, a device would issue an IOBLD64 directed at the DFA with addr[34:33]=2'b01.
 *                                                 
 *  NOTE: If DFA_CONFIG[DTECLKDIS]=1 (DFA-DTE clocks disabled), reads/writes to the DFA_DIFRDPTR register do not take effect. 
 *  NOTE: If FUSE[TBD]="DFA DTE disable" is blown, reads/writes to the DFA_DIFRDPTR register do not take effect. 
 * 

     ==============================================================
     DFA_DIFRDPTR Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <4:0>   NS       RAZ      NS          NS        RESERVED                                             
 <39:5>  RDPTR    R/W      0x0         NS        Represents the 32B-aligned address of the current    
                                                 instruction in the DFA Instruction FIFO in main 
                                                 memory. The RDPTR must be seeded by software at 
                                                 boot time, and is then maintained thereafter 
                                                 by DFA HW. 

                                                 During the seed write (by SW), RDPTR[6:5]=0, 
                                                 since DFA instruction chunks must be 128B aligned.

                                                 During a read (by SW), the 'most recent' contents
                                                 of the RDPTR register are returned at the time
                                                 the NCB-INB bus is driven.

						 NOTE: Since DFA HW updates this register, its 
                                                 contents are unpredictable in SW (unless
                                                 its guaranteed that no new DoorBell register 
                                                 writes have occurred and the DoorBell register is
                                                 read as zero). 

 <63:40> NS       RAZ      NS          NS        RESERVED                                             
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_DIFCTL = DFA Instruction FIFO (DIF) Control Register
 *
 * Description: 
 *  NOTE: To write to the DFA_DIFCTL register, a device would issue an IOBST directed at the DFA with addr[34:32]=3'b110.
 *        To read the DFA_DIFCTL register, a device would issue an IOBLD64 directed at the DFA with addr[34:32]=3'b110.
 *                   
 *  NOTE: This register is intended to ONLY be written once (at power-up). Any future writes could 
 *  cause the DFA and FPA HW to become unpredictable. 
 * 
 *  NOTE: If DFA_CONFIG[DTECLKDIS]=1 (DFA-DTE clocks disabled), reads/writes to the DFA_DIFCTL register do not take effect. 
 *  NOTE: If FUSE[TBD]="DFA DTE disable" is blown, reads/writes to the DFA_DIFCTL register do not take effect. 
 * 

     ==============================================================
     DFA_DIFCTL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <8:0>  SIZE      R/W      0x3         NS        Represents the # of 32B instructions contained       
                                                 within each DFA instruction chunk. At Power-on,
                                                 SW will seed the SIZE register with a fixed 
                                                 chunk-size. (Must be at least 3)
                                                 DFA HW uses this field to determine the size
                                                 of each DFA instruction chunk, in order to: 
                                                    a) determine when to read the next DFA 
                                                       instruction chunk pointer which is 
                                                       written by SW at the end of the current 
                                                       DFA instruction chunk (see DFA description
                                                       of next chunk buffer Ptr for format). 
                                                    b) determine when a DFA instruction chunk
                                                       can be returned to the Free Page List
                                                       maintained by the FPA HW.
      
 <11:9> POOL      R/W      0x0         NS        Represents the 3bit buffer pool-id  used by DFA HW   
                                                 when the DFA instruction chunk is recycled back
                                                 to the Free Page List maintained by the FPA HW 
                                                 (once the DFA instruction has been issued).

 <19:12> DWBCNT   R/W      0x1         NS        Represents the # of cache lines in the instruction   
                                                 buffer that may be dirty and should not be 
                                                 written-back to memory when the instruction
                                                 chunk is returned to the Free Page list. 

                                                 NOTE: Typically SW will want to mark all DFA
                                                 Instruction memory returned to the Free Page list
                                                 as DWB (Don't WriteBack), therefore SW should
                                                 seed this register as: 
                                                   DFA_DIFCTL[DWBCNT] = (DFA_DIFCTL[SIZE] + 4)/4

 <63:20> NS       RAZ      NS          NS        RESERVED                                             
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFA_MEMHIDAT = DFA NCB-Direct CSR access to DFM Memory Space (High QW) 
 *
 * Description: 
 * DFA supports NCB-Direct CSR acccesses to DFM Memory space for debug purposes. Unfortunately, NCB-Direct accesses
 * are limited to QW-size(64bits), whereas the minimum access granularity for DFM Memory space is OW(128bits). To 
 * support writes to DFM Memory space, the Hi-QW of data is sourced from the DFA_MEMHIDAT register. Recall, the
 * OW(128b) in DDR3 memory space is fixed format:
 *     OWDATA[127:118]: OWECC[9:0] 10bits of in-band OWECC SEC/DED codeword
 *                      This can be precomputed/written by SW OR
 *                      if DFM_FNTCTL[ECC_WENA]=1, DFM hardware will auto-compute the 10b OWECC and place in the 
 *                      OWDATA[127:118] before being written to memory. 
 *     OWDATA[117:0]:   Memory Data (contains fixed MNODE/MONODE arc formats for use by DTEs(thread engines). 
 *                      Or, a user may choose to treat DFM Memory Space as 'scratch pad' in which case the 
 *                      OWDATA[117:0] may contain user-specified information accessible via NCB-Direct CSR mode
 *                      accesses to DFA Memory Space. 
 *  NOTE: To write to the DFA_MEMHIDAT register, a device would issue an IOBST directed at the DFA with addr[34:32]=3'b111.
 *        To read the DFA_MEMHIDAT register, a device would issue an IOBLD64 directed at the DFA with addr[34:32]=3'b111.
 *                    
 *  NOTE: If DFA_CONFIG[DTECLKDIS]=1 (DFA-DTE clocks disabled), reads/writes to the DFA_MEMHIDAT register do not take effect. 
 *  NOTE: If FUSE[TBD]="DFA DTE disable" is blown, reads/writes to the DFA_MEMHIDAT register do not take effect. 
 *      

     ==============================================================
     DFA_MEMHIDAT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>   HIDAT    R/W        NS       NS     DFA Hi-QW of Write data during NCB-Direct DFM DDR3       
                                             Memory accesses. 
                                             All DFM DDR3 memory accesses are OW(128b) references, 
                                             and since NCB-Direct Mode writes only support QW(64b),
                                             the Hi QW of data must be sourced from a CSR register.
                                             NOTE: This single register is 'shared' for ALL DFM
                                             DDR3 Memory writes. 
                                              
----------------------------------------------------------------------------------------------------
===
 * Specify the RSL base addresses for the block

 *   

     ==============================================================
     DFM_RESET_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     DDR3RST   R/W       0           0        Memory Reset                                           
                                                  0 = Reset asserted
                                                  1 = Reset de-asserted
 <1>     DDR3PWARM R/W       0           0        Must be zero                                           
 <2>     DDR3PSOFT R/W       0           0        Must be zero                                           
 <3>     DDR3PSV   R/W       0           0        Must be zero                                           
 <63:4>  NS        RAZ       NS          NS       RESERVED                                               
  
Notes:
 DDR3RST - DDR3 DRAM parts have a new RESET#
   pin that wasn't present in DDR2 parts. The
   DDR3RST CSR field controls the assertion of
   the new 63xx pin that attaches to RESET#.
   When DDR3RST is set, 63xx asserts RESET#.
   When DDR3RST is clear, 63xx de-asserts
   RESET#.

   DDR3RST is set on a cold reset. Warm and
   soft chip resets do not affect the DDR3RST
   value. Outside of cold reset, only software
   CSR writes change the DDR3RST value.

----------------------------------------------------------------------------------------------------
===
 *
 *                  DFM_CONFIG = DFM Memory Configuration Register
 *
 * This register controls certain parameters of  Memory Configuration 
 *

     ==============================================================
     DFM_CONFIG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      INIT_START  WR0     0       0      A 0->1 transition starts the DDR memory sequence that is 
                                            selected by DFM_CONFIG[SEQUENCE].  This register is a
                                            oneshot and clears itself each time it is set.
 
<1>      ECC_ENA     R/W     0       0      Must be zero.                                            
<4:2>    ROW_LSB     R/W    0x3     NS      Row Address bit select                                   
				            Encoding used to determine which memory address
                                            bit position represents the low order DDR ROW address.

                                            The DFM memory address [31:4] which references octawords
                                            needs to be translated to DRAM addresses (bnk,row,col,bunk)

	                                    mem_adr[31:4]:
                                              3 3 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 
                                              1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4  
                                             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                                             |       ROW[m:n]            |     COL[13:3]       | BA  |
                                             +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                                            See: 
                                              BA[2:0]:   mem_adr[6:4]
                                              COL[13:0]: {mem_adr[17:7],3'd0}
                                                  NOTE: The extracted COL address is always 14b fixed size width, 
                                                  and upper unused bits are ignored by the DRAM device.
                                              ROW[15:0]: Extraction of ROW starting address bit is programmable,
                                              and is dependent on the #column bits supported by the DRAM device.
                                              The actual starting bit of the ROW can actually span into the 
                                              high order bits of the COL[13:3] field described above.  
                                                     ROW_LSB    ROW[15:0]
                                                   -------------------------- 
                                                       0:      mem_adr[26:11]    
                                                       1:      mem_adr[27:12]
                                                       2:      mem_adr[28:13]
                                                       3:      mem_adr[29:14]
                                                       4:      mem_adr[30:15]
                                                       5:      mem_adr[31:16]
                                                     6,7:     {1'b0, mem_adr[31:17]}  For current DDR3 Jedec spec - UNSUPPORTED

	                                    For example, for Samsung's k4b1g0846c-f7 1Gb (16M x 8 bit x 8 bank) 
                                            DDR3 parts, the column address width = 10. Therefore, 
                                                 BA[3:0] = mem_adr[6:4] / COL[9:0] = {mem_adr[13:7],3'd0}, and
                                            we would want the row starting address to be extracted from mem_adr[14]. 
					    Therefore, a ROW_LSB=3, will extract the row from mem_adr[29:14].
 
<8:5>   PBANK_LSB    R/W    0x5     NS      Physical bank address bit select                                  
				            Encoding used to determine which memory address
                                            bit position represents the rank(or bunk) bit used to enable 1(of 2)
                                            ranks(via chip enables) supported by the DFM DDR3 interface.
                                            Reverting to the explanation for ROW_LSB, PBANK_LSB would be ROW_LSB bit + 
                                            #rowbits + #rankbits.

				            PBANK_LSB                                                
                                                 0: rank = mem_adr[24]
                                                 1: rank = mem_adr[25]
                                                 2: rank = mem_adr[26]
                                                 3: rank = mem_adr[27]
                                                 4: rank = mem_adr[28]
                                                 5: rank = mem_adr[29]
                                                 6: rank = mem_adr[30]
                                                 7: rank = mem_adr[31]
                                              8-15:  RESERVED

                                            DESIGN NOTE: The DFM DDR3 memory bus is 16b wide, therefore DOES NOT 
                                            support standard 64b/72b DDR3 DIMM modules. The board designer should
                                            populate the DFM DDR3 interface using either TWO x8bit DDR3 devices
                                            (or a single x16bit device if available) to fully populate the 16b 
                                            DFM DDR3 data bus. 
                                            
                                            The DFM DDR3 memory controller supports either 1(or 2) rank(s) based
                                            on how much total memory is desired for the DFA application. See 
                                            RANK_ENA CSR bit when enabling for dual-ranks.    

                                            SW NOTE: 
                                                1) When RANK_ENA=0, SW must properly configure the PBANK_LSB to
                                                   reference upper unused memory address bits. 
                                                2) When RANK_ENA=1 (dual ranks), SW must configure PBANK_LSB to 
                                                   reference the upper most address bit based on the total size
                                                   of the rank. 

	                                    For example, for a DFM DDR3 memory populated using Samsung's k4b1g0846c-f7 
                                            1Gb(256MB) (16M x 8 bit x 8 bank) DDR3 parts, the column address width = 10 and
                                            the device row address width = 14b.  The single x8bit device contains 128MB, and
                                            requires TWO such parts to populate the DFM 16b DDR3 interface. This then yields
                                            a total rank size = 256MB = 2^28. 

                                            For a single-rank configuration (RANK_ENA=0), SW would program PBANK_LSB>=3 to 
                                            select mem_adr[x] bits above the legal DFM address range for mem_adr[27:0]=256MB.

                                            For a dual-rank configuration (RANK_ENA=1), SW would program PBANK_LSB=4 to select 
                                            rank=mem_adr[28] as the bit used to determine which 256MB rank (of 512MB total) to 
                                            access (via rank chip enables - see: DFM DDR3 CS0[1:0] pins for connection to 
                                            upper and lower rank). 
<11:9>  IDLEPOWER    R/W    0x0      6      Enter precharge power-down mode after the memory         
                                            controller has been idle for 2^(2+IDLEPOWER) cycles.
                                            0=disabled.
                                            This field should only be programmed after initialization.
                                            DFM_MODEREG_PARAMS0[PPD] determines whether the DRAM DLL
                                            is disabled during the precharge power-down.
<15:12> FORCEWRITE   R/W    0x0      0      Force the oldest outstanding write to complete after     
                                            having waited for 2^FORCEWRITE cycles.  0=disabled.
<16>    ECC_ADR      R/W    0x0      0      Must be zero.                                            
<17>    RESET        R/W    0x0     NS      Reset oneshot pulse for refresh counter,                 
                                            and DFM_OPS_CNT, DFM_IFB_CNT, and DFM_FCLK_CNT
                                            CSR's. SW should write this to a one, then re-write
                                            it to a zero to cause the reset.
<36:18> REF_ZQCS_INT R/W     NS     NS      Refresh & ZQCS interval represented in #of 512 fclk      
                                            increments. A Refresh sequence is triggered when bits 
                                            [24:18] are equal to 0, and a ZQCS sequence is triggered 
                                            when [36:18] are equal to 0.

                                            Program [24:18] to RND-DN(tREFI/clkPeriod/512)
                                            Program [36:25] to RND-DN(ZQCS_Interval/clkPeriod/(512*64)). Note
                                            that this value should always be greater than 32, to account for
                                            resistor calibration delays.
	
                                            000_00000000_00000000: RESERVED 
	                                    Max Refresh interval = 127 * 512           = 65024 fclks
                                            Max ZQCS interval    = (8*256*256-1) * 512 = 268434944 fclks ~ 335ms for a 1.25 ns clock

                                            DFM_CONFIG[INIT_STATUS] determines which ranks receive
                                            the REF / ZQCS. DFM does not send any refreshes / ZQCS's
                                            when DFM_CONFIG[INIT_STATUS]=0.

<39:37> SEQUENCE     R/W    0x0      0      Instruction sequence that is run after a 0->1          
                                            transition on DFM_CONFIG[INIT_START]. Self-refresh entry and
                                            precharge power-down entry and exit SEQUENCE's can also
                                            be initiated automatically by hardware.

                                            0=power-up/init                  (RANKMASK used, MR0, MR1, MR2, and MR3 written)
                                            1=read-leveling                  (RANKMASK used, MR3 written)
					    2=self-refresh entry             (all ranks participate, MR1 and MR2 written if SREF_WITH_DLL=1)
                                            3=self-refresh exit,             (all ranks participate, MR1 and MR2 written if SREF_WITH_DLL=1)
                                            4=precharge power-down entry     (all ranks participate)
                                            5=precharge power-down exit      (all ranks participate)
                                            6=write-leveling                 (RANKMASK used, MR1 written)
                                            7=illegal

                                            Precharge power-down entry and exit SEQUENCE's may
                                            be automatically generated by the HW when IDLEPOWER!=0.

                                            Self-refresh entry SEQUENCE's may be automatically
                                            generated by hardware upon a chip warm or soft reset
                                            sequence when DFM_RESET_CTL[DDR3PWARM,DDR3PSOFT] are set.

                                            DFM writes the DFM_MODEREG_PARAMS0 and DFM_MODEREG_PARAMS1 CSR field values
                                            to the Mode registers in the DRAM parts (MR0, MR1, MR2, and MR3) as part of some of these sequences.
                                            Refer to the DFM_MODEREG_PARAMS0 and DFM_MODEREG_PARAMS1 descriptions for more details.
                                            The DFR_CKE pin gets activated as part of power-up/init,
                                            self-refresh exit, and precharge power-down exit sequences.
                                            The DFR_CKE pin gets de-activated as part of self-refresh entry,
                                            precharge power-down entry, or DRESET assertion.

                                            If there are two consecutive power-up/init's without
                                            a DRESET assertion between them, DFM asserts DFR_CKE as part of
                                            the first power-up/init, and continues to assert DFR_CKE
                                            through the remainder of the first and the second power-up/init.
                                            If DFR_CKE deactivation and reactivation is needed for
                                            a second power-up/init, a DRESET assertion is required
                                            between the first and the second.

<40>    EARLY_DQX    R/W    0x0     0x0     Send DQx signals one CK cycle earlier for the case when     
                                            the shortest DQx lines have a larger delay than the CK line
<41>    SREF_WITH_DLL R/W   0x0     0x0     Self-refresh entry/exit write MR1 and MR2                
                                            When set, self-refresh entry and exit instruction sequences
                                            write MR1 and MR2 (in all ranks). (The writes occur before
                                            self-refresh entry, and after self-refresh exit.)
                                            When clear, self-refresh entry and exit instruction sequences
                                            do not write any registers in the DDR3 parts.
<42>    RANK_ENA     R/W     0      NS      RANK enable (for use with multiple ranks)                
                                            The RANK_ENA bit enables
                                            the drive of the CS_N[1:0] and ODT_<1:0> pins differently based on the 
                                            (PBANK_LSB-1) address bit. 
<46:43> RANKMASK     R/W    0x0     NS      Mask to select rank to be leveled/initialized.           
                                            To write-level/read-level/initialize rank i, set RANKMASK<i>
                                                            RANK_ENA=1               RANK_ENA=0
                                              RANKMASK<0> =    CS0                  CS0 and CS1
                                              RANKMASK<1> =    CS1                      MBZ
	                                    For read/write leveling, each rank has to be leveled separately,
                                            so RANKMASK should only have one bit set.
                                            RANKMASK is not used during self-refresh entry/exit and
                                            precharge power-down entry/exit instruction sequences.
                                            RANKMASK<3:2> must be zero.
                                            When RANK_ENA=0, RANKMASK<1> MBZ
<50:47> MIRRMASK     R/W    0x0     NS      Mask determining which ranks are address-mirrored.        
                                            MIRRMASK<n> = 1 means Rank n addresses are mirrored
                                            for 0 <= n <= 1

                                            A mirrored read/write has these differences:
                                             - DDR_BA<1> is swapped with DDR_BA<0>
                                             - DDR_A<8> is swapped with DDR_A<7>
                                             - DDR_A<6> is swapped with DDR_A<5>
                                             - DDR_A<4> is swapped with DDR_A<3>

                                            MIRRMASK<3:2> must be zero.
                                            When RANK_ENA=0, MIRRMASK<1> MBZ
<54:51> INIT_STATUS  R/W1   0x0     NS      Indicates status of initialization                       

                                            INIT_STATUS[n] = 1 implies rank n has been initialized

                                            SW must set necessary INIT_STATUS bits with the
                                            same DFM_CONFIG write that initiates
                                            power-up/init and self-refresh exit sequences
                                            (if the required INIT_STATUS bits are not already
                                            set before DFM initiates the sequence).

                                            INIT_STATUS determines the chip-selects that assert
                                            during refresh, ZQCS, and precharge power-down and
                                            self-refresh entry/exit SEQUENCE's.
                                            
                                            INIT_STATUS<3:2> must be zero.

<63:55> NS           RAZ     NS     NS      RESERVED                                                 

Notes:
a. The self refresh entry sequence(s) power the DLL up/down (depending on DFM_MODEREG_PARAMS[DLL])  
when DFM_CONFIG[SREF_WITH_DLL] is set
b. Prior to the self-refresh exit sequence, DFM_MODEREG_PARAMS should be re-programmed (if needed) to the 
appropriate values

DFM Bringup Sequence:
1. SW must ensure there are no pending DRAM transactions and that the DDR PLL and the DLL have been initialized.
2. Write DFM_COMP_CTL2, DFM_CONTROL, DFM_WODT_MASK, DFM_RODT_MASK, DFM_DUAL_MEMCFG, DFM_TIMING_PARAMS0, DFM_TIMING_PARAMS1, 
   DFM_MODEREG_PARAMS0, DFM_MODEREG_PARAMS1, DFM_RESET_CTL (with DDR3RST=0), DFM_CONFIG (with INIT_START=0)
   with appropriate values, if necessary.
3. Wait 200us, then write DFM_RESET_CTL[DDR3RST] = 1.
4. Initialize all ranks at once by writing DFM_CONFIG[RANKMASK][n] = 1, DFM_CONFIG[INIT_STATUS][n] = 1, and DFM_CONFIG[INIT_START] = 1
   where n is a valid rank index for the specific board configuration.
5. for each rank n to be write-leveled {
      if auto write-leveling is desired {
          write DFM_CONFIG[RANKMASK][n] = 1, DFM_WLEVEL_CTL appropriately and DFM_CONFIG[INIT_START] = 1
          wait until DFM_WLEVEL_RANKn[STATUS] = 3
      } else {
          write DFM_WLEVEL_RANKn with appropriate values
      }
   }
6. for each rank n to be read-leveled {
      if auto read-leveling is desired {
          write DFM_CONFIG[RANKMASK][n] = 1, DFM_RLEVEL_CTL appropriately and DFM_CONFIG[INIT_START] = 1
          wait until DFM_RLEVEL_RANKn[STATUS] = 3
      } else {
          write DFM_RLEVEL_RANKn with appropriate values
      }
   }

----------------------------------------------------------------------------------------------------
===
 *   
 *                    DFM_CONTROL = DFM Control
 * This register is an assortment of various control fields needed by the memory controller
 *   

     ==============================================================
     DFM_CONTROL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>    RDIMM_ENA     R/W     0      0x0     Must be zero.                                            
<1>    BWCNT         R/W     0      0x0     Bus utilization counter Clear.                           
                                            Clears the DFM_OPS_CNT, DFM_IFB_CNT, and
                                            DFM_FCLK_CNT registers. SW should first write this
                                            field to a one, then write this field to a zero to
                                            clear the CSR's.
<2>    DDR2T         R/W     0      0x0     Turn on the DDR 2T mode. 2 cycle window for CMD and      
                                            address. This mode helps relieve setup time pressure
                                            on the Address and command bus which nominally have
                                            a very large fanout. Please refer to Micron's tech 
                                            note tn_47_01 titled "DDR2-533 Memory Design Guide 
                                            for Two Dimm Unbuffered Systems" for physical details.
<3>     POCAS        R/W     0       0      Enable the Posted CAS feature of DDR3.                   
                                            This bit should be set in conjunction with DFM_MODEREG_PARAMS[AL]
<5:4>   FPRCH2       R/W     0     0x1      Front Porch Enable: When set, the turn-off               
                                            time for the default DDR_DQ/DQS drivers is FPRCH2 fclks earlier.
                                            00 = 0 fclks
                                            01 = 1 fclks
                                            10 = 2 fclks
                                            11 = RESERVED
<6>     THROTTLE_RD  R/W     0       0      When set, use at most one IFB for reads                  
                                            THROTTLE_RD and THROTTLE_WR must be the same value.
<7>     THROTTLE_WR  R/W     0       0      When set, use at most one IFB for writes                 
                                            THROTTLE_RD and THROTTLE_WR must be the same value.
<8>     INORDER_RD   R/W     0       0      Must be zero.                                            
<9>     INORDER_WR   R/W     0       0      Must be zero.                                            
<10>    ELEV_PRIO_DIS R/W    0     0x0      Must be zero.                                            
<11>    NXM_WRITE_EN  R/W    0     0x0      Must be zero.                                            
<15:12> MAX_WRITE_BATCH R/W 0x8    0x8      Must be set to value 8                                   
<16>    XOR_BANK    R/W     0x0    0x0      Must be zero.                                            
<17>    AUTO_FCLKDIS R/W    0x0      1      When 1, DFM will automatically shut off its internal     
                                            clock to conserve power when there is no traffic. Note
                                            that this has no effect on the DDR3 PHY and pads clocks.
<18>    INT_ZQCS_DIS R/W    0x1     0x0     Disable (internal) auto-zqcs calibration                 
                                            When counter is re-enabled, ZQCS is run immediately,
	                                    and then every DFM_CONFIG[REF_ZQCS_INT] fclk cycles.
<19>    EXT_ZQCS_DIS R/W    0x0     0x0     Disable (external) auto-zqcs calibration                 
                                            When clear, DFM runs external ZQ calibration
<21:20> BPRCH        R/W    0x0     0x0     Back Porch Enable: When set, the turn-on time for        
                                            the default DDR_DQ/DQS drivers is delayed an additional BPRCH FCLK 
                                            cycles.
                                            00 = 0 fclks
                                            01 = 1 fclks
                                            10 = 2 fclks
                                            11 = 3 fclks
<63:22>  NS          RAZ     NS      NS     RESERVED                                                 
----------------------------------------------------------------------------------------------------
===
 *   

     ==============================================================
     DFM_TIMING_PARAMS0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:46>  NS          RAZ     NS      NS     RESERVED                                                
<45:42>  TCKSRE      R/W    0x5     0x5     Indicates tCKSRE constraints.                           
                                            Set TCKSRE (CSR field) = RNDUP[tCKSRE(ns)/tCYC(ns)]-1,
                                            where tCKSRE is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=max(5nCK, 10ns)
<41:38>  TRP         R/W    0x6     0x6     Indicates tRP constraints.                              
                                            Set TRP (CSR field) = RNDUP[tRP(ns)/tCYC(ns)]
                                            + (RNDUP[tRTP(ns)/tCYC(ns)])-4)-1,
                                            where tRP, tRTP are from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP tRP=10-15ns
                                            TYP tRTP=max(4nCK, 7.5ns)
<37:34>  TZQINIT     R/W    0x2     0x2     Indicates tZQINIT constraints.                          
                                            Set TZQINIT (CSR field) = RNDUP[tZQINIT(ns)/(256*tCYC(ns))],
                                            where tZQINIT is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=2 (equivalent to 512)                                            
<33:30>  TDLLK       R/W    0x2     0x2     Indicates tDLLk constraints.                            
                                            Set TDLLK (CSR field) = RNDUP[tDLLk(ns)/(256*tCYC(ns))],
                                            where tDLLk is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=2 (equivalent to 512)
                                            This parameter is used in self-refresh exit
                                            and assumed to be greater than tRFC
<29:26>  TMOD        R/W    0xC     0xC     Indicates tMOD constraints.                             
                                            Set TMOD (CSR field) = RNDUP[tMOD(ns)/tCYC(ns)]-1,
                                            where tMOD is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=max(12nCK, 15ns)
<25:22>  TMRD        R/W    0x4     0x4     Indicates tMRD constraints.                             
                                            Set TMRD (CSR field) = RNDUP[tMRD(ns)/tCYC(ns)]-1,
                                            where tMRD is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=4nCK                                            
<21:18>  TXPR        R/W    0x5     0x5     Indicates tXPR constraints.                             
                                            Set TXPR (CSR field) = RNDUP[tXPR(ns)/(16*tCYC(ns))],
                                            where tXPR is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=max(5nCK, tRFC+10ns)
<17:14>  TCKE        R/W    0x3     0x3     Indicates tCKE constraints.                             
                                            Set TCKE (CSR field) = RNDUP[tCKE(ns)/tCYC(ns)]-1,
                                            where tCKE is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=max(3nCK, 7.5/5.625/5.625/5ns)                                            
<13:10>  TZQCS       R/W    0x4     0x4     Indicates tZQCS constraints.                            
                                            Set TZQCS (CSR field) = RNDUP[tZQCS(ns)/(16*tCYC(ns))],
                                            where tZQCS is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=4 (equivalent to 64)
<9:0>    TCKEON      R/W    0x149     0     Reserved. Should be written to zero.                    

Notes:

----------------------------------------------------------------------------------------------------
===

 *   

     ==============================================================
     DFM_TIMING_PARAMS1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<3:0>    TMPRR       R/W    0x1     0x1     Indicates tMPRR constraints.                           
                                            Set TMPRR (CSR field) = RNDUP[tMPRR(ns)/tCYC(ns)]-1,
                                            where tMPRR is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=1nCK
<8:4>    TRAS        R/W    0xC     0xC     Indicates tRAS constraints.                            
                                            Set TRAS (CSR field) = RNDUP[tRAS(ns)/tCYC(ns)]-1,
                                            where tRAS is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=35ns-9*tREFI                                            
                                                00000: RESERVED
                                                00001: 2 tCYC
                                                00010: 3 tCYC
                                                ..
                                                11111: 32 tCYC
<12:9>   TRCD        R/W    0x4     0x4     Indicates tRCD constraints.                            
                                            Set TRCD (CSR field) = RNDUP[tRCD(ns)/tCYC(ns)],
                                            where tRCD is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=10-15ns 
                                                0000: RESERVED 
                                                0001: 2 (2 is the smallest value allowed)
                                                0002: 2
                                                ..
                                                1001: 9
                                                1010-1111: RESERVED
                                            In 2T mode, make this register TRCD-1, not going
                                            below 2.
<16:13>  TWTR        R/W    0x2     0x2     Indicates tWTR constraints.                            
                                            Set TWTR (CSR field) = RNDUP[tWTR(ns)/tCYC(ns)]-1,
                                            where tWTR is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=max(4nCK, 7.5ns)
                                                0000: RESERVED
                                                0001: 2
                                                ..
                                                0111: 8
                                                1000-1111: RESERVED 
<21:17>  TRFC        R/W    0x6     0x7     Indicates tRFC constraints.                            
                                            Set TRFC (CSR field) = RNDUP[tRFC(ns)/(8*tCYC(ns))],
                                            where tRFC is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=90-350ns
                                                 00000: RESERVED
                                                 00001: 8 tCYC
                                                 00010: 16 tCYC
                                                 00011: 24 tCYC
                                                 00100: 32 tCYC
                                                 ...
                                                 11110: 240 tCYC
                                                 11111: 248 tCYC
<24:22>  TRRD        R/W    0x2     0x2     Indicates tRRD constraints.                            
                                            Set TRRD (CSR field) = RNDUP[tRRD(ns)/tCYC(ns)]-2,
                                            where tRRD is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=max(4nCK, 10ns)
                                               000: RESERVED 
                                               001: 3 tCYC
                                               ...
                                               110: 8 tCYC
                                               111: 9 tCYC
<27:25>  TXP         R/W    0x3     0x3     Indicates tXP constraints.                            
                                            Set TXP (CSR field) = RNDUP[tXP(ns)/tCYC(ns)]-1,
                                            where tXP is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=max(3nCK, 7.5ns)
<31:28>  TWLMRD      R/W    0xA     0xA     Indicates tWLMRD constraints.                         
                                            Set TWLMRD (CSR field) = RNDUP[tWLMRD(ns)/(4*tCYC(ns))],
                                            where tWLMRD is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=max(40nCK)
<35:32>  TWLDQSEN    R/W    0x7     0x7     Indicates tWLDQSEN constraints.                       
                                            Set TWLDQSEN (CSR field) = RNDUP[tWLDQSEN(ns)/(4*tCYC(ns))],
                                            where tWLDQSEN is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=max(25nCK)
<40:36>  TFAW        R/W    0x0     0x9     Indicates tFAW constraints.                           
                                            Set TFAW (CSR field) = RNDUP[tFAW(ns)/(4*tCYC(ns))],
                                            where tFAW is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=30-40ns
<45:41>  TXPDLL      R/W    0xA     0xA     Indicates tXPDLL constraints.                         
                                            Set TXPDLL (CSR field) = RNDUP[tXPDLL(ns)/tCYC(ns)]-1,
                                            where tXPDLL is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=max(10nCK, 24ns)
<63:46>  NS          RAZ     NS      NS     RESERVED                                               

Notes:

----------------------------------------------------------------------------------------------------
===

 *   

     ==============================================================
     DFM_MODEREG_PARAMS0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:25>  NS          RAZ     NS      NS     RESERVED                                               
<24:24>  PPD         R/W    0x0      0x0    DLL Control for precharge powerdown                    
                                            0 = Slow exit (DLL off)
                                            1 = Fast exit (DLL on)                                            
                                            DFM writes this value to MR0[PPD] in the selected DDR3 parts
                                            during power-up/init instruction sequencing.
                                            See DFM_CONFIG[SEQUENCE,INIT_START,RANKMASK].
                                            This value must equal the MR0[PPD] value in all the DDR3
                                            parts attached to all ranks during normal operation.
<23:21>  WRP         R/W    0x1      0x1    Write recovery for auto precharge                      
                                            Should be programmed to be equal to or greater than
                                            RNDUP[tWR(ns)/tCYC(ns)]
					    000 = Reserved
					    001 = 5
					    010 = 6
					    011 = 7
					    100 = 8
					    101 = 10
					    110 = 12
					    111 = Reserved
                                            DFM writes this value to MR0[WR] in the selected DDR3 parts
                                            during power-up/init instruction sequencing.
                                            See DFM_CONFIG[SEQUENCE,INIT_START,RANKMASK].
                                            This value must equal the MR0[WR] value in all the DDR3
                                            parts attached to all ranks during normal operation.
<20:20>  DLLR        R/W    0x0      0x0    DLL Reset                                              
                                            DFM writes this value to MR0[DLL] in the selected DDR3 parts
                                            during power-up/init instruction sequencing.
                                            See DFM_CONFIG[SEQUENCE,INIT_START,RANKMASK].
                                            The MR0[DLL] value must be 0 in all the DDR3
                                            parts attached to all ranks during normal operation.
<19:19>  TM          R/W    0x0      0x0    Test Mode                                              
                                            DFM writes this value to MR0[TM] in the selected DDR3 parts
                                            during power-up/init instruction sequencing.
                                            See DFM_CONFIG[SEQUENCE,INIT_START,RANKMASK].
                                            The MR0[TM] value must be 0 in all the DDR3
                                            parts attached to all ranks during normal operation.
<18:18>  RBT         RO     0x1      0x1    Read Burst Type                                        
                                            1 = interleaved (fixed) 
                                            DFM writes this value to MR0[RBT] in the selected DDR3 parts
                                            during power-up/init instruction sequencing.
                                            See DFM_CONFIG[SEQUENCE,INIT_START,RANKMASK].
                                            The MR0[RBT] value must be 1 in all the DDR3
                                            parts attached to all ranks during normal operation.
<17:14>  CL          R/W    0x2      0x2    CAS Latency                                            
                                            0010 = 5
                                            0100 = 6
                                            0110 = 7
                                            1000 = 8
                                            1010 = 9
                                            1100 = 10
                                            1110 = 11
                                            0000, ???1 = Reserved
                                            DFM writes this value to MR0[CAS Latency / CL] in the selected DDR3 parts
                                            during power-up/init instruction sequencing.
                                            See DFM_CONFIG[SEQUENCE,INIT_START,RANKMASK].
                                            This value must equal the MR0[CAS Latency / CL] value in all the DDR3
                                            parts attached to all ranks during normal operation.
<13:12>  BL          RO     0x0      0x0    Burst Length                                           
                                            0 = 8 (fixed)
                                            DFM writes this value to MR0[BL] in the selected DDR3 parts
                                            during power-up/init instruction sequencing.
                                            See DFM_CONFIG[SEQUENCE,INIT_START,RANKMASK].
                                            The MR0[BL] value must be 0 in all the DDR3
                                            parts attached to all ranks during normal operation.
<11:11>  QOFF        R/W    0x0      0x0    Qoff Enable                                            
                                            0 = enable
                                            DFM writes this value to MR1[Qoff] in the selected DDR3 parts
                                            during power-up/init and write-leveling instruction sequencing.
                                            If DFM_CONFIG[SREF_WITH_DLL] is set, DFM also writes
                                            this value to MR1[Qoff] in all DRAM parts in DFM_CONFIG[INIT_STATUS] ranks during self-refresh
                                            entry and exit instruction sequences.
                                            See DFM_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            DFM_RESET_CTL[DDR3PWARM,DDR3PSOFT].
                                            The MR1[Qoff] value must be 0 in all the DDR3
                                            parts attached to all ranks during normal operation.
<10:10>  TDQS        R/W    0x0      0x0    TDQS Enable                                            
                                            0 = disable
                                            DFM writes this value to MR1[TDQS] in the selected DDR3 parts
                                            during power-up/init and write-leveling instruction sequencing.
                                            If DFM_CONFIG[SREF_WITH_DLL] is set, DFM also writes
                                            this value to MR1[TDQS] in all DRAM parts in DFM_CONFIG[INIT_STATUS] ranks during self-refresh
                                            entry and exit instruction sequences.
                                            See DFM_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            DFM_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<9:9>    WLEV        RO     0x0      0x0    Write Leveling Enable                                  
                                            0 = disable
                                            DFM writes MR1[Level]=0 in the selected DDR3 parts
                                            during power-up/init and write-leveling instruction sequencing.
                                            (DFM also writes MR1[Level]=1 at the beginning of a
                                            write-leveling instruction sequence. Write-leveling can only be initiated via the
                                            write-leveling instruction sequence.)
                                            If DFM_CONFIG[SREF_WITH_DLL] is set, DFM also writes
                                            MR1[Level]=0 in all DRAM parts in DFM_CONFIG[INIT_STATUS] ranks during self-refresh
                                            entry and exit instruction sequences.
                                            See DFM_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            DFM_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<8:7>    AL          R/W    0x0      0x0    Additive Latency                                       
                                            00 = 0
                                            01 = CL-1
                                            10 = CL-2
                                            11 = Reserved
                                            DFM writes this value to MR1[AL] in the selected DDR3 parts
                                            during power-up/init and write-leveling instruction sequencing.
                                            If DFM_CONFIG[SREF_WITH_DLL] is set, DFM also writes
                                            this value to MR1[AL] in all DRAM parts in DFM_CONFIG[INIT_STATUS] ranks during self-refresh
                                            entry and exit instruction sequences.
                                            See DFM_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            DFM_RESET_CTL[DDR3PWARM,DDR3PSOFT].
                                            This value must equal the MR1[AL] value in all the DDR3
                                            parts attached to all ranks during normal operation.
                                            See also DFM_CONTROL[POCAS].
<6:6>    DLL         R/W    0x0      0x0    DLL Enable                                             
                                            0 = enable
                                            1 = disable
                                            DFM writes this value to MR1[DLL] in the selected DDR3 parts
                                            during power-up/init and write-leveling instruction sequencing.
                                            If DFM_CONFIG[SREF_WITH_DLL] is set, DFM also writes
                                            this value to MR1[DLL] in all DRAM parts in DFM_CONFIG[INIT_STATUS] ranks during self-refresh
                                            entry and exit instruction sequences.
                                            See DFM_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            DFM_RESET_CTL[DDR3PWARM,DDR3PSOFT].
                                            This value must equal the MR1[DLL] value in all the DDR3
                                            parts attached to all ranks during normal operation.
                                            In dll-off mode, CL/CWL must be programmed
                                            equal to 6/6, respectively, as per the DDR3 specifications.
<5:5>    MPR         R/W    0x0      0x0    MPR                                                    
                                            DFM writes this value to MR3[MPR] in the selected DDR3 parts
                                            during power-up/init and read-leveling instruction sequencing.
                                            (DFM also writes MR3[MPR]=1 at the beginning of a
                                            read-leveling instruction sequence. Read-leveling can only be initiated via the
                                            read-leveling instruction sequence.)
                                            See DFM_CONFIG[SEQUENCE,INIT_START,RANKMASK].
                                            The MR3[MPR] value must be 0 in all the DDR3
                                            parts attached to all ranks during normal operation.
<4:3>    MPRLOC      R/W    0x0      0x0    MPR Location                                           
                                            DFM writes this value to MR3[MPRLoc] in the selected DDR3 parts
                                            during power-up/init and read-leveling instruction sequencing.
                                            (DFM also writes MR3[MPRLoc]=0 at the beginning of the
                                            read-leveling instruction sequence.)
                                            See DFM_CONFIG[SEQUENCE,INIT_START,RANKMASK].
                                            The MR3[MPRLoc] value must be 0 in all the DDR3
                                            parts attached to all ranks during normal operation.
<2:0>    CWL         R/W    0x0      0x0    CAS Write Latency                                      
                                            000: 5
                                            001: 6
                                            010: 7
                                            011: 8
                                            1xx: Reserved
                                            DFM writes this value to MR2[CWL] in the selected DDR3 parts
                                            during power-up/init instruction sequencing.
                                            If DFM_CONFIG[SREF_WITH_DLL] is set, DFM also writes
                                            this value to MR2[CWL] in all DRAM parts in DFM_CONFIG[INIT_STATUS] ranks during self-refresh
                                            entry and exit instruction sequences.
                                            See DFM_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            DFM_RESET_CTL[DDR3PWARM,DDR3PSOFT].
                                            This value must equal the MR2[CWL] value in all the DDR3
                                            parts attached to all ranks during normal operation.

Notes:
 These parameters are written into the DDR3 MR0, MR1, MR2 and MR3 registers.

----------------------------------------------------------------------------------------------------
===

 *   

     ==============================================================
     DFM_MODEREG_PARAMS1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:48>  NS          RAZ     NS      NS     RESERVED                                               
<47:45>  RTT_NOM_11  R/W    0x0      0x0    Must be zero                                           
<44:43>  DIC_11      R/W    0x0      0x0    Must be zero                                           
<42:41>  RTT_WR_11   R/W    0x0      0x0    Must be zero                                           
<40:40>  SRT_11      R/W    0x0      0x0    Must be zero                                           
<39:39>  ASR_11      R/W    0x0      0x0    Must be zero                                           
<38:36>  PASR_11     R/W    0x0      0x0    Must be zero                                           
<35:33>  RTT_NOM_10  R/W    0x0      0x0    Must be zero                                           
<32:31>  DIC_10      R/W    0x0      0x0    Must be zero                                           
<30:29>  RTT_WR_10   R/W    0x0      0x0    Must be zero                                           
<28:28>  SRT_10      R/W    0x0      0x0    Must be zero                                           
<27:27>  ASR_10      R/W    0x0      0x0    Must be zero                                           
<26:24>  PASR_10     R/W    0x0      0x0    Must be zero                                           
<23:21>  RTT_NOM_01  R/W    0x0      0x0    RTT_NOM Rank 1                                         
                                            DFM writes this value to MR1[Rtt_Nom] in the rank 1 (i.e. CS1) DDR3 parts
                                            when selected during power-up/init instruction sequencing.
                                            If DFM_CONFIG[SREF_WITH_DLL] is set, DFM also writes
                                            this value to MR1[Rtt_Nom] in all DRAM parts in rank 1 during self-refresh
                                            entry and exit instruction sequences (when DFM_CONFIG[INIT_STATUS<1>]=1).
                                            See DFM_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            DFM_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<20:19>  DIC_01      R/W    0x0      0x0    Output Driver Impedance Control Rank 1                 
                                            DFM writes this value to MR1[D.I.C.] in the rank 1 (i.e. CS1) DDR3 parts
                                            when selected during power-up/init and write-leveling instruction sequencing.
                                            If DFM_CONFIG[SREF_WITH_DLL] is set, DFM also writes
                                            this value to MR1[D.I.C.] in all DRAM parts in rank 1 during self-refresh
                                            entry and exit instruction sequences (when DFM_CONFIG[INIT_STATUS<1>]=1).
                                            See DFM_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            DFM_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<18:17>  RTT_WR_01   R/W    0x0      0x0    RTT_WR Rank 1                                          
                                            DFM writes this value to MR2[Rtt_WR] in the rank 1 (i.e. CS1) DDR3 parts
                                            when selected during power-up/init instruction sequencing.
                                            If DFM_CONFIG[SREF_WITH_DLL] is set, DFM also writes
                                            this value to MR2[Rtt_WR] in all DRAM parts in rank 1 during self-refresh
                                            entry and exit instruction sequences (when DFM_CONFIG[INIT_STATUS<1>]=1).
                                            See DFM_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            DFM_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<16:16>  SRT_01      R/W    0x0      0x0    Self-refresh temperature range Rank 1                  
                                            DFM writes this value to MR2[SRT] in the rank 1 (i.e. CS1) DDR3 parts
                                            when selected during power-up/init instruction sequencing.
                                            If DFM_CONFIG[SREF_WITH_DLL] is set, DFM also writes
                                            this value to MR2[SRT] in all DRAM parts in rank 1 during self-refresh
                                            entry and exit instruction sequences (when DFM_CONFIG[INIT_STATUS<1>]=1).
                                            See DFM_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            DFM_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<15:15>  ASR_01      R/W    0x0      0x0    Auto self-refresh Rank 1                               
                                            DFM writes this value to MR2[ASR] in the rank 1 (i.e. CS1) DDR3 parts
                                            when selected during power-up/init instruction sequencing.
                                            If DFM_CONFIG[SREF_WITH_DLL] is set, DFM also writes
                                            this value to MR2[ASR] in all DRAM parts in rank 1 during self-refresh
                                            entry and exit instruction sequences (when DFM_CONFIG[INIT_STATUS<1>]=1).
                                            See DFM_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            DFM_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<14:12>  PASR_01     R/W    0x0      0x0    Partial array self-refresh Rank 1                      
                                            DFM writes this value to MR2[PASR] in the rank 1 (i.e. CS1) DDR3 parts
                                            when selected during power-up/init instruction sequencing.
                                            If DFM_CONFIG[SREF_WITH_DLL] is set, DFM also writes
                                            this value to MR2[PASR] in all DRAM parts in rank 1 during self-refresh
                                            entry and exit instruction sequences (when DFM_CONFIG[INIT_STATUS<1>]=1).
                                            See DFM_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            DFM_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<11:9>   RTT_NOM_00  R/W    0x0      0x0    RTT_NOM Rank 0                                         
                                            DFM writes this value to MR1[Rtt_Nom] in the rank 0 (i.e. CS0) DDR3 parts
                                            when selected during power-up/init instruction sequencing.
                                            If DFM_CONFIG[SREF_WITH_DLL] is set, DFM also writes
                                            this value to MR1[Rtt_Nom] in all DRAM parts in rank 0 during self-refresh
                                            entry and exit instruction sequences (when DFM_CONFIG[INIT_STATUS<0>]=1).
                                            See DFM_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            DFM_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<8:7>    DIC_00      R/W    0x0      0x0    Output Driver Impedance Control Rank 0                 
                                            DFM writes this value to MR1[D.I.C.] in the rank 0 (i.e. CS0) DDR3 parts
                                            when selected during power-up/init and write-leveling instruction sequencing.
                                            If DFM_CONFIG[SREF_WITH_DLL] is set, DFM also writes
                                            this value to MR1[D.I.C.] in all DRAM parts in rank 0 during self-refresh
                                            entry and exit instruction sequences (when DFM_CONFIG[INIT_STATUS<0>]=1).
                                            See DFM_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            DFM_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<6:5>    RTT_WR_00   R/W    0x0      0x0    RTT_WR Rank 0                                          
                                            DFM writes this value to MR2[Rtt_WR] in the rank 0 (i.e. CS0) DDR3 parts
                                            when selected during power-up/init instruction sequencing.
                                            If DFM_CONFIG[SREF_WITH_DLL] is set, DFM also writes
                                            this value to MR2[Rtt_WR] in all DRAM parts in rank 0 during self-refresh
                                            entry and exit instruction sequences (when DFM_CONFIG[INIT_STATUS<0>]=1).
                                            See DFM_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            DFM_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<4:4>    SRT_00      R/W    0x0      0x0    Self-refresh temperature range Rank 0                  
                                            DFM writes this value to MR2[SRT] in the rank 0 (i.e. CS0) DDR3 parts
                                            when selected during power-up/init instruction sequencing.
                                            If DFM_CONFIG[SREF_WITH_DLL] is set, DFM also writes
                                            this value to MR2[SRT] in all DRAM parts in rank 0 during self-refresh
                                            entry and exit instruction sequences (when DFM_CONFIG[INIT_STATUS<0>]=1).
                                            See DFM_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            DFM_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<3:3>    ASR_00      R/W    0x0      0x0    Auto self-refresh Rank 0                               
                                            DFM writes this value to MR2[ASR] in the rank 0 (i.e. CS0) DDR3 parts
                                            when selected during power-up/init instruction sequencing.
                                            If DFM_CONFIG[SREF_WITH_DLL] is set, DFM also writes
                                            this value to MR2[ASR] in all DRAM parts in rank 0 during self-refresh
                                            entry and exit instruction sequences (when DFM_CONFIG[INIT_STATUS<0>]=1).
                                            See DFM_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            DFM_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<2:0>    PASR_00     R/W    0x0      0x0    Partial array self-refresh Rank 0                      
                                            DFM writes this value to MR2[PASR] in the rank 0 (i.e. CS0) DDR3 parts
                                            when selected during power-up/init instruction sequencing.
                                            If DFM_CONFIG[SREF_WITH_DLL] is set, DFM also writes
                                            this value to MR2[PASR] in all DRAM parts in rank 0 during self-refresh
                                            entry and exit instruction sequences (when DFM_CONFIG[INIT_STATUS<0>]=1).
                                            See DFM_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            DFM_RESET_CTL[DDR3PWARM,DDR3PSOFT].

Notes:
 These parameters are written into the DDR3 MR0, MR1, MR2 and MR3 registers.

----------------------------------------------------------------------------------------------------
===

 *   
 *                    DFM_WODT_MASK = DFM Write OnDieTermination mask
 * System designers may desire to terminate DQ/DQS/DM lines for higher frequency DDR operations 
 * especially on a multi-rank system. DDR3 DQ/DM/DQS I/O's have built in 
 * Termination resistor that can be turned on or off by the controller, after meeting tAOND and tAOF
 * timing requirements. Each Rank has its own ODT pin that fans out to all the memory parts
 * in that rank. System designers may prefer different combinations of ODT ON's for writes
 * into different ranks. Octeon supports full programmability by way of the mask register below.
 * Each Rank position has its own 8-bit programmable field.
 * When the controller does a write to that rank, it sets the 4 ODT pins to the MASK pins below.
 * For eg., When doing a write into Rank0, a system designer may desire to terminate the lines
 * with the resistor on Dimm0/Rank1. The mask WODT_D0_R0 would then be {00000010}. 
 * Octeon drives the appropriate mask values on the ODT pins by default. If this feature is not 
 * required, write 0 in this register.
 * 

     ==============================================================
     DFM_WODT_MASK Type=RSL
     ==============================================================


----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:56>  WODT_D3_R1  R/W    0xff    0xff    Not used by DFM.                                           
<55:48>  WODT_D3_R0  R/W    0xff    0xff    Not used by DFM.                                           
<47:40>  WODT_D2_R1  R/W    0xff    0xff    Not used by DFM.                                           
<39:32>  WODT_D2_R0  R/W    0xff    0xff    Not used by DFM.                                           
<31:24>  WODT_D1_R1  R/W    0xff    0xff    Not used by DFM.                                           
<23:16>  WODT_D1_R0  R/W    0xff    0xff    Not used by DFM.                                           
<15:8>   WODT_D0_R1  R/W    0xff    0xff    Write ODT mask RANK1                                       
                                            WODT_D0_R1<7:2> not used by DFM.
                                            WODT_D0_R1<1:0> is also not used by DFM when RANK_ENA is not set.
<7:0>    WODT_D0_R0  R/W    0xff    0xff    Write ODT mask RANK0                                       
                                            WODT_D0_R0<7:2> not used by DFM.

Notes:
- DFM_WODT_MASK functions a little differently than DFM_RODT_MASK.  While, in DFM_RODT_MASK, the other
rank(s) are ODT-ed, in DFM_WODT_MASK, the rank in which the write CAS is issued can be ODT-ed as well.
- For a two rank system and a write op to rank0: use RODT_D0_R0<1:0> to terminate lines on rank1 and/or rank0.
- For a two rank system and a write op to rank1: use RODT_D0_R1<1:0> to terminate lines on rank1 and/or rank0.
- When a given RANK is selected, the WODT mask for that RANK is used.

DFM always writes 128-bit words independently via one write CAS operation per word. 
When a WODT mask bit is set, DFM asserts the OCTEON ODT output pin(s) starting the same cycle 
as the write CAS operation. Then, OCTEON normally continues to assert the ODT output pin(s) for five 
more cycles - for a total of 6 cycles for the entire word write - satisfying the 6 cycle DDR3 
ODTH8 requirements. But it is possible for DFM to issue two word writes  separated by as few 
as WtW = 4 or 5 cycles. In that case, DFM asserts the ODT output pin(s) for the WODT mask of the 
first word write for WtW cycles, then asserts the ODT output pin(s) for the WODT mask of the 
second write for 6 cycles (or less if a third word write follows within 4 or 5 
cycles of this second word write). Note that it may be necessary to force DFM to space back-to-back 
word writes to different ranks apart by at least 6 cycles to prevent DDR3 ODTH8 violations.
----------------------------------------------------------------------------------------------------
===
 *   
 *                    DFM_COMP_CTL2 = DFM Compensation control2
 *   

     ==============================================================
     DFM_COMP_CTL2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:34>  NS           RAZ     NS      NS    RESERVED                                             
<33:30>  DDR__PTUNE   RO      NS      NS    DDR pctl from compensation circuit                    
                                            The encoded value provides debug information for the 
                                            compensation impedance on P-pullup
<29:26>  DDR__NTUNE   RO      NS      NS    DDR nctl from compensation circuit                    
                                            The encoded value provides debug information for the 
                                            compensation impedance on N-pulldown
<25:25>  M180         R/W     0x0     NS    Cap impedance at 180 ohm (instead of 240 ohm)        
                                            *DON'T PUT IN HRM*
<24:24>  BYP          R/W     0x0     NS    Bypass mode                                          
                                            Use compensation setting from PTUNE,NTUNE
<23:20>  PTUNE        R/W     0x0     NS    PCTL impedance control in bypass mode                
<19:16>  NTUNE        R/W     0x0     NS    NCTL impedance control in bypass mode                

<15:12> RODT_CTL      R/W      0x0    NS    NCTL RODT impedance control bits                     
                                            0000 = No ODT
                                            0001 = 20 ohm
                                            0010 = 30 ohm
                                            0011 = 40 ohm
                                            0100 = 60 ohm
                                            0101 = 120 ohm
                                            0110-1111 = Reserved
<11:8>  CMD_CTL       R/W     0x4     NS    Drive strength control for CMD/A/RESET_N/CKE drivers 
                                            0001 = 24 ohm
                                            0010 = 26.67 ohm
                                            0011 = 30 ohm
                                            0100 = 34.3 ohm
                                            0101 = 40 ohm
                                            0110 = 48 ohm
                                            0111 = 60 ohm
                                            0000,1000-1111 = Reserved                                       
<7:4>   CK_CTL        R/W     0x4     NS    Drive strength control for CK/CS_N/ODT drivers       
                                            0001 = 24 ohm
                                            0010 = 26.67 ohm
                                            0011 = 30 ohm
                                            0100 = 34.3 ohm
                                            0101 = 40 ohm
                                            0110 = 48 ohm
                                            0111 = 60 ohm
                                            0000,1000-1111 = Reserved                                       
<3:0>    DQX_CTL      R/W     0x4     NS    Drive strength control for DQ/DQS drivers            
                                            0001 = 24 ohm
                                            0010 = 26.67 ohm
                                            0011 = 30 ohm
                                            0100 = 34.3 ohm
                                            0101 = 40 ohm
                                            0110 = 48 ohm
                                            0111 = 60 ohm
                                            0000,1000-1111 = Reserved                                       
----------------------------------------------------------------------------------------------------
===
 *   

     ==============================================================
     DFM_RLEVEL_RANK(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:56> NS       RAZ       NS          NS       RESERVED                                               
 <55:54> STATUS   RO        0x0         NS       Indicates status of the read-levelling and where       
                                                 the BYTE* programmings in <35:0> came from:
                                                 0 = BYTE* values are their reset value
                                                 1 = BYTE* values were set via a CSR write to this register
                                                 2 = read-leveling sequence currently in progress (BYTE* values are unpredictable)
                                                 3 = BYTE* values came from a complete read-leveling sequence
 <53:12> NS       R/W       NS          NS       RESERVED                                               
						 For DFM: These values can be IGNORED
 <11:6>  BYTE1    R/W       0x0         NS       Deskew setting                                         
 <5:0>   BYTE0    R/W       0x0         NS       Deskew setting                                         

Notes:
  This is TWO CSRs per DFM, one per each rank.

  Deskew setting is measured in units of 1/4 FCLK, so the above BYTE* values can range over 16 FCLKs.

  Each CSR is written by HW during a read-leveling sequence for the rank. (HW sets STATUS==3 after HW read-leveling completes for the rank.)
  If HW is unable to find a match per DFM_RLEVEL_CTL[OFFSET_EN] and DFM_RLEVEL_CTL[OFFSET], then HW will set DFM_RLEVEL_RANKn[BYTE*<5:0>] 
  to 0.

  Each CSR may also be written by SW, but not while a read-leveling sequence is in progress. (HW sets STATUS==1 after a CSR write.)

  SW initiates a HW read-leveling sequence by programming DFM_RLEVEL_CTL and writing INIT_START=1 with SEQUENCE=1 in DFM_CONFIG.
  See DFM_RLEVEL_CTL.
----------------------------------------------------------------------------------------------------
===

 *   

     ==============================================================
     DFM_RLEVEL_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:9>  NS       RAZ      NS          NS        RESERVED                                               
 <8>     OFFSET_EN R/W     0x1         0x1       Use DFM_RLEVEL_CTL[OFFSET] to calibrate read           
                                                 level dskew settings
 <7:4>   OFFSET   R/W      0x2         0x2       Pick final_setting-offset (if set) for the read level  
	                                         deskew setting instead of the middle of the largest 
                                                 contiguous sequence of 1's in the bitmask
 <3:0>   BYTE     R/W      0x0         NS        0 <= BYTE <= 1                                         
                                                 Byte index for which bitmask results are saved
                                                 in DFM_RLEVEL_DBG
Notes:
----------------------------------------------------------------------------------------------------
===

 *   

     ==============================================================
     DFM_RLEVEL_DBG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  BITMASK  RO       0x0         0x0       Bitmask generated during deskew settings sweep         
                                                 BITMASK[n]=0 means deskew setting n failed
                                                 BITMASK[n]=1 means deskew setting n passed
                                                 for 0 <= n <= 63

Notes:
  A given read of DFM_RLEVEL_DBG returns the read-leveling pass/fail results for all possible
  delay settings (i.e. the BITMASK) for only one byte in the last rank that the HW read-leveled.
  DFM_RLEVEL_CTL[BYTE] selects the particular byte.
  To get these pass/fail results for another different rank, you must run the hardware read-leveling
  again. For example, it is possible to get the BITMASK results for every byte of every rank
  if you run read-leveling separately for each rank, probing DFM_RLEVEL_DBG between each
  read-leveling.
----------------------------------------------------------------------------------------------------
===

 *   

     ==============================================================
     DFM_WLEVEL_RANK(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:47> NS       RAZ       NS          NS       RESERVED                                               
 <46:45> STATUS   RO        0x0         NS       Indicates status of the write-leveling and where      
                                                 the BYTE* programmings in <44:0> came from:
                                                 0 = BYTE* values are their reset value
                                                 1 = BYTE* values were set via a CSR write to this register
                                                 2 = write-leveling sequence currently in progress (BYTE* values are unpredictable)
                                                 3 = BYTE* values came from a complete write-leveling sequence, irrespective of 
                                                     which lanes are masked via DFM_WLEVEL_CTL[LANEMASK]
 <44:10> NS       RAZ       NS          NS       RESERVED                                               
 <9:5>   BYTE1    R/W       0x0         NS       Deskew setting                                         
                                                 Bit 0 of BYTE1 must be zero during normal operation
 <4:0>   BYTE0    R/W       0x0         NS       Deskew setting                                         
                                                 Bit 0 of BYTE0 must be zero during normal operation

Notes:
  This is TWO CSRs per DFM, one per each rank. (front bunk/back bunk)

  Deskew setting is measured in units of 1/8 FCLK, so the above BYTE* values can range over 4 FCLKs.

  Assuming DFM_WLEVEL_CTL[SSET]=0, the BYTE*<2:0> values are not used during write-leveling, and
  they are over-written by the hardware as part of the write-leveling sequence. (HW sets STATUS==3
  after HW write-leveling completes for the rank). SW needs to set BYTE*<4:3> bits.

  Each CSR may also be written by SW, but not while a write-leveling sequence is in progress. (HW sets STATUS==1 after a CSR write.)

  SW initiates a HW write-leveling sequence by programming DFM_WLEVEL_CTL and writing RANKMASK and INIT_START=1 with SEQUENCE=6 in DFM_CONFIG.
  DFM will then step through and accumulate write leveling results for 8 unique delay settings (twice), starting at a delay of 
  DFM_WLEVEL_RANKn[BYTE*<4:3>]*8 CK increasing by 1/8 CK each setting. HW will then set DFM_WLEVEL_RANKn[BYTE*<2:0>] to indicate the 
  first write leveling result of '1' that followed a reslt of '0' during the sequence by searching for a '1100' pattern in the generated 
  bitmask, except that DFM will always write DFM_WLEVEL_RANKn[BYTE*<0>]=0. If HW is unable to find a match for a '1100' pattern, then HW will 
  set DFM_WLEVEL_RANKn[BYTE*<2:0>] to 4.
  See DFM_WLEVEL_CTL.
----------------------------------------------------------------------------------------------------
===

 *   

     ==============================================================
     DFM_WLEVEL_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:10> NS       RAZ       NS         NS        RESERVED                                               
 <9>     SSET     R/W      0x0         NS        Run write-leveling on the current setting only.        
 <8:0>   LANEMASK R/W      0x0         NS        One-hot mask to select byte lane to be leveled by      
                                                 the write-leveling sequence
                                                 Used with x16 parts where the upper and lower byte
                                                 lanes need to be leveled independently
                                                 LANEMASK<8:2> must be zero.
Notes:
----------------------------------------------------------------------------------------------------
===

 *   

     ==============================================================
     DFM_WLEVEL_DBG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:12> NS       RAZ       NS          NS       RESERVED                                               
 <11:4>  BITMASK  RO       0x0         0x0       Bitmask generated during deskew settings sweep         
                                                 if DFM_WLEVEL_CTL[SSET]=0
                                                   BITMASK[n]=0 means deskew setting n failed
                                                   BITMASK[n]=1 means deskew setting n passed
                                                   for 0 <= n <= 7
                                                   BITMASK contains the first 8 results of the total 16
                                                   collected by DFM during the write-leveling sequence
						 else if DFM_WLEVEL_CTL[SSET]=1
                                                   BITMASK[0]=0 means curr deskew setting failed
                                                   BITMASK[0]=1 means curr deskew setting passed

 <3:0>   BYTE     R/W      0x0         0x0       0 <= BYTE <= 8                                         

Notes:
  A given write of DFM_WLEVEL_DBG returns the write-leveling pass/fail results for all possible
  delay settings (i.e. the BITMASK) for only one byte in the last rank that the HW write-leveled.
  DFM_WLEVEL_DBG[BYTE] selects the particular byte.
  To get these pass/fail results for another different rank, you must run the hardware write-leveling
  again. For example, it is possible to get the BITMASK results for every byte of every rank
  if you run write-leveling separately for each rank, probing DFM_WLEVEL_DBG between each
  write-leveling.
----------------------------------------------------------------------------------------------------
===

 *   
 *                  DFM_IFB_CNT  = Performance Counters
 *   

     ==============================================================
     DFM_IFB_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>   IFBCNT      RO      0       0      Performance Counter                                      
                                            64-bit counter that increments every
                                            cycle there is something in the in-flight buffer.
----------------------------------------------------------------------------------------------------
===
 *   
 *                  DFM_OPS_CNT  = Performance Counters
 *   

     ==============================================================
     DFM_OPS_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>   OPSCNT      RO      0       0      Performance Counter                                      
                                            64-bit counter that increments when the DDR3 data bus
                                            is being used.
                                              DRAM bus utilization = DFM_OPS_CNT/DFM_FCLK_CNT
----------------------------------------------------------------------------------------------------
===
 *   
 *                  DFM_FCLK_CNT  = Performance Counters
 *   

     ==============================================================
     DFM_FCLK_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>   FCLKCNT     RO      0       0      Performance Counter that counts fclks                    
                                            64-bit counter.
----------------------------------------------------------------------------------------------------
===
 *   
 *                    DFM_DLL_CTL2 = DFM (Octeon) DLL control and FCLK reset
 *   

     ==============================================================
     DFM_DLL_CTL2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>    BYP_SETTING R/W    0x0     0x0     Bypass setting                                             
                                            DDR3-1600: 00100010
                                            DDR3-1333: 00110010
                                            DDR3-1066: 01001011
                                            DDR3-800 : 01110101
                                            DDR3-667 : 10010110
                                            DDR3-600 : 10101100
                                            *DON'T PUT IN HRM*
<11:8>   BYP_SEL     R/W    0x0     0x0     Bypass select                                              
                                            0000 : no byte
                                            0001 : byte 0
                                            ...
                                            1001 : byte 8
                                            1010 : all bytes
                                            1011-1111 : Reserved
                                            *DON'T PUT IN HRM*
<12>     QUAD_DLL_ENA R/W   0x0     0x0     DLL Enable                                                 
<13>     DRESET       R/W   0x1     0x0     Fclk domain reset.  The reset signal that is used by the   
                                            Fclk domain is (DRESET || ECLK_RESET).
<14>     DLL_BRINGUP  R/W   0x0     0x0     DLL Bringup                                                
<63:15>  NS           RAZ   NS      NS      RESERVED                                                   

Notes:
DLL Bringup sequence:
1. If not done already, set DFM_DLL_CTL2 = 0, except when DFM_DLL_CTL2[DRESET] = 1.
2. Write 1 to DFM_DLL_CTL2[DLL_BRINGUP] 
3. Wait for 10 FCLK cycles, then write 1 to DFM_DLL_CTL2[QUAD_DLL_ENA]. It may not be feasible to count 10 FCLK cycles, but the 
   idea is to configure the delay line into DLL mode by asserting DLL_BRING_UP earlier than [QUAD_DLL_ENA], even if it is one 
   cycle early. DFM_DLL_CTL2[QUAD_DLL_ENA] must not change after this point without restarting the DFM and/or DRESET initialization 
   sequence.
4. Read L2D_BST0 and wait for the result. (L2D_BST0 is subject to change depending on how it called in o63. It is still ok to go 
   without step 4, since step 5 has enough time)
5. Wait 10 us.
6. Write 0 to DFM_DLL_CTL2[DLL_BRINGUP]. DFM_DLL_CTL2[DLL_BRINGUP] must not change after this point without restarting the DFM 
   and/or DRESET initialization sequence.
7. Read L2D_BST0 and wait for the result. (same as step 4, but the idea here is the wait some time before going to step 8, even it 
   is one cycle is fine)
8. Write 0 to DFM_DLL_CTL2[DRESET].  DFM_DLL_CTL2[DRESET] must not change after this point without restarting the DFM and/or 
   DRESET initialization sequence.
----------------------------------------------------------------------------------------------------
===
 *   
 *                    DFM_PHY_CTL = DFM PHY Control
 *   

     ==============================================================
     DFM_PHY_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:14>  NS         RAZ     NS      NS      RESERVED                                                   
<13>     LV_MODE    R/W     0x0     NS      Low Voltage Mode (1.35V)                                   
                                            *DON'T PUT IN HRM*
<12>     CK_TUNE1   R/W     0x0     NS      Clock Tune                                                 
                                            *DON'T PUT IN HRM*
                                            NOTE: DFM UNUSED
<11:8>   CK_DLYOUT1 R/W     0x0     NS      Clock delay out setting                                    
                                            *DON'T PUT IN HRM*
                                            NOTE: DFM UNUSED
<7>      CK_TUNE0   R/W     0x0     NS      Clock Tune                                                 
                                            *DON'T PUT IN HRM*
<6:3>    CK_DLYOUT0 R/W     0x0     NS      Clock delay out setting                                    
                                            *DON'T PUT IN HRM*
<2>      LOOPBACK   R/W     0x0     NS      Loopback enable                                            
                                            *DON'T PUT IN HRM*
<1>      LOOPBACK_POS R/W   0x0     NS      Loopback pos mode                                          
                                            *DON'T PUT IN HRM*
<0>      TS_STAGGER R/W     0x0     NS      TS Staggermode                                             
                                            This mode configures output drivers with 2-stage drive 
                                            strength to avoid undershoot issues on the bus when strong 
                                            drivers are suddenly turned on. When this mode is asserted, 
                                            Octeon will configure output drivers to be weak drivers 
                                            (60 ohm output impedance) at the first FCLK cycle, and 
                                            change drivers to the designated drive strengths specified 
                                            in DFM_COMP_CTL2 [CMD_CTL/CK_CTL/DQX_CTL] starting 
                                            at the following cycle
Notes:
----------------------------------------------------------------------------------------------------
===
 *   
 *                    DFM_DLL_CTL3 = DFM DLL control and FCLK reset
 *   

     ==============================================================
     DFM_DLL_CTL3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<5:0>    OFFSET      R/W    0x0     0x0     Write/read offset setting                                  
                                            [4:0] : offset
	                                    [5]   : 0 = increment, 1 = decrement
                                            Not a 2's complement value
                                            *DON'T PUT IN HRM*
<9:6>    BYTE_SEL    R/W    0x0     0x0     Byte select                                                
                                            0000 : no byte
                                            0001 : byte 0
                                            ...
                                            1001 : byte 8
                                            1010 : all bytes
                                            1011-1111 : Reserved
                                            *DON'T PUT IN HRM*
<11:10>  MODE_SEL    R/W    0x0     0x0     Mode select                                                
                                            00 : reset
                                            01 : write
                                            10 : read
                                            11 : write & read
                                            *DON'T PUT IN HRM*
<12>     LOAD_OFFSET WR0    0x0     0x0     Load offset                                                
                                            0 : disable
                                            1 : load (generates a 1 cycle pulse to the PHY)
                                            This register is oneshot and clears itself each time
                                            it is set
                                            *DON'T PUT IN HRM*
<13>     OFFSET_ENA  R/W    0x0     0x0     Offset enable                                              
                                            0 = disable
                                            1 = enable
                                            *DON'T PUT IN HRM*
<17:14>  DLL90_BYTE_SEL R/W 0x1     0x1     Observe DLL settings for selected byte                     
                                            0001 : byte 0
                                            ...
                                            1001 : byte 8
                                            0000,1010-1111 : Reserved
                                            *DON'T PUT IN HRM*
<18>     DLL_MODE    R/W    0x0     0x0     DLL Mode                                                   
                                            *DON'T PUT IN HRM*
<19>     FINE_TUNE_MODE R/W 0x0     0x0     Fine Tune Mode                                             
<27:20>  DLL90_SETTING RO   NS      NS      Encoded DLL settings. Works in conjuction with             
                                            DLL90_BYTE_SEL
                                            *DON'T PUT IN HRM*
<28>     DLL_FAST    RO     NS      NS      DLL lock                                                   
                                            0 = DLL locked
                                            *DON'T PUT IN HRM*
<63:29>  NS          RAZ    NS      NS      RESERVED                                                   

Notes:
----------------------------------------------------------------------------------------------------
===
 *   
 *                    DFM_SLOT_CTL0 = DFM Slot Control0
 * This register is an assortment of various control fields needed by the memory controller
 *   

     ==============================================================
     DFM_SLOT_CTL0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<5:0>    R2R_INIT    R/W   0x1     NS        Read-to-read spacing control                               
                                             for back to back accesses to the same rank and dimm
<11:6>   R2W_INIT    R/W   0x6     NS        Read-to-write spacing control                              
                                             for back to back accesses to the same rank and dimm
<17:12>  W2R_INIT    R/W   0x9     NS        Write-to-read spacing control                              
                                             for back to back accesses to the same rank and dimm
<23:18>  W2W_INIT    R/W   0x1     NS        Write-to-write spacing control                             
                                             for back to back accesses to the same rank and dimm
<63:24>  NS          RAZ   NS      NS        RESERVED                                                   

Notes:
HW will update this register if SW has not previously written to it and when any of DFM_RLEVEL_RANKn, DFM_WLEVEL_RANKn, DFM_CONTROL and 
DFM_MODEREG_PARAMS0 change.Ideally, this register should only be read after DFM has been initialized and DFM_RLEVEL_RANKn, DFM_WLEVEL_RANKn 
have valid data.
R2W_INIT has 1 extra CK cycle built in for odt settling/channel turnaround time.
----------------------------------------------------------------------------------------------------
===
 *   
 *                    DFM_SLOT_CTL1 = DFM Slot Control1
 * This register is an assortment of various control fields needed by the memory controller
 *   

     ==============================================================
     DFM_SLOT_CTL1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<5:0>    R2R_XRANK_INIT R/W 0x3    NS        Read-to-read spacing control                               
                                             for back to back accesses across ranks of the same dimm
<11:6>   R2W_XRANK_INIT R/W 0x6    NS        Read-to-write spacing control                              
                                             for back to back accesses across ranks of the same dimm
<17:12>  W2R_XRANK_INIT R/W 0x4    NS        Write-to-read spacing control                              
                                             for back to back accesses across ranks of the same dimm
<23:18>  W2W_XRANK_INIT R/W 0x5    NS        Write-to-write spacing control                             
                                             for back to back accesses across ranks of the same dimm
<63:24>  NS          RAZ   NS      NS        RESERVED                                                   

Notes:
HW will update this register if SW has not previously written to it and when any of DFM_RLEVEL_RANKn, DFM_WLEVEL_RANKn, DFM_CONTROL and 
DFM_MODEREG_PARAMS0 change.Ideally, this register should only be read after DFM has been initialized and DFM_RLEVEL_RANKn, DFM_WLEVEL_RANKn 
have valid data.
R2W_XRANK_INIT, W2R_XRANK_INIT have 1 extra CK cycle built in for odt settling/channel turnaround time.
----------------------------------------------------------------------------------------------------
===
 *   
 *                    DFM_CHAR_CTL = DFM Characterization Control
 * This register is an assortment of various control fields needed to charecterize the DDR3 interface
 * *DON'T PUT IN HRM*

     ==============================================================
     DFM_CHAR_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>   PRBS           R/W NS     NS        PRBS Polynomial                                   
<39:32>  PROG           R/W NS     NS        Programmable pattern                              
<40>     SEL            R/W NS     NS        Pattern select                                    
                                             0 = PRBS
                                             1 = Programmable pattern
<41>     EN             R/W NS     NS        Enable characterization                           
<63:42>  NS             R/W NS     NS        RESERVED                                          

Notes:
----------------------------------------------------------------------------------------------------
===
 *   
 *                    DFM_CHAR_MASK0 = DFM Characterization Control Mask0
 * This register is an assortment of various control fields needed to charecterize the DDR3 interface
 * *DON'T PUT IN HRM*   

     ==============================================================
     DFM_CHAR_MASK0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16>  NS          R/W   NS      NS        Reserved                                                  
<15:0>   MASK        R/W   NS      NS        Mask for DQ0[15:0]                                        

Notes:
----------------------------------------------------------------------------------------------------
===
 *   
 *                    DFM_CHAR_MASK2 = DFM Characterization Control Mask2
 * This register is an assortment of various control fields needed to charecterize the DDR3 interface
 * *DON'T PUT IN HRM*   

     ==============================================================
     DFM_CHAR_MASK2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16>  NS          R/W   NS      NS        Reserved                                                  
<15:0>   MASK        R/W   NS      NS        Mask for DQ1[15:0]                                        

Notes:
----------------------------------------------------------------------------------------------------
===
 *   
 *                    DFM_RODT_MASK = DFM Read OnDieTermination mask
 * System designers may desire to terminate DQ/DQS/DM lines for higher frequency DDR operations 
 * especially on a multi-rank system. DDR3 DQ/DM/DQS I/O's have built in 
 * Termination resistor that can be turned on or off by the controller, after meeting tAOND and tAOF
 * timing requirements. Each Rank has its own ODT pin that fans out to all the memory parts
 * in that rank. System designers may prefer different combinations of ODT ON's for reads
 * into different ranks. Octeon supports full programmability by way of the mask register below.
 * Each Rank position has its own 8-bit programmable field.
 * When the controller does a read to that rank, it sets the 4 ODT pins to the MASK pins below.
 * For eg., When doing a read into Rank0, a system designer may desire to terminate the lines
 * with the resistor on Dimm0/Rank1. The mask RODT_D0_R0 would then be {00000010}. 
 * Octeon drives the appropriate mask values on the ODT pins by default. If this feature is not 
 * required, write 0 in this register. Note that, as per the DDR3 specifications, the ODT pin 
 * for the rank that is being read should always be 0. 


     ==============================================================
     DFM_RODT_MASK Type=RSL
     ==============================================================


----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:56>  RODT_D3_R1  R/W    0x00    0x00    Must be zero.                                             
<55:48>  RODT_D3_R0  R/W    0x00    0x00    Must be zero.                                             
<47:40>  RODT_D2_R1  R/W    0x00    0x00    Must be zero.                                             
<39:32>  RODT_D2_R0  R/W    0x00    0x00    Must be zero.                                             
<31:24>  RODT_D1_R1  R/W    0x00    0x00    Must be zero.                                             
<23:16>  RODT_D1_R0  R/W    0x00    0x00    Must be zero.                                             
<15:8>   RODT_D0_R1  R/W    0x00    0x00    Read ODT mask RANK1                                       
                                            RODT_D0_R1<7:1> must be zero in all cases.
                                            RODT_D0_R1<0> must also be zero if RANK_ENA is not set.
<7:0>    RODT_D0_R0  R/W    0x00    0x00    Read ODT mask RANK0                                       
                                            RODT_D0_R0<7:2,0> must be zero in all cases.
                                            RODT_D0_R0<1> must also be zero if RANK_ENA is not set.

Notes:
- Notice that when there is only one rank, all valid fields must be zero.  This is because there is no
"other" rank to terminate lines for.  Read ODT is meant for multirank systems.
- For a two rank system and a read op to rank0: use RODT_D0_R0<1> to terminate lines on rank1.
- For a two rank system and a read op to rank1: use RODT_D0_R1<0> to terminate lines on rank0.
- Therefore, when a given RANK is selected, the RODT mask for that RANK is used.

DFM always reads 128-bit words independently via one read CAS operation per word.
When a RODT mask bit is set, DFM asserts the OCTEON ODT output
pin(s) starting (CL - CWL) CK's after the read CAS operation. Then, OCTEON
normally continues to assert the ODT output pin(s) for 5+DFM_CONTROL[RODT_BPRCH] more CK's
- for a total of 6+DFM_CONTROL[RODT_BPRCH] CK's for the entire 128-bit read -
satisfying the 6 CK DDR3 ODTH8 requirements.

But it is possible for OCTEON to issue two 128-bit reads separated by as few as
RtR = 4 or 5 (6 if DFM_CONTROL[RODT_BPRCH]=1) CK's. In that case, OCTEON asserts the ODT output pin(s)
for the RODT mask of the first 128-bit read for RtR CK's, then asserts
the ODT output pin(s) for the RODT mask of the second 128-bit read for 6+DFM_CONTROL[RODT_BPRCH] CK's
(or less if a third 128-bit read follows within 4 or 5 (or 6) CK's of this second 128-bit read).
Note that it may be necessary to force DFM to space back-to-back 128-bit reads
to different ranks apart by at least 6+DFM_CONTROL[RODT_BPRCH] CK's to prevent DDR3 ODTH8 violations.
----------------------------------------------------------------------------------------------------
===
 * Specify the RSL base addresses for the block
 *
 *                  DFM_FNT_CTL = DFM Front Control Register
 *
 * This register contains control registers for the DFM Front Section of Logic. 
 *

     ==============================================================
     DFM_FNT_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      DFR_ENA    R/W    0       1         DFM Memory Interface Enable                                
                                             The DFM powers up with the DDR3 interface disabled. 
                                             If the DFA function is required, then after poweron 
                                             software configures a stable DFM DDR3 memory clock 
                                             (see: LMCx_DDR_PLL_CTL[DFM_PS_EN, DFM_DIV_RESET]), 
                                             the DFM DDR3 memory interface can be enabled.
					     When disabled (DFR_ENA=0), all DFM DDR3 memory 
                                             output and bidirectional pins will be tristated.
					     SW NOTE: The DFR_ENA=1 write MUST occur sometime after
                                             the DFM is brought out of reset (ie: after the 
                                             DFM_DLL_CTL2[DRESET]=0 write). 

<1>      RECC_ENA   R/W    0       1         If RECC_ENA=1, all DFA memory reads sourced by 1) DFA      
                                             GWALK instructions or by 2) NCB-Direct CSR mode reads
                                             to DFA memory space, will be protected by an inband 10b
                                             OWECC SEC/DED codeword. The inband OW-DATA[127:118] 
                                             represents the inband OWECC codeword which offers single 
                                             bit error correction(SEC)/double bit error detection(DED). 
                                             [see also DFM_FNT_STAT[SBE,DBE,FADR,FSYN] status fields].
                                             The FSYN field contains an encoded value which determines
                                             which bit was corrected(for SBE) or detected(for DBE) to 
                                             help in bit isolation of the error. 

                                             SW NOTE: If RECC_ENA=1: An NCB-Direct CSR mode read of the
                                             upper QW in memory will return ZEROES in the upper 10b of the 
                                             data word.
  
                                             If RECC_ENA=0: An NCB-Direct CSR mode read of the upper QW in
                                             memory will return the RAW 64bits from memory. During memory
                                             debug, writing RECC_ENA=0 provides visibility into the raw ECC
                                             stored in memory at that time.

<2>      WECC_ENA   R/W    0       1         If WECC_ENA=1, HW will auto-generate(overwrite) the 10b    
			                     OWECC codeword during Memory Writes sourced by 
                                             1) DFA MLOAD instructions, or by 2) NCB-Direct CSR 
                                             mode writes to DFA memory space. The HW will insert
                                             the 10b OWECC inband into OW-DATA[127:118]. 

                                             If WECC_ENA=0, SW is responsible for generating the 
                                             10b OWECC codeword inband in the upper OW-data[127:118] 
                                             during Memory writes (to provide SEC/DED coverage for 
                                             the data during subsequent Memory reads-see RECC_ENA). 
                        
<3>      SBE_ENA    R/W    0       0         If SBE_ENA=1 & RECC_ENA=1 then all single bit errors       
                                             which have been detected/corrected during GWALK reads, 
                                             will be reported through RWORD0[REA]=ERR code in system 
                                             memory at the conclusion of the DFA instruction. 
                                             SWNOTE: The application user may wish to report single
                                             bit errors that were corrected through the 
                                             RWORD0[REA]=ERR codeword. 
                                             NOTE: This DOES NOT effect the reporting of SBEs in
                                             DFM_FNT_STAT[SBE] (which were corrected if RECC_ENA=1).
                                             This bit is only here for applications which 'MAY' want
                                             to be alerted with an ERR completion code if there were
                                             SBEs that were auto-corrected during GWALK instructions.
                                             Recap: If there is a SBE and SBE_ENA==1, the "err" field
                                             in the data returned to DFA will be set.  If SBE_ENA==0,
                                             the "err" is always 0 when there is a SBE; however,
                                             regardless of SBE_ENA, DBE will cause "err" to be 1.
<63:4>   NS         RAZ      NS      NS      RESERVED                                                 
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFM_FNT_STAT = DFM Front Status Register
 *
 * This register contains error status information for the DFM Front Section of Logic. 
 *

     ==============================================================
     DFM_FNT_STAT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      SBE_ERR    R/W1C    0       0       Single bit error detected(corrected) during              
                                             Memory Read. 
                                             Write of 1 will clear the corresponding error bit

<1>      DBE_ERR    R/W1C    0       0       Double bit error detected(uncorrectable) during          
                                             Memory Read.
                                             Write of 1 will clear the corresponding error bit
<3:2>    NS         RAZ      NS      NS      RESERVED                                                 
<31:4>   FADR       RO       0       0       Failing Memory octaword address                          
                                             If either SBE_ERR or DBE_ERR are set, the FADR
                                             represents the failing octaword address. 
                                             NOTE: If both DBE_ERR/SBE_ERR are set, the DBE_ERR has 
                                             higher priority and the FADR captured will always be
                                             with the DBE_ERR detected.  
                                             The FADR is "locked down" when either DBE_ERR/SBE_ERR
                                             are detected (until these bits are cleared (W1C)). 
                                             However, if an SBE_ERR occurs first, followed by a
                                             DBE_ERR, the higher priority DBE_ERR will re-capture
                                             the FADR for the higher priority error case. 

<41:32>   FSYN       RO       0       0      Failing Syndrome                                         
                                             If SBE_ERR=1, the FSYN code determines which bit was
                                             corrected during the OWECC check/correct.                                             
                                             NOTE: If both DBE_ERR/SBE_ERR are set, the DBE_ERR has 
                                             higher priority and FSYN captured will always be for the
                                             DBE_ERR detected. 
                                             The FSYN is "locked down" when either DBE_ERR/SBE_ERR
                                             are detected (until these bits are cleared (W1C)). 
                                             However, if an SBE_ERR occurs first, followed by a
                                             DBE_ERR, the higher priority DBE_ERR will re-capture
                                             the FSYN for the higher priority error case. 

<63:42>  NS         RAZ      NS      NS      RESERVED                                                 
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFM_FNT_IENA = DFM Front Interrupt Enable Mask
 *
 * This register contains error interrupt enable information for the DFM Front Section of Logic. 
 * 

     ==============================================================
     DFM_FNT_IENA Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>  SBE_INTENA   R/W      0           1         OWECC Single Error Corrected(SEC) Interrupt Enable   
                                                 When set, the memory controller raises a processor
                                                 interrupt on detecting a correctable single bit 
                                                 OWECC error which was corrected during a memory
                                                 read. 
<1>  DBE_INTENA   R/W      0           1         OWECC Double Error Detected(DED) Interrupt Enable    
                                                 When set, the memory controller raises a processor
                                                 interrupt on detecting an uncorrectable double bit 
                                                 OWECC during a memory read. 
<63:2>   NS       RAZ      NS          NS        RESERVED                                             
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFM_FNT_SCLK = DFM Front SCLK Control Register
 *
 * This register contains control registers for the DFM Front Section of Logic. 
 * NOTE: This register is in USCLK domain and is ised to enable the conditional SCLK grid, as well as
 * to start a software BiST sequence for the DFM sub-block. (note: the DFM has conditional clocks which
 * prevent BiST to run under reset automatically). 

     ==============================================================
     DFM_FNT_SCLK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      SCLKDIS  R/W       1      0         DFM sclk disable Source                                     
                                             When SET, the DFM sclk are disabled (to conserve overall 
                                             chip clocking power when the DFM function is not used). 
                                             NOTE: This should only be written to a different value
                                             during power-on SW initialization.
<1>      BIST_START R/W     0      0         When software writes BIST_START=0->1, a BiST is executed    
                                             for the DFM sub-block. 
                                             NOTES: 
                                             1) This bit should only be written after BOTH sclk
                                             and fclk have been enabled by software and are stable
                                             (see: DFM_FNT_SCLK[SCLKDIS] and instructions on how to 
                                             enable the DFM DDR3 memory (fclk) - which requires LMC 
                                             PLL init, DFM clock divider and proper DFM DLL 
	                                     initialization sequence).
<2>      CLEAR_BIST R/W     0      0         When START_BIST is written 0->1, if CLEAR_BIST=1, all       
                                             previous BiST state is cleared. 
                                             NOTES: 
                                             1) CLEAR_BIST must be written to 1 before START_BIST 
                                             is written to 1 using a separate CSR write.
                                             2) CLEAR_BIST must not be changed after writing START_BIST 
                                             0->1 until the BIST operation completes.
<63:3>   NS       RAZ      NS      NS        RESERVED                                                    
----------------------------------------------------------------------------------------------------
===
 *
 *                  DFM_FNT_BIST = DFM Front BIST Status 
 *
 * This register contains Bist Status for DFM Front
 * 

     ==============================================================
     DFM_FNT_BIST Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      MWB      RO       0           0         Bist Results for MWB RAM                             
                                                 0: GOOD (or bist in progress/never run)                  	                  
                                                 1: BAD				                        	                 
<1>      RPB      RO       0           0         Bist Results for RPB RAM                             
                                                 0: GOOD (or bist in progress/never run)                  	                  
                                                 1: BAD				                        	                 
<2>      MFF      RO       0           0         Bist Results for MFF RAM                             
                                                 0: GOOD (or bist in progress/never run)                  	                  
                                                 1: BAD				                        	                 
<3>      MRQ      RO       0           0         Bist Results for MRQ RAM                             
                                                 0: GOOD (or bist in progress/never run)                  	                  
                                                 1: BAD				                        	                 
<63:4>   NS       RAZ      NS          NS        RESERVED                                             
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     DPI_BIST_STATUS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:37> NS       RAZ      NS          NS        Reserved				            |   
 <36:0>  BIST     RO       0x0         0         BIST Results.                                      |   
                                                  HW sets a bit in BIST for for memory that fails   |
						  BIST.						    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     DPI_INT_REG Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:28> NS         RAZ    NS          NS        Reserved					    |   
 <27:26> NS         RAZ    NS          NS        Reserved for SLI port expansion                    |   
 <25>    SPRT1_RST  R/W1C  0x0         0         DMA instruction was dropped because the source or  |   
						  destination port was in reset.		    |
						 this bit is set.				    |
 <24>    SPRT0_RST  R/W1C  0x0         0         DMA instruction was dropped because the source or  |   
						  destination port was in reset.		    |
						 this bit is set.				    |
 <23>    NS         RAZ    NS          NS        Reserved				            |   
 <22>    REQ_BADFIL R/W1C  0x0         0         DMA instruction unexpected fill         	    |   
						  Instruction fill when none outstanding.	    |
 <21>    REQ_INULL  R/W1C  0x0         0         DMA instruction filled with NULL pointer	    |   
						  Next pointer was NULL.			    |
 <20>    REQ_ANULL  R/W1C  0x0         0         DMA instruction filled with bad instruction	    |   
						  Fetched instruction word was 0.		    |
 <19>    REQ_UNDFLW R/W1C  0x0         0         DMA instruction FIFO underflow   		    |   
						  DPI tracks outstanding instructions fetches.	    |
						  Interrupt will fire when FIFO underflows.	    |
 <18>    REQ_OVRFLW R/W1C  0x0         0         DMA instruction FIFO overflow    		    |   
						  DPI tracks outstanding instructions fetches.	    |
						  Interrupt will fire when FIFO overflows.	    |
 <17>    REQ_BADLEN R/W1C  0x0         0         DMA instruction fetch with length		    |   
						  Interrupt will fire if DPI forms an instruction   |
						  fetch with length of zero.			    |
 <16>    REQ_BADADR R/W1C  0x0         0         DMA instruction fetch with bad pointer		    |   
						  Interrupt will fire if DPI forms an instruction   |
						  fetch to the NULL pointer.			    |
 <15:8>  DMADBO     R/W1C  0x0         0         DMAx doorbell overflow.                            |   
						  DPI has a 32-bit counter for each request's queue |
						  outstanding doorbell counts. Interrupt will fire  |
						  if the count overflows.			    |
 <7:2>   NS         RAZ    NS          NS        Reserved				            |   
 <1>     NFOVR      R/W1C  0x0         0         CSR Fifo Overflow                                  |   
						  DPI can store upto 16 CSR request.  The FIFO will |
						  overflow if that number is exceeded.		    |
 <0>     NDERR      R/W1C  0x0         0         NCB Decode Error                                   |   
						  DPI received a NCB transaction on the outbound    |
						  bus to the DPI deviceID, but the command was not  |
						  recognized.					    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     DPI_INT_EN Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:28> NS         RAZ    NS          NS        Reserved				            |   
 <27:26> NS         R/W    NS          NS        Reserved for SLI port expansion                    |   
 <25>    SPRT1_RST  R/W    0x0         0         DMA instruction was dropped because the source or  |   
						  destination port was in reset.		    |
						 this bit is set.				    |
 <24>    SPRT0_RST  R/W    0x0         0         DMA instruction was dropped because the source or  |   
						  destination port was in reset.		    |
						 this bit is set.				    |
 <23>    NS         R/W    NS          NS        Reserved				            |   
 <22>    REQ_BADFIL R/W    0x0         0         DMA instruction unexpected fill         	    |   
 <21>    REQ_INULL  R/W    0x0         0         DMA instruction filled with NULL pointer	    |   
 <20>    REQ_ANULL  R/W    0x0         0         DMA instruction filled with bad instruction	    |   
 <19>    REQ_UNDFLW R/W    0x0         0         DMA instruction FIFO underflow   		    |   
 <18>    REQ_OVRFLW R/W    0x0         0         DMA instruction FIFO overflow    		    |   
 <17>    REQ_BADLEN R/W    0x0         0         DMA instruction fetch with length		    |   
 <16>    REQ_BADADR R/W    0x0         0         DMA instruction fetch with bad pointer		    |   
 <15:8>  DMADBO     R/W    0x0         0         DMAx doorbell overflow.                            |   
 <7:2>   NS         R/W    0x0         0         Reserved				            |   
 <1>     NFOVR      R/W    0x0         0         CSR Fifo Overflow                                  |   
 <0>     NDERR      R/W    0x0         0         NCB Decode Error                                   |   
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     DPI_CTL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ      NS          NS        Reserved				            |   
 <1>     CLK      RO       0x0         1         Status bit that indicates that the clks are running|   
 <0>     EN       R/W      0x0         1         Turns on the DMA and Packet state machines         |   
----------------------------------------------------------------------------------------------------
===


 *
 *                  DPI_DMA_CONTROL = DMA Control Register
 *
 * Controls operation of the DMA IN/OUT.
 *

     ==============================================================
     DPI_DMA_CONTROL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:59> NS       RAZ      NS          NS        Reserved				            |   
 <58>    COMMIT_MODE R/W   0x0         0x1       DMA Engine Commit Mode				    |   
												    |
						  When COMMIT_MODE=0, DPI considers an instruction  |
                                                  complete when the HW internally generates the	    |
						  final write for the current instruction.	    |
												    |
						  When COMMIT_MODE=1, DPI additionally waits for    |
						  the final write to reach the interface coherency  |
						  point to declare the instructions complete.	    |
												    |
						  Please note: when COMMIT_MODE == 0, DPI may not   |
						  follow the HRM ordering rules.		    |
												    |
						  DPI hardware performance may be better with	    |
						  COMMIT_MODE == 0 than with COMMIT_MODE == 1 due   |
						  to the relaxed ordering rules.		    |
												    |
						  If the HRM ordering rules are required, set	    |
						  COMMIT_MODE == 1.				    |
												    |
 <57>    PKT_HP   R/W      0x0         NS        High-Priority Mode for Packet Interface.	    |   
					          Engine 5 will be serviced more frequently to      |
						  deliver more bandwidth to packet interface.       |
						  When PKT_EN=0, then PKT_HP=0.                     |
 <56>    PKT_EN   R/W      0x0         NS        Enables the packet interface.			    |   
						  When the packet interface is enabled, engine 5    |
						  is used for packets and is not available for DMA. |
						  When PKT_EN=1, then DMA_ENB<5>=0.		    |
                                                  When PKT_EN=0, then PKT_HP=0.                     |
 <55:54> NS       RAZ      NS          NS        Reserved				            |   
 <53:48> DMA_ENB  R/W      0x0         0x3f      DMA engine enable. Enables the operation of the    |   
                                                  DMA engine. After being enabled an engine should  |
						  not be disabled while processing instructions.    |
						  When PKT_EN=1, then DMA_ENB<5>=0.		    |
 <47:34> NS       RAZ      NS          NS        Reserved				            |   
 <33>    B0_LEND  R/W      0x0         0         When set '1' and the DPI is in the mode to write   |   
                                                  0 to L2C memory when a DMA is done, the address   |
                                                  to be written to will be treated as a Little	    |
                                                  Endian address.				    |
 <32>    DWB_DENB R/W      0x0         1         When set '1', DPI will send a value in the DWB	    |   
                                                  field for a free page operation for the memory    |
                                                  that contained the data.			    |
 <31:23> DWB_ICHK R/W      0x0         NS        When Instruction Chunks for DMA operations are	    |   
                                                  freed this value is used for the DWB field of the |
                                                  operation.					    |
 <22:20> FPA_QUE  R/W      0x0         NS        The FPA queue that the instruction-chunk page will |   
                                                  be returned to when used.			    |
 <19>    O_ADD1   R/W      0x0         1         When set '1' 1 will be added to the DMA counters,  |   
                                                  if '0' then the number of bytes in the dma	    |
                                                  transfer will be added to the count register.	    |
 <18>    O_RO     R/W      0x0         NS        Relaxed Ordering Mode for DMA.			    |   
 <17>    O_NS     R/W      0x0         NS        Nosnoop For DMA.				    |   
 <16:15> O_ES     R/W      0x0         NS        Endian Swap Mode for DMA.			    |   
 <14>    O_MODE   R/W      0x0         1         Select PCI_POINTER MODE to be used.		    |   
						  0=DPTR format 1 is used			    |
						    use register values for address and pointer	    |
						    values for ES, NS, RO			    |
						  1=DPTR format 0 is used			    |
						    use pointer values for address and register	    |
						    values for ES, NS, RO			    |
 <13:0>  NS       RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     DPI_REQ_GBL_EN Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved				            |   
 <7:0>   QEN      R/W      0xff        0xff      Indicates which instruction queues are enabled and |   
						  can dispatch instructions to a requesting engine. |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     DPI_REQ_ERR_RSP Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved				            |   
 <7:0>   QERR     R/W1C    0x0         0x0       Indicates which instruction queue received an      |   
						  ErrorResponse from the I/O subsystem.		    |
						  SW must clear the bit before the the cooresponding|
						  instruction queue will continue processing	    |
						  instructions if DPI_REQ_ERR_RSP_EN[EN] is set.    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     DPI_REQ_ERR_RST Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved				            |   
 <7:0>   QERR     R/W1C    0x0         0x0       Indicates which instruction queue dropped an       |   
						  instruction because the source or destination	    |
						  was in reset.					    |
						  SW must clear the bit before the the cooresponding|
						  instruction queue will continue processing	    |
						  instructions if DPI_REQ_ERR_RST_EN[EN] is set.    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     DPI_REQ_ERR_RSP_EN Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved				            |   
 <7:0>   EN       R/W      0xff        0xff      Indicates which instruction queues should stop	    |   
						  dispatching instructions when an  ErrorResponse   |
						  is received from the I/O subsystem.		    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     DPI_REQ_ERR_RST_EN Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved				            |   
 <7:0>   EN       R/W      0xff        0xff      Indicates which instruction queues should stop	    |   
						  dispatching instructions when an instruction	    |
						  is dropped because the source or destination port |
						  is in reset.					    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     DPI_PKT_ERR_RSP Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved				            |   
 <0>     PKTERR   R/W1C    0x0         0x0       Indicates that an ErrorResponse was received from  |	
						  the I/O subsystem.				    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     DPI_DMA_ENG(0..5)_EN Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved				            |   
 <7:0>   QEN      R/W      0xff        0xff      Controls which logical instruction queues can be   |   
						  serviced by the DMA engine. Setting QEN==0	    |
						  effectively disables the engine.		    |
                                                  When DPI_DMA_CONTROL[PKT_EN] = 1, then            |
                                                  DPI_DMA_ENG5_EN[QEN] must be zero.                |
----------------------------------------------------------------------------------------------------
===


 *
 *                  DPI_DMA_DBELL[0..7] = DMA Door Bell
 *
 * The door bell register for DMA[0..7] queue.
 *

     ==============================================================
     DPI_DMA(0..7)_DBELL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved					        
 <15:0>  DBELL    WO       0x0         NS        The value written to this register is added to the     
                                                 number of 8byte words to be read and processes for
                                                 the low priority dma queue.
----------------------------------------------------------------------------------------------------
===


 *
 *                  DPI_DMA[0..7]_IBUFF_SADDR = DMA Instruction Buffer Starting Address
 *
 * The address to start reading Instructions from for DMA[0..7].
 *

     ==============================================================
     DPI_DMA(0..7)_IBUFF_SADDR Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:62> NS       RAZ      NS          NS        Reserved					    |   
 <61:48> CSIZE    R/W      0x40        NS        The size in 8B words of the DMA Instruction Chunk. |   
                                                  This value should only be written at known times  |
						  in order to prevent corruption of the instruction |
						  queue.  The minimum CSIZE is 16 (one cacheblock). |
 <47:41> NS       RAZ      NS          NS        Reserved					    |   
 <40>    IDLE     RO       0x1         NS        DMA Request Queue is IDLE                          |   
 <39:36> NS       RAZ      NS          NS        Reserved					    |   
 <35:7>  SADDR    R/W      0x0         NS        The 128 byte aligned starting or chunk address.    |	
						  SADDR is address bit 35:7 of the starting	    |
						  instructions address. When new chunks are fetched |
						  by the HW, SADDR will be updated to reflect the   |
						  address of the current chunk.			    |
						  A write to SADDR resets both the queue's doorbell |
						  (DPI_DMAx_COUNTS[DBELL) and its tail pointer	    |
						  (DPI_DMAx_NADDR[ADDR]).			    |
 <6:0>   NS       RAZ      NS          NS        Reserved					    |   
----------------------------------------------------------------------------------------------------
===
 

 *
 *                  DPI_DMA[0..7]_COUNTS = DMA Instruction Counts
 *
 * Values for determing the number of instructions for DMA[0..7] in the DPI.
 *

     ==============================================================
     DPI_DMA(0..7)_COUNTS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:39> NS       RAZ      NS          NS        Reserved					    |   
 <38:32> FCNT     RO       0x0         0         Number of words in the Instruction FIFO locally    |   
						  cached within DPI.				    |
 <31:0>  DBELL    RO       0x0         0         Number of available words of Instructions to read. |   
----------------------------------------------------------------------------------------------------
===


 *
 *                  DPI_DMA[0..7]_NADDR = DMA Next Ichunk Address
 *
 * Place DPI will read the next Ichunk data from.
 *

     ==============================================================
     DPI_DMA(0..7)_NADDR Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:36> NS       RAZ      NS          NS        Reserved					        
 <35:0>  ADDR     RO       0x0         NS        The next L2C address to read DMA# instructions         
                                                 from.
----------------------------------------------------------------------------------------------------
===


 *
 *                  DPI_DMA[0..7]_REQBNK0 = DMA Request State Bank0
 *
 * Current contents of the request state machine - bank0
 *

     ==============================================================
     DPI_DMA(0..7)_REQBNK0 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  STATE    RO       0x0         NS        State                                                  
----------------------------------------------------------------------------------------------------
===


 *
 *                  DPI_DMA[0..7]_REQBNK1 = DMA Request State Bank1
 *
 * Current contents of the request state machine - bank1
 *

     ==============================================================
     DPI_DMA(0..7)_REQBNK1 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  STATE    RO       0x0         NS        State                                                  
----------------------------------------------------------------------------------------------------
===


 *
 *                  DPI_PINT_INFO = DPI Packet Interrupt Info
 *
 * DPI Packet Interrupt Info.
 *

     ==============================================================
     DPI_PINT_INFO Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:14> NS       RAZ      NS          NS        Reserved					    |   
 <13:8>  IINFO    RO       0x0         NS        Packet Instruction Doorbell count overflow info    |   
 <7:6>   NS       RAZ      NS          NS        Reserved					    |   
 <5:0>   SINFO    RO       0x0         NS        Packet Scatterlist Doorbell count overflow info    |   
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     DPI_ENG(0..5)_BUF Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved					    |   
 <7:4>   BASE     RO       NS          NS        The base address in 512B blocks of the engine fifo |   
 <3:0>   BLKS     R/W      0x2         NS        The size in 512B blocks of the engine fifo	    |   
						  Legal values are 0-8.				    |
						  0 = Engine is disabled			    |
						  1 = 0.5KB buffer				    |
						  2 = 1.0KB buffer				    |
						  3 = 1.5KB buffer				    |
						  4 = 2.0KB buffer				    |
						  5 = 2.5KB buffer				    |
						  6 = 3.0KB buffer				    |
						  7 = 3.5KB buffer				    |
						  8 = 4.0KB buffer				    |
 Notes:
 The total amount of storage allocated to the 6 DPI DMA engines (via DPI_ENG*_BUF[BLKS]) must not exceed 8KB.
----------------------------------------------------------------------------------------------------
===


 *
 *                  DPI_SLI_PRTx_CFG = DPI SLI Port Configuration
 *
 * Configures the Max Read Request Size, Max Paylod Size, and Max Number of SLI Tags in use
 *

     ==============================================================
     DPI_SLI_PRT(0..1)_CFG Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:25> NS       RAZ      NS          NS        Reserved					    |   
 <24>    HALT     RO       0           0         When set, HALT indicates that the MAC has detected |    
                                                  a reset condition. No further instructions that   | 
                                                  reference the MAC from any instruction Q will be  | 
                                                  issued until the MAC comes out of reset and HALT  | 
                                                  is cleared in SLI_CTL_PORTx[DIS_PORT].            | 
 <23:21> NS       RAZ      NS          NS        Reserved					    |   
 <20>    QLM_CFG  RO       NS          NS        Read only copy of the QLM CFG pin		    |   
						  0= MAC is PCIe				    |
						  1= MAC is SRIO				    |
 <19:17> NS       RAZ      NS          NS        Reserved					    |   
 <16>    RD_MODE  R/W      0x0         0x0       Read Mode					    |   
						  0=Exact Read Mode				    |
						    If the port is a PCIe port, the HW reads on a   |
						    4B granularity.  In this mode, the HW may break |
						    a given read into 3 operations to satisify	    |
						    PCIe rules.					    |
						    If the port is a SRIO port, the HW follows the  |
						    SRIO read rules from the SRIO specification and |
						     only issues 32*n, 16, and 8 byte  operations   |
						     on the SRIO bus.				    |
						  1=Block Mode					    |
						    The HW will read more data than requested in    |
						    order to minimize the number of operations	    |
						    necessary to complete the operation.	    |
						    The memory region must be memory like.	    |
 <15:14> NS       RAZ      NS          NS        Reserved					    |   
 <13:8>  MOLR     R/W      0x20        0x20      Max Outstanding Load Requests                      |   
                                                  Limits the number of oustanding load requests on  |
						  the port by restricting the number of tags        |
						  used by the SLI to track load responses.  This    |
						  value can range from 1 to 32. Setting a value of  |
						  0 will halt all read traffic to the port.  There  |
						  are no restrictions on when this value            |
                                                  can be changed.   				    |
 <7>     MPS_LIM  R/W      0x0         0x0       MAC memory space write requests cannot cross the   |   
                                                  (naturally-aligned) MPS boundary.                 |
                                                  When clear, DPI is allowed to issue a MAC memory  |
                                                  space read that crosses the naturally-aligned     |
                                                  boundary of size defined by MPS. (DPI will still  |
                                                  only cross the boundary when it would eliminate a |
                                                  write by doing so.)                               |
                                                  When set, DPI will never issue a MAC memory space |
                                                  write that crosses the naturally-aligned boundary |
                                                  of size defined by MPS.                           |
 <6:5>   NS       RAZ      NS          NS        Reserved					    |   
 <4>     MPS      R/W      0x0         0x0       Max Payload Size                                   |   
                                                         0 = 128B                                   |
                                                         1 = 256B                                   |
                                                 For PCIe MACs, this MPS size must not exceed       |
                                                       the size selected by PCIE*_CFG030[MPS].      |
                                                 For sRIO MACs, all MPS values are allowed.         |
 <3>     MRRS_LIM R/W      0x0         0x0       MAC memory space read requests cannot cross the    |   
                                                  (naturally-aligned) MRRS boundary.                |
                                                  When clear, DPI is allowed to issue a MAC memory  |
                                                  space read that crosses the naturally-aligned     |
                                                  boundary of size defined by MRRS. (DPI will still |
                                                  only cross the boundary when it would eliminate a |
                                                  read by doing so.)                                |
                                                  When set, DPI will never issue a MAC memory space |
                                                  read that crosses the naturally-aligned boundary  |
                                                  of size defined by MRRS.
 <2>     NS       RAZ      NS          NS        Reserved					    |   
 <1:0>   MRRS     R/W      0x0         0x0       Max Read Request Size                              |   
                                                         0 = 128B                                   |
                                                         1 = 256B                                   |
                                                         2 = 512B                                   |
                                                         3 = 1024B                                  |
                                                 For PCIe MACs, this MRRS size must not exceed      |
                                                       the size selected by PCIE*_CFG030[MRRS].     |
                                                 For sRIO MACs, this MRRS size must be <= 256B.     |
----------------------------------------------------------------------------------------------------
===


 *
 *                  DPI_SLI_PRTx_ERR = DPI SLI Port Error Info
 *
 * Logs the Address and Request Queue associated with the reported SLI error response
 *

     ==============================================================
     DPI_SLI_PRT(0..1)_ERR Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:3>  ADDR     RO       0x0         NS        Address of the failed load request.	            |   
 <2:0>   NS       RAZ      NS          NS        Reserved					    |   
----------------------------------------------------------------------------------------------------
===


 *
 *                  DPI_SLI_PRTx_ERR_INFO = DPI SLI Port Error Info
 *
 * Logs the Address and Request Queue associated with the reported SLI error response
 *

     ==============================================================
     DPI_SLI_PRT(0..1)_ERR_INFO Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:9>  NS       RAZ      NS          NS        Reserved					    |   
 <8>     LOCK     RO       0x0         NS        DPI_SLI_PRTx_ERR and DPI_SLI_PRTx_ERR_INFO have    |   
						  captured and locked contents.			    |
 <7:5>   NS       RAZ      NS          NS        Reserved					    |   
 <4>     TYPE     RO       0x0         NS        Type of transaction that caused the ErrorResponse. |   
						  0=DMA Instruction				    |
						  1=PKT Instruction				    |
 <3>     NS       RAZ      NS          NS        Reserved					    |   
 <2:0>   REQQ     RO       0x0         NS        Request queue that made the failed load request.   |   
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     DPI_INFO_REG Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS         RAZ    NS          NS        Reserved					    |   
 <1>     NCB        R/W1C  0x0         0         NCB Register Access                                |   
						  This interrupt will fire in normal operation	    |
						  when SW reads a DPI register through the NCB	    |
						  interface.					    |
 <0>     RSL        R/W1C  0x0         0         RSL Register Access                                |   
						  This interrupt will fire in normal operation	    |
						  when SW reads a DPI register through the RSL	    |
						  interface.					    |
----------------------------------------------------------------------------------------------------
===



 *
 *                  FPA_FPF0_MARKS = FPA's Queue 0 Free Page FIFO Read Write Marks
 *
 * The high and low watermark register that determines when we write and read free pages from L2C
 * for Queue 0. The value of FPF_RD and FPF_WR should have at least a 33 difference. Recommend value
 * is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75) 
 *

     ==============================================================
     FPA_FPF0_MARKS Type=RSL
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  FPF_RD   R/W      0x40        0         When the number of free-page-pointers in a             
                                                 queue drops below this value and there are                                        
                                                 free-page-pointers in DRAM, the FPA will	                                         
                                                 read one page (32 pointers) from DRAM.	                                           
                                                 This maximum value for this field should be
                                                 FPA_FPF0_SIZE[FPF_SIZ]-34. The min number
                                                 for this would be 16.
 <23:12> FPF_WR   R/W      0xC4        0         When the number of free-page-pointers in a             
                                                  queue exceeds this value the FPA will write                                       
                                                  32-page-pointers of that queue to DRAM.
                                                 The MAX value for this field should be
 	                                         FPA_FPF0_SIZE[FPF_SIZ]-2.
 <63:24> NS       RAZ      NS          NS        Reserved				                
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_FPF1_MARKS = FPA's Queue 1 Free Page FIFO Read Write Marks
 *
 * The high and low watermark register that determines when we write and read free pages from L2C
 * for Queue 1. The value of FPF_RD and FPF_WR should have at least a 33 difference. Recommend value
 * is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75) 
 *

     ==============================================================
     FPA_FPF1_MARKS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <10:0>  FPF_RD   R/W      0x40        0         When the number of free-page-pointers in a             
                                                  queue drops below this value and there are                                      
                                                  free-page-pointers in DRAM, the FPA will	                                       
                                                  read one page (32 pointers) from DRAM.	                                       
                                                 This maximum value for this field should be
                                                 FPA_FPF1_SIZE[FPF_SIZ]-34. The min number
                                                 for this would be 16.
 <21:11> FPF_WR   R/W      0xC4        0         When the number of free-page-pointers in a             
                                                  queue exceeds this value the FPA will write                                     
                                                  32-page-pointers of that queue to DRAM.	                                       
                                                 The MAX value for this field should be
 	                                         FPA_FPF1_SIZE[FPF_SIZ]-2.
 <63:22> NS       RAZ      NS          NS        Reserved					        
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_FPF2_MARKS = FPA's Queue 2 Free Page FIFO Read Write Marks
 *
 * The high and low watermark register that determines when we write and read free pages from L2C
 * for Queue 2. The value of FPF_RD and FPF_WR should have at least a 33 difference. Recommend value
 * is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75) 
 *

     ==============================================================
     FPA_FPF2_MARKS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <10:0>  FPF_RD   R/W      0x40        0         When the number of free-page-pointers in a             
                                                  queue drops below this value and there are         	                                   
                                                  free-page-pointers in DRAM, the FPA will	                                           
                                                  read one page (32 pointers) from DRAM.	          	                           
                                                 This maximum value for this field should be
                                                 FPA_FPF2_SIZE[FPF_SIZ]-34. The min number
                                                 for this would be 16.
 <21:11> FPF_WR   R/W      0xC4        0         When the number of free-page-pointers in a             
                                                  queue exceeds this value the FPA will write        	                                   
                                                  32-page-pointers of that queue to DRAM.	                                           
                                                 The MAX value for this field should be
 	                                         FPA_FPF2_SIZE[FPF_SIZ]-2.
 <63:22> NS       RAZ      NS          NS        Reserved					        
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_FPF3_MARKS = FPA's Queue 3 Free Page FIFO Read Write Marks
 *
 * The high and low watermark register that determines when we write and read free pages from L2C
 * for Queue 3. The value of FPF_RD and FPF_WR should have at least a 33 difference. Recommend value
 * is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75) 
 *

     ==============================================================
     FPA_FPF3_MARKS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <10:0>  FPF_RD   R/W      0x40        0         When the number of free-page-pointers in a             
                                                  queue drops below this value and there are                                           
                                                  free-page-pointers in DRAM, the FPA will	                                         
                                                  read one page (32 pointers) from DRAM.	                                         
                                                 This maximum value for this field should be
                                                 FPA_FPF3_SIZE[FPF_SIZ]-34. The min number
                                                 for this would be 16.
 <21:11> FPF_WR   R/W      0xC4        0         When the number of free-page-pointers in a             
                                                  queue exceeds this value the FPA will write                                          
                                                  32-page-pointers of that queue to DRAM.	                                         
                                                 The MAX value for this field should be
 	                                         FPA_FPF3_SIZE[FPF_SIZ]-2.
 <63:22> NS       RAZ      NS          NS        Reserved					        
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_FPF4_MARKS = FPA's Queue 4 Free Page FIFO Read Write Marks
 *
 * The high and low watermark register that determines when we write and read free pages from L2C
 * for Queue 4. The value of FPF_RD and FPF_WR should have at least a 33 difference. Recommend value
 * is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75) 
 *

     ==============================================================
     FPA_FPF4_MARKS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <10:0>  FPF_RD   R/W       0x40        0        When the number of free-page-pointers in a             
                                                  queue drops below this value and there are                                     
                                                  free-page-pointers in DRAM, the FPA will                                       
                                                  read one page (32 pointers) from DRAM.	                                     
                                                 This maximum value for this field should be
                                                 FPA_FPF4_SIZE[FPF_SIZ]-34. The min number
                                                 for this would be 16.
 <21:11> FPF_WR   R/W       0xC4        0        When the number of free-page-pointers in a             
                                                  queue exceeds this value the FPA will write                                    
                                                  32-page-pointers of that queue to DRAM.	                                     
                                                 The MAX value for this field should be
 	                                         FPA_FPF4_SIZE[FPF_SIZ]-2.
 <63:22> NS       RAZ       NS          NS       Reserved				                
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_FPF5_MARKS = FPA's Queue 5 Free Page FIFO Read Write Marks
 *
 * The high and low watermark register that determines when we write and read free pages from L2C
 * for Queue 5. The value of FPF_RD and FPF_WR should have at least a 33 difference. Recommend value
 * is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75) 
 *

     ==============================================================
     FPA_FPF5_MARKS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <10:0>  FPF_RD   R/W       0x40        0        When the number of free-page-pointers in a             
                                                  queue drops below this value and there are                                 
                                                  free-page-pointers in DRAM, the FPA will                                   
                                                  read one page (32 pointers) from DRAM.	                                   
                                                 This maximum value for this field should be
                                                 FPA_FPF5_SIZE[FPF_SIZ]-34. The min number
                                                 for this would be 16.
 <21:11> FPF_WR   R/W       0xC4        0        When the number of free-page-pointers in a             
                                                  queue exceeds this value the FPA will write                                
                                                  32-page-pointers of that queue to DRAM.	                                   
                                                 The MAX value for this field should be
 	                                         FPA_FPF5_SIZE[FPF_SIZ]-2.
 <63:22> NS       RAZ       NS          NS       Reserved				                
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_FPF6_MARKS = FPA's Queue 6 Free Page FIFO Read Write Marks
 *
 * The high and low watermark register that determines when we write and read free pages from L2C
 * for Queue 6. The value of FPF_RD and FPF_WR should have at least a 33 difference. Recommend value
 * is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75) 
 *

     ==============================================================
     FPA_FPF6_MARKS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <10:0>   FPF_RD   R/W      0x40        0        When the number of free-page-pointers in a             
                                                  queue drops below this value and there are                                         
                                                  free-page-pointers in DRAM, the FPA will	                                         
                                                  read one page (32 pointers) from DRAM.	                                            
                                                 This maximum value for this field should be
                                                 FPA_FPF6_SIZE[FPF_SIZ]-34. The min number
                                                 for this would be 16.
 <21:11>  FPF_WR   R/W      0xC4        0        When the number of free-page-pointers in a             
                                                  queue exceeds this value the FPA will write                                        
                                                  32-page-pointers of that queue to DRAM.	                                         
                                                 The MAX value for this field should be
 	                                         FPA_FPF6_SIZE[FPF_SIZ]-2.
 <63:22>  NS       RAZ      NS          NS       Reserved				                
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_FPF7_MARKS = FPA's Queue 7 Free Page FIFO Read Write Marks
 *
 * The high and low watermark register that determines when we write and read free pages from L2C
 * for Queue 7. The value of FPF_RD and FPF_WR should have at least a 33 difference. Recommend value
 * is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75) 
 *

     ==============================================================
     FPA_FPF7_MARKS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <10:0>  FPF_RD    R/W     0x40        0         When the number of free-page-pointers in a             
                                                  queue drops below this value and there are        	                                
                                                  free-page-pointers in DRAM, the FPA will          	                                
                                                  read one page (32 pointers) from DRAM.	                                        
                                                 This maximum value for this field should be
                                                 FPA_FPF7_SIZE[FPF_SIZ]-34. The min number
                                                 for this would be 16.
 <21:11> FPF_WR    R/W     0xC4        0         When the number of free-page-pointers in a             
                                                  queue exceeds this value the FPA will write       	                                
                                                  32-page-pointers of that queue to DRAM.	                                        
                                                 The MAX value for this field should be
 	                                         FPA_FPF7_SIZE[FPF_SIZ]-2.
 <63:22> NS        RAZ      NS         NS        Reserved					        
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_INT_SUM = FPA's Interrupt Summary Register
 *
 * Contains the different interrupt summary bits of the FPA.
 *

     ==============================================================
     FPA_INT_SUM Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     FED0_SBE R/W1C     0           0        Set when a Single Bit Error is detected in FPF0.       
 <1>     FED0_DBE R/W1C     0           0        Set when a Double Bit Error is detected in FPF0.       
 <2>     FED1_SBE R/W1C     0           0        Set when a Single Bit Error is detected in FPF1.       
 <3>     FED1_DBE R/W1C     0           0        Set when a Double Bit Error is detected in FPF1.       
 <4>     Q0_UND   R/W1C     0           0        Set when a Queue0 page count available goes            
                                                 negative.
						 PASS2 Field.
 <5>     Q0_COFF  R/W1C     0           0        Set when a Queue0 stack end tag is present and         
                                                 the count available is greater than pointers
                                                 present in the FPA.
						 PASS2 Field.
 <6>     Q0_PERR  R/W1C     0           0        Set when a Queue0 pointer read from the stack in       
                                                 the L2C does not have the FPA owner ship bit set.
						 PASS2 Field.
 <7>     Q1_UND   R/W1C     0           0        Set when a Queue0 page count available goes            
                                                 negative.
						 PASS2 Field.
 <8>     Q1_COFF  R/W1C     0           0        Set when a Queue0 stack end tag is present and         
                                                 the count available is greater than pointers
                                                 present in the FPA.
						 PASS2 Field.
 <9>     Q1_PERR  R/W1C     0           0        Set when a Queue0 pointer read from the stack in       
                                                 the L2C does not have the FPA owner ship bit set.
						 PASS2 Field.
 <10>    Q2_UND   R/W1C     0           0        Set when a Queue0 page count available goes            
                                                 negative.
						 PASS2 Field.
 <11>    Q2_COFF  R/W1C     0           0        Set when a Queue0 stack end tag is present and         
                                                 the count available is greater than than pointers
                                                 present in the FPA.
						 PASS2 Field.
 <12>    Q2_PERR  R/W1C     0           0        Set when a Queue0 pointer read from the stack in       
                                                 the L2C does not have the FPA owner ship bit set.
						 PASS2 Field.
 <13>    Q3_UND   R/W1C     0           0        Set when a Queue0 page count available goes            
                                                 negative.
						 PASS2 Field.
 <14>    Q3_COFF  R/W1C     0           0        Set when a Queue0 stack end tag is present and         
                                                 the count available is greater than than pointers
                                                 present in the FPA.
						 PASS2 Field.
 <15>    Q3_PERR  R/W1C     0           0        Set when a Queue0 pointer read from the stack in       
                                                 the L2C does not have the FPA owner ship bit set.
						 PASS2 Field.
 <16>    Q4_UND   R/W1C     0           0        Set when a Queue0 page count available goes            
                                                 negative.
						 PASS2 Field.
 <17>    Q4_COFF  R/W1C     0           0        Set when a Queue0 stack end tag is present and         
                                                 the count available is greater than than pointers
                                                 present in the FPA.
						 PASS2 Field.
 <18>    Q4_PERR  R/W1C     0           0        Set when a Queue0 pointer read from the stack in       
                                                 the L2C does not have the FPA owner ship bit set.
						 PASS2 Field.
 <19>    Q5_UND   R/W1C     0           0        Set when a Queue0 page count available goes            
                                                 negative.
						 PASS2 Field.
 <20>    Q5_COFF  R/W1C     0           0        Set when a Queue0 stack end tag is present and         
                                                 the count available is greater than than pointers
                                                 present in the FPA.
						 PASS2 Field.
 <21>    Q5_PERR  R/W1C     0           0        Set when a Queue0 pointer read from the stack in       
                                                 the L2C does not have the FPA owner ship bit set.
						 PASS2 Field.
 <22>    Q6_UND   R/W1C     0           0        Set when a Queue0 page count available goes            
                                                 negative.
						 PASS2 Field.
 <23>    Q6_COFF  R/W1C     0           0        Set when a Queue0 stack end tag is present and         
                                                 the count available is greater than than pointers
                                                 present in the FPA.
						 PASS2 Field.
 <24>    Q6_PERR  R/W1C     0           0        Set when a Queue0 pointer read from the stack in       
                                                 the L2C does not have the FPA owner ship bit set.
						 PASS2 Field.
 <25>    Q7_UND   R/W1C     0           0        Set when a Queue0 page count available goes            
                                                 negative.
						 PASS2 Field.
 <26>    Q7_COFF  R/W1C     0           0        Set when a Queue0 stack end tag is present and         
                                                 the count available is greater than than pointers
                                                 present in the FPA.
						 PASS2 Field.
 <27>    Q7_PERR  R/W1C     0           0        Set when a Queue0 pointer read from the stack in       
                                                 the L2C does not have the FPA owner ship bit set.
						 PASS2 Field.
 <63:28> NS       RAZ       NS          NS       Reserved		                                
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_INT_ENB = FPA's Interrupt Enable
 *
 * The FPA's interrupt enable register.
 *

     ==============================================================
     FPA_INT_ENB Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     FED0_SBE R/W      0           0         When set (1) and bit 0 of the FPA_INT_SUM              
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.				                                            
 <1>     FED0_DBE R/W      0           0         When set (1) and bit 1 of the FPA_INT_SUM              
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.				                                            
 <2>     FED1_SBE R/W      0           0         When set (1) and bit 2 of the FPA_INT_SUM              
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.				                                            
 <3>     FED1_DBE R/W      0           0         When set (1) and bit 3 of the FPA_INT_SUM              
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.				                                            

 <4>     Q0_UND   R/W      0           0         When set (1) and bit 4 of the FPA_INT_SUM              
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.				                                            
 <5>     Q0_COFF  R/W      0           0         When set (1) and bit 5 of the FPA_INT_SUM              
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.				                                            
 <6>     Q0_PERR  R/W      0           0         When set (1) and bit 6 of the FPA_INT_SUM              
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.				                                            
 <7>     Q1_UND   R/W      0           0         When set (1) and bit 7 of the FPA_INT_SUM              
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.				                                            
 <8>     Q1_COFF  R/W      0           0         When set (1) and bit 8 of the FPA_INT_SUM              
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.				                                            
 <9>     Q1_PERR  R/W      0           0         When set (1) and bit 9 of the FPA_INT_SUM              
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.				                                            
 <10>    Q2_UND   R/W      0           0         When set (1) and bit 10 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.				                                            
 <11>    Q2_COFF  R/W      0           0         When set (1) and bit 11 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.				                                            
 <12>    Q2_PERR  R/W      0           0         When set (1) and bit 12 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.				                                            
 <13>    Q3_UND   R/W      0           0         When set (1) and bit 13 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.				                                            
 <14>    Q3_COFF  R/W      0           0         When set (1) and bit 14 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.				                                            
 <15>    Q3_PERR  R/W      0           0         When set (1) and bit 15 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.				                                            
 <16>    Q4_UND   R/W      0           0         When set (1) and bit 16 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.				                                            
 <17>    Q4_COFF  R/W      0           0         When set (1) and bit 17 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.				                                            
 <18>    Q4_PERR  R/W      0           0         When set (1) and bit 18 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.				                                            
 <19>    Q5_UND   R/W      0           0         When set (1) and bit 19 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.				                                            
 <20>    Q5_COFF  R/W      0           0         When set (1) and bit 20 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.				                                            
 <21>    Q5_PERR  R/W      0           0         When set (1) and bit 21 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.				                                            
 <22>    Q6_UND   R/W      0           0         When set (1) and bit 22 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.				                                            
 <23>    Q6_COFF  R/W      0           0         When set (1) and bit 23 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.				                                            
 <24>    Q6_PERR  R/W      0           0         When set (1) and bit 24 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.				                                            
 <25>    Q7_UND   R/W      0           0         When set (1) and bit 25 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.				                                            
 <26>    Q7_COFF  R/W      0           0         When set (1) and bit 26 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.				                                            
 <27>    Q7_PERR  R/W      0           0         When set (1) and bit 27 of the FPA_INT_SUM             
                                                 register is asserted the FPA will assert an                                        
                                                 interrupt.				                                            
 <63:28> NS       RAZ      NS          NS        Reserved				                
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_CTL_STATUS = FPA's Control/Status Register
 *
 * The FPA's interrupt enable register.
 *

     ==============================================================
     FPA_CTL_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <6:0>   MEM0_ERR R/W      0           0         Causes a flip of the ECC bit associated 38:32          
                                                 respective to bit 6:0 of this field, for FPF          	                                     
                                                 FIFO 0.					                                             
 <13:7>  MEM1_ERR R/W      0           0         Causes a flip of the ECC bit associated 38:32          
                                                 respective to bit 6:0 of this field, for FPF          	                                     
                                                 FIFO 1.					                                             
 <14>    ENB      R/W      0           0         Must be set to 1 AFTER writing all config registers    
                                                 and 10 cycles have past. If any of the config
                                                 register are written after writing this bit the
                                                 FPA may begin to operate incorrectly.
 <15>    USE_STT  R/W      0           0         When clear '0' the FPA will use STT to store           
                                                 pointers to the L2C. This is a PASS-2 field.
 <16>    USE_LDT  R/W      0           0         When clear '0' the FPA will use LDT to load            
                                                 pointers from the L2C. This is a PASS-2 field.
 <17>    RESET    R/W      0           0         When set causes a reset of the FPA with the            
                                                 exception of the RSL. This is a PASS-2 field.
 <63:18> NS       RAZ      NS          NS        Reserved					        
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_FPF0_SIZE = FPA's Queue 0 Free Page FIFO Size
 *
 * The number of page pointers that will be kept local to the FPA for this Queue. FPA Queues are
 * assigned in order from Queue 0 to Queue 7, though only Queue 0 through Queue x can be used.
 * The sum of the 8 (0-7) FPA_FPF#_SIZE registers must be limited to 2048.
 *

     ==============================================================
     FPA_FPF0_SIZE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  FPF_SIZ  R/W      0x100       0         The number of entries assigned in the FPA FIFO         
                                                 (used to hold page-pointers) for this Queue.	         	                                  
                                                 The value of this register must divisable by 2,	                                          
                                                 and the FPA will ignore bit [0] of this register.         	                                  
                                                 The total of the FPF_SIZ field of the 8 (0-7) 	         	                                  
                                                 FPA_FPF#_SIZE registers must not exceed 2048. 	                                          
                                                 After writing this field the FPA will need 10  	                                          
                                                 core clock cycles to be ready for operation. The          	                                  
                                                 assignment of location in the FPA FIFO must 	         	                                  
                                                 start with Queue 0, then 1, 2, etc.
                                                 The number of useable entries will be FPF_SIZ-2.
  <63:12> NS       RAZ      NS          NS        Reserved						
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_FPF@_SIZE = FPA's Queue 1-7 Free Page FIFO Size
 *
 * The number of page pointers that will be kept local to the FPA for this Queue. FPA Queues are
 * assigned in order from Queue 0 to Queue 7, though only Queue 0 through Queue x can be used.
 * The sum of the 8 (0-7) FPA_FPF#_SIZE registers must be limited to 2048.
 *

     ==============================================================
     FPA_FPF(1..7)_SIZE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <10:0>  FPF_SIZ  R/W      0x100       0         The number of entries assigned in the FPA FIFO         
                                                 (used to hold page-pointers) for this Queue.	       	                                     
                                                 The value of this register must divisable by 2,	                                     
                                                 and the FPA will ignore bit [0] of this register.                                           
                                                 The total of the FPF_SIZ field of the 8 (0-7) 	       	                                     
                                                 FPA_FPF#_SIZE registers must not exceed 2048. 	                                     
                                                 After writing this field the FPA will need 10  	                                     
                                                 core clock cycles to be ready for operation. The                                            
                                                 assignment of location in the FPA FIFO must 	       	                                     
                                                 start with Queue 0, then 1, 2, etc.		       	                                     
                                                 The number of useable entries will be FPF_SIZ-2.
 <63:11> NS       RAZ      NS          NS        Reserved						
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE@_PAGES_AVAILABLE = FPA's Queue 0-7 Free Page Available Register
 *
 * The number of page pointers that are available in the FPA and local DRAM.
 *

     ==============================================================
     FPA_QUE(0..7)_AVAILABLE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <28:0>  QUE_SIZ  RO       0x0         0         The number of free pages available in this Queue.      
                                                 In PASS-1 this field was [25:0].
 <63:29> NS       RAZ      NS          NS        Reserved						
----------------------------------------------------------------------------------------------------
===


 *
 *                  FPA_BIST_STATUS = BIST Status of FPA Memories
 *
 * The result of the BIST run on the FPA memories.
 *

     ==============================================================
     FPA_BIST_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     FDR      RO       0x0         0         fpa_fdr  memory bist status.                           
 <1>     FFR      RO       0x0         0         fpa_ffr  memory bist status.                           
 <2>     FPF1     RO       0x0         0         fpa_fpf1 memory bist status.                           
 <3>     FPF0     RO       0x0         0         fpa_fpf0 memory bist status.                           
 <4>     FRD      RO       0x0         0         fpa_frd  memory bist status.                           
 <63:5>  NS       RAZ      NS          NS        Reserved				 		
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE0_PAGE_INDEX = FPA's Queue0 Page Index
 *
 * The present index page for queue 0 of the FPA, this is a PASS-2 register.
 * This number reflects the number of pages of pointers that have been written to memory
 * for this queue.
 *

     ==============================================================
     FPA_QUE0_PAGE_INDEX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <24:0>  PG_NUM   RO       0x0         NS        Page number.                                           
 <63:25> NS       RAZ      NS          NS        Reserved						
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE1_PAGE_INDEX = FPA's Queue1 Page Index
 *
 * The present index page for queue 1 of the FPA, this is a PASS-2 register.
 * This number reflects the number of pages of pointers that have been written to memory
 * for this queue.
 *

     ==============================================================
     FPA_QUE1_PAGE_INDEX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <24:0>  PG_NUM   RO       0x0         NS        Page number.                                           
 <63:25> NS       RAZ      NS          NS        Reserved						
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE2_PAGE_INDEX = FPA's Queue2 Page Index
 *
 * The present index page for queue 2 of the FPA, this is a PASS-2 register.
 * This number reflects the number of pages of pointers that have been written to memory
 * for this queue.
 *

     ==============================================================
     FPA_QUE2_PAGE_INDEX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <24:0>  PG_NUM   RO       0x0         NS        Page number.                                           
 <63:25> NS       RAZ      NS          NS        Reserved						
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE3_PAGE_INDEX = FPA's Queue3 Page Index
 *
 * The present index page for queue 3 of the FPA, this is a PASS-2 register.
 * This number reflects the number of pages of pointers that have been written to memory
 * for this queue.
 *

     ==============================================================
     FPA_QUE3_PAGE_INDEX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <24:0>  PG_NUM   RO       0x0         NS        Page number.                                           
 <63:25> NS       RAZ      NS          NS        Reserved						
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE4_PAGE_INDEX = FPA's Queue4 Page Index
 *
 * The present index page for queue 4 of the FPA, this is a PASS-2 register.
 * This number reflects the number of pages of pointers that have been written to memory
 * for this queue.
 *

     ==============================================================
     FPA_QUE4_PAGE_INDEX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <24:0>  PG_NUM   RO       0x0         NS        Page number.                                           
 <63:25> NS       RAZ      NS          NS        Reserved						
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE5_PAGE_INDEX = FPA's Queue5 Page Index
 *
 * The present index page for queue 5 of the FPA, this is a PASS-2 register.
 * This number reflects the number of pages of pointers that have been written to memory
 * for this queue.
 *

     ==============================================================
     FPA_QUE5_PAGE_INDEX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <24:0>  PG_NUM   RO       0x0         NS        Page number.                                           
 <63:25> NS       RAZ      NS          NS        Reserved						
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE6_PAGE_INDEX = FPA's Queue6 Page Index
 *
 * The present index page for queue 6 of the FPA, this is a PASS-2 register.
 * This number reflects the number of pages of pointers that have been written to memory
 * for this queue.
 *

     ==============================================================
     FPA_QUE6_PAGE_INDEX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <24:0>  PG_NUM   RO       0x0         NS        Page number.                                           
 <63:25> NS       RAZ      NS          NS        Reserved						
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE7_PAGE_INDEX = FPA's Queue7 Page Index
 *
 * The present index page for queue 7 of the FPA, this is a PASS-2 register.
 * This number reflects the number of pages of pointers that have been written to memory
 * for this queue.
 *

     ==============================================================
     FPA_QUE7_PAGE_INDEX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <24:0>  PG_NUM   RO       0x0         NS        Page number.                                           
 <63:25> NS       RAZ      NS          NS        Reserved						
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE_EXP = FPA's Queue# Expected Page Index
 *
 * When a INT_SUM[PERR#] occurs this will be latched with the expected value. PASS-2 register.
 * This is latched on the first error and will not latch again unitl all errors are cleared.
 *

     ==============================================================
     FPA_QUE_EXP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <25:0>  EXP_INDX RO       0x0         NS        Expected page number read from memory.                 
 <28:26> EXP_QUE  RO       0x0         NS        Expected fpa-queue-number read from memory.            
 <31:29> NS       RO       0x0         0x7       Resered.                                               
 <63:32> NS       RAZ      NS          NS        Reserved						
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA_QUE_ACT = FPA's Queue# Actual Page Index
 *
 * When a INT_SUM[PERR#] occurs this will be latched with the value read from L2C. PASS-2 register.
 * This is latched on the first error and will not latch again unitl all errors are cleared.
 *

     ==============================================================
     FPA_QUE_ACT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <25:0>  ACT_INDX RO       0x0         NS        Page number read from memory.                          
 <28:26> ACT_QUE  RO       0x0         NS        FPA-queue-number read from memory.                     
 <31:29> NS       RO       0x0         0x7       Resered.                                               
 <63:32> NS       RAZ      NS          NS        Reserved						
----------------------------------------------------------------------------------------------------
===



 *
 * GMX_RX_INT_REG = Interrupt Register
 *

     ==============================================================
     GMX(0)_RX(0..3)_INT_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:29> NS        RAZ     NS          NS        Reserved				            |   
 <28>    HG2CC     R/W1C   0x0         0         HiGig2 received message CRC or Control char  error |   
                                                   Set when either CRC8 error detected or when      |
						   a Control Character is found in the message      |
						   bytes after the K.SOM                            |
						   NOTE: HG2CC has higher priority than HG2FLD      |
						         i.e. a HiGig2 message that results in HG2CC|
							 getting set, will never set HG2FLD.        |
 <27>    HG2FLD    R/W1C   0x0         0         HiGig2 received message field error, as below      |   
                                                   1) MSG_TYPE field not 6'b00_0000                 |
						      i.e. it is not a FLOW CONTROL message, which  |
						      is the only defined type for HiGig2           |
                                                   2) FWD_TYPE field not 2'b00 i.e. Link Level msg  |
						      which is the only defined type for HiGig2     |
                                                   3) FC_OBJECT field is neither 4'b0000 for        |
						      Physical Link nor 4'b0010 for Logical Link.   |
						      Those are the only two defined types in HiGig2|
 <26>	 UNDAT	   R/W1C   0x0	       0	 Unexpected Data				    |	
 						  (XAUI Mode only)				    |
 <25>	 UNEOP	   R/W1C   0x0	       0	 Unexpected EOP					    |	
 						  (XAUI Mode only)				    |
 <24>	 UNSOP	   R/W1C   0x0	       0	 Unexpected SOP					    |	
 						  (XAUI Mode only)				    |
 <23>    BAD_TERM  R/W1C   0x0	       0	 Frame is terminated by control character other	    |	
						  than /T/.  The error propagation control	    |
						  character /E/ will be included as part of the	    |
						  frame and does not cause a frame termination.	    |
 						  (XAUI Mode only)				    |
 <22>    BAD_SEQ   R/W1C   0x0         0         Reserved Sequence Deteted			    |	
 						  (XAUI Mode only)				    |
 <21>    REM_FAULT R/W1C   0x0         0         Remote Fault Sequence Deteted			    |	
 						  (XAUI Mode only)				    |
 <20>    LOC_FAULT R/W1C   0x0         0         Local Fault Sequence Deteted			    |	
 						  (XAUI Mode only)				    |
 <19>    PAUSE_DRP R/W1C   0x0         0         Pause packet was dropped due to full GMX RX FIFO   |	
 <18:16> NS        RAZ     NS          NS        Reserved				            |   
 <15>    IFGERR    R/W1C   0x0         0         Interframe Gap Violation			    |	
						  Does not necessarily indicate a failure	    |
						  (SGMII/1000Base-X only)			    |
 <14>    COLDET    R/W1C   0x0         0         Collision Detection				    |	
						  (SGMII/1000Base-X half-duplex only)		    |
 <13>    FALERR    R/W1C   0x0         0         False carrier error or extend error after slottime |	
						  (SGMII/1000Base-X only)			    |
 <12>    RSVERR    R/W1C   0x0         0         Reserved opcodes				    |	
 <11>    PCTERR    R/W1C   0x0         0         Bad Preamble / Protocol			    |	
						  In XAUI mode, the column of data that was bad	    |
						  will be logged in GMX_RX_XAUI_BAD_COL		    |
 <10>    OVRERR    R/W1C   0x0         0         Internal Data Aggregation Overflow		    |	
						  This interrupt should never assert		    |
						  (SGMII/1000Base-X only)			    |
 <9>     NS        RAZ     NS          NS        Reserved				            |   
 <8>     SKPERR    R/W1C   0x0         0         Skipper error					    |	
 <7>     RCVERR    R/W1C   0x0         0         Frame was received with Data reception error	    |	
 <6:5>   NS        RAZ     NS          NS        Reserved				            |   
 <4>     FCSERR    R/W1C   0x0         0         Frame was received with FCS/CRC error		    |	
 <3>     JABBER    R/W1C   0x0         0         Frame was received with length > sys_length	    |	
 <2>     NS        RAZ     NS          NS        Reserved				            |   
 <1>     CAREXT    R/W1C   0x0         0         Carrier extend error				    |	
						  (SGMII/1000Base-X only)			    |
 <0>     MINERR    R/W1C   0x0         NS        Pause Frame was received with length<minFrameSize  |   
						  Frame length checks are typically handled in PIP  |
						  (PIP_INT_REG[MINERR]), but pause frames are	    |
						  normally discarded before being inspected by PIP. |

Notes:

(1) exceptions will only be raised to the control processor if the
    corresponding bit in the GMX_RX_INT_EN register is set.

(2) exception conditions 10:0 can also set the rcv/opcode in the received
    packet's workQ entry.  The GMX_RX_FRM_CHK register provides a bit mask
    for configuring which conditions set the error.

(3) in half duplex operation, the expectation is that collisions will appear
    as either MINERR o r CAREXT errors.

(4) JABBER - An RX Jabber error indicates that a packet was received which
	     is longer than the maximum allowed packet as defined by the
	     system.  GMX will truncate the packet at the JABBER count.
	     Failure to do so could lead to system instabilty.

(5) NIBERR - This error is illegal at 1000Mbs speeds
             (GMX_RX_PRT_CFG[SPEED]==0) and will never assert.
 
(6) MAXERR - for untagged frames, the total frame DA+SA+TL+DATA+PAD+FCS >
             GMX_RX_FRM_MAX.  For tagged frames, DA+SA+VLAN+TL+DATA+PAD+FCS
             > GMX_RX_FRM_MAX + 4*VLAN_VAL + 4*VLAN_STACKED.

(7) MINERR - total frame DA+SA+TL+DATA+PAD+FCS < 64

(8) ALNERR - Indicates that the packet received was not an integer number of
	     bytes.  If FCS checking is enabled, ALNERR will only assert if
	     the FCS is bad.  If FCS checking is disabled, ALNERR will
	     assert in all non-integer frame cases.

(9) Collisions - Collisions can only occur in half-duplex mode.  A collision
	         is assumed by the receiver when the slottime
	         (GMX_PRT_CFG[SLOTTIME]) is not satisfied.  In 10/100 mode,
	         this will result in a frame < SLOTTIME.  In 1000 mode, it
	         could result either in frame < SLOTTIME or a carrier extend
	         error with the SLOTTIME.  These conditions are visible by...

		 . transfer ended before slottime - COLDET
		 . carrier extend error           - CAREXT 

(A) LENERR - Length errors occur when the received packet does not match the
	     length field.  LENERR is only checked for packets between 64
	     and 1500 bytes.  For untagged frames, the length must exact
	     match.  For tagged frames the length or length+4 must match.

(B) PCTERR - checks that the frame begins with a valid PREAMBLE sequence.
             Does not check the number of PREAMBLE cycles.

(C) OVRERR - Not to be included in the HRM

	     OVRERR is an architectural assertion check internal to GMX to
	     make sure no assumption was violated.  In a correctly operating
	     system, this interrupt can never fire.

	     GMX has an internal arbiter which selects which of 4 ports to
	     buffer in the main RX FIFO.  If we normally buffer 8 bytes,
	     then each port will typically push a tick every 8 cycles - if
	     the packet interface is going as fast as possible.  If there
	     are four ports, they push every two cycles.  So that's the
	     assumption.  That the inbound module will always be able to
	     consume the tick before another is produced.  If that doesn't
	     happen - that's when OVRERR will assert.

(D) In XAUI mode prt0 is used for interrupt logging.
----------------------------------------------------------------------------------------------------
===

 * 
 * GMX_RX_INT_EN = Interrupt Enable
 *

     ==============================================================
     GMX(0)_RX(0..3)_INT_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:29> NS        RAZ     NS          NS        Reserved				            |   
 <28>    HG2CC     R/W     0x0	       0	 HiGig2 CRC8 or Control char error interrupt enable |	
 <27>    HG2FLD    R/W     0x0	       0	 HiGig2 Bad field error interrupt enable            |	
 <26>	 UNDAT	   R/W     0x0	       0	 Unexpected Data				    |	
 						  (XAUI Mode only)				    |
 <25>	 UNEOP	   R/W     0x0	       0	 Unexpected EOP					    |	
 						  (XAUI Mode only)				    |
 <24>	 UNSOP	   R/W     0x0	       0	 Unexpected SOP					    |	
 						  (XAUI Mode only)				    |
 <23>    BAD_TERM  R/W     0x0	       0	 Frame is terminated by control character other	    |	
						  than /T/.  The error propagation control	    |
						  character /E/ will be included as part of the	    |
						  frame and does not cause a frame termination.	    |
 						  (XAUI Mode only)				    |
 <22>    BAD_SEQ   R/W     0x0         0         Reserved Sequence Deteted			    |	
 						  (XAUI Mode only)				    |
 <21>    REM_FAULT R/W     0x0         0         Remote Fault Sequence Deteted			    |	
 						  (XAUI Mode only)				    |
 <20>    LOC_FAULT R/W     0x0         0         Local Fault Sequence Deteted			    |	
 						  (XAUI Mode only)				    |
 <19>    PAUSE_DRP R/W     0x0         0         Pause packet was dropped due to full GMX RX FIFO   |	
 <18:16> NS        RAZ     NS          NS        Reserved				            |   
 <15>    IFGERR    R/W      0x0         0         Interframe Gap Violation			    |	
						  (SGMII/1000Base-X only)			    |
 <14>    COLDET    R/W      0x0         0         Collision Detection				    |	
						  (SGMII/1000Base-X half-duplex only)		    |
 <13>    FALERR    R/W      0x0         0         False carrier error or extend error after slottime |	
						  (SGMII/1000Base-X only)			    |
 <12>    RSVERR    R/W      0x0         0         Reserved opcodes				    |	
 <11>    PCTERR    R/W      0x0         0         Bad Preamble / Protocol			    |	
 <10>    OVRERR    R/W      0x0         0         Internal Data Aggregation Overflow		    |	
						  (SGMII/1000Base-X only)			    |
 <9>     NS        RAZ     NS          NS        Reserved				            |   
 <8>     SKPERR    R/W      0x0         0         Skipper error					    |	
 <7>     RCVERR    R/W      0x0         0         Frame was received with Data reception error	    |	
 <6:5>   NS        RAZ      NS          NS        Reserved				            |   
 <4>     FCSERR    R/W      0x0         0         Frame was received with FCS/CRC error		    |	
 <3>     JABBER    R/W      0x0         0         Frame was received with length > sys_length	    |	
 <2>     NS        RAZ      NS          NS        Reserved				            |   
 <1>     CAREXT    R/W      0x0         0         Carrier extend error				    |	
						  (SGMII/1000Base-X only)			    |
 <0>     MINERR    R/W      0x0         0         Pause Frame was received with length<minFrameSize  |   

Notes:
In XAUI mode prt0 is used for checking.
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_PRT_CFG = Port description
 *

     ==============================================================
     GMX(0)_PRT(0..3)_CFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:14> NS       RAZ      NS          NS        Reserved				            |   
 <13>   TX_IDLE	  RO       0x1         NS        TX Machine is idle				    |	
 <12>   RX_IDLE	  RO       0x1         NS        RX Machine is idle				    |	
 <11:9> NS        RAZ      NS          NS        Reserved				            |   
 <8>    SPEED_MSB R/W      0x0         NS        Link Speed MSB [SPEED_MSB:SPEED]		    |   
						  10 = 10Mbs operation				    |
						  00 = 100Mbs operation				    |
						  01 = 1000Mbs operation			    |
						  11 = Reserved					    |
						  (SGMII/1000Base-X only)			    |
 <7:4>  NS        RAZ      NS          NS        Reserved				            |   
 <3>    SLOTTIME  R/W      0x1         NS	 Slot Time for Half-Duplex operation		    |   
						  0 = 512 bitimes (10/100Mbs operation)		    |
						  1 = 4096 bitimes (1000Mbs operation)		    |
						  (SGMII/1000Base-X only)			    |
 <2>    DUPLEX    R/W      0x1         NS        Duplex    					    |   
						  0 = Half Duplex (collisions/extentions/bursts)    |
						  1 = Full Duplex				    |
						  (SGMII/1000Base-X only)			    |
 <1>    SPEED     R/W      0x1         NS        Link Speed LSB [SPEED_MSB:SPEED]		    |   
						  10 = 10Mbs operation				    |
						  00 = 100Mbs operation				    |
						  01 = 1000Mbs operation			    |
						  11 = Reserved					    |
						  (SGMII/1000Base-X only)			    |
 <0>    EN        R/W      0x0         NS        Link Enable                                        |   
						  When EN is clear, packets will not be received    |
						  or transmitted (including PAUSE and JAM packets). |
						  If EN is cleared while a packet is currently	    |
						  being received or transmitted, the packet will    |
						  be allowed to complete before the bus is idled.   |
						  On the RX side, subsequent packets in a burst	    |
						  will be ignored.				    |
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_FRM_CTL = Frame Control
 *

     ==============================================================
     GMX(0)_RX(0..3)_FRM_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:13> NS       RAZ      NS          NS        Reserved				            |   
 <12>    PTP_MODE R/W      0x0         0         Timestamp mode					    |   
						  When PTP_MODE is set, a 64-bit timestamp will be  |
						  prepended to every incoming packet. The timestamp |
						  bytes are added to the packet in such a way as to |
						  not modify the packet's receive byte count.  This |
						  implies that the GMX_RX_JABBER, MINERR,	    |
						  GMX_RX_DECISION, GMX_RX_UDD_SKP, and the	    |
						  GMX_RX_STATS_* do not require any adjustment as   |
						  they operate on the received packet size.	    |
						  When the packet reaches PKI, its size will	    |
						  reflect the additional bytes and is subject to    |
						  the restrictions below.			    |						  
						  If PTP_MODE=1 and PRE_CHK=1, PRE_STRP must be 1.  |
						  If PTP_MODE=1,				    |
						   PIP_PRT_CFGx[SKIP] should be increased by 8.	    |
						   PIP_PRT_CFGx[HIGIG_EN] should be 0.	  	    |
						   PIP_FRM_CHKx[MAXLEN] should be increased by 8.   |
						   PIP_FRM_CHKx[MINLEN] should be increased by 8.   |
						   PIP_TAG_INCx[EN] should be adjusted.		    |
 <11>    NS       RAZ      NS          NS        Reserved				            |   
 <10>    NULL_DIS R/W      0x0         0         When set, do not modify the MOD bits on NULL ticks |	
						  due to PARITAL packets			    |
 <9>     PRE_ALIGN R/W	   0x0	       0	 When set, PREAMBLE parser aligns the the SFD byte  |	
						  regardless of the number of previous PREAMBLE	    |
						  nibbles.  In this mode, PRE_STRP should be set to |
						  account for the variable nature of the PREAMBLE.  |
 						  PRE_CHK must be set to enable this and all	    |
 						  PREAMBLE features.				    |
						  (SGMII at 10/100Mbs only)			    |
 <8>     NS       RAZ      NS          NS        Reserved				            |   
 <7>     NS       RAZ      NS          NS        Reserved				            |   
 <6>     PRE_FREE RO	   0x1	       1	 When set, PREAMBLE checking is  less strict.	    |	
						  GMX will begin the frame at the first SFD.	    |
 						  PRE_CHK must be set to enable this and all	    |
 						  PREAMBLE features.				    |
						  (SGMII/1000Base-X only)			    |
 <5>	 CTL_SMAC R/W      0x0         0         Control Pause Frames can match station SMAC	    |	
 <4>     CTL_MCST R/W      0x1         1         Control Pause Frames can match globally assign	    |	
						  Multicast address				    |
 <3>     CTL_BCK  R/W      0x1         1	 Forward pause information to TX block		    |   
 <2>	 CTL_DRP  R/W      0x1         1	 Drop Control Pause Frames			    |   
 <1>     PRE_STRP R/W      0x1         1         Strip off the preamble (when present)		    |   
                                                  0=PREAMBLE+SFD is sent to core as part of frame   |
                                                  1=PREAMBLE+SFD is dropped			    |
 						  PRE_CHK must be set to enable this and all	    |
 						  PREAMBLE features.				    |
						  If PTP_MODE=1 and PRE_CHK=1, PRE_STRP must be 1.  |
 <0>     PRE_CHK  R/W      0x1         1         This port is configured to send a valid 802.3	    |   
						  PREAMBLE to begin every frame. GMX checks that a  |
						  valid PREAMBLE is received (based on PRE_FREE).   |
						  When a problem does occur within the PREAMBLE	    |
						  seqeunce, the frame is marked as bad and not sent |
						  into the core.  The GMX_GMX_RX_INT_REG[PCTERR]    |
						  interrupt is also raised.			    |
						  When GMX_TX_XAUI_CTL[HG_EN] is set, PRE_CHK	    |
						  must be zero.					    |
						  If PTP_MODE=1 and PRE_CHK=1, PRE_STRP must be 1.  |

Notes:
* PRE_STRP
  When PRE_CHK is set (indicating that the PREAMBLE will be sent), PRE_STRP
  determines if the PREAMBLE+SFD bytes are thrown away or sent to the Octane
  core as part of the packet.

  In either mode, the PREAMBLE+SFD bytes are not counted toward the packet
  size when checking against the MIN and MAX bounds.  Furthermore, the bytes
  are skipped when locating the start of the L2 header for DMAC and Control
  frame recognition.

* CTL_BCK/CTL_DRP
  These bits control how the HW handles incoming PAUSE packets.  Here are
  the most common modes of operation:
    CTL_BCK=1,CTL_DRP=1   - HW does it all
    CTL_BCK=0,CTL_DRP=0   - SW sees all pause frames
    CTL_BCK=0,CTL_DRP=1   - all pause frames are completely ignored

  These control bits should be set to CTL_BCK=0,CTL_DRP=0 in halfdup mode.
  Since PAUSE packets only apply to fulldup operation, any PAUSE packet
  would constitute an exception which should be handled by the processing
  cores.  PAUSE packets should not be forwarded.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_FRM_CHK = Which frame errors will set the ERR bit of the frame
 *

     ==============================================================
     GMX(0)_RX(0..3)_FRM_CHK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:9>  NS       RAZ      NS          NS        Reserved				            |   
 <8>     SKPERR   R/W      0x1         1         Skipper error					    |	
 <7>     RCVERR   R/W      0x1         1         Frame was received with Data reception error	    |	
 <6:5>   NS       RAZ      NS          NS        Reserved				            |   
 <4>     FCSERR   R/W      0x1         1         Frame was received with FCS/CRC error		    |	
 <3>     JABBER   R/W      0x1         1         Frame was received with length > sys_length	    |	
 <2>     NS       RAZ      NS          NS        Reserved				            |   
 <1>     CAREXT   R/W      0x1         1         Carrier extend error				    |	
						  (SGMII/1000Base-X only)			    |
 <0>     MINERR   R/W      0x1         1         Pause Frame was received with length<minFrameSize  |   

Notes:
If GMX_RX_UDD_SKP[LEN] != 0, then LENERR will be forced to zero in HW.

In XAUI mode prt0 is used for checking.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_JABBER = The max size packet after which GMX will truncate
 *

     ==============================================================
     GMX(0)_RX(0..3)_JABBER Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |   
 <15:0>  CNT      R/W      0x2800      0x2800    Byte count for jabber check			    |   
  						  Failing packets set the JABBER interrupt and are  |
						  optionally sent with opcode==JABBER		    |
						  GMX will truncate the packet to CNT bytes	    |

Notes: 

  CNT must be 8-byte aligned such that CNT[2:0] == 0

  The packet that will be sent to the packet input logic will have an
  additionl 8 bytes if GMX_RX_FRM_CTL[PRE_CHK] is set and
  GMX_RX_FRM_CTL[PRE_STRP] is clear.  The max packet that will be sent is
  defined as...

       max_sized_packet = GMX_RX_JABBER[CNT]+((GMX_RX_FRM_CTL[PRE_CHK] & !GMX_RX_FRM_CTL[PRE_STRP])*8)

  In XAUI mode prt0 is used for checking.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_DECISION = The byte count to decide when to accept or filter a packet
 *

     ==============================================================
     GMX(0)_RX(0..3)_DECISION Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:5>  NS       RAZ      NS          NS        Reserved				            |   
 <4:0>   CNT      R/W      0x18        0x18      The byte count to decide when to accept or filter  |   
                                                   a packet.					    |

Notes:
As each byte in a packet is received by GMX, the L2 byte count is compared
against the GMX_RX_DECISION[CNT].  The L2 byte count is the number of bytes
from the beginning of the L2 header (DMAC).  In normal operation, the L2
header begins after the PREAMBLE+SFD (GMX_RX_FRM_CTL[PRE_CHK]=1) and any
optional UDD skip data (GMX_RX_UDD_SKP[LEN]).

When GMX_RX_FRM_CTL[PRE_CHK] is clear, PREAMBLE+SFD are prepended to the
packet and would require UDD skip length to account for them.

						L2 Size
Port Mode	      <GMX_RX_DECISION bytes (default=24)	>=GMX_RX_DECISION bytes (default=24)

Full Duplex           accept packet				apply filters
		      no filtering is applied			accept packet based on DMAC and PAUSE packet filters

Half Duplex           drop packet				apply filters
		      packet is unconditionally dropped		accept packet based on DMAC

where l2_size = MAX(0, total_packet_size - GMX_RX_UDD_SKP[LEN] - ((GMX_RX_FRM_CTL[PRE_CHK]==1)*8)
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_UDD_SKP = Amount of User-defined data before the start of the L2 data
 *

     ==============================================================
     GMX(0)_RX(0..3)_UDD_SKP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:9> NS        RAZ      NS          NS        Reserved				            |   
 <8>	FCSSEL    R/W      0x0         0         Include the skip bytes in the FCS calculation      |   
						  0 = all skip bytes are included in FCS            |
						  1 = the skip bytes are not included in FCS        |
						  When GMX_TX_XAUI_CTL[HG_EN] is set, FCSSEL must   |
						  be zero.					    |
 <7>	NS        RAZ      NS          NS        Reserved				            |   
 <6:0>  LEN	  R/W      0x0         0	 Amount of User-defined data before the start of    |   
						  the L2 data.  Zero means L2 comes first.          |
						  Max value is 64.				    |
                                                  When GMX_TX_XAUI_CTL[HG_EN] is set, LEN must be   |
                                                  set to 12 or 16 (depending on HiGig header size)  |
                                                  to account for the HiGig header. LEN=12 selects   |
                                                  HiGig/HiGig+, and LEN=16 selects HiGig2.          |
Notes:

(1) The skip bytes are part of the packet and will be sent down the NCB
    packet interface and will be handled by PKI.

(2) The system can determine if the UDD bytes are included in the FCS check
    by using the FCSSEL field - if the FCS check is enabled.

(3) Assume that the preamble/sfd is always at the start of the frame - even
    before UDD bytes.  In most cases, there will be no preamble in these
    cases since it will be packet interface in direct communication to
    another packet interface (MAC to MAC) without a PHY involved.

(4) We can still do address filtering and control packet filtering is the
    user desires.
 
(5) UDD_SKP must be 0 in half-duplex operation unless
    GMX_RX_FRM_CTL[PRE_CHK] is clear.  If GMX_RX_FRM_CTL[PRE_CHK] is clear,
    then UDD_SKP will normally be 8.

(6) In all cases, the UDD bytes will be sent down the packet interface as
    part of the packet.  The UDD bytes are never stripped from the actual
    packet.

(7) If LEN != 0, then GMX_RX_FRM_CHK[LENERR] will be disabled and GMX_RX_INT_REG[LENERR] will be zero
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_STATS_CTL = RX Stats Control register
 *

     ==============================================================
     GMX(0)_RX(0..3)_STATS_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1> NS        RAZ      NS          NS        Reserved				            |   
 <0>    RD_CLR	  R/W      0x0	       0	 RX Stats registers will clear on reads		    |   
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_IFG = RX Min IFG
 *

     ==============================================================
     GMX(0)_RX(0..3)_IFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS        RAZ      NS         NS        Reserved				            |   
 <3:0>   IFG	   R/W      0x8	       8	 Min IFG (in IFG*8 bits) between packets used to    |   
						  determine IFGERR. Normally IFG is 96 bits.	    | 
						  Note in some operating modes, IFG cycles can be   |
						  inserted or removed in order to achieve clock rate|
						  adaptation. For these reasons, the default value  |
						  is slightly conservative and does not check upto  |
						  the full 96 bits of IFG.			    |
						  (SGMII/1000Base-X only)			    |						  
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_PAUSE_DROP_TIME = The TIME field in a PAUSE Packet which was dropped due to GMX RX FIFO full condition
 *

     ==============================================================
     GMX(0)_RX(0..3)_PAUSE_DROP_TIME Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16>  NS        RAZ     NS          NS        Reserved				            |   
 <15:0>   STATUS    R/W1C   0x0	        NS	  Time extracted from the dropped PAUSE packet	    |	
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_STATS_PKTS
 *
 * Count of good received packets - packets that are not recognized as PAUSE
 * packets, dropped due the DMAC filter, dropped due FIFO full status, or
 * have any other OPCODE (FCS, Length, etc).
 *

     ==============================================================
     GMX(0)_RX(0..3)_STATS_PKTS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |   
 <31:0>  CNT      RC/W     0x0         NS        Count of received good packets                     |   

Notes:
- Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

     ==============================================================
     GMX(0)_RX(0..3)_STATS_OCTS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |   
 <47:0>  CNT      RC/W    0x0         NS        Octet count of received good packets               |   

Notes:
- Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_RX_STATS_PKTS_CTL
 *
 * Count of all packets received that were recognized as Flow Control or
 * PAUSE packets.  PAUSE packets with any kind of error are counted in
 * GMX_RX_STATS_PKTS_BAD.  Pause packets can be optionally dropped or
 * forwarded based on the GMX_RX_FRM_CTL[CTL_DRP] bit.  This count
 * increments regardless of whether the packet is dropped.  Pause packets
 * will never be counted in GMX_RX_STATS_PKTS.  Packets dropped due the dmac
 * filter will be counted in GMX_RX_STATS_PKTS_DMAC and not here.
 *

     ==============================================================
     GMX(0)_RX(0..3)_STATS_PKTS_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |   
 <31:0>  CNT      RC/W    0x0         NS        Count of received pause packets                    |   

Notes:
- Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

     ==============================================================
     GMX(0)_RX(0..3)_STATS_OCTS_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |   
 <47:0>  CNT      RC/W    0x0         NS        Octet count of received pause packets              |   

Notes:
- Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_RX_STATS_PKTS_DMAC
 *
 * Count of all packets received that were dropped by the dmac filter.
 * Packets that match the DMAC will be dropped and counted here regardless
 * of if they were bad packets.  These packets will never be counted in
 * GMX_RX_STATS_PKTS.
 *
 * Some packets that were not able to satisify the DECISION_CNT may not
 * actually be dropped by Octeon, but they will be counted here as if they
 * were dropped.
 *

     ==============================================================
     GMX(0)_RX(0..3)_STATS_PKTS_DMAC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |   
 <31:0>  CNT      RC/W    0x0         NS        Count of filtered dmac packets                     |   

Notes:
- Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

     ==============================================================
     GMX(0)_RX(0..3)_STATS_OCTS_DMAC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |   
 <47:0>  CNT      RC/W    0x0         NS        Octet count of filtered dmac packets               |   

Notes:
- Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_RX_STATS_PKTS_DRP
 *
 * Count of all packets received that were dropped due to a full receive
 * FIFO.  This counts good and bad packets received - all packets dropped by
 * the FIFO.  It does not count packets dropped by the dmac or pause packet
 * filters.
 *

     ==============================================================
     GMX(0)_RX(0..3)_STATS_PKTS_DRP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |   
 <31:0>  CNT      RC/W    0x0         NS        Count of dropped packets                           |   

Notes:
- Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

     ==============================================================
     GMX(0)_RX(0..3)_STATS_OCTS_DRP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |   
 <47:0>  CNT      RC/W    0x0         NS        Octet count of dropped packets                     |   

Notes:
- Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_RX_STATS_PKTS_BAD
 *
 * Count of all packets received with some error that were not dropped
 * either due to the dmac filter or lack of room in the receive FIFO.
 *

     ==============================================================
     GMX(0)_RX(0..3)_STATS_PKTS_BAD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |   
 <31:0>  CNT      RC/W    0x0         NS        Count of bad packets                               |   

Notes:
- Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_ADR_CTL = Address Filtering Control
 *

     ==============================================================
     GMX(0)_RX(0..3)_ADR_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ      NS          NS        Reserved				            |   
 <3>     CAM_MODE R/W      0x0         NS        Allow or deny DMAC address filter		    |   
						  0 = reject the packet on DMAC address match	    |
						  1 = accept the packet on DMAC address match	    |
 <2:1>   MCST     R/W      0x0         NS        Multicast Mode					    |	
						  0 = Use the Address Filter CAM		    |
						  1 = Force reject all multicast packets	    |
						  2 = Force accept all multicast packets	    |
						  3 = Reserved					    |
 <0>     BCST     R/W      0x1         NS        Accept All Broadcast Packets			    |   

Notes:
* ALGORITHM
  Here is some pseudo code that represents the address filter behavior.

     @verbatim
     bool dmac_addr_filter(uint8 prt, uint48 dmac) {
       ASSERT(prt >= 0 && prt <= 3);
       if (is_bcst(dmac))                               // broadcast accept
         return (GMX_RX{prt}_ADR_CTL[BCST] ? ACCEPT : REJECT);
       if (is_mcst(dmac) & GMX_RX{prt}_ADR_CTL[MCST] == 1)   // multicast reject
         return REJECT;
       if (is_mcst(dmac) & GMX_RX{prt}_ADR_CTL[MCST] == 2)   // multicast accept
         return ACCEPT;

       cam_hit = 0;
     
       for (i=0; i<8; i++) {
         if (GMX_RX{prt}_ADR_CAM_EN[EN<i>] == 0)
           continue;
	 uint48 unswizzled_mac_adr = 0x0;
	 for (j=5; j>=0; j--) {
	    unswizzled_mac_adr = (unswizzled_mac_adr << 8) | GMX_RX{prt}_ADR_CAM{j}[ADR<i*8+7:i*8>];
	 }
         if (unswizzled_mac_adr == dmac) {
           cam_hit = 1;
           break;
         }
       }
     
       if (cam_hit)
         return (GMX_RX{prt}_ADR_CTL[CAM_MODE] ? ACCEPT : REJECT);
       else
         return (GMX_RX{prt}_ADR_CTL[CAM_MODE] ? REJECT : ACCEPT);
     }
     @endverbatim
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_ADR_CAM_EN = Address Filtering Control Enable
 *

     ==============================================================
     GMX(0)_RX(0..3)_ADR_CAM_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved				            |   
 <7:0>   EN       R/W      0x0         NS        CAM Entry Enables				    |   
----------------------------------------------------------------------------------------------------
===

 
 *
 * GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     GMX(0)_RX(0..3)_ADR_CAM0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ADR      R/W      0x0         NS        The DMAC address to match on			    |   
						  Each entry contributes 8bits to one of 8 matchers |
						  Write transactions to GMX_RX_ADR_CAM will not     |
						  change the CSR when GMX_PRT_CFG[EN] is enabled    |
						  The CAM matches against unicst or multicst DMAC   |
						  addresses.					    |
						  In XAUI mode, all ports will reflect the data	    |
						  written to port0.				    |
----------------------------------------------------------------------------------------------------
===


 
 *
 * GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     GMX(0)_RX(0..3)_ADR_CAM1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ADR      R/W      0x0         NS        The DMAC address to match on			    |   
						  Each entry contributes 8bits to one of 8 matchers |
						  Write transactions to GMX_RX_ADR_CAM will not     |
						  change the CSR when GMX_PRT_CFG[EN] is enabled    |
						  The CAM matches against unicst or multicst DMAC   |
						  addresses.					    |
						  In XAUI mode, all ports will reflect the data	    |
						  written to port0.				    |
----------------------------------------------------------------------------------------------------
===


 
 *
 * GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     GMX(0)_RX(0..3)_ADR_CAM2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ADR      R/W      0x0         NS        The DMAC address to match on			    |   
						  Each entry contributes 8bits to one of 8 matchers |
						  Write transactions to GMX_RX_ADR_CAM will not     |
						  change the CSR when GMX_PRT_CFG[EN] is enabled    |
						  The CAM matches against unicst or multicst DMAC   |
						  addresses.					    |
						  In XAUI mode, all ports will reflect the data	    |
						  written to port0.				    |
----------------------------------------------------------------------------------------------------
===


 
 *
 * GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     GMX(0)_RX(0..3)_ADR_CAM3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ADR      R/W      0x0         NS        The DMAC address to match on			    |   
						  Each entry contributes 8bits to one of 8 matchers |
						  Write transactions to GMX_RX_ADR_CAM will not     |
						  change the CSR when GMX_PRT_CFG[EN] is enabled    |
						  The CAM matches against unicst or multicst DMAC   |
						  addresses.					    |
						  In XAUI mode, all ports will reflect the data	    |
						  written to port0.				    |
----------------------------------------------------------------------------------------------------
===


 
 *
 * GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     GMX(0)_RX(0..3)_ADR_CAM4 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ADR      R/W      0x0         NS        The DMAC address to match on			    |   
						  Each entry contributes 8bits to one of 8 matchers |
						  Write transactions to GMX_RX_ADR_CAM will not     |
						  change the CSR when GMX_PRT_CFG[EN] is enabled    |
						  The CAM matches against unicst or multicst DMAC   |
						  addresses.					    |
						  In XAUI mode, all ports will reflect the data	    |
						  written to port0.				    |
----------------------------------------------------------------------------------------------------
===


 
 *
 * GMX_RX_ADR_CAM = Address Filtering Control
 *

     ==============================================================
     GMX(0)_RX(0..3)_ADR_CAM5 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ADR      R/W      0x0         NS        The DMAC address to match on			    |   
						  Each entry contributes 8bits to one of 8 matchers |
						  Write transactions to GMX_RX_ADR_CAM will not     |
						  change the CSR when GMX_PRT_CFG[EN] is enabled    |
						  The CAM matches against unicst or multicst DMAC   |
						  addresses.					    |
						  In XAUI mode, all ports will reflect the data	    |
						  written to port0.				    |
----------------------------------------------------------------------------------------------------
===



 *
 * GMX_BIST = GMX BIST Results
 *

     ==============================================================
     GMX(0)_BIST Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:25> NS       RAZ      NS          NS        Reserved				            |   
 <24:0>  STATUS   RO       0x0         0         BIST Results.                                      |   
                                                  HW sets a bit in BIST for for memory that fails   |
						   0: gmx#.inb.fif_bnk0				    |
						   1: gmx#.inb.fif_bnk1				    |
						   2: gmx#.inb.fif_bnk2				    |
						   3: gmx#.inb.fif_bnk3				    |
						   4: gmx#.inb.fif_bnk_ext0			    |
						   5: gmx#.inb.fif_bnk_ext1			    |
						   6: gmx#.inb.fif_bnk_ext2			    |
						   7: gmx#.inb.fif_bnk_ext3			    |
						   8: gmx#.outb.fif.fif_bnk0			    |
						   9: gmx#.outb.fif.fif_bnk1			    |
						  10: gmx#.outb.fif.fif_bnk2			    |
						  11: gmx#.outb.fif.fif_bnk3			    |
						  12: gmx#.outb.fif.fif_bnk_ext0		    |
						  13: gmx#.outb.fif.fif_bnk_ext1		    |
						  14: gmx#.outb.fif.fif_bnk_ext2		    |
						  15: gmx#.outb.fif.fif_bnk_ext3		    |
						  16: gmx#.csr.gmi0.srf8x64m1_bist		    |
						  17: gmx#.csr.gmi1.srf8x64m1_bist		    |
						  18: gmx#.csr.gmi2.srf8x64m1_bist		    |
						  19: gmx#.csr.gmi3.srf8x64m1_bist		    |
						  20: gmx#.csr.drf20x32m2_bist			    |
						  21: gmx#.csr.drf20x48m2_bist			    |
						  22: gmx#.outb.stat.drf16x27m1_bist		    |
						  23: gmx#.outb.stat.drf40x64m1_bist		    |
						  24: xgmii.tx.drf16x38m1_async_bist		    |
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_PRTS = Number of FIFOs to carve the RX buffer into
 *

     ==============================================================
     GMX(0)_RX_PRTS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:3>  NS       RAZ      NS          NS        Reserved				            |   
 <2:0>   PRTS     R/W      0x4         4         In SGMII/1000Base-X mode, the RX buffer can be	    |   
						  carved into several logical buffers depending on  |
						  the number or implemented ports.		    |
						  0 or 1 port  = 512ticks / 4096bytes		    |
						  2 ports      = 256ticks / 2048bytes		    |
						  3 or 4 ports = 128ticks / 1024bytes		    |
Notes:
GMX_RX_PRTS[PRTS] must be set to '1' in XAUI mode.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_BP_DROP = FIFO mark for packet drop
 *

     ==============================================================
     GMX(0)_RX_BP_DROP(0..3) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6> NS       RAZ      NS          NS        Reserved				            |   
 <5:0>  MARK     R/W      2	      2		Number of 8B ticks to reserve in the RX FIFO.	    |	
						 When the FIFO exceeds this count, packets will     |
						 be dropped and not buffered.			    |
						 MARK should typically be programmed to ports+1.    |
						 Failure to program correctly can lead to system    |
						 instability.					    |

Notes:
The actual watermark is dynamic with respect to the GMX_RX_PRTS
register.  The GMX_RX_PRTS controls the depth of the port's
FIFO so as ports are added or removed, the drop point may change.

In XAUI mode prt0 is used for checking.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_BP_ON = Hiwater mark for port/interface backpressure
 *

     ==============================================================
     GMX(0)_RX_BP_ON(0..3) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:9>  NS       RAZ      NS          NS        Reserved				            |   
 <8:0>   MARK     R/W      0x40        0x40	 Hiwater mark (8B ticks) for backpressure. 	    |   
						  Each register is for an individual port.  In XAUI |
						  mode, prt0 is used for the unified RX FIFO	    |
						  GMX_RX_BP_ON must satisfy			    |
						  BP_OFF <= BP_ON < (FIFO_SIZE - BP_DROP)	    |
						  A value of zero will immediately assert back	    |
						  pressure.					    |

Notes:
In XAUI mode, prt0 is used for checking.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_BP_OFF = Lowater mark for packet drop
 *

     ==============================================================
     GMX(0)_RX_BP_OFF(0..3) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6>  NS       RAZ      NS          NS        Reserved				            |   
 <5:0>   MARK     R/W      0x10        0x10      Water mark (8B ticks) to deassert backpressure	    |   

Notes:
In XAUI mode, prt0 is used for checking.
----------------------------------------------------------------------------------------------------
===


 *
 * Per Port
 *

 *
 * GMX_TX_THRESH = Packet TX Threshold
 *

     ==============================================================
     GMX(0)_TX(0..3)_THRESH Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:9>  NS       RAZ      NS          NS        Reserved				            |   
 <8:0>	 CNT	  R/W	   0x20	       0x20	 Number of 16B ticks to accumulate in the TX FIFO   |	
						  before sending on the packet interface	    |
						  This register should be large enough to prevent   |
						  underflow on the packet interface and must never  |
						  be set to zero.  This register cannot exceed the  |
						  the TX FIFO depth which is...			    |
						   GMX_TX_PRTS==0,1:  CNT MAX = 0x100		    |
						   GMX_TX_PRTS==2  :  CNT MAX = 0x080		    |
						   GMX_TX_PRTS==3,4:  CNT MAX = 0x040		    |

Notes:
In XAUI mode, prt0 is used for checking.  Since XAUI mode uses a single TX FIFO and is higher data rate, recommended value is 0x100.
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_APPEND = Packet TX Append Control
 *

     ==============================================================
     GMX(0)_TX(0..3)_APPEND Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS        RAZ      NS          NS        Reserved				            |   
 <3>     FORCE_FCS R/W     0x1         0x1       Append the Ethernet FCS on each pause packet 	    |	
						  when FCS is clear.  Pause packets are normally    |
						  padded to 60 bytes.  If GMX_TX_MIN_PKT[MIN_SIZE]  |
						  exceeds 59, then FORCE_FCS will not be used.	    |
 <2>	 FCS      R/W	   0x1	       0x1	 Append the Ethernet FCS on each packet 	    |	
 <1>	 PAD      R/W	   0x1	       0x1	 Append PAD bytes such that min sized         	    |	
 <0>	 PREAMBLE R/W	   0x1	       0x1	 Prepend the Ethernet preamble on each transfer	    |	
						  When GMX_TX_XAUI_CTL[HG_EN] is set, PREAMBLE	    |
						  must be zero.					    |
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_SLOT = Packet TX Slottime Counter
 *

     ==============================================================
     GMX(0)_TX(0..3)_SLOT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:10> NS       RAZ      NS          NS        Reserved				            |   
 <9:0>	 SLOT	  R/W	   0x200       0x200	 Slottime (refer to 802.3 to set correctly)	    |	
						  10/100Mbs: 0x40				    |
						  1000Mbs:   0x200				    |
						  (SGMII/1000Base-X only)			    |
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_BURST = Packet TX Burst Counter
 *

     ==============================================================
     GMX(0)_TX(0..3)_BURST Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |   
 <15:0>	 BURST	  R/W	   0x2000      0x2000	 Burst (refer to 802.3 to set correctly)	    |	
						  Only valid for 1000Mbs half-duplex operation	    |
						   halfdup / 1000Mbs: 0x2000			    |
						   all other modes:   0x0			    |
						  (SGMII/1000Base-X only)			    |
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_SMAC = Packet SMAC
 *

     ==============================================================
     GMX(0)_SMAC(0..3) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |   
 <47:0>	 SMAC 	  R/W	   0x0         NS	 The SMAC field is used for generating and	    |	
						  accepting Control Pause packets		    |
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_PAUSE_PKT_TIME = Packet TX Pause Packet pause_time field
 *

     ==============================================================
     GMX(0)_TX(0..3)_PAUSE_PKT_TIME Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |   
 <15:0>	 TIME 	  R/W	   0x60        NS	 The pause_time field placed in outbnd 802.3 pause  |	
						  packets, HiGig2 messages, or CBFC pause packets.  |
                                                  pause_time is in 512 bit-times		    |
						  Normally, TIME > GMX_TX_PAUSE_PKT_INTERVAL	    |

Notes:
Choosing proper values of GMX_TX_PAUSE_PKT_TIME[TIME] and
GMX_TX_PAUSE_PKT_INTERVAL[INTERVAL] can be challenging to the system
designer.  It is suggested that TIME be much greater than INTERVAL and
GMX_TX_PAUSE_ZERO[SEND] be set.  This allows a periodic refresh of the PAUSE
count and then when the backpressure condition is lifted, a PAUSE packet
with TIME==0 will be sent indicating that Octane is ready for additional
data.

If the system chooses to not set GMX_TX_PAUSE_ZERO[SEND], then it is
suggested that TIME and INTERVAL are programmed such that they satisify the
following rule...

   INTERVAL <= TIME - (largest_pkt_size + IFG + pause_pkt_size)

where largest_pkt_size is that largest packet that the system can send
(normally 1518B), IFG is the interframe gap and pause_pkt_size is the size
of the PAUSE packet (normally 64B).
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_MIN_PKT = Packet TX Min Size Packet (PAD upto min size)
 *

     ==============================================================
     GMX(0)_TX(0..3)_MIN_PKT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved				            |   
 <7:0>	 MIN_SIZE R/W	   0x3b	       59	 Min frame in bytes before the FCS is applied	    |	
                                                  Padding is only appened when GMX_TX_APPEND[PAD]   |
						  for the coresponding port is set.		    |
						  In SGMII mode, packets will be padded to	    |
						   MIN_SIZE+1. The reset value will pad to 60 bytes.|
						  In XAUI mode, packets will be padded to	    |
						   MIN(252,(MIN_SIZE+1 & ~0x3))			    |
						  When GMX_TX_XAUI_CTL[HG_EN] is set, the HiGig	    |
						   header (12B or 16B) is normally added to the	    |
						   packet, so MIN_SIZE should be 59+12=71B for	    |
						   HiGig or 59+16=75B for HiGig2.		    |
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_PAUSE_PKT_INTERVAL = Packet TX Pause Packet transmission interval - how often PAUSE packets will be sent
 *

     ==============================================================
     GMX(0)_TX(0..3)_PAUSE_PKT_INTERVAL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |   
 <15:0>	 INTERVAL R/W	   0x10	       NS	 Arbitrate for a 802.3 pause packet, HiGig2 message,|	
						  or CBFC pause packet every (INTERVAL*512)	    |
						  bit-times.					    |
						  Normally, 0 < INTERVAL < GMX_TX_PAUSE_PKT_TIME    |
						  INTERVAL=0, will only send a single PAUSE packet  |
						  for each backpressure event			    |

Notes:
Choosing proper values of GMX_TX_PAUSE_PKT_TIME[TIME] and
GMX_TX_PAUSE_PKT_INTERVAL[INTERVAL] can be challenging to the system
designer.  It is suggested that TIME be much greater than INTERVAL and
GMX_TX_PAUSE_ZERO[SEND] be set.  This allows a periodic refresh of the PAUSE
count and then when the backpressure condition is lifted, a PAUSE packet
with TIME==0 will be sent indicating that Octane is ready for additional
data.

If the system chooses to not set GMX_TX_PAUSE_ZERO[SEND], then it is
suggested that TIME and INTERVAL are programmed such that they satisify the
following rule...

   INTERVAL <= TIME - (largest_pkt_size + IFG + pause_pkt_size)

where largest_pkt_size is that largest packet that the system can send
(normally 1518B), IFG is the interframe gap and pause_pkt_size is the size
of the PAUSE packet (normally 64B).
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_SOFT_PAUSE = Packet TX Software Pause
 *

     ==============================================================
     GMX(0)_TX(0..3)_SOFT_PAUSE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |   
 <15:0>	 TIME	  R/W	   0x0	       NS	 Back off the TX bus for (TIME*512) bit-times	    |	
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_PAUSE_TOGO = Packet TX Amount of time remaining to backpressure
 *

     ==============================================================
     GMX(0)_TX(0..3)_PAUSE_TOGO Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |   
 <31:16> MSG_TIME RO	   NS	       NS	 Amount of time remaining to backpressure	    |	
						  From the higig2 physical message pause timer	    |
						  (only valid on port0)				    |
 <15:0>	 TIME	  RO	   NS	       NS	 Amount of time remaining to backpressure	    |	
						  From the standard 802.3 pause timer		    |
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_PAUSE_ZERO = Packet TX Amount of time remaining to backpressure
 *

     ==============================================================
     GMX(0)_TX(0..3)_PAUSE_ZERO Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved				            |   
 <0>	 SEND	  R/W	   1	       1	 When backpressure condition clear, send PAUSE	    |	
						  packet with pause_time of zero to enable the	    |
						  channel					    |
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_STATS_CTL = TX Stats Control register
 *

     ==============================================================
     GMX(0)_TX(0..3)_STATS_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1> NS        RAZ      NS          NS        Reserved				            |   
 <0>    RD_CLR	  R/W      0x0	       0	 Stats registers will clear on reads		    |   
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_TX_CTL = TX Control register
 *

     ==============================================================
     GMX(0)_TX(0..3)_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2> NS        RAZ      NS          NS        Reserved				            |   
 <1>    XSDEF_EN  R/W      0x1	       1	 Enables the excessive deferral check for stats	    |   
						  and interrupts				    |
						  (SGMII/1000Base-X half-duplex only)		    |
 <0>    XSCOL_EN  R/W      0x1	       1	 Enables the excessive collision check for stats    |   
						  and interrupts				    |
						  (SGMII/1000Base-X half-duplex only)		    |
----------------------------------------------------------------------------------------------------
===


 * GMX_TX_STAT0 = GMX_TX_STATS_XSDEF / GMX_TX_STATS_XSCOL

     ==============================================================
     GMX(0)_TX(0..3)_STAT0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> XSDEF    RC/W     0x0         NS        Number of packets dropped (never successfully      |   
						  sent) due to excessive deferal		    |
						  (SGMII/1000Base-X half-duplex only)		    |
 <31:0>  XSCOL    RC/W     0x0         NS        Number of packets dropped (never successfully	    |   
						  sent) due to excessive collision.  Defined by     |
						  GMX_TX_COL_ATTEMPT[LIMIT].			    |
						  (SGMII/1000Base-X half-duplex only)		    |

Notes:
- Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 * GMX_TX_STAT1 = GMX_TX_STATS_SCOL  / GMX_TX_STATS_MCOL

     ==============================================================
     GMX(0)_TX(0..3)_STAT1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> SCOL     RC/W     0x0         NS        Number of packets sent with a single collision     |   
						  (SGMII/1000Base-X half-duplex only)		    |
 <31:0>  MCOL     RC/W     0x0         NS        Number of packets sent with multiple collisions    |   
						  but < GMX_TX_COL_ATTEMPT[LIMIT].		    |
						  (SGMII/1000Base-X half-duplex only)		    |

Notes:
- Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 * GMX_TX_STAT2 = GMX_TX_STATS_OCTS

     ==============================================================
     GMX(0)_TX(0..3)_STAT2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |   
 <47:0>  OCTS     RC/W     0x0         NS        Number of total octets sent on the interface.	    |   
						  Does not count octets from frames that were	    |
						  truncated due to collisions in halfdup mode.	    |

Notes:
- Octect counts are the sum of all data transmitted on the wire including
  packet data, pad bytes, fcs bytes, pause bytes, and jam bytes.  The octect
  counts do not include PREAMBLE byte or EXTEND cycles.
- Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 * GMX_TX_STAT3 = GMX_TX_STATS_PKTS

     ==============================================================
     GMX(0)_TX(0..3)_STAT3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |   
 <31:0>  PKTS     RC/W     0x0         NS        Number of total frames sent on the interface.	    |   
						  Does not count frames that were truncated due to  |
						   collisions in halfdup mode.			    |

Notes:
- Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 * GMX_TX_STAT4 = GMX_TX_STATS_HIST1 (64) / GMX_TX_STATS_HIST0 (<64)

     ==============================================================
     GMX(0)_TX(0..3)_STAT4 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> HIST1    RC/W     0x0         NS        Number of packets sent with an octet count of 64.  |   
 <31:0>  HIST0    RC/W     0x0         NS        Number of packets sent with an octet count         |   
						  of < 64. 					    |

Notes:
- Packet length is the sum of all data transmitted on the wire for the given
  packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
  bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
- Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 * GMX_TX_STAT5 = GMX_TX_STATS_HIST3 (128- 255) / GMX_TX_STATS_HIST2 (65- 127)

     ==============================================================
     GMX(0)_TX(0..3)_STAT5 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> HIST3    RC/W     0x0         NS        Number of packets sent with an octet count of      |   
						  128 - 255.					    |
 <31:0>  HIST2    RC/W     0x0         NS        Number of packets sent with an octet count of      |   
						  65 - 127.					    |

Notes:
- Packet length is the sum of all data transmitted on the wire for the given
  packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
  bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
- Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 * GMX_TX_STAT6 = GMX_TX_STATS_HIST5 (512-1023) / GMX_TX_STATS_HIST4 (256-511)

     ==============================================================
     GMX(0)_TX(0..3)_STAT6 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> HIST5    RC/W     0x0         NS        Number of packets sent with an octet count of      |   
						  512 - 1023.					    |
 <31:0>  HIST4    RC/W     0x0         NS        Number of packets sent with an octet count of      |   
						  256 - 511.					    |

Notes:
- Packet length is the sum of all data transmitted on the wire for the given
  packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
  bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
- Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 * GMX_TX_STAT7 = GMX_TX_STATS_HIST7 (1024-1518) / GMX_TX_STATS_HIST6 (>1518)

     ==============================================================
     GMX(0)_TX(0..3)_STAT7 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> HIST7    RC/W     0x0         NS        Number of packets sent with an octet count         |   
						  of > 1518.					    |
 <31:0>  HIST6    RC/W     0x0         NS        Number of packets sent with an octet count of      |   
						  1024 - 1518.					    |

Notes:
- Packet length is the sum of all data transmitted on the wire for the given
  packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
  bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
- Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===

 * GMX_TX_STAT8 = GMX_TX_STATS_MCST  / GMX_TX_STATS_BCST

     ==============================================================
     GMX(0)_TX(0..3)_STAT8 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> MCST     RC/W     0x0         NS        Number of packets sent to multicast DMAC.          |   
						  Does not include BCST packets.		    |
 <31:0>  BCST     RC/W     0x0         NS        Number of packets sent to broadcast DMAC.	    |   
						  Does not include MCST packets.		    |

Notes:
- Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
- Note, GMX determines if the packet is MCST or BCST from the DMAC of the
  packet.  GMX assumes that the DMAC lies in the first 6 bytes of the packet
  as per the 802.3 frame definition.  If the system requires additional data
  before the L2 header, then the MCST and BCST counters may not reflect
  reality and should be ignored by software.
----------------------------------------------------------------------------------------------------
===

 * GMX_TX_STAT9 = GMX_TX_STATS_UNDFLW / GMX_TX_STATS_CTL

     ==============================================================
     GMX(0)_TX(0..3)_STAT9 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> UNDFLW   RC/W     0x0         NS        Number of underflow packets			    |   
 <31:0>  CTL      RC/W     0x0         NS        Number of Control packets (PAUSE flow control)	    |   
						  generated by GMX.  It does not include control    |
						  packets forwarded or generated by the PP's.	    |

Notes:
- Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
- Counters will wrap
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GMX(0)_TX(0..3)_SGMII_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved				            |   
 <0>	 ALIGN	  R/W	   0x1	       0x1	 Align the transmission to even cycles              |	
						  0 = Data can be sent on any cycle		    |
						      Possible to for the TX PCS machine to drop    |
						      first byte of preamble			    |
						  1 = Data will only be sent on even cycles	    |
						      There will be no loss of data		    |
						  (SGMII/1000Base-X only)			    |
----------------------------------------------------------------------------------------------------
===


 *
 * Common
 *

 *
 * GMX_TX_PRTS = TX Ports
 *

     ==============================================================
     GMX(0)_TX_PRTS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:5>  NS       RAZ      NS          NS        Reserved				            |   
 <4:0>	 PRTS	  R/W	   4 	       NS	 Number of ports allowed on the interface	    |	
						  (SGMII/1000Base-X only)			    |

Notes:
* The value programmed for PRTS is the number of the highest architected
  port number on the interface, plus 1.  For example, if port 2 is the
  highest architected port, then the programmed value should be 3 since
  there are 3 ports in the system - 0, 1, and 2.
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_IFG = Packet TX Interframe Gap
 *

     ==============================================================
     GMX(0)_TX_IFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved				            |   
 <7:4>	 IFG2	  R/W	   0x4	       NS	 1/3 of the interframe gap timing (in IFG2*8 bits)  |	
						  If CRS is detected during IFG2, then the	    |
						  interFrameSpacing timer is not reset and a frame  |
						  is transmited once the timer expires.		    |
 <3:0>	 IFG1	  R/W	   0x8	       NS	 2/3 of the interframe gap timing (in IFG1*8 bits)  |	
						  If CRS is detected during IFG1, then the	    |
						  interFrameSpacing timer is reset and a frame is   |
						  not transmited.				    |

Notes:
* Programming IFG1 and IFG2.

  For 10/100/1000Mbs half-duplex systems that require IEEE 802.3
  compatibility, IFG1 must be in the range of 1-8, IFG2 must be in the range
  of 4-12, and the IFG1+IFG2 sum must be 12.

  For 10/100/1000Mbs full-duplex systems that require IEEE 802.3
  compatibility, IFG1 must be in the range of 1-11, IFG2 must be in the range
  of 1-11, and the IFG1+IFG2 sum must be 12.

  For XAUI/10Gbs systems that require IEEE 802.3 compatibility, the
  IFG1+IFG2 sum must be 12.  IFG1[1:0] and IFG2[1:0] must be zero.

  For all other systems, IFG1 and IFG2 can be any value in the range of
  1-15.  Allowing for a total possible IFG sum of 2-30.
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_JAM = Packet TX Jam Pattern
 *

     ==============================================================
     GMX(0)_TX_JAM Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved				            |   
 <7:0>	 JAM	  R/W	   0xEE	       NS	 Jam pattern					    |	
						  (SGMII/1000Base-X half-duplex only)			    |
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_COL_ATTEMPT = Packet TX collision attempts before dropping frame
 *

     ==============================================================
     GMX(0)_TX_COL_ATTEMPT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:5>  NS       RAZ      NS          NS        Reserved				            |   
 <4:0>	 LIMIT    R/W	   0x10	       16	 Collision Attempts				    |	
						  (SGMII/1000Base-X half-duplex only)			    |
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_PAUSE_PKT_DMAC = Packet TX Pause Packet DMAC field
 *

     ==============================================================
     GMX(0)_TX_PAUSE_PKT_DMAC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |   
 <47:0>	 DMAC 	  R/W	   0x0180c2000001 0x0180c2000001 The DMAC field placed is outbnd pause pkts |	
----------------------------------------------------------------------------------------------------
===

 *
 * GMX_TX_PAUSE_PKT_TYPE = Packet Interface TX Pause Packet TYPE field
 *

     ==============================================================
     GMX(0)_TX_PAUSE_PKT_TYPE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |   
 <15:0>	 TYPE 	  R/W	   0x8808      0x8808	 The TYPE field placed is outbnd pause pkts	    |	
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_TX_OVR_BP = Packet Interface TX Override BackPressure
 *

     ==============================================================
     GMX(0)_TX_OVR_BP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS        RAZ      NS          NS        Reserved				            |   
 <47:32> TX_PRT_BP R/W	   0x0	       0x0	 Per port BP sent to PKO			    |	
						  0=Port is available				    |
						  1=Port should be back pressured		    |
						  TX_PRT_BP should not be set until		    |
						  GMX_INF_MODE[EN] has been enabled		    |
 <31:12> NS       RAZ      NS          NS        Reserved				            |   
 <11:8>  EN	  R/W	   0x0	       0	 Per port Enable back pressure override		    |	
 <7:4>	 BP	  R/W	   0x0	       0	 Per port BackPressure status to use		    |	
						  0=Port is available				    |
						  1=Port should be back pressured		    |
 <3:0>   IGN_FULL R/W	   0x0	       0	 Ignore the RX FIFO full when computing BP	    |	

Notes:
In XAUI mode, only the lsb (corresponding to port0) of EN, BP, and IGN_FULL are used.

GMX*_TX_OVR_BP[EN<0>] must be set to one and GMX*_TX_OVR_BP[BP<0>] must be cleared to zero
(to forcibly disable HW-automatic 802.3 pause packet generation) with the HiGig2 Protocol
when GMX*_HG2_CONTROL[HG2TX_EN]=0. (The HiGig2 protocol is indicated by
GMX*_TX_XAUI_CTL[HG_EN]=1 and GMX*_RX0_UDD_SKP[LEN]=16.) HW can only auto-generate backpressure
through HiGig2 messages (optionally, when GMX*_HG2_CONTROL[HG2TX_EN]=1) with the HiGig2
protocol.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_TX_BP = Packet Interface TX BackPressure Register
 *

     ==============================================================
     GMX(0)_TX_BP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ      NS          NS        Reserved				            |   
 <3:0>	 BP 	  RO	   0x0	       0	 Per port BackPressure status			    |	
						  0=Port is available				    |
						  1=Port should be back pressured		    |

Notes:
In XAUI mode, only the lsb (corresponding to port0) of BP is used.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_TX_CORRUPT = TX - Corrupt TX packets with the ERR bit set
 *

     ==============================================================
     GMX(0)_TX_CORRUPT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ      NS          NS        Reserved				            |   
 <3:0>	 CORRUPT  R/W	   0xf	       0xf	 Per port error propagation			    |	
						  0=Never corrupt packets			    |
						  1=Corrupt packets with ERR			    |

Notes:
Packets sent from PKO with the ERR wire asserted will be corrupted by
the transmitter if CORRUPT[prt] is set (XAUI uses prt==0).

Corruption means that GMX will send a bad FCS value.  If GMX_TX_APPEND[FCS]
is clear then no FCS is sent and the GMX cannot corrupt it.  The corrupt FCS
value is 0xeeeeeeee for SGMII/1000Base-X and 4 bytes of the error
propagation code in XAUI mode.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_RX_PRT_INFO = Report the RX status for port
 *

     ==============================================================
     GMX(0)_RX_PRT_INFO Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:20> NS       RAZ      NS          NS        Reserved				            |   
 <19:16> DROP     RO	   0x0	       0x0	 Per port indication that data was dropped	    |	
 <15:4>  NS       RAZ      NS          NS        Reserved				            |   
 <3:0>	 COMMIT   RO	   0x0	       0x0	 Per port indication that SOP was accepted	    |	

Notes:
In XAUI mode, only the lsb (corresponding to port0) of DROP and COMMIT are used.
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_TX_LFSR = LFSR used to implement truncated binary exponential backoff
 *

     ==============================================================
     GMX(0)_TX_LFSR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |   
 <15:0>	 LFSR     R/W	   0xffff      NS     	 The current state of the LFSR used to feed random  |	
						  numbers to compute truncated binary exponential   |
						  backoff.					    |
						  (SGMII/1000Base-X half-duplex only)		    |
----------------------------------------------------------------------------------------------------
===


 *
 * GMX_TX_INT_REG = Interrupt Register
 *

     ==============================================================
     GMX(0)_TX_INT_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:24> NS       RAZ      NS          NS        Reserved				            |   
 <23:20> PTP_LOST R/W1C    0x0         0         A packet with a PTP request was not able to be	    |	
						  sent due to XSCOL			            |
 <19:16> LATE_COL R/W1C    0x0         0         TX Late Collision				    |	
						  (SGMII/1000Base-X half-duplex only)		    |
 <15:12> XSDEF    R/W1C    0x0         0         TX Excessive deferral				    |	
						  (SGMII/1000Base-X half-duplex only)		    |
 <11:8>  XSCOL    R/W1C    0x0         0         TX Excessive collisions			    |	
						  (SGMII/1000Base-X half-duplex only)		    |
 <7:6>   SPARE    R/W1C    0x0         0         Spare						    |   
 <5:2>   UNDFLW   R/W1C    0x0         0         TX Underflow                   		    |	
 <1>     NS       RAZ      0x0         0         Reserved					    |	
 <0>     PKO_NXA  R/W1C    0x0         0         Port address out-of-range from PKO Interface	    |	

Notes:
In XAUI mode, only the lsb (corresponding to port0) of UNDFLW is used.
----------------------------------------------------------------------------------------------------
===


 * 
 * GMX_TX_INT_EN = Interrupt Enable
 *

     ==============================================================
     GMX(0)_TX_INT_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:24> NS       RAZ      NS          NS        Reserved				            |   
 <23:20> PTP_LOST R/W      0x0         0         A packet with a PTP request was not able to be	    |	
						  sent due to XSCOL			            |
 <19:16> LATE_COL R/W      0x0         0         TX Late Collision				    |	
						  (SGMII/1000Base-X half-duplex only)		    |
 <15:12> XSDEF    R/W      0x0         0         TX Excessive deferral				    |	
						  (SGMII/1000Base-X half-duplex only)		    |
 <11:8>  XSCOL    R/W      0x0         0         TX Excessive collisions			    |	
						  (SGMII/1000Base-X half-duplex only)		    |
 <7:6>   SPARE    R/W      0x0         0         Spare						    |   
 <5:2>   UNDFLW   R/W      0x0         0         TX Underflow					    |	
 <1>     NS       RAZ      0x0         0         Reserved					    |	
 <0>     PKO_NXA  R/W      0x0         0         Port address out-of-range from PKO Interface	    |	

Notes:
In XAUI mode, only the lsb (corresponding to port0) of UNDFLW is used.
----------------------------------------------------------------------------------------------------
===


 * 
 * GMX_NXA_ADR = NXA Port Address
 *

     ==============================================================
     GMX(0)_NXA_ADR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6>  NS       RAZ      NS          NS        Reserved				            |   
 <5:0>   PRT      RO       0x0         NS        Logged address for NXA exceptions 		    |	
						  The logged address will be from the first	    |
						  exception that caused the problem.  NCB has	    |
						  higher priority than PKO and will win.	    |
						  (only PRT[3:0])			            |
----------------------------------------------------------------------------------------------------
===

 * 
 * GMX_BAD_REG = A collection of things that have gone very, very wrong
 *

     ==============================================================
     GMX(0)_BAD_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:31> NS       RAZ      NS          NS        Reserved				            |   
 <30:27> INB_NXA  R/W1C    0x0         0         Inbound port > GMX_RX_PRTS                         |   
 <26>    STATOVR  R/W1C    0x0         0         TX Statistics overflow				    |   
						  The common FIFO to SGMII and XAUI had an overflow |
						  TX Stats are corrupted                            |
 <25:22> LOSTSTAT R/W1C    0x0         0         TX Statistics data was over-written		    |   
						  In SGMII, one bit per port			    |
						  In XAUI, only port0 is used			    |
						  TX Stats are corrupted                            |
 <21:6>  NS       RAZ      NS          NS        Reserved				            |   
 <5:2>   OUT_OVR  R/W1C    0x0         0         Outbound data FIFO overflow (per port)        	    |   
 <1:0>   NS       RAZ      NS          NS        Reserved				            |   

Notes:
In XAUI mode, only the lsb (corresponding to port0) of INB_NXA, LOSTSTAT, OUT_OVR, are used.
----------------------------------------------------------------------------------------------------
===

 * 
 * GMX_STAT_BP = Number of cycles that the TX/Stats block has help up operation
 *

     ==============================================================
     GMX(0)_STAT_BP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:17> NS       RAZ      NS          NS        Reserved				            |   
 <16>    BP       RO       0x0         0         Current BP state				    |   
 <15:0>  CNT      R/W1C    0x0         0         Number of cycles that BP has been asserted	    |   
						  Saturating counter                                |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     GMX(0)_TX_XAUI_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:11> NS       RAZ      NS          NS        Reserved				            |   
 <10:9>  HG_PAUSE_HGI R/W  0x2         2         HGI Field for HW generated HiGig pause packets	    |   
						  (XAUI mode only)				    |
 <8>     HG_EN    R/W      0x0         0         Enable HiGig Mode				    |   
						  When HG_EN is set and GMX_RX_UDD_SKP[SKIP]=12	    |
						   the interface is in HiGig/HiGig+ mode and the    |
						   following must be set:			    |
						   GMX_RX_FRM_CTL[PRE_CHK] == 0			    |
						   GMX_RX_UDD_SKP[FCSSEL] == 0			    |
						   GMX_RX_UDD_SKP[SKIP] == 12      		    |
						   GMX_TX_APPEND[PREAMBLE] == 0			    |
						  When HG_EN is set and GMX_RX_UDD_SKP[SKIP]=16	    |
						   the interface is in HiGig2 mode and the	    |
						   following must be set:			    |
						   GMX_RX_FRM_CTL[PRE_CHK] == 0			    |
						   GMX_RX_UDD_SKP[FCSSEL] == 0			    |
						   GMX_RX_UDD_SKP[SKIP] == 16			    |
						   GMX_TX_APPEND[PREAMBLE] == 0			    |
						   GMX_PRT0_CBFC_CTL[RX_EN] == 0		    |
						   GMX_PRT0_CBFC_CTL[TX_EN] == 0		    |
						  (XAUI mode only)				    |
 <7>     NS       RAZ      NS          NS        Reserved				            |   
 <6>     LS_BYP	  R/W	   0x0	       0	 Bypass the link status as determined by the XGMII  |	
						  receiver and set the link status of the	    |
						  transmitter to LS.				    |
						  (XAUI mode only)				    |
 <5:4>   LS       R/W	   0x0	       0	 Link Status					    |	
						  0 = Link Ok					    |
						      Link runs normally. RS passes MAC data to PCS |
						  1 = Local Fault				    |
						      RS layer sends continuous remote fault	    |
						       sequences.				    |
						  2 = Remote Fault				    |
						      RS layer sends continuous idles sequences	    |
						  3 = Link Drain				    |
						      RS layer drops full packets to allow GMX and  |
						       PKO to drain their FIFOs			    |						       
						  (XAUI mode only)				    |
 <3:2>   NS       RAZ      NS          NS        Reserved				            |   
 <1>     UNI_EN	  R/W	   0x0	       0	 Enable Unidirectional Mode (IEEE Clause 66)	    |	
						  (XAUI mode only)				    |
 <0>     DIC_EN   R/W      0x0         1         Enable the deficit idle counter for IFG averaging  |   
						  (XAUI mode only)				    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     GMX(0)_RX_XAUI_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ      NS          NS        Reserved				            |   
 <1:0>   STATUS   RO       0x0         0         Link Status					    |   
						  0=Link OK					    |
						  1=Local Fault					    |
						  2=Remote Fault				    |
						  3=Reserved					    |
						  (XAUI mode only)				    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     GMX(0)_RX_XAUI_BAD_COL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:40> NS       RAZ      NS          NS        Reserved				            |   
 <39>    VAL	  R/W1C	   0x0	       NS	 Set when GMX_RX_INT_REG[PCTERR] is set.	    |	
						  (XAUI mode only)				    |
 <38:36> STATE	  RO	   0x0	       NS	 When GMX_RX_INT_REG[PCTERR] is set, STATE will	    |	
						  conatin the receive state at the time of the	    |
						  error.					    |
						  (XAUI mode only)				    |
 <35:32> LANE_RXC RO       0x0         NS        When GMX_RX_INT_REG[PCTERR] is set, LANE_RXC will  |	
						  conatin the XAUI column at the time of the error. |
						  (XAUI mode only)				    |
 <31:0>  LANE_RXD RO       0x0         NS        When GMX_RX_INT_REG[PCTERR] is set, LANE_RXD will  |	
						  conatin the XAUI column at the time of the error. |
						  (XAUI mode only)				    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GMX(0)_XAUI_EXT_LOOPBACK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:5>  NS       RAZ      NS          NS        Reserved				            |   
 <4>     EN       R/W      0x0         0         Loopback enable				    |   
						  Puts the packet interface in external loopback    |
						  mode on the XAUI bus in which the RX lines are    |
						  reflected on the TX lines.			    |
						  (XAUI mode only)				    |
 <3:0>   THRESH   R/W      0x6         6         Threshhold on the TX FIFO			    |   
						  SW must only write the typical value.  Any other  |
						  value will cause loopback mode not to function    |
						  correctly.					    |
						  (XAUI mode only)				    |
----------------------------------------------------------------------------------------------------
===



*** HG2 message CSRs 


     ==============================================================
     GMX(0)_RX_HG2_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |   
 <47:32> PHTIM2GO RO       0x0         NS        Physical time to go for removal of physical link   |   
						  pause. Initial value from received HiGig2 msg pkt |
						  Non-zero only when physical back pressure active  |
 <31:16> XOF	  RO	   0x0	       0	 16 bit xof back pressure vector from HiGig2 msg pkt|	
						  or from CBFC packets.				    |
						  Non-zero only when logical back pressure is active|
						  All bits will be 0 when LGTIM2GO=0                |
 <15:0>  LGTIM2GO RO	   0x0         NS        Logical packet flow back pressure time remaining   |   
						  Initial value set from xof time field of HiGig2   |
						  message packet received or a function of the	    |
						  enabled and current timers for CBFC packets.	    |
						  Non-zero only when logical back pressure is active|
----------------------------------------------------------------------------------------------------
===




     ==============================================================
     GMX(0)_HG2_CONTROL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:19> NS       RAZ      NS          NS        Reserved				            |   
 <18>    HG2TX_EN R/W	   0x0	       0	 Enable Transmission of HG2 phys and logl messages  |	
                                                 When set, also disables HW auto-generated (802.3   |
                                                 and CBFC) pause frames. (OCTEON cannot generate    |
						 proper 802.3 or CBFC pause frames in HiGig2 mode.) |
 <17>    HG2RX_EN R/W	   0x0	       0	 Enable extraction and processing of HG2 message    |	
						  packet from RX flow. Physical logical pause info  |
						  is used to pause physical link, back pressure PKO |
                                                  HG2RX_EN must be set when HiGig2 messages are     |
                                                  present in the receive stream.                    |
 <16>    PHYS_EN  R/W	   0x1	       NS	 1 bit physical link pause enable for recevied      |   
						  HiGig2 physical pause message                     |
 <15:0>  LOGL_EN  R/W	   0xffff      NS	 16 bit xof enables for recevied HiGig2 messages    |	
						  or CBFC packets				    |
Notes:
The HiGig2 TX and RX enable would normally be both set together for HiGig2 messaging. However
setting just the TX or RX bit will result in only the HG2 message transmit or the receive
capability.
PHYS_EN and LOGL_EN bits when 1, allow link pause or back pressure to PKO as per received
HiGig2 message. When 0, link pause and back pressure to PKO in response to received messages
are disabled.

GMX*_TX_XAUI_CTL[HG_EN] must be set to one(to enable HiGig) whenever either HG2TX_EN or HG2RX_EN
are set.

GMX*_RX0_UDD_SKP[LEN] must be set to 16 (to select HiGig2) whenever either HG2TX_EN or HG2RX_EN
are set.

GMX*_TX_OVR_BP[EN<0>] must be set to one and GMX*_TX_OVR_BP[BP<0>] must be cleared to zero
(to forcibly disable HW-automatic 802.3 pause packet generation) with the HiGig2 Protocol when
GMX*_HG2_CONTROL[HG2TX_EN]=0. (The HiGig2 protocol is indicated by GMX*_TX_XAUI_CTL[HG_EN]=1
and GMX*_RX0_UDD_SKP[LEN]=16.) The HW can only auto-generate backpressure via HiGig2 messages
(optionally, when HG2TX_EN=1) with the HiGig2 protocol.
----------------------------------------------------------------------------------------------------
===




     ==============================================================
     GMX(0)_TX_HG2_REG1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |   
 <15:0>  TX_XOF   R/W1     0x0         NS        TX HiGig2 message for logical link pause when any  |   
                                                 bit value changes                                  |
						  Only write in HiGig2 mode i.e. when		    |
						  GMX_TX_XAUI_CTL[HG_EN]=1 and			    |
						  GMX_RX_UDD_SKP[SKIP]=16.			    |
Notes:
The TX_XOF[15:0] field in GMX(0)_TX_HG2_REG1 and the TX_XON[15:0] field in
GMX(0)_TX_HG2_REG2 register map to the same 16 physical flops. When written with address of 
GMX(0)_TX_HG2_REG1, it will exhibit write 1 to set behavior and when written with address of
GMX(0)_TX_HG2_REG2, it will exhibit write 1 to clear behavior.
For reads, either address will return the $GMX(0)_TX_HG2_REG1 values.
----------------------------------------------------------------------------------------------------
===




     ==============================================================
     GMX(0)_TX_HG2_REG2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |   
 <15:0>  TX_XON   R/W1C    0x0         NS        TX HiGig2 message for logical link pause when any  |   
                                                 bit value changes                                  |
						  Only write in HiGig2 mode i.e. when		    |
						  GMX_TX_XAUI_CTL[HG_EN]=1 and			    |
						  GMX_RX_UDD_SKP[SKIP]=16.			    |
Notes:
The TX_XOF[15:0] field in GMX(0)_TX_HG2_REG1 and the TX_XON[15:0] field in
GMX(0)_TX_HG2_REG2 register map to the same 16 physical flops. When written with address  of 
GMX(0)_TX_HG2_REG1, it will exhibit write 1 to set behavior and when written with address of
GMX(0)_TX_HG2_REG2, it will exhibit write 1 to clear behavior.
For reads, either address will return the $GMX(0)_TX_HG2_REG1 values.
----------------------------------------------------------------------------------------------------
===

 *** HG2 message CSRs end


     ==============================================================
     GMX(0)_PRT(0..0)_CBFC_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> PHYS_EN  R/W      0x00ff      0x00ff    Determines which ports will have physical	    |	
						  backpressure pause packets.			    |
						  The value pplaced in the Class Enable Vector	    |
						  field of the CBFC pause packet will be	    |
						  PHYS_EN | LOGL_EN				    |
 <47:32> LOGL_EN  R/W      0x00ff      0x00ff    Determines which ports will have logical	    |	
						  backpressure pause packets.			    |
						  The value pplaced in the Class Enable Vector	    |
						  field of the CBFC pause packet will be	    |
						  PHYS_EN | LOGL_EN				    |
 <31:16> PHYS_BP  R/W      0xffff      NS        When RX_EN is set and the HW is backpressuring any |	
						  ports (from either CBFC pause packets or the	    |
						  GMX_TX_OVR_BP[TX_PRT_BP] register) and all ports  |
						  indiciated by PHYS_BP are backpressured, simulate |
						  physical backpressure by defering all packets on  |
						  the transmitter.				    |
 <15:4>  NS       RAZ      NS          NS        Reserved				            |   
 <3>     BCK_EN   R/W      0x0         0         Forward CBFC Pause information to BP block	    |   
 <2>     DRP_EN	  R/W      0x0         0         Drop Control CBFC Pause Frames			    |   
 <1>     TX_EN    R/W      0x0         0         When set, allow for CBFC Pause Packets		    |	
						  Must be clear in HiGig2 mode i.e. when 	    |
						  GMX_TX_XAUI_CTL[HG_EN]=1 and			    |
						  GMX_RX_UDD_SKP[SKIP]=16.			    |
 <0>     RX_EN    R/W      0x0         0         When set, allow for CBFC Pause Packets		    |	
						  Must be clear in HiGig2 mode i.e. when 	    |
						  GMX_TX_XAUI_CTL[HG_EN]=1 and			    |
						  GMX_RX_UDD_SKP[SKIP]=16.			    |

Notes:
XOFF for a specific port is XOFF<prt> = (PHYS_EN<prt> & PHYS_BP) | (LOGL_EN<prt> & LOGL_BP<prt>)
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GMX(0)_TX(0..0)_CBFC_XOFF Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |   
 <15:0>  XOFF     R/W1     0x0         0         Which ports to backpressure			    |	
						  Do not write in HiGig2 mode i.e. when 	    |
						  GMX_TX_XAUI_CTL[HG_EN]=1 and			    |
						  GMX_RX_UDD_SKP[SKIP]=16.			    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GMX(0)_TX(0..0)_CBFC_XON Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |   
 <15:0>  XON      R/W1C    0x0         0         Which ports to stop backpressure		    |	
						  Do not write in HiGig2 mode i.e. when 	    |
						  GMX_TX_XAUI_CTL[HG_EN]=1 and			    |
						  GMX_RX_UDD_SKP[SKIP]=16.			    |
----------------------------------------------------------------------------------------------------
===

 * 
 * GMX_SOFT_BIST = Software BIST Control
 *

     ==============================================================
     GMX(0)_SOFT_BIST Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS         RAZ    NS          NS        Reserved				            |   
 <1>     START_BIST R/W    0           NS        Run BIST on all memories in the XAUI CLK domain    |   
 <0>     CLEAR_BIST R/W    0           NS        Choose between full BIST and CLEAR bist            |   
						  0=Run full BIST				    |
						  1=Only run clear BIST				    |
----------------------------------------------------------------------------------------------------
===


 * 
 * GMX_INF_MODE = Interface Mode
 *

     ==============================================================
     GMX(0)_INF_MODE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:12> NS       RAZ      NS          NS        Reserved				            |   
 <11:8>  SPEED    RO       NS          NS        Interface Speed			            |   
 <7:5>   NS       RAZ      NS          NS        Reserved				            |   
 <4>     MODE     RO       0           NS        Interface Electrical Operating Mode		    |   
						  0: SGMII (v1.8)				    |
						  1: XAUI (IEEE 802.3-2005)			    |
 <3:2>   NS       RAZ      NS          NS        Reserved				            |   
 <1>     EN       R/W      0           NS        Interface Enable				    |   
						  Must be set to enable the packet interface.	    |
						  Should be enabled before any other requests to    |
						  GMX including enabling port back pressure with    |
						  IPD_CTL_STATUS[PBP_EN]			    |
 <0>     TYPE     RO       0           NS        Interface Protocol Type			    |   
						  0: SGMII/1000Base-X				    |
						  1: XAUI					    |
----------------------------------------------------------------------------------------------------
===



 * 
 * DO NOT DOCUMENT THIS REGISTER - IT IS NOT OFFICIAL
 *

     ==============================================================
     GMX(0)_CLK_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved				            |   
 <0>     CLK_EN   R/W      0           0         Force the clock enables on		            |   
----------------------------------------------------------------------------------------------------
===



 *
 *                  FAU Timeout = Fetch and Add Unit Tag-Switch Timeout
 *
 * How many clokc ticks the FAU unit will wait for a tag-switch before timeing out.
 * for Queue 0.
 *

     ==============================================================
     IOB_FAU_TIMEOUT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  TOUT_VAL R/W      0x4         0x4       When a tag request arrives from the PP a timer is      
                                                 started associate with that PP. The timer which
                                                 increments every 256 eclks is compared to TOUT_VAL.
                                                 When the two are equal the IOB will flag the tag 
                                                 request to complete as a time-out tag operation.
                                                 The 256 count timer used to increment the PP
                                                 associated timer is always running so the first
                                                 increment of the PP associated timer may occur any
                                                 where within the first 256 eclks.  Note that '0'
						 is an illegal value.
 <12>    TOUT_ENB R/W      0x1         0         The enable for the FAU timeout feature.	        
                                                 '1' will enable the timeout, '0' will disable.                                            
 <63:13> NS        RAZ     NS          NS        Reserved					        
----------------------------------------------------------------------------------------------------
===

 *
 *                  NCB To CMB Response Priority Counter = NCB to CMB Response Priority Counter Enable and Timer Value
 *
 * Enables and supplies the timeout count for raising the priority of NCB Responses access to the CMB.
 *

     ==============================================================
     IOB_N2C_RSP_PRI_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <14:0>  CNT_VAL   R/W     0x0         0         Number of core clocks to wait before raising           
                                                 the priority for access to CMB.			                                        
 <15>    CNT_ENB   R/W     0x0         0         Enables the raising of CMB access priority	        
                                                 when CNT_VAL is reached.			                                        
 <63:16> NS        RAZ     NS          NS        Reserved					        
----------------------------------------------------------------------------------------------------
===

 
 *
 *                  IPD To CMB Store Priority Counter = IPD to CMB Store Priority Counter Enable and Timer Value
 *
 * Enables and supplies the timeout count for raising the priority of IPD Store access to the CMB.
 *

     ==============================================================
     IOB_I2C_PRI_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <14:0>  CNT_VAL   R/W      0x0         0        Number of core clocks to wait before raising           
                                                 the priority for access to CMB.		       	                                       
 <15>    CNT_ENB   R/W      0x0         0        Enables the raising of CMB access priority	        
                                                 when CNT_VAL is reached.			                                        
 <63:16> NS        RAZ      NS          NS       Reserved					        
----------------------------------------------------------------------------------------------------
===


 *
 *                  PKO To CMB Response Priority Counter = PKO to CMB Response Priority Counter Enable and Timer Value
 *
 * Enables and supplies the timeout count for raising the priority of PKO Load access to the CMB.
 *

     ==============================================================
     IOB_P2C_REQ_PRI_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <14:0>  CNT_VAL   R/W     0x0         0         Number of core clocks to wait before raising           
                                                 the priority for access to CMB.		                                            
 <15>    CNT_ENB   R/W     0x0         0         Enables the raising of CMB access priority              
                                                 when CNT_VAL is reached.		                                            
 <63:16> NS        RAZ     NS          NS        Reserved				                
----------------------------------------------------------------------------------------------------
===

 *
 *                  NCB To CMB L2C Priority Counter = NCB to CMB L2C Priority Counter Enable and Timer Value
 *
 * Enables and supplies the timeout count for raising the priority of NCB Store/Load access to the CMB.
 *

     ==============================================================
     IOB_N2C_L2C_PRI_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <14:0>  CNT_VAL   R/W     0x0         0         Number of core clocks to wait before raising           
                                                 the priority for access to CMB.		                                               
 <15>    CNT_ENB   R/W     0x0         0         Enables the raising of CMB access priority              
                                                 when CNT_VAL is reached.		                                               
 <63:16> NS        RAZ     NS          NS        Reserved				                
----------------------------------------------------------------------------------------------------
===

 *
 *                  DWB To CMB Priority Counter = Don't Write Back to CMB Priority Counter Enable and Timer Value
 *
 * Enables and supplies the timeout count for raising the priority of Don't Write Back request to the L2C.
 *

     ==============================================================
     IOB_DWB_PRI_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <14:0>  CNT_VAL   R/W     0x0         0         Number of core clocks to wait before raising           
                                                 the priority for access to CMB.			                                          
 <15>    CNT_ENB   R/W     0x0         0         Enables the raising of CMB access priority	        
                                                 when CNT_VAL is reached.			                                          
 <63:16> NS        RAZ     NS          NS        Reserved					        
----------------------------------------------------------------------------------------------------
===

 *
 *                  Request To NCB Priority Counter = Request to NCB Priority Counter Enable and Timer Value
 *
 * Enables and supplies the timeout count for raising the priority of Request transfers to the Outbound NCB.
 *

     ==============================================================
     IOB_OUTB_REQ_PRI_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <14:0>  CNT_VAL   R/W     0x0         0         Number of core clocks to wait before raising           
                                                 the priority for access to NCB.		                                             
 <15>    CNT_ENB   R/W     0x0         0         Enables the raising of NCB access priority	        
                                                 when CNT_VAL is reached.			                                             
 <63:16> NS        RAZ     NS          NS        Reserved					        
----------------------------------------------------------------------------------------------------
===

 *
 *                  Commit To NCB Priority Counter = Commit to NCB Priority Counter Enable and Timer Value
 *
 * Enables and supplies the timeout count for raising the priority of Commit request to the Outbound NCB.
 *

     ==============================================================
     IOB_OUTB_COM_PRI_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <14:0>  CNT_VAL   R/W     0x0         0         Number of core clocks to wait before raising           
                                                 the priority for access to NCB.		                                            
 <15>    CNT_ENB   R/W     0x0         0         Enables the raising of NCB access priority	        
                                                 when CNT_VAL is reached.			                                            
 <63:16> NS        RAZ     NS          NS        Reserved					        
----------------------------------------------------------------------------------------------------
===

 *
 *                  FPA To NCB Priority Counter = FPA Returns to NCB Priority Counter Enable and Timer Value
 *
 * Enables and supplies the timeout count for raising the priority of FPA Rreturn Page request to the Outbound NCB.
 *

     ==============================================================
     IOB_OUTB_FPA_PRI_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <14:0>  CNT_VAL   R/W     0x0         0         Number of core clocks to wait before raising           
                                                 the priority for access to NCB.		                                             
 <15>    CNT_ENB   R/W     0x0         0         Enables the raising of NCB access priority	        
                                                 when CNT_VAL is reached.			                                              
 <63:16> NS        RAZ     NS          NS        Reserved					        
----------------------------------------------------------------------------------------------------
===

 *
 *                  IOB Control Status = IOB Control and Status Register
 *
 * Provides control for IOB functions.
 *

     ==============================================================
     IOB_CTL_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     FAU_END   R/W     0x0         0         Toggles the endian style of the FAU. '0' is for        
                                                 big-endian and '1' is for little-endian.
 <1>     DWB_ENB   R/W     0x1         1         Enables the DWB function of the IOB.                   
 <2>     PKO_ENB   R/W     0x0         0         Toggles the endian style of the FAU for the PKO.       
						 '0' is for big-endian and '1' is for little-endian.
 <3>     INB_MAT   R/W1C   0x0         0         Was a match on the inbound bus to the inb pattern      
	                                         matchers. PASS2 FIELD.
 <4>     OUTB_MAT  R/W1C   0x0         0         Was a match on the outbound bus to the inb pattern     
	                                         matchers. PASS2 FIELD.
 <5>     RR_MODE   R/W     0x0         0         When set to '1' will enable Round-Robin mode of next   
						 transaction that could arbitrate for the XMB.
 <9:6>   XMC_PER   R/W     0x0         0         IBC XMC PUSH EARLY                                     
 <63:10> NS        RAZ     NS          NS        Reserved			                        
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  IOB_INT_SUM = IOB's Interrupt Summary Register
 *
 * Contains the diffrent interrupt summary bits of the IOB. This is a PASS-2 register.
 *

     ==============================================================
     IOB_INT_SUM Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     NP_SOP   R/W1C     0           0        Set when a SOP is followed by an SOP for the same      
                                                 port for a non-passthrough packet.
                                                 The first detected error associated with bits [5:0]
                                                 of this register will only be set here. A new bit
                                                 can be set when the previous reported bit is cleared.
 <1>     NP_EOP   R/W1C     0           0        Set when a EOP is followed by an EOP for the same      
                                                 port for a non-passthrough packet.
                                                 The first detected error associated with bits [5:0]
                                                 of this register will only be set here. A new bit
                                                 can be set when the previous reported bit is cleared.
 <2>     P_SOP    R/W1C     0           0        Set when a SOP is followed by an SOP for the same      
                                                 port for a passthrough packet.
                                                 The first detected error associated with bits [5:0]
                                                 of this register will only be set here. A new bit
                                                 can be set when the previous reported bit is cleared.
 <3>     P_EOP   R/W1C      0           0        Set when a EOP is followed by an EOP for the same      
                                                 port for a passthrough packet.
                                                 The first detected error associated with bits [5:0]
                                                 of this register will only be set here. A new bit
                                                 can be set when the previous reported bit is cleared.

 <4>     NP_DAT  R/W1C      0           0        Set when a data arrives before a SOP for the same      
                                                 port for a non-passthrough packet.
                                                 The first detected error associated with bits [5:0]
                                                 of this register will only be set here. A new bit
                                                 can be set when the previous reported bit is cleared.
 <5>     P_DAT   R/W1C      0           0        Set when a data arrives before a SOP for the same      
                                                 port for a passthrough packet.
                                                 The first detected error associated with bits [5:0]
                                                 of this register will only be set here. A new bit
                                                 can be set when the previous reported bit is cleared.
 <63:6>  NS       RAZ       NS          NS       Reserved		                                
----------------------------------------------------------------------------------------------------
===

 *
 *                  IOB_INT_ENB = IOB's Interrupt Enable
 *
 * The IOB's interrupt enable register. This is a PASS-2 register.
 *

     ==============================================================
     IOB_INT_ENB Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     NP_SOP   R/W      0           0         When set (1) and bit 0 of the IOB_INT_SUM              
                                                 register is asserted the IOB will assert an                                        
                                                 interrupt.				                                            
 <1>     NP_EOP   R/W      0           0         When set (1) and bit 1 of the IOB_INT_SUM              
                                                 register is asserted the IOB will assert an                                        
                                                 interrupt.				                                            
 <2>     P_SOP    R/W      0           0         When set (1) and bit 2 of the IOB_INT_SUM              
                                                 register is asserted the IOB will assert an                                        
                                                 interrupt.				                                            
 <3>     P_EOP    R/W      0           0         When set (1) and bit 3 of the IOB_INT_SUM              
                                                 register is asserted the IOB will assert an                                        
                                                 interrupt.				                                            
 <4>     NP_DAT   R/W      0           0         When set (1) and bit 4 of the IOB_INT_SUM              
                                                 register is asserted the IOB will assert an                                        
                                                 interrupt.				                                            
 <5>     P_DAT    R/W      0           0         When set (1) and bit 5 of the IOB_INT_SUM              
                                                 register is asserted the IOB will assert an                                        
                                                 interrupt.				                                            
 <63:6>  NS       RAZ      NS          NS        Reserved				                
----------------------------------------------------------------------------------------------------
===

 *
 *                  IOB_PKT_ERR = IOB Packet Error Register
 *
 * Provides status about the failing packet recevie error. This is a PASS-2 register.
 *

     ==============================================================
     IOB_PKT_ERR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <5:0>   PORT     RO       0x0         NS        When IOB_INT_SUM[3:0] bit is set, this field           
                                                 latches the failing port associate with the
                                                 IOB_INT_SUM[3:0] bit set.
 <11:6>  VPORT    RO       0x0         NS        When IOB_INT_SUM[3:0] bit is set, this field           
                                                 latches the failing vport associate with the
                                                 IOB_INT_SUM[3:0] bit set.
 <63:12> NS       RAZ      NS          NS        Reserved			                        
----------------------------------------------------------------------------------------------------
===
 


 *
 *                  IOB_INB_DATA_MATCH = IOB Inbound Data Match
 *
 * Match pattern for the inbound data to set the INB_MATCH_BIT. PASS-2 Register
 *

     ==============================================================
     IOB_INB_DATA_MATCH Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  DATA     R/W      0x0         NS        Pattern to match on the inbound NCB.                   
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  IOB_INB_CONTROL_MATCH = IOB Inbound Control Match
 *
 * Match pattern for the inbound control to set the INB_MATCH_BIT. PASS-2 Register
 *

     ==============================================================
     IOB_INB_CONTROL_MATCH Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:29> NS        RAZ     NS          NS        Reserved			                        
 <28:21> MASK     R/W      0x0         NS        Pattern to match on the inbound NCB.                   
 <20:17> OPC      R/W      0x0         NS        Pattern to match on the inbound NCB.                   
 <16:8>  DST      R/W      0x0         NS        Pattern to match on the inbound NCB.                   
 <7:0>   SRC      R/W      0x0         NS        Pattern to match on the inbound NCB.                   
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  IOB_INB_DATA_MATCH_ENB = IOB Inbound Data Match Enable
 *
 * Enables the match of the corresponding bit in the IOB_INB_DATA_MATCH reister. PASS-2 Register
 *

     ==============================================================
     IOB_INB_DATA_MATCH_ENB Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  DATA     R/W      0x0         NS        Bit to enable match of.                                
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  IOB_INB_CONTROL_MATCH_ENB = IOB Inbound Control Match Enable
 *
 * Enables the match of the corresponding bit in the IOB_INB_CONTROL_MATCH reister. PASS-2 Register
 *

     ==============================================================
     IOB_INB_CONTROL_MATCH_ENB Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:29> NS        RAZ     NS          NS        Reserved			                        
 <28:21> MASK     R/W      0x0         NS        Pattern to match on the inbound NCB.                   
 <20:17> OPC      R/W      0x0         NS        Pattern to match on the inbound NCB.                   
 <16:8>  DST      R/W      0x0         NS        Pattern to match on the inbound NCB.                   
 <7:0>   SRC      R/W      0x0         NS        Pattern to match on the inbound NCB.                   
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  IOB_OUTB_DATA_MATCH = IOB Outbound Data Match
 *
 * Match pattern for the outbound data to set the OUTB_MATCH_BIT. PASS-2 Register
 *

     ==============================================================
     IOB_OUTB_DATA_MATCH Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  DATA     R/W      0x0         NS        Pattern to match on the outbound NCB.                   
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  IOB_OUTB_CONTROL_MATCH = IOB Outbound Control Match
 *
 * Match pattern for the outbound control to set the OUTB_MATCH_BIT. PASS-2 Register
 *

     ==============================================================
     IOB_OUTB_CONTROL_MATCH Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:26> NS        RAZ     NS          NS        Reserved			                        
 <25:18> MASK     R/W      0x0         NS        Pattern to match on the outbound NCB.                   
 <17>    EOT      R/W      0x0         NS        Pattern to match on the outbound NCB.                   
 <16:9>  DST      R/W      0x0         NS        Pattern to match on the outbound NCB.                   
 <8:0>   SRC      R/W      0x0         NS        Pattern to match on the outbound NCB.                   
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  IOB_OUTB_DATA_MATCH_ENB = IOB Outbound Data Match Enable
 *
 * Enables the match of the corresponding bit in the IOB_OUTB_DATA_MATCH reister. PASS-2 Register
 *

     ==============================================================
     IOB_OUTB_DATA_MATCH_ENB Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  DATA     R/W      0x0         NS        Bit to enable match of.                                
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  IOB_OUTB_CONTROL_MATCH_ENB = IOB Outbound Control Match Enable
 *
 * Enables the match of the corresponding bit in the IOB_OUTB_CONTROL_MATCH reister. PASS-2 Register
 *

     ==============================================================
     IOB_OUTB_CONTROL_MATCH_ENB Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:26> NS        RAZ     NS          NS        Reserved			                        
 <25:18> MASK     R/W      0x0         NS        Pattern to match on the outbound NCB.                   
 <17>    EOT      R/W      0x0         NS        Pattern to match on the outbound NCB.                   
 <16:9>  DST      R/W      0x0         NS        Pattern to match on the outbound NCB.                   
 <8:0>   SRC      R/W      0x0         NS        Pattern to match on the outbound NCB.                   
----------------------------------------------------------------------------------------------------
===

 *
 *                  IOB_TO_CMB_CREDITS = IOB To CMB Credits
 *
 * Controls the number of reads and writes that may be outstanding to the L2C (via the CMB).
 *

     ==============================================================
     IOB_TO_CMB_CREDITS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:9>  NS       RAZ     NS          NS        Reserved			                    |   
 <8:6>   PKO_RD   R/W     0x0         NS        Number of PKO reads that can be out to L2C where    |   
 						0 == 8-credits.                                     |
 <5:3>   NCB_RD   R/W     0x0         NS        Number of NCB reads that can be out to L2C where    |   
 						0 == 8-credits.                                     |
 <2:0>   NCB_WR   R/W     0x0         NS        Number of NCB/PKI writes that can be out to L2C     |   
 						where 0 == 8-credits.                               |
----------------------------------------------------------------------------------------------------
===

 *
 *                  IOB_BIST_STATUS = BIST Status of IOB Memories
 *
 * The result of the BIST run on the IOB memories.
 *

     ==============================================================
     IOB_BIST_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     ICD      RO       0x0         0         icd_ncb_fifo_bist_status                               
 <1>     IBD      RO       0x0         0         ibd_bist_mem0_status                                   
 <2>     ICRP1    RO       0x0         0         icr_pko_bist_mem1_status                               
 <3>     ICRP0    RO       0x0         0         icr_pko_bist_mem0_status                               
 <4>     ICRN1    RO       0x0         0         icr_ncb_bist_mem1_status                               
 <5>     ICRN0    RO       0x0         0         icr_ncb_bist_mem0_status                               
 <6>     IBRQ1    RO       0x0         0         ibrq_bist_req_fifo1_status                             
 <7>     IBRQ0    RO       0x0         0         ibrq_bist_req_fifo0_status                             
 <8>     ICNRT    RO       0x0         0         icnr_tag_cb_reg_fifo_bist_status                       
 <9>     IBR1     RO       0x0         0         ibr_bist_rsp_fifo1_status                              
 <10>    IBR0     RO       0x0         0         ibr_bist_rsp_fifo0_status                              
 <11>    IBDR1    RO       0x0         0         ibdr_bist_req_fifo1_status                             
 <12>    IBDR0    RO       0x0         0         ibdr_bist_req_fifo0_status                             
 <13>    ICNR0    RO       0x0         0         icnr_reg_mem0_bist_status                              
 <14>    ICNR1    RO       0x0         0         Reserved                                               
 <15>    ICR1     RO       0x0         0         icr_bist_req_fifo1_status                              
 <16>    ICR0     RO       0x0         0         icr_bist_req_fifo0_status                              
 <17>    ICNRCB   RO       0x0         0         icnr_cb_reg_fifo_bist_status                           
 <18>    IOCFIF   RO       0x0         0         iocfif_bist_status                                     
 <19>    RSDFIF   RO       0x0         0         rsdfif_bist_status                                     
 <20>    IORFIF   RO       0x0         0         iorfif_bist_status                                     
 <21>    XMCFIF   RO       0x0         0         xmcfif_bist_status                                     
 <22>    XMDFIF   RO       0x0         0         xmdfif_bist_status                                     
 <63:23> NS       RAZ      NS          NS        Reserved				 		
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_1ST_MBUFF_SKIP = IPD First MBUFF Word Skip Size
 *
 * The number of words that the IPD will skip when writing the first MBUFF.
 *

     ==============================================================
     IPD_1ST_MBUFF_SKIP Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <5:0>   SKIP_SZ  R/W      0           0         The number of 8-byte words from the top of the         
                                                 1st MBUFF that the IPD will store the next-pointer.
                                                 Legal values are 0 to 32, where the MAX value
                                                 is also limited to:
						 IPD_PACKET_MBUFF_SIZE[MB_SIZE] - 18.
                                                 Must be at least 16 when IPD_CTL_STATUS[NO_WPTR]
                                                 is set.
 <63:6>  NS       RAZ      NS          NS        Reserved					        
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_NOT_1ST_MBUFF_SKIP = IPD Not First MBUFF Word Skip Size
 *
 * The number of words that the IPD will skip when writing any MBUFF that is not the first.
 *

     ==============================================================
     IPD_NOT_1ST_MBUFF_SKIP Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <5:0>   SKIP_SZ  R/W      0           0         The number of 8-byte words from the top of any         
                                                 MBUFF, that is not the 1st MBUFF, that the IPD                                                     
                                                 will write the next-pointer.			                                                    
                                                 Legal values are 0 to 32, where the MAX value
                                                 is also limited to:
						 IPD_PACKET_MBUFF_SIZE[MB_SIZE] - 16.
 <63:6>  NS       RAZ      NS          NS        Reserved					        
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  IPD_PACKET_MBUFF_SIZE = IPD's PACKET MUBUF Size In Words
 *
 * The number of words in a MBUFF used for packet data store.
 *

     ==============================================================
     IPD_PACKET_MBUFF_SIZE Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  MB_SIZE  R/W       32          32       The number of 8-byte words in a MBUF.                 
                                                 This must be a number in the range of 32 to
                                                 2048.
                                                 This is also the size of the FPA's          	                                            
                                                 Queue-0 Free-Page.
 <63:12> NS       RAZ       NS          NS       Reserved				                
----------------------------------------------------------------------------------------------------
===


 *
 *                  IPD_CTL_STATUS = IPD's Control Status Register
 *
 * The number of words in a MBUFF used for packet data store.
 *

     ==============================================================
     IPD_CTL_STATUS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     IPD_EN   R/W      0           0         When set '1' enable the operation of the IPD.          
                                                 When clear '0', the IPD will appear to the
						 IOB-arbiter to be applying backpressure, this
						 causes the IOB-Arbiter to not send grants to NCB
						 devices requesting to send packet data to the IPD.
 <2:1>   OPC_MODE R/W      0           0         0 ==> All packet data (and next buffer pointers)       
					         is written through to memory.
						 1 ==> All packet data (and next buffer pointers) is
						 written into the cache.
						 2 ==> The first aligned cache block holding the
						 packet data (and initial next buffer pointer) is
						 written to the L2 cache, all remaining cache blocks
						 are not written to the L2 cache.
						 3 ==> The first two aligned cache blocks holding
						 the packet data (and initial next buffer pointer)
						 are written to the L2 cache, all remaining cache
						 blocks are not written to the L2 cache.
 <3>     PBP_EN   R/W      0           0         Port back pressure enable. When set '1' enables        
                                                 the sending of port level backpressure to the
                                                 Octane input-ports. The application should NOT
                                                 de-assert this bit after asserting it. The
                                                 receivers of this bit may have been put into
                                                 backpressure mode and can only be released by
                                                 IPD informing them that the backpressure has
                                                 been released.
						 GMXX_INF_MODE[EN] must be set to '1' for each
						 packet interface which requires port back pressure
						 prior to setting PBP_EN to '1'.
 <4>     WQE_LEND R/W      0           0         Changes WQE to little endian writes to L2C             
 <5>     PKT_LEND R/W      0           0         Changes PKT to little endian writes to L2C             
 <6>     NADDBUF  R/W      0           0         When IPD_CTL_STATUS[NADDBUF] is set,                   
                                                 IPD_PORT_BP_COUNTERS_PAIR(port)[CNT_VAL],
                                                 IPD_PORT_BP_COUNTERS2_PAIR(port)[CNT_VAL] and
						 IPD_PORT_BP_COUNTERS3_PAIR(port)[CNT_VAL]
                                                 WILL NOT be incremented when IPD allocates a
                                                 buffer for a packet on the port.
 <7>     ADDPKT   R/W      0           0         When IPD_CTL_STATUS[ADDPKT] is set,                    
                                                 IPD_PORT_BP_COUNTERS_PAIR(port)[CNT_VAL],
                                                 IPD_PORT_BP_COUNTERS2_PAIR(port)[CNT_VAL] and
                                                 IPD_PORT_BP_COUNTERS3_PAIR(port)[CNT_VAL]
                                                 WILL be incremented by one for every work
                                                 queue entry that is sent to POW.
 <8>     RESET    R/W      0           0         When set '1' causes a reset of the IPD, except         
                                                 RSL.
 <9>     LEN_M8   R/W      0           1         Setting of this bit will subtract 8 from the           
                                                 data-length field in the header written to the
                                                 POW and the top of a MBUFF.
                                                 OCTEAN generates a length that includes the
                                                 length of the data + 8 for the header-field. By
                                                 setting this bit the 8 for the instr-field will
                                                 not be included in the length field of the header.
						 NOTE: IPD is compliant with the spec when this
                                                 field is '1'.
<10>     PKT_OFF   R/W      0           0        When clear '0' the IPD working normaly,                
						 buffering the received packet data. When set '1'
						 the IPD will not buffer the received packet data.
<11>     IPD_FULL  R/W      0           0        When clear '0' the IPD acts normaly.                   
						 When set '1' the IPD drive the IPD_BUFF_FULL line to
 						 the IOB-arbiter, telling it to not give grants to
						 NCB devices sending packet data.
<12>     PQ_NABUF  R/W      0           0        When set IPD_PORT_QOS_@_CNT WILL NOT be                
                                                 incremented when IPD allocates a buffer for a
                                                 packet.
<13>     PQ_APKT   R/W      0           0        When set IPD_PORT_QOS_@_CNT WILL be incremented        
                                                 by one for every work queue entry that is sent to
                                                 POW.
<14>     NO_WPTR   R/W      0           0        When set '1' the WQE pointers will not be used and     
                                                 the WQE will be located at the front of the packet.
                                                 When set:
                                                   - IPD_WQE_FPA_QUEUE[WQE_QUE] is not used
                                                   - IPD_1ST_MBUFF_SKIP[SKIP_SZ] must be at least 16
                                                   - If 16 <= IPD_1ST_MBUFF_SKIP[SKIP_SZ] <= 31 then
                                                     the WQE will be written into the first 128B
                                                     cache block in the first buffer that contains
                                                     the packet.
                                                   - If IPD_1ST_MBUFF_SKIP[SKIP_SZ] == 32 then
                                                     the WQE will be written into the second 128B
                                                     cache block in the first buffer that contains
                                                     the packet.
 <15>    CLKEN    R/W      0           0         Controls the conditional clocking within IPD	    |   
						  0=Allow HW to control the clocks		    |
						  1=Force the clocks to be always on		    |
<63:16>  NS        RAZ      NS          NS       Reserved					        
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_WQE_FPA_QUEUE = IPD Work-Queue-Entry FPA Page Size
 *
 * Which FPA Queue (0-7) to fetch page-pointers from for WQE's
 *

     ==============================================================
     IPD_WQE_FPA_QUEUE Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <2:0>   WQE_QUE  R/W      1           1         Which FPA Queue to fetch page-pointers                 
                                                 from for WQE's.			             	                                      
                                                 Not used when IPD_CTL_STATUS[NO_WPTR] is set.
 <63:3>  NS       RAZ      NS          NS        Reserved				                
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  IPD_PORT@_BP_PAGE_CNT = IPD Port Backpressure Page Count
 *
 * The number of pages in use by the port that when exceeded, backpressure will be applied to the port.
 * See also IPD_PORT@_BP_PAGE_CNT2
 * See also IPD_PORT@_BP_PAGE_CNT3
 *

     ==============================================================
     IPD_PORT(0..3,32..35)_BP_PAGE_CNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <16:0>  PAGE_CNT R/W      0x0         0         The number of page pointers assigned to                
                                                 the port, that when exceeded will cause	       	                                       
                                                 back-pressure to be applied to the port.	       	                                       
                                                 This value is in 256 page-pointer increments,
                                                 (i.e. 0 = 0-page-ptrs, 1 = 256-page-ptrs,..)
 <17>    BP_ENB   R/W      0x0         0         When set '1' BP will be applied, if '0' BP will        
                                                 not be applied to port.
 <63:18> NS       RAZ      NS          NS        Reserved					        
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_SUB_PORT_BP_PAGE_CNT = IPD Subtract Port Backpressure Page Count
 *
 * Will add the value to the indicated port count register, the number of pages supplied. The value added should
 * be the 2's complement of the value that needs to be subtracted. Users add 2's complement values to the
 * port-mbuf-count register to return (lower the count) mbufs to the counter in order to avoid port-level
 * backpressure being applied to the port. Backpressure is applied when the MBUF used count of a port exceeds the
 * value in the IPD_PORT@_BP_PAGE_CNT, IPD_PORT@_BP_PAGE_CNT2, and IPD_PORT@_BP_PAGE_CNT3.
 *
 * This register can't be written from the PCI via a window write.
 *

     ==============================================================
     IPD_SUB_PORT_BP_PAGE_CNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <24:0>  PAGE_CNT R/W      NS          0         The number of page pointers to add to                  
                                                 the port counter pointed to by the	                                                
                                                 PORT Field.				        	                                        
 <30:25> PORT     R/W      NS          0         The port to add the PAGE_CNT field to.	                
 <63:31> NS       RAZ      NS          NS        Reserved					        
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_1st_NEXT_PTR_BACK = IPD First Next Pointer Back Values
 *
 * Contains the Back Field for use in creating the Next Pointer Header for the First MBUF
 *

     ==============================================================
     IPD_1st_NEXT_PTR_BACK Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>   BACK     R/W      0x0         0         Used to find head of buffer from the nxt-hdr-ptr.      
 <63:4>  NS       RAZ      NS          NS        Reserved					        
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_2nd_NEXT_PTR_BACK = IPD Second Next Pointer Back Value
 *
 * Contains the Back Field for use in creating the Next Pointer Header for the First MBUF
 *

     ==============================================================
     IPD_2nd_NEXT_PTR_BACK Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>   BACK     R/W      0x0         0         Used to find head of buffer from the nxt-hdr-ptr.      
 <63:4>  NS       RAZ      NS          NS        Reserved					        
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  IPD_INTERRUPT_ENB = IPD Interrupt Enable Register
 *
 * Used to enable the various interrupting conditions of IPD
 *

     ==============================================================
     IPD_INT_ENB Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     PRC_PAR0 R/W      0x0         0         Enable parity error interrupts for bits                
                                                 [31:0] of the PBM memory.			                                                    
 <1>     PRC_PAR1 R/W      0x0         0         Enable parity error interrupts for bits                
                                                 [63:32] of the PBM memory.			                                                    
 <2>     PRC_PAR2 R/W      0x0         0         Enable parity error interrupts for bits                
                                                 [95:64] of the PBM memory.			                                  
 <3>     PRC_PAR3 R/W      0x0         0         Enable parity error interrupts for bits                
                                                 [127:96] of the PBM memory.			                                                    
 <4>     BP_SUB   R/W      0x0         0         Enables interrupts when a backpressure subtract        
                                                 has an illegal value.
 <5>     DC_OVR   R/W      0x0         0       	 Allows an interrupt to be sent when the                
                                                 corresponding bit in the IPD_INT_SUM is set.
 <6>     CC_OVR   R/W      0x0         0         Allows an interrupt to be sent when the                
                                                 corresponding bit in the IPD_INT_SUM is set.
 <7>     C_COLL   R/W      0x0         0         Allows an interrupt to be sent when the                
                                                 corresponding bit in the IPD_INT_SUM is set.
 <8>     D_COLL   R/W      0x0         0         Allows an interrupt to be sent when the                
                                                 corresponding bit in the IPD_INT_SUM is set.
 <9>     BC_OVR   R/W      0x0         0         Allows an interrupt to be sent when the                
                                                 corresponding bit in the IPD_INT_SUM is set.
 <10>    PQ_ADD   R/W      0x0         0         Allows an interrupt to be sent when the                
                                                 corresponding bit in the IPD_INT_SUM is set.
 <11>    PQ_SUB   R/W      0x0         0         Allows an interrupt to be sent when the                
                                                 corresponding bit in the IPD_INT_SUM is set.
 <63:12> NS       RAZ      NS          NS        Reserved					        
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_INTERRUPT_SUM = IPD Interrupt Summary Register
 *
 * Set when an interrupt condition occurs, write '1' to clear.
 *

     ==============================================================
     IPD_INT_SUM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     PRC_PAR0 R/W1C    0x0         0         Set when a parity error is dected for bits             
                                                 [31:0] of the PBM memory.			                                                    
 <1>     PRC_PAR1 R/W1C    0x0         0         Set when a parity error is dected for bits             
                                                 [63:32] of the PBM memory.			                                 
 <2>     PRC_PAR2 R/W1C    0x0         0         Set when a parity error is dected for bits             
                                                 [95:64] of the PBM memory.			                                 
 <3>     PRC_PAR3 R/W1C    0x0         0         Set when a parity error is dected for bits             
                                                 [127:96] of the PBM memory.			                                                    
 <4>     BP_SUB   R/W1C    0x0         0         Set when a backpressure subtract is done with a        
                                                 supplied illegal value.
 <5>     DC_OVR   R/W1C    0x0         0         Set when the data credits to the IOB overflow.         
 <6>     CC_OVR   R/W1C    0x0         0         Set when the command credits to the IOB overflow.      
 <7>     C_COLL   R/W1C    0x0         0         Set when the packet/WQE commands to be sent to IOB     
						 collides.
 <8>     D_COLL   R/W1C    0x0         0         Set when the packet/WQE data to be sent to IOB         
						 collides.
 <9>     BC_OVR   R/W1C    0x0         0         Set when the byte-count to send to IOB overflows.      
 <10>    PQ_ADD   R/W1C    0x0         0         Set when a port-qos does an add to the count           
                                                 that causes the counter to wrap.
 <11>    PQ_SUB   R/W1C    0x0         0         Set when a port-qos does an sub to the count           
                                                 that causes the counter to wrap.
 <63:12> NS       RAZ      NS          NS        Reserved					        
----------------------------------------------------------------------------------------------------
===


 *
 *                  IPD_SUB_PORT_FCS = IPD Subtract Ports FCS Register
 *
 * When set '1' the port corresponding to the bit set will subtract 4 bytes from the end of
 * the packet.
 *

     ==============================================================
     IPD_SUB_PORT_FCS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PORT_BIT  R/W      0xffffffff  0xffffffff    When set '1', the port corresponding to the bit   
                                                      position set, will subtract the FCS for packets
                                                      on that port. 
 <35:32> NS        RAZ      NS           NS           Reserved					        
 <39:36> PORT_BIT2 R/W      0xf          0xf          When set '1', the port corresponding to the bit   
                                                      position set, will subtract the FCS for packets
                                                      on that port. 
 <63:40> NS        RAZ      NS           NS           Reserved					        
----------------------------------------------------------------------------------------------------
===


 *
 *                  IPD_QOS0_RED_MARKS = IPD QOS 0 Marks Red High Low
 *
 * Set the pass-drop marks for qos level.
 *

     ==============================================================
     IPD_QOS0_RED_MARKS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PASS     R/W      0x0         NS        Packets will be passed when the average value of    
						 IPD_QUE0_FREE_PAGE_CNT is larger than this value.
 <63:32> DROP     R/W      0x0         NS        Packets will be dropped when the average value of   
                                                 IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                                 this value.			                                 
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_QOS1_RED_MARKS = IPD QOS 1 Marks Red High Low
 *
 * Set the pass-drop marks for qos level.
 *

     ==============================================================
     IPD_QOS1_RED_MARKS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PASS     R/W      0x0         NS        Packets will be passed when the average value of    
						 IPD_QUE0_FREE_PAGE_CNT is larger than this value.
 <63:32> DROP     R/W      0x0         NS        Packets will be dropped when the average value of   
                                                 IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                                 this value.			                                 
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_QOS2_RED_MARKS = IPD QOS 2 Marks Red High Low
 *
 * Set the pass-drop marks for qos level.
 *

     ==============================================================
     IPD_QOS2_RED_MARKS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PASS     R/W      0x0         NS        Packets will be passed when the average value of    
						 IPD_QUE0_FREE_PAGE_CNT is larger than this value.
 <63:32> DROP     R/W      0x0         NS        Packets will be dropped when the average value of   
                                                 IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                                 this value.			                                 
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_QOS3_RED_MARKS = IPD QOS 3 Marks Red High Low
 *
 * Set the pass-drop marks for qos level.
 *

     ==============================================================
     IPD_QOS3_RED_MARKS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PASS     R/W      0x0         NS        Packets will be passed when the average value of    
						 IPD_QUE0_FREE_PAGE_CNT is larger than this value.
 <63:32> DROP     R/W      0x0         NS        Packets will be dropped when the average value of   
                                                 IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                                 this value.			                                 
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_QOS4_RED_MARKS = IPD QOS 4 Marks Red High Low
 *
 * Set the pass-drop marks for qos level.
 *

     ==============================================================
     IPD_QOS4_RED_MARKS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PASS     R/W      0x0         NS        Packets will be passed when the average value of    
						 IPD_QUE0_FREE_PAGE_CNT is larger than this value.
 <63:32> DROP     R/W      0x0         NS        Packets will be dropped when the average value of   
                                                 IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                                 this value.			                                 
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_QOS5_RED_MARKS = IPD QOS 5 Marks Red High Low
 *
 * Set the pass-drop marks for qos level.
 *

     ==============================================================
     IPD_QOS5_RED_MARKS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PASS     R/W      0x0         NS        Packets will be passed when the average value of    
						 IPD_QUE0_FREE_PAGE_CNT is larger than this value.
 <63:32> DROP     R/W      0x0         NS        Packets will be dropped when the average value of   
                                                 IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                                 this value.			                                 
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_QOS6_RED_MARKS = IPD QOS 6 Marks Red High Low
 *
 * Set the pass-drop marks for qos level.
 *

     ==============================================================
     IPD_QOS6_RED_MARKS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PASS     R/W      0x0         NS        Packets will be passed when the average value of    
						 IPD_QUE0_FREE_PAGE_CNT is larger than this value.
 <63:32> DROP     R/W      0x0         NS        Packets will be dropped when the average value of   
                                                 IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                                 this value.			                                 
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_QOS7_RED_MARKS = IPD QOS 7 Marks Red High Low
 *
 * Set the pass-drop marks for qos level.
 *

     ==============================================================
     IPD_QOS7_RED_MARKS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PASS     R/W      0x0         NS        Packets will be passed when the average value of    
						 IPD_QUE0_FREE_PAGE_CNT is larger than this value.
 <63:32> DROP     R/W      0x0         NS        Packets will be dropped when the average value of   
                                                 IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                                 this value.			                                 
----------------------------------------------------------------------------------------------------
===

 *
 * IPD_PORT_BP_COUNTERS_PAIR@ = MBUF Counters port Ports used to generate Back Pressure Per Port.
 * See also IPD_PORT_BP_COUNTERS2_PAIR@
 * See also IPD_PORT_BP_COUNTERS3_PAIR@
 *

     ==============================================================
     IPD_PORT_BP_COUNTERS_PAIR(0..3,32..35) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:25> NS       RAZ      NS          NS        Reserved				            |   
 <24:0>  CNT_VAL  RO       0x0         NS        Number of MBUFs being used by data on this port.   |   
----------------------------------------------------------------------------------------------------
===
   
 *
 *                  IPD_RED_PORT_ENABLE = IPD RED Port Enable
 *
 * Set the pass-drop marks for qos level.
 *

     ==============================================================
     IPD_RED_PORT_ENABLE Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <35:0>  PRT_ENB  R/W      0x0         0         The bit position will enable the corresponding      
                                                 Ports ability to have packets dropped by RED
                                     		 probability.
 <49:36> AVG_DLY  R/W      0x0         NS        Number (core clocks periods + 10) * 8 to wait       
                                                 before calculating the moving average for each
						 QOS level.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <63:50> PRB_DLY  R/W      0x0         0         Number (core clocks periods + 68) * 8 to wait       
	                                         before calculating the new packet drop
						 probability for each QOS level.
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_RED_QUE0_PARAM = IPD RED Queue-0 Parameters
 *
 * Value control the Passing and Dropping of packets by the red engine for QOS Level-0.
 *

     ==============================================================
     IPD_RED_QUE0_PARAM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PRB_CON  R/W      0x0         NS        Used in computing the probability of a packet being  
                                                 passed or drop by the WRED engine. The field is
                                                 calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                 PASS and DROP are the field from the
                                                 IPD_QOS0_RED_MARKS CSR.
 <39:32> AVG_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Average Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents AVG_CON/256 of the Average
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 NEW_CON must be equal to 256.                      
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <47:40> NEW_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Actual Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents NEW_CON/256 of the Actual
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 AVG_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <48>    USE_PCNT R/W      0           0         When set '1' red will use the actual Packet-Page     
                                                 Count in place of the Average for RED calculations.
 <63:49> NS       RAZ      NS          NS        Reserved					      
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_RED_QUE1_PARAM = IPD RED Queue-1 Parameters
 *
 * Value control the Passing and Dropping of packets by the red engine for QOS Level-1.
 *

     ==============================================================
     IPD_RED_QUE1_PARAM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PRB_CON  R/W      0x0         NS        Used in computing the probability of a packet being  
                                                 passed or drop by the WRED engine. The field is
                                                 calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                 PASS and DROP are the field from the
                                                 IPD_QOS1_RED_MARKS CSR.
 <39:32> AVG_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Average Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents AVG_CON/256 of the Average
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 NEW_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <47:40> NEW_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Actual Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents NEW_CON/256 of the Actual
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 AVG_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <48>    USE_PCNT R/W      0           0         When set '1' red will use the actual Packet-Page     
                                                 Count in place of the Average for RED calculations.
 <63:49> NS       RAZ      NS          NS        Reserved					      
----------------------------------------------------------------------------------------------------
===
 *
 *                  IPD_RED_QUE2_PARAM = IPD RED Queue-2 Parameters
 *
 * Value control the Passing and Dropping of packets by the red engine for QOS Level-2.
 *

     ==============================================================
     IPD_RED_QUE2_PARAM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PRB_CON  R/W      0x0         NS        Used in computing the probability of a packet being  
                                                 passed or drop by the WRED engine. The field is
                                                 calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                 PASS and DROP are the field from the
                                                 IPD_QOS2_RED_MARKS CSR.
 <39:32> AVG_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Average Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents AVG_CON/256 of the Average
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 NEW_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <47:40> NEW_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Actual Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents NEW_CON/256 of the Actual
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 AVG_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <48>    USE_PCNT R/W      0           0         When set '1' red will use the actual Packet-Page     
                                                 Count in place of the Average for RED calculations.
 <63:49> NS       RAZ      NS          NS        Reserved					      
----------------------------------------------------------------------------------------------------
===
 *
 *                  IPD_RED_QUE3_PARAM = IPD RED Queue-3 Parameters
 *
 * Value control the Passing and Dropping of packets by the red engine for QOS Level-3.
 *

     ==============================================================
     IPD_RED_QUE3_PARAM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PRB_CON  R/W      0x0         NS        Used in computing the probability of a packet being  
                                                 passed or drop by the WRED engine. The field is
                                                 calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                 PASS and DROP are the field from the
                                                 IPD_QOS3_RED_MARKS CSR.
 <39:32> AVG_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Average Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents AVG_CON/256 of the Average
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 NEW_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <47:40> NEW_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Actual Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents NEW_CON/256 of the Actual
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 AVG_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <48>    USE_PCNT R/W      0           0         When set '1' red will use the actual Packet-Page     
                                                 Count in place of the Average for RED calculations.
 <63:49> NS       RAZ      NS          NS        Reserved					      
----------------------------------------------------------------------------------------------------
===
 *
 *                  IPD_RED_QUE4_PARAM = IPD RED Queue-4 Parameters
 *
 * Value control the Passing and Dropping of packets by the red engine for QOS Level-4.
 *

     ==============================================================
     IPD_RED_QUE4_PARAM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PRB_CON  R/W      0x0         NS        Used in computing the probability of a packet being  
                                                 passed or drop by the WRED engine. The field is
                                                 calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                 PASS and DROP are the field from the
                                                 IPD_QOS4_RED_MARKS CSR.
 <39:32> AVG_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Average Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents AVG_CON/256 of the Average
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 NEW_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <47:40> NEW_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Actual Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents NEW_CON/256 of the Actual
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 AVG_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <48>    USE_PCNT R/W      0           0         When set '1' red will use the actual Packet-Page     
                                                 Count in place of the Average for RED calculations.
 <63:49> NS       RAZ      NS          NS        Reserved					      
----------------------------------------------------------------------------------------------------
===
 *
 *                  IPD_RED_QUE5_PARAM = IPD RED Queue-5 Parameters
 *
 * Value control the Passing and Dropping of packets by the red engine for QOS Level-5.
 *

     ==============================================================
     IPD_RED_QUE5_PARAM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PRB_CON  R/W      0x0         NS        Used in computing the probability of a packet being  
                                                 passed or drop by the WRED engine. The field is
                                                 calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                 PASS and DROP are the field from the
                                                 IPD_QOS5_RED_MARKS CSR.
 <39:32> AVG_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Average Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents AVG_CON/256 of the Average
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 NEW_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <47:40> NEW_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Actual Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents NEW_CON/256 of the Actual
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 AVG_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <48>    USE_PCNT R/W      0           0         When set '1' red will use the actual Packet-Page     
                                                 Count in place of the Average for RED calculations.
 <63:49> NS       RAZ      NS          NS        Reserved					      
----------------------------------------------------------------------------------------------------
===
 *
 *                  IPD_RED_QUE6_PARAM = IPD RED Queue-6 Parameters
 *
 * Value control the Passing and Dropping of packets by the red engine for QOS Level-6.
 *

     ==============================================================
     IPD_RED_QUE6_PARAM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PRB_CON  R/W      0x0         NS        Used in computing the probability of a packet being  
                                                 passed or drop by the WRED engine. The field is
                                                 calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                 PASS and DROP are the field from the
                                                 IPD_QOS6_RED_MARKS CSR.
 <39:32> AVG_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Average Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents AVG_CON/256 of the Average
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 NEW_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <47:40> NEW_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Actual Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents NEW_CON/256 of the Actual
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 AVG_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <48>    USE_PCNT R/W      0           0         When set '1' red will use the actual Packet-Page     
                                                 Count in place of the Average for RED calculations.
 <63:49> NS       RAZ      NS          NS        Reserved					      
----------------------------------------------------------------------------------------------------
===
 *
 *                  IPD_RED_QUE7_PARAM = IPD RED Queue-7 Parameters
 *
 * Value control the Passing and Dropping of packets by the red engine for QOS Level-7.
 *

     ==============================================================
     IPD_RED_QUE7_PARAM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PRB_CON  R/W      0x0         NS        Used in computing the probability of a packet being  
                                                 passed or drop by the WRED engine. The field is
                                                 calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                 PASS and DROP are the field from the
                                                 IPD_QOS7_RED_MARKS CSR.
 <39:32> AVG_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Average Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents AVG_CON/256 of the Average
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 NEW_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <47:40> NEW_CON  R/W      0x0         NS        This value is used control how much of the present   
                                                 Actual Queue Size is used to calculate the new 
                                                 Average Queue Size. The value is a number from 0
                                                 256, which represents NEW_CON/256 of the Actual
                                                 Queue Size that will be used in the calculation.
                                                 The number in this field plus the value of
                                                 AVG_CON must be equal to 256.
                                                 Larger AVG_DLY values cause the moving averages
                                                 of ALL QOS levels to track changes in the actual
                                                 free space more slowly. Smaller NEW_CON (and
                                                 larger AVG_CON) values can have a similar effect,
                                                 but only affect an individual QOS level, rather
                                                 than all.
 <48>    USE_PCNT R/W      0           0         When set '1' red will use the actual Packet-Page     
                                                 Count in place of the Average for RED calculations.
 <63:49> NS       RAZ      NS          NS        Reserved					      
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  IPD_PTR_COUNT = IPD Page Pointer Count
 *
 * Shows the number of WQE and Packet Page Pointers stored in the IPD.
 *

     ==============================================================
     IPD_PTR_COUNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <6:0>   WQE_PCNT RO       0x0         0         Number of page pointers for WQE storage that are     
                                                 buffered in the IPD. The total count is the value
                                                 of this buffer plus the field [WQEV_CNT]. For
						 PASS-1 (which does not have the WQEV_CNT field)
						 when the value of this register is '0' there still
                                                 may be 1 pointer being held by IPD.
 <13:7>  PKT_PCNT RO       0x0         0         This value plus PFIF_CNT plus                        
	                                         IPD_PRC_PORT_PTR_FIFO_CTL[MAX_PKT] is the number 
 						 of PKT Page Pointers in IPD.
 <16:14> PFIF_CNT RO       0x0         0         See PKT_PCNT.                                        
 <17>    WQEV_CNT RO       0x0         0         WQE Ptr Valid. This value is '1' when a WQE          
						 is being for use by the IPD. The value of this
						 field should be added to tha value of the
						 WQE_PCNT field, of this register, for a total
						 count of the WQE Page Pointers being held by IPD.
                                                 When IPD_CTL_STATUS[NO_WPTR] is set '1' this field
                                                 represents a Packet-Pointer NOT a WQE pointer.
 <18>    PKTV_CNT RO       0x0         0         PKT Ptr Valid.                                       
 <63:19> NS       RAZ      NS          NS        Reserved					      
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_BP_PRT_RED_END = IPD Backpressure Port RED Enable
 *
 * When IPD applies backpressure to a PORT and the corresponding bit in this register is set,
 * the RED Unit will drop packets for that port.
 *

     ==============================================================
     IPD_BP_PRT_RED_END Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <43:0>  PRT_ENB  R/W      0x0         0         The port corresponding to the bit position in this   
                                                 field will drop all NON-RAW packets to that port
                                                 when port level backpressure is applied to that
                                                 port.  The applying of port-level backpressure for
                                                 this dropping does not take into consideration the
                                                 value of IPD_PORT@_BP_PAGE_CNT[BP_ENB], nor
                                                 IPD_RED_PORT_ENABLE[PRT_ENB].
 <63:44> NS       RAZ      NS          NS        Reserved					      
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  IPD_QUE0_FREE_PAGE_CNT = IPD Queue0 Free Page Count
 *
 * Number of Free-Page Pointer that are available for use in the FPA for Queue-0.
 *

     ==============================================================
     IPD_QUE0_FREE_PAGE_CNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  Q0_PCNT  RO       0x0         0         Number of Queue-0 Page Pointers Available.           
 <63:32> NS       RAZ      NS          NS        Reserved					      
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_CLK_COUNT = IPD Clock Count
 *
 * Counts the number of core clocks periods since the de-asserition of reset.
 *

     ==============================================================
     IPD_CLK_COUNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  CLK_CNT  RO       0x0         0         This counter will be zeroed when reset is applied   
                                                 and will increment every rising edge of the
			 			 core-clock.
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_PWP_PTR_FIFO_CTL = IPD's PWP Pointer FIFO Control
 *
 * Allows reading of the Page-Pointers stored in the IPD's PWP Fifo.
 *

     ==============================================================
     IPD_PWP_PTR_FIFO_CTL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   RADDR    R/W      0x0         0         Sets the address to read from in the pwp_fifo.       
                                                 Addresses 0 through 63 contain Packet-Pointers and
                                                 addresses 64 through 127 contain WQE-Pointers.
                                                 When IPD_CTL_STATUS[NO_WPTR] is set '1' addresses
                                                 64 through 127 are not valid.
 <8>     CENA     R/W      0x1         1         Active low Chip Enable to the read port of the       
						 pwp_fifo. This bit also controls the MUX-select
                                                 that steers [RADDR] to the pwp_fifo.
						 *WARNING - Setting this field to '0' will allow
                                                 reading of the memories thorugh the PTR field,
						 but will cause unpredictable operation of the IPD
						 under normal operation.
 <37:9>  PTR      RO       NS          NS        The output of the pwp_fifo.                          
 <45:38> PRADDR   RO       NS          NS        Present FIFO Packet Read address.                    
 <53:46> WRADDR   RO       NS          NS        Present FIFO WQE Read address.                       
 <60:54> MAX_CNTS RO       0x40        0x40      Maximum number of Packet-Pointers or WQE-Pointers    
                                                 that COULD be in the FIFO.
                                                 When IPD_CTL_STATUS[NO_WPTR] is set '1' this field
                                                 only represents the Max number of Packet-Pointers,
                                                 WQE-Pointers are not used in this mode.
 <63:61> NS       RAZ      NS          NS        Reserved					      
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_PRC_HOLD_PTR_FIFO_CTL = IPD's PRC Holding Pointer FIFO Control
 *
 * Allows reading of the Page-Pointers stored in the IPD's PRC Holding Fifo.
 *

     ==============================================================
     IPD_PRC_HOLD_PTR_FIFO_CTL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <2:0>   RADDR    R/W      0x0         0         Sets the address to read from in the holding.        
						 fifo in the PRC. This FIFO holds Packet-Pointers
                                                 to be used for packet data storage.
 <3>     CENA     R/W      0x1         1         Active low Chip Enable that controls the             
						 MUX-select that steers [RADDR] to the fifo.
						 *WARNING - Setting this field to '0' will allow
                                                 reading of the memories thorugh the PTR field,
						 but will cause unpredictable operation of the IPD
						 under normal operation.
 <32:4>  PTR      RO       NS          NS        The output of the prc-holding-fifo.                  
 <35:33> PRADDR   RO       NS          NS        Present Packet-Pointer read address.                 
 <38:36> MAX_PKT  RO       0x5         0x5       Maximum number of Packet-Pointers that COULD be      
                                                 in the FIFO.
 <63:39> NS       RAZ      NS          NS        Reserved					      
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_PRC_PORT_PTR_FIFO_CTL = IPD's PRC PORT Pointer FIFO Control
 *
 * Allows reading of the Page-Pointers stored in the IPD's PRC PORT Fifo.
 *

     ==============================================================
     IPD_PRC_PORT_PTR_FIFO_CTL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <6:0>   RADDR    R/W      0x0         0         Sets the address to read from in the port            
						 fifo in the PRC. This FIFO holds Packet-Pointers
                                                 to be used for packet data storage.
 <7>     CENA     R/W      0x1         1         Active low Chip Enable to the read port of the       
						 pwp_fifo. This bit also controls the MUX-select
                                                 that steers [RADDR] to the pwp_fifo.
						 *WARNING - Setting this field to '0' will allow
                                                 reading of the memories thorugh the PTR field,
						 but will cause unpredictable operation of the IPD
						 under normal operation.
 <36:8>  PTR      RO       NS          NS        The output of the prc-port-ptr-fifo.                 
 <43:37> MAX_PKT  RO       0x40        0x40      Maximum number of Packet-Pointers that are in        
                                                 in the FIFO.
 <63:44> NS       RAZ      NS          NS        Reserved					      
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_PKT_PTR_VALID = IPD's Packet Pointer Valid
 *
 * The value of the packet-pointer fetched and in the valid register.
 *

     ==============================================================
     IPD_PKT_PTR_VALID Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <28:0>  PTR      RO       NS          NS        Pointer value.                                       
 <63:29> NS       RAZ      NS          NS        Reserved					      
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_WQE_PTR_VALID = IPD's WQE Pointer Valid
 *
 * The value of the WQE-pointer fetched and in the valid register.
 *

     ==============================================================
     IPD_WQE_PTR_VALID Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <28:0>  PTR      RO       NS          NS        Pointer value.                                       
                                                 When IPD_CTL_STATUS[NO_WPTR] is set '1' this field
                                                 represents a Packet-Pointer NOT a WQE pointer.
 <63:29> NS       RAZ      NS          NS        Reserved					      
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_PORT@_BP_PAGE_CNT2 = IPD Port Backpressure Page Count
 *
 * The number of pages in use by the port that when exceeded, backpressure will be applied to the port.
 * See also IPD_PORT@_BP_PAGE_CNT
 * See also IPD_PORT@_BP_PAGE_CNT3
 *

     ==============================================================
     IPD_PORT(36..39)_BP_PAGE_CNT2 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <16:0>  PAGE_CNT R/W      0x0         0         The number of page pointers assigned to                
                                                 the port, that when exceeded will cause	       	                                       
                                                 back-pressure to be applied to the port.	       	                                       
                                                 This value is in 256 page-pointer increments,
                                                 (i.e. 0 = 0-page-ptrs, 1 = 256-page-ptrs,..)
 <17>    BP_ENB   R/W      0x0         0         When set '1' BP will be applied, if '0' BP will        
                                                 not be applied to port.
 <63:18> NS       RAZ      NS          NS        Reserved					        
----------------------------------------------------------------------------------------------------
===

 *
 * IPD_PORT_BP_COUNTERS2_PAIR@ = MBUF Counters port Ports used to generate Back Pressure Per Port.
 * See also IPD_PORT_BP_COUNTERS_PAIR@
 * See also IPD_PORT_BP_COUNTERS3_PAIR@
 *

     ==============================================================
     IPD_PORT_BP_COUNTERS2_PAIR(36..39) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:25> NS       RAZ      NS          NS        Reserved				            |   
 <24:0>  CNT_VAL  RO       0x0         NS        Number of MBUFs being used by data on this port.   |   
----------------------------------------------------------------------------------------------------
===
   
 *
 *                  IPD_RED_PORT_ENABLE2 = IPD RED Port Enable2
 *
 * Set the pass-drop marks for qos level.
 *

     ==============================================================
     IPD_RED_PORT_ENABLE2 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   PRT_ENB  R/W      0x0         0         Bits 7-0 corresponds to ports 43-36. These bits      
						 have the same meaning as the PRT_ENB field of
						 IPD_RED_PORT_ENABLE.
 <63:8>  NS       RAZ      NS          NS        Reserved					      
----------------------------------------------------------------------------------------------------
===

 *
 * IPD_PORT_BP_COUNTERS3_PAIR@ = MBUF Counters port Ports used to generate Back Pressure Per Port.
 * See also IPD_PORT_BP_COUNTERS_PAIR@
 * See also IPD_PORT_BP_COUNTERS2_PAIR@
 *

     ==============================================================
     IPD_PORT_BP_COUNTERS3_PAIR(40..43) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:25> NS       RAZ      NS          NS        Reserved				            |   
 <24:0>  CNT_VAL  RO       0x0         NS        Number of MBUFs being used by data on this port.   |   
----------------------------------------------------------------------------------------------------
===
   
 *
 *                  IPD_PORT@_BP_PAGE_CNT3 = IPD Port Backpressure Page Count
 *
 * The number of pages in use by the port that when exceeded, backpressure will be applied to the port.
 * See also IPD_PORT@_BP_PAGE_CNT
 * See also IPD_PORT@_BP_PAGE_CNT2
 *

     ==============================================================
     IPD_PORT(40..43)_BP_PAGE_CNT3 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <16:0>  PAGE_CNT R/W      0x0         0         The number of page pointers assigned to                
                                                 the port, that when exceeded will cause	       	                                       
                                                 back-pressure to be applied to the port.	       	                                       
                                                 This value is in 256 page-pointer increments,
                                                 (i.e. 0 = 0-page-ptrs, 1 = 256-page-ptrs,..)
 <17>    BP_ENB   R/W      0x0         0         When set '1' BP will be applied, if '0' BP will        
                                                 not be applied to port.
 <63:18> NS       RAZ      NS          NS        Reserved					        
----------------------------------------------------------------------------------------------------
===


 *
 *                  IPD_BIST_STATUS = IPD BIST STATUS
 *
 * BIST Status for IPD's Memories.
 *

     ==============================================================
     IPD_BIST_STATUS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     PWP      RO       0x0         0         PWP Memory Bist Status.                              
 <1>     IPD_NEW  RO       0x0         0         IPD_NEW Memory Bist Status.                          
 <2>     IPD_OLD  RO       0x0         0         IPD_OLD Memory Bist Status.                          
 <3>     PRC_OFF  RO       0x0         0         PRC_OFF Memory Bist Status.                          
 <4>     PWQ0     RO       0x0         0         PWQ0 Memory Bist Status.                             
 <5>     PWQ1     RO       0x0         0         PWQ1 Memory Bist Status.                             
 <6>     PBM_WORD RO       0x0         0         PBM_WORD Memory Bist Status.                         
 <7>     PBM0     RO       0x0         0         PBM0 Memory Bist Status.                             
 <8>     PBM1     RO       0x0         0         PBM1 Memory Bist Status.                             
 <9>     PBM2     RO       0x0         0         PBM2 Memory Bist Status.                             
 <10>    PBM3     RO       0x0         0         PBM3 Memory Bist Status.                             
 <11>    IPQ_PBE0 RO       0x0         0         IPQ PBE0 Memory Bist Status.                         
 <12>    IPQ_PBE1 RO       0x0         0         IPQ PBE1 Memory Bist Status.                         
 <13>    PWQ_POW  RO       0x0         0         PWQ POW MEM Memory Bist Status.                      
 <14>    PWQ_WP1  RO       0x0         0         PWQ WQE PAGE1 PTR Memory Bist Status.                
 <15>    PWQ_WQED RO       0x0         0         PWQ PIP WQE DONE Memory Bist Status.                 
 <16>    CSR_NCMD RO       0x0         0         CSR NCB Commands Memory Bist Status.                 
 <17>    CSR_MEM  RO       0x0         0         CSR Register Memory Bist Status.                     
 <63:18> NS       RAZ      NS          NS        Reserved					      
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_SUB_PORT_QOS_CNT = IPD Subtract Port QOS Count
 *
 * Will add the value (CNT) to the indicated Port-QOS register (PORT_QOS). The value added must be
 * be the 2's complement of the value that needs to be subtracted. 
 *
 *

     ==============================================================
     IPD_SUB_PORT_QOS_CNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  CNT      R/W      NS          0         The value to be added to the register selected         
                                                 in the PORT_QOS field.
 <40:32> PORT_QOS R/W      NS          0         The port to add the CNT field to.	                
 <63:41> NS       RAZ      NS          NS        Reserved					        
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_PORT_QOS_INT@ = IPD PORT-QOS Interrupt
 *
 * See the description for IPD_PORT_QOS_@_CNT
 *
 * 0=P0-7; 1=P8-15; 2=P16-23; 3=P24-31; 4=P32-39; 5=P40-47; 6=P48-55; 7=P56-63
 * 
 * Only ports used are: P0-3, P32-39, and P40-43. Therefore only IPD_PORT_QOS_INT0, IPD_PORT_QOS_INT4,
 * and IPD_PORT_QOS_INT5 exist and, furthermore:  <63:32> of IPD_PORT_QOS_INT0 and IPD_PORT_QOS_INT5,
 * are reserved.
 *
 *

     ==============================================================
     IPD_PORT_QOS_INT(0,4,5) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  INT       R/W1C   0           0         Interrupt bits.                                        
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_PORT_QOS_INT_ENB@ = IPD PORT-QOS Interrupt Enable
 *
 * When the IPD_PORT_QOS_INT@[#] is '1' and IPD_PORT_QOS_INT_ENB@[#] is '1' a interrupt will be generated.
 *
 *

     ==============================================================
     IPD_PORT_QOS_INT_ENB(0,4,5) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ENB      R/W      0           1         Enable bits.                                           
----------------------------------------------------------------------------------------------------
===

 *
 *                  IPD_PORT_QOS_@_CNT = IPD Port@ QOS-0 Count
 *
 * A counter per port/qos. Counter are originzed in sequence where the first 8 counter (0-7) belong to Port-0
 * QOS 0-7 respectively followed by port 1 at (8-15), etc..
 * Ports 0-3, 32-43
 *

     ==============================================================
     IPD_PORT_QOS_(0..31,256..351)_CNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  CNT      RO       0x0         NS        The packet related count that is incremented as    |   
                                                  specified by IPD_SUB_PORT_QOS_CNT.                |
 <63:32> WMARK    R/W      0xFFFFFFFF  NS        When the field CNT after being modified is equal to|   
                                                 or crosses this value (i.e. value was greater than |
                                                 then becomes less then, or value was less than and |
                                                 becomes greater than) the corresponding bit in     |
                                                 IPD_PORT_QOS_INT@ is set.                          |
----------------------------------------------------------------------------------------------------
===



 


 *
 *                  KEY_INT_SUM = KEY's Interrupt Summary Register
 *
 * Contains the diffrent interrupt summary bits of the KEY.
 *

     ==============================================================
     KEY_INT_SUM Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     KED0_SBE R/W1C     0           0                                                               
 <1>     KED0_DBE R/W1C     0           0         					   	        
 <2>     KED1_SBE R/W1C     0           0         						        
 <3>     KED1_DBE R/W1C     0           0         						        
 <63:4>  NS       RAZ       NS          NS       Reserved		                                
----------------------------------------------------------------------------------------------------
===

 *
 *                  KEY_INT_ENB = KEY's Interrupt Enable
 *
 * The KEY's interrupt enable register.
 *

     ==============================================================
     KEY_INT_ENB Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     KED0_SBE R/W      0           0         When set (1) and bit 0 of the KEY_INT_SUM              
                                                 register is asserted the KEY will assert an                                        
                                                 interrupt.				                                            
 <1>     KED0_DBE R/W      0           0         When set (1) and bit 1 of the KEY_INT_SUM              
                                                 register is asserted the KEY will assert an                                        
                                                 interrupt.				                                            
 <2>     KED1_SBE R/W      0           0         When set (1) and bit 2 of the KEY_INT_SUM              
                                                 register is asserted the KEY will assert an                                        
                                                 interrupt.				                                            
 <3>     KED1_DBE R/W      0           0         When set (1) and bit 3 of the KEY_INT_SUM              
                                                 register is asserted the KEY will assert an                                        
                                                 interrupt.				                                            
 <63:4>  NS       RAZ      NS          NS        Reserved				                
----------------------------------------------------------------------------------------------------
===

 *
 *                  KEY_CTL_STATUS = KEY's Control/Status Register
 *
 * The KEY's interrupt enable register.
 *

     ==============================================================
     KEY_CTL_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <6:0>   MEM0_ERR R/W      0           0         Causes a flip of the ECC bit associated 38:32          
                                                 respective to bit 6:0 of this field, for FPF          	                                     
                                                 FIFO 0.					                                             
 <13:7>  MEM1_ERR R/W      0           0         Causes a flip of the ECC bit associated 38:32          
                                                 respective to bit 13:7 of this field, for FPF          	                                     
                                                 FIFO 1.					                                             
 <63:14> NS       RAZ      NS          NS        Reserved					        
----------------------------------------------------------------------------------------------------
===


 *
 *                  KEY_BIST_REG = KEY's BIST Status Register
 *
 * The KEY's BIST status for memories.
 *

     ==============================================================
     KEY_BIST_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     MEM0     RO       0           0         MEM - 0 bist status.                                   
 <1>     MEM1     RO       0           0         MEM - 1 bist status.                                   
 <2>     RRC      RO       0           0         RRC bist status.                                       
 <63:3>  NS       RAZ      NS          NS        Reserved					        
----------------------------------------------------------------------------------------------------
===



 *
 * L2C_CTL = L2C Control
 *

     ==============================================================
     L2C_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>      DISIDXALIAS   R/W    0      0        Index Alias Disable 				    |	
 <1>      DISECC        R/W    0      0        Tag and Data ECC Disable				    |	
 <5:2>    VAB_THRESH    R/W    0      0        VAB Threshold 				            |	
                     	              	       When the number of valid VABs exceeds this number the|
                                               L2C increases the priority of all writes in the LMC. |
 <12:6>   EF_CNT        R/W    0      4        LMC early fill count                                 |   
                                               Specifies the number of cycles after the first LMC   |
                                               fill cycle to wait before requesting a fill on the   |
					       RSC/RSD bus.                                         |
 	 		              	         // 7 dclks (we've received 1st out of 8 	    |
 			              	         // by the time we start counting)		    |
 	 		              	         ef_cnt = (7 * dclk0_period) / rclk_period;	    |
 	 		              	         // + 1 rclk if the dclk and rclk edges don't 	    |
 			              	         // stay in the same position			    |
 	 		              	         if ((dclk0_gen.period % rclk_gen.period) != 0)	    |
 	 		              	            ef_cnt = ef_cnt + 1;			    |
 	 		              	         // + 2 rclk synchronization uncertainty	    |
 	 		              	         ef_cnt = ef_cnt + 2;				    |
 	 		              	         // - 3 rclks to recognize first write              |
 	 		              	         ef_cnt = ef_cnt - 3;                    	    |
 	 		              	         // + 3 rclks to perform first write                |
 	 		              	         ef_cnt = ef_cnt + 3;                    	    |
 	 		              	         // - 9 rclks minimum latency from counter expire   |
 			              	         // to final fbf read				    |
 	 		              	         ef_cnt = ef_cnt - 9;                   	    |
 <13>     EF_ENA        R/W    0      1        LMC early fill enable                                |   
 <14>     XMC_ARB_MODE  R/W    0      0        Arbitration mode for XMC QOS queues                  |   
                                               == 0, fully determined through QOS		    |
                                               == 1, QOS0 highest priority, QOS1-3 use normal mode  |
 <15>     RSP_ARB_MODE  R/W    0      0        Arbitration mode for RSC/RSD bus                     |   
                                               == 0, round-robin				    |
                                               == 1, static priority				    |
                                                   1. IOR data					    |
                                                   2. STIN/FILLs				    |
                                                   3. STDN/SCDN/SCFL				    |
 <19:16>  MAXLFB        R/W    0      0        Maximum LFBs in use at once                          |   
                                                (0 means 16, 1-15 as expected)			    |
 <23:20>  MAXVAB        R/W    0      0        Maximum VABs in use at once                          |   
                                                (0 means 16, 1-15 as expected)			    |
 <24>     DISCCLK       R/W    0      0        Disable conditional clocking in L2C PNR blocks       |   
 <63:25>  NS            RAZ    NS     NS       RESERVED						    |   

Notes:

(1) If MAXVAB is != 0, VAB_THRESH should be less than MAXVAB.

----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_QOS_WGT = L2C QOS weights
 *

     ==============================================================
     L2C_QOS_WGT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>    WGT0      	R/W    0xFF   0xFF     Weight for QOS level 0			    	    |	
 <15:8>   WGT1      	R/W    0xFF   0xFF     Weight for QOS level 1			    	    |	
 <23:16>  WGT2      	R/W    0xFF   0xFF     Weight for QOS level 2			    	    |	
 <31:24>  WGT3      	R/W    0xFF   0xFF     Weight for QOS level 3			    	    |	
 <63:32>  NS        	RAZ    NS     NS       RESERVED					    	    |	
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_VRT_CTL = L2C Virtualization control register
 *

     ==============================================================
     L2C_VRT_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>      ENABLE    	R/W    0      1        Global virtualization enable		            |	
                                               When ENABLE is clear, stores are never blocked by    |
                                               the L2C virtualization hardware and none of NUMID,   |
                                               MEMSZ, OOBERR are used.                              |
 <3:1>    NUMID     	R/W    5      5        Number of allowed virtualization IDs (encoded)       |	
                                                   0 = 2                                            |
                                                   1 = 4                                            |
                                                   2 = 8                                            |
                                                   3 = 16                                           |
                                                   4 = 32                                           |
                                                   5 = 64                                           |
                                                   6,7 illegal                                      |
                                               Violations of this limit causes                      |
                                               L2C to set L2C_INT_REG[VRTIDRNG].                    |
 <6:4>    MEMSZ     	R/W    5      5        Memory space coverage of L2C_VRT_MEM (encoded)	    |	
                                                   0 = 1GB                                          |
                                                   1 = 2GB                                          |
                                                   2 = 4GB                                          |
                                                   3 = 8GB                                          |
                                                   4 = 16GB                                         |
                                                   5 = 32GB                                         |
                                                   6 = 64GB (**reserved in 63xx**)                  |
                                                   7 = 128GB (**reserved in 63xx**)                 |
 <7>      NS        	RAZ    NS     NS       RESERVED					    	    |	
 <8>      OOBERR    	R/W    0      0        Whether out of bounds writes are an error            |	
                                               Determines virtualization hardware behavior for      |
                                               a store to an L2/DRAM address larger than            |
                                               indicated by MEMSZ. If OOBERR is set, all these      |
                                               stores (from any virtualization ID) are blocked. If  |
                                               OOBERR is clear, none of these stores are blocked.   |
 <63:9>   NS        	RAZ    NS     NS       RESERVED					    	    |	
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_INT_REG = L2C Interrupt Register
 *

     ==============================================================
     L2C_INT_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>      HOLERD        R/W1C  0      0        Read reference to 256MB hole occurred          	    |   
 <1>      HOLEWR        R/W1C  0      0        Write reference to 256MB hole occurred         	    |   
 <2>      VRTWR         R/W1C  0      0        Virtualization ID prevented a write            	    |   
                                               Set when L2C_VRT_MEM blocked a store.                |
 <3>      VRTIDRNG      R/W1C  0      0        Virtualization ID out of range                 	    |   
                                               Set when a L2C_VRT_CTL[NUMID] violation blocked a    |
                                               store.                                               |
 <4>      VRTADRNG      R/W1C  0      0        Address outside of virtualization range        	    |   
                                               Set when a L2C_VRT_CTL[MEMSZ] violation blocked a    |
                                               store.                                               |
                                               L2C_VRT_CTL[OOBERR] must be set for L2C to set this. |
 <5>      VRTPE         R/W1C  0      0        L2C_VRT_MEM read found a parity error          	    |   
                                               Whenever an L2C_VRT_MEM read finds a parity error,   |
                                               that L2C_VRT_MEM cannot cause stores to be blocked.  |
                                               Software should correct the error.                   |
 <15:6>   NS        	RAZ    NS     NS       RESERVED					    	    |	
 <16>     TAD0          RO     0      0        When set, the enabled interrupt is in either         |   
                                                  the L2C_ERR_TDT0 or L2C_ERR_TTG0 CSR              |
 <63:17>  NS        	RAZ    NS     NS       RESERVED					    	    |	
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_INT_ENA = L2C Interrupt Enable
 *

     ==============================================================
     L2C_INT_ENA Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>      HOLERD        R/W    0      1        Read reference to 256MB hole enable            	    |   
 <1>      HOLEWR        R/W    0      1        Write reference to 256MB hole enable           	    |   
 <2>      VRTWR         R/W    0      1        Virtualization ID prevented a write enable     	    |   
 <3>      VRTIDRNG      R/W    0      1        Virtualization ID out of range enable          	    |   
 <4>      VRTADRNG      R/W    0      1        Address outside of virtualization range enable 	    |   
 <5>      VRTPE         R/W    0      1        Virtualization memory parity error             	    |   
 <63:6>   NS        	RAZ    NS     NS       RESERVED					    	    |	
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_XMC_CMD = L2C XMC command register
 *

     ==============================================================
     L2C_XMC_CMD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <37:0>   ADDR          R/W    NS     NS       Address to use for simulated XMC request (see Note 6)|   
 <56:38>  NS        	RAZ    NS     NS       RESERVED					    	    |	
 <62:57>  CMD           R/W    NS     NS       Command to use for simulated XMC request             |   
                                               a new request can be accepted                        |
 <63>     INUSE         RO     0      0        Set to 1 by HW upon receiving a write, cleared when  |   
                                               command has issued (not necessarily completed, but   |
                                               ordered relative to other traffic) and HW can accept |
                                               another command.                                     |

Notes:

(1) the XMC command chosen MUST NOT be a IOB destined command or operation is UNDEFINED.

(2) the XMC command will have sid forced to IOB, did forced to L2C, no virtualization checks
    performed (always pass), and xmdmsk forced to 0.  Note that this implies that commands which
    REQUIRE an XMD cycle (STP,STC,SAA,FAA,FAS) should not be used or the results are unpredictable.
    The sid=IOB means that the way partitioning used for the command is L2C_WPAR_IOB.
    None of L2C_QOS_IOB, L2C_QOS_PP, L2C_VIRTID_IOB, L2C_VIRTID_PP are used for these commands.

(3) any responses generated by the XMC command will be forced to PP7 (a non-existant PP) effectively
    causing them to be ignored.  Generated STINs, however, will correctly invalidate the required
    PPs.

(4) any L2D read generated by the XMC command will record the syndrome information in
    L2C_TAD_ECC0/1.  If ECC is disabled prior to the CSR write this provides the ability to read the
    ECC bits directly.  If ECC is not disabled this should log 0's (assuming no ECC errors were
    found in the block).

(5) A write which arrives while the INUSE bit is set will block until the INUSE bit clears.  This
    gives software 2 options when needing to issue a stream of writes to L2C_XMC_CMD: polling on the
    INUSE bit, or allowing HW to handle the interlock -- at the expense of locking up the RSL bus
    for potentially tens of cycles at a time while waiting for an available LFB/VAB entry.

(6) The address written to L2C_XMC_CMD is a 38-bit OCTEON physical address.  L2C performs hole removal and
    index aliasing (if enabled) on the written address and uses that for the command. This hole
    removed/index aliased 38-bit address is what is returned on a read of the L2C_XMC_CMD register.

----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_XMC_PFC = L2C XMC Performance Counter(s)
 *

     ==============================================================
     L2C_XMC(0..0)_PFC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>   COUNT   	R/W    0      NS       Current counter value		    	            |	
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_XMD_PFC = L2C XMD Performance Counter(s)
 *

     ==============================================================
     L2C_XMD(0..0)_PFC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>   COUNT   	R/W    0      NS       Current counter value		    	            |	
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_RSC_PFC = L2C RSC Performance Counter(s)
 *

     ==============================================================
     L2C_RSC(0..0)_PFC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>   COUNT   	R/W    0      NS       Current counter value		    	            |	
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_RSD_PFC = L2C RSD Performance Counter(s)
 *

     ==============================================================
     L2C_RSD(0..0)_PFC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>   COUNT   	R/W    0      NS       Current counter value		    	            |	
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_IOC_PFC = L2C IOC Performance Counter(s)
 *

     ==============================================================
     L2C_IOC(0..0)_PFC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>   COUNT   	R/W    0      NS       Current counter value		    	            |	
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_IOR_PFC = L2C IOR Performance Counter(s)
 *

     ==============================================================
     L2C_IOR(0..0)_PFC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>   COUNT   	R/W    0      NS       Current counter value		    	            |	
----------------------------------------------------------------------------------------------------
===


 *
 *                  L2C_WPAR_PP = L2C PP way partitioning
 *

     ==============================================================
     L2C_WPAR_PP(0..5) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>   MASK     R/W      0           0         Way partitioning mask. (1 means do not use)	    |	
<63:16>  NS       RAZ      NS          NS        RESERVED					    |	

Notes:

(1) The read value of MASK will include bits set because of the L2C cripple fuses.

----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_WPAR_IOB = L2C IOB way partitioning
 *

     ==============================================================
     L2C_WPAR_IOB(0..0) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>   MASK     R/W      0           0         Way partitioning mask. (1 means do not use)	    |	
<63:16>  NS       RAZ      NS          NS        RESERVED					    |	

Notes:

(1) The read value of MASK will include bits set because of the L2C cripple fuses.

----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_QOS_PP = L2C PP QOS level
 *
 * Description: 
 *

     ==============================================================
     L2C_QOS_PP(0..5) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<1:0>    LVL      R/W      0           0         QOS level to use for this PP.                      |   
<63:2>   NS       RAZ      NS          NS        RESERVED					    |	
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_QOS_IOB = L2C IOB QOS level
 *
 * Description: 
 *

     ==============================================================
     L2C_QOS_IOB(0..0) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<1:0>    LVL      R/W      0           0         QOS level for non-DWB commands.                    |	
<3:2>    NS       RAZ      NS          NS        RESERVED					    |	
<5:4>    DWBLVL   R/W      0           0         QOS level for DWB commands.                        |	
<63:6>   NS       RAZ      NS          NS        RESERVED					    |	
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_VIRTID_PP = L2C PP virtualization ID
 *
 * Description: 
 *

     ==============================================================
     L2C_VIRTID_PP(0..5) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<5:0>    ID       R/W      0           0         Virtualization ID to use for this PP.              |   
<63:6>   NS       RAZ      NS          NS        RESERVED					    |	
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_VIRTID_IOB = L2C IOB virtualization ID
 *
 * Description: 
 *

     ==============================================================
     L2C_VIRTID_IOB(0..0) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<5:0>    ID       R/W      0           0         Virtualization ID to use for non-DWB commands      |	
<7:6>    NS       RAZ      NS          NS        RESERVED					    |	
<13:8>   DWBID    R/W      0           0         Virtualization ID to use for DWB commands          |   
<63:14>  NS       RAZ      NS          NS        RESERVED					    |	
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_VRT_MEM = L2C Virtualization Memory
 *
 * Description: Virtualization memory mapped region.  There are 1024 32b
 * byte-parity protected entries.
 *

     ==============================================================
     L2C_VRT_MEM(0..1023) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>   DATA     R/W      0           0         Data to write into (or read from) the              |   
                                                 virtualization memory.				    |
<35:32>  PARITY   R/W      0           0         Parity to write into (or read from) the            |	
                                                 virtualization memory.				    |
                                                 PARITY<i> is the even parity of DATA<(i*8)+7:i*8>  |
<63:36>  NS       RAZ      NS          NS        RESERVED					    |	

Notes:

When a DATA bit is set in L2C_VRT_MEM when L2C virtualization is enabled, L2C
prevents the selected virtual machine from storing to the selected L2/DRAM region.
L2C uses L2C_VRT_MEM to block stores when:
 - L2C_VRT_CTL[ENABLE] is set, and
 - the address of the store exists in L2C+LMC internal L2/DRAM Address space
   and is within the L2C_VRT_CTL[MEMSZ] bounds, and
 - the virtID of the store is within the L2C_VRT_CTL[NUMID] bounds

L2C_VRT_MEM is never used for these L2C transactions which are always allowed:
  - L2C CMI L2/DRAM transactions that cannot modify L2/DRAM, and
  - any L2/DRAM transaction originated from L2C_XMC_CMD

L2C_VRT_MEM contains one DATA bit per L2C+LMC internal L2/DRAM region and virtID indicating whether the store
to the region is allowed. The granularity of the checking is the region size, which is:
      2 ^^ (L2C_VRT_CTL[NUMID]+L2C_VRT_CTL[MEMSZ]+16)
which ranges from a minimum of 64KB to a maximum of 256MB, depending on the size
of L2/DRAM that is protected and the number of virtual machines.

The L2C_VRT_MEM DATA bit that L2C uses is:

  l2c_vrt_mem_bit_index = address >> (L2C_VRT_CTL[MEMSZ]+L2C_VRT_CTL[NUMID]+16); // address is a byte address
  l2c_vrt_mem_bit_index = l2c_vrt_mem_bit_index | (virtID << (14-L2C_VRT_CTL[NUMID]));

  L2C_VRT_MEM(l2c_vrt_mem_bit_index >> 5)[DATA<l2c_vrt_mem_bit_index & 0x1F>] is used

A specific example:

  L2C_VRT_CTL[NUMID]=2 (i.e. 8 virtual machine ID's used)
  L2C_VRT_CTL[MEMSZ]=4 (i.e. L2C_VRT_MEM covers 16 GB)

  L2/DRAM region size (granularity) is 4MB

  l2c_vrt_mem_bit_index<14:12> = virtID<2:0>
  l2c_vrt_mem_bit_index<11:0> = address<33:22>

  For L2/DRAM physical address 0x51000000 with virtID=5:
     L2C_VRT_MEM648[DATA<4>] determines when the store is allowed (648 is decimal, not hex)

----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_COP0_MAP = PP COP0 register memory mapped region
 * 
 * Description: PP COP0 register mapped region.  
 * 
 * NOTE: for 63xx, if the PPID is outside the range of 0-5,63 the write will be ignored and reads
 * will return 0x2bad2bad2bad2bad
 *

     ==============================================================
     L2C_COP0_MAP(0..1535,16128..16383) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>   DATA          R/W    NS     NS       Data to write to/read from designated PP's COP0      |   
                                               register.                                            |

Notes:

(1) There are 256 COP0 registers per PP.  Registers 0-255 map to PP0's COP0 registers, 256-511 are
    mapped to PP1's, etc.  A special set @ PP63 (registers 16128-16383) are for broadcast writes.
    Any write done to these registers will take effect in ALL PPs.  Note the means the L2C_COP0_MAP
    register to access can be gotten by:
      
        REGNUM = { PPID[5:0], rd[4:0], sel[2:0] }
 
    where rd and sel are as defined in the HRM description of Core Coprocessor 0 registers
    and note 4 below.

(2) if a COP0 register cannot be accessed by this mechanism the write be silently ignored and the
    read data will be 0xBADDEED.

(3) for 63xx, if the PPID is outside the range of 0-5,63 or if the PP in question is in reset a
    write will be ignored and reads will timeout the RSL bus.

(4) Referring to note (1) above, the following rd/sel values are supported:

    NOTE: Put only the "Customer type" in HRM. do not put the "Real type" in HRM.

                   Customer                                                    Real
       rd     sel     type         Description                                 type
    ======+=======+==========+==============================================+=========
       4      2       RO          COP0 UserLocal                                RW
       7      0       RO          COP0 HWREna                                   RW
       9      0       RO          COP0 Count                                    RW
       9      6       RO          COP0 CvmCount                                 RW
       9      7       RO          COP0 CvmCtl                                   RW
      11      0       RO          COP0 Compare                                  RW
      11      6       RW          COP0 PowThrottle                              RW
      12      0       RO          COP0 Status                                   RW
      12      1       RO          COP0 IntCtl                                   RO
      12      2       RO          COP0 SRSCtl                                   RO
      13      0       RO          COP0 Cause                                    RW
      14      0       RO          COP0 EPC                                      RW
      15      0       RO          COP0 PrID                                     RO
      15      1       RO          COP0 EBase                                    RW
      16      0       RO          PC Issue Debug Info (see details below)       RO
      16      1       RO          PC Fetch Debug Info (see details below)       RO
      16      2       RO          PC Fill Debug Info (see details below)        RO
      16      3       RO          PC Misc Debug Info (see details below)        RO
      18      0       RO          COP0 WatchLo0                                 RW
      19      0       RO          COP0 WatchHi0                                 RW
      22      0       RO          COP0 MultiCoreDebug                           RW
      23      0       RO          COP0 Debug                                    RW
      23      6       RO          COP0 Debug2                                   RO
      24      0       RO          COP0 DEPC                                     RW
      25      0       RO          COP0 PerfCnt Control0                         RW
      25      1       RO          COP0 PerfCnt Counter0                         RW
      25      2       RO          COP0 PerfCnt Control1                         RW
      25      3       RO          COP0 PerfCnt Counter1                         RW
      27      0       RO          COP0 CacheErr (icache)                        RW
      28      0       RO          COP0 TagLo (icache)                           RW
      28      1       RO          COP0 DataLo (icache)                          RW
      29      1       RO          COP0 DataHi (icache)                          RW
      30      0       RO          COP0 ErrorEPC                                 RW
      31      0       RO          COP0 DESAVE                                   RW
      31      2       RO          COP0 Scratch                                  RW
      31      3       RO          COP0 Scratch1                                 RW
      31      4       RO          COP0 Scratch2                                 RW

    - PC Issue Debug Info

      63:2 pc0_5a<63:2> // often VA<63:2> of the next instruction to issue
                          //    but can also be the VA of an instruction executing/replaying on pipe 0
                          //    or can also be a VA being filled into the instruction cache
                          //    or can also be unpredictable
                          // <61:49> RAZ
      1    illegal      // set when illegal VA
      0    delayslot    // set when VA is delayslot (prior branch may be either taken or not taken)

    - PC Fetch Debug Info

      63:0 fetch_address_3a // VA being fetched from the instruction cache
                              // <61:49>, <1:0> RAZ

    - PC Fill Debug Info

      63:0 fill_address_4a<63:2> // VA<63:2> being filled into instruction cache
                                   // valid when waiting_for_ifill_4a is set (see PC Misc Debug Info below)
                                   // <61:49> RAZ
         1 illegal               // set when illegal VA
         0 RAZ

    - PC Misc Debug Info

      63:3 RAZ
         2 mem_stall_3a         // stall term from L1 memory system
         1 waiting_for_pfill_4a // when waiting_for_ifill_4a is set, indicates whether instruction cache fill is due to a prefetch
         0 waiting_for_ifill_4a // set when there is an outstanding instruction cache fill

----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_TAD_IEN = L2C TAD Interrupt Enable
 *

     ==============================================================
     L2C_TAD(0..0)_IEN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>      L2DSBE        R/W    0      1        L2D Single-Bit Error enable                    	    |   
                                                Enables L2C_ERR_TDT@[SBE] to assert                 |
                                                L2C_INT_REG[TAD@] (and cause an interrupt)          |
 <1>      L2DDBE        R/W    0      1        L2D Double-Bit Error enable                    	    |   
                                                Enables L2C_ERR_TDT@[DBE] to assert                 |
                                                L2C_INT_REG[TAD@] (and cause an interrupt)          |
 <2>      TAGSBE        R/W    0      1        TAG Single-Bit Error enable                    	    |   
                                                Enables L2C_ERR_TTG@[SBE] to assert                 |
                                                L2C_INT_REG[TAD@] (and cause an interrupt)          |
 <3>      TAGDBE        R/W    0      1        TAG Double-Bit Error enable                    	    |   
                                                Enables L2C_ERR_TTG@[DBE] to assert                 |
                                                L2C_INT_REG[TAD@] (and cause an interrupt)          |
 <4>      VBFSBE        R/W    0      1        VBF Single-Bit Error enable                    	    |   
                                                Enables L2C_ERR_TDT@[VSBE] to assert                |
                                                L2C_INT_REG[TAD@] (and cause an interrupt)          |
 <5>      VBFDBE        R/W    0      1        VBF Double-Bit Error enable                    	    |   
                                                Enables L2C_ERR_TDT@[VSBE] to assert                |
                                                L2C_INT_REG[TAD@] (and cause an interrupt)          |
 <6>      NOWAY         R/W    0      0        No way available interrupt enable              	    |   
                                                Enables L2C_ERR_TTG@[NOWAY] to assert               |
                                                L2C_INT_REG[TAD@] (and cause an interrupt)          |
 <63:7>   NS        	RAZ    NS     NS       RESERVED					    	    |	
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_TAD_PRF = L2C TAD Performance Counter Control
 *

     ==============================================================
     L2C_TAD(0..0)_PRF Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>    CNT0SEL       R/W    0      1        Selects event to count for L2C_TAD_PFC0        	    |   
 <15:8>   CNT1SEL       R/W    0      1        Selects event to count for L2C_TAD_PFC1        	    |   
 <23:16>  CNT2SEL       R/W    0      1        Selects event to count for L2C_TAD_PFC2        	    |   
 <31:24>  CNT3SEL       R/W    0      1        Selects event to count for L2C_TAD_PFC3        	    |   
 <63:32>  NS        	RAZ    NS     NS       RESERVED					    	    |	

Notes:

(1) All four counters are equivalent and can use any of the defined selects.

(2) the CNTnSEL legal values are:
        0x00 -- Nothing (disabled)
	0x01 -- L2 Tag Hit
	0x02 -- L2 Tag Miss
	0x03 -- L2 Tag NoAlloc (forced no-allocate)
	0x04 -- L2 Victim
        0x05 -- SC Fail
        0x06 -- SC Pass
	0x07 -- LFB Occupancy (each cycle adds # of LFBs valid)
	0x08 -- LFB Wait LFB (each cycle adds # LFBs waiting for other LFBs)
	0x09 -- LFB Wait VAB (each cycle adds # LFBs waiting for VAB)
	0x80 -- Quad 0 index bus inuse
	0x81 -- Quad 0 read data bus inuse
        0x82 -- Quad 0 # banks inuse (0-4/cycle)
	0x83 -- Quad 0 wdat flops inuse (0-4/cycle)
	0x90 -- Quad 1 index bus inuse
	0x91 -- Quad 1 read data bus inuse
        0x92 -- Quad 1 # banks inuse (0-4/cycle)
	0x93 -- Quad 1 wdat flops inuse (0-4/cycle)
	0xA0 -- Quad 2 index bus inuse
	0xA1 -- Quad 2 read data bus inuse
        0xA2 -- Quad 2 # banks inuse (0-4/cycle)
	0xA3 -- Quad 2 wdat flops inuse (0-4/cycle)
	0xB0 -- Quad 3 index bus inuse
	0xB1 -- Quad 3 read data bus inuse
        0xB2 -- Quad 3 # banks inuse (0-4/cycle)
	0xB3 -- Quad 3 wdat flops inuse (0-4/cycle)

----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_TAD_TAG = L2C tag data
 *
 * Description: holds the tag information for LTGL2I and STGL2I commands
 *

     ==============================================================
     L2C_TAD(0..0)_TAG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      LOCK     R/W      0           0	 The lock bit                                       |	
<1>      DIRTY    R/W      0           0         The dirty bit                                      |	
<2>      VALID    R/W      0           0         The valid bit                                      |	
<3>      USE      R/W      0           0	 The LRU use bit                                    |	
<16:4>   NS       RAZ      NS          NS        RESERVED					    |	
<35:17>  TAG      R/W      0           0         The tag (see notes 1 and 3)                        |   
<39:36>  NS       RAZ      NS          NS        RESERVED					    |	
<45:40>  ECC      R/W      0           NS        The tag ECC					    |	
<63:46>  NS       RAZ      NS          NS        RESERVED					    |	

Notes:

(1) For 63xx TAG[35] must be written zero for STGL2I's or operation is undefined.  During normal
    operation, TAG[35] will also read 0.

(2) If setting the LOCK bit, the USE bit should also be set or operation is undefined.

(3) The tag is the corresponding bits from the L2C+LMC internal L2/DRAM byte address.

----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_TAD_ECC0 = L2C ECC logging
 *
 * Description: holds the syndromes for a L2D read generated from L2C_XMC_CMD
 *

     ==============================================================
     L2C_TAD(0..0)_ECC0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<9:0>    OW0ECC   RO       0           NS        ECC for OW0 of cache block                         |   
<15:10>  NS       RAZ      NS          NS        RESERVED					    |	
<25:16>  OW1ECC   RO       0           NS        ECC for OW1 of cache block                         |   
<31:26>  NS       RAZ      NS          NS        RESERVED					    |	
<41:32>  OW2ECC   RO       0           NS        ECC for OW2 of cache block                         |   
<47:42>  NS       RAZ      NS          NS        RESERVED					    |	
<57:48>  OW3ECC   RO       0           NS        ECC for OW3 of cache block                         |   
<63:58>  NS       RAZ      NS          NS        RESERVED					    |	
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_TAD_ECC1 = L2C ECC logging
 *
 * Description: holds the syndromes for a L2D read generated from L2C_XMC_CMD
 *

     ==============================================================
     L2C_TAD(0..0)_ECC1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<9:0>    OW4ECC   RO       0           NS        ECC for OW4 of cache block                         |   
<15:10>  NS       RAZ      NS          NS        RESERVED					    |	
<25:16>  OW5ECC   RO       0           NS        ECC for OW5 of cache block                         |   
<31:26>  NS       RAZ      NS          NS        RESERVED					    |	
<41:32>  OW6ECC   RO       0           NS        ECC for OW6 of cache block                         |   
<47:42>  NS       RAZ      NS          NS        RESERVED					    |	
<57:48>  OW7ECC   RO       0           NS        ECC for OW7 of cache block                         |   
<63:58>  NS       RAZ      NS          NS        RESERVED					    |	
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_TAD_PFC0 = L2C TAD Performance Counter 0
 *

     ==============================================================
     L2C_TAD(0..0)_PFC0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>   COUNT   	R/W    0      NS       Current counter value		    	            |	
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_TAD_PFC1 = L2C TAD Performance Counter 1
 *

     ==============================================================
     L2C_TAD(0..0)_PFC1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>   COUNT   	R/W    0      NS       Current counter value		    	            |	
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_TAD_PFC2 = L2C TAD Performance Counter 2
 *

     ==============================================================
     L2C_TAD(0..0)_PFC2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>   COUNT   	R/W    0      NS       Current counter value		    	            |	
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_TAD_PFC3 = L2C TAD Performance Counter 3
 *

     ==============================================================
     L2C_TAD(0..0)_PFC3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>   COUNT   	R/W    0      NS       Current counter value		    	            |	
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_DUT_MAP = L2C DUT memory map region
 *
 * Description: Address of the start of the region mapped to the duplicate tag.  Can be used to read
 * and write the raw duplicate tag CAM.  Writes should be used only with great care as they can easily 
 * destroy the coherency of the memory system.  In any case this region is expected to only be used
 * for debug.
 *
 * This base address should be combined with PP virtual ID, L1 way and L1 set to produce the final 
 * address as follows:
 *     addr<63:14>      L2C_DUT_MAP<63:14>
 *     addr<13:11>      PP VID
 *     addr<10:6>       L1 way
 *     addr<5:3>	L1 set
 *     addr<2:0>	UNUSED
 *

     ==============================================================
     L2C_DUT_MAP(0..1535) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      VALID    R/W      0           0	 The valid bit                                      |   
<9:1>    NS       RAZ      NS          NS        RESERVED					    |	
<37:10>  TAG      R/W      0           0         The tag value (see Note 1)                         |   
<63:38>  NS       RAZ      NS          NS        RESERVED					    |	

Notes:

(1) The tag is 37:10 from the 38-bit OCTEON physical address after hole removal. (The hole is between DR0
    and DR1. Remove the hole by subtracting 256MB from 38-bit OCTEON L2/DRAM physical addresses >= 512 MB.)

----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_BST = L2C BIST Status
 *

     ==============================================================
     L2C_BST Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>      TDFFL      	RO     NS     0        BIST failure status for TDF0		    	    |	
 <3:1>    NS        	RAZ    NS     NS       RESERVED					    	    |	
 <4>      VRTFL      	RO     NS     0        BIST failure status for VRT0		    	    |	
 <7:5>    NS        	RAZ    NS     NS       RESERVED					    	    |	
 <8>      DUTRESFL     	RO     NS     0        BIST failure status for DUTRES		    	    |	
 <11:9>   NS        	RAZ    NS     NS       RESERVED					    	    |	
 <12>     IOCDATFL     	RO     NS     0        BIST failure status for IOCDAT		    	    |	
 <15:13>  NS        	RAZ    NS     NS       RESERVED					    	    |	
 <16>     IOCCMDFL     	RO     NS     0        BIST failure status for IOCCMD		    	    |	
 <31:17>  NS        	RAZ    NS     NS       RESERVED					    	    |	
 <37:32>  DUTFL         RO     NS     0        BIST failure status for PP0-5 DUT                    |   
 <63:38>  NS        	RAZ    NS     NS       RESERVED					    	    |	
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_BST_TDT = L2C TAD DaTa BIST Status
 *

     ==============================================================
     L2C_BST_TDT(0..0) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>    L2DFL      	RO     NS     0        BIST failure status for quad 0-7 L2D	    	    |	
 <15:8>   FBFFL      	RO     NS     0        BIST failure status for quad 0-7 FBF	    	    |	
 <23:16>  SBFFL      	RO     NS     0        BIST failure status for quad 0-7 SBF	    	    |	
 <63:24>  NS        	RAZ    NS     NS       RESERVED					    	    |	
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_BST_TTG = L2C TAD TaG BIST Status
 *

     ==============================================================
     L2C_BST_TTG(0..0) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <15:0>   TAGFL      	RO     NS     0        BIST failure status for tag ways 0-15	    	    |	
 <16>     LRUFL      	RO     NS     0        BIST failure status for tag LRU     	    	    |	
 <63:17>  NS        	RAZ    NS     NS       RESERVED					    	    |	
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_BST_MEM = L2C MEM BIST Status
 *

     ==============================================================
     L2C_BST_MEM(0..0) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>    VBFFL      	RO     NS     0        BIST failure status for VBF0-3      	    	    |	
 <4>      RDFFL      	RO     NS     0        BIST failure status for RDF         	    	    |	
 <61:5>   NS        	RAZ    NS     NS       RESERVED					    	    |	
 <62>     CLEAR_BIST    R/W    0      0        When BIST is triggered, run clear BIST (see Note)    |   
 <63>     START_BIST    R/W    0      0        When written to 1, starts BIST.  Will read 1 until   |   
                                               BIST is complete (see Note).                         |

Notes:

(1) CLEAR_BIST must be written to 1 before START_BIST is written to 1 using a separate CSR write.

(2) CLEAR_BIST must not be changed after writing START_BIST to 1 until the BIST operation completes
    (indicated by START_BIST returning to 0) or operation is undefined.

----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_ERR_XMC = L2C XMC request error
 *
 * Description: records error information for HOLERD, HOLEWR and VRT* interrupts.
 *

     ==============================================================
     L2C_ERR_XMC Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <37:0>   ADDR          RO     0      NS       XMC address causing the error (see Notes 2 and 3)    |	
 <47:38>  NS        	RAZ    NS     NS       RESERVED					    	    |	
 <51:48>  SID      	RO     0      NS       XMC sid of request causing error          	    |	
 <57:52>  NS        	RAZ    NS     NS       RESERVED					    	    |	
 <63:58>  CMD       	RO     0      NS       XMC command or request causing error    	            |	

Notes:

(1) The first HOLERD/HOLDWR/VRT* interrupt will lock the register until L2C_INT_REG[5:0] are
    cleared.

(2) ADDR<15:0> will always be zero for VRT* interrupts.

(3) ADDR is the 38-bit OCTEON physical address after hole removal. (The hole is between DR0
    and DR1. Remove the hole by subtracting 256MB from all 38-bit OCTEON L2/DRAM physical addresses >= 512 MB.)

----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_VER_ID = L2C Virtualization ID Error Register
 *
 * Description: records virtualization IDs associated with VRTWR/VRTIDRNG/VRTADRNG/VRTPE interrupts.
 *

     ==============================================================
     L2C_VER_ID Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>   MASK          R/W1C  0      0        Mask of virtualization IDs which had an error        |	
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_VER_PP = L2C Virtualization ID PP Error Register
 *
 * Description: records PPs associated with VRTWR/VRTIDRNG/VRTADRNG/VRTPE interrupts.
 *

     ==============================================================
     L2C_VER_PP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <5:0>    MASK          R/W1C  0      0        Mask of PPs which had a virtualization error         |	
 <63:6>   NS        	RAZ    NS     NS       RESERVED					    	    |	
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_VER_IOB = L2C Virtualization ID IOB Error Register
 *
 * Description: records IOBs associated with VRTWR/VRTIDRNG/VRTADRNG/VRTPE interrupts.
 *

     ==============================================================
     L2C_VER_IOB Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>      MASK          R/W1C  0      0        Mask of IOBs which had a virtualization error        |	
 <63:1>   NS        	RAZ    NS     NS       RESERVED					    	    |	
----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_ERR_TDT = L2C TAD DaTa Error Info
 *

     ==============================================================
     L2C_ERR_TDT(0..0) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <1:0>    TYPE       	RO     0      0        The type of error the WAYIDX,SYN were latched for.   |	
                                                  0 - VSBE                                          |
                                                  1 - VDBE                                          |
                                                  2 - SBE                                           |
                                                  3 - DBE                                           |
 <3:2>    NS            RAZ    NS     NS       RESERVED					    	    |	
 <20:4>   WAYIDX       	RO     NS     0        Way, index, OW of the L2 block containing the error  |	
 <49:21>  NS        	RAZ    NS     NS       RESERVED					    	    |	
 <59:50>  SYN        	RO     0      0        L2D syndrome (valid only for SBE/DBE, not VSBE/VDBE) |	
 <60>     VSBE        	R/W1C  0      0        VBF Single-Bit error has occurred     	            |	 
 <61>     VDBE        	R/W1C  0      0        VBF Double-Bit error has occurred		    |	 
 <62>     SBE        	R/W1C  0      0        L2D Single-Bit error has occurred		    |	 
 <63>     DBE        	R/W1C  0      0        L2D Double-Bit error has occurred		    |	 

Notes:

(1) If the status bit corresponding to the value of the TYPE field is not set the WAYIDX/SYN fields
    are not associated with the errors currently logged by the status bits and should be ignored.
    This can occur, for example, because of a race between a write to clear a DBE and a new, lower
    priority, SBE error occuring.  If the SBE arrives prior to the DBE clear the WAYIDX/SYN fields
    will still be locked, but the new SBE error status bit will still be set.

(2) The four types of errors have differing priorities.  Priority (from lowest to highest) is SBE,
    VSBE, DBE, VDBE.  A error will lock the WAYIDX, and SYN fields for other errors of equal or
    lower priority until cleared by software.  This means that the error information is always
    (assuming the TYPE field matches) for the highest priority error logged in the status bits.

(3) If VSBE or VDBE are set (and the TYPE field matches), the WAYIDX fields are valid and the
    syndrome can be found in L2C_ERR_VBF.

(4) The syndrome is recorded for DBE errors, though the utility of the value is not clear.

----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_ERR_TTG = L2C TAD TaG Error Info
 *

     ==============================================================
     L2C_ERR_TTG(0..0) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <1:0>    TYPE       	RO     0      0        The type of error the WAYIDX,SYN were latched for.   |	
                                                  0 - not valid                                     |
                                                  1 - NOWAY                                         |
                                                  2 - SBE                                           |
                                                  3 - DBE                                           |
 <6:2>    NS            RAZ    NS     NS       RESERVED					    	    |	
 <20:7>   WAYIDX       	RO     NS     0        Way and index of the L2 block containing the error   |	
 <49:21>  NS        	RAZ    NS     NS       RESERVED					    	    |	
 <55:50>  SYN        	RO     0      0        Syndrome for the single-bit error	    	    |	
 <60:56>  NS        	RAZ    NS     NS       RESERVED					    	    |	
 <61>     NOWAY        	R/W1C  0      0        No way was available for allocation.	            |	
                                                L2C sets NOWAY during its processing of a           |
                                                transaction whenever it needed/wanted to allocate   |
                                                a WAY in the L2 cache, but was unable to. NOWAY==1  |
                                                is (generally) not an indication that L2C failed to |
                                                complete transactions. Rather, it is a hint of      |
                                                possible performance degradation. (For example, L2C |
                                                must read-modify-write DRAM for every transaction   |
                                                that updates some, but not all, of the bytes in a   |
                                                cache block, misses in the L2 cache, and cannot     |
                                                allocate a WAY.) There is one "failure" case where  |
                                                L2C will set NOWAY: when it cannot leave a block    |
                                                locked in the L2 cache as part of a LCKL2           |
                                                transaction.                                        |
 <62>     SBE        	R/W1C  0      0        Single-Bit ECC error			            |	
 <63>     DBE        	R/W1C  0      0        Double-Bit ECC error			            |	 

Notes:

(1) The priority of errors (highest to lowest) is DBE, SBE, NOWAY.  An error will lock the SYN, and 
    WAYIDX fields for equal or lower priority errors until cleared by software.

(2) The syndrome is recorded for DBE errors, though the utility of the value is not clear.

(3) A NOWAY error does not change the value of the SYN field, and leaves WAYIDX[20:17]
    unpredictable.  WAYIDX[16:7] is the L2 block index associated with the command which had no way
    to allocate.

(4) If the status bit corresponding to the value of the TYPE field is not set the WAYIDX/SYN fields
    are not associated with the errors currently logged by the status bits and should be ignored.
    This can occur, for example, because of a race between a write to clear a DBE and a new, lower
    priority, SBE error occuring.  If the SBE arrives prior to the DBE clear the WAYIDX/SYN fields
    will still be locked, but the new SBE error status bit will still be set.

----------------------------------------------------------------------------------------------------
===

 *
 *                  L2C_ERR_VBF = L2C VBF Error Info
 *

     ==============================================================
     L2C_ERR_VBF(0..0) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <1:0>    TYPE       	RO     0      0        The type of error the SYN were latched for.          |	
                                                  0 - VSBE                                          |
                                                  1 - VDBE                                          |
 <49:2>   NS        	RAZ    NS     NS       RESERVED					    	    |	
 <59:50>  VSYN        	RO     0      0        VBF syndrome (valid only if VSBE/VDBE is set)        |	
 <60>     VSBE        	RO     0      0        VBF Single-Bit error has occurred	    	    |	
 <61>     VDBE        	RO     0      0        VBF Double-Bit error has occurred	    	    |	
 <63:62>  NS        	RAZ    NS     NS       RESERVED					    	    |	

Notes:

(1) The way/index information is stored in L2C_ERR_TDT, assuming no later interrupt occurred to
    overwrite the information.  See the notes associated with L2C_ERR_TDT for full details.

(2) The first VSBE will lock the register for other VSBE's.  A VDBE, however, will overwrite a
    previously logged VSBE.  Once a VDBE has been logged all later errors will not be logged.  This
    means that if VDBE is set the information in the register is for the VDBE, if VDBE is clear and
    VSBE is set the register contains information about the VSBE.

(3) The syndrome is recorded for VDBE errors, though the utility of the value is not clear.

(4) If the status bit corresponding to the value of the TYPE field is not set the SYN field is not
    associated with the errors currently logged by the status bits and should be ignored.  This can
    occur, for example, because of a race between a write to clear a VDBE and a new, lower priority,
    VSBE error occuring.  If the VSBE arrives prior to the VDBE clear the SYN field will still be
    locked, but the new VSBE error status bit will still be set.

----------------------------------------------------------------------------------------------------
===

 * Specify the RSL base addresses for the block

 *   

     ==============================================================
     LMC(0)_RESET_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     DDR3RST   R/W       0           0        Memory Reset                                           
                                                 0 = Reset asserted
                                                 1 = Reset de-asserted
<1>     DDR3PWARM R/W       0           0        Memory Reset                                           
                                                 1 = Enable Preserve mode during warm reset
<2>     DDR3PSOFT R/W       0           0        Memory Reset                                           
                                                 1 = Enable Preserve mode during soft reset
<3>     DDR3PSV   R/W       0           0        Memory Reset                                           
                                                 1 = DDR contents preserved
<63:4>  NS        RAZ       NS          NS       RESERVED                                               

Notes:
 DDR3RST - DDR3 DRAM parts have a new RESET#
   pin that wasn't present in DDR2 parts. The
   DDR3RST CSR field controls the assertion of
   the new 63xx pin that attaches to RESET#.
   When DDR3RST is set, 63xx asserts RESET#.
   When DDR3RST is clear, 63xx de-asserts
   RESET#.

   DDR3RST is set on a cold reset. Warm and
   soft chip resets do not affect the DDR3RST
   value. Outside of cold reset, only software
   CSR writes change the DDR3RST value.

 DDR3PWARM - Enables preserve mode during a warm
   reset. When set, the DDR3 controller hardware
   automatically puts the attached DDR3 DRAM parts
   into self refresh (see LMC*CONFIG[SEQUENCE] below) at the beginning of a warm
   reset sequence, provided that the DDR3 controller
   is up. When clear, the DDR3 controller hardware
   does not put the attached DDR3 DRAM parts into
   self-refresh during a warm reset sequence.

   DDR3PWARM is cleared on a cold reset. Warm and
   soft chip resets do not affect the DDR3PWARM
   value. Outside of cold reset, only software
   CSR writes change the DDR3PWARM value.

   Note that if a warm reset follows a soft reset,
   DDR3PWARM has no effect, as the DDR3 controller
   is no longer up after any cold/warm/soft
   reset sequence.

 DDR3PSOFT - Enables preserve mode during a soft
   reset. When set, the DDR3 controller hardware
   automatically puts the attached DDR3 DRAM parts
   into self refresh (see LMC*CONFIG[SEQUENCE] below) at the beginning of a soft
   reset sequence, provided that the DDR3 controller
   is up. When clear, the DDR3 controller hardware
   does not put the attached DDR3 DRAM parts into
   self-refresh during a soft reset sequence.

   DDR3PSOFT is cleared on a cold reset. Warm and
   soft chip resets do not affect the DDR3PSOFT
   value. Outside of cold reset, only software
   CSR writes change the DDR3PSOFT value.

 DDR3PSV - May be useful for system software to
   determine when the DDR3 contents have been
   preserved.

   Cleared by hardware during a cold reset. Never
   cleared by hardware during a warm/soft reset.
   Set by hardware during a warm/soft reset if
   the hardware automatically put the DDR3 DRAM
   into self-refresh during the reset sequence.

   Can also be written by software (to any value).

----------------------------------------------------------------------------------------------------
===
 *
 *                  LMC_CONFIG = LMC Configuration Register
 *
 * This register controls certain parameters of  Memory Configuration 
 *

     ==============================================================
     LMC(0)_CONFIG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      INIT_START  WR0     0       0      A 0->1 transition starts the DDR memory sequence that is 
                                            selected by LMC*_CONFIG[SEQUENCE].  This register is a
                                            oneshot and clears itself each time it is set.

<1>      ECC_ENA     R/W     0       1      ECC Enable: When set will enable the 8b ECC              
                                            check/correct logic. Should be 1 when used with DIMMs
                                            with ECC. 0, otherwise. 
                                            When this mode is turned on, DQ[71:64]
                                            on writes, will contain the ECC code generated for 
                                            the 64 bits of data which will 
                                            written in the memory and then later on reads, used
                                            to check for Single bit error (which will be auto-
                                            corrected) and Double Bit error (which will be 
                                            reported). When not turned on, DQ[71:64]
                                            are driven to 0.  Please refer to SEC_ERR, DED_ERR, 
                                            LMC*_FADR, and LMC*_ECC_SYND registers
                                            for diagnostics information when there is an error.

<4:2>    ROW_LSB     R/W    0x3     NS      Row Address bit select                                   
                                            Encoding used to determine which memory address
                                            bit position represents the low order DDR ROW address.

                                            The processor's memory address[34:7] needs to be 
                                            translated to DRAM addresses (bnk,row,col,rank and DIMM)
                                            and that is a function of the following:
                                            1. Datapath Width (64)
                                            2. # Banks (8)
                                            3. # Column Bits of the memory part - spec'd indirectly
                                            by this register.
                                            4. # Row Bits of the memory part - spec'd indirectly
                                            5. # Ranks in a DIMM - spec'd by RANK_ENA
                                            6. # DIMM's in the system by the register below (PBANK_LSB).
                        
				            Decoding for row_lsb
                                                 000: row_lsb = mem_adr[14]
                                                 001: row_lsb = mem_adr[15] 
                                                 010: row_lsb = mem_adr[16] 
                                                 011: row_lsb = mem_adr[17] 
                                                 100: row_lsb = mem_adr[18]
                                                 101: row_lsb = mem_adr[19]
                                                 110: row_lsb = mem_adr[20]
                                                 111: RESERVED

	                                    For example, for a DIMM made of Samsung's k4b1g0846c-f7 1Gb (16M x 8 bit x 8 bank) 
                                            DDR3 parts, the column address width = 10, so with 
                                            10b of col, 3b of bus, 3b of bank, row_lsb = 16. So, row = mem_adr[29:16]

<8:5>   PBANK_LSB    R/W    0x5     NS      DIMM address bit select                                  
                                            Reverting to the explanation for ROW_LSB,
                                            PBank_LSB would be Row_LSB bit + #rowbits + #rankbits
				            Decoding for pbank_lsb                                            
                                                 0000:DIMM = mem_adr[28]    / rank = mem_adr[27] (if RANK_ENA)
                                                 0001:DIMM = mem_adr[29]    / rank = mem_adr[28]      "
                                                 0010:DIMM = mem_adr[30]    / rank = mem_adr[29]      "
                                                 0011:DIMM = mem_adr[31]    / rank = mem_adr[30]      "
                                                 0100:DIMM = mem_adr[32]    / rank = mem_adr[31]      "
                                                 0101:DIMM = mem_adr[33]    / rank = mem_adr[32]      "
                                                 0110:DIMM = mem_adr[34]    / rank = mem_adr[33]      "
                                                 0111:DIMM = 0              / rank = mem_adr[34]      "
                                                 1000-1111: RESERVED

	                                    For example, for a DIMM made of Samsung's k4b1g0846c-f7 1Gb (16M x 8 bit x 8 bank) 
                                            DDR3 parts, the column address width = 10, so with 
                                            10b of col, 3b of bus, 3b of bank, row_lsb = 16. So, row = mem_adr[29:16]
                                            With rank_ena = 0, pbank_lsb = 2
                                            With rank_ena = 1, pbank_lsb = 3

<11:9>  IDLEPOWER    R/W    0x0      6      Enter precharge power-down mode after the memory         
                                            controller has been idle for 2^(2+IDLEPOWER) CK cycles.
                                            0=disabled.
                                            This field should only be programmed after initialization.
                                            LMC*_MODEREG_PARAMS0[PPD] determines whether the DRAM DLL
                                            is disabled during the precharge power-down.

<15:12> FORCEWRITE   R/W    0x0      0      Force the oldest outstanding write to complete after     
                                            having waited for 2^FORCEWRITE CK cycles.  0=disabled.

<16>    ECC_ADR      R/W    0x0      1      Include memory reference address in the ECC calculation  
                                            0=disabled, 1=enabled

<17>    RESET        R/W    0x0     NS      Reset oneshot pulse for refresh counter,                 
                                            and LMC*_OPS_CNT, LMC*_IFB_CNT, and LMC*_DCLK_CNT
                                            CSR's. SW should write this to a one, then re-write
                                            it to a zero to cause the reset.

<36:18> REF_ZQCS_INT R/W     NS     NS      Refresh & ZQCS interval represented in #of 512 CK cycle  
                                            increments. A Refresh sequence is triggered when bits 
                                            [24:18] are equal to 0, and a ZQCS sequence is triggered 
                                            when [36:18] are equal to 0.

                                            Program [24:18] to RND-DN(tREFI/clkPeriod/512)
                                            Program [36:25] to RND-DN(ZQCS_Interval/clkPeriod/(512*64)). Note
                                            that this value should always be greater than 32, to account for
                                            resistor calibration delays.
	
                                            000_00000000_00000000: RESERVED 
	                                    Max Refresh interval = 127 * 512           = 65024 CKs
                                            Max ZQCS interval    = (8*256*256-1) * 512 = 268434944 CKs ~ 335ms for a 800 MHz CK

                                            LMC*_CONFIG[INIT_STATUS] determines which ranks receive
                                            the REF / ZQCS. LMC does not send any refreshes / ZQCS's
                                            when LMC*_CONFIG[INIT_STATUS]=0.

<39:37> SEQUENCE     R/W    0x0      0      Selects the sequence that LMC runs after a 0->1          
                                            transition on LMC*_CONFIG[INIT_START].

                                            SEQUENCE=0=power-up/init:
                                              - RANKMASK selects participating ranks (should be all ranks with attached DRAM)
                                              - INIT_STATUS must equal RANKMASK
                                              - DDR_CKE* signals activated (if they weren't already active)
                                              - RDIMM register control words 0-15 will be written to RANKMASK-selected
                                                  RDIMM's when LMC(0)_CONTROL[RDIMM_ENA]=1 and corresponding
                                                  LMC*_DIMM_CTL[DIMM*_WMASK] bits are set. (Refer to LMC*_DIMM*_PARAMS and
                                                  LMC*_DIMM_CTL descriptions below for more details.)
                                              - MR0, MR1, MR2, and MR3 will be written to selected ranks
                                            SEQUENCE=1=read-leveling:
                                              - RANKMASK selects the rank to be read-leveled
                                              - MR3 written to selected rank
					    SEQUENCE=2=self-refresh entry:
                                              - INIT_STATUS selects participating ranks (should be all ranks with attached DRAM)
                                              - MR1 and MR2 will be written to selected ranks if SREF_WITH_DLL=1
                                              - DDR_CKE* signals de-activated
                                            SEQUENCE=3=self-refresh exit:
                                              - INIT_STATUS must be set to indicate participating ranks (should be all ranks with attached DRAM)
                                              - DDR_CKE* signals activated
                                              - MR0, MR1, MR2, and MR3 will be written to participating ranks if SREF_WITH_DLL=1
                                            SEQUENCE=4=precharge power-down entry:
                                              - INIT_STATUS selects participating ranks (should be all ranks with attached DRAM)
                                              - DDR_CKE* signals de-activated
                                            SEQUENCE=5=precharge power-down exit:
                                              - INIT_STATUS selects participating ranks (should be all ranks with attached DRAM)
                                              - DDR_CKE* signals activated
                                            SEQUENCE=6=write-leveling:
                                              - RANKMASK selects the rank to be write-leveled
                                              - INIT_STATUS must indicate all ranks with attached DRAM
                                              - MR1 and MR2 written to INIT_STATUS-selected ranks
                                            SEQUENCE=7=illegal

                                            Precharge power-down entry and exit SEQUENCE's may also
                                            be automatically generated by the HW when IDLEPOWER!=0.

                                            Self-refresh entry SEQUENCE's may also be automatically
                                            generated by hardware upon a chip warm or soft reset
                                            sequence when LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT] are set.

                                            LMC writes the LMC*_MODEREG_PARAMS0 and LMC*_MODEREG_PARAMS1 CSR field values
                                            to the Mode registers in the DRAM parts (i.e. MR0, MR1, MR2, and MR3) as part of some of these sequences.
                                            Refer to the LMC*_MODEREG_PARAMS0 and LMC*_MODEREG_PARAMS1 descriptions for more details.

                                            If there are two consecutive power-up/init's without
                                            a DRESET assertion between them, LMC asserts DDR_CKE* as part of
                                            the first power-up/init, and continues to assert DDR_CKE*
                                            through the remainder of the first and the second power-up/init.
                                            If DDR_CKE* deactivation and reactivation is needed for
                                            a second power-up/init, a DRESET assertion is required
                                            between the first and the second.

<40>    EARLY_DQX    R/W    0x0     0x0     Send DQx signals one CK cycle earlier for the case when  
                                            the shortest DQx lines have a larger delay than the CK line

<41>    SREF_WITH_DLL R/W   0x0     0x0     Self-refresh entry/exit write MR1 and MR2                
                                            When set, self-refresh entry and exit instruction sequences
                                            write MR1 and MR2 (in all ranks). (The writes occur before
                                            self-refresh entry, and after self-refresh exit.)
                                            When clear, self-refresh entry and exit instruction sequences
                                            do not write any registers in the DDR3 parts.

<42>    RANK_ENA     R/W     0      NS      RANK ena (for use with dual-rank DIMMs)                  
                                            For dual-rank DIMMs, the rank_ena bit will enable
                                            the drive of the CS*_L[1:0] and ODT_<1:0> pins differently based on the 
                                            (pbank_lsb-1) address bit. 
                                            Write 0 for SINGLE ranked DIMM's.

<46:43> RANKMASK     R/W    0x0     NS      Mask to select rank to be leveled/initialized.           
                                            To write-level/read-level/initialize rank i, set RANKMASK<i>
                                                            RANK_ENA=1               RANK_ENA=0
                                              RANKMASK<0> = DIMM0_CS0                DIMM0_CS0
                                              RANKMASK<1> = DIMM0_CS1                  MBZ
                                              RANKMASK<2> = DIMM1_CS0                DIMM1_CS0
                                              RANKMASK<3> = DIMM1_CS1                  MBZ
	                                    For read/write leveling, each rank has to be leveled separately,
                                            so RANKMASK should only have one bit set.
                                            RANKMASK is not used during self-refresh entry/exit and
                                            precharge power-down entry/exit instruction sequences.
                                            When RANK_ENA=0, RANKMASK<1> and RANKMASK<3> MBZ

<50:47> MIRRMASK     R/W    0x0     NS      Mask determining which ranks are address-mirrored.        

                                            MIRRMASK<n> = 1 means Rank n addresses are mirrored
                                            for 0 <= n <= 3

                                            A mirrored read/write has these differences:
                                             - DDR_BA<1> is swapped with DDR_BA<0>
                                             - DDR_A<8> is swapped with DDR_A<7>
                                             - DDR_A<6> is swapped with DDR_A<5>
                                             - DDR_A<4> is swapped with DDR_A<3>

                                            When RANK_ENA=0, MIRRMASK<1> and MIRRMASK<3> MBZ

<54:51> INIT_STATUS  R/W1   0x0     NS      Indicates status of initialization                       

                                            INIT_STATUS[n] = 1 implies rank n has been initialized

                                            SW must set necessary INIT_STATUS bits with the
                                            same LMC*_CONFIG write that initiates
                                            power-up/init and self-refresh exit sequences
                                            (if the required INIT_STATUS bits are not already
                                            set before LMC initiates the sequence).

                                            INIT_STATUS determines the chip-selects that assert
                                            during refresh, ZQCS, and precharge power-down and
                                            self-refresh entry/exit SEQUENCE's.

<63:55> NS           RAZ     NS     NS      RESERVED                                                 

Notes:
a. Priority order for hardware writes to LMC*_CONFIG/LMC*_FADR/LMC*_ECC_SYND: DED error >= NXM error > SEC error
b. The self refresh entry sequence(s) power the DLL up/down (depending on LMC*_MODEREG_PARAMS0[DLL])  
when LMC*_CONFIG[SREF_WITH_DLL] is set
c. Prior to the self-refresh exit sequence, LMC*_MODEREG_PARAMS0 and LMC*_MODEREG_PARAMS1 should be re-programmed (if needed) to the 
appropriate values

LMC Bringup Sequence:
1. SW must ensure there are no pending DRAM transactions and that the DDR PLL and the DLL have been initialized.
2. Write LMC*_COMP_CTL2, LMC*_CONTROL, LMC*_WODT_MASK, LMC*_DUAL_MEMCFG, LMC*_TIMING_PARAMS0, LMC*_TIMING_PARAMS1, 
   LMC*_MODEREG_PARAMS0, LMC*_MODEREG_PARAMS1, LMC*_RESET_CTL (with DDR3RST=0), LMC*_CONFIG (with INIT_START=0)
   with appropriate values, if necessary.
3. Wait 200us, then write LMC*_RESET_CTL[DDR3RST] = 1.
4. Initialize all ranks at once by writing LMC*_CONFIG[RANKMASK][n] = 1, LMC*_CONFIG[INIT_STATUS][n] = 1, and LMC*_CONFIG[INIT_START] = 1
   where n is a valid rank index for the specific board configuration.
5. for each rank n to be write-leveled {
      if auto write-leveling is desired {
          write LMC*_CONFIG[RANKMASK][n] = 1, LMC*_WLEVEL_CTL appropriately and LMC*_CONFIG[INIT_START] = 1
          wait until LMC*_WLEVEL_RANKn[STATUS] = 3
      } else {
          write LMC*_WLEVEL_RANKn with appropriate values
      }
   }
6. for each rank n to be read-leveled {
      if auto read-leveling is desired {
          write LMC*_CONFIG[RANKMASK][n] = 1, LMC*_RLEVEL_CTL appropriately and LMC*_CONFIG[INIT_START] = 1
          wait until LMC*_RLEVEL_RANKn[STATUS] = 3
      } else {
          write LMC*_RLEVEL_RANKn with appropriate values
      }
   }
      
----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_CONTROL = LMC Control
 * This register is an assortment of various control fields needed by the memory controller
 *   

     ==============================================================
     LMC(0)_CONTROL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     RDIMM_ENA    R/W     0       NS     Registered DIMM Enable - When set allows the use         
                                            of JEDEC Registered DIMMs which require address and
                                            control bits to be registered in the controller.
<1>     BWCNT        R/W     0      0x0     Bus utilization counter Clear.                           
                                            Clears the LMC*_OPS_CNT, LMC*_IFB_CNT, and
                                            LMC*_DCLK_CNT registers. SW should first write this
                                            field to a one, then write this field to a zero to
                                            clear the CSR's.
<2>     DDR2T        R/W     0      0x1     Turn on the DDR 2T mode. 2 CK cycle window for CMD and   
                                            address. This mode helps relieve setup time pressure
                                            on the Address and command bus which nominally have
                                            a very large fanout. Please refer to Micron's tech 
                                            note tn_47_01 titled "DDR2-533 Memory Design Guide 
                                            for Two Dimm Unbuffered Systems" for physical details.
<3>     POCAS        R/W     0       0      Enable the Posted CAS feature of DDR3.                   
                                            This bit must be set whenever LMC*_MODEREG_PARAMS0[AL]!=0,
                                            and clear otherwise.
<5:4>   FPRCH2       R/W     0     0x1      Front Porch Enable: When set, the turn-off               
                                            time for the default DDR_DQ/DQS drivers is FPRCH2 CKs earlier.
                                            00 = 0 CKs
                                            01 = 1 CKs
                                            10 = 2 CKs
                                            11 = RESERVED
<6>     THROTTLE_RD  R/W     0       0      When set, use at most one IFB for reads                  
<7>     THROTTLE_WR  R/W     0       0      When set, use at most one IFB for writes                 
<8>     INORDER_RD   R/W     0       0      Send reads in order (regardless of priority)             
<9>     INORDER_WR   R/W     0       0      Send writes in order(regardless of priority)             
<10>    ELEV_PRIO_DIS R/W    0     0x0      Disable elevate priority logic.                          
                                            When set, writes are sent in
                                            regardless of priority information from L2C.
<11>    NXM_WRITE_EN  R/W    0     0x0      NXM Write mode                                           
                                            When clear, LMC discards writes to addresses that don't
                                            exist in the DRAM (as defined by LMC*_NXM configuration).
                                            When set, LMC completes writes to addresses that don't
                                            exist in the DRAM at an aliased address.
<15:12> MAX_WRITE_BATCH R/W 0x8    0x8      Maximum number of consecutive writes to service before   
                                            forcing reads to interrupt.
<16>    XOR_BANK    R/W     0x0     0x1     If (XOR_BANK == 1), then                                 
                                              bank[2:0]=address[9:7] ^ address[14:12]
                                             else
                                              bank[2:0]=address[9:7]
<17>    AUTO_DCLKDIS R/W    0x0      1      When 1, LMC will automatically shut off its internal     
                                            clock to conserve power when there is no traffic. Note
                                            that this has no effect on the DDR3 PHY and pads clocks.
<18>    INT_ZQCS_DIS R/W    0x1     0x0     Disable (internal) auto-zqcs calibration                 
                                            When clear, LMC runs internal ZQ calibration
                                            every LMC*_CONFIG[REF_ZQCS_INT] CK cycles.
<19>    EXT_ZQCS_DIS R/W    0x0     0x0     Disable (external) auto-zqcs calibration                 
                                            When clear, LMC runs external ZQ calibration
                                            every LMC*_CONFIG[REF_ZQCS_INT] CK cycles.
<21:20> BPRCH        R/W    0x0     0x0     Back Porch Enable: When set, the turn-on time for        
                                            the default DDR_DQ/DQS drivers is delayed an additional BPRCH 
                                            CK cycles.
                                            00 = 0 CKs
                                            01 = 1 CKs
                                            10 = 2 CKs
                                            11 = 3 CKs
<22>    WODT_BPRCH   R/W    0x0     0x0     When set, the turn-off time for the ODT pin during a     
                                            WR cmd is delayed an additional CK cycle.
<23>    RODT_BPRCH   R/W    0x0     0x0     When set, the turn-off time for the ODT pin during a     
                                            RD cmd is delayed an additional CK cycle.
<63:24> NS           RAZ     NS      NS     RESERVED                                                 
----------------------------------------------------------------------------------------------------
===
 *   

     ==============================================================
     LMC(0)_TIMING_PARAMS0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:46>  NS          RAZ     NS      NS     RESERVED                                                
<45:42>  TCKSRE      R/W    0x5     0x5     Indicates tCKSRE constraints.                           
                                            Set TCKSRE (CSR field) = RNDUP[tCKSRE(ns)/tCYC(ns)]-1,
                                            where tCKSRE is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=max(5nCK, 10ns)
<41:38>  TRP         R/W    0x6     0x6     Indicates tRP constraints.                              
                                            Set TRP (CSR field) = RNDUP[tRP(ns)/tCYC(ns)]
                                            + (RNDUP[tRTP(ns)/tCYC(ns)])-4)-1,
                                            where tRP, tRTP are from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP tRP=10-15ns
                                            TYP tRTP=max(4nCK, 7.5ns)
<37:34>  TZQINIT     R/W    0x2     0x2     Indicates tZQINIT constraints.                          
                                            Set TZQINIT (CSR field) = RNDUP[tZQINIT(ns)/(256*tCYC(ns))],
                                            where tZQINIT is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=2 (equivalent to 512)                                            
<33:30>  TDLLK       R/W    0x2     0x2     Indicates tDLLK constraints.                            
                                            Set TDLLK (CSR field) = RNDUP[tDLLK(ns)/(256*tCYC(ns))],
                                            where tDLLK is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=2 (equivalent to 512)
                                            This parameter is used in self-refresh exit
                                            and assumed to be greater than tRFC
<29:26>  TMOD        R/W    0xC     0xC     Indicates tMOD constraints.                             
                                            Set TMOD (CSR field) = RNDUP[tMOD(ns)/tCYC(ns)]-1,
                                            where tMOD is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=max(12nCK, 15ns)
<25:22>  TMRD        R/W    0x4     0x4     Indicates tMRD constraints.                             
                                            Set TMRD (CSR field) = RNDUP[tMRD(ns)/tCYC(ns)]-1,
                                            where tMRD is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=4nCK                                            
<21:18>  TXPR        R/W    0x5     0x5     Indicates tXPR constraints.                             
                                            Set TXPR (CSR field) = RNDUP[tXPR(ns)/(16*tCYC(ns))],
                                            where tXPR is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=max(5nCK, tRFC+10ns)
<17:14>  TCKE        R/W    0x3     0x3     Indicates tCKE constraints.                             
                                            Set TCKE (CSR field) = RNDUP[tCKE(ns)/tCYC(ns)]-1,
                                            where tCKE is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=max(3nCK, 7.5/5.625/5.625/5ns)                                            
<13:10>  TZQCS       R/W    0x4     0x4     Indicates tZQCS constraints.                            
                                            Set TZQCS (CSR field) = RNDUP[tZQCS(ns)/(16*tCYC(ns))],
                                            where tZQCS is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=4 (equivalent to 64)
<9:0>    TCKEON      R/W    0x149    0      Reserved. Should be written to zero.                    

Notes:
----------------------------------------------------------------------------------------------------
===

 *   

     ==============================================================
     LMC(0)_TIMING_PARAMS1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<3:0>    TMPRR       R/W    0x1     0x1     Indicates tMPRR constraints.                           
                                            Set TMPRR (CSR field) = RNDUP[tMPRR(ns)/tCYC(ns)]-1,
                                            where tMPRR is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=1nCK
<8:4>    TRAS        R/W    0xC     0xC     Indicates tRAS constraints.                            
                                            Set TRAS (CSR field) = RNDUP[tRAS(ns)/tCYC(ns)]-1,
                                            where tRAS is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=35ns-9*tREFI                                            
                                                00000: RESERVED
                                                00001: 2 tCYC
                                                00010: 3 tCYC
                                                ..
                                                11111: 32 tCYC
<12:9>   TRCD        R/W    0x4     0x4     Indicates tRCD constraints.                            
                                            Set TRCD (CSR field) = RNDUP[tRCD(ns)/tCYC(ns)],
                                            where tRCD is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=10-15ns 
                                                0000: RESERVED 
                                                0001: 2 (2 is the smallest value allowed)
                                                0002: 2
                                                ..
                                                1001: 9
                                                1010-1111: RESERVED
                                            In 2T mode, make this register TRCD-1, not going
                                            below 2.
<16:13>  TWTR        R/W    0x2     0x3     Indicates tWTR constraints.                            
                                            Set TWTR (CSR field) = RNDUP[tWTR(ns)/tCYC(ns)]-1,
                                            where tWTR is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=max(4nCK, 7.5ns)
                                                0000: RESERVED
                                                0001: 2
                                                ..
                                                0111: 8
                                                1000-1111: RESERVED 
<21:17>  TRFC        R/W    0x6     0x7     Indicates tRFC constraints.                            
                                            Set TRFC (CSR field) = RNDUP[tRFC(ns)/(8*tCYC(ns))],
                                            where tRFC is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=90-350ns
                                                 00000: RESERVED
                                                 00001: 8 tCYC
                                                 00010: 16 tCYC
                                                 00011: 24 tCYC
                                                 00100: 32 tCYC
                                                 ...
                                                 11110: 240 tCYC
                                                 11111: 248 tCYC
<24:22>  TRRD        R/W    0x2     0x2     Indicates tRRD constraints.                            
                                            Set TRRD (CSR field) = RNDUP[tRRD(ns)/tCYC(ns)]-2,
                                            where tRRD is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=max(4nCK, 10ns)
                                               000: RESERVED 
                                               001: 3 tCYC
                                               ...
                                               110: 8 tCYC
                                               111: 9 tCYC
<27:25>  TXP         R/W    0x3     0x3     Indicates tXP constraints.                            
                                            Set TXP (CSR field) = RNDUP[tXP(ns)/tCYC(ns)]-1,
                                            where tXP is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=max(3nCK, 7.5ns)
<31:28>  TWLMRD      R/W    0xA     0xA     Indicates tWLMRD constraints.                         
                                            Set TWLMRD (CSR field) = RNDUP[tWLMRD(ns)/(4*tCYC(ns))],
                                            where tWLMRD is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=max(40nCK)
<35:32>  TWLDQSEN    R/W    0x7     0x7     Indicates tWLDQSEN constraints.                       
                                            Set TWLDQSEN (CSR field) = RNDUP[tWLDQSEN(ns)/(4*tCYC(ns))],
                                            where tWLDQSEN is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=max(25nCK)
<40:36>  TFAW        R/W    0x0     0x9     Indicates tFAW constraints.                           
                                            Set TFAW (CSR field) = RNDUP[tFAW(ns)/(4*tCYC(ns))],
                                            where tFAW is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=30-40ns
<45:41>  TXPDLL      R/W    0xA     0xA     Indicates tXPDLL constraints.                         
                                            Set TXPDLL (CSR field) = RNDUP[tXPDLL(ns)/tCYC(ns)]-1,
                                            where tXPDLL is from the DDR3 spec, and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=max(10nCK, 24ns)
<63:46>  NS          RAZ     NS      NS     RESERVED                                               

Notes:
----------------------------------------------------------------------------------------------------
===

 *   

     ==============================================================
     LMC(0)_MODEREG_PARAMS0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:25>  NS          RAZ     NS      NS     RESERVED                                               
<24:24>  PPD         R/W    0x0      0x0    DLL Control for precharge powerdown                    
                                            0 = Slow exit (DLL off)
                                            1 = Fast exit (DLL on)                                            
                                            LMC writes this value to MR0[PPD] in the selected DDR3 parts
                                            during power-up/init and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK].
                                            This value must equal the MR0[PPD] value in all the DDR3
                                            parts attached to all ranks during normal operation.
<23:21>  WRP         R/W    0x1      0x1    Write recovery for auto precharge                      
                                            Should be programmed to be equal to or greater than
                                            RNDUP[tWR(ns)/tCYC(ns)]
					    000 = Reserved
					    001 = 5
					    010 = 6
					    011 = 7
					    100 = 8
					    101 = 10
					    110 = 12
					    111 = Reserved
                                            LMC writes this value to MR0[WR] in the selected DDR3 parts
                                            during power-up/init and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK].
                                            This value must equal the MR0[WR] value in all the DDR3
                                            parts attached to all ranks during normal operation.
<20:20>  DLLR        R/W    0x0      0x0    DLL Reset                                              
                                            LMC writes this value to MR0[DLL] in the selected DDR3 parts
                                            during power-up/init and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK].
                                            The MR0[DLL] value must be 0 in all the DDR3
                                            parts attached to all ranks during normal operation.
<19:19>  TM          R/W    0x0      0x0    Test Mode                                              
                                            LMC writes this value to MR0[TM] in the selected DDR3 parts
                                            during power-up/init and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK].
                                            The MR0[TM] value must be 0 in all the DDR3
                                            parts attached to all ranks during normal operation.
<18:18>  RBT         RO     0x1      0x1    Read Burst Type                                        
                                            1 = interleaved (fixed) 
                                            LMC writes this value to MR0[RBT] in the selected DDR3 parts
                                            during power-up/init and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK].
                                            The MR0[RBT] value must be 1 in all the DDR3
                                            parts attached to all ranks during normal operation.
<17:14>  CL          R/W    0x2      0x2    CAS Latency                                            
                                            0010 = 5
                                            0100 = 6
                                            0110 = 7
                                            1000 = 8
                                            1010 = 9
                                            1100 = 10
                                            1110 = 11
                                            0000, ???1 = Reserved
                                            LMC writes this value to MR0[CAS Latency / CL] in the selected DDR3 parts
                                            during power-up/init and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK].
                                            This value must equal the MR0[CAS Latency / CL] value in all the DDR3
                                            parts attached to all ranks during normal operation.
<13:12>  BL          RO     0x0      0x0    Burst Length                                           
                                            0 = 8 (fixed)
                                            LMC writes this value to MR0[BL] in the selected DDR3 parts
                                            during power-up/init and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK].
                                            The MR0[BL] value must be 0 in all the DDR3
                                            parts attached to all ranks during normal operation.
<11:11>  QOFF        R/W    0x0      0x0    Qoff Enable                                            
                                            0 = enable
                                            1 = disable
                                            LMC writes this value to MR1[Qoff] in the DDR3 parts in the selected ranks
                                            during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK,INIT_STATUS] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
                                            The MR1[Qoff] value must be 0 in all the DDR3
                                            parts attached to all ranks during normal operation.
<10:10>  TDQS        R/W    0x0      0x0    TDQS Enable                                            
                                            0 = disable
                                            LMC writes this value to MR1[TDQS] in the DDR3 parts in the selected ranks
                                            during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK,INIT_STATUS] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<9:9>    WLEV        RO     0x0      0x0    Write Leveling Enable                                  
                                            0 = disable
                                            LMC writes MR1[Level]=0 in the DDR3 parts in the selected ranks
                                            during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            (Write-leveling can only be initiated via the
                                            write-leveling instruction sequence.)
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK,INIT_STATUS] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<8:7>    AL          R/W    0x0      0x0    Additive Latency                                       
                                            00 = 0
                                            01 = CL-1
                                            10 = CL-2
                                            11 = Reserved
                                            LMC writes this value to MR1[AL] in the selected DDR3 parts
                                            during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
                                            This value must equal the MR1[AL] value in all the DDR3
                                            parts attached to all ranks during normal operation.
                                            See also LMC*_CONTROL[POCAS].
<6:6>    DLL         R/W    0x0      0x0    DLL Enable                                             
                                            0 = enable
                                            1 = disable.
                                            LMC writes this value to MR1[DLL] in the selected DDR3 parts
                                            during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
                                            This value must equal the MR1[DLL] value in all the DDR3
                                            parts attached to all ranks during normal operation.
                                            In dll-off mode, CL/CWL must be programmed
                                            equal to 6/6, respectively, as per the DDR3 specifications.
<5:5>    MPR         R/W    0x0      0x0    MPR                                                    
                                            LMC writes this value to MR3[MPR] in the selected DDR3 parts
                                            during power-up/init, read-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh exit instruction sequences.
                                            (LMC also writes MR3[MPR]=1 at the beginning of the
                                            read-leveling instruction sequence. Read-leveling should only be initiated via the
                                            read-leveling instruction sequence.)
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK].
                                            The MR3[MPR] value must be 0 in all the DDR3
                                            parts attached to all ranks during normal operation.
<4:3>    MPRLOC      R/W    0x0      0x0    MPR Location                                           
                                            LMC writes this value to MR3[MPRLoc] in the selected DDR3 parts
                                            during power-up/init, read-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh exit instruction sequences.
                                            (LMC also writes MR3[MPRLoc]=0 at the beginning of the
                                            read-leveling instruction sequence.)
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK].
                                            The MR3[MPRLoc] value must be 0 in all the DDR3
                                            parts attached to all ranks during normal operation.
<2:0>    CWL         R/W    0x0      0x0    CAS Write Latency                                      
                                            000: 5
                                            001: 6
                                            010: 7
                                            011: 8
                                            1xx: Reserved
                                            LMC writes this value to MR2[CWL] in the selected DDR3 parts
                                            during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
                                            This value must equal the MR2[CWL] value in all the DDR3
                                            parts attached to all ranks during normal operation.

Notes:
 These parameters are written into the DDR3 MR0, MR1, MR2 and MR3 registers.

----------------------------------------------------------------------------------------------------
===

 *   

     ==============================================================
     LMC(0)_MODEREG_PARAMS1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:48>  NS          RAZ     NS      NS     RESERVED                                               

<47:45>  RTT_NOM_11  R/W    0x0      0x0    RTT_NOM Rank 3                                         
                                            LMC writes this value to MR1[Rtt_Nom] in the rank 3 (i.e. DIMM1_CS1) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
                                            Per JEDEC DDR3 specifications, if RTT_Nom is used during writes,
                                            only values MR1[Rtt_Nom] = 1 (RQZ/4), 2 (RQZ/2), or 3 (RQZ/6) are allowed.
                                            Otherwise, values MR1[Rtt_Nom] = 4 (RQZ/12) and 5 (RQZ/8) are also allowed.
<44:43>  DIC_11      R/W    0x0      0x0    Output Driver Impedance Control Rank 3                 
                                            LMC writes this value to MR1[D.I.C.] in the rank 3 (i.e. DIMM1_CS1) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<42:41>  RTT_WR_11   R/W    0x0      0x0    RTT_WR Rank 3                                          
                                            LMC writes this value to MR2[Rtt_WR] in the rank 3 (i.e. DIMM1_CS1) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<40:40>  SRT_11      R/W    0x0      0x0    Self-refresh temperature range Rank 3                  
                                            LMC writes this value to MR2[SRT] in the rank 3 (i.e. DIMM1_CS1) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<39:39>  ASR_11      R/W    0x0      0x0    Auto self-refresh Rank 3                               
                                            LMC writes this value to MR2[ASR] in the rank 3 (i.e. DIMM1_CS1) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<38:36>  PASR_11     R/W    0x0      0x0    Partial array self-refresh Rank 3                      
                                            LMC writes this value to MR2[PASR] in the rank 3 (i.e. DIMM1_CS1) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].

<35:33>  RTT_NOM_10  R/W    0x0      0x0    RTT_NOM Rank 2                                         
                                            LMC writes this value to MR1[Rtt_Nom] in the rank 2 (i.e. DIMM1_CS0) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
                                            Per JEDEC DDR3 specifications, if RTT_Nom is used during writes,
                                            only values MR1[Rtt_Nom] = 1 (RQZ/4), 2 (RQZ/2), or 3 (RQZ/6) are allowed.
                                            Otherwise, values MR1[Rtt_Nom] = 4 (RQZ/12) and 5 (RQZ/8) are also allowed.
<32:31>  DIC_10      R/W    0x0      0x0    Output Driver Impedance Control Rank 2                 
                                            LMC writes this value to MR1[D.I.C.] in the rank 2 (i.e. DIMM1_CS0) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<30:29>  RTT_WR_10   R/W    0x0      0x0    RTT_WR Rank 2                                          
                                            LMC writes this value to MR2[Rtt_WR] in the rank 2 (i.e. DIMM1_CS0) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<28:28>  SRT_10      R/W    0x0      0x0    Self-refresh temperature range Rank 2                  
                                            LMC writes this value to MR2[SRT] in the rank 2 (i.e. DIMM1_CS0) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<27:27>  ASR_10      R/W    0x0      0x0    Auto self-refresh Rank 2                               
                                            LMC writes this value to MR2[ASR] in the rank 2 (i.e. DIMM1_CS0) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<26:24>  PASR_10     R/W    0x0      0x0    Partial array self-refresh Rank 2                      
                                            LMC writes this value to MR2[PASR] in the rank 2 (i.e. DIMM1_CS0) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].

<23:21>  RTT_NOM_01  R/W    0x0      0x0    RTT_NOM Rank 1                                         
                                            LMC writes this value to MR1[Rtt_Nom] in the rank 1 (i.e. DIMM0_CS1) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
                                            Per JEDEC DDR3 specifications, if RTT_Nom is used during writes,
                                            only values MR1[Rtt_Nom] = 1 (RQZ/4), 2 (RQZ/2), or 3 (RQZ/6) are allowed.
                                            Otherwise, values MR1[Rtt_Nom] = 4 (RQZ/12) and 5 (RQZ/8) are also allowed.
<20:19>  DIC_01      R/W    0x0      0x0    Output Driver Impedance Control Rank 1                 
                                            LMC writes this value to MR1[D.I.C.] in the rank 1 (i.e. DIMM0_CS1) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<18:17>  RTT_WR_01   R/W    0x0      0x0    RTT_WR Rank 1                                          
                                            LMC writes this value to MR2[Rtt_WR] in the rank 1 (i.e. DIMM0_CS1) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<16:16>  SRT_01      R/W    0x0      0x0    Self-refresh temperature range Rank 1                  
                                            LMC writes this value to MR2[SRT] in the rank 1 (i.e. DIMM0_CS1) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<15:15>  ASR_01      R/W    0x0      0x0    Auto self-refresh Rank 1                               
                                            LMC writes this value to MR2[ASR] in the rank 1 (i.e. DIMM0_CS1) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<14:12>  PASR_01     R/W    0x0      0x0    Partial array self-refresh Rank 1                      
                                            LMC writes this value to MR2[PASR] in the rank 1 (i.e. DIMM0_CS1) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].

<11:9>   RTT_NOM_00  R/W    0x0      0x0    RTT_NOM Rank 0                                         
                                            LMC writes this value to MR1[Rtt_Nom] in the rank 0 (i.e. DIMM0_CS0) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
                                            Per JEDEC DDR3 specifications, if RTT_Nom is used during writes,
                                            only values MR1[Rtt_Nom] = 1 (RQZ/4), 2 (RQZ/2), or 3 (RQZ/6) are allowed.
                                            Otherwise, values MR1[Rtt_Nom] = 4 (RQZ/12) and 5 (RQZ/8) are also allowed.
<8:7>    DIC_00      R/W    0x0      0x0    Output Driver Impedance Control Rank 0                 
                                            LMC writes this value to MR1[D.I.C.] in the rank 0 (i.e. DIMM0_CS0) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<6:5>    RTT_WR_00   R/W    0x0      0x0    RTT_WR Rank 0                                          
                                            LMC writes this value to MR2[Rtt_WR] in the rank 0 (i.e. DIMM0_CS0) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<4:4>    SRT_00      R/W    0x0      0x0    Self-refresh temperature range Rank 0                  
                                            LMC writes this value to MR2[SRT] in the rank 0 (i.e. DIMM0_CS0) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<3:3>    ASR_00      R/W    0x0      0x0    Auto self-refresh Rank 0                               
                                            LMC writes this value to MR2[ASR] in the rank 0 (i.e. DIMM0_CS0) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].
<2:0>    PASR_00     R/W    0x0      0x0    Partial array self-refresh Rank 0                      
                                            LMC writes this value to MR2[PASR] in the rank 0 (i.e. DIMM0_CS0) DDR3 parts
                                            when selected during power-up/init, write-leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set,
                                            self-refresh entry and exit instruction sequences.
                                            See LMC*_CONFIG[SEQUENCE,INIT_START,RANKMASK] and
                                            LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT].

Notes:
 These parameters are written into the DDR3 MR0, MR1, MR2 and MR3 registers.

----------------------------------------------------------------------------------------------------
===

 *   
 *                    LMC_WODT_MASK = LMC Write OnDieTermination mask
 * System designers may desire to terminate DQ/DQS lines for higher frequency DDR operations 
 * especially on a multi-rank system. DDR3 DQ/DQS I/O's have built in 
 * Termination resistor that can be turned on or off by the controller, after meeting tAOND and tAOF
 * timing requirements. Each Rank has its own ODT pin that fans out to all the memory parts
 * in that DIMM. System designers may prefer different combinations of ODT ON's for writes
 * into different ranks. Octeon supports full programmability by way of the mask register below.
 * Each Rank position has its own 8-bit programmable field.
 * When the controller does a write to that rank, it sets the 4 ODT pins to the MASK pins below.
 * For eg., When doing a write into Rank0, a system designer may desire to terminate the lines
 * with the resistor on DIMM0/Rank1. The mask WODT_D0_R0 would then be {00000010}. 
 * Octeon drives the appropriate mask values on the ODT pins by default. If this feature is not 
 * required, write 0 in this register.
 * 

     ==============================================================
     LMC(0)_WODT_MASK Type=RSL
     ==============================================================


----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:56>  WODT_D3_R1  R/W    0xff    0x0     Write ODT mask DIMM3, RANK1/DIMM3 in SingleRanked          
                                            *UNUSED IN 63xx, and MBZ*
<55:48>  WODT_D3_R0  R/W    0xff    0x0     Write ODT mask DIMM3, RANK0                                
                                            *UNUSED IN 63xx, and MBZ*
<47:40>  WODT_D2_R1  R/W    0xff    0x0     Write ODT mask DIMM2, RANK1/DIMM2 in SingleRanked          
                                            *UNUSED IN 63xx, and MBZ*
<39:32>  WODT_D2_R0  R/W    0xff    0x0     Write ODT mask DIMM2, RANK0                                
                                            *UNUSED IN 63xx, and MBZ*
<31:24>  WODT_D1_R1  R/W    0xff    NS      Write ODT mask DIMM1, RANK1/DIMM1 in SingleRanked          
                                            if (!RANK_ENA) then WODT_D1_R1[3:0] MBZ
                                            *Upper 4 bits UNUSED IN 63xx, and MBZ*
<23:16>  WODT_D1_R0  R/W    0xff    NS      Write ODT mask DIMM1, RANK0                                
                                            if (!RANK_ENA) then WODT_D1_R0[3,1] MBZ
                                            *Upper 4 bits UNUSED IN 63xx, and MBZ*
<15:8>   WODT_D0_R1  R/W    0xff    NS      Write ODT mask DIMM0, RANK1/DIMM0 in SingleRanked          
                                            if (!RANK_ENA) then WODT_D0_R1[3:0] MBZ
                                            *Upper 4 bits UNUSED IN 63xx, and MBZ*
<7:0>    WODT_D0_R0  R/W    0xff    NS      Write ODT mask DIMM0, RANK0                                
                                            if (!RANK_ENA) then WODT_D0_R0[3,1] MBZ
                                            *Upper 4 bits UNUSED IN 63xx, and MBZ*

Notes:

When a given RANK is selected, the WODT mask for that RANK is used.  The resulting WODT mask is
driven to the DIMMs in the following manner:
	    RANK_ENA=1                    RANK_ENA=0
Mask[3] -> DIMM1_ODT_1                     MBZ
Mask[2] -> DIMM1_ODT_0                     DIMM1_ODT_0
Mask[1] -> DIMM0_ODT_1                     MBZ
Mask[0] -> DIMM0_ODT_0                     DIMM0_ODT_0

LMC always writes entire cache blocks and always writes them via two consecutive
write CAS operations to the same rank+bank+row spaced exactly 4 CK's apart.
When a WODT mask bit is set, LMC asserts the OCTEON ODT output
pin(s) starting the same CK as the first write CAS operation. Then, OCTEON
normally continues to assert the ODT output pin(s) for 9+LMC*_CONTROL[WODT_BPRCH] more CK's
- for a total of 10+LMC*_CONTROL[WODT_BPRCH] CK's for the entire cache block write -
through the second write CAS operation of the cache block,
satisfying the 6 CK DDR3 ODTH8 requirements.
But it is possible for OCTEON to issue two cache block writes separated by as few as
WtW = 8 or 9 (10 if LMC*_CONTROL[WODT_BPRCH]=1) CK's. In that case, OCTEON asserts the ODT output pin(s)
for the WODT mask of the first cache block write for WtW CK's, then asserts
the ODT output pin(s) for the WODT mask of the second cache block write for 10+LMC*_CONTROL[WODT_BPRCH] CK's
(or less if a third cache block write follows within 8 or 9 (or 10) CK's of this second cache block write).
Note that it may be necessary to force LMC to space back-to-back cache block writes
to different ranks apart by at least 10+LMC*_CONTROL[WODT_BPRCH] CK's to prevent DDR3 ODTH8 violations.
----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_COMP_CTL2 = LMC Compensation control
 *   

     ==============================================================
     LMC(0)_COMP_CTL2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:34>  NS           RAZ     NS      NS    RESERVED                                             
<33:30>  DDR__PTUNE   RO      NS      NS    DDR PCTL from compensation circuit                   
                                            The encoded value provides debug information for the 
                                            compensation impedance on P-pullup
<29:26>  DDR__NTUNE   RO      NS      NS    DDR NCTL from compensation circuit                   
                                            The encoded value provides debug information for the 
                                            compensation impedance on N-pulldown
<25:25>  M180         R/W     0x0     NS    Cap impedance at 180 Ohm (instead of 240 Ohm)        
                                            *DON'T PUT IN HRM*
<24:24>  BYP          R/W     0x0     NS    Bypass mode                                          
                                            When set, PTUNE,NTUNE are the compensation setting.
                                            When clear, DDR_PTUNE,DDR_NTUNE are the compensation setting.
<23:20>  PTUNE        R/W     0x0     NS    PCTL impedance control in bypass mode                
<19:16>  NTUNE        R/W     0x0     NS    NCTL impedance control in bypass mode                

<15:12> RODT_CTL      R/W      0x0    NS    NCTL RODT impedance control bits                     
	                                    This field controls ODT values during a memory read
                                            on the Octeon side
                                            0000 = No ODT
                                            0001 = 20 ohm
                                            0010 = 30 ohm
                                            0011 = 40 ohm
                                            0100 = 60 ohm
                                            0101 = 120 ohm
                                            0110-1111 = Reserved
<11:8>  CMD_CTL       R/W      0x4    NS    Drive strength control for CMD/A/RESET_L/CKE* drivers 
                                            0001 = 24 ohm
                                            0010 = 26.67 ohm
                                            0011 = 30 ohm
                                            0100 = 34.3 ohm
                                            0101 = 40 ohm
                                            0110 = 48 ohm
                                            0111 = 60 ohm
                                            0000,1000-1111 = Reserved                                       
<7:4>   CK_CTL        R/W     0x4     NS    Drive strength control for CK/CS*_L/ODT drivers      
                                            0001 = 24 ohm
                                            0010 = 26.67 ohm
                                            0011 = 30 ohm
                                            0100 = 34.3 ohm
                                            0101 = 40 ohm
                                            0110 = 48 ohm
                                            0111 = 60 ohm
                                            0000,1000-1111 = Reserved                                       
<3:0>    DQX_CTL      R/W     0x4     NS    Drive strength control for DQ/DQS drivers            
                                            0001 = 24 ohm
                                            0010 = 26.67 ohm
                                            0011 = 30 ohm
                                            0100 = 34.3 ohm
                                            0101 = 40 ohm
                                            0110 = 48 ohm
                                            0111 = 60 ohm
                                            0000,1000-1111 = Reserved                                       
----------------------------------------------------------------------------------------------------
===
 *   

     ==============================================================
     LMC(0)_RLEVEL_RANK(0..3) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:56> NS       RAZ       NS          NS       RESERVED                                               
 <55:54> STATUS   RO        0x0         NS       Indicates status of the read-levelling and where       
                                                 the BYTE* programmings in <35:0> came from:
                                                 0 = BYTE* values are their reset value
                                                 1 = BYTE* values were set via a CSR write to this register
                                                 2 = read-leveling sequence currently in progress (BYTE* values are unpredictable)
                                                 3 = BYTE* values came from a complete read-leveling sequence
 <53:48> BYTE8    R/W       0x0         NS       Deskew setting                                         
                                                 When ECC DRAM is not present (i.e. when DRAM is not
                                                 attached to chip signals DDR_CBS_0_* and DDR_CB[7:0]),
                                                 SW should write BYTE8 to a value that does
                                                 not increase the range of possible BYTE* values. The
                                                 easiest way to do this is to set
                                                 LMC*_RLEVEL_RANK*[BYTE8] = LMC*_RLEVEL_RANK*[BYTE0]
                                                 when there is no ECC DRAM, using the final BYTE0 value.
 <47:42> BYTE7    R/W       0x0         NS       Deskew setting                                         
 <41:36> BYTE6    R/W       0x0         NS       Deskew setting                                         
 <35:30> BYTE5    R/W       0x0         NS       Deskew setting                                         
 <29:24> BYTE4    R/W       0x0         NS       Deskew setting                                         
 <23:18> BYTE3    R/W       0x0         NS       Deskew setting                                         
 <17:12> BYTE2    R/W       0x0         NS       Deskew setting                                         
 <11:6>  BYTE1    R/W       0x0         NS       Deskew setting                                         
 <5:0>   BYTE0    R/W       0x0         NS       Deskew setting                                         

Notes:
  This is four CSRs per LMC, one per each rank.

  Deskew setting is measured in units of 1/4 CK, so the above BYTE* values can range over 16 CKs.

  Each CSR is written by HW during a read-leveling sequence for the rank. (HW sets STATUS==3 after HW read-leveling completes for the rank.)
  If HW is unable to find a match per LMC*_RLEVEL_CTL[OFFSET_ENA] and LMC*_RLEVEL_CTL[OFFSET], then HW will set LMC*_RLEVEL_RANKi[BYTE*<5:0>] 
  to  0.

  Each CSR may also be written by SW, but not while a read-leveling sequence is in progress. (HW sets STATUS==1 after a CSR write.)

  SW initiates a HW read-leveling sequence by programming LMC*_RLEVEL_CTL and writing INIT_START=1 with SEQUENCE=1.
  See LMC*_RLEVEL_CTL.

  LMC*_RLEVEL_RANKi values for ranks i without attached DRAM should be set such that 
  they do not increase the range of possible BYTE values for any byte
  lane. The easiest way to do this is to set
      LMC*_RLEVEL_RANKi = LMC*_RLEVEL_RANKj,
  where j is some rank with attached DRAM whose LMC*_RLEVEL_RANKj is already fully initialized.
----------------------------------------------------------------------------------------------------
===

 *   

     ==============================================================
     LMC(0)_RLEVEL_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:9>  NS       RAZ      NS          NS        RESERVED                                              
 <8>     OFFSET_EN R/W     0x1         0x1       When set, LMC attempts to select the read-leveling    
                                                 setting that is LMC*RLEVEL_CTL[OFFSET] settings earlier than the
                                                 last passing read-leveling setting in the largest
                                                 contiguous sequence of passing settings.
                                                 When clear, or if the setting selected by LMC*RLEVEL_CTL[OFFSET]
                                                 did not pass, LMC selects the middle setting in the
                                                 largest contiguous sequence of passing settings,
                                                 rounding earlier when necessary.
 <7:4>   OFFSET   R/W      0x2         0x2       The offset used when LMC*RLEVEL_CTL[OFFSET] is set    
 <3:0>   BYTE     R/W      0x0         NS        0 <= BYTE <= 8                                        
                                                 Byte index for which bitmask results are saved
                                                 in LMC*_RLEVEL_DBG
Notes:
----------------------------------------------------------------------------------------------------
===

 *   

     ==============================================================
     LMC(0)_RLEVEL_DBG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  BITMASK  RO       0x0         0x0       Bitmask generated during deskew settings sweep         
                                                 BITMASK[n]=0 means deskew setting n failed
                                                 BITMASK[n]=1 means deskew setting n passed
                                                 for 0 <= n <= 63
Notes:
  A given read of LMC*_RLEVEL_DBG returns the read-leveling pass/fail results for all possible
  delay settings (i.e. the BITMASK) for only one byte in the last rank that the HW read-leveled.
  LMC*_RLEVEL_CTL[BYTE] selects the particular byte.

  To get these pass/fail results for another different rank, you must run the hardware read-leveling
  again. For example, it is possible to get the BITMASK results for every byte of every rank
  if you run read-leveling separately for each rank, probing LMC*_RLEVEL_DBG between each
  read-leveling.
----------------------------------------------------------------------------------------------------
===

 *   

     ==============================================================
     LMC(0)_WLEVEL_RANK(0..3) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:47> NS       RAZ       NS          NS       RESERVED                                               
 <46:45> STATUS   RO        0x0         NS       Indicates status of the write-leveling and where       
                                                 the BYTE* programmings in <44:0> came from:
                                                 0 = BYTE* values are their reset value
                                                 1 = BYTE* values were set via a CSR write to this register
                                                 2 = write-leveling sequence currently in progress (BYTE* values are unpredictable)
                                                 3 = BYTE* values came from a complete write-leveling sequence, irrespective of 
                                                     which lanes are masked via LMC*WLEVEL_CTL[LANEMASK]
 <44:40> BYTE8    R/W       0x0         NS       Deskew setting                                         
                                                 Bit 0 of BYTE8 must be zero during normal operation.
                                                 When ECC DRAM is not present (i.e. when DRAM is not
                                                 attached to chip signals DDR_CBS_0_* and DDR_CB[7:0]),
                                                 SW should write BYTE8 with a value that does
                                                 not increase the range of possible BYTE* values. The
                                                 easiest way to do this is to set
                                                 LMC*_WLEVEL_RANK*[BYTE8] = LMC*_WLEVEL_RANK*[BYTE0]
                                                 when there is no ECC DRAM, using the final BYTE0 value.
 <39:35> BYTE7    R/W       0x0         NS       Deskew setting                                         
                                                 Bit 0 of BYTE7 must be zero during normal operation
 <34:30> BYTE6    R/W       0x0         NS       Deskew setting                                         
                                                 Bit 0 of BYTE6 must be zero during normal operation
 <29:25> BYTE5    R/W       0x0         NS       Deskew setting                                         
                                                 Bit 0 of BYTE5 must be zero during normal operation
 <24:20> BYTE4    R/W       0x0         NS       Deskew setting                                         
                                                 Bit 0 of BYTE4 must be zero during normal operation
 <19:15> BYTE3    R/W       0x0         NS       Deskew setting                                         
                                                 Bit 0 of BYTE3 must be zero during normal operation
 <14:10> BYTE2    R/W       0x0         NS       Deskew setting                                         
                                                 Bit 0 of BYTE2 must be zero during normal operation
 <9:5>   BYTE1    R/W       0x0         NS       Deskew setting                                         
                                                 Bit 0 of BYTE1 must be zero during normal operation
 <4:0>   BYTE0    R/W       0x0         NS       Deskew setting                                         
                                                 Bit 0 of BYTE0 must be zero during normal operation

Notes:
  This is four CSRs per LMC, one per each rank.

  Deskew setting is measured in units of 1/8 CK, so the above BYTE* values can range over 4 CKs.

  Assuming LMC*_WLEVEL_CTL[SSET]=0, the BYTE*<2:0> values are not used during write-leveling, and
  they are over-written by the hardware as part of the write-leveling sequence. (HW sets STATUS==3
  after HW write-leveling completes for the rank). SW needs to set BYTE*<4:3> bits.

  Each CSR may also be written by SW, but not while a write-leveling sequence is in progress. (HW sets STATUS==1 after a CSR write.)

  SW initiates a HW write-leveling sequence by programming LMC*_WLEVEL_CTL and writing RANKMASK and INIT_START=1 with SEQUENCE=6 in LMC*_CONFIG.
  LMC will then step through and accumulate write leveling results for 8 unique delay settings (twice), starting at a delay of 
  LMC*_WLEVEL_RANKn[BYTE*<4:3>]*8 CK increasing by 1/8 CK each setting. HW will then set LMC*_WLEVEL_RANKi[BYTE*<2:0>] to indicate the 
  first write leveling result of '1' that followed a reslt of '0' during the sequence by searching for a '1100' pattern in the generated 
  bitmask, except that LMC will always write LMC*_WLEVEL_RANKi[BYTE*<0>]=0. If HW is unable to find a match for a '1100' pattern, then HW will 
  set LMC*_WLEVEL_RANKi[BYTE*<2:0>] to 4.
  See LMC*_WLEVEL_CTL.

  LMC*_WLEVEL_RANKi values for ranks i without attached DRAM should be set such that 
  they do not increase the range of possible BYTE values for any byte
  lane. The easiest way to do this is to set
      LMC*_WLEVEL_RANKi = LMC*_WLEVEL_RANKj,
  where j is some rank with attached DRAM whose LMC*_WLEVEL_RANKj is already fully initialized.
----------------------------------------------------------------------------------------------------
===

 *   

     ==============================================================
     LMC(0)_WLEVEL_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:10> NS       RAZ      NS          NS        RESERVED                                               
 <9>     SSET     R/W      0x0         NS        Run write-leveling on the current setting only.        
 <8:0>   LANEMASK R/W      0x0         NS        One-hot mask to select byte lane to be leveled by      
                                                 the write-leveling sequence
                                                 Used with x16 parts where the upper and lower byte
                                                 lanes need to be leveled independently
Notes:
----------------------------------------------------------------------------------------------------
===

 *   

     ==============================================================
     LMC(0)_WLEVEL_DBG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:12> NS       RAZ       NS          NS       RESERVED                                               

 <11:4>  BITMASK  RO       0x0         0x0       Bitmask generated during deskew settings sweep         
                                                 if LMCX_WLEVEL_CTL[SSET]=0
                                                   BITMASK[n]=0 means deskew setting n failed
                                                   BITMASK[n]=1 means deskew setting n passed
                                                   for 0 <= n <= 7
                                                   BITMASK contains the first 8 results of the total 16
                                                   collected by LMC during the write-leveling sequence
                                                 else if LMCX_WLEVEL_CTL[SSET]=1
                                                   BITMASK[0]=0 means curr deskew setting failed
                                                   BITMASK[0]=1 means curr deskew setting passed

 <3:0>   BYTE     R/W      0x0         0x0       0 <= BYTE <= 8                                         

Notes:
  A given write of LMC*_WLEVEL_DBG returns the write-leveling pass/fail results for all possible
  delay settings (i.e. the BITMASK) for only one byte in the last rank that the HW write-leveled.
  LMC*_WLEVEL_DBG[BYTE] selects the particular byte.
  To get these pass/fail results for another different rank, you must run the hardware write-leveling
  again. For example, it is possible to get the BITMASK results for every byte of every rank
  if you run write-leveling separately for each rank, probing LMC*_WLEVEL_DBG between each
  write-leveling.
----------------------------------------------------------------------------------------------------
===

 *   
 *                    LMC_FADR = LMC Failing Address Register (SEC/DED/NXM)
 *
 *This register only captures the first transaction with ecc/nxm errors. A DED/NXM error can 
 *over-write this register with its failing addresses if the first error was a SEC. If you write
 *LMC*_CONFIG->SEC_ERR/DED_ERR/NXM_ERR then it will clear the error bits and capture the
 *next failing address.
 *
 *If FDIMM is 2 that means the error is in the higher bits DIMM.  

     ==============================================================
     LMC(0)_FADR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<13:0>   FCOL        RO      0       0      Failing Column Address[13:0]                             
                                            Technically, represents the address of the 128b data
                                            that had an ecc error, i.e., fcol[0] is always 0. Can
                                            be used in conjuction with LMC*_CONFIG[DED_ERR] to
                                            isolate the 64b chunk of data in error
<29:14>  FROW        RO      0       0      Failing Row Address[15:0]                                
<32:30>  FBANK       RO      0       0      Failing Bank[2:0]                                        
<33>     FBUNK       RO      0       0      Failing Rank                                             
<35:34>  FDIMM       RO      0       0      Failing DIMM#                                            
<63:36>  NS          RAZ     NS      NS     RESERVED                                                 
----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_ECC_SYND = MRD ECC Syndromes
 *   

     ==============================================================
     LMC(0)_ECC_SYND Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>    MRDSYN0     RO      0       0      MRD ECC Syndrome Quad0                                   
                                            MRDSYN0 corresponds to DQ[63:0]_c0_p0
                                              where _cC_pP denotes cycle C and phase P 
<15:8>   MRDSYN1     RO      0       0      MRD ECC Syndrome Quad1                                   
                                            MRDSYN1 corresponds to DQ[63:0]_c0_p1
                                              where _cC_pP denotes cycle C and phase P 
<23:16>  MRDSYN2     RO      0       0      MRD ECC Syndrome Quad2                                   
                                            MRDSYN2 corresponds to DQ[63:0]_c1_p0
                                              where _cC_pP denotes cycle C and phase P 
<31:24>  MRDSYN3     RO      0       0      MRD ECC Syndrome Quad3                                   
                                            MRDSYN3 corresponds to DQ[63:0]_c1_p1
                                              where _cC_pP denotes cycle C and phase P 
<63:32>  NS          RAZ     NS      NS     RESERVED                                                 
----------------------------------------------------------------------------------------------------
===
 *   
 *                  LMC_IFB_CNT  = Performance Counters
 *   

     ==============================================================
     LMC(0)_IFB_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>   IFBCNT      RO      0       0      Performance Counter                                      
                                            64-bit counter that increments every
                                            CK cycle there is something in the in-flight buffer.
----------------------------------------------------------------------------------------------------
===
 *   
 *                  LMC_OPS_CNT  = Performance Counters
 *   

     ==============================================================
     LMC(0)_OPS_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>   OPSCNT      RO      0       0      Performance Counter                                      
                                            64-bit counter that increments when the DDR3 data bus
                                            is being used
                                            DRAM bus utilization = LMC*_OPS_CNT/LMC*_DCLK_CNT
----------------------------------------------------------------------------------------------------
===
 *   
 *                  LMC_DCLK_CNT  = Performance Counters
 *   

     ==============================================================
     LMC(0)_DCLK_CNT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>   DCLKCNT     RO      0       0      Performance Counter                                      
                                            64-bit counter that increments every CK cycle
----------------------------------------------------------------------------------------------------
===
 *
 *                  LMC_DUAL_MEMCFG = LMC Dual Memory Configuration Register
 *
 * This register controls certain parameters of Dual Memory Configuration 
 *

     ==============================================================
     LMC(0)_DUAL_MEMCFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:19> NS           RAZ     NS     NS      RESERVED                                                 
<18:16> ROW_LSB      R/W    0x3     NS      See LMC*_CONFIG[ROW_LSB]                                 
<15:8>  NS           RAZ     NS     NS      RESERVED                                                 
<7:0>   CS_MASK      R/W    0x0     NS      Chip select mask.                                        
                                            This mask corresponds to the 8 chip selects for a memory
                                            configuration.  Each reference address will assert one of
                                            the chip selects.  If that chip select has its
                                            corresponding CS_MASK bit set, then the "config1"
                                            parameters are used, otherwise the "config0" parameters
                                            are used.  See additional notes below.
                                            [7:4] *UNUSED IN 63xx*

Notes:	
 This register enables the design to have two, separate memory configurations, selected dynamically
 by the reference address.  Note however, that both configurations share
 LMC*_CONTROL[XOR_BANK], LMC*_CONFIG[PBANK_LSB], LMC*_CONFIG[RANK_ENA], and all timing parameters.
 In this description, "config0" refers to the normal memory configuration that is defined by the
 LMC*_CONFIG[ROW_LSB] parameters and "config1" refers to the dual (or second)
 memory configuration that is defined by this register.  

 Enable mask to chip select mapping is shown below:
   CS_MASK[3] -> DIMM1_CS_<1>
   CS_MASK[2] -> DIMM1_CS_<0>

   CS_MASK[1] -> DIMM0_CS_<1>
   CS_MASK[0] -> DIMM0_CS_<0>

  DIMM n uses the pair of chip selects DIMMn_CS_<1:0>.

  Programming restrictions for CS_MASK:
    when LMC*_CONFIG[RANK_ENA] == 0, CS_MASK[2n + 1] = CS_MASK[2n]

----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_DLL_CTL2 = LMC (Octeon) DLL control and DCLK reset
 *   

     ==============================================================
     LMC(0)_DLL_CTL2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>    BYP_SETTING R/W    0x0     0x0     Bypass setting                                             
                                            DDR3-1600: 00100010
                                            DDR3-1333: 00110010
                                            DDR3-1066: 01001011
                                            DDR3-800 : 01110101
                                            DDR3-667 : 10010110
                                            DDR3-600 : 10101100
                                            *DON'T PUT IN HRM*

<11:8>   BYP_SEL     R/W    0x0     0x0     Bypass select                                              
                                            0000 : no byte
                                            0001 : byte 0
                                            ...
                                            1001 : byte 8
                                            1010 : all bytes
                                            1011-1111 : Reserved
                                            *DON'T PUT IN HRM*

<12>     QUAD_DLL_ENA R/W   0x0     0x0     DLL Enable                                                 

<13>     DRESET       R/W   0x1     0x0     Dclk domain reset.  The reset signal that is used by the   
                                            Dclk domain is (DRESET || ECLK_RESET).

<14>     DLL_BRINGUP  R/W   0x0     0x0     DLL Bringup                                                

<63:15>  NS          RAZ    NS      NS      RESERVED                                                   

Notes:
DLL Bringup sequence:
1. If not done already, set LMC*_DLL_CTL2 = 0, except when LMC*_DLL_CTL2[DRESET] = 1.
2. Write 1 to LMC*_DLL_CTL2[DLL_BRINGUP] 
3. Wait for 10 CK cycles, then write 1 to LMC*_DLL_CTL2[QUAD_DLL_ENA]. It may not be feasible to count 10 CK cycles, but the 
   idea is to configure the delay line into DLL mode by asserting DLL_BRING_UP earlier than [QUAD_DLL_ENA], even if it is one 
   cycle early. LMC*_DLL_CTL2[QUAD_DLL_ENA] must not change after this point without restarting the LMC and/or DRESET initialization 
   sequence.
4. Read L2D_BST0 and wait for the result. (L2D_BST0 is subject to change depending on how it called in o63. It is still ok to go 
   without step 4, since step 5 has enough time)
5. Wait 10 us.
6. Write 0 to LMC*_DLL_CTL2[DLL_BRINGUP]. LMC*_DLL_CTL2[DLL_BRINGUP] must not change after this point without restarting the LMC 
   and/or DRESET initialization sequence.
7. Read L2D_BST0 and wait for the result. (same as step 4, but the idea here is the wait some time before going to step 8, even it 
   is one cycle is fine)
8. Write 0 to LMC*_DLL_CTL2[DRESET].  LMC*_DLL_CTL2[DRESET] must not change after this point without restarting the LMC and/or 
   DRESET initialization sequence.
----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_PHY_CTL = LMC PHY Control
 *   

     ==============================================================
     LMC(0)_PHY_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:14>  NS         RAZ     NS      NS      RESERVED                                                   
<13>     LV_MODE    R/W     0x0     NS      Low Voltage Mode (1.35V)                                   
                                            *DON'T PUT IN HRM*
<12>     CK_TUNE1   R/W     0x0     NS      Clock Tune                                                 
                                            *DON'T PUT IN HRM*
<11:8>   CK_DLYOUT1 R/W     0x0     NS      Clock delay out setting                                    
                                            *DON'T PUT IN HRM*
<7>      CK_TUNE0   R/W     0x0     NS      Clock Tune                                                 
                                            *DON'T PUT IN HRM*
<6:3>    CK_DLYOUT0 R/W     0x0     NS      Clock delay out setting                                    
                                            *DON'T PUT IN HRM*
<2>      LOOPBACK   R/W     0x0     NS      Loopback enable                                            
                                            *DON'T PUT IN HRM*
<1>      LOOPBACK_POS R/W   0x0     NS      Loopback pos mode                                          
                                            *DON'T PUT IN HRM*
<0>      TS_STAGGER R/W     0x0     NS      TS Staggermode                                             
                                            This mode configures output drivers with 2-stage drive 
                                            strength to avoid undershoot issues on the bus when strong 
                                            drivers are suddenly turned on. When this mode is asserted, 
                                            Octeon will configure output drivers to be weak drivers 
                                            (60 ohm output impedance) at the first CK cycle, and 
                                            change drivers to the designated drive strengths specified 
                                            in $LMC(0)_COMP_CTL2 [CMD_CTL/CK_CTL/DQX_CTL] starting 
                                            at the following cycle

Notes:
----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_DLL_CTL3 = LMC DLL control and DCLK reset
 *   

     ==============================================================
     LMC(0)_DLL_CTL3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<5:0>    OFFSET      R/W    0x0     0x0     Write/read offset setting                                  
                                            [4:0] : offset
	                                    [5]   : 0 = increment, 1 = decrement
                                            Not a 2's complement value
                                            *DON'T PUT IN HRM*
<9:6>    BYTE_SEL    R/W    0x0     0x0     Byte select                                                
                                            0000 : no byte
                                            0001 : byte 0
                                            ...
                                            1001 : byte 8
                                            1010 : all bytes
                                            1011-1111 : Reserved
                                            *DON'T PUT IN HRM*
<11:10>  MODE_SEL    R/W    0x0     0x0     Mode select                                                
                                            00 : reset
                                            01 : write
                                            10 : read
                                            11 : write & read
                                            *DON'T PUT IN HRM*
<12>     LOAD_OFFSET WR0    0x0     0x0     Load offset                                                
                                            0 : disable
                                            1 : load (generates a 1 cycle pulse to the PHY)
                                            This register is oneshot and clears itself each time
                                            it is set
                                            *DON'T PUT IN HRM*
<13>     OFFSET_ENA  R/W    0x0     0x0     Offset enable                                              
                                            0 = disable
                                            1 = enable
                                            *DON'T PUT IN HRM*
<17:14>  DLL90_BYTE_SEL R/W 0x1     0x1     Observe DLL settings for selected byte                     
                                            0001 : byte 0
                                            ...
                                            1001 : byte 8
                                            0000,1010-1111 : Reserved
                                            *DON'T PUT IN HRM*
<18>     DLL_MODE    R/W    0x0     0x0     DLL Mode                                                   
                                            *DON'T PUT IN HRM*
<19>     FINE_TUNE_MODE R/W 0x0     0x1     DLL Fine Tune Mode                                         
                                            0 = disabled
                                            1 = enable.
                                            When enabled, calibrate internal PHY DLL every
                                            LMC*_CONFIG[REF_ZQCS_INT] CK cycles.
<27:20>  DLL90_SETTING RO   NS      NS      Encoded DLL settings. Works in conjuction with             
                                            DLL90_BYTE_SEL
                                            *DON'T PUT IN HRM*
<28>     DLL_FAST    RO     NS      NS      DLL lock                                                   
                                            0 = DLL locked
                                            *DON'T PUT IN HRM*
<63:29>  NS          RAZ    NS      NS      RESERVED                                                   

Notes:
----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_NXM = LMC non-existent memory
 *   

     ==============================================================
     LMC(0)_NXM Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:40>  NS            RAZ     NS     NS     RESERVED                                                 
<39:36>  MEM_MSB_D3_R1 R/W    0x0     NS     Max Row MSB for DIMM3, RANK1/DIMM3 in Single Ranked      
                                             *UNUSED IN 63xx*
<35:32>  MEM_MSB_D3_R0 R/W    0x0     NS     Max Row MSB for DIMM3, RANK0                             
                                             *UNUSED IN 63xx*
<31:28>  MEM_MSB_D2_R1 R/W    0x0     NS     Max Row MSB for DIMM2, RANK1/DIMM2 in Single Ranked      
                                             *UNUSED IN 63xx*
<27:24>  MEM_MSB_D2_R0 R/W    0x0     NS     Max Row MSB for DIMM2, RANK0                             
                                             *UNUSED IN 63xx*
<23:20>  MEM_MSB_D1_R1 R/W    0x0     NS     Max Row MSB for DIMM1, RANK1/DIMM1 in Single Ranked      
<19:16>  MEM_MSB_D1_R0 R/W    0x0     NS     Max Row MSB for DIMM1, RANK0                             
<15:12>  MEM_MSB_D0_R1 R/W    0x0     NS     Max Row MSB for DIMM0, RANK1/DIMM0 in Single Ranked      
<11:8>   MEM_MSB_D0_R0 R/W    0x0     NS     Max Row MSB for DIMM0, RANK0                             
<7:0>    CS_MASK       R/W    0x0     NS     Chip select mask.                                        
                                             This mask corresponds to the 8 chip selects for a memory
                                             configuration.  If LMC*_CONFIG[RANK_ENA]==0 then this
                                             mask must be set in pairs because each reference address
                                             will assert a pair of chip selects.  If the chip
                                             select(s) have a corresponding CS_MASK bit set, then the
                                             reference is to non-existent memory (NXM).  LMC will alias a
                                             NXM read reference to use the lowest, legal chip select(s)
                                             and return 0's. LMC normally discards NXM writes, but will
                                             also alias them when LMC*_CONTROL[NXM_WRITE_EN]=1.
                                             CS_MASK<7:4> MBZ in 63xx
Notes:
				            Decoding for mem_msb/rank
                                                 0000: mem_msb = mem_adr[25]
                                                 0001: mem_msb = mem_adr[26] 
                                                 0010: mem_msb = mem_adr[27] 
                                                 0011: mem_msb = mem_adr[28] 
                                                 0100: mem_msb = mem_adr[29] 
                                                 0101: mem_msb = mem_adr[30] 
                                                 0110: mem_msb = mem_adr[31] 
                                                 0111: mem_msb = mem_adr[32] 
                                                 1000: mem_msb = mem_adr[33] 
                                                 1001: mem_msb = mem_adr[34] 
                                                 1010-1111 = Reserved
	                                    For example, for a DIMM made of Samsung's k4b1g0846c-f7 1Gb (16M x 8 bit x 8 bank) 
                                            DDR3 parts, the column address width = 10, so with 
                                            10b of col, 3b of bus, 3b of bank, row_lsb = 16. So, row = mem_adr[29:16] and 
                                            mem_msb = 4

                                            Note also that addresses greater the max defined space (pbank_msb) are also treated
                                            as NXM accesses
----------------------------------------------------------------------------------------------------
===
 *
 *                  LMC_INT_EN = LMC Interrupt Enable Register
 *

     ==============================================================
     LMC(0)_INT_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>  INTR_NXM_WR_ENA R/W    0       1       Non Write Error Interrupt Enable bit                     
                                            When set, the memory controller raises a processor
                                            interrupt on detecting an non-existent memory write
<1>  INTR_SEC_ENA   R/W     0       1       ECC Single Error Correct(SEC) Interrupt Enable bit       
                                            When set, the memory controller raises a processor
                                            interrupt on detecting a correctable Single Bit ECC
                                            error.
<2>  INTR_DED_ENA   R/W     0       1       ECC Double Error Detect(DED) Interrupt Enable bit        
                                            When set, the memory controller raises a processor
                                            interrupt on detecting an uncorrectable Dbl Bit ECC
                                            error.
<63:3>  NS          RAZ     NS      NS      RESERVED                                                 
----------------------------------------------------------------------------------------------------
===
 *
 *                  LMC_INT = LMC Interrupt Register
 *

     ==============================================================
     LMC(0)_INT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     NXM_WR_ERR   R/W1C   0x0     0x0    Write to non-existent memory                             
                                            Write of 1 will clear the corresponding error bit
<4:1>   SEC_ERR      R/W1C   0x0     0x0     Single Error (corrected) of Rd Data                     
                                             [0] corresponds to DQ[63:0]_c0_p0
                                             [1] corresponds to DQ[63:0]_c0_p1
                                             [2] corresponds to DQ[63:0]_c1_p0
                                             [3] corresponds to DQ[63:0]_c1_p1
                                             where _cC_pP denotes cycle C and phase P
                                             Write of 1 will clear the corresponding error bit
<8:5>   DED_ERR      R/W1C   0x0     0x0     Double Error detected (DED) of Rd Data                  
                                             [0] corresponds to DQ[63:0]_c0_p0
                                             [1] corresponds to DQ[63:0]_c0_p1
                                             [2] corresponds to DQ[63:0]_c1_p0
                                             [3] corresponds to DQ[63:0]_c1_p1
                                             where _cC_pP denotes cycle C and phase P
                                             Write of 1 will clear the corresponding error bit
<63:9>  NS           RAZ     NS      NS      RESERVED                                                
----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_SLOT_CTL0 = LMC Slot Control0
 * This register is an assortment of various control fields needed by the memory controller
 *   

     ==============================================================
     LMC(0)_SLOT_CTL0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<5:0>    R2R_INIT    R/W   0x1     NS        Read-to-read spacing control                               
                                             for back to back accesses to the same rank and DIMM
<11:6>   R2W_INIT    R/W   0x6     NS        Read-to-write spacing control                              
                                             for back to back accesses to the same rank and DIMM
<17:12>  W2R_INIT    R/W   0x9     NS        Write-to-read spacing control                              
                                             for back to back accesses to the same rank and DIMM
<23:18>  W2W_INIT    R/W   0x1     NS        Write-to-write spacing control                             
                                             for back to back accesses to the same rank and DIMM
<63:24>  NS          RAZ   NS      NS        RESERVED                                                   

Notes:

If SW has not previously written to this register (since the last DRESET),
HW updates the fields in this register to the minimum allowed value
when any of LMC*_RLEVEL_RANKn, LMC*_WLEVEL_RANKn, LMC*_CONTROL and
LMC*_MODEREG_PARAMS0 CSR's change. Ideally, only read this register
after LMC has been initialized and LMC*_RLEVEL_RANKn, LMC*_WLEVEL_RANKn 
have valid data.

The interpretation of the fields in this CSR depends on LMC*_CONFIG[DDR2T]:
 - If LMC*_CONFIG[DDR2T]=1, (FieldValue + 4) is the minimum CK cycles
   between when the DRAM part registers CAS commands of the 1st and 2nd types
   from different cache blocks.
 - If LMC*_CONFIG[DDR2T]=0, (FieldValue + 3) is the minimum CK cycles
   between when the DRAM part registers CAS commands of the 1st and 2nd types
   from different cache blocks. FieldValue = 0 is always illegal in this
   case.

The hardware-calculated minimums are:

min R2R_INIT = 1 - LMC*_CONFIG[DDR2T]
min R2W_INIT = 5 - LMC*_CONFIG[DDR2T] + (RL + MaxRdSkew) - (WL + MinWrSkew) + LMC*_CONTROL[BPRCH]
min W2R_INIT = 2 - LMC*_CONFIG[DDR2T] + LMC*_TIMING_PARAMS1[TWTR] + WL
min W2W_INIT = 1 - LMC*_CONFIG[DDR2T]

where

RL        = CL  + AL (LMC*_MODEREG_PARAMS0[CL] selects CL, LMC*_MODEREG_PARAMS0[AL] selects AL)
WL        = CWL + AL (LMC*_MODEREG_PARAMS0[CWL] selects CWL)
MaxRdSkew = max(LMC*_RLEVEL_RANKi[BYTEj]/4) + 1                          (max is across all ranks i (0..3) and bytes j (0..8))
MinWrSkew = min(LMC*_WLEVEL_RANKi[BYTEj]/8) - LMC*_CONFIG[EARLY_DQX]     (min is across all ranks i (0..3) and bytes j (0..8))

R2W_INIT has 1 CK cycle built in for OCTEON-internal ODT settling/channel turnaround time.

----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_SLOT_CTL1 = LMC Slot Control1
 * This register is an assortment of various control fields needed by the memory controller
 *   

     ==============================================================
     LMC(0)_SLOT_CTL1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<5:0>    R2R_XRANK_INIT R/W 0x3    NS        Read-to-read spacing control                               
                                             for back to back accesses across ranks of the same DIMM
<11:6>   R2W_XRANK_INIT R/W 0x6    NS        Read-to-write spacing control                              
                                             for back to back accesses across ranks of the same DIMM
<17:12>  W2R_XRANK_INIT R/W 0x4    NS        Write-to-read spacing control                              
                                             for back to back accesses across ranks of the same DIMM
<23:18>  W2W_XRANK_INIT R/W 0x5    NS        Write-to-write spacing control                             
                                             for back to back accesses across ranks of the same DIMM
<63:24>  NS          RAZ   NS      NS        RESERVED                                                   

Notes:

If SW has not previously written to this register (since the last DRESET),
HW updates the fields in this register to the minimum allowed value
when any of LMC*_RLEVEL_RANKn, LMC*_WLEVEL_RANKn, LMC*_CONTROL and
LMC*_MODEREG_PARAMS0 CSR's change. Ideally, only read this register
after LMC has been initialized and LMC*_RLEVEL_RANKn, LMC*_WLEVEL_RANKn 
have valid data.

The interpretation of the fields in this CSR depends on LMC*_CONFIG[DDR2T]:
 - If LMC*_CONFIG[DDR2T]=1, (FieldValue + 4) is the minimum CK cycles
   between when the DRAM part registers CAS commands of the 1st and 2nd types
   from different cache blocks.
 - If LMC*_CONFIG[DDR2T]=0, (FieldValue + 3) is the minimum CK cycles
   between when the DRAM part registers CAS commands of the 1st and 2nd types
   from different cache blocks. FieldValue = 0 is always illegal in this
   case.

The hardware-calculated minimums are:

min R2R_XRANK_INIT = 2 - LMC*_CONFIG[DDR2T] + MaxRdSkew - MinRdSkew
min R2W_XRANK_INIT = 5 - LMC*_CONFIG[DDR2T] + (RL + MaxRdSkew) - (WL + MinWrSkew) + LMC*_CONTROL[BPRCH]
min W2R_XRANK_INIT = 3 - LMC*_CONFIG[DDR2T] + MaxWrSkew + LMC*_CONTROL[FPRCH2]
min W2W_XRANK_INIT = 4 - LMC*_CONFIG[DDR2T] + MaxWrSkew - MinWrSkew

where

RL        = CL  + AL (LMC*_MODEREG_PARAMS0[CL] selects CL, LMC*_MODEREG_PARAMS0[AL] selects AL)
WL        = CWL + AL (LMC*_MODEREG_PARAMS0[CWL] selects CWL)
MinRdSkew = min(LMC*_RLEVEL_RANKi[BYTEj]/4)                              (min is across all ranks i (0..3) and bytes j (0..8))
MaxRdSkew = max(LMC*_RLEVEL_RANKi[BYTEj]/4) + 1                          (max is across all ranks i (0..3) and bytes j (0..8))
MinWrSkew = min(LMC*_WLEVEL_RANKi[BYTEj]/8) - LMC*_CONFIG[EARLY_DQX]     (min is across all ranks i (0..3) and bytes j (0..8))
MaxWrSkew = max(LMC*_WLEVEL_RANKi[BYTEj]/8) - LMC*_CONFIG[EARLY_DQX] + 1 (max is across all ranks i (0..3) and bytes j (0..8))

R2W_XRANK_INIT has 1 extra CK cycle built in for OCTEON-internal ODT settling/channel turnaround time.

W2R_XRANK_INIT has 1 extra CK cycle built in for channel turnaround time.

----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_SLOT_CTL2 = LMC Slot Control2
 * This register is an assortment of various control fields needed by the memory controller
 *   

     ==============================================================
     LMC(0)_SLOT_CTL2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<5:0>    R2R_XDIMM_INIT R/W 0x4    NS        Read-to-read spacing control                               
                                             for back to back accesses across DIMMs
<11:6>   R2W_XDIMM_INIT R/W 0x7    NS        Read-to-write spacing control                              
                                             for back to back accesses across DIMMs
<17:12>  W2R_XDIMM_INIT R/W 0x4    NS        Write-to-read spacing control                              
                                             for back to back accesses across DIMMs
<23:18>  W2W_XDIMM_INIT R/W 0x6    NS        Write-to-write spacing control                             
                                             for back to back accesses across DIMMs
<63:24>  NS          RAZ   NS      NS        RESERVED                                                   

Notes:

If SW has not previously written to this register (since the last DRESET),
HW updates the fields in this register to the minimum allowed value
when any of LMC*_RLEVEL_RANKn, LMC*_WLEVEL_RANKn, LMC*_CONTROL and
LMC*_MODEREG_PARAMS0 CSR's change. Ideally, only read this register
after LMC has been initialized and LMC*_RLEVEL_RANKn, LMC*_WLEVEL_RANKn 
have valid data.

The interpretation of the fields in this CSR depends on LMC*_CONFIG[DDR2T]:
 - If LMC*_CONFIG[DDR2T]=1, (FieldValue + 4) is the minimum CK cycles
   between when the DRAM part registers CAS commands of the 1st and 2nd types
   from different cache blocks.
 - If LMC*_CONFIG[DDR2T]=0, (FieldValue + 3) is the minimum CK cycles
   between when the DRAM part registers CAS commands of the 1st and 2nd types
   from different cache blocks. FieldValue = 0 is always illegal in this
   case.

The hardware-calculated minimums are:

min R2R_XDIMM_INIT = 3 - LMC*_CONFIG[DDR2T] + MaxRdSkew - MinRdSkew
min R2W_XDIMM_INIT = 6 - LMC*_CONFIG[DDR2T] + (RL + MaxRdSkew) - (WL + MinWrSkew) + LMC*_CONTROL[BPRCH]
min W2R_XDIMM_INIT = 3 - LMC*_CONFIG[DDR2T] + MaxWrSkew + LMC*_CONTROL[FPRCH2]
min W2W_XDIMM_INIT = 5 - LMC*_CONFIG[DDR2T] + MaxWrSkew - MinWrSkew

where

RL        = CL  + AL (LMC*_MODEREG_PARAMS0[CL] selects CL, LMC*_MODEREG_PARAMS0[AL] selects AL)
WL        = CWL + AL (LMC*_MODEREG_PARAMS0[CWL] selects CWL)
MinRdSkew = min(LMC*_RLEVEL_RANKi[BYTEj]/4)                              (min is across all ranks i (0..3) and bytes j (0..8))
MaxRdSkew = max(LMC*_RLEVEL_RANKi[BYTEj]/4) + 1                          (max is across all ranks i (0..3) and bytes j (0..8))
MinWrSkew = min(LMC*_WLEVEL_RANKi[BYTEj]/8) - LMC*_CONFIG[EARLY_DQX]     (min is across all ranks i (0..3) and bytes j (0..8))
MaxWrSkew = max(LMC*_WLEVEL_RANKi[BYTEj]/8) - LMC*_CONFIG[EARLY_DQX] + 1 (max is across all ranks i (0..3) and bytes j (0..8))

R2W_XDIMM_INIT has 2 extra CK cycles built in for OCTEON-internal ODT settling/channel turnaround time.

R2R_XDIMM_INIT, W2R_XRANK_INIT, W2W_XDIMM_INIT have 1 extra CK cycle built in for channel turnaround time.

----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_CHAR_CTL = LMC Characterization Control
 * This register is an assortment of various control fields needed to charecterize the DDR3 interface
 * *DON'T PUT IN HRM*  

     ==============================================================
     LMC(0)_CHAR_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>   PRBS           R/W NS     NS        PRBS Polynomial                                   
<39:32>  PROG           R/W NS     NS        Programmable pattern                              
<40>     SEL            R/W NS     NS        Pattern select                                    
                                             0 = PRBS
                                             1 = Programmable pattern
<41>     EN             R/W NS     NS        Enable characterization                           
<63:42>  NS             R/W NS      NS        RESERVED                                          

Notes:
----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_CHAR_MASK0 = LMC Characterization Mask0
 * This register is an assortment of various control fields needed to charecterize the DDR3 interface
 * *DON'T PUT IN HRM*  

     ==============================================================
     LMC(0)_CHAR_MASK0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>   MASK        R/W   NS      NS        Mask for DQ0[63:0]                                

Notes:
----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_CHAR_MASK1 = LMC Characterization Mask1
 * This register is an assortment of various control fields needed to charecterize the DDR3 interface
 * *DON'T PUT IN HRM*  

     ==============================================================
     LMC(0)_CHAR_MASK1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   MASK        R/W   NS      NS        Mask for DQ0[71:64]                               
<63:8>  NS          R/W   NS      NS        RESERVED                                          

Notes:
----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_CHAR_MASK2 = LMC Characterization Mask2
 * This register is an assortment of various control fields needed to charecterize the DDR3 interface
 * *DON'T PUT IN HRM*  

     ==============================================================
     LMC(0)_CHAR_MASK2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>   MASK        R/W   NS      NS        Mask for DQ1[63:0]                                

Notes:
----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_CHAR_MASK3 = LMC Characterization Mask3
 * This register is an assortment of various control fields needed to charecterize the DDR3 interface
 * *DON'T PUT IN HRM*  

     ==============================================================
     LMC(0)_CHAR_MASK3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>   MASK        R/W   NS      NS        Mask for DQ1[71:64]                               
<63:8>  NS          R/W   NS      NS        RESERVED                                          

Notes:
----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_TRO_CTL = LMC Temperature Ring Osc Control
 * This register is an assortment of various control fields needed to control the temperature ring oscillator
 * *DON'T PUT IN HRM*  

     ==============================================================
     LMC(0)_TRO_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     TRESET      R/W   0x1     NS        Reset ring oscillator                             
<32:1>  RCLK_CNT    R/W   0x0     NS        rclk counter                                      
<63:33> NS          RAZ   NS      NS        RESERVED                                          
Notes:
To bring up the temperature ring oscillator, write TRESET to 0, and follow by initializing RCLK_CNT to desired
value
----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_TRO_STAT = LMC Temperature Ring Osc Status
 * This register is an assortment of various control fields needed to control the temperature ring oscillator
 * *DON'T PUT IN HRM*  

     ==============================================================
     LMC(0)_TRO_STAT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  RING_CNT    RO    0x0     NS        ring counter                                      
<63:32> NS          RAZ   NS      NS        RESERVED                                          

Notes:
----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_DDR_PLL_CTL = LMC DDR PLL control
 *   

     ==============================================================
     LMC(0)_DDR_PLL_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:27>  NS         RAZ     NS      NS      RESERVED                                                   
<26>     JTG_TEST_MODE R/W  0x0      0      JTAG Test Mode                                             
                                            Clock alignment between DCLK & REFCLK as well as FCLK & 
                                            REFCLK can only be performed after the ddr_pll_divider_reset 
                                            is deasserted. SW need to wait atleast 10 reference clock 
                                            cycles after deasserting pll_divider_reset before asserting 
                                            LMC(0)_DDR_PLL_CTL[JTG_TEST_MODE]. During alignment (which can 
                                            take upto 160 microseconds) DCLK and FCLK can exhibit some 
                                            high frequency pulses. Therefore, all bring up activities in 
                                            that clock domain need to be delayed (when the chip operates 
                                            in jtg_test_mode) by about 160 microseconds to ensure that 
                                            lock is achieved. 
                                            *DON'T PUT IN HRM*
<25>     DFM_DIV_RESET R/W  0x1      0      DFM postscalar divider reset                               
<24:22>  DFM_PS_EN  R/W     0x2     NS      DFM postscalar divide ratio                                
                                            Determines the DFM CK speed.
                                            0x0 : Divide LMC+DFM PLL output by 1
                                            0x1 : Divide LMC+DFM PLL output by 2
                                            0x2 : Divide LMC+DFM PLL output by 3
                                            0x3 : Divide LMC+DFM PLL output by 4
                                            0x4 : Divide LMC+DFM PLL output by 6
                                            0x5 : Divide LMC+DFM PLL output by 8
                                            0x6 : Divide LMC+DFM PLL output by 12
                                            0x7 : Divide LMC+DFM PLL output by 12
                                            DFM_PS_EN is not used when DFM_DIV_RESET = 1
<21>     DDR_DIV_RESET R/W  0x1      0      DDR postscalar divider reset                               
<20:18>  DDR_PS_EN  R/W     0x2     NS      DDR postscalar divide ratio                                
                                            Determines the LMC CK speed.
                                            0x0 : Divide LMC+DFM PLL output by 1
                                            0x1 : Divide LMC+DFM PLL output by 2
                                            0x2 : Divide LMC+DFM PLL output by 3
                                            0x3 : Divide LMC+DFM PLL output by 4
                                            0x4 : Divide LMC+DFM PLL output by 6
                                            0x5 : Divide LMC+DFM PLL output by 8
                                            0x6 : Divide LMC+DFM PLL output by 12
                                            0x7 : Divide LMC+DFM PLL output by 12
                                            DDR_PS_EN is not used when DDR_DIV_RESET = 1
<17:14>  DIFFAMP    R/W     0x0      1      PLL diffamp input transconductance                         
                                            *DON'T PUT IN HRM*
<13:11>  CPS        R/W     0x0      1      PLL charge-pump current                                    
                                            *DON'T PUT IN HRM*
<10:8>   CPB        R/W     0x0      1      PLL charge-pump current                                    
                                            *DON'T PUT IN HRM*
<7>      RESET_N    R/W     0x0      1      PLL reset                                                  
<6:0>    CLKF       R/W     0x30     NS     Multiply reference by CLKF                                 
                                            32 <= CLKF <= 64
                                            LMC+DFM PLL frequency = 50 * CLKF
                                            min = 1.6 GHz, max = 3.2 GHz
Notes:
DDR PLL Bringup sequence:
1.  Write CLKF, DDR_PS_EN, DFM_PS_EN, DIFFAMP, CPS, CPB. 
    If test mode is going to be activated, then also write jtg__ddr_pll_tm_en1, jtg__ddr_pll_tm_en2, jtg__ddr_pll_tm_en3, 
    jtg__ddr_pll_tm_en4, jtg__dfa_pll_tm_en1, jtg__dfa_pll_tm_en2, jtg__dfa_pll_tm_en3, jtg__dfa_pll_tm_en4, JTAG_TEST_MODE
2.  Wait 128 ref clock cycles (7680 rclk cycles)
3.  Write 1 to RESET_N 
4.  Wait 1152 ref clocks (1152*16 rclk cycles)
5.  Write 0 to  DDR_DIV_RESET and DFM_DIV_RESET
6.  Wait 10 ref clock cycles (160 rclk cycles) before bringing up the DDR interface
    If test mode is going to be activated, wait an additional 8191 ref clocks (8191*16 rclk cycles) to allow PLL 
    clock alignment
----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_RODT_MASK = LMC Read OnDieTermination mask
 * System designers may desire to terminate DQ/DQS lines for higher frequency DDR operations 
 * especially on a multi-rank system. DDR3 DQ/DQS I/O's have built in 
 * Termination resistor that can be turned on or off by the controller, after meeting tAOND and tAOF
 * timing requirements. Each Rank has its own ODT pin that fans out to all the memory parts
 * in that DIMM. System designers may prefer different combinations of ODT ON's for reads
 * into different ranks. Octeon supports full programmability by way of the mask register below.
 * Each Rank position has its own 8-bit programmable field.
 * When the controller does a read to that rank, it sets the 4 ODT pins to the MASK pins below.
 * For eg., When doing a read from Rank0, a system designer may desire to terminate the lines
 * with the resistor on DIMM0/Rank1. The mask RODT_D0_R0 would then be {00000010}. 
 * Octeon drives the appropriate mask values on the ODT pins by default. If this feature is not 
 * required, write 0 in this register. Note that, as per the DDR3 specifications, the ODT pin 
 * for the rank that is being read should always be 0. 


     ==============================================================
     LMC(0)_RODT_MASK Type=RSL
     ==============================================================


----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:56>  RODT_D3_R1  R/W    0x00    0x00    Read ODT mask DIMM3, RANK1/DIMM3 in SingleRanked          
                                            *UNUSED IN 63xx, and MBZ*
<55:48>  RODT_D3_R0  R/W    0x00    0x00    Read ODT mask DIMM3, RANK0                                
                                            *UNUSED IN 63xx, and MBZ*
<47:40>  RODT_D2_R1  R/W    0x00    0x00    Read ODT mask DIMM2, RANK1/DIMM2 in SingleRanked          
                                            *UNUSED IN 63xx, and MBZ*
<39:32>  RODT_D2_R0  R/W    0x00    0x00    Read ODT mask DIMM2, RANK0                                
                                            *UNUSED IN 63xx, and MBZ*
<31:24>  RODT_D1_R1  R/W    0x00    NS      Read ODT mask DIMM1, RANK1/DIMM1 in SingleRanked          
                                            if (RANK_ENA) then
                                                RODT_D1_R1[3] must be 0	
                                            else
                                                RODT_D1_R1[3:0] is not used and MBZ
                                            *Upper 4 bits UNUSED IN 63xx, and MBZ*
<23:16>  RODT_D1_R0  R/W    0x00    NS      Read ODT mask DIMM1, RANK0                                
                                            if (RANK_ENA) then 
                                                RODT_D1_RO[2] must be 0
                                            else       
                                                RODT_D1_RO[3:2,1] must be 0
                                            *Upper 4 bits UNUSED IN 63xx, and MBZ*
<15:8>   RODT_D0_R1  R/W    0x00    NS      Read ODT mask DIMM0, RANK1/DIMM0 in SingleRanked          
                                            if (RANK_ENA) then
                                                RODT_D0_R1[1] must be 0	
                                            else
                                                RODT_D0_R1[3:0] is not used and MBZ
                                            *Upper 4 bits UNUSED IN 63xx, and MBZ*
<7:0>    RODT_D0_R0  R/W    0x00    NS      Read ODT mask DIMM0, RANK0                                
                                            if (RANK_ENA) then 
                                                RODT_D0_RO[0] must be 0
                                            else       
                                                RODT_D0_RO[1:0,3] must be 0
                                            *Upper 4 bits UNUSED IN 63xx, and MBZ*

Notes:
When a given RANK is selected, the RODT mask for that RANK is used.  The resulting RODT mask is
driven to the DIMMs in the following manner:
	    RANK_ENA=1                    RANK_ENA=0
Mask[3] -> DIMM1_ODT_1                    MBZ
Mask[2] -> DIMM1_ODT_0	                  DIMM1_ODT_0
Mask[1] -> DIMM0_ODT_1                    MBZ
Mask[0] -> DIMM0_ODT_0                    DIMM0_ODT_0

LMC always reads entire cache blocks and always reads them via two consecutive
read CAS operations to the same rank+bank+row spaced exactly 4 CK's apart.
When a RODT mask bit is set, LMC asserts the OCTEON ODT output
pin(s) starting (CL - CWL) CK's after the first read CAS operation. Then, OCTEON
normally continues to assert the ODT output pin(s) for 9+LMC*_CONTROL[RODT_BPRCH] more CK's
- for a total of 10+LMC*_CONTROL[RODT_BPRCH] CK's for the entire cache block read -
through the second read CAS operation of the cache block,
satisfying the 6 CK DDR3 ODTH8 requirements.
But it is possible for OCTEON to issue two cache block reads separated by as few as
RtR = 8 or 9 (10 if LMC*_CONTROL[RODT_BPRCH]=1) CK's. In that case, OCTEON asserts the ODT output pin(s)
for the RODT mask of the first cache block read for RtR CK's, then asserts
the ODT output pin(s) for the RODT mask of the second cache block read for 10+LMC*_CONTROL[RODT_BPRCH] CK's
(or less if a third cache block read follows within 8 or 9 (or 10) CK's of this second cache block read).
Note that it may be necessary to force LMC to space back-to-back cache block reads
to different ranks apart by at least 10+LMC*_CONTROL[RODT_BPRCH] CK's to prevent DDR3 ODTH8 violations.
----------------------------------------------------------------------------------------------------
===
 *                    LMC_DIMM@_PARAMS = LMC DIMM@ Params
 * This register contains values to be programmed into each control word in the corresponding (registered) DIMM. The control words allow
 * optimization of the device properties for different raw card designs.

     ==============================================================
     LMC(0)_DIMM(0..1)_PARAMS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<3:0>    RC0         R/W    0x00    0x00    RC0 , Global Features Control Word                         
<7:4>    RC1         R/W    0x00    0x00    RC1 , Clock Driver Enable Control Word                     
<11:8>   RC2         R/W    0x00    0x00    RC2 , Timing Control Word                                  
<15:12>  RC3         R/W    0x00    0x00    RC3 , CA Signals Driver Characterstics Control Word        
<19:16>  RC4         R/W    0x00    0x00    RC4 , Control Signals Driver Characteristics Control Word  
<23:20>  RC5         R/W    0x00    0x00    RC5 , CK Driver Characterstics Control Word                
<27:24>  RC6         R/W    0x00    0x00    RC6 , Reserved                                             
<31:28>  RC7         R/W    0x00    0x00    RC7 , Reserved                                             
<35:32>  RC8         R/W    0x00    0x00    RC8 , Additional IBT Settings Control Word                 
<39:36>  RC9         R/W    0x00    0x00    RC9 , Power Savings Settings Control Word                  
<43:40>  RC10        R/W    0x00    0x00    RC10, Encoding for RDIMM Operating Speed                   
<47:44>  RC11        R/W    0x00    0x00    RC11, Encoding for RDIMM Operating VDD                     
<51:48>  RC12        R/W    0x00    0x00    RC12, Reserved                                             
<55:52>  RC13        R/W    0x00    0x00    RC13, Reserved                                             
<59:56>  RC14        R/W    0x00    0x00    RC14, Reserved                                             
<63:60>  RC15        R/W    0x00    0x00    RC15, Reserved                                             

Notes: LMC only uses this CSR when LMC*_CONTROL[RDIMM_ENA]=1. During a power-up/init sequence, LMC writes
       these fields into the control words in the JEDEC standard SSTE32882 registering clock driver on an
       RDIMM when corresponding LMC*_DIMM_CTL[DIMM*_WMASK] bits are set.
----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_DIMM_CTL = LMC DIMM Control

     ==============================================================
     LMC(0)_DIMM_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>   DIMM0_WMASK R/W    0xffff  0xffff  DIMM0 Write Mask                                           
                                            if (DIMM0_WMASK[n] = 1)
                                                Write DIMM0.RCn
<31:16>  DIMM1_WMASK R/W    0xffff  0xffff  DIMM1 Write Mask                                           
                                            if (DIMM1_WMASK[n] = 1)
                                                Write DIMM1.RCn
<44:32>  TCWS        R/W    0x4e0   0x4e0   LMC waits for this time period before and after a RDIMM    
                                            Control Word Access during a power-up/init SEQUENCE. 
                                            TCWS is in multiples of 8 CK cycles.
                                            Set TCWS (CSR field) = RNDUP[tcws(ns)/(8*tCYC(ns))],
                                            where tCWS is the desired time (ns), and tCYC(ns)
                                            is the DDR clock frequency (not data rate).
                                            TYP=0x4e0 (equivalent to 15us) when changing
                                            clock timing (RC2.DBA1, RC6.DA4, RC10.DA3, RC10.DA4,
                                            RC11.DA3, and RC11.DA4) 
                                            TYP=0x8, otherwise
                                            0x0 = Reserved
<45:45>  PARITY      R/W    0x00    0x00    Parity                                                     
<63:46>  NS          RAZ     NS      NS     RESERVED                                                   

Notes: This CSR is only used when LMC*_CONTROL[RDIMM_ENA]=1. During a power-up/init sequence, this CSR
       controls LMC's writes to the control words in the JEDEC standard SSTE32882 registering clock driver
       on an RDIMM.
----------------------------------------------------------------------------------------------------
===
 *   
 *                    LMC_CHAR_MASK4 = LMC Characterization Mask4
 * This register is an assortment of various control fields needed to charecterize the DDR3 interface
 * *DON'T PUT IN HRM*  

     ==============================================================
     LMC(0)_CHAR_MASK4 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<1:0>    CKE_MASK   R/W  NS      NS        Mask for CKE*                                   
<3:2>    CS0_N_MASK R/W  NS      NS        Mask for CS0_N                                  
<5:4>    CS1_N_MASK R/W  NS      NS        Mask for CS1_N                                  
<7:6>    ODT0_MASK  R/W  NS      NS        Mask for ODT0                                   
<9:8>    ODT1_MASK  R/W  NS      NS        Mask for ODT1                                   
<10>     RAS_N_MASK R/W  NS      NS        Mask for RAS_N                                  
<11>     CAS_N_MASK R/W  NS      NS        Mask for CAS_N                                  
<12>     WE_N_MASK  R/W  NS      NS        Mask for WE_N                                   
<15:13>  BA_MASK    R/W  NS      NS        Mask for BA[2:0]                                
<31:16>  A_MASK     R/W  NS      NS        Mask for A[15:0]                                
<32>     RESET_N_MASK R/W NS     NS        Mask for RESET_L                                
<63:33>  NS         R/W  NS      NS        RESERVED                                        

Notes:
----------------------------------------------------------------------------------------------------
===


 *
 * MIO_BOOT_REG_CFG = MIO Boot Region Config Register (1 per region * 8 regions)
 *
 * Contains region enable, region or, region ALE/SAM mode, region width, region size, and region base
 * address parameters.
 *
 * DMACK, if non-zero, will assert the corresponding boot_dmack[n] pin when an access to this region
 * is performed.  DMACK is encoded as follows: 0 = disabled, 1 = boot_dmack[0], 2 = boot_dmack[1].
 * This is useful for CF cards in PC card memory mode that support DMA because the -REG and -DMACK pins
 * are shared.  Note: the assertion level of boot_dmack is specified by MIO_BOOT_DMA_TIMn[DMACK_PI].
 *
 * TIM_MULT specifies the timing multiplier for a region.  The timing multiplier applies to all timing
 * parameters, except for WAIT and RD_DLY, which simply count eclks.  TIM_MULT is encoded as follows:
 * 0 = 4x, 1 = 1x, 2 = 2x, 3 = 8x.
 *
 * RD_DLY specifies the read sample delay in eclk cycles for a region.  For reads, the data bus is
 * normally sampled on the same eclk edge that drives boot_oe_n to the inactive state (or the eclk edge
 * that toggles the lower address bits in page mode).  This parameter can delay that sampling edge by up
 * to 7 eclks.  Note: the number of eclk cycles counted by the PAGE and RD_HLD timing parameters must be
 * greater than RD_DLY.
 *
 * Region or bit will assert the given region's chip enable when there is an address hit in the previous
 * region (no function for region 0, since there is no previous region).  This is useful for CF cards
 * because it allows the use of 2 separate timing configurations for common memory and attribute memory.
 *
 * ALE (address latch enable) mode enables the multiplexed address/data bus mode.  The reset value for
 * region 0 is the value of boot_ad[15] on the first de-assertion of reset.  This pin has an internal
 * pulldown, so place a pullup on boot_ad[15] to enable this mode out of reset for region 0.
 *
 * SAM (strobe AND mode) internally combines the output enable and write enable strobes into a single
 * strobe that is then driven onto both boot_oe_n and boot_we_n.  This is useful for parts that use a
 * single strobe along with a read/write bit (the read/write bit can be driven from an address pin).
 *
 * Bus width can be specified as either 8 bits (WIDTH low) or 16 bits (WIDTH high).  The reset value for
 * region 0 is the value of boot_ad[14] on the first de-assertion of reset.  This pin has an internal
 * pulldown, so place a pullup on boot_ad[14] if a 16 bit bus is desired out of reset for region 0.
 *
 * Region size is in 64k blocks and in -1 notation (i.e. 0 = 1 64k block, 1 = 2 64k blocks, etc.).
 *
 * Base address specifies address bits [31:16] of the first 64k block of the region.
 *
 * Note: When region 0 is defined to be NAND flash, only MIO_BOOT_REG_CFG0[EN], MIO_BOOT_REG_CFG0[SIZE],
 * and MIO_BOOT_REG_CFG0[BASE] remain functional.  All other fields in MIO_BOOT_REG_CFG0 have no effect.
 *

     ==============================================================
     MIO_BOOT_REG_CFG0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:44> NS       RAZ      NS          NS        Reserved                                           |   
 <43:42> DMACK    R/W      0x0         NS        Region 0 DMACK                                     |   
 <41:40> TIM_MULT R/W      0x0         NS        Region 0 timing multiplier                         |   
 <39:37> RD_DLY   R/W      0x0         NS        Region 0 read sample delay                         |   
 <36>    SAM      R/W      0x0         NS        Region 0 SAM                                       |   
 <35:34> WE_EXT   R/W      0x0         NS        Region 0 write enable count extension              |   
 <33:32> OE_EXT   R/W      0x0         NS        Region 0 output enable count extension             |   
 <31>    EN       R/W      0x1         0x1       Region 0 enable                                    |   
 <30>    OR       R/W      0x0         0x0       No function for region 0                           |   
 <29>    ALE      R/W      0x0         NS        Region 0 ALE mode                                  |   
 <28>    WIDTH    R/W      0x0         NS        Region 0 bus width                                 |   
 <27:16> SIZE     R/W      0xfff       NS        Region 0 size                                      |   
 <15:0>  BASE     R/W      0x1fc0      0x1fc0    Region 0 base address                              |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_BOOT_REG_CFG(0..7) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:44> NS       RAZ      NS          NS        Reserved                                           |   
 <43:42> DMACK    R/W      0x0         NS        Region @ DMACK                                     |   
 <41:40> TIM_MULT R/W      0x0         NS        Region @ timing multiplier                         |   
 <39:37> RD_DLY   R/W      0x0         NS        Region @ read sample delay                         |   
 <36>    SAM      R/W      0x0         NS        Region @ SAM mode                                  |   
 <35:34> WE_EXT   R/W      0x0         NS        Region @ write enable count extension              |   
 <33:32> OE_EXT   R/W      0x0         NS        Region @ output enable count extension             |   
 <31>    EN       R/W      0x0         NS        Region @ enable                                    |   
 <30>    OR       R/W      0x0         NS        Region @ or bit                                    |   
 <29>    ALE      R/W      0x0         NS        Region @ ALE mode                                  |   
 <28>    WIDTH    R/W      0x0         NS        Region @ bus width                                 |   
 <27:16> SIZE     R/W      0x0         NS        Region @ size                                      |   
 <15:0>  BASE     R/W      0x0         NS        Region @ base address                              |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_REG_TIM = MIO Boot Region Timing Register (1 per region * 8 regions)
 *
 * Contains page mode, wait mode, page size, and region timing parameters.
 *
 * Page size is encoded as follows: 0 = 8 bytes, 1 = 2 bytes, 2 = 4 bytes, 3 = 8 bytes.
 *
 * Note: OE, WE, PAGE, and ALE must be non-zero to ensure legal transitions on the corresponding boot bus outputs.
 *
 * Note: WAIT must be non-zero if WAITM is set.
 *
 * Note: When region 0 is defined to be NAND flash, all fields in MIO_BOOT_TIM_CFG0 have no effect.
 *

     ==============================================================
     MIO_BOOT_REG_TIM0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    PAGEM    R/W      0x0         NS        Region 0 page mode                                 |   
 <62>    WAITM    R/W      0x0         NS        Region 0 wait mode                                 |   
 <61:60> PAGES    R/W      0x0         NS        Region 0 page size                                 |   
 <59:54> ALE      R/W      4           NS        Region 0 ALE count                                 |   
 <53:48> PAGE     R/W      63          NS        Region 0 page count                                |   
 <47:42> WAIT     R/W      63          NS        Region 0 wait count                                |   
 <41:36> PAUSE    R/W      17          NS        Region 0 pause count                               |   
 <35:30> WR_HLD   R/W      63          NS        Region 0 write hold count                          |   
 <29:24> RD_HLD   R/W      5           NS        Region 0 read hold count                           |   
 <23:18> WE       R/W      63          NS        Region 0 write enable count                        |   
 <17:12> OE       R/W      63          NS        Region 0 output enable count                       |   
 <11:6>  CE       R/W      5           NS        Region 0 chip enable count                         |   
 <5:0>   ADR      R/W      8           NS        Region 0 address count                             |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_BOOT_REG_TIM(0..7) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    PAGEM    R/W      0x0         NS        Region @ page mode                                 |   
 <62>    WAITM    R/W      0x0         NS        Region @ wait mode                                 |   
 <61:60> PAGES    R/W      0x0         NS        Region @ page size                                 |   
 <59:54> ALE      R/W      63          NS        Region @ ALE count                                 |   
 <53:48> PAGE     R/W      63          NS        Region @ page count                                |   
 <47:42> WAIT     R/W      63          NS        Region @ wait count                                |   
 <41:36> PAUSE    R/W      63          NS        Region @ pause count                               |   
 <35:30> WR_HLD   R/W      63          NS        Region @ write hold count                          |   
 <29:24> RD_HLD   R/W      63          NS        Region @ read hold count                           |   
 <23:18> WE       R/W      63          NS        Region @ write enable count                        |   
 <17:12> OE       R/W      63          NS        Region @ output enable count                       |   
 <11:6>  CE       R/W      63          NS        Region @ chip enable count                         |   
 <5:0>   ADR      R/W      63          NS        Region @ address count                             |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_LOC_CFG = MIO Boot Local Region Config Register (1 per region * 2 regions)
 *
 * Contains local region enable and local region base address parameters.  Each local region is 128
 * bytes organized as 16 entries x 8 bytes.
 *
 * Base address specifies address bits [31:7] of the region.
 *

     ==============================================================
     MIO_BOOT_LOC_CFG(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved                                           |   
 <31>    EN       R/W      0x0         NS        Local region @ enable                              |   
 <30:28> NS       RAZ      NS          NS        Reserved                                           |   
 <27:3>  BASE     R/W      0x0         NS        Local region @ base address                        |   
 <2:0>   NS       RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_LOC_ADR = MIO Boot Local Memory Address Register
 *
 * Specifies the address for reading or writing the local memory.  This address will post-increment
 * following an access to the MIO Boot Local Memory Data Register (MIO_BOOT_LOC_DAT).
 *
 * Local memory region 0 exists from addresses 0x00 - 0x78.
 * Local memory region 1 exists from addresses 0x80 - 0xf8.
 *

     ==============================================================
     MIO_BOOT_LOC_ADR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |   
 <7:3>   ADR      R/W      0x0         NS        Local memory address                               |   
 <2:0>   NS       RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_LOC_DAT = MIO Boot Local Memory Data Register
 *
 * This is a pseudo-register that will read/write the local memory at the address specified by the MIO
 * Boot Local Address Register (MIO_BOOT_LOC_ADR) when accessed.
 *

     ==============================================================
     MIO_BOOT_LOC_DAT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  DATA     R/W      NS          NS        Local memory data                                  |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_ERR = MIO Boot Error Register
 *
 * Contains the address decode error and wait mode error bits.  Address decode error is set when a
 * boot bus access does not hit in any of the 8 remote regions or 2 local regions.  Wait mode error is
 * set when wait mode is enabled and the external wait signal is not de-asserted after 32k eclk cycles.
 *

     ==============================================================
     MIO_BOOT_ERR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ      NS          NS        Reserved                                           |   
 <1>     WAIT_ERR R/W1C    0x0         0x0       Wait mode error                                    |   
 <0>     ADR_ERR  R/W1C    0x0         0x0       Address decode error                               |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_INT = MIO Boot Interrupt Register
 *
 * Contains the interrupt enable bits for address decode error and wait mode error.
 *

     ==============================================================
     MIO_BOOT_INT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ      NS          NS        Reserved                                           |   
 <1>     WAIT_INT R/W      0x0         NS        Wait mode error interrupt enable                   |   
 <0>     ADR_INT  R/W      0x0         NS        Address decode error interrupt enable              |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_THR = MIO Boot Threshold Register
 *
 * Contains MIO Boot threshold values:
 *
 * FIF_THR = Assert ncb__busy when the Boot NCB input FIFO reaches this level (not typically for
 *           customer use).
 *
 * DMA_THR = When non-DMA accesses are pending, perform a DMA access after this value of non-DMA
 *           accesses have completed.  If set to zero, only perform a DMA access when non-DMA
 *           accesses are not pending.
 *

     ==============================================================
     MIO_BOOT_THR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:22> NS       RAZ      NS          NS        Reserved                                           |   
 <21:16> DMA_THR  R/W      0x0         NS        DMA threshold                                      |   
 <15:14> NS       RAZ      NS          NS        Reserved                                           |   
 <13:8>  FIF_CNT  RO       0x0         NS        Current NCB FIFO count                             |   
 <7:6>   NS       RAZ      NS          NS        Reserved                                           |   
 <5:0>   FIF_THR  R/W      25          25        NCB busy threshold                                 |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_COMP = MIO Boot Compensation Register
 *
 * Reset value is as follows:
 * 
 * no pullups,               PCTL=38, NCTL=30 (25 ohm termination)
 * pullup on boot_ad[9],     PCTL=19, NCTL=15 (50 ohm termination)
 * pullup on boot_ad[10],    PCTL=15, NCTL=12 (65 ohm termination)
 * pullups on boot_ad[10:9], PCTL=15, NCTL=12 (65 ohm termination)
 *

     ==============================================================
     MIO_BOOT_COMP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:12> NS       RAZ      NS          NS        Reserved                                           |   
 <11:6>  PCTL     R/W      NS          NS        Boot bus PCTL                                      |   
 <5:0>   NCTL     R/W      NS          NS        Boot bus NCTL                                      |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_PIN_DEFS = MIO Boot Pin Defaults Register
 *

     ==============================================================
     MIO_BOOT_PIN_DEFS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved                                           |   
 <15>    ALE      RO       NS          NS        Region 0 default ALE mode                          |   
 <14>    WIDTH    RO       NS          NS        Region 0 default bus width                         |   
 <13>    NS       RAZ      NS          NS        Reserved                                           |   
 <12>    DMACK_P1 RO       NS          NS        boot_dmack[1] default polarity                     |   
 <11>    DMACK_P0 RO       NS          NS        boot_dmack[0] default polarity                     |   
 <10:9>  TERM     RO       NS          NS        Selects default driver termination                 |   
 <8>     NAND     RO       NS          NS        Region 0 is NAND flash                             |   
 <7:0>   NS       RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_GPIO_COMP = MIO GPIO Compensation Register
 *

     ==============================================================
     MIO_GPIO_COMP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:12> NS       RAZ      NS          NS        Reserved                                           |   
 <11:6>  PCTL     R/W      19          NS        GPIO bus PCTL                                      |   
 <5:0>   NCTL     R/W      15          NS        GPIO bus NCTL                                      |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_BIST_STAT = MIO Boot BIST Status Register
 *
 * Contains the BIST status for the MIO boot memories.  '0' = pass, '1' = fail.
 *

     ==============================================================
     MIO_BOOT_BIST_STAT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:9>  NS       RAZ      NS          NS        Reserved                                           |   
 <8:0>   STAT     RO       0x0         0x0       BIST status                                        |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_DMA_CFG = MIO Boot DMA Config Register (1 per engine * 2 engines)
 *
 * SIZE is specified in number of bus transfers, where one transfer is equal to the following number
 * of bytes dependent on MIO_BOOT_DMA_TIMn[WIDTH] and MIO_BOOT_DMA_TIMn[DDR]:
 *
 * WIDTH     DDR      Transfer Size (bytes)
 * ----------------------------------------
 *   0        0               2
 *   0        1               4
 *   1        0               4
 *   1        1               8
 *
 * Note: ADR must be aligned to the bus width (i.e. 16 bit aligned if WIDTH=0, 32 bit aligned if WIDTH=1).
 *

     ==============================================================
     MIO_BOOT_DMA_CFG(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    EN       R/W      0x0         NS        DMA Engine @ enable                                |   
 <62>    RW       R/W      0x0         NS        DMA Engine @ R/W bit (0 = read, 1 = write)         |   
 <61>    CLR      R/W      0x0         NS        DMA Engine @ clear EN on device terminated burst   |   
 <60>    NS       RAZ      NS          NS        Reserved                                           |   
 <59>    SWAP32   R/W      0x0         NS        DMA Engine @ 32 bit swap                           |   
 <58>    SWAP16   R/W      0x0         NS        DMA Engine @ 16 bit swap                           |   
 <57>    SWAP8    R/W      0x0         NS        DMA Engine @ 8 bit swap                            |   
 <56>    ENDIAN   R/W      0x0         NS        DMA Engine @ NCB endian mode (0 = big, 1 = little) |   
 <55:36> SIZE     R/W      0x0         NS        DMA Engine @ size                                  |   
 <35:0>  ADR      R/W      0x0         NS        DMA Engine @ address                               |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_DMA_TIM = MIO Boot DMA Timing Register (1 per engine * 2 engines)
 *
 * DMACK_PI inverts the assertion level of boot_dmack[n].  The default polarity of boot_dmack[1:0] is
 * selected on the first de-assertion of reset by the values on boot_ad[12:11], where 0 is active high
 * and 1 is active low (see MIO_BOOT_PIN_DEFS for a read-only copy of the default polarity).
 * boot_ad[12:11] have internal pulldowns, so place a pullup on boot_ad[n+11] for active low default
 * polarity on engine n.  To interface with CF cards in True IDE Mode, either a pullup should be placed
 * on boot_ad[n+11] OR the corresponding DMACK_PI[n] should be set.
 *
 * DMARQ_PI inverts the assertion level of boot_dmarq[n].  The default polarity of boot_dmarq[1:0] is
 * active high, thus setting the polarity inversion bits changes the polarity to active low.  To
 * interface with CF cards in True IDE Mode, the corresponding DMARQ_PI[n] should be clear.
 *
 * TIM_MULT specifies the timing multiplier for an engine.  The timing multiplier applies to all timing
 * parameters, except for DMARQ and RD_DLY, which simply count eclks.  TIM_MULT is encoded as follows:
 * 0 = 4x, 1 = 1x, 2 = 2x, 3 = 8x.
 *
 * RD_DLY specifies the read sample delay in eclk cycles for an engine.  For reads, the data bus is
 * normally sampled on the same eclk edge that drives boot_oe_n high (and also low in DDR mode).
 * This parameter can delay that sampling edge by up to 7 eclks.  Note: the number of eclk cycles
 * counted by the OE_A and DMACK_H + PAUSE timing parameters must be greater than RD_DLY.
 *
 * If DDR is set, then WE_N must be less than WE_A.
 *

     ==============================================================
     MIO_BOOT_DMA_TIM(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    DMACK_PI R/W      0x0         NS        DMA Engine @ DMA ack polarity inversion            |   
 <62>    DMARQ_PI R/W      0x0         NS        DMA Engine @ DMA request polarity inversion        |   
 <61:60> TIM_MULT R/W      0x0         NS        DMA Engine @ timing multiplier                     |   
 <59:57> RD_DLY   R/W      0x0         NS        DMA Engine @ read sample delay                     |   
 <56>    DDR      R/W      0x0         NS        DMA Engine @ DDR mode                              |   
 <55>    WIDTH    R/W      0x0         NS        DMA Engine @ bus width (0 = 16 bits, 1 = 32 bits)  |   
 <54:48> NS       RAZ      NS          NS        Reserved                                           |   
 <47:42> PAUSE    R/W      63          NS        DMA Engine @ pause count                           |   
 <41:36> DMACK_H  R/W      63          NS        DMA Engine @ DMA ack hold count                    |   
 <35:30> WE_N     R/W      63          NS        DMA Engine @ write enable negated count            |   
 <29:24> WE_A     R/W      63          NS        DMA Engine @ write enable asserted count           |   
 <23:18> OE_N     R/W      63          NS        DMA Engine @ output enable negated count           |   
 <17:12> OE_A     R/W      63          NS        DMA Engine @ output enable asserted count          |   
 <11:6>  DMACK_S  R/W      63          NS        DMA Engine @ DMA ack setup count                   |   
 <5:0>   DMARQ    R/W      63          NS        DMA Engine @ DMA request count (must be non-zero)  |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_DMA_INT = MIO Boot DMA Interrupt Register (1 per engine * 2 engines)
 *

     ==============================================================
     MIO_BOOT_DMA_INT(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ      NS          NS        Reserved                                           |   
 <1>     DMARQ    RO       NS          NS        DMA Engine @ DMARQ asserted interrupt              |   
 <0>     DONE     R/W1C    0x0         NS        DMA Engine @ request completion interrupt          |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_BOOT_DMA_INT_EN = MIO Boot DMA Interrupt Enable Register (1 per engine * 2 engines)
 *

     ==============================================================
     MIO_BOOT_DMA_INT_EN(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ      NS          NS        Reserved                                           |   
 <1>     DMARQ    R/W      0x0         NS        DMA Engine @ DMARQ asserted interrupt enable       |   
 <0>     DONE     R/W      0x0         NS        DMA Engine @ request completion interrupt enable   |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_NDF_DMA_CFG = MIO NAND Flash DMA Config Register
 *
 * SIZE is specified in number of 64 bit transfers (encoded in -1 notation).
 *
 * ADR must be 64 bit aligned.
 *

     ==============================================================
     MIO_NDF_DMA_CFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    EN       R/W      0x0         NS        DMA Engine enable                                  |   
 <62>    RW       R/W      0x0         NS        DMA Engine R/W bit (0 = read, 1 = write)           |   
 <61>    CLR      R/W      0x0         NS        DMA Engine clear EN on device terminated burst     |   
 <60>    NS       RAZ      NS          NS        Reserved                                           |   
 <59>    SWAP32   R/W      0x0         NS        DMA Engine 32 bit swap                             |   
 <58>    SWAP16   R/W      0x0         NS        DMA Engine 16 bit swap                             |   
 <57>    SWAP8    R/W      0x0         NS        DMA Engine 8 bit swap                              |   
 <56>    ENDIAN   R/W      0x0         NS        DMA Engine NCB endian mode (0 = big, 1 = little)   |   
 <55:36> SIZE     R/W      0x0         NS        DMA Engine size                                    |   
 <35:0>  ADR      R/W      0x0         NS        DMA Engine address                                 |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_NDF_DMA_INT = MIO NAND Flash DMA Interrupt Register
 *

     ==============================================================
     MIO_NDF_DMA_INT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved                                           |   
 <0>     DONE     R/W1C    0x0         NS        DMA Engine request completion interrupt            |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_NDF_DMA_INT_EN = MIO NAND Flash DMA Interrupt Enable Register
 *

     ==============================================================
     MIO_NDF_DMA_INT_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved                                           |   
 <0>     DONE     R/W      0x0         NS        DMA Engine request completion interrupt enable     |   
----------------------------------------------------------------------------------------------------
===


 *
 * MIO_UART@_RBR = MIO UART@ Receive Buffer Register
 *
 * The Receive Buffer Register (RBR) is a read-only register that contains the data byte received on the
 * serial input port (sin). The data in this register is valid only if the Data Ready (DR) bit in the
 * Line status Register (LSR) is set. When the FIFOs are programmed OFF, the data in the RBR must be
 * read before the next data arrives, otherwise it is overwritten, resulting in an overrun error. When
 * the FIFOs are programmed ON, this register accesses the head of the receive FIFO. If the receive FIFO
 * is full (64 characters) and this register is not read before the next data character arrives, then the
 * data already in the FIFO is preserved, but any incoming data is lost. An overrun error also occurs.
 *
 * Note: The Divisor Latch Address Bit (DLAB) of the Line Control Register (LCR) must be clear to access
 * this register.
 *
 * Note: The address below is an alias to simplify these CSR descriptions. It should be known that the
 * RBR, THR, and DLL registers are the same.
 *

     ==============================================================
     MIO_UART(0..1)_RBR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |   
 <7:0>   RBR      RO       0x0         NS        Receive Buffer Register                            |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_THR = MIO UART@ Transmit Holding Register
 *
 * Transmit Holding Register (THR) is a write-only register that contains data to be transmitted on the
 * serial output port (sout). Data can be written to the THR any time that the THR Empty (THRE) bit of
 * the Line Status Register (LSR) is set.
 *
 * If FIFOs are not enabled and THRE is set, writing a single character to the THR clears the THRE. Any
 * additional writes to the THR before the THRE is set again causes the THR data to be overwritten.
 *
 * If FIFOs are enabled and THRE is set (and Programmable THRE mode disabled), 64 characters of data may
 * be written to the THR before the FIFO is full. Any attempt to write data when the FIFO is full results
 * in the write data being lost.
 *
 * Note: The Divisor Latch Address Bit (DLAB) of the Line Control Register (LCR) must be clear to access
 * this register.
 *
 * Note: The address below is an alias to simplify these CSR descriptions. It should be known that the
 * RBR, THR, and DLL registers are the same.
 *

     ==============================================================
     MIO_UART(0..1)_THR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |   
 <7:0>   THR      WO       0x0         NS        Transmit Holding Register                          |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_DLL = MIO UART@ Divisor Latch Low Register
 *
 * The DLH (Divisor Latch High) register in conjunction with DLL (Divisor Latch Low) register form a
 * 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. It is
 * accessed by first setting the DLAB bit (bit 7) in the Line Control Register (LCR). The output baud
 * rate is equal to eclk frequency divided by sixteen times the value of the baud rate divisor, as
 * follows: baud rate = eclk / (16 * divisor).
 *
 * Note that the BUSY bit (bit 0) of the UART Status Register (USR) must be clear before writing this
 * register. BUSY bit is always clear in PASS3.
 *
 * Note that with the Divisor Latch Registers (DLL and DLH) set to zero, the baud clock is disabled
 * and no serial communications will occur. Also, once the DLL or DLH is set, at least 8 clock cycles
 * of eclk should be allowed to pass before transmitting or receiving data.
 *
 * Note: The address below is an alias to simplify these CSR descriptions. It should be known that the
 * RBR, THR, and DLL registers are the same.
 *

     ==============================================================
     MIO_UART(0..1)_DLL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |   
 <7:0>   DLL      R/W      0x0         NS        Divisor Latch Low Register                         |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_IER = MIO UART@ Interrupt Enable Register
 *
 * Interrupt Enable Register (IER) is a read/write register that contains four bits that enable
 * the generation of interrupts. These four bits are the Enable Received Data Available Interrupt
 * (ERBFI), the Enable Transmitter Holding Register Empty Interrupt (ETBEI), the Enable Receiver Line
 * Status Interrupt (ELSI), and the Enable Modem Status Interrupt (EDSSI).
 *
 * The IER also contains an enable bit (PTIME) for the Programmable THRE Interrupt mode.
 *
 * Note: The Divisor Latch Address Bit (DLAB) of the Line Control Register (LCR) must be clear to access
 * this register.
 *
 * Note: The address below is an alias to simplify these CSR descriptions. It should be known that the
 * IER and DLH registers are the same.
 *

     ==============================================================
     MIO_UART(0..1)_IER Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |   
 <7>     PTIME    R/W      0x0         NS        Programmable THRE Interrupt mode enable            |   
 <6:4>   NS       RAZ      NS          NS        Reserved                                           |   
 <3>     EDSSI    R/W      0x0         NS        Enable Modem Status Interrupt                      |   
 <2>     ELSI     R/W      0x0         NS        Enable Receiver Line Status Interrupt              |   
 <1>     ETBEI    R/W      0x0         NS        Enable Transmitter Holding Register Empty Interrupt|   
 <0>     ERBFI    R/W      0x0         NS        Enable Received Data Available Interrupt           |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_DLH = MIO UART@ Divisor Latch High Register
 *
 * The DLH (Divisor Latch High) register in conjunction with DLL (Divisor Latch Low) register form a
 * 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. It is
 * accessed by first setting the DLAB bit (bit 7) in the Line Control Register (LCR). The output baud
 * rate is equal to eclk frequency divided by sixteen times the value of the baud rate divisor, as
 * follows: baud rate = eclk / (16 * divisor).
 *
 * Note that the BUSY bit (bit 0) of the UART Status Register (USR) must be clear before writing this
 * register. BUSY bit is always clear in PASS3.
 *
 * Note that with the Divisor Latch Registers (DLL and DLH) set to zero, the baud clock is disabled
 * and no serial communications will occur. Also, once the DLL or DLH is set, at least 8 clock cycles
 * of eclk should be allowed to pass before transmitting or receiving data.
 *
 * Note: The address below is an alias to simplify these CSR descriptions. It should be known that the
 * IER and DLH registers are the same.
 *

     ==============================================================
     MIO_UART(0..1)_DLH Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |   
 <7:0>   DLH      R/W      0x0         NS        Divisor Latch High Register                        |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_IIR = MIO UART@ Interrupt Identity Register
 *
 * The Interrupt Identity Register (IIR) is a read-only register that identifies the source of an
 * interrupt. The upper two bits of the register are FIFO-enabled bits. These bits are '00' if the FIFOs
 * are disabled, and '11' if they are enabled. The lower four bits identify the highest priority pending
 * interrupt. The following table defines interrupt source decoding, interrupt priority, and interrupt
 * reset control:
 *
 * Interrupt   Priority   Interrupt         Interrupt                                       Interrupt
 * ID          Level      Type              Source                                          Reset By
 * ---------------------------------------------------------------------------------------------------------------------------------
 * 0001        -          None              None                                            -
 *
 * 0110        Highest    Receiver Line     Overrun, parity, or framing errors or break     Reading the Line Status Register
 *                        Status            interrupt
 *
 * 0100        Second     Received Data     Receiver data available (FIFOs disabled) or     Reading the Receiver Buffer Register
 *                        Available         RX FIFO trigger level reached (FIFOs            (FIFOs disabled) or the FIFO drops below
 *                                          enabled)                                        the trigger level (FIFOs enabled)
 *
 * 1100        Second     Character         No characters in or out of the RX FIFO          Reading the Receiver Buffer Register
 *                        Timeout           during the last 4 character times and there
 *                        Indication        is at least 1 character in it during this
 *                                          time
 *
 * 0010        Third      Transmitter       Transmitter Holding Register Empty              Reading the Interrupt Identity Register
 *                        Holding           (Programmable THRE Mode disabled) or TX         (if source of interrupt) or writing into
 *                        Register          FIFO at or below threshold (Programmable        THR (FIFOs or THRE Mode disabled) or TX
 *                        Empty             THRE Mode enabled)                              FIFO above threshold (FIFOs and THRE
 *                                                                                          Mode enabled)
 *
 * 0000        Fourth     Modem Status      Clear To Send (CTS) or Data Set Ready (DSR)     Reading the Modem Status Register
 *                        Changed           or Ring Indicator (RI) or Data Carrier
 *                                          Detect (DCD) changed (note: if auto flow
 *                                          control mode is enabled, a change in CTS
 *                                          will not cause an interrupt)
 *
 * 0111        Fifth      Busy Detect       Software has tried to write to the Line         Reading the UART Status Register
 *                        Indication        Control Register while the BUSY bit of the
 *                                          UART Status Register was set
 *
 * Note: The Busy Detect Indication interrupt has been removed from PASS3 and will never assert.
 *
 * Note: The address below is an alias to simplify these CSR descriptions. It should be known that the
 * IIR and FCR registers are the same.
 *

     ==============================================================
     MIO_UART(0..1)_IIR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |   
 <7:6>   FEN      RO       0x0         NS        FIFO-enabled bits                                  |   
 <5:4>   NS       RAZ      0x0         NS        Reserved                                           |   
 <3:0>   IID      RO       0x1         NS        Interrupt ID                                       |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_FCR = MIO UART@ FIFO Control Register
 *
 * The FIFO Control Register (FCR) is a write-only register that controls the read and write data FIFO
 * operation. When FIFOs and Programmable THRE Interrupt mode are enabled, this register also controls
 * the THRE Interrupt empty threshold level.
 *
 * Setting bit 0 of the FCR enables the transmit and receive FIFOs. Whenever the value of this bit is
 * changed both the TX and RX FIFOs will be reset.
 *
 * Writing a '1' to bit 1 of the FCR resets and flushes data in the receive FIFO. Note that this bit is
 * self-clearing and it is not necessary to clear this bit.
 *
 * Writing a '1' to bit 2 of the FCR resets and flushes data in the transmit FIFO. Note that this bit is
 * self-clearing and it is not necessary to clear this bit.
 *
 * If the FIFOs and Programmable THRE Interrupt mode are enabled, bits 4 and 5 control the empty
 * threshold level at which THRE Interrupts are generated when the mode is active.  See the following
 * table for encodings:
 *
 * TX Trigger
 * ----------
 * 00 = empty FIFO
 * 01 = 2 chars in FIFO
 * 10 = FIFO 1/4 full
 * 11 = FIFO 1/2 full
 *
 * If the FIFO mode is enabled (bit 0 of the FCR is set to '1') bits 6 and 7 are active. Bit 6 and bit 7
 * set the trigger level in the receiver FIFO for the Enable Received Data Available Interrupt (ERBFI).
 * In auto flow control mode the trigger is used to determine when the rts_n signal will be deasserted.
 * See the following table for encodings:
 *
 * RX Trigger
 * ----------
 * 00 = 1 char in FIFO
 * 01 = FIFO 1/4 full
 * 10 = FIFO 1/2 full
 * 11 = FIFO 2 chars less than full
 *
 * Note: The address below is an alias to simplify these CSR descriptions. It should be known that the
 * IIR and FCR registers are the same.
 *

     ==============================================================
     MIO_UART(0..1)_FCR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |   
 <7:6>   RXTRIG   WO       0x0         NS        RX Trigger                                         |   
 <5:4>   TXTRIG   WO       0x0         NS        TX Trigger                                         |   
 <3>     NS       RAZ      NS          NS        Reserved                                           |   
 <2>     TXFR     WO       0x0         NS        TX FIFO reset                                      |   
 <1>     RXFR     WO       0x0         NS        RX FIFO reset                                      |   
 <0>     EN       WO       0x0         NS        FIFO enable                                        |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_LCR = MIO UART@ Line Control Register
 *
 * The Line Control Register (LCR) controls the format of the data that is transmitted and received by
 * the UART.
 *
 * LCR bits 0 and 1 are the Character Length Select field. This field is used to select the number of
 * data bits per character that are transmitted and received. See the following table for encodings:
 *
 * CLS
 * ---
 * 00 = 5 bits (bits 0-4 sent)
 * 01 = 6 bits (bits 0-5 sent)
 * 10 = 7 bits (bits 0-6 sent)
 * 11 = 8 bits (all bits sent)
 *
 * LCR bit 2 controls the number of stop bits transmitted. If bit 2 is a '0', one stop bit is transmitted
 * in the serial data. If bit 2 is a '1' and the data bits are set to '00', one and a half stop bits are
 * generated. Otherwise, two stop bits are generated and transmitted in the serial data out. Note that
 * regardless of the number of stop bits selected the receiver will only check the first stop bit.
 *
 * LCR bit 3 is the Parity Enable bit. This bit is used to enable and disable parity generation and
 * detection in transmitted and received serial character respectively.
 *
 * LCR bit 4 is the Even Parity Select bit. If parity is enabled, bit 4 selects between even and odd
 * parity. If bit 4 is a '1', an even number of ones is transmitted or checked. If bit 4 is a '0', an odd
 * number of ones is transmitted or checked.
 *
 * LCR bit 6 is the Break Control bit. Setting the Break bit sends a break signal by holding the sout
 * line low (when not in Loopback mode, as determined by Modem Control Register bit 4). When in Loopback
 * mode, the break condition is internally looped back to the receiver.
 *
 * LCR bit 7 is the Divisor Latch Address bit. Setting this bit enables reading and writing of the
 * Divisor Latch register (DLL and DLH) to set the baud rate of the UART. This bit must be cleared after
 * initial baud rate setup in order to access other registers.
 *
 * Note: The LCR is writeable only when the UART is not busy (when the BUSY bit (bit 0) of the UART
 * Status Register (USR) is clear). The LCR is always readable. In PASS3, the LCR is always writable
 * because the BUSY bit is always clear.
 *

     ==============================================================
     MIO_UART(0..1)_LCR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |   
 <7>     DLAB     R/W      0x0         NS        Divisor Latch Address bit                          |   
 <6>     BREAK    R/W      0x0         NS        Break Control bit                                  |   
 <5>     NS       RAZ      NS          NS        Reserved                                           |   
 <4>     EPS      R/W      0x0         NS        Even Parity Select bit                             |   
 <3>     PEN      R/W      0x0         NS        Parity Enable bit                                  |   
 <2>     STOP     R/W      0x0         NS        Stop Control bit                                   |   
 <1:0>   CLS      R/W      0x0         NS        Character Length Select                            |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_MCR = MIO UART@ Modem Control Register
 *
 * The lower four bits of the Modem Control Register (MCR) directly manipulate the outputs of the UART.
 * The DTR (bit 0), RTS (bit 1), OUT1 (bit 2), and OUT2 (bit 3) bits are inverted and then drive the
 * corresponding UART outputs, dtr_n, rts_n, out1_n, and out2_n.  In loopback mode, these outputs are
 * driven inactive high while the values in these locations are internally looped back to the inputs.
 *
 * Note: When Auto RTS is enabled, the rts_n output is controlled in the same way, but is also gated
 * with the receiver FIFO threshold trigger (rts_n is inactive high when above the threshold). The
 * rts_n output will be de-asserted whenever RTS (bit 1) is set low.
 *
 * Note: The UART0 out1_n and out2_n outputs are not present on the pins of the chip, but the UART0 OUT1
 * and OUT2 bits still function in Loopback mode.  The UART1 dtr_n, out1_n, and out2_n outputs are not
 * present on the pins of the chip, but the UART1 DTR, OUT1, and OUT2 bits still function in Loopback
 * mode.
 *
 * MCR bit 4 is the Loopback bit. When set, data on the sout line is held high, while serial data output
 * is looped back to the sin line, internally. In this mode all the interrupts are fully functional. This
 * feature is used for diagnostic purposes. Also, in loopback mode, the modem control inputs (dsr_n,
 * cts_n, ri_n, dcd_n) are disconnected and the four modem control outputs (dtr_n, rts_n, out1_n, out1_n)
 * are looped back to the inputs, internally.
 *
 * MCR bit 5 is the Auto Flow Control Enable (AFCE) bit. When FIFOs are enabled and this bit is set,
 * 16750-compatible Auto RTS and Auto CTS serial data flow control features are enabled.
 *
 * Auto RTS becomes active when the following occurs:
 * 1. MCR bit 1 is set
 * 2. FIFOs are enabled by setting FIFO Control Register (FCR) bit 0
 * 3. MCR bit 5 is set (must be set after FCR bit 0)
 *
 * When active, the rts_n output is forced inactive-high when the receiver FIFO level reaches the
 * threshold set by FCR[7:6]. When rts_n is connected to the cts_n input of another UART device, the
 * other UART stops sending serial data until the receiver FIFO has available space.
 *
 * The selectable receiver FIFO threshold values are: 1, 1/4, 1/2, and 2 less than full. Since one
 * additional character may be transmitted to the UART after rts_n has become inactive (due to data
 * already having entered the transmitter block in the other UART), setting the threshold to 2 less
 * than full allows maximum use of the FIFO with a safety zone of one character.
 * 
 * Once the receiver FIFO becomes completely empty by reading the Receiver Buffer Register (RBR), rts_n
 * again becomes active-low, signalling the other UART to continue sending data. It is important to note
 * that, even if everything else is set to Enabled and the correct MCR bits are set, if the FIFOs are
 * disabled through FCR[0], Auto Flow Control is also disabled. When Auto RTS is disabled or inactive,
 * rts_n is controlled solely by MCR[1].
 *
 * Auto CTS becomes active when the following occurs:
 * 1. FIFOs are enabled by setting FIFO Control Register (FCR) bit 0
 * 2. MCR bit 5 is set (must be set after FCR bit 0)
 *
 * When active, the UART transmitter is disabled whenever the cts_n input becomes inactive-high. This
 * prevents overflowing the FIFO of the receiving UART.
 *
 * Note that, if the cts_n input is not inactivated before the middle of the last stop bit, another
 * character is transmitted before the transmitter is disabled. While the transmitter is disabled, the
 * transmitter FIFO can still be written to, and even overflowed. Therefore, when using this mode, either
 * the true FIFO depth (64 characters) must be known to software, or the Programmable THRE Interrupt mode
 * must be enabled to access the FIFO full status through the Line Status Register. When using the FIFO
 * full status, software can poll this before each write to the Transmitter FIFO.
 *
 * Note: FIFO full status is also available in the UART Status Register (USR) or the actual level of the
 * FIFO may be read through the Transmit FIFO Level (TFL) register.
 *
 * When the cts_n input becomes active-low again, transmission resumes. It is important to note that,
 * even if everything else is set to Enabled, Auto Flow Control is also disabled if the FIFOs are
 * disabled through FCR[0]. When Auto CTS is disabled or inactive, the transmitter is unaffected by
 * cts_n.
 *

     ==============================================================
     MIO_UART(0..1)_MCR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |   
 <7:6>   NS       RAZ      NS          NS        Reserved                                           |   
 <5>     AFCE     R/W      0x0         NS        Auto Flow Control Enable bit                       |   
 <4>     LOOP     R/W      0x0         NS        Loopback bit                                       |   
 <3>     OUT2     R/W      0x0         NS        OUT2 output bit                                    |   
 <2>     OUT1     R/W      0x0         NS        OUT1 output bit                                    |   
 <1>     RTS      R/W      0x0         NS        Request To Send output bit                         |   
 <0>     DTR      R/W      0x0         NS        Data Terminal Ready output bit                     |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_LSR = MIO UART@ Line Status Register
 *
 * The Line Status Register (LSR) contains status of the receiver and transmitter data transfers. This
 * status can be read by the user at anytime.
 *
 * LSR bit 0 is the Data Ready (DR) bit. When set, this bit indicates the receiver contains at least one
 * character in the RBR or the receiver FIFO. This bit is cleared when the RBR is read in the non-FIFO
 * mode, or when the receiver FIFO is empty, in FIFO mode.
 *
 * LSR bit 1 is the Overrun Error (OE) bit. When set, this bit indicates an overrun error has occurred
 * because a new data character was received before the previous data was read. In the non-FIFO mode, the
 * OE bit is set when a new character arrives in the receiver before the previous character was read from
 * the RBR. When this happens, the data in the RBR is overwritten. In the FIFO mode, an overrun error
 * occurs when the FIFO is full and a new character arrives at the receiver. The data in the FIFO is
 * retained and the data in the receive shift register is lost.
 *
 * LSR bit 2 is the Parity Error (PE) bit. This bit is set whenever there is a parity error in the
 * receiver if the Parity Enable (PEN) bit in the LCR is set. In the FIFO mode, since the parity error is
 * associated with a character received, it is revealed when the character with the parity error arrives
 * at the top of the FIFO. It should be noted that the Parity Error (PE) bit will be set if a break
 * interrupt has occurred, as indicated by the Break Interrupt (BI) bit.
 *
 * LSR bit 3 is the Framing Error (FE) bit. This bit is set whenever there is a framing error in the
 * receiver. A framing error occurs when the receiver does not detect a valid STOP bit in the received
 * data. In the FIFO mode, since the framing error is associated with a character received, it is
 * revealed when the character with the framing error is at the top of the FIFO. When a framing error
 * occurs the UART will try resynchronize. It does this by assuming that the error was due to the start
 * bit of the next character and then continues receiving the other bits (i.e. data and/or parity and
 * stop). It should be noted that the Framing Error (FE) bit will be set if a break interrupt has
 * occurred, as indicated by the Break Interrupt (BI) bit.
 *
 * Note: The OE, PE, and FE bits are reset when a read of the LSR is performed.
 *
 * LSR bit 4 is the Break Interrupt (BI) bit. This bit is set whenever the serial input (sin) is held in
 * a 0 state for longer than the sum of start time + data bits + parity + stop bits. A break condition on
 * sin causes one and only one character, consisting of all zeros, to be received by the UART. In the
 * FIFO mode, the character associated with the break condition is carried through the FIFO and is
 * revealed when the character is at the top of the FIFO. Reading the LSR clears the BI bit. In the non-
 * FIFO mode, the BI indication occurs immediately and persists until the LSR is read.
 *
 * LSR bit 5 is the Transmitter Holding Register Empty (THRE) bit. When Programmable THRE Interrupt mode
 * is disabled, this bit indicates that the UART can accept a new character for transmission. This bit is
 * set whenever data is transferred from the THR (or TX FIFO) to the transmitter shift register and no
 * new data has been written to the THR (or TX FIFO). This also causes a THRE Interrupt to occur, if the
 * THRE Interrupt is enabled. When FIFOs and Programmable THRE Interrupt mode are enabled, LSR bit 5
 * functionality is switched to indicate the transmitter FIFO is full, and no longer controls THRE
 * Interrupts, which are then controlled by the FCR[5:4] threshold setting.
 *
 * LSR bit 6 is the Transmitter Empty (TEMT) bit. In the FIFO mode, this bit is set whenever the
 * Transmitter Shift Register and the FIFO are both empty. In the non-FIFO mode, this bit is set whenever
 * the Transmitter Holding Register and the Transmitter Shift Register are both empty. This bit is
 * typically used to make sure it is safe to change control registers. Changing control registers while
 * the transmitter is busy can result in corrupt data being transmitted.
 *
 * LSR bit 7 is the Error in Receiver FIFO (FERR) bit. This bit is active only when FIFOs are enabled. It
 * is set when there is at least one parity error, framing error, or break indication in the FIFO. This
 * bit is cleared when the LSR is read and the character with the error is at the top of the receiver
 * FIFO and there are no subsequent errors in the FIFO.
 *

     ==============================================================
     MIO_UART(0..1)_LSR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |   
 <7>     FERR     RC       0x0         NS        Error in Receiver FIFO bit                         |   
 <6>     TEMT     RO       0x1         NS        Transmitter Empty bit                              |   
 <5>     THRE     RO       0x1         NS        Transmitter Holding Register Empty bit             |   
 <4>     BI       RC       0x0         NS        Break Interrupt bit                                |   
 <3>     FE       RC       0x0         NS        Framing Error bit                                  |   
 <2>     PE       RC       0x0         NS        Parity Error bit                                   |   
 <1>     OE       RC       0x0         NS        Overrun Error bit                                  |   
 <0>     DR       RO       0x0         NS        Data Ready bit                                     |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_MSR = MIO UART@ Modem Status Register
 *
 * The Modem Status Register (MSR) contains the current status of the modem control input lines and if
 * they changed.
 *
 * DCTS (bit 0), DDSR (bit 1), and DDCD (bit 3) bits record whether the modem control lines (cts_n,
 * dsr_n, and dcd_n) have changed since the last time the user read the MSR. TERI (bit 2) indicates ri_n
 * has changed from an active-low, to an inactive-high state since the last time the MSR was read. In
 * Loopback mode, DCTS reflects changes on MCR bit 1 (RTS), DDSR reflects changes on MCR bit 0 (DTR), and
 * DDCD reflects changes on MCR bit 3 (Out2), while TERI reflects when MCR bit 2 (Out1) has changed state
 * from a high to a low.
 *
 * Note: if the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software
 * or otherwise), then the DCTS bit will get set when the reset is removed if the cts_n signal remains
 * asserted.
 *
 * The CTS, DSR, RI, and DCD Modem Status bits contain information on the current state of the modem
 * control lines. CTS (bit 4) is the compliment of cts_n, DSR (bit 5) is the compliment of dsr_n, RI
 * (bit 6) is the compliment of ri_n, and DCD (bit 7) is the compliment of dcd_n. In Loopback mode, CTS
 * is the same as MCR bit 1 (RTS), DSR is the same as MCR bit 0 (DTR), RI is the same as MCR bit 2
 * (Out1), and DCD is the same as MCR bit 3 (Out2).
 *
 * Note: The UART0 dsr_n and ri_n inputs are internally tied to power and not present on the pins of chip.
 * Thus the UART0 DSR and RI bits will be '0' when not in Loopback mode.  The UART1 dsr_n, ri_n, and dcd_n
 * inputs are internally tied to power and not present on the pins of chip. Thus the UART1 DSR, RI, and
 * DCD bits will be '0' when not in Loopback mode.
 *

     ==============================================================
     MIO_UART(0..1)_MSR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |   
 <7>     DCD      RO       0x0         NS        Data Carrier Detect input bit                      |   
 <6>     RI       RO       0x0         NS        Ring Indicator input bit                           |   
 <5>     DSR      RO       0x0         NS        Data Set Ready input bit                           |   
 <4>     CTS      RO       NS          NS        Clear To Send input bit                            |   
 <3>     DDCD     RC       0x0         NS        Delta Data Carrier Detect bit                      |   
 <2>     TERI     RC       0x0         NS        Trailing Edge of Ring Indicator bit                |   
 <1>     DDSR     RC       0x0         NS        Delta Data Set Ready bit                           |   
 <0>     DCTS     RC       0x0         NS        Delta Clear To Send bit                            |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_SCR = MIO UART@ Scratchpad Register
 *
 * The Scratchpad Register (SCR) is an 8-bit read/write register for programmers to use as a temporary
 * storage space.
 *

     ==============================================================
     MIO_UART(0..1)_SCR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |   
 <7:0>   SCR      R/W      0x0         NS        Scratchpad Register                                |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_FAR = MIO UART@ FIFO Access Register
 *
 * The FIFO Access Register (FAR) is used to enable a FIFO access mode for testing, so that the receive
 * FIFO can be written by software and the transmit FIFO can be read by software when the FIFOs are
 * enabled. When FIFOs are not enabled it allows the RBR to be written by software and the THR to be read
 * by software. Note, that when the FIFO access mode is enabled/disabled, the control portion of the
 * receive FIFO and transmit FIFO is reset and the FIFOs are treated as empty.
 *

     ==============================================================
     MIO_UART(0..1)_FAR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved                                           |   
 <0>     FAR      R/W      0x0         NS        FIFO Access Register                               |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_TFR = MIO UART@ Transmit FIFO Read Register
 *
 * The Transmit FIFO Read Register (TFR) is only valid when FIFO access mode is enabled (FAR bit 0 is
 * set). When FIFOs are enabled, reading this register gives the data at the top of the transmit FIFO.
 * Each consecutive read pops the transmit FIFO and gives the next data value that is currently at the
 * top of the FIFO. When FIFOs are not enabled, reading this register gives the data in the THR.
 *

     ==============================================================
     MIO_UART(0..1)_TFR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |   
 <7:0>   TFR      RO       0x0         NS        Transmit FIFO Read Register                        |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_RFW = MIO UART@ Receive FIFO Write Register
 *
 * The Receive FIFO Write Register (RFW) is only valid when FIFO access mode is enabled (FAR bit 0 is
 * set). When FIFOs are enabled, this register is used to write data to the receive FIFO. Each
 * consecutive write pushes the new data to the next write location in the receive FIFO. When FIFOs are
 * not enabled, this register is used to write data to the RBR.
 *

     ==============================================================
     MIO_UART(0..1)_RFW Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:10> NS       RAZ      NS          NS        Reserved                                           |   
 <9>     RFFE     WO       0x0         NS        Receive FIFO Framing Error                         |   
 <8>     RFPE     WO       0x0         NS        Receive FIFO Parity Error                          |   
 <7:0>   RFWD     WO       0x0         NS        Receive FIFO Write Data                            |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_USR = MIO UART@ UART Status Register
 *
 * The UART Status Register (USR) contains UART status information.
 *
 * USR bit 0 is the BUSY bit.  When set this bit indicates that a serial transfer is in progress, when
 * clear it indicates that the UART is idle or inactive.
 *
 * Note: In PASS3, the BUSY bit will always be clear.
 *
 * USR bits 1-4 indicate the following FIFO status: TX FIFO Not Full (TFNF), TX FIFO Empty (TFE), RX
 * FIFO Not Empty (RFNE), and RX FIFO Full (RFF).
 *

     ==============================================================
     MIO_UART(0..1)_USR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:5>  NS       RAZ      NS          NS        Reserved                                           |   
 <4>     RFF      RO       0x0         NS        RX FIFO Full                                       |   
 <3>     RFNE     RO       0x0         NS        RX FIFO Not Empty                                  |   
 <2>     TFE      RO       0x1         NS        TX FIFO Empty                                      |   
 <1>     TFNF     RO       0x1         NS        TX FIFO Not Full                                   |   
 <0>     BUSY     RO       0x0         NS        Busy bit (always 0 in PASS3)                       |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_TFL = MIO UART@ Transmit FIFO Level Register
 *
 * The Transmit FIFO Level Register (TFL) indicates the number of data entries in the transmit FIFO.
 *

     ==============================================================
     MIO_UART(0..1)_TFL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ      NS          NS        Reserved                                           |   
 <6:0>   TFL      RO       0x0         NS        Transmit FIFO Level Register                       |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_RFL = MIO UART@ Receive FIFO Level Register
 *
 * The Receive FIFO Level Register (RFL) indicates the number of data entries in the receive FIFO.
 *

     ==============================================================
     MIO_UART(0..1)_RFL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ      NS          NS        Reserved                                           |   
 <6:0>   RFL      RO       0x0         NS        Receive FIFO Level Register                        |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_SRR = MIO UART@ Software Reset Register
 *
 * The Software Reset Register (SRR) is a write-only register that resets the UART and/or the receive
 * FIFO and/or the transmit FIFO.
 *
 * Bit 0 of the SRR is the UART Soft Reset (USR) bit.  Setting this bit resets the UART.
 *
 * Bit 1 of the SRR is a shadow copy of the RX FIFO Reset bit (FCR bit 1). This can be used to remove
 * the burden on software having to store previously written FCR values (which are pretty static) just
 * to reset the receive FIFO.
 *
 * Bit 2 of the SRR is a shadow copy of the TX FIFO Reset bit (FCR bit 2). This can be used to remove
 * the burden on software having to store previously written FCR values (which are pretty static) just
 * to reset the transmit FIFO.
 *

     ==============================================================
     MIO_UART(0..1)_SRR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:3>  NS       RAZ      NS          NS        Reserved                                           |   
 <2>     STFR     WO       0x0         NS        Shadow TX FIFO Reset                               |   
 <1>     SRFR     WO       0x0         NS        Shadow RX FIFO Reset                               |   
 <0>     USR      WO       0x0         NS        UART Soft Reset                                    |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_SRTS = MIO UART@ Shadow Request To Send Register
 *
 * The Shadow Request To Send Register (SRTS) is a shadow register for the RTS bit (MCR bit 1) that can
 * be used to remove the burden of having to perform a read-modify-write on the MCR.
 *

     ==============================================================
     MIO_UART(0..1)_SRTS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved                                           |   
 <0>     SRTS     R/W      0x0         NS        Shadow Request To Send                             |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_SBCR = MIO UART@ Shadow Break Control Register
 *
 * The Shadow Break Control Register (SBCR) is a shadow register for the BREAK bit (LCR bit 6) that can
 * be used to remove the burden of having to perform a read-modify-write on the LCR.
 *

     ==============================================================
     MIO_UART(0..1)_SBCR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved                                           |   
 <0>     SBCR     R/W      0x0         NS        Shadow Break Control                               |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_SFE = MIO UART@ Shadow FIFO Enable Register
 *
 * The Shadow FIFO Enable Register (SFE) is a shadow register for the FIFO enable bit (FCR bit 0) that
 * can be used to remove the burden of having to store the previously written value to the FCR in memory
 * and having to mask this value so that only the FIFO enable bit gets updated.
 *

     ==============================================================
     MIO_UART(0..1)_SFE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved                                           |   
 <0>     SFE      R/W      0x0         NS        Shadow FIFO Enable                                 |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_SRT = MIO UART@ Shadow RX Trigger Register
 *
 * The Shadow RX Trigger Register (SRT) is a shadow register for the RX Trigger bits (FCR bits 7:6) that
 * can be used to remove the burden of having to store the previously written value to the FCR in memory
 * and having to mask this value so that only the RX Trigger bits get updated.
 *

     ==============================================================
     MIO_UART(0..1)_SRT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ      NS          NS        Reserved                                           |   
 <1:0>   SRT      R/W      0x0         NS        Shadow RX Trigger                                  |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_STT = MIO UART@ Shadow TX Trigger Register
 *
 * The Shadow TX Trigger Register (STT) is a shadow register for the TX Trigger bits (FCR bits 5:4) that
 * can be used to remove the burden of having to store the previously written value to the FCR in memory
 * and having to mask this value so that only the TX Trigger bits get updated.
 *

     ==============================================================
     MIO_UART(0..1)_STT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ      NS          NS        Reserved                                           |   
 <1:0>   STT      R/W      0x0         NS        Shadow TX Trigger                                  |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_UART@_HTX = MIO UART@ Halt TX Register
 *
 * The Halt TX Register (HTX) is used to halt transmissions for testing, so that the transmit FIFO can be
 * filled by software when FIFOs are enabled. If FIFOs are not enabled, setting the HTX register will
 * have no effect.
 *

     ==============================================================
     MIO_UART(0..1)_HTX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved                                           |   
 <0>     HTX      R/W      0x0         NS        Halt TX                                            |   
----------------------------------------------------------------------------------------------------
===




     ==============================================================
     MIO_FUS_DAT0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |   
 <31:0>  MAN_INFO RO       NS          NS        Fuse information - manufacturing info [31:0]       |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_DAT1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |   
 <31:0>  MAN_INFO RO       NS          NS        Fuse information - manufacturing info [63:32]      |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_DAT2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:35> NS          RAZ      NS          NS       Reserved				            |   
 <34>    DORM_CRYPTO RO       NS          NS       Fuse information - Dormant Encryption enable     |   
 <33>	 FUS318	     RO	      NS	  NS	   Fuse information - a copy of fuse318		    |	
 <32>    RAID_EN     RO	      NS	  NS  	   Fuse information - RAID enabled		    |	
 <31:29> NS          RO       NS          NS       Fuse information - Spare Fuse[76:74]             |   
 <28>    NODFA_CP2   RO       NS          NS       Fuse information - DFA Disable (CP2)             |   
 <27>    NOMUL       RO       NS          NS       Fuse information - VMUL disable                  |   
 <26>    NOCRYPTO    RO       NS          NS       Fuse information - AES/DES/HASH disable          |   
 <25:24> NS          RO       NS          NS       Fuse information - Spare fuse[73:72]             |   
 <23:16> CHIP_ID     RO       NS          NS       Fuse information - CHIP_ID                       |   
 <15:6>  NS          RO       NS          NS       Fuse information - Spare fuse[15:6]              |   
 <5:0>   PP_DIS      RO       NS          NS       Fuse information - PP_DISABLES                   |   

Notes:
CHIP_ID is consumed in several places within Octeon.

   * Core COP0 ProcessorIdentification[Revision]
   * Core EJTAG DeviceIdentification[Version]
   * PCI_CFG02[RID]
   * JTAG controller

Note: The JTAG controller gets CHIP_ID[3:0] solely from the laser fuses.
Modification to the efuses will not change what the JTAG controller reports
for CHIP_ID.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_DAT3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:58> NS           RAZ      NS          NS        Reserved				                |   
 <57:48> PLL_CTL      RO       NS          NS        Fuse information - PLL control                     |   
 <47:45> DFA_INFO_DTE RO       NS          NS        Fuse information - DFA information (DTE)           |   
 <44:41> DFA_INFO_CLM RO       NS          NS        Fuse information - DFA information (Cluster mask)  |   
 <40>    NS           RAZ      NS          NS        Reserved				                |   
 <39:38> EMA          RO       NS          NS        Fuse information - EMA                             |   
 <37>    EFUS_LCK_RSV RO       NS          NS        Fuse information - efuse lockdown                  |   
 <36>    EFUS_LCK_MAN RO       NS          NS        Fuse information - efuse lockdown                  |   
 <35>    PLL_HALF_DIS RO       NS          NS        Fuse information - RCLK PLL control                |   
 <34:32> L2C_CRIP     RO       NS          NS        Fuse information - L2C Cripple (1/8, 1/4, 1/2)     |   
 <31>    SPARE        RO       NS          NS        Spare Fuses                                        |   
 <30:29> ZIP_INFO     RO       NS          NS        Fuse information - Zip information                 |   
 <28>    BAR2_EN      RO       NS          NS        Fuse information - BAR2 Present (when blown '1')   |   
 <27>    EFUS_LCK     RO       NS          NS        Fuse information - efuse lockdown                  |   
 <26>    EFUS_IGN     RO       NS          NS        Fuse information - efuse ignore                    |   
 <25>    NOZIP        RO       NS          NS        Fuse information - ZIP disable                     |   
 <24>    NODFA_DTE    RO       NS          NS        Fuse information - DFA Disable (DTE)               |   
 <23:0>  NS           RAZ      NS          NS        Reserved			  	                |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_PDF Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  PDF      RO       NS          NS        Fuse information - Product Definition Field        |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_RCMD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:24> NS       RAZ      NS          NS        Reserved				            |   
 <23:16> DAT      RO       NS          NS        8bits of fuse data				    |   
 <15:13> NS       RAZ      NS          NS        Reserved				            |   
 <12>    PEND     R/W	   0	       0	 SW sets this bit on a write to start FUSE read	    |   
						  operation.  HW clears when read is complete and   |
						  the DAT is valid				    |
 <11:9>  NS       RAZ      NS          NS        Reserved				            |   
 <8>     EFUSE    R/W      0           0         When set, return data from the efuse storage	    |   
						  rather than the local storage                     |
 <7:0>   ADDR     R/W      0           0         The byte address of the fuse to read               |   

Notes:
To read an efuse, SW writes MIO_FUS_RCMD[ADDR,PEND] with the byte address of
the fuse in question, then SW can poll MIO_FUS_RCMD[PEND].  When PEND is
clear, then MIO_FUS_RCMD[DAT] is valid.  In addition, if the efuse read went
to the efuse banks (eg. ((ADDR/16) not {0,1,7}) || EFUSE) SW can read
MIO_FUS_BNK_DATX which contains all 128 fuses in the bank associated in
ADDR.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_WADR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ      NS          NS        Reserved				            |   
 <3:0>   ADDR     R/W      NS          NS        Which of the banks of 128 fuses to blow            |   
----------------------------------------------------------------------------------------------------
===

 *DON'T PUT IN HRM*

     ==============================================================
     MIO_FUS_PROG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ      NS          NS        Reserved				            |   
 <1>     SOFT     R/W      0           0         When set with PROG, causes only the local storeage |   
						  to change.  Will not really blow any fuses.  HW   |
                                                  will clear when the program operation is complete |

 <0>     PROG     R/W      NS          NS        Blow the fuse bank                                 |   
						  SW will set PROG, and then the HW will clear	    |
						  when the program operation is complete            |

Notes:

This CSR is not present in the HRM.

To write a bank of fuses, SW must set MIO_FUS_WADR[ADDR] to the bank to be
programmed and then set each bit within MIO_FUS_BNK_DATX to indicate which
fuses to blow.  Once ADDR, and DAT are setup, SW can write to
MIO_FUS_PROG[PROG] to start the bank write and poll on PROG.  Once PROG is
clear, the bank write is complete.

A soft blow is still subject to lockdown fuses.  After a soft/warm reset, the
chip will behave as though the fuses were actually blown.  A cold reset restores
the actual fuse valuse.

----------------------------------------------------------------------------------------------------
===

 *DON'T PUT IN HRM*

     ==============================================================
     MIO_FUS_PROG_TIMES Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:35> NS        RAZ      NS          NS        Reserved				            |   
 <34>    VGATE_PIN RO       1           0         efuse vgate pin (L6G)				    |   
 <33>    FSRC_PIN  RO       0           0         efuse fsource pin (L6G)			    |   
 <32>    PROG_PIN  RO       0           0         efuse program pin (IFB)			    |   
 <31:25> OUT       R/W      1           NS        efuse timing param                                |   
						 						    |
                                                 OUT = (tOUT/refclk period)-1                       |
						 						    |
						 For IFB: tOUT =  20ns                              |
                                                 For L6G: tOUT =  20ns				    |
						 						    |
 <24:21> SCLK_LO  R/W      1           NS        efuse timing param                                 |   
						 						    |
                                                 SCLK_LO=(tSLO/refclk period)-1                     |
						 						    |
						 For IFB: tSLO =  20ns                              |
                                                 For L6G: tSLO =  20ns				    |
						 						    |
 <20:6>  SCLK_HI  R/W      20000       NS        efuse timing param                                 |   
						 						    |
                                                 SCLK_HI=(tSHI/refclk period)-1                     |
						 						    |
						 For IFB: tSHI =  200us                             |
                                                 For L6G: tSHI =  25us				    |
						 						    |
 <5:0>   SETUP    R/W      1           NS        efuse timing param                                 |   
						 						    |
                                                 SETUP = (tWRS/refclk period)-1                     |
						 						    |
						 For IFB: tWRS =  20ns                              |
                                                 For L6G: tWRS =  20ns	                            |
						 						    |

Notes:

This CSR is not present in the HRM.

All values must be > 0 for correct electrical operation.

IFB fuses are 0..1791
L6G fuses are 1792 to 2047

The reset values are for IFB fuses for ref_clk of 100MHZ

----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_BNK_DAT(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  DAT      R/W      NS          NS        Efuse bank store			            |   
					 	 For reads, the DAT gets the fus bank last read     |
					 	 For write, the DAT determines which fuses to blow  |

Notes:
The intial state of MIO_FUS_BNK_DAT* is as if bank6 was just read i.e. DAT* = fus[895:768]
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_SPR_REPAIR_SUM Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved (see 	MIO_FUS_REPAIR_RES*)                |   
 <0>     TOO_MANY RAZ      NS          NS        Reserved (see 	MIO_FUS_REPAIR_RES*)                |           
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_SPR_REPAIR_RES Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:42> NS       RAZ      NS          NS        Reserved (see 	MIO_FUS_REPAIR_RES*)                |   
 <41:28> REPAIR2  RAZ      NS          NS        Reserved (see 	MIO_FUS_REPAIR_RES*)                |           
 <27:14> REPAIR1  RAZ      NS          NS        Reserved (see 	MIO_FUS_REPAIR_RES*)                |   
 <13:0>  REPAIR0  RAZ      NS          NS        Reserved (see 	MIO_FUS_REPAIR_RES*)                |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_EMA Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ      NS          NS        Reserved				            |   
 <6:4>   EFF_EMA  RAZ      NS          NS        Reserved				            |   
 <3>     NS       RAZ      NS          NS        Reserved				            |   
 <2:0>   EMA      RAZ      NS          NS        Reserved				            |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_REPAIR_RES0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:55> NS       RAZ      NS          NS        Reserved				            |   
 <54>    TOO_MANY RO       0           0         Too many defects			            |   
 <53:36> REPAIR2  RO       0           0         BISR Results				            |   
 <35:18> REPAIR1  RO       0           0         BISR Results				            |   
 <17:0>  REPAIR0  RO       0           0         BISR Results				            |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_REPAIR_RES1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:54> NS       RAZ      NS          NS        Reserved				            |   
 <53:36> REPAIR5  RO       0           0         BISR Results				            |   
 <35:18> REPAIR4  RO       0           0         BISR Results				            |   
 <17:0>  REPAIR3  RO       0           0         BISR Results				            |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_REPAIR_RES2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:18> NS       RAZ      NS          NS        Reserved				            |   
 <17:0>  REPAIR6  RO       0           0         BISR Results				            |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_READ_TIMES Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:26> NS         RAZ      NS          NS      Reserved				             |  
 <25:22> SCH        R/W      15          NS      Hold CS for (SCH+1) refclks after FSET desserts     |  
						 						     |
                                                 SCH = (tSCH/refclk period)-1                        |
						 						     |
						 For IFB: tSCH = 160ns                               |
                                                 For L6G: tSCH =  10ns				     |
						 						     |
 <21:18> FSH        R/W      15          NS      Hold FSET for (FSH+1) refclks after PRCHG deasserts |  
						 						     |
                                                 FSH = (tFSH/refclk period)-1                        |
						 						     |
						 For IFB: tFSH = 160ns                               |
                                                 For L6G: tFSH =  10ns				     |
						 						     |
 <17:14> PRH        R/W      6           NS      Assert PRCHG (PRH+1) refclks after SIGDEV deasserts |  
						 						     |
                                                 PRH = (tPRH/refclk period)-1                        |
						 						     |
                                                 For IFB: tPRH =  70ns			             |
                                                 For L6G: tPRH =  10ns			             |
						 						     |
 <13:10> SDH        R/W      0           NS      Hold SIGDEV for (SDH+1) refclks after FSET asserts  |  
						 						     |
                                                 SDH = (tSDH/refclk period)-1                        |
						 						     |
                                                 For IFB: tPRH =  10ns			             |
                                                 For L6G: tPRH =  10ns			             |
						 						     |
 <9:0>   SETUP      R/W      999         NS      Assert CS for (SETUP+1) refclks before asserting    |  
						 SIGDEV, FSET, or PRCHG				     |
						 						     |
                                                 SETUP=(tRDS/refclk period)-1                        |
						 						     |
                                                 For IFB: tRDS = 10000ns		             |
                                                 For L6G: tRDS = max(tSCS,tSDS,tPRS)		     |
                                                   where tSCS   = 10ns                               |
						         tSDS   = 10ns                               |
						         tPRS   = 10ns                               |
Notes: 
IFB fuses are 0..1791
L6G fuses are 1792 to 2047

The reset values are for IFB fuses for refclk up to 100MHZ when core PLL is enagaged
The reset values are for IFB fuses for refclk up to 500MHZ when core PLL is not enagaged

If any of the formulas above result in a value less than zero, the corresponding 
timing parameter should be set to zero.

Prior to issuing a read to the fuse banks (via. MIO_FUS_RCMD), this register 
should be written with the timing parameters which correspond to the fuse bank type (IFB vs L6G)
that will be read. 

This register should not be written while MIO_FUS_RCMD[PEND]=1.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_FUS_PLL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS           RAZ      NS        NS        Reserved                                         |   
 <7>     C_COUT_RST   R/W      0x0       NS        Core clkout postscaler reset                     |   
 <6:5>   C_COUT_SEL   R/W      0x0       NS        Core clkout select                    	    |   
                                                   (0=RCLK,1=PS output,2=PLL output, 3=GND)         |   $PR
 <4>     PNR_COUT_RST R/W      0x0       NS        PNR  clkout postscaler reset	                    |   
 <3:2>   PNR_COUT_SEL R/W      0x0       NS        PNR  clkout select                               |   
                                                   (0=SCLK,1=PS output,2=PLL output, 3=GND)         |   $PR
 <1>     RFSLIP       RAZ      0x0       NS        Reserved                                         |   
 <0>     FBSLIP       RAZ      0x0       NS        Reserved                                         |   

Notes: 
The core clkout postscaler should be placed in reset at least 10 ref clocks prior to changing
the core clkout select.  The core clkout postscaler should remain under reset for at least 10 
ref clocks after the core clkout select changes.

The pnr clkout postscaler should be placed in reset at least 10 ref clocks prior to changing
the pnr clkout select.  The pnr clkout postscaler should remain under reset for at least 10 
ref clocks after the pnr clkout select changes.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_RST_BOOT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:36> NS         RAZ      NS          NS        Reserved				            |   
 <35:30> C_MUL      RO       NS          NS        Core clock multiplier:                           |   
                                                      C_MUL = (core clk speed) / (ref clock speed)  |
                                                    "ref clock speed" should always be 50MHz.       |
                                                    If PLL_QLM_REF_CLK_EN=0, "ref clock" comes      |
                                                         from PLL_REF_CLK pin.                      |
                                                    If PLL_QLM_REF_CLK_EN=1, "ref clock" is         |
                                                         1/2 speed of QLMC_REF_CLK_* pins.          |
 <29:24> PNR_MUL    RO       NS          NS        Coprocessor clock multiplier:                    |   
                                                      PNR_MUL = (coprocessor clk speed) /           |
                                                                      (ref clock speed)             |
                                                    See C_MUL comments about ref clock.             |
 <23:20> QLM2_SPD   RO       NS          NS        QLM2_SPD pins sampled at DCOK assertion          |   
 <19:16> QLM1_SPD   RO       NS          NS        QLM1_SPD pins sampled at DCOK assertion          |   
 <15:12> QLM0_SPD   RO       NS          NS        QLM0_SPD pins sampled at DCOK assertion          |   
 <11:2>  LBOOT      R/W1C    NS          NS        Last boot cause mask, resets only with dock.     |   
												    |
                                                     bit9 - Soft reset due to watchdog		    |
                                                     bit8 - Soft reset due to CIU_SOFT_RST write    |
                                                     bit7 - Warm reset due to cntl0 link-down or    |
                                                            hot-reset                               |
                                                     bit6 - Warm reset due to cntl1 link-down or    |
                                                            hot-reset                               |
                                                     bit5 - Cntl1 reset due to PERST1_L pin	    |
                                                     bit4 - Cntl0 reset due to PERST0_L pin	    |
                                                     bit3 - Warm reset due to PERST1_L pin	    |
                                                     bit2 - Warm reset due to PERST0_L pin	    |
                                                     bit1 - Warm reset due to CHIP_RESET_L pin	    |
                                                     bit0 - Cold reset due to DCOK pin		    |
												    |
 <1>     RBOOT      R/W      NS          NS        Determines whether core 0 remains in reset after |   
 	 	    	     		             after chip cold/warm/soft reset.		    |
 <0>     RBOOT_PIN  RO       NS          NS        Read-only access to REMOTE_BOOT pin              |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_RST_DELAY Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS           RAZ      NS          NS        Reserved				            |   
 <31:16> SOFT_RST_DLY R/W      0x7ff       NS        A soft reset immediately causes an early soft  |   
                                                     reset notification.  However, the assertion of |
						     soft reset will be delayed this many sclks.    |
                                                     A warm/soft reset will not change this field.  |
                                                     NOTE: This must be at least 500 dclks          |

												    |
 <15:0>  WARM_RST_DLY R/W      0x7ff       NS        A warm reset immediately causes an early warm  |   
                                                     reset notification.  However, the assertion of |
						     warm reset will be delayed this many sclks.    |
                                                     A warm/soft reset will not change this field.  |
                                                     NOTE: This must be at least 500 dclks          |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_RST_CFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6>  BIST_DELAY    RO      NS          NS        Reserved			   	            |   
 <5:2>   NS            RAZ     NS          NS        Reserved                                       |   
 <1>     WARM_CLR_BIST R/W     0           0         Peform clear bist during warm reset, instead   |   
                                                     of a full bist. A warm/soft reset will not     |
                                                     change this field.                             |
 <0>     SOFT_CLR_BIST R/W     0           0         Peform clear bist during soft reset, instead   |   
                                                     of a full bist. A warm/soft reset will not     |
                                                     change this field.                             |
Notes:												    |
Cold reset will always performs a full bist.                                                        |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     MIO_RST_CTL(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:9>  NS         RAZ      NS          NS        Reserved				            |   
												    |
 <8>     RST_DONE   RO       NS          NS        Read-only access to controller reset status      |    
                                                                                                    |
                                                   RESET_DONE is always zero (i.e. the controller   |
                                                   is held in reset) when:                          |
                                                     - CIU_SOFT_PRST*[SOFT_PRST]=1, or              |
                                                     - RST_RCV==1 and PERST*_L pin is asserted      |
                                                                                                    |
 <7>     RST_LINK   R/W      NS          NS        Controls whether corresponding controller        |   
                                                   link-down or hot-reset causes a warm chip reset  |
						   On cold reset, this field is initialized as 	    |
                                                   follows:					    |
                                                      0 = when corresponding strap QLM*_HOST_MODE=1 |
                                                      1 = when corresponding strap QLM*_HOST_MODE=0 |
                                                                                                    |
                                                   Note that a link-down or hot-reset event can     |
                                                   never cause a warm chip reset when the           |
                                                   controller is in reset (i.e. can never cause a   |
                                                   warm reset when RST_DONE==0).                    |
												    |
 <6>     HOST_MODE  RO       NS          NS        RO access to corresponding strap QLM*_HOST_MODE  |   
                                                                                                    |
 <5:4>   PRTMODE    R/W      NS          NS        Port mode                                        |   
 	 	    	     		   	      0 = port is EP mode		            |
						      1 = port is RC mode		            |
						      2,3 = Reserved                                |
                                                   A warm/soft reset will not change this field.    |
						   On cold reset, this field is initialized as 	    |
                                                   follows:					    |
                                                      0 = when corresponding strap QLM*_HOST_MODE=0 |
                                                      1 = when corresponding strap QLM*_HOST_MODE=1 |
												    |
 <3>     RST_DRV    R/W      NS          NS        Controls whether corresponding PERST*_L chip pin |   
						     is driven by the OCTEON.  A warm/soft reset    |
						     will not change this field.  On cold reset,    |
                                                     this field is initialized as follows:	    |
                                                      0 = when corresponding strap QLM*_HOST_MODE=0 |
                                                      1 = when corresponding strap QLM*_HOST_MODE=1 |
                                                                                                    |
                                                     When set, OCTEON drives the corresponding      |
                                                     PERST*_L pin. Otherwise, OCTEON does not drive |
                                                     the corresponding PERST*_L pin.                |
						     						    |
 <2>     RST_RCV    R/W      NS          NS        Controls whether corresponding PERST*_L chip pin |   
                                                     is recieved by OCTEON.  A warm/soft reset	    |
						     will not change this field.  On cold reset,    |
                                                     this field is initialized as follows:	    |
                                                      0 = when corresponding strap QLM*_HOST_MODE=1 |
                                                      1 = when corresponding strap QLM*_HOST_MODE=0 |
                                                                                                    |
                                                     When RST_RCV==1, the PERST*_L value is         |
                                                     received and may be used to reset the          |
                                                     controller and (optionally, based on RST_CHIP) |
                                                     warm reset the chip.                           |
                                                                                                    |
                                                     When RST_RCV==1 (and RST_CHIP=0),              |
                                                     MIO_RST_INT[PERST*] gets set when the PERST*_L |
                                                     pin asserts. (This interrupt can alert SW      |
                                                     whenever the external reset pin initiates a    |
                                                     controller reset sequence.)                    |
                                                                                                    |
                                                     RST_VAL gives the PERST*_L pin value when      |
                                                     RST_RCV==1.                                    |
                                                                                                    |
                                                     When RST_RCV==0, the PERST*_L pin value is     |
                                                     ignored.                                       |
						     						    |
 <1>     RST_CHIP   R/W       0          NS        Controls whether corresponding PERST*_L chip     |   
                                                     pin causes a chip warm reset like CHIP_RESET_L.|
						     A warm/soft reset will not change this field.  |
                                                     On cold reset, this field is initialized to 0. |
                                                                                                    |
                                                     RST_CHIP is not used when RST_RCV==0.          |
                                                                                                    |
                                                     When RST_RCV==0, RST_CHIP is ignored.          |
                                                                                                    |
                                                     When RST_RCV==1, RST_CHIP==1, and PERST*_L     |
                                                     asserts, a chip warm reset will be generated.  |
												    |
 <0>     RST_VAL    RO       NS          NS        Read-only access to corresponding PERST*_L pin   |   
                                                     Unpredictable when RST_RCV==0. Reads as 1 when |
                                                     RST_RCV==1 and the PERST*_L pin is asserted.   |
                                                     Reads as 0 when RST_RCV==1 and the PERST*_L    |
                                                     pin is not asserted.                           |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_RST_INT = MIO Reset Interrupt Register
 *

     ==============================================================
     MIO_RST_INT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:10> NS         RAZ      NS          NS        Reserved                                         | 
 <9>     PERST1     R/W1C    0x0         NS        PERST1_L asserted while MIO_RST_CTL1[RST_RCV]=1  | 
                                                   and MIO_RST_CTL1[RST_CHIP]=0                     | 
 <8>     PERST0     R/W1C    0x0         NS        PERST0_L asserted while MIO_RST_CTL0[RST_RCV]=1  | 
                                                   and MIO_RST_CTL0[RST_CHIP]=0                     | 
 <7:2>   NS         RAZ      NS          NS        Reserved                                         | 
 <1>     RST_LINK1  R/W1C    0x0         NS        A controller1 link-down/hot-reset occurred while | 
                                                   MIO_RST_CTL1[RST_LINK]=0.  Software must assert  | 
                                                   then de-assert CIU_SOFT_PRST1[SOFT_PRST]         | 
												    | 
 <0>     RST_LINK0  R/W1C    0x0         NS        A controller0 link-down/hot-reset occurred while | 
                                                   MIO_RST_CTL0[RST_LINK]=0.  Software must assert  | 
                                                   then de-assert CIU_SOFT_PRST[SOFT_PRST]          | 
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_RST_INT_EN = MIO Reset Interrupt Enable Register
 *

     ==============================================================
     MIO_RST_INT_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:10> NS         RAZ      NS          NS        Reserved                                         |       
 <9>     PERST1     R/W      0           NS        Controller1 PERST reset interrupt enable         |        
 <8>     PERST0     R/W      0           NS        Controller0 PERST reset interrupt enable         |        
 <7:2>   NS         RAZ      NS          NS        Reserved                                         |       
 <1>     RST_LINK1  R/W      0           NS        Controller1 link-down/hot reset interrupt enable |        
 <0>     RST_LINK0  R/W      0           NS        Controller0 link-down/hot reset interrupt enable |        
----------------------------------------------------------------------------------------------------
===




     ==============================================================
     CIU_INT(0..11,32)_SUM0 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    BOOTDMA  RO       0           0         Boot bus DMA engines Interrupt		            |   
                                                 See MIO_BOOT_DMA_INT*, MIO_NDF_DMA_INT             |
 <62>    MII	  RO       0           0         RGMII/MII/MIX Interface 0 Interrupt		    |   
                                                 See MIX0_ISR                                       |
 <61>    IPDPPTHR RO       0           0         IPD per-port counter threshold interrupt           |   
                                                 See IPD_PORT_QOS_INT*                              |
 <60>    POWIQ	  RO       0           0         POW IQ interrupt			            |   
                                                 See POW_IQ_INT                                     |
 <59>    TWSI2	  RO       0           0         2nd TWSI Interrupt			            |   
                                                 See MIO_TWS1_INT                                   |
 <58:57> NS       RAZ      0           0         Reserved for PCM and MPI		            |   
 <56>    USB	  RO       0           0         USB EHCI or OHCI Interrupt			    |   
                                                 See UAHC0_EHCI_USBSTS UAHC0_OHCI0_HCINTERRUPTSTATUS|
 <55:52> TIMER	  R/W1C	   0	       0	 General timer interrupts			    |	
                                                 Set any time the corresponding CIU timer expires   |
 <51>    NS 	  RAZ      0           0         Reserved for Key Zeroization interrupt             |   
 <50>	 IPD_DRP  R/W1C	   0	       0	 IPD QOS packet drop interrupt			    |	
                                                 Set any time PIP/IPD drops a packet                |
 <49>    NS       RAZ      NS          NS        Reserved for GMX_DRP                               |   
 <48>    GMX_DRP  R/W1C	   0	       0	 GMX packet drop interrupt			    |	
                                                 Set any time corresponding GMX drops a packet      |
 <47>	 TRACE	  RO	   0	       0	 Trace buffer interrupt 			    |	
                                                 See TRA_INT_STATUS                                 |
 <46>	 RML	  RO	   0	       0	 RML Interrupt					    |	
						  This interrupt will assert if any bit within	    |
						  CIU_BLOCK_INT is asserted.			    |
 <45>	 TWSI	  RO	   0	       0	 TWSI Interrupt					    |	
                                                 See MIO_TWS0_INT                                   |
 <44>	 WDOG_SUM RO	   0	       0	 SUM1&EN1 summary bit				    |	
                                                  This read-only bit reads as a one whenever any    |
                                                  CIU_INT_SUM1 bit is set and corresponding         |
                                                  enable bit in CIU_INTx_EN is set, where x         |
                                                  is the same as x in this CIU_INTx_SUM0.           |
						  PPs use CIU_INTx_SUM0 where x=0-11		    |
						  PCIe/sRIO uses the CIU_INTx_SUM0 where x=32-33.   |
						  Even INTx registers report WDOG to IP2	    |
						  Odd INTx registers report WDOG to IP3		    |
                                                  Note that WDOG_SUM only summarizes the SUM/EN1    |
                                                  result and does not have a corresponding enable   |
                                                  bit, so does not directly contribute to           |
                                                  interrupts.                                       |
 <43:40> PCI_MSI  RO	   0	       0	 PCIe/sRIO MSI					    |	
                                                 See SLI_MSI_RCVn for bit <40+n>                    |
 <39:36> PCI_INT  RO	   0	       0	 PCIe INTA/B/C/D				    |	
                                                  Refer to "Receiving Emulated INTA/INTB/           | 
                                                  INTC/INTD" in the SLI chapter of the spec         |
 <35:34> UART     RO	   0	       0	 Two UART interrupts				    |	
                                                 See MIO_UARTn_IIR[IID] for bit <34+n>              |
 <33:32> MBOX     RO	   0	       0	 Two mailbox interrupts	for entries 0-11	    |	
						  [33] is the or of <31:16>			    |
						  [32] is the or of <15:0>			    |
						 Two PCIe/sRIO internal interrupts for entries 32-33|
						  which equal CIU_PCI_INTA[INT]			    |
 <31:16> GPIO     RO	   0	       0	 16 GPIO interrupts				    |	
 <15:0>  WORKQ    RO	   0	       0	 16 work queue interrupts			    |	
                                                 See POW_WQ_INT[WQ_INT]                             |
						  1 bit/group. A copy of the R/W1C bit in the POW.  |
----------------------------------------------------------------------------------------------------
===
   

     ==============================================================
     CIU_INT33_SUM0 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    BOOTDMA  RO       0           0         Boot bus DMA engines Interrupt		            |   
                                                 See MIO_BOOT_DMA_INT*, MIO_NDF_DMA_INT             |
 <62>    MII	  RO       0           0         RGMII/MII/MIX Interface 0 Interrupt		    |   
                                                 See MIX0_ISR                                       |
 <61>    IPDPPTHR RO       0           0         IPD per-port counter threshold interrupt           |   
                                                 See IPD_PORT_QOS_INT*                              |
 <60>    POWIQ	  RO       0           0         POW IQ interrupt			            |   
                                                 See POW_IQ_INT                                     |
 <59>    TWSI2	  RO       0           0         2nd TWSI Interrupt			            |   
                                                 See MIO_TWS1_INT                                   |
 <58:57> NS       RAZ      0           0         Reserved for PCM and MPI		            |   
 <56>    USB	  RO       0           0         USB EHCI or OHCI Interrupt			    |   
                                                 See UAHC0_EHCI_USBSTS UAHC0_OHCI0_HCINTERRUPTSTATUS|
 <55:52> TIMER	  R/W1C	   0	       0	 General timer interrupts			    |	
                                                 Set any time the corresponding CIU timer expires   |
 <51>    NS 	  RAZ      0           0         Reserved for Key Zeroization interrupt             |   
 <50>	 IPD_DRP  R/W1C	   0	       0	 IPD QOS packet drop interrupt			    |	
                                                 Set any time PIP/IPD drops a packet                |
 <49>    NS       RAZ      NS          NS        Reserved for GMX_DRP                               |   
 <48>    GMX_DRP  R/W1C	   0	       0	 GMX packet drop interrupt			    |	
                                                 Set any time corresponding GMX drops a packet      |
 <47>	 TRACE	  RO	   0	       0	 Trace buffer interrupt 			    |	
                                                 See TRA_INT_STATUS                                 |
 <46>	 RML	  RO	   0	       0	 RML Interrupt					    |	
						  This interrupt will assert if any bit within	    |
						  CIU_BLOCK_INT is asserted.			    |
 <45>	 TWSI	  RO	   0	       0	 TWSI Interrupt					    |	
                                                 See MIO_TWS0_INT                                   |
 <44>	 WDOG_SUM RO	   0	       0	 SUM1&EN1 summary bit				    |	
                                                  This read-only bit reads as a one whenever any    |
                                                  CIU_INT_SUM1 bit is set and corresponding         |
                                                  enable bit in CIU_INTx_EN is set, where x         |
                                                  is the same as x in this CIU_INTx_SUM0.           |
						  PPs use CIU_INTx_SUM0 where x=0-11.		    |
						  PCIe/sRIO uses the CIU_INTx_SUM0 where x=32-33.   |
						  Even INTx registers report WDOG to IP2	    |
						  Odd INTx registers report WDOG to IP3		    |
                                                  Note that WDOG_SUM only summarizes the SUM/EN1    |
                                                  result and does not have a corresponding enable   |
                                                  bit, so does not directly contribute to           |
                                                  interrupts.                                       |
 <43:40> PCI_MSI  RO	   0	       0	 PCIe/sRIO MSI					    |	
                                                 See SLI_MSI_RCVn for bit <40+n>                    |
 <39:36> PCI_INT  RO	   0	       0	 PCIe INTA/B/C/D				    |	
                                                  Refer to "Receiving Emulated INTA/INTB/           | 
                                                  INTC/INTD" in the SLI chapter of the spec         |
 <35:34> UART     RO	   0	       0	 Two UART interrupts				    |	
                                                 See MIO_UARTn_IIR[IID] for bit <34+n>              |
 <33:32> MBOX     RO	   0	       0	 A read-only copy of CIU_PCI_INTA[INT]	            |	
 <31:16> GPIO     RO	   0	       0	 16 GPIO interrupts				    |	
 <15:0>  WORKQ    RO	   0	       0	 16 work queue interrupts			    |	
                                                 See POW_WQ_INT[WQ_INT]                             |
						  1 bit/group. A copy of the R/W1C bit in the POW.  |
----------------------------------------------------------------------------------------------------
===
   

     ==============================================================
     CIU_INT_SUM1 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    RST      RO       0x0         0         MIO RST interrupt                                  |   
                                                 See MIO_RST_INT                                    |
 <62:60> NS       RAZ      NS          NS        Reserved 		    		    	    |   
 <59:57> NS       RAZ      NS          NS        Reserved for DFM expansion    		    	    |   
 <56>    DFM      RO       0x0         0         DFM Interrupt                                      |   
                                                 See DFM_FNT_STAT                                   |
 <55:53> NS       RAZ      NS          NS        Reserved for LMC expansion    		    	    |   
 <52>    LMC0     RO       0x0         0         LMC0 interrupt                                     |   
                                                 See LMC0_INT                                       |
 <51>    SRIO1    RO       0x0         0         SRIO1 interrupt                                    |   
                                                 See SRIO1_INT_REG                                  |
 <50>    SRIO0    RO       0x0         0         SRIO0 interrupt                                    |   
                                                 See SRIO0_INT_REG                                  |
 <49>    PEM1     RO       0x0         0         PEM1 interrupt                                     |   
                                                 See PEM1_INT_SUM (enabled by PEM1_INT_ENB)         |
 <48>    PEM0     RO       0x0         0         PEM0 interrupt                                     |   
                                                 See PEM0_INT_SUM (enabled by PEM0_INT_ENB)         |
 <47>    PTP      R/W1C    0x0         0         PTP interrupt                                      |   
                                                 Set when HW decrements MIO_PTP_EVT_CNT to zero     |
 <46>    AGL      RO       0x0         0         AGL interrupt                                      |   
                                                 See AGL_GMX_RX*_INT_REG, AGL_GMX_TX_INT_REG        |
 <45:44> NS       RAZ      NS          NS        Reserved for future Interlaken                     |   
 <43:40> NS       RAZ      NS          NS        Reserved                                           |   
 <39:37> NS       RAZ      NS          NS        Reserved for GMX expansion			    |   
 <36>    AGX0     RO       0x0         0         GMX0 interrupt                                     |   
                                                 See GMX0_RX*_INT_REG, GMX0_TX_INT_REG,             |
                                                 PCS0_INT*_REG, PCSX0_INT_REG                       |
 <35>    DPI      RO       0x0         0         DPI interrupt                                      |   
                                                 See DPI_INT_REG                                    |
 <34>    SLI      RO       0x0         0         SLI interrupt                                      |   
                                                 See SLI_INT_SUM (enabled by SLI_INT_ENB_CIU)       |
 <33>    USB      RO       0x0         0         USB UCTL0 interrupt                                |   
                                                 See UCTL0_INT_REG                                  |
 <32>    DFA      RO       0x0         0         DFA interrupt                                      |   
                                                 See DFA_ERROR                                      |
 <31>    KEY      RO       0x0         0         KEY interrupt                                      |   
                                                 See KEY_INT_SUM                                    |
 <30>    RAD      RO       0x0         0         RAD interrupt                                      |   
                                                 See RAD_REG_ERROR                                  |
 <29>    TIM      RO       0x0         0         TIM interrupt                                      |   
                                                 See TIM_REG_ERROR                                  |
 <28>    ZIP      RO       0x0         0         ZIP interrupt                                      |   
                                                 See ZIP_ERROR                                      |
 <27>    PKO      RO       0x0         0         PKO interrupt                                      |   
                                                 See PKO_REG_ERROR                                  |
 <26>    PIP      RO       0x0         0         PIP interrupt                                      |   
                                                 See PIP_INT_REG                                    |
 <25>    IPD      RO       0x0         0         IPD interrupt                                      |   
                                                 See IPD_INT_SUM                                    |
 <24>    L2C      RO       0x0         0         L2C interrupt                                      |   
                                                 See L2C_INT_REG                                    |
 <23>    POW      RO       0x0         0         POW err interrupt                                  |   
                                                 See POW_ECC_ERR                                    |
 <22>    FPA      RO       0x0         0         FPA interrupt                                      |   
                                                 See FPA_INT_SUM                                    |
 <21>    IOB      RO       0x0         0         IOB interrupt                                      |   
                                                 See IOB_INT_SUM                                    |
 <20>    MIO      RO       0x0         0         MIO boot interrupt                                 |   
                                                 See MIO_BOOT_ERR                                   |
 <19>	 NAND	  RO       0           0         NAND Flash Controller interrupt		    |   
                                                 See NDF_INT                                        |
 <18>	 MII1	  RO       0           0         RGMII/MII/MIX Interface 1 Interrupt	            |   
                                                 See MIX1_ISR                                       |
 <17>    NS	  RAZ      NS          NS        Reserved for additional USB Interrupts		    |   
 <16>    NS       RAZ	   NS	       NS	 Reserved for Third UART interrupt		    |	
 <15:6>  NS       RAZ      NS          NS        Reserved				            |   
 <5:0>	 WDOG     RO	   0	       0	 6 watchdog interrupts				    |	
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_INT(0..11,32..33)_EN0 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    BOOTDMA  R/W      0           0         Boot bus DMA engines Interrupt enable	            |   
 <62>    MII	  R/W      0           0         RGMII/MII/MIX Interface 0 Interrupt enable	    |   
 <61>    IPDPPTHR R/W      0           0         IPD per-port counter threshold interrupt enable    |   
 <60>    POWIQ	  R/W      0           0         POW IQ interrupt enable		            |   
 <59>    TWSI2	  R/W      0           0         2nd TWSI Interrupt enable		            |   
 <58:57> NS       RAZ      0           0         Reserved for PCM and MPI		            |   
 <56>    USB	  R/W      0           0         USB EHCI or OHCI Interrupt enable		    |   
 <55:52> TIMER	  R/W	   0	       0	 General timer interrupt enables		    |	
 <51>	 NS       RAZ	   0	       0	 Reserved for Key Zeroization interrupt  	    |	
 <50>	 IPD_DRP  R/W	   0	       0	 IPD QOS packet drop interrupt enable		    |	
 <49>    NS       RAZ      0           0         Reserved for GMX_DRP                               |   
 <48>    GMX_DRP  R/W	   0	       0	 GMX packet drop interrupt enable		    |	
 <47>	 TRACE	  R/W	   0	       0	 Trace buffer interrupt enable 			    |	
 <46>	 RML	  R/W	   0	       0	 RML Interrupt enable				    |	
 <45>	 TWSI	  R/W	   0	       0	 TWSI Interrupt	enable				    |	
 <44>    NS       RAZ      NS          NS        Reserved				            |   
 <43:40> PCI_MSI  R/W	   0	       0	 PCIe/sRIO MSI enables				    |	
 <39:36> PCI_INT  R/W	   0	       0	 PCIe INTA/B/C/D enables			    |	
 <35:34> UART     R/W	   0	       0	 Two UART interrupt enables			    |	
 <33:32> MBOX     R/W	   0	       0	 Two mailbox/PCIe/sRIO interrupt enables	    |	
 <31:16> GPIO     R/W	   0	       0	 16 GPIO interrupt enables			    |	
 <15:0>  WORKQ    R/W	   0	       0	 16 work queue interrupt enables		    |	

Notes:
CIU_INT0_EN0:  PP0 /IP2
CIU_INT1_EN0:  PP0 /IP3
...
CIU_INT6_EN0:  PP3/IP2
CIU_INT7_EN0:  PP3/IP3
(hole)
CIU_INT32_EN0: PCI /IP
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_INT(0..11,32..33)_EN1 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    RST      R/W      0x0         0         MIO RST interrupt enable                           |   
 <62:60> NS       R/W      0x0         0         Reserved 		    		    	    |   
 <59:57> NS       R/W      0x0         0         Reserved for DFM expansion    		    	    |   
 <56>    DFM      R/W      0x0         0         DFM interrupt enable                               |   
 <55:53> NS       R/W      0x0         0         Reserved for LMC expansion    		    	    |   
 <52>    LMC0     R/W      0x0         0         LMC0 interrupt enable                              |   
 <51>    SRIO1    R/W      0x0         0         SRIO1 interrupt enable                             |   
 <50>    SRIO0    R/W      0x0         0         SRIO0 interrupt enable                             |   
 <49>    PEM1     R/W      0x0         0         PEM1 interrupt enable                              |   
 <48>    PEM0     R/W      0x0         0         PEM0 interrupt enable                              |   
 <47>    PTP      R/W      0x0         0         PTP interrupt enable                               |   
 <46>    AGL      R/W      0x0         0         AGL interrupt enable                               |   
 <45:44> NS       R/W      0x0         0         Reserved for future Interlaken                     |   
 <43:40> NS       R/W      0x0         0         Reserved                                           |   
 <39:37> NS       R/W      0x0         0         Reserved for GMX expansion			    |   
 <36>    AGX0     R/W      0x0         0         GMX0 interrupt enable                              |   
 <35>    DPI      R/W      0x0         0         DPI interrupt enable                               |   
 <34>    SLI      R/W      0x0         0         SLI interrupt enable                               |   
 <33>    USB      R/W      0x0         0         USB UCTL0 interrupt enable                         |   
 <32>    DFA      R/W      0x0         0         DFA interrupt enable                               |   
 <31>    KEY      R/W      0x0         0         KEY interrupt enable                               |   
 <30>    RAD      R/W      0x0         0         RAD interrupt enable                               |   
 <29>    TIM      R/W      0x0         0         TIM interrupt enable                               |   
 <28>    ZIP      R/W      0x0         0         ZIP interrupt enable                               |   
 <27>    PKO      R/W      0x0         0         PKO interrupt enable                               |   
 <26>    PIP      R/W      0x0         0         PIP interrupt enable                               |   
 <25>    IPD      R/W      0x0         0         IPD interrupt enable                               |   
 <24>    L2C      R/W      0x0         0         L2C interrupt enable                               |   
 <23>    POW      R/W      0x0         0         POW err interrupt enable                           |   
 <22>    FPA      R/W      0x0         0         FPA interrupt enable                               |   
 <21>    IOB      R/W      0x0         0         IOB interrupt enable                               |   
 <20>    MIO      R/W      0x0         0         MIO boot interrupt enable                          |   
 <19>	 NAND	  R/W      0           0         NAND Flash Controller interrupt enable		    |   
 <18>	 MII1	  R/W      0           0         RGMII/MII/MIX Interface 1 Interrupt enable	    |   
 <17>    NS	  R/W      0           0         Reserved for additional USB Interrupts		    |   
 <16>    NS       RAZ	   NS	       NS	 Reserved for Third UART interrupt		    |	
 <15:6>  NS       RAZ      NS          NS        Reserved				            |   
 <5:0>	 WDOG     R/W	   0	       0	 Watchdog summary interrupt enable vector	    |	

Notes:
@verbatim
PPx/IP2 will be raised when...

   n = x*2
   PPx/IP2 = |({CIU_INT_SUM1, CIU_INTn_SUM0} & {CIU_INTn_EN1, CIU_INTn_EN0})

PPx/IP3 will be raised when...

   n = x*2 + 1
   PPx/IP3 =  |({CIU_INT_SUM1, CIU_INTn_SUM0} & {CIU_INTn_EN1, CIU_INTn_EN0})

PCI/INT will be raised when...

   PCI/INT = |({CIU_INT_SUM1, CIU_INT32_SUM0} & {CIU_INT32_EN1, CIU_INT32_EN0})
@endverbatim
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_INT(0..5)_SUM4 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    BOOTDMA  RO       0           0         Boot bus DMA engines Interrupt		            |   
                                                 See MIO_BOOT_DMA_INT*, MIO_NDF_DMA_INT             |
 <62>    MII	  RO       0           0         RGMII/MII/MIX Interface 0 Interrupt		    |   
                                                 See MIX0_ISR                                       |
 <61>    IPDPPTHR RO       0           0         IPD per-port counter threshold interrupt           |   
                                                 See IPD_PORT_QOS_INT*                              |
 <60>    POWIQ	  RO       0           0         POW IQ interrupt			            |   
                                                 See POW_IQ_INT                                     |
 <59>    TWSI2	  RO       0           0         2nd TWSI Interrupt			            |   
                                                 See MIO_TWS1_INT                                   |
 <58:57> NS       RAZ      0           0         Reserved for PCM and MPI		            |   
 <56>    USB	  RO       0           0         USB EHCI or OHCI Interrupt			    |   
                                                 See UAHC0_EHCI_USBSTS UAHC0_OHCI0_HCINTERRUPTSTATUS|
 <55:52> TIMER	  R/W1C	   0	       0	 General timer interrupts			    |	
                                                 Set any time the corresponding CIU timer expires   |
 <51>	 NS 	  RAZ	   0	       0	 Reserved for Key Zeroization interrupt		    |	
 <50>	 IPD_DRP  R/W1C	   0	       0	 IPD QOS packet drop interrupt			    |	
                                                 Set any time PIP/IPD drops a packet                |
 <49>    NS       RAZ      0           0         Reserved for GMX_DRP                               |   
 <48>    GMX_DRP  R/W1C	   0	       0	 GMX packet drop interrupt			    |	
                                                 Set any time corresponding GMX drops a packet      |
 <47>	 TRACE	  RO	   0	       0	 Trace buffer interrupt 			    |	
                                                 See TRA_INT_STATUS                                 |
 <46>	 RML	  RO	   0	       0	 RML Interrupt					    |	
						  This bit is set when any bit is set in	    |
						  CIU_BLOCK_INT.         			    |
 <45>	 TWSI	  RO	   0	       0	 TWSI Interrupt					    |	
                                                 See MIO_TWS0_INT                                   |
 <44>	 WDOG_SUM RO	   0	       0	 SUM1&EN4_1 summary bit				    |	
                                                  This read-only bit reads as a one whenever any    |
                                                  CIU_INT_SUM1 bit is set and corresponding         |
                                                  enable bit in CIU_INTx_EN4_1 is set, where x      |
                                                  is the same as x in this CIU_INTx_SUM4.           |
						  PPs use CIU_INTx_SUM4 for IP4, where x=PPid.	    |
                                                  Note that WDOG_SUM only summarizes the SUM/EN4_1  |
                                                  result and does not have a corresponding enable   |
                                                  bit, so does not directly contribute to           |
                                                  interrupts.                                       |
 <43:40> PCI_MSI  RO	   0	       0	 PCIe/sRIO MSI					    |	
                                                 See SLI_MSI_RCVn for bit <40+n>                    |
 <39:36> PCI_INT  RO	   0	       0	 PCIe INTA/B/C/D				    |	
                                                  Refer to "Receiving Emulated INTA/INTB/           | 
                                                  INTC/INTD" in the SLI chapter of the spec         |
 <35:34> UART     RO	   0	       0	 Two UART interrupts				    |	
                                                 See MIO_UARTn_IIR[IID] for bit <34+n>              |
 <33:32> MBOX     RO	   0	       0	 Two mailbox interrupts	for entries 0-5 	    |	
						  [33] is the or of <31:16>			    |
						  [32] is the or of <15:0>			    |
 <31:16> GPIO     RO	   0	       0	 16 GPIO interrupts				    |	
 <15:0>  WORKQ    RO	   0	       0	 16 work queue interrupts			    |	
                                                 See POW_WQ_INT[WQ_INT]                             |
						  1 bit/group. A copy of the R/W1C bit in the POW.  |
----------------------------------------------------------------------------------------------------
===
   

     ==============================================================
     CIU_INT(0..5)_EN4_0 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    BOOTDMA  R/W      0           0         Boot bus DMA engines Interrupt	enable	            |   
 <62>    MII	  R/W      0           0         RGMII/MII/MIX Interface 0 Interrupt enable	    |   
 <61>    IPDPPTHR R/W      0           0         IPD per-port counter threshold interrupt enable    |   
 <60>    POWIQ	  R/W      0           0         POW IQ interrupt enable			    |   
 <59>    TWSI2	  R/W      0           0         2nd TWSI Interrupt enable			    |   
 <58:57> NS       RAZ      0           0         Reserved for PCM and MPI		            |   
 <56>    USB	  R/W      0           0         USB EHCI or OHCI Interrupt enable		    |   
 <55:52> TIMER	  R/W	   0	       0	 General timer interrupt enables		    |	
 <51>	 NS 	  RAZ	   0	       0	 Reserved for Key Zeroization interrupt		    |	
 <50>	 IPD_DRP  R/W	   0	       0	 IPD QOS packet drop interrupt enable		    |	
 <49>    NS       RAZ      0           0         Reserved for GMX_DRP                               |   
 <48>    GMX_DRP  R/W	   0	       0	 GMX packet drop interrupt enable		    |	
 <47>	 TRACE	  R/W	   0	       0	 Trace buffer interrupt enable 			    |	
 <46>	 RML	  R/W	   0	       0	 RML Interrupt enable				    |	
 <45>	 TWSI	  R/W	   0	       0	 TWSI Interrupt enable				    |	
 <44>    NS       RAZ      NS          NS        Reserved				            |   
 <43:40> PCI_MSI  R/W	   0	       0	 PCIe/sRIO MSI enables				    |	
 <39:36> PCI_INT  R/W	   0	       0	 PCIe INTA/B/C/D enables			    |	
 <35:34> UART     R/W	   0	       0	 Two UART interrupt enables			    |	
 <33:32> MBOX     R/W	   0	       0	 Two mailbox interrupt enables			    |	
 <31:16> GPIO     R/W	   0	       0	 16 GPIO interrupt enables			    |	
 <15:0>  WORKQ    R/W	   0	       0	 16 work queue interrupt enables		    |	

Notes:
CIU_INT0_EN4_0:   PP0  /IP4
CIU_INT1_EN4_0:   PP1  /IP4
...
CIU_INT11_EN4_0:  PP11 /IP4
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_INT(0..5)_EN4_1 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    RST      R/W      0x0         0         MIO RST interrupt enable                           |   
 <62:60> NS       R/W      0x0         0         Reserved 		    		    	    |   
 <59:57> NS       R/W      0x0         0         Reserved for DFM expansion    		    	    |   
 <56>    DFM      R/W      0x0         0         DFM interrupt enable                               |   
 <55:53> NS       R/W      0x0         0         Reserved for LMC expansion    		    	    |   
 <52>    LMC0     R/W      0x0         0         LMC0 interrupt enable                              |   
 <51>    SRIO1    R/W      0x0         0         SRIO1 interrupt enable                             |   
 <50>    SRIO0    R/W      0x0         0         SRIO0 interrupt enable                             |   
 <49>    PEM1     R/W      0x0         0         PEM1 interrupt enable                              |   
 <48>    PEM0     R/W      0x0         0         PEM0 interrupt enable                              |   
 <47>    PTP      R/W      0x0         0         PTP interrupt enable                               |   
 <46>    AGL      R/W      0x0         0         AGL interrupt enable                               |   
 <45:44> NS       R/W      0x0         0         Reserved for future Interlaken                     |   
 <43:40> NS       R/W      0x0         0         Reserved                                           |   
 <39:37> NS       R/W      0x0         0         Reserved for GMX expansion			    |   
 <36>    AGX0     R/W      0x0         0         GMX0 interrupt enable                              |   
 <35>    DPI      R/W      0x0         0         DPI interrupt enable                               |   
 <34>    SLI      R/W      0x0         0         SLI interrupt enable                               |   
 <33>    USB      R/W      0x0         0         USB UCTL0 interrupt enable                         |   
 <32>    DFA      R/W      0x0         0         DFA interrupt enable                               |   
 <31>    KEY      R/W      0x0         0         KEY interrupt enable                               |   
 <30>    RAD      R/W      0x0         0         RAD interrupt enable                               |   
 <29>    TIM      R/W      0x0         0         TIM interrupt enable                               |   
 <28>    ZIP      R/W      0x0         0         ZIP interrupt enable                               |   
 <27>    PKO      R/W      0x0         0         PKO interrupt enable                               |   
 <26>    PIP      R/W      0x0         0         PIP interrupt enable                               |   
 <25>    IPD      R/W      0x0         0         IPD interrupt enable                               |   
 <24>    L2C      R/W      0x0         0         L2C interrupt enable                               |   
 <23>    POW      R/W      0x0         0         POW err interrupt enable                           |   
 <22>    FPA      R/W      0x0         0         FPA interrupt enable                               |   
 <21>    IOB      R/W      0x0         0         IOB interrupt enable                               |   
 <20>    MIO      R/W      0x0         0         MIO boot interrupt enable                          |   
 <19>	 NAND	  R/W      0           0         NAND Flash Controller interrupt enable		    |   
 <18>	 MII1	  R/W      0           0         RGMII/MII/MIX Interface 1 Interrupt enable	    |   
 <17>    NS	  R/W      0           0         Reserved for additional USB Interrupts		    |   
 <16>    NS       RAZ	   NS	       NS	 Reserved for Third UART interrupt		    |	
 <15:6>  NS       RAZ      NS          NS        Reserved				            |   
 <5:0>	 WDOG     R/W	   0	       0	 Watchdog summary interrupt enable vector	    |	

Notes:
  PPx/IP4 will be raised when...
  PPx/IP4 = |({CIU_INT_SUM1, CIU_INTx_SUM4} & {CIU_INTx_EN4_1, CIU_INTx_EN4_0})
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_INT(0..11,32..33)_EN0_W1S Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    BOOTDMA  R/W1     0           0         Write 1 to set Boot bus DMA engines Interrupt	    |   
                                                 enable                                             |
 <62>    MII	  R/W1     0           0         Write 1 to set RGMII/MII/MIX Interface 0 Interrupt |   
                                                 enable                                             |
 <61>    IPDPPTHR R/W1     0           0         Write 1 to set IPD per-port counter threshold	    |   
                                                 interrupt enable                                   |
 <60>    POWIQ	  R/W1     0           0         Write 1 to set POW IQ interrupt	            |   
 <59>    TWSI2	  R/W1     0           0         Write 1 to set 2nd TWSI Interrupt	            |   
 <58:57> NS       RAZ      0           0         Reserved for PCM and MPI		            |   
 <56>    USB	  R/W1     0           0         Write 1 to set USB EHCI or OHCI Interrupt	    |   
 <55:52> TIMER	  R/W1	   0	       0	 Write 1 to set General timer interrupts	    |	
 <51>	 NS 	  RAZ	   0	       0	 Reserved for Key Zeroization interrupt		    |	
 <50>	 IPD_DRP  R/W1	   0	       0	 Write 1 to set IPD QOS packet drop interrupt 	    |	
                                                 enable                                             |
 <49>    NS       RAZ	   0           0         Reserved for GMX_DRP				    |   
 <48>    GMX_DRP  R/W1	   0	       0	 Write 1 to set GMX packet drop interrupt enable    |	
 <47>	 TRACE	  R/W1	   0	       0	 Write 1 to set Trace buffer interrupt enable 	    |	
 <46>	 RML	  R/W1	   0	       0	 Write 1 to set RML Interrupt enable		    |	
 <45>	 TWSI	  R/W1	   0	       0	 Write 1 to set TWSI Interrupt enable		    |	
 <44>    NS       RAZ	   NS	       NS        Reserved				            |   
 <43:40> PCI_MSI  R/W1	   0	       0	 Write 1s to set PCIe/sRIO MSI enables		    |	
 <39:36> PCI_INT  R/W1	   0	       0	 Write 1s to set PCIe INTA/B/C/D enables	    |	
 <35:34> UART     R/W1	   0	       0	 Write 1s to set UART interrupt enables		    |	
 <33:32> MBOX     R/W1	   0	       0	 Write 1s to set mailbox/PCIe/sRIO interrupt 	    |	
                                                 enables                                            |
 <31:16> GPIO     R/W1	   0	       0	 Write 1s to set GPIO interrupt enables		    |	
 <15:0>  WORKQ    R/W1	   0	       0	 Write 1s to set work queue interrupt enables	    |	

Notes:
Write-1-to-set version of the CIU_INTx_EN0 register
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_INT(0..11,32..33)_EN1_W1S Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    RST      R/W1     0x0         0         Write 1 to set MIO RST interrupt enable            |   
 <62:60> NS       R/W1     0x0         0         Reserved 		    		    	    |   
 <59:57> NS       R/W1     0x0         0         Reserved for DFM expansion    		    	    |   
 <56>    DFM      R/W1     0x0         0         Write 1 to set DFM interrupt enable                |   
 <55:53> NS       R/W1     0x0         0         Reserved for LMC expansion    		    	    |   
 <52>    LMC0     R/W1     0x0         0         Write 1 to set LMC0 interrupt enable               |   
 <51>    SRIO1    R/W1     0x0         0         Write 1 to set SRIO1 interrupt enable              |   
 <50>    SRIO0    R/W1     0x0         0         Write 1 to set SRIO0 interrupt enable              |   
 <49>    PEM1     R/W1     0x0         0         Write 1 to set PEM1 interrupt enable               |   
 <48>    PEM0     R/W1     0x0         0         Write 1 to set PEM0 interrupt enable               |   
 <47>    PTP      R/W1     0x0         0         Write 1 to set PTP interrupt enable                |   
 <46>    AGL      R/W1     0x0         0         Write 1 to set AGL interrupt enable                |   
 <45:44> NS       R/W1     0x0         0         Reserved for future Interlaken                     |   
 <43:40> NS       R/W1     0x0         0         Reserved                                           |   
 <39:37> NS       R/W1     0x0         0         Reserved for GMX expansion			    |   
 <36>    AGX0     R/W1     0x0         0         Write 1 to set GMX0 interrupt enable               |   
 <35>    DPI      R/W1     0x0         0         Write 1 to set DPI interrupt enable                |   
 <34>    SLI      R/W1     0x0         0         Write 1 to set SLI interrupt enable                |   
 <33>    USB      R/W1     0x0         0         Write 1 to set USB UCTL0 interrupt enable          |   
 <32>    DFA      R/W1     0x0         0         Write 1 to set DFA interrupt enable                |   
 <31>    KEY      R/W1     0x0         0         Write 1 to set KEY interrupt enable                |   
 <30>    RAD      R/W1     0x0         0         Write 1 to set RAD interrupt enable                |   
 <29>    TIM      R/W1     0x0         0         Write 1 to set TIM interrupt enable                |   
 <28>    ZIP      R/W1     0x0         0         Write 1 to set ZIP interrupt enable                |   
 <27>    PKO      R/W1     0x0         0         Write 1 to set PKO interrupt enable                |   
 <26>    PIP      R/W1     0x0         0         Write 1 to set PIP interrupt enable                |   
 <25>    IPD      R/W1     0x0         0         Write 1 to set IPD interrupt enable                |   
 <24>    L2C      R/W1     0x0         0         Write 1 to set L2C interrupt enable                |   
 <23>    POW      R/W1     0x0         0         Write 1 to set POW err interrupt enable            |   
 <22>    FPA      R/W1     0x0         0         Write 1 to set FPA interrupt enable                |   
 <21>    IOB      R/W1     0x0         0         Write 1 to set IOB interrupt enable                |   
 <20>    MIO      R/W1     0x0         0         Write 1 to set MIO boot interrupt enable           |   
 <19>	 NAND	  R/W1     0           0         Write 1 to set NAND Flash Controller interrupt	    |   
                                                 enable                                             |
 <18>	 MII1	  R/W1     0           0         Write 1 to set RGMII/MII/MIX Interface 1 Interrupt |   
                                                 enable                                             |
 <17>    NS	  R/W1     0           0         Reserved for additional USB Interrupts		    |   
 <16>    NS       RAZ	   NS	       NS	 Reserved for Third UART interrupt		    |	
 <15:6>  NS       RAZ      NS          NS        Reserved				            |   
 <5:0>	 WDOG     R/W1	   0	       0	 Write 1s to set Watchdog summary interrupt enable  |	

Notes:
Write-1-to-set version of the CIU_INTx_EN1 register
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_INT(0..5)_EN4_0_W1S Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    BOOTDMA  R/W1     0           0         Write 1 to set Boot bus DMA engines Interrupt	    |   
                                                 enable                                             |
 <62>    MII	  R/W1     0           0         Write 1 to set RGMII/MII/MIX Interface 0 Interrupt |   
                                                 enable                                             |
 <61>    IPDPPTHR R/W1     0           0         Write 1 to set IPD per-port counter threshold	    |   
                                                 interrupt enable                                   |
 <60>    POWIQ	  R/W1     0           0         Write 1 to set POW IQ interrupt	            |   
 <59>    TWSI2	  R/W1     0           0         Write 1 to set 2nd TWSI Interrupt	            |   
 <58:57> NS       RAZ      0           0         Reserved for PCM and MPI		            |   
 <56>    USB	  R/W1     0           0         Write 1 to set USB EHCI or OHCI Interrupt	    |   
 <55:52> TIMER	  R/W1	   0	       0	 Write 1 to set General timer interrupts	    |	
 <51>	 NS 	  RAZ	   0	       0	 Reserved for Key Zeroization interrupt		    |	
 <50>	 IPD_DRP  R/W1	   0	       0	 Write 1 to set IPD QOS packet drop interrupt 	    |	
                                                 enable                                             |
 <49>    NS       RAZ	   0           0         Reserved for GMX_DRP				    |   
 <48>    GMX_DRP  R/W1	   0	       0	 Write 1 to set GMX packet drop interrupt enable    |	
 <47>	 TRACE	  R/W1	   0	       0	 Write 1 to set Trace buffer interrupt enable 	    |	
 <46>	 RML	  R/W1	   0	       0	 Write 1 to set RML Interrupt enable		    |	
 <45>	 TWSI	  R/W1	   0	       0	 Write 1 to set TWSI Interrupt enable		    |	
 <44>    NS       RAZ	   NS	       NS        Reserved				            |   
 <43:40> PCI_MSI  R/W1	   0	       0	 Write 1s to set PCIe/sRIO MSI enables		    |	
 <39:36> PCI_INT  R/W1	   0	       0	 Write 1s to set PCIe INTA/B/C/D enables	    |	
 <35:34> UART     R/W1	   0	       0	 Write 1s to set UART interrupt enables		    |	
 <33:32> MBOX     R/W1	   0	       0	 Write 1s to set mailbox interrupt enables 	    |	
 <31:16> GPIO     R/W1	   0	       0	 Write 1s to set GPIO interrupt enables		    |	
 <15:0>  WORKQ    R/W1	   0	       0	 Write 1s to set work queue interrupt enables	    |	

Notes:
Write-1-to-set version of the CIU_INTx_EN4_0 register
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_INT(0..5)_EN4_1_W1S Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    RST      R/W1     0x0         0         Write 1 to set MIO RST interrupt enable            |   
 <62:60> NS       R/W1     0x0         0         Reserved 		    		    	    |   
 <59:57> NS       R/W1     0x0         0         Reserved for DFM expansion    		    	    |   
 <56>    DFM      R/W1     0x0         0         Write 1 to set DFM interrupt enable                |   
 <55:53> NS       R/W1     0x0         0         Reserved for LMC expansion    		    	    |   
 <52>    LMC0     R/W1     0x0         0         Write 1 to set LMC0 interrupt enable               |   
 <51>    SRIO1    R/W1     0x0         0         Write 1 to set SRIO1 interrupt enable              |   
 <50>    SRIO0    R/W1     0x0         0         Write 1 to set SRIO0 interrupt enable              |   
 <49>    PEM1     R/W1     0x0         0         Write 1 to set PEM1 interrupt enable               |   
 <48>    PEM0     R/W1     0x0         0         Write 1 to set PEM0 interrupt enable               |   
 <47>    PTP      R/W1     0x0         0         Write 1 to set PTP interrupt enable                |   
 <46>    AGL      R/W1     0x0         0         Write 1 to set AGL interrupt enable                |   
 <45:44> NS       R/W1     0x0         0         Reserved for future Interlaken                     |   
 <43:40> NS       R/W1     0x0         0         Reserved                                           |   
 <39:37> NS       R/W1     0x0         0         Reserved for GMX expansion			    |   
 <36>    AGX0     R/W1     0x0         0         Write 1 to set GMX0 interrupt enable               |   
 <35>    DPI      R/W1     0x0         0         Write 1 to set DPI interrupt enable                |   
 <34>    SLI      R/W1     0x0         0         Write 1 to set SLI interrupt enable                |   
 <33>    USB      R/W1     0x0         0         Write 1 to set USB UCTL0 interrupt enable          |   
 <32>    DFA      R/W1     0x0         0         Write 1 to set DFA interrupt enable                |   
 <31>    KEY      R/W1     0x0         0         Write 1 to set KEY interrupt enable                |   
 <30>    RAD      R/W1     0x0         0         Write 1 to set RAD interrupt enable                |   
 <29>    TIM      R/W1     0x0         0         Write 1 to set TIM interrupt enable                |   
 <28>    ZIP      R/W1     0x0         0         Write 1 to set ZIP interrupt enable                |   
 <27>    PKO      R/W1     0x0         0         Write 1 to set PKO interrupt enable                |   
 <26>    PIP      R/W1     0x0         0         Write 1 to set PIP interrupt enable                |   
 <25>    IPD      R/W1     0x0         0         Write 1 to set IPD interrupt enable                |   
 <24>    L2C      R/W1     0x0         0         Write 1 to set L2C interrupt enable                |   
 <23>    POW      R/W1     0x0         0         Write 1 to set POW err interrupt enable            |   
 <22>    FPA      R/W1     0x0         0         Write 1 to set FPA interrupt enable                |   
 <21>    IOB      R/W1     0x0         0         Write 1 to set IOB interrupt enable                |   
 <20>    MIO      R/W1     0x0         0         Write 1 to set MIO boot interrupt enable           |   
 <19>	 NAND	  R/W1     0           0         Write 1 to set NAND Flash Controller interrupt	    |   
                                                 enable                                             |
 <18>	 MII1	  R/W1     0           0         Write 1 to set RGMII/MII/MIX Interface 1 Interrupt |   
                                                 enable                                             |
 <17>    NS	  R/W1     0           0         Reserved for additional USB Interrupts		    |   
 <16>    NS       RAZ	   NS	       NS	 Reserved for Third UART interrupt		    |	
 <15:6>  NS       RAZ      NS          NS        Reserved				            |   
 <5:0>	 WDOG     R/W1	   0	       0	 Write 1s to set Watchdog summary interrupt enable  |	

Notes:
Write-1-to-set version of the CIU_INTx_EN4_1 register
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_INT(0..11,32..33)_EN0_W1C Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    BOOTDMA  R/W1C    0           0         Write 1 to clear Boot bus DMA engines Interrupt    |   
                                                 enable                                             |
 <62>    MII	  R/W1C    0           0         Write 1 to clr RGMII/MII/MIX Interface 0 Interrupt |   
                                                 enable                                             |
 <61>    IPDPPTHR R/W1C    0           0         Write 1 to clear IPD per-port counter threshold    |   
                                                 interrupt enable                                   |
 <60>    POWIQ	  R/W1C    0           0         Write 1 to clear POW IQ interrupt	            |   
 <59>    TWSI2	  R/W1C    0           0         Write 1 to clear 2nd TWSI Interrupt	            |   
 <58:57> NS       RAZ      0           0         Reserved for PCM and MPI		            |   
 <56>    USB	  R/W1C    0           0         Write 1 to clear USB EHCI or OHCI Interrupt	    |   
 <55:52> TIMER	  R/W1C	   0	       0	 Write 1 to clear General timer interrupts	    |	
 <51>	 NS 	  RAZ	   0	       0	 Reserved for Key Zeroization interrupt		    |	
 <50>	 IPD_DRP  R/W1C	   0	       0	 Write 1 to clear IPD QOS packet drop interrupt     |	
                                                 enable                                             |
 <49>    NS       RAZ	   0           0         Reserved for GMX_DRP				    |   
 <48>    GMX_DRP  R/W1C	   0	       0	 Write 1 to clear GMX packet drop interrupt enable  |	
 <47>	 TRACE	  R/W1C	   0	       0	 Write 1 to clear Trace buffer interrupt enable     |	
 <46>	 RML	  R/W1C	   0	       0	 Write 1 to clear RML Interrupt enable		    |	
 <45>	 TWSI	  R/W1C	   0	       0	 Write 1 to clear TWSI Interrupt enable		    |	
 <44>    NS       RAZ	   NS	       NS        Reserved				            |   
 <43:40> PCI_MSI  R/W1C	   0	       0	 Write 1s to clear PCIe/sRIO MSI enables	    |	
 <39:36> PCI_INT  R/W1C	   0	       0	 Write 1s to clear PCIe INTA/B/C/D enables	    |	
 <35:34> UART     R/W1C	   0	       0	 Write 1s to clear UART interrupt enables	    |	
 <33:32> MBOX     R/W1C	   0	       0	 Write 1s to clear mailbox/PCIe/sRIO interrupt 	    |	
                                                 enables                                            |
 <31:16> GPIO     R/W1C	   0	       0	 Write 1s to clear GPIO interrupt enables	    |	
 <15:0>  WORKQ    R/W1C	   0	       0	 Write 1s to clear work queue interrupt enables	    |	

Notes:
Write-1-to-clear version of the CIU_INTx_EN0 register
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_INT(0..11,32..33)_EN1_W1C Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    RST      R/W1C    0x0         0         Write 1 to clear MIO RST interrupt enable          |   
 <62:60> NS       R/W1C    0x0         0         Reserved 		    		    	    |   
 <59:57> NS       R/W1C    0x0         0         Reserved for DFM expansion    		    	    |   
 <56>    DFM      R/W1C    0x0         0         Write 1 to clear DFM interrupt enable              |   
 <55:53> NS       R/W1C    0x0         0         Reserved for LMC expansion    		    	    |   
 <52>    LMC0     R/W1C    0x0         0         Write 1 to clear LMC0 interrupt enable             |   
 <51>    SRIO1    R/W1C    0x0         0         Write 1 to clear SRIO1 interrupt enable            |   
 <50>    SRIO0    R/W1C    0x0         0         Write 1 to clear SRIO0 interrupt enable            |   
 <49>    PEM1     R/W1C    0x0         0         Write 1 to clear PEM1 interrupt enable             |   
 <48>    PEM0     R/W1C    0x0         0         Write 1 to clear PEM0 interrupt enable             |   
 <47>    PTP      R/W1C    0x0         0         Write 1 to clear PTP interrupt enable              |   
 <46>    AGL      R/W1C    0x0         0         Write 1 to clear AGL interrupt enable              |   
 <45:44> NS       R/W1C    0x0         0         Reserved for future Interlaken                     |   
 <43:40> NS       R/W1C    0x0         0         Reserved                                           |   
 <39:37> NS       R/W1C    0x0         0         Reserved for GMX expansion			    |   
 <36>    AGX0     R/W1C    0x0         0         Write 1 to clear GMX0 interrupt enable             |   
 <35>    DPI      R/W1C    0x0         0         Write 1 to clear DPI interrupt enable              |   
 <34>    SLI      R/W1C    0x0         0         Write 1 to clear SLI interrupt enable              |   
 <33>    USB      R/W1C    0x0         0         Write 1 to clear USB UCTL0 interrupt enable        |   
 <32>    DFA      R/W1C    0x0         0         Write 1 to clear DFA interrupt enable              |   
 <31>    KEY      R/W1C    0x0         0         Write 1 to clear KEY interrupt enable              |   
 <30>    RAD      R/W1C    0x0         0         Write 1 to clear RAD interrupt enable              |   
 <29>    TIM      R/W1C    0x0         0         Write 1 to clear TIM interrupt enable              |   
 <28>    ZIP      R/W1C    0x0         0         Write 1 to clear ZIP interrupt enable              |   
 <27>    PKO      R/W1C    0x0         0         Write 1 to clear PKO interrupt enable              |   
 <26>    PIP      R/W1C    0x0         0         Write 1 to clear PIP interrupt enable              |   
 <25>    IPD      R/W1C    0x0         0         Write 1 to clear IPD interrupt enable              |   
 <24>    L2C      R/W1C    0x0         0         Write 1 to clear L2C interrupt enable              |   
 <23>    POW      R/W1C    0x0         0         Write 1 to clear POW err interrupt enable          |   
 <22>    FPA      R/W1C    0x0         0         Write 1 to clear FPA interrupt enable              |   
 <21>    IOB      R/W1C    0x0         0         Write 1 to clear IOB interrupt enable              |   
 <20>    MIO      R/W1C    0x0         0         Write 1 to clear MIO boot interrupt enable         |   
 <19>	 NAND	  R/W1C    0           0         Write 1 to clear NAND Flash Controller interrupt   |   
                                                 enable                                             |
 <18>	 MII1	  R/W1C    0           0         Write 1 to clear RGMII/MII/MIX Interface 1         |   
                                                 Interrupt enable                                   |
 <17>    NS	  R/W1C    0           0         Reserved for additional USB Interrupts		    |   
 <16>    NS       RAZ	   NS	       NS	 Reserved for Third UART interrupt		    |	
 <15:6>  NS       RAZ      NS          NS        Reserved				            |   
 <5:0>	 WDOG     R/W1C	   0	       0	 Write 1s to clear Watchdog summary interrupt enable|	

Notes:
Write-1-to-clear version of the CIU_INTx_EN1 register
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_INT(0..5)_EN4_0_W1C Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    BOOTDMA  R/W1C    0           0         Write 1 to clear Boot bus DMA engines Interrupt    |   
                                                 enable                                             |
 <62>    MII	  R/W1C    0           0         Write 1 to clr RGMII/MII/MIX Interface 0 Interrupt |   
                                                 enable                                             |
 <61>    IPDPPTHR R/W1C    0           0         Write 1 to clear IPD per-port counter threshold    |   
                                                 interrupt enable                                   |
 <60>    POWIQ	  R/W1C    0           0         Write 1 to clear POW IQ interrupt	            |   
 <59>    TWSI2	  R/W1C    0           0         Write 1 to clear 2nd TWSI Interrupt	            |   
 <58:57> NS       RAZ      0           0         Reserved for PCM and MPI		            |   
 <56>    USB	  R/W1C    0           0         Write 1 to clear USB EHCI or OHCI Interrupt	    |   
 <55:52> TIMER	  R/W1C	   0	       0	 Write 1 to clear General timer interrupts	    |	
 <51>	 NS 	  RAZ	   0	       0	 Reserved for Key Zeroization interrupt		    |	
 <50>	 IPD_DRP  R/W1C	   0	       0	 Write 1 to clear IPD QOS packet drop interrupt     |	
                                                 enable                                             |
 <49>    NS       RAZ	   0           0         Reserved for GMX_DRP				    |   
 <48>    GMX_DRP  R/W1C	   0	       0	 Write 1 to clear GMX packet drop interrupt enable  |	
 <47>	 TRACE	  R/W1C	   0	       0	 Write 1 to clear Trace buffer interrupt enable     |	
 <46>	 RML	  R/W1C	   0	       0	 Write 1 to clear RML Interrupt enable		    |	
 <45>	 TWSI	  R/W1C	   0	       0	 Write 1 to clear TWSI Interrupt enable		    |	
 <44>    NS       RAZ	   NS	       NS        Reserved				            |   
 <43:40> PCI_MSI  R/W1C	   0	       0	 Write 1s to clear PCIe/sRIO MSI enables	    |	
 <39:36> PCI_INT  R/W1C	   0	       0	 Write 1s to clear PCIe INTA/B/C/D enables	    |	
 <35:34> UART     R/W1C	   0	       0	 Write 1s to clear UART interrupt enables	    |	
 <33:32> MBOX     R/W1C	   0	       0	 Write 1s to clear mailbox interrupt enables	    |	
 <31:16> GPIO     R/W1C	   0	       0	 Write 1s to clear GPIO interrupt enables	    |	
 <15:0>  WORKQ    R/W1C	   0	       0	 Write 1s to clear work queue interrupt enables	    |	

Notes:
Write-1-to-clear version of the CIU_INTx_EN4_0 register
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_INT(0..5)_EN4_1_W1C Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    RST      R/W1C    0x0         0         Write 1 to clear MIO RST interrupt enable          |   
 <62:60> NS       R/W1C    0x0         0         Reserved 		    		    	    |   
 <59:57> NS       R/W1C    0x0         0         Reserved for DFM expansion    		    	    |   
 <56>    DFM      R/W1C    0x0         0         Write 1 to clear DFM interrupt enable              |   
 <55:53> NS       R/W1C    0x0         0         Reserved for LMC expansion    		    	    |   
 <52>    LMC0     R/W1C    0x0         0         Write 1 to clear LMC0 interrupt enable             |   
 <51>    SRIO1    R/W1C    0x0         0         Write 1 to clear SRIO1 interrupt enable            |   
 <50>    SRIO0    R/W1C    0x0         0         Write 1 to clear SRIO0 interrupt enable            |   
 <49>    PEM1     R/W1C    0x0         0         Write 1 to clear PEM1 interrupt enable             |   
 <48>    PEM0     R/W1C    0x0         0         Write 1 to clear PEM0 interrupt enable             |   
 <47>    PTP      R/W1C    0x0         0         Write 1 to clear PTP interrupt enable              |   
 <46>    AGL      R/W1C    0x0         0         Write 1 to clear AGL interrupt enable              |   
 <45:44> NS       R/W1C    0x0         0         Reserved for future Interlaken                     |   
 <43:40> NS       R/W1C    0x0         0         Reserved                                           |   
 <39:37> NS       R/W1C    0x0         0         Reserved for GMX expansion			    |   
 <36>    AGX0     R/W1C    0x0         0         Write 1 to clear GMX0 interrupt enable             |   
 <35>    DPI      R/W1C    0x0         0         Write 1 to clear DPI interrupt enable              |   
 <34>    SLI      R/W1C    0x0         0         Write 1 to clear SLI interrupt enable              |   
 <33>    USB      R/W1C    0x0         0         Write 1 to clear USB UCTL0 interrupt enable        |   
 <32>    DFA      R/W1C    0x0         0         Write 1 to clear DFA interrupt enable              |   
 <31>    KEY      R/W1C    0x0         0         Write 1 to clear KEY interrupt enable              |   
 <30>    RAD      R/W1C    0x0         0         Write 1 to clear RAD interrupt enable              |   
 <29>    TIM      R/W1C    0x0         0         Write 1 to clear TIM interrupt enable              |   
 <28>    ZIP      R/W1C    0x0         0         Write 1 to clear ZIP interrupt enable              |   
 <27>    PKO      R/W1C    0x0         0         Write 1 to clear PKO interrupt enable              |   
 <26>    PIP      R/W1C    0x0         0         Write 1 to clear PIP interrupt enable              |   
 <25>    IPD      R/W1C    0x0         0         Write 1 to clear IPD interrupt enable              |   
 <24>    L2C      R/W1C    0x0         0         Write 1 to clear L2C interrupt enable              |   
 <23>    POW      R/W1C    0x0         0         Write 1 to clear POW err interrupt enable          |   
 <22>    FPA      R/W1C    0x0         0         Write 1 to clear FPA interrupt enable              |   
 <21>    IOB      R/W1C    0x0         0         Write 1 to clear IOB interrupt enable              |   
 <20>    MIO      R/W1C    0x0         0         Write 1 to clear MIO boot interrupt enable         |   
 <19>	 NAND	  R/W1C    0           0         Write 1 to clear NAND Flash Controller interrupt   |   
                                                 enable                                             |
 <18>	 MII1	  R/W1C    0           0         Write 1 to clear RGMII/MII/MIX Interface 1         |   
                                                 Interrupt enable                                   |
 <17>    NS	  R/W1C    0           0         Reserved for additional USB Interrupts		    |   
 <16>    NS       RAZ	   NS	       NS	 Reserved for Third UART interrupt		    |	
 <15:6>  NS       RAZ      NS          NS        Reserved				            |   
 <5:0>	 WDOG     R/W1C	   0	       0	 Write 1s to clear Watchdog summary interrupt enable|	

Notes:
Write-1-to-clear version of the CIU_INTx_EN4_1 register
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_TIM(0..3) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:37> NS       RAZ      NS          NS        Reserved				            |   
 <36>	 ONE_SHOT R/W	   0	       0	 One-shot mode					    |	
 <35:0>	 LEN      R/W	   0	       0	 Timeout length in core clock cycles		    |	
						  Periodic interrupts will occur every LEN+1 core   |
						  clock cycles when ONE_SHOT==0			    |
						  Timer disabled when LEN==0			    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_WDOG(0..5) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:46> NS       RAZ      NS          NS        Reserved				            |   
 <45>	 GSTOPEN  R/W	   0	       0	 GSTOPEN					    |	
 <44>	 DSTOP    R/W	   0	       0	 DSTOP						    |	
 <43:20> CNT      RO	   0	       0	 Number of 256-cycle intervals until next watchdog  |	
						  expiration.  Cleared on write to associated	    |
						  CIU_PP_POKE register.				    |						  
 <19:4>	 LEN      R/W	   0	       0	 Watchdog time expiration length		    |	
						  The 16 bits of LEN represent the most significant |
						  bits of a 24 bit decrementer that decrements	    |
						  every 256 cycles.				    |
						  LEN must be set > 0				    |
 <3:2>	 STATE    RO	   0	       0	 Watchdog state					    |	
						  number of watchdog time expirations since last    |
						  PP poke.  Cleared on write to associated	    |
						  CIU_PP_POKE register.				    |
 <1:0>	 MODE     R/W	   0	       0	 Watchdog mode					    |	
						  0 = Off					    |
						  1 = Interrupt Only				    |
						  2 = Interrupt + NMI				    |
						  3 = Interrupt + NMI + Soft-Reset		    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_PP_POKE(0..5) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  POKE     RAZ      NS          NS        Reserved				            |   

Notes:
Any write to a CIU_PP_POKE register clears any pending interrupt generated
by the associated watchdog, resets the CIU_WDOG[STATE] field, and set
CIU_WDOG[CNT] to be (CIU_WDOG[LEN] << 8).

Reads to this register will return the associated CIU_WDOG register.
----------------------------------------------------------------------------------------------------
===
 


     ==============================================================
     CIU_MBOX_SET(0..5) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |   
 <31:0>	 SET      R/W1	   0	       0	 On writes, set corresponding bit in MBOX register  |	
						  on reads, return the MBOX register		    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_MBOX_CLR(0..5) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |   
 <31:0>	 CLR      R/W1C	   0	       0	 On writes, clr corresponding bit in MBOX register  |	
						  on reads, return the MBOX register		    |
----------------------------------------------------------------------------------------------------
===


 * Contains the reset control for each PP.  Value of '1' will hold a PP in reset, '0' will release.
 * Resets to 0xffff when PCI boot is enabled, 0xfffe otherwise. 
 *

     ==============================================================
     CIU_PP_RST Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6>  NS       RAZ      NS          NS        Reserved				            |   
 <5:1>	 RST	  R/W	   0x1f        0	 PP Rst for PP's 5-1				    |	
 <0>	 RST0     R/W	   NS	       NS	 PP Rst for PP0					    |	
						  depends on standalone mode			    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_PP_DBG Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6>  NS       RAZ      NS          NS        Reserved				            |   
 <5:0>	 PPDBG	  RO	   0	       0	 Debug[DM] value for each PP			    |	
						  whether the PP's are in debug mode or not	    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_GSTOP Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved				            |   
 <0>	 GSTOP	  R/W	   0	       0	 GSTOP bit					    |	
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_NMI Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6>  NS       RAZ      NS          NS        Reserved				            |   
 <5:0>	 NMI	  WO	   0	       0	 Send NMI pulse to PP vector			    |	
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_DINT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6>  NS       RAZ      NS          NS        Reserved				            |   
 <5:0>	 DINT	  WO	   0	       0	 Send DINT pulse to PP vector			    |	
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_FUSE Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6>  NS       RAZ      NS          NS        Reserved				            |   
 <5:0>	 FUSE	  RO	   NS	       NS	 Physical PP is present				    |	
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_BIST Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:5> NS       RAZ      NS          NS        Reserved				            |   
 <4:0>  BIST     RO       0x0         0         BIST Results.                                       |   
                                                  HW sets a bit in BIST for for memory that fails   |
						  BIST.						    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_SOFT_BIST Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1> NS        RAZ      NS          NS        Reserved				            |   
 <0>    SOFT_BIST RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_SOFT_RST Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1> NS        RAZ      NS          NS        Reserved				            |   
 <0>    SOFT_RST  WO       0x0         0         Resets Octeon                                      |   
						  When soft reseting Octeon from a remote PCIe/sRIO |
						  host, always read CIU_SOFT_RST (and wait for      |
						  result) before writing SOFT_RST to '1'.		    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_SOFT_PRST Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1> NS        RAZ      NS          NS        Reserved				            |   
 <0>    SOFT_PRST R/W      NS          0         Resets the PCIe/sRIO logic in all modes, not just  |   
						 RC mode. The reset value is based on the	    |
						 corresponding MIO_RST_CTL[PRTMODE] CSR field:	    |
						  If PRTMODE == 0, then SOFT_PRST resets to 0	    |
						  If PRTMODE != 0, then SOFT_PRST resets to 1	    |
						 When OCTEON is configured to drive the PERST*_L    |
                                                 chip pin (ie. MIO_RST_CTL0[RST_DRV] is set), this  |
                                                 controls the PERST*_L chip pin.                    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_PCI_INTA Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2> NS        RAZ      NS          NS        Reserved				            |   
 <1:0>  INT       R/W      0x0         0         PCIe/sRIO interrupt				    |   
						  These bits are observed in CIU_INTX_SUM0<33:32>   |
						  where X=32-33                                     |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_SOFT_PRST1 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1> NS        RAZ      NS          NS        Reserved				            |   
 <0>    SOFT_PRST R/W      NS          0         Resets the PCIe/sRIO logic in all modes, not just  |   
						 RC mode. The reset value is based on the	    |
						 corresponding MIO_RST_CTL[PRTMODE] CSR field:	    |
						  If PRTMODE == 0, then SOFT_PRST resets to 0	    |
						  If PRTMODE != 0, then SOFT_PRST resets to 1	    |
						 When OCTEON is configured to drive the PERST*_L    |
                                                 chip pin (ie. MIO_RST_CTL1[RST_DRV] is set), this  |
                                                 controls the PERST*_L chip pin.                    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_QLM_JTGC Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:11> NS       RAZ      NS          NS        Reserved				            |   
 <10:8>  CLK_DIV  R/W      0x0         NS        Clock divider for QLM JTAG operations.  eclk is    |   
                                                 divided by 2^(CLK_DIV + 2)                         |
 <7:6>   NS       RAZ      NS          NS        Reserved				            |   
 <5:4>   MUX_SEL  R/W      0x0         NS        Selects which QLM JTAG shift out is shifted into   |   
                                                 the QLM JTAG shift register: CIU_QLM_JTGD[SHFT_REG]|
 <3>     NS       RAZ      NS          NS        Reserved				            |   
 <2:0>   BYPASS   R/W      0x0         NS        Selects which QLM JTAG shift chains are bypassed   |   
                                                 by the QLM JTAG data register (CIU_QLM_JTGD) (one  |
                                                 bit per QLM)                                       |
----------------------------------------------------------------------------------------------------
===
 

     ==============================================================
     CIU_QLM_JTGD Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    CAPTURE  R/W      0x0         NS        Perform JTAG capture operation (self-clearing when |   
                                                 op completes)                                      |
 <62>    SHIFT    R/W      0x0         NS        Perform JTAG shift operation (self-clearing when   |   
                                                 op completes)                                      |
 <61>    UPDATE   R/W      0x0         NS        Perform JTAG update operation (self-clearing when  |   
                                                 op completes)                                      |
 <60:43> NS       RAZ      NS          NS        Reserved				            |   
 <42:40> SELECT   R/W      0x0         NS        Selects which QLM JTAG shift chains the JTAG       |   
                                                 operations are performed on                        |
 <39:37> NS       RAZ      NS          NS        Reserved				            |   
 <36:32> SHFT_CNT R/W      0x0         NS        QLM JTAG shift count (encoded in -1 notation)      |   
 <31:0>  SHFT_REG R/W      0x0         NS        QLM JTAG shift register                            |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_QLM0 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |   
 <31>    TXBYPASS R/W      0x0         NS        QLM0 transmitter bypass enable                     |   
 <30:20> NS       RAZ      NS          NS        Reserved				            |   
 <19:16> TXDEEMPH R/W      0x0         NS        QLM0 transmitter bypass de-emphasis value          |   
 <15:13> NS       RAZ      NS          NS        Reserved				            |   
 <12:8>  TXMARGIN R/W      0x0         NS        QLM0 transmitter bypass margin (amplitude) value   |   
 <7:4>   NS       RAZ      NS          NS        Reserved				            |   
 <3:0>   LANE_EN  R/W      0xf         NS        QLM0 lane enable mask                              |   

Note: This register is only reset by cold reset.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_QLM1 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |   
 <31>    TXBYPASS R/W      0x0         NS        QLM1 transmitter bypass enable                     |   
 <30:20> NS       RAZ      NS          NS        Reserved				            |   
 <19:16> TXDEEMPH R/W      0x0         NS        QLM1 transmitter bypass de-emphasis value          |   
 <15:13> NS       RAZ      NS          NS        Reserved				            |   
 <12:8>  TXMARGIN R/W      0x0         NS        QLM1 transmitter bypass margin (amplitude) value   |   
 <7:4>   NS       RAZ      NS          NS        Reserved				            |   
 <3:0>   LANE_EN  R/W      0xf         NS        QLM1 lane enable mask                              |   

Note: This register is only reset by cold reset.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     CIU_QLM2 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |   
 <31>    TXBYPASS R/W      0x0         NS        QLM2 transmitter bypass enable                     |   
 <30:20> NS       RAZ      NS          NS        Reserved				            |   
 <19:16> TXDEEMPH R/W      0x0         NS        QLM2 transmitter bypass de-emphasis value          |   
 <15:13> NS       RAZ      NS          NS        Reserved				            |   
 <12:8>  TXMARGIN R/W      0x0         NS        QLM2 transmitter bypass margin (amplitude) value   |   
 <7:4>   NS       RAZ      NS          NS        Reserved				            |   
 <3:0>   LANE_EN  R/W      0xf         NS        QLM2 lane enable mask                              |   

Note: This register is only reset by cold reset.
----------------------------------------------------------------------------------------------------
===

 *
 *                  CIU_BLOCK_INT = CIU Blocks Interrupt
 *
 * The interrupt lines from the various chip blocks.
 *
 *

     ==============================================================
     CIU_BLOCK_INT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     MIO      RO       0x0         0         MIO boot interrupt                                 |   
                                                 See MIO_BOOT_ERR                                   |
 <1>     GMX0     RO       0x0         0         GMX0 interrupt                                     |   
                                                 See GMX0_RX*_INT_REG, GMX0_TX_INT_REG              |
 <2>     NS       RAZ      NS          NS        Reserved for GMX1				    |   
 <3>     SLI      RO       0x0         0         SLI interrupt                                      |   
                                                 See SLI_INT_SUM (enabled by SLI_INT_ENB_CIU)       |
 <4>     KEY      RO       0x0         0         KEY interrupt                                      |   
                                                 See KEY_INT_SUM                                    |
 <5>     FPA      RO       0x0         0         FPA interrupt                                      |   
                                                 See FPA_INT_SUM                                    |
 <6>     DFA      RO       0x0         0         DFA interrupt                                      |   
                                                 See DFA_ERROR                                      |
 <7>     ZIP      RO       0x0         0         ZIP interrupt                                      |   
                                                 See ZIP_ERROR                                      |
 <8>     NS       RAZ      NS          NS        Reserved				            |   
 <9>     IPD      RO       0x0         0         IPD interrupt                                      |   
                                                 See IPD_INT_SUM                                    |
 <10>    PKO      RO       0x0         0         PKO interrupt                                      |   
                                                 See PKO_REG_ERROR                                  |
 <11>    TIM      RO       0x0         0         TIM interrupt                                      |   
                                                 See TIM_REG_ERROR                                  |
 <12>    POW      RO       0x0         0         POW err interrupt                                  |   
                                                 See POW_ECC_ERR                                    |
 <13>    USB      RO       0x0         0         USB UCTL0 interrupt                                |   
                                                 See UCTL0_INT_REG                                  |
 <14>    RAD      RO       0x0         0         RAD interrupt                                      |   
                                                 See RAD_REG_ERROR                                  |
 <15>    NS       RAZ      NS          NS        Reserved for additional USB interrupts	            |   
 <16>    L2C      RO       0x0         0         L2C interrupt                                      |   
                                                 See L2C_INT_REG                                    |
 <17>    LMC0     RO       0x0         0         LMC0 interrupt                                     |   
                                                 See LMC0_INT                                       |
 <19:18> NS       RAZ      NS          NS        Reserved for SPX* interrupts			    |   
 <20>    PIP      RO       0x0         0         PIP interrupt                                      |   
                                                 See PIP_INT_REG                                    |
 <21>    NS       RAZ      NS          NS        Reserved				            |   
 <22>    ASXPCS0  RO       0x0         0         See PCS0_INT*_REG, PCSX0_INT_REG                   |   
 <23>    NS       RAZ      NS          NS        Reserved for PCS1                                  |   
 <24>    NS       RAZ      NS          NS        Reserved   				            |   
 <25>    PEM0     RO       0x0         0         PEM0 interrupt                                     |   
                                                 See PEM0_INT_SUM (enabled by PEM0_INT_ENB)         |
 <26>    PEM1     RO       0x0         0         PEM1 interrupt                                     |   
                                                 See PEM1_INT_SUM (enabled by PEM1_INT_ENB)         |
 <27>    NS       RAZ      NS          NS        Reserved				            |   
 <28>    AGL      RO       0x0         0         AGL interrupt                                      |   
                                                 See AGL_GMX_RX*_INT_REG, AGL_GMX_TX_INT_REG        |
 <29>    NS       RAZ      NS          NS        Reserved for LMC1			            |   
 <30>    IOB      RO       0x0         0         IOB interrupt                                      |   
                                                 See IOB_INT_SUM                                    |
 <31>    NS       RAZ      NS          NS        Reserved				            |   
 <32>    SRIO0    RO       0x0         0         SRIO0 interrupt                                    |   
                                                 See SRIO0_INT_REG                                  |
 <33>    SRIO1    RO       0x0         0         SRIO1 interrupt                                    |   
                                                 See SRIO1_INT_REG                                  |
 <39:34> NS       RAZ      NS          NS        Reserved				            |   
 <40>    DFM      RO       0x0         0         DFM interrupt                                      |   
                                                 See DFM_FNT_STAT                                   |
 <41>    DPI      RO       0x0         0         DPI interrupt                                      |   
                                                 See DPI_INT_REG                                    |
 <42>    PTP      RO       0x0         0         PTP interrupt                                      |   
                                                 See CIU_INT_SUM1[PTP]                              |
 <63:43> NS       RAZ      NS          NS        Reserved				            |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GPIO_BIT_CFG(0..15) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:17> NS       RAZ      NS          NS        Reserved				            |   
 <16:15> SYNCE_SEL R/W     0x0         0         Selects the QLM clock output			    |	
						  x0=Normal GPIO output				    |
						  01=GPIO QLM clock selected by GPIO_CLK_QLM0	    |
						  11=GPIO QLM clock selected by GPIO_CLK_QLM1	    |
 <14>    CLK_GEN  R/W      0x0         0         When TX_OE is set, GPIO pin becomes a clock	    |	
 <13:12> CLK_SEL  R/W      0x0         0         Selects which of the 4 GPIO clock generators	    |	
 <11:8>  FIL_SEL  R/W      0x0         0         Global counter bit-select (controls sample rate)   |   
 <7:4>   FIL_CNT  R/W      0x0         0         Number of consecutive samples to change state	    |   
 <3>	 INT_TYPE R/W      0x0         0         Type of interrupt				    |   
						  0 = level (default)				    |	
						  1 = rising edge				    |
 <2>	 INT_EN   R/W      0x0         0         Bit mask to indicate which bits to raise interrupt |   
 <1>	 RX_XOR	  R/W      0x0         0         Invert the GPIO pin				    |   
 <0>	 TX_OE	  R/W      0x0         0         Drive the GPIO pin as an output pin		    |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GPIO_RX_DAT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |   
 <15:0>  DAT      RO       0x0         0         GPIO Read Data                                     |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GPIO_TX_SET Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |   
 <15:0>  SET      R/W1     0x0         0         Bit mask to indicate which GPIO_TX_DAT bits to set |   
						  to '1'. When read, SET returns the GPIO_TX_DAT    |
						  storage.					    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GPIO_TX_CLR Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |   
 <15:0>  CLR      R/W1C    0x0         0         Bit mask to indicate which GPIO_TX_DAT bits to set |   
						  to '0'. When read, CLR returns the GPIO_TX_DAT    |
						  storage.					    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GPIO_INT_CLR Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |   
 <15:0>  TYPE     R/W1C    0x0         0         Clear the interrupt rising edge detector	    |   
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GPIO_CLK_GEN(0..3) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |   
 <31:0>  N        R/W      0x0         NS        Determines the frequency of the GPIO clk generator |   
		   				  NOTE: Fgpio_clk = Feclk * N / 2^32                |
                                                        N = (Fgpio_clk / Feclk) * 2^32              |
                                                  NOTE: writing N == 0 stops the clock generator   
						  N  should be <= 2^31-1.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     GPIO_CLK_QLM(0..1) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:3>  NS       RAZ      NS          NS        Reserved				            |   
 <2>     DIV      R/W      0x0         0x0       Internal clock divider				    |	
						  0=DIV2					    |
						  1=DIV4					    |
 <1:0>   LANE_SEL R/W      0x0         0x0       Selects which RX lane clock from QLM2 to use as    |	
						  the GPIO internal QLMx clock.  The GPIO block can |
						  support upto two unique clocks to send out any    |
						  GPIO pin as configured by $GPIO_BIT_CFG[SYNCE_SEL]|
						  The clock can either be a divided by 2 or divide  |
						  by 4 of the selected RX lane clock.		    |
Notes:

Clock speed output for different modes ...

                       Speed With      Speed with
SERDES speed (Gbaud)   DIV=0 (MHz)     DIV=1 (MHz)
**********************************************************
     1.25                 62.5            31.25
     2.5                 125              62.5
     3.125               156.25           78.125
     5.0                 250             125
     6.25                312.5           156.25

----------------------------------------------------------------------------------------------------
===


 *
 * SMI_CMD = Force a Read/Write command to the PHY
 *

     ==============================================================
     SMI(0..1)_CMD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:18> NS       RAZ      NS          NS        Reserved				            |   
 <17:16> PHY_OP   R/W      0           NS        PHY Opcode depending on SMI_CLK[MODE]              |   
						  SMI_CLK[MODE] == 0 (<=1Gbs / Clause 22)	    |
						   x0=write					    |
						   x1=read					    |
						  SMI_CLK[MODE] == 1 (>1Gbs / Clause 45)	    |
						   00=address					    |
						   01=write					    |
						   11=read					    |
						   10=post-read-increment-address		    |
 <15:13> NS       RAZ      NS          NS        Reserved				            |   
 <12:8>  PHY_ADR  R/W      0           NS        PHY Address                                        |   
 <7:5>   NS       RAZ      NS          NS        Reserved				            |   
 <4:0>   REG_ADR  R/W      0           NS        PHY Register Offset                                |   

Notes:
Writes to this register will create SMI xactions.  Software will poll on (depending on the xaction type).
----------------------------------------------------------------------------------------------------
===


 *
 * SMI_WR_DAT = SMI Write Data
 *

     ==============================================================
     SMI(0..1)_WR_DAT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:18> NS       RAZ      NS          NS        Reserved				            |   
 <17>    PENDING  RO       0           NS        Write Xaction Pending			            |   
 <16>    VAL      RO       0           NS        Write Data Valid			            |   
 <15:0>  DAT      R/W      0           NS        Write Data                                         |   

Notes:
VAL will assert when the write xaction completes.  A read to this register
will clear VAL.  PENDING indicates that an SMI WR transaction is in flight.
----------------------------------------------------------------------------------------------------
===


 *
 * SMI_RD_DAT = SMI Read Data
 *

     ==============================================================
     SMI(0..1)_RD_DAT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:18> NS       RAZ      NS          NS        Reserved				            |   
 <17>    PENDING  RO       0           NS        Read Xaction Pending			            |   
 <16>    VAL      RO       0           NS        Read Data Valid			            |   
 <15:0>  DAT      RO       0           NS        Read Data                                          |   

Notes:
VAL will assert when the read xaction completes.  A read to this register
will clear VAL.  PENDING indicates that an SMI RD transaction is in flight.
----------------------------------------------------------------------------------------------------
===


 *
 * SMI_CLK = Clock Control Register
 *

     ==============================================================
     SMI(0..1)_CLK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:25> NS       RAZ      NS          NS        Reserved				            |   
 <24>    MODE     R/W      0           0         IEEE operating mode            		    |   
						  0=Clause 22 complient				    |
						  1=Clause 45 complient				    |
 <23:21> NS       RAZ      NS          NS        Reserved				            |   
 <20:16> SAMPLE_HI R/W     0           0         When to sample read data (extended bits)	    |   
 <15>    SAMPLE_MODE R/W   0	       0         Read Data sampling mode		            |   
						  According to the 802.3 spec, on reads, the STA    |
						  transitions MDC and the PHY drives MDIO with	    |
						  some delay relative to that edge.  This is edge1. |
						  The STA then samples MDIO on the next rising edge |
						  of MDC.  This is edge2. Octeon can sample the	    |
						  read data relative to either edge.		    |
						   0={SAMPLE_HI,SAMPLE} specify the sample time	    |
						     relative to edge2				    |
						   1={SAMPLE_HI,SAMPLE} specify the sample time	    |
						     relative to edge1				    |
 <14>    NS       RAZ      NS          NS        Reserved				            |   
 <13>    CLK_IDLE R/W      0           0         Do not toggle MDC on idle cycles	            |   
 <12>    PREAMBLE R/W      1           1         Send PREAMBLE on SMI transacton		    |   
						  PREAMBLE must be set 1 when MODE=1 in order	    |
						  for the receiving PHY to correctly frame the	    |
						  transaction.					    |
 <11:8>  SAMPLE   R/W      2           2         When to sample read data			    |   
						  (number of eclks after the rising edge of mdc)    |
						  ( {SAMPLE_HI,SAMPLE} > 1 )			    |
						  ( {SAMPLE_HI, SAMPLE} + 3 <= 2*PHASE )	    |
 <7:0>   PHASE    R/W      100         100       MDC Clock Phase                                    |   
						  (number of eclks that make up an mdc phase)	    |
						  (PHASE > 2)					    |
----------------------------------------------------------------------------------------------------
===


 *
 * SMI_EN = Enable the SMI interface
 *

     ==============================================================
     SMI(0..1)_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved				            |   
 <0>     EN       R/W      0           1         Interface enable				    |   
						  0=SMI Interface is down / no transactions, no MDC |
						  1=SMI Interface is up				    |
----------------------------------------------------------------------------------------------------
===


 *
 * SMI_DRV_CTL = SMI Drive Strength Control
 *

     ==============================================================
     SMI_DRV_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:14> NS       RAZ      NS          NS        Reserved				            |   
 <13:8>  PCTL     R/W      19          19        PCTL Drive strength control bits		    |   
						  Assuming a 50ohm termination			    |
						  3.3v supply = 19				    |
						  2.5v supply = TBD				    |						  
 <7:6>   NS       RAZ      NS          NS        Reserved				            |   
 <5:0>   NCTL     R/W      15          15        NCTL Drive strength control bits		    |   
						  Assuming a 50ohm termination			    |
						  3.3v supply = 15				    |
						  2.5v supply = TBD				    |						  
----------------------------------------------------------------------------------------------------
===




 *
 * MIO_TWS@_SW_TWSI = TWS@ Software to TWSI Register
 *
 * This register allows software to
 *    - initiate TWSI interface master-mode operations with a write and read the result with a read
 *    - load four bytes for later retrieval (slave mode) with a write and check validity with a read
 *    - launch a TWSI controller configuration read/write with a write and read the result with a read
 *
 * This register should be read or written by software, and read by the TWSI device. The TWSI device can
 * use either two-byte or five-byte reads to reference this register.
 *
 * The TWSI device considers this register valid when V==1 and SLONLY==1.
 *

     ==============================================================
     MIO_TWS(0..1)_SW_TWSI Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  D        R/W      0x0         NS        Data Field                                         |   
                                                 Used on a write when                               |
                                                   - initiating a master-mode write (SLONLY==0)     |
                                                   - writing a TWSI config register (SLONLY==0)     |
                                                   - a slave mode write (SLONLY==1)                 |
                                                 The read value is updated by                       |
                                                   - a write to this register                       |
                                                   - master mode completion (contains result or     |
                                                     error code)                                    |
                                                   - TWSI config register read (contains result)    |
 <34:32> EOP_IA   R/W      0x0         NS        Extra opcode (when OP<3:0> == 0110 and SLONLY==0): |   
                                                   000 => TWSI Slave Address Register               |
                                                   001 => TWSI Data Register                        |
                                                   010 => TWSI Control Register                     |
                                                   011 => TWSI Clock Control Register (when R == 0) |
                                                   011 => TWSI Status Register (when R == 1)        |
                                                   100 => TWSI Extended Slave Register              |
                                                   111 => TWSI Soft Reset Register                  |
                                                 Also the lower 3 bits of Internal Address when     |
                                                   launching a master mode combined read / write    |
                                                   with internal address                            |
 <39:35> IA       R/W      0x0         NS        Internal Address - Used when launching a master    |   
                                                   mode combined read / write with internal address |
                                                   (lower 3 bits are contained in the EOP_IA field) |
 <49:40> A        R/W      0x0         NS        Address field                                      |   
                                                   - the address of the remote device for a master  |
                                                     mode operation                                 |
                                                   - A<9:7> are only used for 10-bit addressing     |
                                                  Note that when mastering a 7-bit OP, A<6:0> should|
                                                  not take any of the values 0x78, 0x79, 0x7A nor   |
                                                  0x7B (these 7-bit addresses are reserved to       |
                                                  extend to 10-bit addressing).                     |
 <51:50> SCR      R/W      0x0         NS        Scratch - unused, but retain state                 |   
 <54:52> SIZE     R/W      0x0         NS        Size in bytes of Master Mode Op if the Size        |   
                                                  Override bit is set.  Specified in -1 notation    |
                                                  (i.e. 0 = 1 byte, 1 = 2 bytes ... 7 = 8 bytes)    |
 <55>    SOVR     R/W      0x0         NS        Size Override - if set, use the SIZE field to      |   
                                                  determine Master Mode Op size rather than what    |
                                                  the Opcode field specifies.  For operations       |
                                                  greater than 4 bytes, the additional data will be |
                                                  contained in the D field of MIO_TWS_SW_TWSI_EXT   |
 <56>    R        R/W      0x0         NS        Read bit or result                                 |   
                                                   - If set on a write when SLONLY==0, the          |
                                                     operation is a read                            |
                                                   - On a read, this bit returns the result         |
                                                     indication for the most recent master mode     |
                                                     operation (1 = success, 0 = fail)              |
 <60:57> OP       R/W      0x0         NS        Opcode field - When the register is written with   |   
                                                 SLONLY==0, initiate a read or write:               |
                                                   0000 => 7-bit Byte Master Mode TWSI Op           |
                                                   0001 => 7-bit Byte Combined Read Master Mode Op  |
                                                           7-bit Byte Write w/ IA Master Mode Op    |
                                                   0010 => 10-bit Byte Master Mode TWSI Op          |
                                                   0011 => 10-bit Byte Combined Read Master Mode Op |
                                                           10-bit Byte Write w/ IA Master Mode Op   |
                                                   0100 => TWSI Master Clock Register               |
                                                   0110 => See EOP field                            |
                                                   1000 => 7-bit 4-byte Master Mode TWSI Op         |
                                                   1001 => 7-bit 4-byte Comb. Read Master Mode Op   |
                                                           7-bit 4-byte Write w/ IA Master Mode Op  |
                                                   1010 => 10-bit 4-byte Master Mode TWSI Op        |
                                                   1011 => 10-bit 4-byte Comb. Read Master Mode Op  |
                                                           10-bit 4-byte Write w/ IA Master Mode Op |
 <61>    EIA      R/W      0x0         NS        Extended Internal Address - send additional        |   
                                                  internal address byte (MSB of IA is from IA field |
                                                  of MIO_TWS_SW_TWSI_EXT)                           |
 <62>    SLONLY   R/W      0x0         NS        Slave Only Mode                                    |   
                                                   - No operation is initiated with a write when    |
                                                     this bit is set - only D field is updated in   |
                                                     this case                                      |
                                                   - When clear, a write initiates either a TWSI    |
                                                     master-mode operation or a TWSI configuration  |
                                                     register access                                |
 <63>    V        RC/W     0x0         NS        Valid bit                                          |   
                                                   - Set on a write (should always be written with  |
                                                     a 1)                                           |
                                                   - Cleared when a TWSI master mode op completes   |
                                                   - Cleared when a TWSI configuration register     |
                                                     access completes                               |
                                                   - Cleared when the TWSI device reads the         |
                                                     register if SLONLY==1                          |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_TWS@_TWSI_SW = TWS@ TWSI to Software Register
 *
 * This register allows the TWSI device to transfer data to software and later check that software has
 * received the information.
 *
 * This register should be read or written by the TWSI device, and read by software. The TWSI device can
 * use one-byte or four-byte payload writes, and two-byte payload reads.
 *
 * The TWSI device considers this register valid when V==1.
 *

     ==============================================================
     MIO_TWS(0..1)_TWSI_SW Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  D        R/W      NS          NS        Data Field - updated on a write by the TWSI device |   
 <61:32> NS       RAZ      NS          NS        Reserved                                           |   
 <63:62> V        RC/W     0x0         NS        Valid Bits                                         |   
                                                   - Not directly writable                          |
                                                   - Set to 1 on any write by the TWSI device       |
                                                   - Cleared on any read by software                |
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_TWS@_INT = TWS@ Interrupt Register
 *
 * This register contains the TWSI interrupt enable mask and the interrupt source bits.  Note: the
 * interrupt source bit for the TWSI core interrupt (CORE_INT) is read-only, the appropriate sequence
 * must be written to the TWSI core to clear this interrupt.  The other interrupt source bits are write-
 * one-to-clear.  TS_INT is set on the update of the MIO_TWS_TWSI_SW register (i.e. when it is written
 * by a TWSI device).  ST_INT is set whenever the valid bit of the MIO_TWS_SW_TWSI is cleared (see above
 * for reasons).
 *
 * Note: When using the high-level controller, CORE_EN should be clear and CORE_INT should be ignored.
 * Conversely, when the high-level controller is disabled, ST_EN / TS_EN should be clear and ST_INT /
 * TS_INT should be ignored.
 *
 * This register also contains a read-only copy of the TWSI bus (SCL and SDA) as well as control bits to
 * override the current state of the TWSI bus (SCL_OVR and SDA_OVR).  Setting an override bit high will
 * result in the open drain driver being activated, thus driving the corresponding signal low.
 *

     ==============================================================
     MIO_TWS(0..1)_INT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:12> NS       RAZ      NS          NS        Reserved                                           |   
 <11>    SCL      RO       NS          NS        SCL                                                |   
 <10>    SDA      RO       NS          NS        SDA                                                |   
 <9>     SCL_OVR  R/W      0x0         NS        SCL override                                       |   
 <8>     SDA_OVR  R/W      0x0         NS        SDA override                                       |   
 <7>     NS       RAZ      NS          NS        Reserved                                           |   
 <6>     CORE_EN  R/W      0x0         NS        TWSI core interrupt enable                         |   
 <5>     TS_EN    R/W      0x0         NS        MIO_TWS_TWSI_SW register update interrupt enable   |   
 <4>     ST_EN    R/W      0x0         NS        MIO_TWS_SW_TWSI register update interrupt enable   |   
 <3>     NS       RAZ      NS          NS        Reserved                                           |   
 <2>     CORE_INT RO       0x0         NS        TWSI core interrupt                                |   
 <1>     TS_INT   R/W1C    0x0         NS        MIO_TWS_TWSI_SW register update interrupt          |   
 <0>     ST_INT   R/W1C    0x0         NS        MIO_TWS_SW_TWSI register update interrupt          |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_TWS@_SW_TWSI_EXT = TWS@ Software to TWSI Extension Register
 *
 * This register contains an additional byte of internal address and 4 additional bytes of data to be
 * used with TWSI master mode operations.  IA will be sent as the first byte of internal address when
 * performing master mode combined read / write with internal address operations and the EIA bit of
 * MIO_TWS_SW_TWSI is set.  D extends the data field of MIO_TWS_SW_TWSI for a total of 8 bytes (SOVR
 * must be set to perform operations greater than 4 bytes).
 *

     ==============================================================
     MIO_TWS(0..1)_SW_TWSI_EXT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  D        R/W      0x0         NS        Extended Data Field                                |   
 <39:32> IA       R/W      0x0         NS        Extended Internal Address                          |   
 <63:40> NS       RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_PTP_CLOCK_CFG = Configuration
 *

     ==============================================================
     MIO_PTP_CLOCK_CFG Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     PTP_EN     R/W     0x0	       0	 Enable PTP Module                                  |	
 <1>     EXT_CLK_EN R/W     0x0	       0	 Use positive edge of external clock                |	
 <7:2>   EXT_CLK_IN R/W     0x0	       0	 Source for external clock                          |	
                                                 0x00-0x0f : GPIO[EXT_CLK_IN[3:0]]
                                                 0x10      : QLM0_REF_CLK
                                                 0x11      : QLM1_REF_CLK
                                                 0x12      : QLM2_REF_CLK
                                                 0x13-0x3f : Reserved
 <8>     TSTMP_EN   R/W     0x0	       0	 Enable external timestamp                          |	
 <9>     TSTMP_EDGE R/W     0x0	       0	 External timestamp input edge                      |	
                                                 0 = falling edge
                                                 1 = rising edge
 <15:10>  TSTMP_IN   R/W     0x0	       0	 Source for timestamp input                         |	
                                                 0x00-0x0f : GPIO[TSTMP_IN[3:0]]
                                                 0x10      : QLM0_REF_CLK
                                                 0x11      : QLM1_REF_CLK
                                                 0x12      : QLM2_REF_CLK
                                                 0x13-0x3f : Reserved
 <16>    EVCNT_EN   R/W     0x0	       0	 Enable event counter                               |	
 <17>    EVCNT_EDGE R/W     0x0	       0	 Event counter input edge                           |	
                                                 0 = falling edge
                                                 1 = rising edge
 <23:18> EVCNT_IN   R/W     0x0	       0	 Source for event counter input                     |	
                                                 0x00-0x0f : GPIO[EVCNT_IN[3:0]]
                                                 0x10      : QLM0_REF_CLK
                                                 0x11      : QLM1_REF_CLK
                                                 0x12      : QLM2_REF_CLK
                                                 0x13-0x3f : Reserved
 <63:24> NS         RAZ     NS         NS        Reserved				            |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_PTP_CLOCK_LO = Lo bytes of CLOCK
 *

     ==============================================================
     MIO_PTP_CLOCK_LO Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  FRNANOSEC  R/W     0x0	       0	 Fractions of Nanoseconds                           |	
 <63:32> NS         RAZ     NS         NS        Reserved				            |   
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_PTP_CLOCK_HI = Hi bytes of CLOCK
 *
 * Writes to MIO_PTP_CLOCK_HI also clear MIO_PTP_CLOCK_LO. To update all 96 bits, write MIO_PTP_CLOCK_HI followed
 * by MIO_PTP_CLOCK_LO
 * 

     ==============================================================
     MIO_PTP_CLOCK_HI Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  NANOSEC    R/W     0x0	       0	 Nanoseconds                                        |	
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_PTP_CLOCK_COMP = Compensator
 *

     ==============================================================
     MIO_PTP_CLOCK_COMP Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  FRNANOSEC  R/W     0x0	       0	 Fractions of Nanoseconds                           |	
 <63:32> NANOSEC    R/W     0x0	       0	 Nanoseconds                                        |	
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_PTP_TIMESTAMP = Timestamp latched on MIO_PTP_CLOCK_CFG[TSTMP_EDGE] edge of MIO_PTP_CLOCK_CFG[TSTMP_IN]
 *

     ==============================================================
     MIO_PTP_TIMESTAMP Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  NANOSEC    R/W     0x0	       0	 Nanoseconds                                        |	
----------------------------------------------------------------------------------------------------
===

 *
 * MIO_PTP_EVT_CNT = Event Counter
 *
 * Writes to MIO_PTP_EVT_CNT increment this register by the written data. The register counts down by
 * 1 for every MIO_PTP_CLOCK_CFG[EVCNT_EDGE] edge of MIO_PTP_CLOCK_CFG[EVCNT_IN]. When register equals
 * 0, an interrupt gets gerated
 *

     ==============================================================
     MIO_PTP_EVT_CNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  CNTR     R/W     0x0	       0	 Nanoseconds                                        |	
----------------------------------------------------------------------------------------------------
===

 *
 *                  MIX_ORING1 = MIX Outbound Ring Register #1
 * 
 * Description: 
 *  NOTE: To write to the MIX_ORING1 register, a device would issue an IOBST directed at the MIO.
 *        To read the MIX_ORING1 register, a device would issue an IOBLD64 directed at the MIO.
 *

     ==============================================================
     MIX(0..1)_ORING1 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <2:0>   NS       RAZ      NS          NS        RESERVED                                             
 <39:3>  OBASE    R/W      0x0         NS        Represents the 8B-aligned base address of the first  
                                                 Outbound Ring(O-Ring) Entry in system memory. 
						 NOTE: SW MUST ONLY write to this register during
                                                 power-on/boot code.                                                      

 <59:40> OSIZE    R/W      0x0         NS        Represents the Outbound Ring Buffer's Size(in 8B     
                                                 words). The ring can be as large as 1M entries.
                                                 NOTE: This CSR MUST BE setup written by SW poweron
                                                 (when ODBELL/ORCNT=0). 

 <63:60> NS       RAZ      NS          NS        RESERVED                                             
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_ORING2 = MIX Outbound Ring Register #2
 *
 * Description: 
 *  NOTE: To write to the MIX_ORING2 register, a device would issue an IOBST directed at the MIO.
 *        To read the MIX_ORING2 register, a device would issue an IOBLD64 directed at the MIO.
 * 

     ==============================================================
     MIX(0..1)_ORING2 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <19:0>  ODBELL   R/W      0x0         NS        Represents the cumulative total of pending           
                                                 Outbound Ring(O-Ring) Buffer Entries. Each O-Ring
                                                 Buffer Entry contains 1) an L2/DRAM byte pointer 
                                                 along with a 2) a Byte Length. 

						 After SW inserts new entries into the O-Ring Buffer,
                                                 it "rings the doorbell with the count of the newly 
                                                 inserted entries". When the MIX HW receives the 
                                                 doorbell ring, it increments the current doorbell 
                                                 count by the CSR write value. 
                                                 
                                                 SW must never cause the doorbell count for the 
                                                 O-Ring to exceed the size of the ring(OSIZE).  
                                                 A read of the CSR indicates the current doorbell
                                                 count.

 <31:20> NS       RAZ      NS          NS        RESERVED                                             

 <51:32> OTLPTR   RO      0x0         NS         The Outbound Ring Tail Pointer selects the O-Ring    
                                                 Entry that the HW will process next. After the HW 
                                                 completes sending an outbound packet, it increments 
                                                 the O-Ring Tail Pointer. [NOTE: The O-Ring Tail 
                                                 Pointer HW increment is always modulo 
                                                 MIX_ORING2[OSIZE]. 
						 NOTE: This field is 'read-only' to SW. 

 <63:52> NS       RAZ      NS          NS        RESERVED                                             
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_IRING1 = MIX Inbound Ring Register #1
 * 
 * Description: 
 *  NOTE: To write to the MIX_IRING1 register, a device would issue an IOBST directed at the MIO.
 *        To read the MIX_IRING1 register, a device would issue an IOBLD64 directed at the MIO.
 *

     ==============================================================
     MIX(0..1)_IRING1 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <2:0>   NS       RAZ      NS          NS        RESERVED                                             

 <39:3>  IBASE    R/W      0x0         NS        Represents the 8B-aligned base address of the first  
                                                 Inbound Ring entry in system memory. 
						 NOTE: SW MUST ONLY write to this register during
                                                 power-on/boot code. 

 <59:40> ISIZE    R/W      0x0         NS        Represents the Inbound Ring Buffer's Size(in 8B      
                                                 words). The ring can be as large as 1M entries.
                                                 NOTE: This CSR MUST BE setup written by SW poweron
                                                 (when IDBELL/IRCNT=0). 
                                                 
 <63:60> NS       RAZ      NS          NS        RESERVED                                             
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_IRING2 = MIX Inbound Ring Register #2
 *
 * Description: 
 *  NOTE: To write to the MIX_IRING2 register, a device would issue an IOBST directed at the MIO.
 *        To read the MIX_IRING2 register, a device would issue an IOBLD64 directed at the MIO.
 * 

     ==============================================================
     MIX(0..1)_IRING2 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <19:0>  IDBELL   R/W      0x0         NS        Represents the cumulative total of pending           
                                                 Inbound Ring Buffer Entries. Each I-Ring
                                                 Buffer Entry contains 1) an L2/DRAM byte pointer 
                                                 along with a 2) a Byte Length. 

						 After SW inserts a new entry into the I-Ring Buffer,
                                                 it "rings the doorbell for the inbound ring". When 
                                                 the MIX HW receives the doorbell ring, it advances
                                                 the doorbell count for the I-Ring. 
                                                 
                                                 SW must never cause the doorbell count for the 
                                                 I-Ring to exceed the size of the I-ring(ISIZE).  
                                                 A read of the CSR indicates the current doorbell
                                                 count.

 <31:20> NS       RAZ      NS          NS        RESERVED                                             

 <51:32> ITLPTR   RO      0x0         NS         The Inbound Ring Tail Pointer selects the I-Ring     
                                                 Entry that the HW will process next. After the HW 
                                                 completes receiving an inbound packet, it increments 
                                                 the I-Ring Tail Pointer. [NOTE: The I-Ring Tail 
                                                 Pointer HW increment is always modulo ISIZE. 
  
						 NOTE: This field is 'read-only' to SW. 
 <63:52> NS       RAZ      NS          NS        RESERVED                                             
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_CTL = MIX Control Register
 *
 * Description: 
 *  NOTE: To write to the MIX_CTL register, a device would issue an IOBST directed at the MIO.
 *        To read the MIX_CTL register, a device would issue an IOBLD64 directed at the MIO.
 * 

     ==============================================================
     MIX(0..1)_CTL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <1:0>  MRQ_HWM  R/W      0x1         0x1       MIX CB-Request FIFO Programmable High Water Mark.    
                                                The MRQ contains 16 CB-Requests which are CSR Rd/Wr
                                                Requests. If the MRQ backs up with "HWM" entries,
                                                then new CB-Requests are 'stalled'. 
                                                   [0]: HWM = 11
                                                   [1]: HWM = 10
                                                   [2]: HWM = 9
                                                   [3]: HWM = 8                                   
                                                NOTE: This must only be written at power-on/boot time.         
 <2>    NBTARB   R/W      0x0         0x0       MIX CB-Request Arbitration Mode.                     
                                                When set to zero, the arbiter is fixed priority with 
                                                the following priority scheme: 
                                                    Highest Priority: I-Ring Packet Write Request
                                                                      O-Ring Packet Read Request
                                                                      I-Ring Entry Write Request
                                                                      I-Ring Entry Read Request
                                                                      O-Ring Entry Read Request
                                                When set to one, the arbiter is round robin.
 <3>    LENDIAN  R/W      0x0         0x0       Packet Little Endian Mode                            
                                                (0: Big Endian Mode/1: Little Endian Mode)
                                                When the mode is set, MIX will byte-swap packet data 
                                                loads/stores at the MIX/NCB boundary.
                   
 <4>    RESET    R/W	  0x1         0x0       MIX Soft Reset                                       
                                                When SW writes a '1' to MIX_CTL[RESET], the
                                                MII-MIX/AGL logic will execute a soft reset. 
                                                NOTE: During a soft reset, CSR accesses are not effected. 
                                                However, the values of the CSR fields will be effected by
                                                soft reset (except MIX_CTL[RESET] itself).
 
                                                NOTE: After power-on, the MII-AGL/MIX are held in reset
                                                until the MIX_CTL[RESET] is written to zero. SW MUST also
                                                perform a MIX_CTL CSR read after this write to ensure the
                                                soft reset de-assertion has had sufficient time to propagate
                                                to all MIO-MIX internal logic before any subsequent MIX CSR
                                                accesses are issued.

                                                The intended "soft reset" sequence is: (please also 
                                                refer to HRM Section 12.6.2 on MIX/AGL Block Reset). 
                                                   1) Write MIX_CTL[EN]=0
                                                      [To prevent any NEW transactions from being started]
                                                   2) Wait for MIX_CTL[BUSY]=0 
                                                      [To indicate that all inflight transactions have 
                                                       completed]
                                                   3) Write MIX_CTL[RESET]=1, followed by a MIX_CTL CSR read
                                                      and wait for the result. 
                                                   4) Re-Initialize the MIX/AGL just as would be done
                                                      for a hard reset. 
                                               NOTE: Once the MII has been soft-reset, please refer to HRM Section
                                               12.6.1 MIX/AGL BringUp Sequence to complete the MIX/AGL 
                                               re-initialization sequence. 

<5>     EN       R/W      0x0         0x0       MIX Enable bit                                       
                                                When EN=0, MIX will no longer arbitrate for 
                                                any new L2/DRAM read/write requests on the NCB Bus. 
                                                MIX will complete any requests that are currently 
                                                pended for the NCB Bus. 
                                   
<6>     BUSY     RO       0x0         0x0       MIX Busy Status bit                                  
                                                MIX will assert busy status any time there are: 
                                                  1) L2/DRAM reads in-flight (NCB-arb to read
                                                     response)
                                                  2) L2/DRAM writes in-flight (NCB-arb to write
                                                     data is sent. 
                                                  3) L2/DRAM write commits in-flight (NCB-arb to write
                                                     commit response). 
                                                NOTE: After MIX_CTL[EN]=0, the MIX will eventually 
                                                complete any "inflight" transactions, at which point the
                                                BUSY will de-assert. 

<7>   CRC_STRIP  R/W      0x0         0x0       HW CRC Strip Enable                                 
						When enabled, the last 4 bytes(CRC) of the ingress packet 
                                                are not included in cumulative packet byte length. 
                                                In other words, the cumulative LEN field for all 
                                                I-Ring Buffer Entries associated with a given ingress 
                                                packet will be 4 bytes less (so that the final 4B HW CRC 
                                                packet data is not processed by software).  

<11:8> TS_THRESH  R/W     0x0         0x0       TimeStamp Interrupt Threshold                        
                                                When the #of pending Timestamp interrupts (MIX_TSCTL[TSCNT] 
                                                is greater than MIX_CTL[TS_THRESH], then a programmable 
                                                TimeStamp Interrupt is issued (see MIX_INTR[TS] 
                                                MIX_INTENA[TSENA]). 
                                                SWNOTE: For o63, since the implementation only supports
                                                4 oustanding timestamp interrupts, this field should
                                                only be programmed from [0..3].

<63:12> NS        RAZ     NS          NS        RESERVED                                             
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_IRHWM = MIX I-Ring High-Water Mark Threshold Register
 *
 * Description: 
 *  NOTE: To write to the MIX_IHWM register, a device would issue an IOBST directed at the MIO.
 *        To read the MIX_IHWM register, a device would issue an IOBLD64 directed at the MIO.
 * 

     ==============================================================
     MIX(0..1)_IRHWM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <19:0> IRHWM    R/W       0x0         0x0      I-Ring Entry High Water Mark Threshold.                
                                                Used to determine when the # of Inbound packets 
                                                in system memory(MIX_IRCNT[IRCNT]) exceeds this IRHWM
                                                threshold. 

                                                NOTE: The power-on value of the CIU_INTx_EN*[MII]
                                                interrupt enable bits is zero and must be enabled 
                                                to allow interrupts to be reported.

 <39:20> IBPLWM  R/W       0x0         0x0      I-Ring BackPressure Low Water Mark Threshold.         
                                                When the #of available I-Ring Entries (IDBELL) 
                                                is less than IBPLWM, the AGL-MAC will: 
                                                  a) In full-duplex mode: send periodic PAUSE packets. 
                                                  b) In half-duplex mode: Force collisions.
                                                This programmable mechanism is provided as a means
                                                to backpressure input traffic 'early' enough (so 
                                                that packets are not 'dropped' by OCTEON).
                                                
 <63:40> NS       RAZ      NS          NS       RESERVED                                             
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_IRCNT = MIX I-Ring Pending Packet Counter
 *
 * Description: 
 *  NOTE: To write to the MIX_IRCNT register, a device would issue an IOBST directed at the MIO.
 *        To read the MIX_IRCNT register, a device would issue an IOBLD64 directed at the MIO.
 * 

     ==============================================================
     MIX(0..1)_IRCNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <19:0>  IRCNT     R/W       0x0         0x0    Pending # of I-Ring Packets.                          
                                                Whenever HW writes a completion code of Done, Trunc, 
                                                CRCErr or Err, it increments the IRCNT (to indicate
                                                to SW the # of pending Input packets in system memory). 
                                                NOTE: The HW guarantees that the completion code write
                                                is always visible in system memory BEFORE it increments
                                                the IRCNT. 
                                                Reads of IRCNT return the current inbound packet count. 
					        Writes of IRCNT decrement the count by the value 
                                                written. 
                                                This register is used to generate interrupts to alert
                                                SW of pending inbound MIX packets in system memory. 

                                                NOTE: In the case of inbound packets that span multiple
                                                I-Ring entries, SW must keep track of the # of I-Ring Entries 
                                                associated with a given inbound packet to reclaim the
                                                proper # of I-Ring Entries for re-use.

 <63:20> NS       RAZ      NS          NS        RESERVED                                             
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_ORHWM = MIX O-Ring High-Water Mark Threshold Register
 *
 * Description: 
 *  NOTE: To write to the MIX_ORHWM register, a device would issue an IOBST directed at the MIO.
 *        To read the MIX_ORHWM register, a device would issue an IOBLD64 directed at the MIO.
 * 

     ==============================================================
     MIX(0..1)_ORHWM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <19:0> ORHWM    R/W       0x0         0x0      O-Ring Entry High Water Mark Threshold.               
                                                Used to determine when the # of Outbound packets 
                                                in system memory that can be reclaimed 
                                                (MIX_ORCNT[ORCNT]) exceeds this ORHWM threshold.   

                                                NOTE: The power-on value of the CIU_INTx_EN*[MII]
                                                interrupt enable bits is zero and must be enabled 
                                                to allow interrupts to be reported.

 <63:20> NS       RAZ      NS          NS       RESERVED                                             
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_ORCNT = MIX O-Ring Packets Sent Counter
 *
 * Description: 
 *  NOTE: To write to the MIX_ORCNT register, a device would issue an IOBST directed at the MIO. 
 *        To read the MIX_ORCNT register, a device would issue an IOBLD64 directed at the MIO.
 * 

     ==============================================================
     MIX(0..1)_ORCNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <19:0>  ORCNT     R/W       0x0         0x0    Pending # of O-Ring Packets.                          
                                                Whenever HW removes a packet from the O-Ring, it 
                                                increments the ORCNT (to indicate to SW the # of 
                                                Output packets in system memory that can be reclaimed). 
                                                Reads of ORCNT return the current count. 
					        Writes of ORCNT decrement the count by the value 
                                                written. 
                                                This register is used to generate interrupts to alert
                                                SW of pending outbound MIX packets that have been 
                                                removed from system memory. (see MIX_ISR[ORTHRESH]
                                                description for more details).
                                                NOTE: For outbound packets, the # of O-Ring Packets
                                                is equal to the # of O-Ring Entries. 

 <63:20> NS       RAZ      NS          NS        RESERVED                                             
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_ISR = MIX Interrupt/Status Register
 *
 * Description: 
 *  NOTE: To write to the MIX_ISR register, a device would issue an IOBST directed at the MIO.
 *        To read the MIX_ISR register, a device would issue an IOBLD64 directed at the MIO.
 * 

     ==============================================================
     MIX(0..1)_ISR Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     ODBLOVF  R/W1C    0x0        0x0       Outbound DoorBell(ODBELL) Overflow Detected           
                                                If SW attempts to write to the MIX_ORING2[ODBELL]
                                                with a value greater than the remaining #of 
                                                O-Ring Buffer Entries (MIX_REMCNT[OREMCNT]), then 
                                                the following occurs: 
                                                1) The  MIX_ORING2[ODBELL] write is IGNORED
                                                2) The ODBLOVF is set and the CIU_INTx_SUM0,4[MII] 
                                                   bits are set if ((MIX_ISR & MIX_INTENA) != 0)). 

						If both the global interrupt mask bits (CIU_INTx_EN*[MII])
						and the local interrupt mask bit(OVFENA) is set, than an 
                                                interrupt is reported for this event. 
 
                                                SW should keep track of the #I-Ring Entries in use 
                                                (ie: cumulative # of ODBELL writes),  and ensure that 
                                                future ODBELL writes don't exceed the size of the 
                                                O-Ring Buffer (MIX_ORING2[OSIZE]). 
                                                SW must reclaim O-Ring Entries by writing to the 
                                                MIX_ORCNT[ORCNT]. . 

                                                NOTE: There is no recovery from an ODBLOVF Interrupt. 
                                                If it occurs, it's an indication that SW has 
                                                overwritten the O-Ring buffer, and the only recourse
                                                is a HW reset. 

 <1>     IDBLOVF  R/W1C    0x0         0x0      Inbound DoorBell(IDBELL) Overflow Detected            
                                                If SW attempts to write to the MIX_IRING2[IDBELL]
                                                with a value greater than the remaining #of 
                                                I-Ring Buffer Entries (MIX_REMCNT[IREMCNT]), then 
                                                the following occurs: 
                                                1) The  MIX_IRING2[IDBELL] write is IGNORED
                                                2) The ODBLOVF is set and the CIU_INTx_SUM0,4[MII] 
                                                   bits are set if ((MIX_ISR & MIX_INTENA) != 0)). 

						If both the global interrupt mask bits (CIU_INTx_EN*[MII])
						and the local interrupt mask bit(IVFENA) is set, than an 
                                                interrupt is reported for this event. 
 
                                                SW should keep track of the #I-Ring Entries in use 
                                                (ie: cumulative # of IDBELL writes),  and ensure that 
                                                future IDBELL writes don't exceed the size of the 
                                                I-Ring Buffer (MIX_IRING2[ISIZE]). 
                                                SW must reclaim I-Ring Entries by keeping track of the 
                                                #IRing-Entries, and writing to the MIX_IRCNT[IRCNT]. 
                                                NOTE: The MIX_IRCNT[IRCNT] register represents the
                                                total #packets(not IRing Entries) and SW must further 
                                                keep track of the # of I-Ring Entries associated with 
                                                each packet as they are processed. 

                                                NOTE: There is no recovery from an IDBLOVF Interrupt. 
                                                If it occurs, it's an indication that SW has 
                                                overwritten the I-Ring buffer, and the only recourse
                                                is a HW reset. 

 <2>     ORTHRESH  RO      0x0         0x0      Outbound Ring Packet Threshold Exceeded                
                                                When the pending #outbound packets in system 
	                                        memory(ORCNT) has exceeded a programmable threshold 
						(ORHWM), then this bit is set. If this does occur, 
                                                the ORTHRESH is set and the CIU_INTx_SUM0,4[MII] bits 
                                                are set if ((MIX_ISR & MIX_INTENA) != 0)).

						If both the global interrupt mask bits (CIU_INTx_EN*[MII])
						and the local interrupt mask bit(OTHENA) is set, than an 
                                                interrupt is reported for this event. 

 <3>     IRTHRESH  RO      0x0         0x0      Inbound Ring Packet Threshold Exceeded                
                                                When the pending #inbound packets in system 
	                                        memory(IRCNT) has exceeded a programmable threshold 
						(IRHWM), then this bit is set. If this does occur, 
                                                the IRTHRESH is set and the CIU_INTx_SUM0,4[MII] bits 
                                                are set if ((MIX_ISR & MIX_INTENA) != 0)).

						If both the global interrupt mask bits (CIU_INTx_EN*[MII])
						and the local interrupt mask bit(ITHENA) is set, than an 
                                                interrupt is reported for this event. 

 <4>     DATA_DRP R/W1C    0x0         0x0      Data was dropped due to RX FIFO full                  
                                                If this does occur, the DATA_DRP is set and the 
                                                CIU_INTx_SUM0,4[MII] bits are set.

						If both the global interrupt mask bits (CIU_INTx_EN*[MII])
						and the local interrupt mask bit(DATA_DRPENA) is set, than an 
                                                interrupt is reported for this event. 

 <5>     IRUN     R/W1C    0x0         0x0      IRCNT UnderFlow Detected                             
                                                If SW writes a larger value than what is currently
                                                in the MIX_IRCNT[IRCNT], then HW will report the 
                                                underflow condition. 
                                                NOTE: The MIX_IRCNT[IRCNT] will clamp to to zero.

                                                NOTE: If an IRUN underflow condition is detected, 
                                                the integrity of the MIX/AGL HW state has 
                                                been compromised. To recover, SW must issue a 
                                                software reset sequence (see: MIX_CTL[RESET]

 <6>     ORUN     R/W1C    0x0         0x0      ORCNT UnderFlow Detected                             
                                                If SW writes a larger value than what is currently
                                                in the MIX_ORCNT[ORCNT], then HW will report the 
                                                underflow condition. 
                                                NOTE: The MIX_ORCNT[IOCNT] will clamp to to zero.

                                                NOTE: If an ORUN underflow condition is detected, 
                                                the integrity of the MIX/AGL HW state has 
                                                been compromised. To recover, SW must issue a 
                                                software reset sequence (see: MIX_CTL[RESET]

 <7>     TS       RO       0x0         0x0      TimeStamp Interrupt                                  
                                                When the #of pending Timestamp Interrupts (MIX_TSCTL[TSCNT])
                                                is greater than the TimeStamp Interrupt Threshold 
                                                (MIX_CTL[TS_THRESH]) value this interrupt bit is set.
						If both the global interrupt mask bits (CIU_INTx_EN*[MII])
						and this local interrupt mask bit is set, than an 
                                                interrupt is reported for an Outbound Ring with Timestamp
                                                event (see: MIX_INTENA[TSENA]). 

 <63:8>  NS       RAZ      NS          NS       RESERVED                                             
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_INTENA = MIX Local Interrupt Enable Mask Register
 *
 * Description: 
 *  NOTE: To write to the MIX_INTENA register, a device would issue an IOBST directed at the MIO.
 *        To read the MIX_INTENA register, a device would issue an IOBLD64 directed at the MIO.
 * 

     ==============================================================
     MIX(0..1)_INTENA Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     OVFENA   R/W      0x0         0x0      Outbound DoorBell(ODBELL) Overflow Interrupt Enable   
						If both the global interrupt mask bits (CIU_INTx_EN*[MII])
						and this local interrupt mask bit is set, than an 
                                                interrupt is reported for an Outbound Doorbell Overflow
                                                event(ODBOVF).

 <1>     IVFENA   R/W      0x0         0x0      Inbound DoorBell(IDBELL) Overflow Detected            
						If both the global interrupt mask bits (CIU_INTx_EN*[MII])
						and this local interrupt mask bit is set, than an 
                                                interrupt is reported for an Inbound Doorbell Overflow
                                                event(IDBOVF). 

 <2>     OTHENA   R/W    0x0         0x0        Outbound Ring Threshold Exceeded Interrupt Enable    
						If both the global interrupt mask bits (CIU_INTx_EN*[MII])
						and this local interrupt mask bit is set, than an 
                                                interrupt is reported for an Outbound Ring Threshold 
                                                Exceeded event(ORTHRESH). 

 <3>     ITHENA   R/W    0x0         0x0        Inbound Ring Threshold Exceeded Interrupt Enable     
						If both the global interrupt mask bits (CIU_INTx_EN*[MII])
						and this local interrupt mask bit is set, than an 
                                                interrupt is reported for an Inbound Ring Threshold 
                                                Exceeded event(IRTHRESH). 

 <4> DATA_DRPENA  R/W    0x0         0x0        Data was dropped due to RX FIFO full Interrupt       
                                                enable. If both the global interrupt mask bits 
                                                (CIU_INTx_EN*[MII]) and the local interrupt mask 
                                                bit(DATA_DRPENA) is set, than an interrupt is 
                                                reported for this event. 

 <5>     IRUNENA  R/W    0x0         0x0        IRCNT UnderFlow Interrupt Enable                     
						If both the global interrupt mask bits (CIU_INTx_EN*[MII])
						and this local interrupt mask bit is set, than an 
                                                interrupt is reported for an IRCNT underflow condition
						MIX_ISR[IRUN]. 

 <6>     ORUNENA  R/W    0x0         0x0        ORCNT UnderFlow Detected Enable                      
						If both the global interrupt mask bits (CIU_INTx_EN*[MII])
						and this local interrupt mask bit is set, than an 
                                                interrupt is reported for an ORCNT underflow condition
						MIX_ISR[ORUN]. 

 <7>     TSENA    R/W    0x0         0x0        TimeStamp Interrupt Enable                           
						If both the global interrupt mask bits (CIU_INTx_EN*[MII])
						and this local interrupt mask bit is set, than an 
                                                interrupt is reported for an Outbound Ring with Timestamp
                                                event (see: MIX_ISR[TS]). 
                                                
 <63:8>  NS       RAZ      NS          NS       RESERVED                                             
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_REMCNT = MIX Ring Buffer Remainder Counts (useful for HW debug only)
 *
 * Description: 
 *  NOTE: To read the MIX_REMCNT register, a device would issue an IOBLD64 directed at the MIO.
 * 

     ==============================================================
     MIX(0..1)_REMCNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <19:0>  OREMCNT   RO      0x0         0x0      Remaining O-Ring Buffer Count                         
                                                Reflects the # of unused/remaining O-Ring Entries 
                                                that HW  currently detects in the O-Ring Buffer.  
                                                HW uses this value to detect O-Ring Doorbell overflows.                                              
                                                (see: MIX_ISR[ODBLOVF])

                                                When SW writes the MIX_IRING1[OSIZE], the OREMCNT
                                                is loaded with MIX_ORING2[OSIZE] value. (NOTE: OSIZE should only 
                                                be written at power-on, when it's known that there are
                                                no O-Ring Entries currently in use by HW). 
                                                When SW writes to the ODBELL register, the OREMCNT
                                                is decremented by the CSR write value. 
                                                When SW writes to MIX_[OREMCNT], the OREMCNT is decremented
                                                by the CSR write value.  

 <31:20> NS       RAZ      NS          NS        RESERVED                                             

 <51:32> IREMCNT   RO      0x0         0x0      Remaining I-Ring Buffer Count                         
                                                Reflects the # of unused/remaining I-Ring Entries 
                                                that HW  currently detects in the I-Ring Buffer.  
                                                HW uses this value to detect I-Ring Doorbell overflows.                                              
                                                (see: MIX_ISR[IDBLOVF])

                                                When SW writes the MIX_IRING1[ISIZE], the IREMCNT
                                                is loaded with MIX_IRING2[ISIZE] value. (NOTE: ISIZE should only 
                                                be written at power-on, when it's known that there are
                                                no I-Ring Entries currently in use by HW). 
                                                When SW writes to the IDBELL register, the IREMCNT
                                                is decremented by the CSR write value. 
                                                When HW issues an IRing Write Request(onto NCB Bus),
                                                the IREMCNT is incremented by 1. 

 <63:52> NS       RAZ      NS          NS        RESERVED                                             
----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_TSTAMP = MIX TimeStamp Register
 *
 * Description: 
 *  NOTE: To read the MIX_TSTAMP register, a device would issue an IOBLD64 directed at the MIO.
 * 

     ==============================================================
     MIX(0..1)_TSTAMP Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  TSTAMP   RO       0x0         0x0       MIX TimeStamp Value                                  
                                                 When SW sets up an ORING Entry with [47]=1(TSTAMP),
                                                 The packet is tagged with a specal SOP w/TSTAMP flag
                                                 as it is sent to the AGL. 
                                                 Later the AGL will send "sample" strobe(s) to capture
                                                 a global 64bit timestamp value followed by a "commit"
                                                 strobe which writes the last sampled value into the
                                                 outbound Timestamp fifo (max depth=4) and increments
                                                 the MIX_TSCTL[TSCNT] register to indicate the total
                                                 #of pending Timestamp interrupts.   
                                         
                                                 If the #pending Timestamp interrupts (MIX_TSCTL[TSCNT])
                                                 is greater than the MIX_CTL[TS_THRESH] value, then 
                                                 a programmable interrupt is also triggered (see:
                                                 MIX_ISR[TS] MIX_INTENA[TSENA]).  

                                                 SW will then read the MIX*_TSTAMP[TSTAMP] 
                                                 register value, and MUST THEN write the MIX_TSCTL
                                                 register, which will decrement MIX_TSCTL[TSCNT] register,
                                                 to indicate that a single timestamp interrupt has  
                                                 been serviced.

                                                 NOTE: The MIO-MIX HW tracks upto MAX=4 outstanding 
                                                 timestamped outbound packets at a time. All subsequent
                                                 ORING Entries w/SOP-TSTAMP will be stalled until 
                                                 SW can service the 4 outstanding interrupts.
                                                 SW can read the MIX_TSCTL register to determine the
                                                 #pending timestamp interrupts(TSCNT) as well as the 
                                                 #outstanding timestamp requests in flight(TSTOT), as 
                                                 well as the #of available timestamp entries (TSAVL).   

						SW NOTE: A MIX_TSTAMP read when MIX_TSCTL[TSCNT]=0, will
                                                result in a return value of all zeroes. SW should only
                                                read this register when MIX_ISR[TS]=1 (or when 
                                                MIX_TSCTL[TSCNT] != 0) to retrieve the timestamp value 
                                                recorded by HW. If SW reads the TSTAMP when HW has not 
                                                recorded a valid timestamp, then an  all zeroes value is 
                                                returned. 

----------------------------------------------------------------------------------------------------
===
 *
 *                  MIX_TSCTL = MIX TimeStamp Control Register
 *
 * Description: 
 *  NOTE: To read the MIX_TSCTL register, a device would issue an IOBLD64 directed at the MIO.
 * 

     ==============================================================
     MIX(0..1)_TSCTL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <4:0>   TSCNT    RO       0x0         0x0       # of pending MIX TimeStamp Interrupts                
                                                 For o63: TSCNT must never exceed MAX=4 (implementation
                                                 depth of timestamp fifo)
 <7:5>   NS       RAZ      NS          NS        RESERVED                                             
 <12:8>  TSTOT    RO       0x0         0x0       # of pending MIX TimeStamp Requests in-flight        
                                                 For o63: TSTOT must never exceed MAX=4 (implementation
                                                 depth of timestamp fifo)
 <15:13> NS       RAZ      NS          NS        RESERVED                                             
 <20:16> TSAVL    RO       0x4         0x4       # of MIX TimeStamp Entries Available for use         
                                                 For o63: TSAVL MAX=4 (implementation
                                                 depth of timestamp fifo)
                                                 TSAVL = [IMPLEMENTATION_DEPTH=4(MAX) - TSCNT]
 <23:21> NS       RAZ      NS          NS        RESERVED                                             

 <63:24> NS       RAZ      NS          NS        RESERVED                                             
Notes:
SW can read the MIX_TSCTL register to determine the #pending timestamp interrupts(TSCNT) 
as well as the #outstanding timestamp requests in flight(TSTOT), as well as the #of available 
timestamp entries (TSAVL) in the timestamp fifo. 
A write to the MIX_TSCTL register will advance the MIX*_TSTAMP fifo head ptr by 1, and 
also decrements the MIX*_TSCTL[TSCNT] and MIX*_TSCTL[TSTOT] pending count(s) by 1. 
For example, if SW reads MIX*_TSCTL[TSCNT]=2 (2 pending timestamp interrupts), it would immediately 
issue this sequence: 
     1) MIX*_TSTAMP[TSTAMP] read followed by MIX*_TSCTL write 
	   [gets timestamp value/pops timestamp fifo and decrements pending count(s) by 1]
     2) MIX*_TSTAMP[TSTAMP] read followed by MIX*_TSCTL write 
           [gets timestamp value/pops timestamp fifo and decrements pending count(s) by 1]

SWNOTE: A MIX_TSCTL write when MIX_TSCTL[TSCNT]=0 (ie: TimeStamp Fifo empty), then the write is ignored. 
----------------------------------------------------------------------------------------------------
===

 *
 *                  MIX_BIST = MIX BIST Register
 *
 * Description: 
 *  NOTE: To read the MIX_BIST register, a device would issue an IOBLD64 directed at the MIO.
 * 

     ==============================================================
     MIX(0..1)_BIST Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     ORFDAT    RO       0           0         Bist Results for MIX O-Ring Entry RAM                
                                                 0: GOOD (or bist in progress/never run)                  	                  
                                                 1: BAD				                        	                 
<1>     IRFDAT    RO       0           0         Bist Results for MIX I-Ring Entry RAM                
                                                 0: GOOD (or bist in progress/never run)                  	                  
                                                 1: BAD				                        	                 
<2>     IPFDAT    RO       0           0         Bist Results for MIX Inbound Packet RAM              
                                                 0: GOOD (or bist in progress/never run)                  	                  
                                                 1: BAD				                        	                 
<3>     MRQDAT    RO       0           0         Bist Results for NBR CSR RdReq RAM                   
                                                 0: GOOD (or bist in progress/never run)                  	                  
                                                 1: BAD				                        	                 
<4>     MRGDAT    RO       0           0         Bist Results for AGI MRG Buffer RAM                  
                                                 0: GOOD (or bist in progress/never run)                  	                  
                                                 1: BAD				                        	                 
<5>     OPFDAT    RO       0           0         Bist Results for AGO OPF Buffer RAM                  
                                                 0: GOOD (or bist in progress/never run)                  	                  
                                                 1: BAD				                        	                 
<63:6>  NS        RAZ      0           0         RESERVED				              
----------------------------------------------------------------------------------------------------
===
 

     ==============================================================
     NDF_CMD Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  NF_CMD   R/W      0x0          NS       8 Command Bytes				    |   

Notes:

When SW reads this csr, RD_VAL bit in NDF_MISC csr is cleared to 0. SW must always write all 8 bytes whenever it writes
this csr. If there are fewer than 8 bytes left in the command sequence that SW wants the NAND flash controller to execute, it
must insert Idle (WAIT) commands to make up 8 bytes. SW also must ensure there is enough vacancy in the command fifo to accept these
8 bytes, by first reading the FR_BYT field in the NDF_MISC csr.

Like all NDF_... registers, 64-bit operations must be used to access this register

----------------------------------------------------------------------------------------------------
===


     ==============================================================
     NDF_MISC Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:28> NS       RAZ      NS          NS        Reserved                                           |   
 <27>    MB_DIS   R/W       0x0	       NS        Disable multibit error hangs and allow boot loads  |   
						 or boot dma's proceed as if no multi bit errors    |
						 occured. HW will fix single bit errors as usual    |
 <26:24> NBR_HWM  R/W      0x3	       0x3       Hi Water mark for NBR fifo or load/stores          |   
 <23:18> WAIT_CNT R/W	   0x14	       NS	 WAIT input filter count			    |   
 <17:7>  FR_BYT   RO       0x0         NS        Number of unfilled Command fifo bytes              |   
 <6>     RD_DONE  R/W1C    0x0         0x0       This W1C bit is set to 1 by HW when it completes   |   
						 command fifo read out, in response to RD_CMD	    |
 <5>     RD_VAL   RO       0x0         NS        This RO bit is set to 1 by HW when it reads next 8 |   
						 bytes from Command fifo into the NDF_CMD csr       |
						 SW reads NDF_CMD csr, HW clears this bit to 0      |
 <4>     RD_CMD   R/W      0x0         0x0       When 1, HW reads out contents of the Command fifo 8|   
						 bytes at a time into the NDF_CMD csr               |
 <3>     BT_DMA   R/W      0x0	       NS        When set to 1, boot time dma is enabled            |   
 <2>     BT_DIS   R/W      0x0	       0x1	 When boot operation is over SW must set to 1       |   
						 causes boot state mchines to sleep                 |
 <1>     EX_DIS   R/W      0x0	       0x0	 When set to 1, suspends execution of commands at   |   
						 next command in the fifo.			    |
 <0>     RST_FF   R/W      0x0	       0x0	 1=reset command fifo to make it empty, 	    |   
						 0=normal operation				    |

Notes:

NBR_HWM this field specifies the high water mark for the NCB outbound load/store commands receive fifo. 
  the fifo size is 16 entries.

WAIT_CNT this field allows glitch filtering of the WAIT_n input to octeon, from Flash Memory. The count
  represents number of eclk cycles.

FR_BYT  this field specifies # of unfilled bytes in the command fifo. Bytes become unfilled as commands
  complete execution and exit. (fifo is 256 bytes when BT_DIS=0,  and 1536 bytes when BT_DIS=1)

RD_DONE this W1C bit is set to 1 by HW when it reads the last 8 bytes out of the command fifo,
  in response to RD_CMD bit being set to 1 by SW.

RD_VAL  this read only bit is set to 1 by HW when it reads next 8 bytes from command fifo in response
  to RD_CMD bit being set to 1. A SW read of NDF_CMD csr clears this bit to 0.

RD_CMD  this R/W bit starts read out from the command fifo, 8 bytes at a time. SW should first read the
  RD_VAL bit in  this csr to see if next 8 bytes from the command fifo are available in the
  NDF_CMD csr. All command fifo reads start and end on an 8 byte boundary. A RD_CMD in the
  middle of command execution will cause the execution to freeze until RD_DONE is set to 1. RD_CMD
  bit will be cleared on any NDF_CMD csr write by SW.

BT_DMA  this indicates to the NAND flash boot control state machine that boot dma read can begin.
  SW should set this bit to 1 after SW has loaded the command fifo. HW sets the bit to 0
  when boot dma command execution is complete. If chip enable 0 is not nand flash, this bit is
  permanently 1'b0 with SW writes ignored. Whenever BT_DIS=1, this bit will be 0.

BT_DIS  this R/W bit indicates to NAND flash boot control state machine that boot operation has ended.
  whenever this bit changes from 0 to a 1, the command fifo is emptied as a side effect. This bit must
  never be set when booting from nand flash and region zero is enabled.

EX_DIS  When 1, command execution stops after completing execution of all commands currently in the command
  fifo. Once command execution has stopped, and then new commands are loaded into the command fifo, execution
  will not resume as long as this bit is 1. When this bit is 0, command execution will resume if command fifo
  is not empty. EX_DIS should be set to 1, during boot i.e. when BT_DIS = 0.

RST_FF  reset command fifo to make it empty, any command inflight is not aborted before reseting
  the fifo. The fifo comes up empty at the end of power on reset.

Like all NDF_... registers, 64-bit operations must be used to access this register

----------------------------------------------------------------------------------------------------
===


     ==============================================================
     NDF_ECC_CNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved                                           |   
 <31:8>  XOR_ECC  RO	   0x0	       NS        result of XOR of ecc read bytes and ecc genarated  |   
						 bytes. The value pertains to the last 1 bit ecc err|
 <7:0>   ECC_ERR  RO       0x0         NS        Count = # of 1 bit errors fixed during boot   	    |   
						 This count saturates instead of wrapping around.   |
Notes:
XOR_ECC[31:8] = {ecc_gen_byt258, ecc_gen_byt257, ecc_gen_byt256} xor {ecc_258, ecc_257, ecc_256}
	ecc_258, ecc_257 and ecc_256 are bytes stored in Nand Flash and read out during boot
	ecc_gen_byt258, ecc_gen_byt257, ecc_gen_byt256 are generated from data read out from Nand Flash

Like all NDF_... registers, 64-bit operations must be used to access this register

----------------------------------------------------------------------------------------------------
===



     ==============================================================
     NDF_BT_PG_INFO Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:11> NS       RAZ      NS          NS        Reserved                                           |   
 <10:7>  T_MULT   R/W      0x9         NS        Boot time TIM_MULT[3:0] field of SET__TM_PAR[63:0] |   
						 command                                            |
 <6:3>   ADR_CYC  R/W      0x8         NS        # of column address cycles                         |   
 <2:0>   SIZE     R/W      0x0         NS        bytes per page in the nand device                  |   

Notes:

NDF_BT_PG_INFO provides page size and number of column plus row address cycles information. SW writes to this CSR
during boot from Nand Flash. Additionally SW also writes the multiplier value for timing parameters. This value is
used during boot, in the SET_TM_PARAM command. This information is used only by the boot load state machine and is
otherwise a don't care, once boot is disabled. Also, boot dma's do not use this value.

Bytes per Nand Flash page = 2 ** (SIZE + 1) times 256 bytes.
512, 1k, 2k, 4k, 8k, 16k, 32k and 64k are legal bytes per page values

Legal values for ADR_CYC field are 3 through 8. SW CSR writes with a value less than 3 will write a 3 to this
field, and a SW CSR write with a value greater than 8, will write an 8 to this field.

Like all NDF_... registers, 64-bit operations must be used to access this register

----------------------------------------------------------------------------------------------------
===



     ==============================================================
     NDF_INT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ      NS          NS        Reserved                                           |   
 <6>     OVRF     R/W1C    0x0         NS        NDF_CMD write when fifo is full. Generally a       |   
						 fatal error.                                       |
 <5>     ECC_MULT R/W1C    0x0         NS        Multi bit ECC error detected during boot           |   
 <4>     ECC_1BIT R/W1C    0x0         NS        Single bit ECC error detected and fixed during boot|   
 <3>     SM_BAD   R/W1C    0x0         NS        One of the state machines in a bad state           |   
 <2>     WDOG     R/W1C    0x0         NS        Watch Dog timer expired during command execution   |   
 <1>     FULL     R/W1C    0x0         NS        Command fifo is full       			    |   
 <0>     EMPTY    R/W1C    0x0         NS        Command fifo is empty       			    |   

Notes:

FULL status is updated when the command fifo becomes full as a result of SW writing a new command to it.

EMPTY status is updated when the command fifo becomes empty as a result of command execution unit fetching the
last instruction out of the command fifo.

Like all NDF_... registers, 64-bit operations must be used to access this register

----------------------------------------------------------------------------------------------------
===



     ==============================================================
     NDF_INT_EN Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ      NS          NS        Reserved                                           |   
 <6>     OVRF     R/W      0x0         NS        Wrote to a full command fifo                       |   
 <5>     ECC_MULT R/W      0x0         NS        Multi bit ECC error detected during boot           |   
 <4>     ECC_1BIT R/W      0x0         NS        Single bit ECC error detected and fixed during boot|   
 <3>     SM_BAD   R/W      0x0         NS        One of the state machines in a bad state           |   
 <2>     WDOG     R/W      0x0         NS        Watch Dog timer expired during command execution   |   
 <1>     FULL     R/W      0x0         NS        Command fifo is full       			    |   
 <0>     EMPTY    R/W      0x0         NS        Command fifo is empty       			    |   

Notes:

Like all NDF_... registers, 64-bit operations must be used to access this register

----------------------------------------------------------------------------------------------------
===



     ==============================================================
     NDF_DRBELL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |   
 <7:0>   CNT      R/W      0x0         NS        Doorbell count register, 2's complement 8 bit value|   

Notes:

SW csr writes will increment CNT by the signed 8 bit value being written. SW csr reads return the current CNT value.
HW will also modify the value of the CNT field. Everytime HW executes a BUS_ACQ[15:0] command, to arbitrate and win the
flash bus, it decrements the CNT field by 1. If the CNT field is already 0 or negative, HW command execution unit will
stall when it fetches the new BUS_ACQ[15:0] command, from the command fifo. Only when the SW writes to this CSR with a
non-zero data value, can the execution unit come out of the stalled condition, and resume execution.

The intended use of this doorbell CSR is to control execution of the Nand Flash commands. The NDF execution unit
has to arbitrate for the flash bus, before it can enable a Nand Flash device connected to the Octeon chip, by
asserting the device's chip enable. Therefore SW should first load the command fifo, with a full sequence of
commands to perform a Nand Flash device task. This command sequence will start with a bus acquire command and
the last command in the sequence will be a bus release command. The execution unit will start execution of
the sequence only if the [CNT] field is non-zero when it fetches the bus acquire command, which is the first
command in this sequence. SW can also, load multiple such sequences, each starting with a chip enable command
and ending with a chip disable command, and then write a non-zero data value to this csr to increment the
CNT field by the number of the command sequences, loaded to the command fifo.

Like all NDF_... registers, 64-bit operations must be used to access this register

----------------------------------------------------------------------------------------------------
===




     ==============================================================
     NDF_ST_REG Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS        RAZ      NS         NS        Reserved                                           |   
 <15>    EXE_IDLE  RO	   0x1	       NS	 Command Execution status 1=IDLE, 0=Busy            |   
						 1 means execution of command sequence is complete  |
						 and command fifo is empty                          |
 <14:11> EXE_SM	   RO	   0x0	       NS	 Command Execution State machine states             |   
 <10:7>  BT_SM	   RO	   0x0	       NS	 Boot load and Boot dma State machine states        |   
 <6>	 RD_FF_BAD RO	   0x0	       NS	 CMD fifo read back State machine in bad state      |   
 <5:4>	 RD_FF	   RO	   0x0	       NS	 CMD fifo read back State machine states            |   
 <3>	 MAIN_BAD  RO	   0x0	       NS	 Main State machine in bad state                    |   
 <2:0>	 MAIN_SM   RO	   0x0	       NS	 Main State machine states                          |   
Notes:
 This CSR aggregates all state machines used in nand flash controller for debug.
Like all NDF_... registers, 64-bit operations must be used to access this register

----------------------------------------------------------------------------------------------------
===

 
 *
 * PCS_MR_CONTROL_REG = Control Register0
 *
 *

     ==============================================================
     PCS(0)_MR(0..3)_CONTROL_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |   
 <15>    RESET    R/W      0x0         0         1=SW Reset, the bit will return to 0 after pcs has |	
						 been reset. Takes 32 eclk cycles to reset pcs      |
 <14>    LOOPBCK1 R/W      0x0         0         0=normal operation, 1=loopback. The loopback mode  |   
						 will return(loopback) tx data from GMII tx back to |
						 GMII rx interface. The loopback happens in the pcs |
						 module. Auto Negotiation will be disabled even if  |
						 the AN_EN bit is set, during loopback              |
 <13>    SPDLSB   R/W      0x0         0         See bit 6 description				    |   
 <12>    AN_EN    R/W      0x0         0         1=AN Enable, 0=AN Disable                          |   
 <11>    PWR_DN   R/W      0x1         0         1=Power Down(HW reset), 0=Normal operation         |   
 <10>    NS       RAZ      NS          NS        Reserved				            |   
 <9>     RST_AN   R/W      0x0         0         If bit 12 is set and bit 3 of status reg is 1      |   
						 Auto Negotiation begins. Else,SW writes are ignored|
						 and this bit remians at 0. This bit clears itself  |
						 to 0, when AN starts.                              |
 <8>     DUP      R/W      0x1         1         1=full duplex, 0=half duplex; effective only if AN |   
						 disabled. If status register bits [15:9] and and   | 
                                                 extended status reg bits [15:12] allow only one    |
						 duplex mode|, this bit will correspond to that     |
						 value and any attempt to write will be ignored.    |
 <7>     COLTST   R/W      0x0         0         1=enable COL signal test, 0=disable test           |   
						 During COL test, the COL signal will reflect the   |
                                                 GMII TX_EN signal with less than 16BT delay        |
 <6>	 SPDMSB   R/W      0x1         0x1       {<6>, <13>}Link Speed effective only if AN disabled|   
						   0    0  10Mb/s                                   |
						   0    1  100Mb/s                                  |
						   1    0  1000Mb/s                                 |
						   1    1  NS                                       |
 <5>     UNI      R/W      0x0         0x0        Unidirectional (Std 802.3-2005, Clause 66.2)      |   
						  This bit will override the AN_EN bit and disable  |
						  auto-negotiation variable mr_an_enable, when set  |       						  
						  Used in both 1000Base-X and SGMII modes           |
 <4:0>   NS       RAZ      NS          NS         Reserved                                          |   
----------------------------------------------------------------------------------------------------
===
 * NOTE:
 *Whenever AN_EN bit[12] is set, Auto negotiation is allowed to happen. The results
 *of the auto negotiation process set the fields in the AN_RESULTS reg. When AN_EN is not set,
 *AN_RESULTS reg is don't care. The effective SPD, DUP etc.. get their values
 *from the pcs_mr_ctrl reg.



 *
 * PCS_MR_STATUS_REG = Status Register1
 *
 *

     ==============================================================
     PCS(0)_MR(0..3)_STATUS_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |    
 <15>    HUN_T4   RO       0x0         0         1 means 100Base-T4 capable                         |	 
 <14>    HUN_XFD  RO       0x0         0         1 means 100Base-X Full Duplex                      |	 
 <13>	 HUN_XHD  RO       0x0         0         1 means 100Base-X Half Duplex                      |	 
 <12>    TEN_FD   RO       0x0         0         1 means 10Mb/s Full Duplex                         | 	 
 <11>    TEN_HD   RO       0x0         0         1 means 10Mb/s Half Duplex                         |	 
 <10>    HUN_T2FD RO       0x0         0         1 means 100Base-T2 Full Duplex                     |	 
 <9>     HUN_T2HD RO       0x0         0         1 means 100Base-T2 Half Duplex                     |	 
 <8>     EXT_ST   RO       0x1         1         1 means extended status info in reg15              |	 
 <7>     NS       RAZ      0x0         0         Reserved                                           |    
 <6>     PRB_SUP  RO       0x1         1         1 means able to work without preamble bytes at the |	 
						 beginning of frames. 0 means not able to accept    |
						 frames without preamble bytes preceding them.      |
 <5>     AN_CPT   RO       0x0         0         1 means Auto Negotiation is complete and the       |	 
						 contents of the an_results_reg are valid.          |
 <4>     RM_FLT   RO       0x0         0         Set to 1 when remote flt condition occurs. This bit|	 
						 implements a latching Hi behavior. It is cleared by|
						 SW read of this reg or when reset bit [15] in      |
						 Control Reg is asserted.                           |
						 See an adv reg[13:12] for flt conditions           | 
 <3>     AN_ABIL  RO       0x1         1         1 means Auto Negotiation capable                   |	 
 <2>     LNK_ST   RO       0x0         1         1=link up, 0=link down. Set during AN process      |	 
						 Set whenever XMIT=DATA. Latching Lo behavior when  |
						 link goes down. Link down value of the bit stays   |
						 low until SW reads the reg.                        |
 <1>     NS       RAZ      0x0         0         Reserved				            |    
 <0>     EXTND    RO       0x0         0         Always 0, no extended capability regs present      |	 
----------------------------------------------------------------------------------------------------
===
* Bits [15:9] in the Status Register indicate ability to operate as per those signalling specification,
* when misc ctl reg MAC_PHY bit is set to MAC mode. Bits [15:9] will all, always read 1'b0, indicating
* that the chip cannot operate in the corresponding modes.
*
* Bit [4] RM_FLT is a don't care when the selected mode is SGMII.
*
*


*
* PCS_AN_ADV_REG = AN Advertisement Register4
*
*

     ==============================================================
     PCS(0)_AN(0..3)_ADV_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |   
 <15>    NP       RO       0x0         0         Always 0, no next page capability supported        |	
 <14>    NS       RAZ      0x0         0         Reserved		                            |   
 <13:12> REM_FLT  R/W      0x0         0x0       {<13>,<12>}                                        |   
						   0    0  Link OK  XMIT=DATA                       |
						   0    1  Link failure (loss of sync, XMIT!= DATA) |
						   1    0  local device Offline                     |
						   1    1  AN Error failure to complete AN          |
							   AN Error is set if resolution function   |
							   precludes operation with link partner    |
 <11:9>  NS       RAZ      0x0         0x0       reserved                                           |   
 <8:7>   PAUSE    R/W      0x0         0x0       {<8>, <7>} Pause frame flow capability across link |   
							    Exchanged during Auto Negotiation       |
						   0    0  No Pause                                 |
						   0    1  Symmetric pause                          |
						   1    0  Asymmetric Pause                         |
						   1    1  Both symm and asymm pause to local device|
 <6>     HFD      R/W      0x1         1         1 means local device Half Duplex capable           |   
 <5>     FD       R/W      0x1         1         1 means local device Full Duplex capable           |   
 <4:0>   NS       RAZ      0x0         0         reserved                                           |   
----------------------------------------------------------------------------------------------------
===




*
* PCS_AN_LP_ABIL_REG = AN link Partner Ability Register5
* as per IEEE802.3 Clause 37
*

     ==============================================================
     PCS(0)_AN(0..3)_LP_ABIL_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved                                           |   
 <15>    NP       RO       0x0         0         1=lp next page capable, 0=lp not next page capable |	
 <14>    ACK      RO       0x0         NS        1=Acknowledgement received                         |   
 <13:12> REM_FLT  RO       0x0         0         {<13>,<12>} Link Partner's link status             |   
						   0    0  Link OK                                  |
						   0    1  Offline                                  |
						   1    0  Link failure                             |
						   1    1  AN Error                                 | 
 <11:9>  NS       RAZ      0x0         0         Reserved                                           |   
 <8:7>   PAUSE    RO       0x0         0         {<8>, <7>} Link Partner Pause setting              |   
						   0    0  No Pause                                 |
						   0    1  Symmetric pause                          |
						   1    0  Asymmetric Pause                         |
						   1    1  Both symm and asymm pause to local device|
 <6>     HFD      RO       0x0         0         1 means link partner Half Duplex capable           |   
 <5>     FD       RO       0x0         0         1 means link partner Full Duplex capable           |   
 <4:0>   NS       RAZ      0x0         0         reserved                                           |   
----------------------------------------------------------------------------------------------------
===




*
* PCS_AN_RESULTS_REG = AN Results Register
* 
*

     ==============================================================
     PCS(0)_AN(0..3)_RESULTS_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ      NS          NS        Reserved                                           |   
 <6:5>   PAUSE    RO       0x00        0x00      {<6>, <5>} PAUSE Selection (Don't care for SGMII)  |   
						   0    0  Disable Pause, TX and RX                 |
						   0    1  Enable pause frames RX only              |
						   1    0  Enable Pause frames TX only              |
						   1    1  Enable pause frames TX and RX            |
 <4:3>   SPD      RO       0x0         0x0      {<4>, <3>} Link Speed Selection                     |	
						   0    0  10Mb/s                                   |
						   0    1  100Mb/s                                  |
						   1    0  1000Mb/s                                 |
						   1    1  NS                                       |
 <2>     AN_CPT   RO       0x0         1         1=AN Completed, 0=AN not completed or failed       |	
 <1>     DUP      RO       0x0         0         1=Full Duplex, 0=Half Duplex                       |	
 <0>     LINK_OK  RO       0x0         0         1=Link up(OK), 0=Link down                         |   
----------------------------------------------------------------------------------------------------
===
 * NOTE:
 * an_results_reg is don't care when AN_OVRD is set to 1. If AN_OVRD=0 and AN_CPT=1
 * the an_results_reg is valid.
 * 



*
* PCS_AN_EXT_ST_REG = AN Extended Status Register15
* as per IEEE802.3 Clause 22
*

     ==============================================================
     PCS(0)_AN(0..3)_EXT_ST_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved                                           |   
 <15>    THOU_XFD RO       0x1         1         1 means PHY is 1000BASE-X Full Dup capable         |   
 <14>    THOU_XHD RO       0x1         1         1 means PHY is 1000BASE-X Half Dup capable         |   
 <13>    THOU_TFD RO       0x0         0         1 means PHY is 1000BASE-T Full Dup capable         |   
 <12>    THOU_THD RO       0x0         0         1 means PHY is 1000BASE-T Half Dup capable         |   
 <11:0>  NS       RO       0x0         0         Reserved                                           |   
----------------------------------------------------------------------------------------------------
===




*
* PCS_LINK_TIMER_COUNT_REG = 1.6ms nominal link timer register
*

     ==============================================================
     PCS(0)_LINK(0..3)_TIMER_COUNT_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved                                           |   
 <15:0>  COUNT    R/W      0x446       NS        (core clock period times 1024) times "COUNT" should|   
						 be 1.6ms(SGMII)/10ms(otherwise) which is the link  | 
						 timer used in auto negotiation.                    |
						 Reset assums a 700MHz eclk for 1.6ms link timer    |
----------------------------------------------------------------------------------------------------
===



*
* PCS_POLARITY_REG = TX_RX polarity reg
*

     ==============================================================
     PCS(0)_TX_RX(0..3)_POLARITY_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ      NS          NS        Reserved                                           |   
 <3>     RXOVRD   R/W      0x0	       0 	 When 0, <2> determines polarity                    |   
						 when 1, <1> determines polarity                    |
 <2>     AUTORXPL RO       0x0         0         Auto RX polarity detected. 1=inverted, 0=normal    |   
						 This bit always represents the correct rx polarity |
						 setting needed for successful rx path operartion,  |
						 once a successful code group sync is obtained      |
 <1>     RXPLRT   R/W      0x0         0         1 is inverted polarity, 0 is normal polarity       |   
 <0>     TXPLRT   R/W      0x0         0         1 is inverted polarity, 0 is normal polarity       |   
----------------------------------------------------------------------------------------------------
===
*
*Note:
*r_tx_rx_polarity_reg bit [2] will show correct polarity needed on the link receive path after code grp synchronization is achieved.
*




*
* PCS_RX_SYNC_REG = Code Group synchronization reg
*

     ==============================================================
     PCS(0)_RX(0..3)_SYNC_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ      NS          NS        Reserved                                           |   
 <1>     SYNC     RO       0x0         0         1 means code group synchronization achieved        |   
 <0>     BIT_LOCK RO       0x0         0         1 means bit lock achieved                          |   
----------------------------------------------------------------------------------------------------
===



*
* PCS_RX_STATES_REG = RX State Machines states register
*

     ==============================================================
     PCS(0)_RX(0..3)_STATES_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved                                           |   
 <15>    RX_BAD   RO       0x0         0         Receive state machine in an illegal state          |   
 <14:10> RX_ST    RO       0x0         0         Receive state machine state                        |   
 <9>     SYNC_BAD RO       0x0         0         Receive synchronization SM in an illegal state     |   
 <8:5>   SYNC     RO       0x0         0         Receive synchronization SM state                   |   
 <4>     AN_BAD   RO       0x0         0         Auto Negotiation state machine in an illegal state |   
 <3:0>   AN_ST    RO       0x0         0         Auto Negotiation state machine state               |   
----------------------------------------------------------------------------------------------------
===



*
* PCS_TX_STATES_REG = TX State Machines states register
*

     ==============================================================
     PCS(0)_TX(0..3)_STATES_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ      NS          NS        Reserved                                           |   
 <6:5>   XMIT     RO       0x00        NS    	 0=undefined, 1=config, 2=idle, 3=data              |   
 <4>     TX_BAD   RO       0x0         0         Xmit state machine in a bad state                  |   
 <3:0>   ORD_ST   RO       0x0         0         Xmit ordered set state machine state               |   
----------------------------------------------------------------------------------------------------
===



*
* SGMII AN Advertisement Register (sent out as tx_config_reg)
*

     ==============================================================
     PCS(0)_SGM(0..3)_AN_ADV_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved                                           |   
 <15>    LINK     R/W      0x0         1         Link status 1 Link Up, 0 Link Down                 |   
 <14>    ACK      RO       0x0         0         Auto negotiation ack                               |   
 <13>    NS       RAZ      0x0         NS        Reserved for future use                            |   
 <12>    DUP      R/W      0x1         1         Duplex mode 1=full duplex, 0=half duplex           |   
 <11:10> SPEED    R/W      0x2         0x2       Link Speed                                         |   
						   0    0  10Mb/s                                   |
						   0    1  100Mb/s                                  |
						   1    0  1000Mb/s                                 |
						   1    1  NS                                       |
 <9:1>   NS       RAZ      0x0         NS        Reserved for future use                            |   
 <0>     ONE      RO       0x1         1         Always set to match tx_config_reg<0>               |   
----------------------------------------------------------------------------------------------------
===

* NOTE: The SGMII AN Advertisement Register above will be sent during Auto Negotiation if the MAC_PHY mode bit in misc_ctl_reg
* is set (1=PHY mode). If the bit is not set (0=MAC mode), the tx_config_reg[14] becomes ACK bit and [0] is always 1.
* All other bits in tx_config_reg sent will be 0. The PHY dictates the Auto Negotiation results.





*
* SGMII LP Advertisement Register (received as rx_config_reg)
*

     ==============================================================
     PCS(0)_SGM(0..3)_LP_ADV_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved                                           |   
 <15>    LINK     RO       0x0         1         Link status 1 Link Up, 0 Link Down                 |   
 <14>    NS       RO       0x0         NS        Reserved for auto negotiation ack                  |   
 <13>    NS       RAZ      0x0         NS        Reserved for future use                            |   
 <12>    DUP      RO       0x0         1         Duplex mode 1=full duplex, 0=half duplex           |   
 <11:10> SPEED    RO       0x0         2         Link Speed                                         |   
						   0    0  10Mb/s                                   |
						   0    1  100Mb/s                                  |
						   1    0  1000Mb/s                                 |
						   1    1  NS                                       |
 <9:1>   NS       RAZ      0x0         NS        Reserved for future use                            |   
 <0>     ONE      RO       0x1         1         Always set to match tx_config_reg<0>               |   
----------------------------------------------------------------------------------------------------
===



*
* SGMII Misc Control Register
*

     ==============================================================
     PCS(0)_MISC(0..3)_CTL_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:13> NS       RAZ      NS          NS        Reserved                                           |   
 <12>    SGMII    RO       NS          NS        1=SGMII or 1000Base-X mode selected,               |   
						 0=XAUI or PCIE mode selected                       |
						 This bit represents pi_qlm1/3_cfg[1:0] pin status  |
 <11>    GMXENO   R/W      0x0         0x0       GMX Enable override. When set to 1, forces GMX to  |   
						 appear disabled. The enable/disable status of GMX  |
						 is checked only at SOP of every packet.            |
 <10>    LOOPBCK2 R/W      0x0         0         Sets external loopback mode to return rx data back |   
						 out via tx data path. 0=no loopback, 1=loopback    |
 <9>     MAC_PHY  R/W      0x0         0         0=MAC, 1=PHY decides the tx_config_reg value to be |   
						 sent during auto negotiation.                      |
						 See SGMII spec ENG-46158 from CISCO                |
 <8>     MODE     R/W      0x0         0         0=SGMII or 1= 1000 Base X                          |   
 <7>     AN_OVRD  R/W      0x0         0         0=disable, 1= enable over ride AN results          |   
						 Auto negotiation is allowed to happen but the	    |
						 results are ignored when set. Duplex and Link speed|
						 values are set from the pcs_mr_ctrl reg                |
 <6:0>   SAMP_PT  R/W      0x1         NS        Byte# in elongated frames for 10/100Mb/s operation |   
						 for data sampling on RX side in PCS.               |
						 Recommended values are 0x5 for 100Mb/s operation   |
						 and 0x32 for 10Mb/s operation.                     |
						 For 10Mb/s operaton this field should be set to a  |
						 value less than 99 and greater than 0. If set out  |
						 of this range a value of 50 will be used for actual|
						 sampling internally without affecting the CSR field|
						 For 100Mb/s operation this field should be set to a|
						 value less than 9 and greater than 0. If set out of|
						 this range a value of 5 will be used for actual    |
						 sampling internally without affecting the CSR field|
----------------------------------------------------------------------------------------------------
===
*
* SGMII bit [12] is really a misnomer, it is a decode  of pi_qlm_cfg pins to indicate SGMII or 1000Base-X modes.
*

* Note: MODE bit
* When MODE=1,  1000Base-X mode is selected. Auto negotiation will follow IEEE 802.3 clause 37.
* When MODE=0,  SGMII mode is selected and the following note will apply.

* Repeat note from SGM_AN_ADV register
* NOTE: The SGMII AN Advertisement Register above will be sent during Auto Negotiation if the MAC_PHY mode bit in misc_ctl_reg
* is set (1=PHY mode). If the bit is not set (0=MAC mode), the tx_config_reg[14] becomes ACK bit and [0] is always 1.
* All other bits in tx_config_reg sent will be 0. The PHY dictates the Auto Negotiation results.



*
* PCS Interrupt Register
*

     ==============================================================
     PCS(0)_INT(0..3)_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:13> NS       RAZ      NS          NS        Reserved                                           |   
 <12>	 DBG_SYNC R/W1C    0x0	       0	 Code Group sync failure debug help		    |   
 <11>    DUP      R/W1C    0x0         0         Set whenever Duplex mode changes on the link       |   
 <10>    SYNC_BAD R/W1C    0x0         0         Set by HW whenever rx sync st machine reaches a bad|   
						 state. Should never be set during normal operation |
 <9>     AN_BAD   R/W1C    0x0         0         Set by HW whenever AN st machine reaches a bad     |   
						 state. Should never be set during normal operation |
 <8>     RXLOCK   R/W1C    0x0         0         Set by HW whenever code group Sync or bit lock     |   
						 failure occurs                                     |
						 Cannot fire in loopback1 mode                      |
 <7>     RXBAD    R/W1C    0x0         0         Set by HW whenever rx st machine reaches a  bad    |   
						 state. Should never be set during normal operation |
 <6>     RXERR    R/W1C    0x0         0         Set whenever RX receives a code group error in     |   
						 10 bit to 8 bit decode logic                       |
						 Cannot fire in loopback1 mode                      |
 <5>     TXBAD    R/W1C    0x0         0         Set by HW whenever tx st machine reaches a bad     |   
						 state. Should never be set during normal operation | 
 <4>     TXFIFO   R/W1C    0x0         0         Set whenever HW detects a TX fifo overflow         |   
	    					 condition		                            |
 <3>     TXFIFU   R/W1C    0x0         0         Set whenever HW detects a TX fifo underflowflow    |   
	    					 condition                                          |
 <2>     AN_ERR   R/W1C    0x0         0         AN Error, AN resolution function failed            |   
 <1>     XMIT     R/W1C    0x0         0         Set whenever HW detects a change in the XMIT       |   
						 variable. XMIT variable states are IDLE, CONFIG and|
						 DATA						    |
 <0>     LNKSPD   R/W1C    0x0         0         Set by HW whenever Link Speed has changed          |   
----------------------------------------------------------------------------------------------------
===

*
*NOTE: RXERR and TXERR conditions to be discussed with Dan before finalising
*      DBG_SYNC interrupt fires when code group synchronization state machine makes a transition from
*      SYNC_ACQUIRED_1 state to SYNC_ACQUIRED_2 state(See IEEE 802.3-2005 figure 37-9). It is an indication that a bad code group
*      was received after code group synchronizaton was achieved. This interrupt should be disabled during normal link operation.
*      Use it as a debug help feature only.
*


*
* PCS Interrupt Enable Register
*

     ==============================================================
     PCS(0)_INT(0..3)_EN_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:13> NS           RAZ      NS          NS        Reserved                                              |   
 <12>	 DBG_SYNC_EN  R/W      0x0	   0x0	     Code Group sync failure debug help		           |   
 <11>    DUP          R/W      0x0         0x1       Enable duplex mode changed interrupt                  |   
 <10>    SYNC_BAD_EN  R/W      0x0         0x1       Enable rx sync st machine in bad state interrupt      |   
 <9>     AN_BAD_EN    R/W      0x0         0x1       Enable AN state machine bad state interrupt           |   
 <8>     RXLOCK_EN    R/W      0x0         0x1	     Enable rx code group sync/bit lock failure interrupt  |   
 <7>     RXBAD_EN     R/W      0x0         0x1       Enable rx state machine in bad state interrupt        |   
 <6>     RXERR_EN     R/W      0x0         0x1       Enable RX error condition interrupt                   |   
 <5>     TXBAD_EN     R/W      0x0         0x1       Enable tx state machine in bad state interrupt        |   
 <4>     TXFIFO_EN    R/W      0x0         0x1       Enable tx fifo overflow condition interrupt           |   
 <3>     TXFIFU_EN    R/W      0x0         0x1       Enable tx fifo underflow condition intrrupt           |   
 <2>     AN_ERR_EN    R/W      0x0         0x1       Enable AN Error condition interrupt                   |   
 <1>     XMIT_EN      R/W      0x0         0x1       Enable XMIT variable state change interrupt           |   
 <0>     LNKSPD_EN    R/W      0x0         0x1       Enable Link Speed has changed interrupt               |   
----------------------------------------------------------------------------------------------------
===



*
* PCS Logic Analyzer Register
*

     ==============================================================
     PCS(0)_LOG_ANL(0..3)_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS           RAZ      NS          NS        Reserved                                              |   
 <3>     LAFIFOVFL    R/W1C    0x0         0x0       1=logic analyser fif overflowed during packetization  |   
						     Write 1 to clear this bit                             |
 <2>     LA_EN        R/W      0x0         0x0       1= Logic Analyzer enabled, 0=Logic Analyzer disabled  |   
 <1:0>   PKT_SZ       R/W      0x0         0x0       {<1>, <0>}  Logic Analyzer Packet Size                |   
						      0    0   Packet size 1k bytes    			   |
						      0    1   Packet size 4k bytes    			   |
						      1    0   Packet size 8k bytes    		           |
						      1    1   Packet size 16k bytes    		   |
----------------------------------------------------------------------------------------------------
===

*NOTE: Logic Analyzer is enabled with LA_EN for the specified PCS lane only. PKT_SZ is effective only when LA_EN=1
*For normal operation(sgmii or 1000Base-X), this bit must be 0.
*See pcsx.csr for xaui logic analyzer mode.
*For full description see document at .../rtl/pcs/readme_logic_analyzer.txt
*




 
*
* PCSX regs follow IEEE Std 802.3-2005, Section: 45.2.3
*


 *
 * PCSX_CONTROL1_REG = Control Register1
 *
 *

     ==============================================================
     PCSX(0)_CONTROL1_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |   
 <15>    RESET    R/W      0x1         0         1=SW PCSX Reset, the bit will return to 0 after pcs|	
						 has been reset. Takes 32 eclk cycles to reset pcs  |
						 0=Normal operation                                 |
 <14>    LOOPBCK1 R/W      0x0         0         0=normal operation, 1=internal loopback mode       |   
						 xgmii tx data received from gmx tx port is returned|
						 back into gmx, xgmii rx port.                      |
 <13>    SPDSEL1  RO       0x1         1         See bit 6 description				    |   
 <12>    NS       RAZ      NS          NS        Reserved				            |   
 <11>    LO_PWR   R/W      0x1         0         1=Power Down(HW reset), 0=Normal operation         |   
 <10:7>  NS       RAZ      NS          NS        Reserved				            |   
 <6>	 SPDSEL0  RO       0x1         0x1       SPDSEL1 and SPDSEL0 are always at 1'b1. Write has  |   
						 no effect.                                         |
 						 {<6>, <13>}Link Speed selection                    |
						   1    1   Bits 5:2 select speed                   |
 <5:2>   SPD      RO       0x0         0x0       Always select 10Gb/s, writes have no effect        |   
 <1:0>   NS       RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===



 *
 * PCSX_STATUS1_REG = Status Register1
 *
 *

     ==============================================================
     PCSX(0)_STATUS1_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS        RAZ      NS          NS        Reserved				            |   
 <7>     FLT       RO       0x0         0x0       1=Fault condition detected, 0=No fault condition  |   
	 					  This bit is a logical OR of Status2 reg bits 11,10|
 <6:3>	 NS        RAZ      NS          NS        Reserved				            |   
 <2>     RCV_LNK   RO       0x0         0x1       1=Receive Link up, 0=Receive Link down            |   
						  Latching Low version of r_10gbx_status_reg[12],   |
						  Link down status continues until SW read.         | 
 <1>     LPABLE    RO       0x1         0x1       Always set to 1 for Low Power ablility indication |   
 <0>     NS        RAZ      NS          NS        Reserved                                          |   
----------------------------------------------------------------------------------------------------
===




 *
 * PCSX_SPD_ABIL_REG = Speed ability register
 *
 *

     ==============================================================
     PCSX(0)_SPD_ABIL_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2> NS        RAZ      NS          NS        Reserved				            |   
 <1>    TENPASST  RO       0x0         0x0       Always 0, no 10PASS-TS/2BASE-TL capability support |   
 <0>    TENGB     RO       0x1         0x1       Always 1, 10Gb/s supported                         |   
----------------------------------------------------------------------------------------------------
===



 *
 * PCSX_CONTROL2_REG = Control Register2
 *
 *

     ==============================================================
     PCSX(0)_CONTROL2_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS        RAZ      NS          NS       Reserved				            |   
 <1:0>   TYPE      RO       0x1         0x1      Always 2'b01, 10GBASE-X only supported             |   
----------------------------------------------------------------------------------------------------
===



 *
 * PCSX_STATUS2_REG = Status Register2
 *
 *

     ==============================================================
     PCSX(0)_STATUS2_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS        RAZ      NS          NS       Reserved				            |   
 <15:14> DEV       RO       0x2         0x2      Always at 2'b10, means a Device present at the addr|   
 <13:12> NS        RAZ      NS          NS       Reserved				            |   
 <11>    XMTFLT    RC       0x0         0x0      0=No xmit fault, 1=xmit fault. Implements latching |   
						 High function until SW read.                       |
 <10>    RCVFLT    RC       0x0         0x0      0=No rcv fault, 1=rcv fault. Implements latching   |   
						 High function until SW read                        |
 <9:3>	 NS        RAZ      NS          NS       Reserved				            |   
 <2>     TENGB_W   RO       0x0         0x0      Always 0, no 10GBASE-W capability                  |   
 <1>     TENGB_X   RO       0x1         0x1      Always 1, 10GBASE-X capable                        |   
 <0>     TENGB_R   RO       0x0         0x0      Always 0, no 10GBASE-R capability                  |   
----------------------------------------------------------------------------------------------------
===



 *
 * PCSX_10GBX_STATUS_REG = 10gbx_status_reg
 *
 *

     ==============================================================
     PCSX(0)_10GBX_STATUS_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:13> NS        RAZ      NS          NS       Reserved				            |   
 <12>    ALIGND    RO       0x0         0x1      1=Lane alignment achieved, 0=Lanes not aligned     |   
 <11>    PATTST    RO       0x0         0x0      Always at 0, no pattern testing capability         |   
 <10:4>	 NS        RAZ      NS          NS       Reserved				            |   
 <3>     L3SYNC    RO       0x0         0x1      1=Rcv lane 3 code grp synchronized, 0=not sync'ed  |   
 <2>     L2SYNC    RO       0x0         0x1      1=Rcv lane 2 code grp synchronized, 0=not sync'ed  |   
 <1>     L1SYNC    RO       0x0         0x1      1=Rcv lane 1 code grp synchronized, 0=not sync'ed  |   
 <0>     L0SYNC    RO       0x0         0x1      1=Rcv lane 0 code grp synchronized, 0=not sync'ed  |   
----------------------------------------------------------------------------------------------------
===




 *
 * PCSX_TX_RX_STATES_REG = Transmit Receive States Register
 *
 *

     ==============================================================
     PCSX(0)_TX_RX_STATES_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:14> NS        RAZ      NS          NS       Reserved				            |   
 <13>	 TERM_ERR  R/W1C    0x0		0x0	 1=Check end function detected error in packet      |	
						   terminate ||T|| column or the one after it       |
 <12>    SYN3BAD   RO       0x0         0x0      1=lane 3 code grp sync state machine in bad state  |   
 <11>    SYN2BAD   RO       0x0         0x0      1=lane 2 code grp sync state machine in bad state  |   
 <10>    SYN1BAD   RO       0x0         0x0      1=lane 1 code grp sync state machine in bad state  |   
 <9>     SYN0BAD   RO       0x0         0x0      1=lane 0 code grp sync state machine in bad state  |   
 <8>     RXBAD     RO       0x0         0x0      1=Rcv state machine in a bad state, HW malfunction |   
 <7:5>   ALGN_ST   RO       0x0         NS       Lane alignment state machine state state           |   
 <4:3>	 RX_ST     RO       0x0         NS       Receive state machine state state                  |   
 <2:0>   TX_ST     RO       0x0         NS       Transmit state machine state state                 |   
----------------------------------------------------------------------------------------------------
===


*
 * PCSX_RX_SYNC_STATES_REG = Receive Sync States Register
 *
 *

     ==============================================================
     PCSX(0)_RX_SYNC_STATES_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16>  NS        RAZ      NS          NS       Reserved				            |   
 <15:12>  SYNC3ST   RO       0x0         NS       Receive lane 3 code grp sync state machine state  |   
 <11:8>	  SYNC2ST   RO       0x0         NS       Receive lane 2 code grp sync state machine state  |   
 <7:4>    SYNC1ST   RO       0x0         NS       Receive lane 1 code grp sync state machine state  |   
 <3:0>    SYNC0ST   RO       0x0         NS       Receive lane 0 code grp sync state machine state  |   
----------------------------------------------------------------------------------------------------
===


*
* PCSX_POLARITY_REG = TX_RX polarity reg
*

     ==============================================================
     PCSX(0)_TX_RX_POLARITY_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:10>  NS       RAZ      NS          NS        Reserved                                           |   
 <9:6>  XOR_RXPLRT R/W	    0x0		0	  Per lane RX polarity control			     |   
 <5:2>  XOR_TXPLRT R/W	    0x0		0	  Per lane TX polarity control			     |   
 <1>     RXPLRT    R/W      0x0         0         1 is inverted polarity, 0 is normal polarity       |   
 <0>     TXPLRT    R/W      0x0         0         1 is inverted polarity, 0 is normal polarity       |   
----------------------------------------------------------------------------------------------------
===
*
* RX lane polarity vector [3:0] = XOR_RXPLRT<9:6>  ^  {4{RXPLRT<1>}};
*
* TX lane polarity vector [3:0] = XOR_TXPLRT<5:2>  ^  {4{TXPLRT<0>}};
*
* In short keep <1:0> to 2'b00, and use <5:2> and <9:6> fields to define per lane polarities
*
*


*
* PCSX Misc Control Register
*

     ==============================================================
     PCSX(0)_MISC_CTL_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ      NS          NS        Reserved                                           |   
 <3>     TX_SWAP  R/W      0x0         NS        0=do not swap xaui lanes going out to qlm's        |   
						 1=swap lanes 3 <-> 0   and   2 <-> 1               |
 <2>     RX_SWAP  R/W      0x0         NS        0=do not swap xaui lanes coming in from qlm's      |   
						 1=swap lanes 3 <-> 0   and   2 <-> 1               |
 <1>     XAUI     RO       NS          NS        1=XAUI mode selected, 0=not XAUI mode selected     |   
						 This bit represents pi_qlm1/3_cfg[1:0] pin status  |
 <0>     GMXENO   R/W      0x0         0x0       GMX port enable override, GMX en/dis status is held|   
						 during data packet reception.                      |
----------------------------------------------------------------------------------------------------
===
*
*LN_SWAP for XAUI is to simplify interconnection layout between devices
*


*
* PCSX Bit Lock Status Register
*

     ==============================================================
     PCSX(0)_BIT_LOCK_STATUS_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ      NS          NS        Reserved                                           |   
 <3>     BITLCK3  RO       0x0         NS        Receive Lane 3 bit lock status                     |   
 <2>     BITLCK2  RO       0x0         NS        Receive Lane 2 bit lock status                     |   
 <1>     BITLCK1  RO       0x0         NS        Receive Lane 1 bit lock status                     |   
 <0>     BITLCK0  RO       0x0         NS        Receive Lane 0 bit lock status                     |   
----------------------------------------------------------------------------------------------------
===
*
*
*



*
* PCSX Interrupt Register
*

     ==============================================================
     PCSX(0)_INT_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ      NS          NS        Reserved                                           |   
 <6>	 DBG_SYNC R/W1C    0x0	       0	 Code Group sync failure debug help, see Note below |   
 <5>     ALGNLOS  R/W1C    0x0         0         Set when XAUI lanes lose alignment                 |   
 <4>     SYNLOS   R/W1C    0x0         0         Set when Code group sync lost on 1 or more  lanes  |   
 <3>     BITLCKLS R/W1C    0x0         0         Set when Bit lock lost on 1 or more xaui lanes     |   
 <2>     RXSYNBAD R/W1C    0x0         0         Set when RX code grp sync st machine in bad state  |   
						 in one of the 4 xaui lanes                         |
 <1>     RXBAD    R/W1C    0x0         0         Set when RX state machine in bad state             |   
 <0>     TXFLT    R/W1C    0x0         0         None defined at this time, always 0x0              |   
----------------------------------------------------------------------------------------------------
===
* Note: DBG_SYNC is a edge triggered interrupt. When set it indicates PCS Synchronization state machine in
*	Figure 48-7 state diagram in IEEE Std 802.3-2005 changes state SYNC_ACQUIRED_1 to SYNC_ACQUIRED_2
*	indicating an invalid code group was received on one of the 4 receive lanes.
*	This interrupt should be always disabled and used only for link problem debugging help.
*


*
* PCSX Interrupt Enable Register
*

     ==============================================================
     PCSX(0)_INT_EN_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS           RAZ      NS          NS        Reserved                                              |   
 <6>	 DBG_SYNC_EN  R/W      0x0	   0	     Code Group sync failure debug help		           |   
 <5>     ALGNLOS_EN   R/W      0x0         1         Enable ALGNLOS interrupt                              |   
 <4>     SYNLOS_EN    R/W      0x0         1         Enable SYNLOS interrupt                               |   
 <3>     BITLCKLS_EN  R/W      0x0         1         Enable BITLCKLS interrupt                             |   
 <2>     RXSYNBAD_EN  R/W      0x0         1         Enable RXSYNBAD  interrupt                            |   
 <1>     RXBAD_EN     R/W      0x0         1         Enable RXBAD  interrupt                               |   
 <0>     TXFLT_EN     R/W      0x0         1         Enable TXFLT   interrupt                              |   
----------------------------------------------------------------------------------------------------
===


*
* PCSX Logic Analyzer Register
*

     ==============================================================
     PCSX(0)_LOG_ANL_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS           RAZ      NS          NS        Reserved                                              |   
 <6>     ENC_MODE     R/W      0x0         0         1=send xaui encoded data, 0=send xaui raw data to GMX |   
						     See .../rtl/pcs/readme_logic_analyzer.txt for details |
 <5:4>   DROP_LN      R/W      0x0         0         xaui lane# to drop from logic analyzer packets        |   
        					     {<5>, <4>}  Drop lane #                               |
						      0    0   Drop lane 0 data    			   |
						      0    1   Drop lane 1 data    			   |
						      1    0   Drop lane 2 data     		           |
						      1    1   Drop lane 3 data     		           |
 <3>     LAFIFOVFL    R/W1C    0x0         0         1=logic analyser fif overflowed one or more times     |   
						     during packetization.                                 |
						     Write 1 to clear this bit                             |
 <2>     LA_EN        R/W      0x0         0         1= Logic Analyzer enabled, 0=Logic Analyzer disabled  |   
 <1:0>   PKT_SZ       R/W      0x0         0         {<1>, <0>}  Logic Analyzer Packet Size                |   
						      0    0   Packet size 1k bytes    			   |
						      0    1   Packet size 4k bytes    			   |
						      1    0   Packet size 8k bytes    	         	   |
						      1    1   Packet size 16k bytes    		   |
----------------------------------------------------------------------------------------------------
===

*NOTE: Logic Analyzer is enabled with LA_EN for xaui only. PKT_SZ is effective only when LA_EN=1
*For normal operation(xaui), this bit must be 0. The dropped lane is used to send rxc[3:0].
*See pcs.csr  for sgmii/1000Base-X logic analyzer mode.
*For full description see document at .../rtl/pcs/readme_logic_analyzer.txt
*

*
* PCSX Bist Status Register
*

     ==============================================================
     PCSX(0)_BIST_STATUS_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS           RAZ      NS          NS        Reserved                                              |   
 <0>     BIST_STATUS  RO       0x0         0         1=bist failure, 0=bisted memory ok or bist in progress|   
						     pcsx.tx_sm.drf8x36m1_async_bist                       |
----------------------------------------------------------------------------------------------------
===



 *
 *                  PEM_CTL_STATUS = PEM Control Status
 *
 * General control and status of the PEM.
 *

     ==============================================================
     PEM(0..1)_CTL_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     INV_LCRC R/W      0x0         0         When '1' causes the LSB of the LCRC to be inverted.|   
 <1>     INV_ECRC R/W      0x0         0         When '1' causes the LSB of the ECRC to be inverted.|   
 <2>     FAST_LM  R/W      0x0         0         When '1' forces fast link mode.                    |   
 <3>     RO_CTLP  R/W      0x0         0         When set '1' C-TLPs that have the RO bit set will  |   
                                                 not wait for P-TLPs that normaly would be sent     |
                                                 first.                                             |
 <4>     LNK_ENB  R/W      0x0         0         When set '1' the link is enabled when '0' the      |   
                                                 link is disabled. This bit only is active when in  |
                                                 RC mode.                                           |
 <5>     DLY_ONE  R/W      0x0         0         When set the output client state machines will     |   
                                                 wait one cycle before starting a new TLP out.      |
 <6>     NF_ECRC  R/W      0x0         0         Do not forward peer-to-peer ECRC TLPs.             |   
 <7>     NS       R/W      0x0         0         Reserved.                                          |   
 <8>     NS       R/W      0x0         0         Reserved.                                          |   
 <9>     OB_P_CMD R/W      0x0         0         When WRITTEN with a '1' a single cycle pulse is    |   
                                                 to the PCIe core outband_pwrup_cmd port. EP mode.  |
 <10>    PM_XPME  R/W      0x0         0         When WRITTEN with a '1' a single cycle pulse is    |   
                                                 to the PCIe core pm_xmt_pme port. EP mode.         |
 <11>    PM_XTOFF R/W      0x0         0         When WRITTEN with a '1' a single cycle pulse is    |   
                                                 to the PCIe core pm_xmt_turnoff port. RC mode.     |
 <15:12> SPARES   R/W      0x0         0         Spares flops.                                      |   
 <31:16> CFG_RTRY R/W      0x0         0x20      The time x 0x10000 in core clocks to wait for a    |   
                                                 CPL to a CFG RD that does not carry a Retry Status.|
                                                 Until such time that the timeout occurs and Retry  |
                                                 Status is received for a CFG RD, the Read CFG Read |
                                                 will be resent. A value of 0 disables retries and  | 
                                                 treats a CPL Retry as a CPL UR.                    |
                                                 When enabled only one CFG RD may be issued until   |
                                                 either successful completion or CPL UR.            |
 <33:32> NS       RAZ      NS          NS        Reserved		                            |   
 <41:34> PBUS     RO       NS          NS        Primary bus number.                                |   
 <46:42> DNUM     RO       NS          NS        Primary bus device number.                         |   
 <47>    AUTO_SD  RO       NS          NS        Link Hardware Autonomous Speed Disable.            |   
 <63:48> NS       RAZ      NS          NS        Reserved.                                          |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM(0..1)_DBG_INFO = PEM Debug Information
 *
 * General debug info.
 *

     ==============================================================
     PEM(0..1)_DBG_INFO Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     SPOISON  R/W1C    0x0         0         Poisoned TLP sent                                  |   
                                                 peai__client0_tlp_ep & peai__client0_tlp_hv        |
 <1>     RTLPMAL  R/W1C    0x0         0         Received TLP is malformed or a message.            |   
                                                 pedc_radm_trgt1_tlp_abort & pedc__radm_trgt1_eot   |
						 If the core receives a MSG (or Vendor Message)     |
						 this bit will be set.                              |
 <2>     RTLPLLE  R/W1C    0x0         0         Received TLP has link layer error                  |   
                                                 pedc_radm_trgt1_dllp_abort & pedc__radm_trgt1_eot  |
 <3>     RECRCE   R/W1C    0x0         0         Received ECRC Error                                |   
                                                 pedc_radm_trgt1_ecrc_err & pedc__radm_trgt1_eot    |
 <4>     RPOISON  R/W1C    0x0         0         Received Poisoned TLP                              |   
                                                 pedc__radm_trgt1_poisoned & pedc__radm_trgt1_hv    |
 <5>     RCEMRC   R/W1C    0x0         0         Received Correctable Error Message (RC Mode only)  |   
                                                 pedc_radm_correctable_err                          |
 <6>     RNFEMRC  R/W1C    0x0         0         Received Non-Fatal Error Message (RC Mode only)    |   
                                                 pedc_radm_nonfatal_err                             |
 <7>     RFEMRC   R/W1C    0x0         0         Received Fatal Error Message (RC Mode only)        |   
                                                 pedc_radm_fatal_err                                |
						 Bit set when a message with ERR_FATAL is set.      |
 <8>     RPMERC   R/W1C    0x0         0         Received PME Message (RC Mode only)                |   
                                                 pedc_radm_pm_pme                                   |
 <9>     RPTAMRC  R/W1C    0x0         0         Received PME Turnoff Acknowledge Message           |   
                                                 (RC Mode only)                                     |
                                                 pedc_radm_pm_to_ack                                |
 <10>    RUMEP    R/W1C    0x0         0         Received Unlock Message (EP Mode Only)             |   
                                                 pedc_radm_msg_unlock                               |
 <11>    RVDM     R/W1C    0x0         0         Received Vendor-Defined Message                    |   
                                                 pedc_radm_vendor_msg                               |
 <12>    ACTO     R/W1C    0x0         0         A Completion Timeout Occured                       |   
                                                 pedc_radm_cpl_timeout                              |
 <13>    RTE      R/W1C    0x0         0         Replay Timer Expired                               |   
                                                 xdlh_replay_timeout_err                            |
						 This bit is set when the REPLAY_TIMER expires in   |
						 the PCIE core. The probability of this bit being   |
						 set will increase with the traffic load.           |
 <14>    MRE      R/W1C    0x0         0         Max Retries Exceeded                               |   
                                                 xdlh_replay_num_rlover_err                         |
 <15>    RDWDLE   R/W1C    0x0         0         Received DLLP with DataLink Layer Error            |   
                                                 rdlh_bad_dllp_err                                  |
 <16>    RTWDLE   R/W1C    0x0         0         Received TLP with DataLink Layer Error             |   
                                                 rdlh_bad_tlp_err                                   |
 <17>    DPEOOSD  R/W1C    0x0         0         DLLP protocol error (out of sequence DLLP)         |   
                                                 rdlh_prot_err                                      |
 <18>    FCPVWT   R/W1C    0x0         0         Flow Control Protocol Violation (Watchdog Timer)   |   
                                                 rtlh_fc_prot_err                                   |
 <19>    RPE      R/W1C    0x0         0         When the PHY reports 8B/10B decode error           |   
						 (RxStatus = 3b100) or disparity error              |
						 (RxStatus = 3b111), the signal rmlh_rcvd_err will  |
						 be asserted.                                       |
                                                 rmlh_rcvd_err                                      |
 <20>    FCUV     R/W1C    0x0         0         Flow Control Update Violation (opt. checks)        |   
                                                 int_xadm_fc_prot_err                               |
 <21>    RQO      R/W1C    0x0         0         Receive queue overflow. Normally happens only when |   
                                                 flow control advertisements are ignored            |
                                                 radm_qoverflow                                     |
 <22>    RAUC     R/W1C    0x0         0         Received an unexpected completion                  |   
                                                 radm_unexp_cpl_err                                 |
 <23>    RACUR    R/W1C    0x0         0         Received a completion with UR status               |   
                                                 radm_rcvd_cpl_ur                                   |
 <24>    RACCA    R/W1C    0x0         0         Received a completion with CA status               |   
                                                 radm_rcvd_cpl_ca                                   |
 <25>    CAAR     R/W1C    0x0         0         Completer aborted a request                        |   
                                                 radm_rcvd_ca_req                                   |
                                                 This bit will never be set because Octeon does     |
                                                 not generate Completer Aborts.                     |
 <26>    RARWDNS  R/W1C    0x0         0         Recieved a request which device does not support   |   
                                                 radm_rcvd_ur_req                                   |
 <27>    RAMTLP   R/W1C    0x0         0         Received a malformed TLP                           |   
                                                 radm_mlf_tlp_err                                   |
 <28>    RACPP    R/W1C    0x0         0         Received a completion with poisoned payload        |   
                                                 radm_rcvd_cpl_poisoned                             |
 <29>    RAWWPP   R/W1C    0x0         0         Received a write with poisoned payload             |   
                                                 radm_rcvd_wreq_poisoned                            |
 <30>    ECRC_E   R/W1C    0x0         0         Received a ECRC error.                             |   
                                                 radm_ecrc_err                                      |
 <63:31> NS       RAZ      NS          NS        Reserved.                                          |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM_BIST_STATUS = PEM Bist Status
 *
 * Contains the diffrent interrupt summary bits of the PEM.
 *

     ==============================================================
     PEM(0..1)_BIST_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     SOT      RO        0           0        SOT Buffer.                                        |   
 <1>     RQHDR0   RO        0           0        Rx Queue Header0.                                  |   
 <2>     RQHDR1   RO        0           0        Rx Queue Header1.                                  |   
 <3>     RQDATA3  RO        0           0        Rx Queue Data Memory3.                             |   
 <4>     RQDATA2  RO        0           0        Rx Queue Data Memory2.                             |   
 <5>     RQDATA1  RO        0           0        Rx Queue Data Memory1.                             |   
 <6>     RQDATA0  RO        0           0        Rx Queue Data Memory0.                             |   
 <7>     RETRY    RO        0           0        Retry Buffer.                                      |   
 <63:8>  NS       RAZ       NS          NS       Reserved		                            |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM_DIAG_STATUS = PEM Diagnostic Status
 *
 * Selection control for the cores diagnostic bus.
 *

     ==============================================================
     PEM(0..1)_DIAG_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     AUX_EN   RO        0           0        Auxilary Power Enable.                             |   
 <1>     PM_EN    RO        0           0        Power Management Event Enable.                     |   
 <2>     PM_STAT  RO        0           0        Power Management Status.                           |   
 <3>     PM_DST   RO        0           0        Current power management DSTATE.                   |   
 <63:4>  NS       RO        NS          NS       Reserved		                            |   
----------------------------------------------------------------------------------------------------
===


 *
 *                  PEM_CFG_WR = PEM Configuration Write
 *
 * Allows write access to the configuration in the PCIe Core.
 *

     ==============================================================
     PEM(0..1)_CFG_WR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  ADDR     R/W      0           NS        Address to write. A write to this register starts  |   
                                                 a write operation.                                 |
 <63:32> DATA     R/W      0           NS        Data to write. A write to this register starts     |   
                                                 a write operation.                                 |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM_CFG_RD = PEM Configuration Read
 *
 * Allows read access to the configuration in the PCIe Core.
 *

     ==============================================================
     PEM(0..1)_CFG_RD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  ADDR     R/W      0           NS        Address to read. A write to this register          |   
                                                 starts a read operation.                           |
 <63:32> DATA     R/W      0           NS        Data.                                              |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM_TLP_CREDITS = PEM TLP Credits
 *
 * Specifies the number of credits the PEM for use in moving TLPs. When this register is written the credit values are
 * reset to the register value. A write to this register should take place BEFORE traffic flow starts.
 *

     ==============================================================
     PEM(0..1)_TLP_CREDITS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   SLI_P    R/W      128         128       TLP credits for Posted TLPs in the SLI.            |   
                                                 Legal values are 0x24 to 0x80.                     |
 <15:8>  SLI_NP   R/W       16          16       TLP credits for Non-Posted TLPs in the SLI.        |   
                                                 Legal values are 0x4 to 0x10.                      |
 <23:16> SLI_CPL  R/W      128         128       TLP credits for Completion TLPs in the SLI.        |   
                                                 Legal values are 0x24 to 0x80.                     |
 <31:24> PEM_P    R/W      128         128       TLP credits for Posted TLPs in the Peer.           |   
                                                 Legal values are 0x24 to 0x80.                     |
 <39:32> PEM_NP   R/W       16          16       TLP credits for Non-Posted TLPs in the Peer.       |   
                                                 Legal values are 0x4 to 0x10.                      |
 <47:40> PEM_CPL  R/W      128         128       TLP credits for Completion TLPs in the Peer.       |   
                                                 Legal values are 0x24 to 0x80.                     |
 <55:48> PEAI_PPF R/W      128         128       TLP credits for Completion TLPs in the Peer.       |   
                                                 Legal values are 0x24 to 0x80.                     |
 <63:56> NS       RAZ      NS          NS        Reserved		                            |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM_P2P_BAR#_START = PEM Peer-To-Peer BAR0 Start
 *
 * The starting address and enable for addresses to forwarded to the PCIe peer port.
 *

     ==============================================================
     PEM(0..1)_P2P_BAR(0..3)_START Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  NS       RAZ      NS                NS        Reserved.                                          | 
 <63:12> ADDR     R/W      0xfffffffffffff   NS        The starting address of the address window created | 
                                                       by this field and the PEM_P2P_BAR0_END[63:12]      |
                                                       field. The full 64-bits of address are created by: |
                                                       {ADDR[63:12], 12'b0}.                              |       
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM_P2P_BAR#_END = PEM Peer-To-Peer BAR0 End
 *
 * The ending address for addresses to forwarded to the PCIe peer port.
 *

     ==============================================================
     PEM(0..1)_P2P_BAR(0..3)_END Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <11:0>  NS       RAZ      NS                NS        Reserved		                                  | 
 <63:12> ADDR     R/W      0xfffffffffffff   NS        The ending address of the address window created   | 
                                                       this field and the PEM_P2P_BAR0_START[63:12]      |
                                                       field. The full 64-bits of address are created by: |
                                                       {ADDR[63:12], 12'b0}.                              |       
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM_P2N_BAR0_START = PEM PCIe to Npei BAR0 Start
 *
 * The starting address for addresses to forwarded to the SLI in RC Mode.
 *

     ==============================================================
     PEM(0..1)_P2N_BAR0_START Type=RSL
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <13:0>  NS       RAZ      NS          NS        Reserved		                            |   
 <63:14> ADDR     R/W      0x0         0         The starting address of the 16KB address space that|   
                                                 is the BAR0 address space.                         |
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM_P2N_BAR1_START = PEM PCIe to Npei BAR1 Start
 *
 * The starting address for addresses to forwarded to the SLI in RC Mode.
 *

     ==============================================================
     PEM(0..1)_P2N_BAR1_START Type=RSL
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <25:0>  NS       RAZ      NS          NS        Reserved		                            |   
 <63:26> ADDR     R/W      0x0         0         The starting address of the 64KB address space     |   
                                                 that is the BAR1 address space.                    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM_P2N_BAR2_START = PEM PCIe to Npei BAR2 Start
 *
 * The starting address for addresses to forwarded to the SLI in RC Mode.
 *

     ==============================================================
     PEM(0..1)_P2N_BAR2_START Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <40:0>  NS       RAZ      NS          NS        Reserved		                            |   
 <63:41> ADDR     R/W      0x0         0         The starting address of the 2^41 address space     |   
                                                 that is the BAR2 address space.                    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM_CPL_LUT_VALID = PEM Cmpletion Lookup Table Valid
 *
 * Bit set for outstanding tag read.
 *

     ==============================================================
     PEM(0..1)_CPL_LUT_VALID Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  TAG      RO       0x0         0         Bit vector set cooresponds to an outstanding tag   |   
                                                 expecting a completion.                            |
 <63:32> NS       RAZ      NS          NS        Reserved		                            |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM(0..1)_DBG_INFO_EN = PEM Debug Information Enable
 *
 * Allows PEM_DBG_INFO to generate interrupts when cooresponding enable bit is set.
 *

     ==============================================================
     PEM(0..1)_DBG_INFO_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     SPOISON  R/W      0x0         0         Allows PEM_DBG_INFO[0] to generate an interrupt.   |   
 <1>     RTLPMAL  R/W      0x0         0         Allows PEM_DBG_INFO[1] to generate an interrupt.   |   
 <2>     RTLPLLE  R/W      0x0         0         Allows PEM_DBG_INFO[2] to generate an interrupt.   |   
 <3>     RECRCE   R/W      0x0         0         Allows PEM_DBG_INFO[3] to generate an interrupt.   |   
 <4>     RPOISON  R/W      0x0         0         Allows PEM_DBG_INFO[4] to generate an interrupt.   |   
 <5>     RCEMRC   R/W      0x0         0         Allows PEM_DBG_INFO[5] to generate an interrupt.   |   
 <6>     RNFEMRC  R/W      0x0         0         Allows PEM_DBG_INFO[6] to generate an interrupt.   |   
 <7>     RFEMRC   R/W      0x0         0         Allows PEM_DBG_INFO[7] to generate an interrupt.   |   
 <8>     RPMERC   R/W      0x0         0         Allows PEM_DBG_INFO[8] to generate an interrupt.   |   
 <9>     RPTAMRC  R/W      0x0         0         Allows PEM_DBG_INFO[9] to generate an interrupt.   |   
 <10>    RUMEP    R/W      0x0         0         Allows PEM_DBG_INFO[10] to generate an interrupt.  |   
 <11>    RVDM     R/W      0x0         0         Allows PEM_DBG_INFO[11] to generate an interrupt.  |   
 <12>    ACTO     R/W      0x0         0         Allows PEM_DBG_INFO[12] to generate an interrupt.  |   
 <13>    RTE      R/W      0x0         0         Allows PEM_DBG_INFO[13] to generate an interrupt.  |   
 <14>    MRE      R/W      0x0         0         Allows PEM_DBG_INFO[14] to generate an interrupt.  |   
 <15>    RDWDLE   R/W      0x0         0         Allows PEM_DBG_INFO[15] to generate an interrupt.  |   
 <16>    RTWDLE   R/W      0x0         0         Allows PEM_DBG_INFO[16] to generate an interrupt.  |   
 <17>    DPEOOSD  R/W      0x0         0         Allows PEM_DBG_INFO[17] to generate an interrupt.  |   
 <18>    FCPVWT   R/W      0x0         0         Allows PEM_DBG_INFO[18] to generate an interrupt.  |   
 <19>    RPE      R/W      0x0         0         Allows PEM_DBG_INFO[19] to generate an interrupt.  |   
 <20>    FCUV     R/W      0x0         0         Allows PEM_DBG_INFO[20] to generate an interrupt.  |   
 <21>    RQO      R/W      0x0         0         Allows PEM_DBG_INFO[21] to generate an interrupt.  |   
 <22>    RAUC     R/W      0x0         0         Allows PEM_DBG_INFO[22] to generate an interrupt.  |   
 <23>    RACUR    R/W      0x0         0         Allows PEM_DBG_INFO[23] to generate an interrupt.  |   
 <24>    RACCA    R/W      0x0         0         Allows PEM_DBG_INFO[24] to generate an interrupt.  |   
 <25>    CAAR     R/W      0x0         0         Allows PEM_DBG_INFO[25] to generate an interrupt.  |   
 <26>    RARWDNS  R/W      0x0         0         Allows PEM_DBG_INFO[26] to generate an interrupt.  |   
 <27>    RAMTLP   R/W      0x0         0         Allows PEM_DBG_INFO[27] to generate an interrupt.  |   
 <28>    RACPP    R/W      0x0         0         Allows PEM_DBG_INFO[28] to generate an interrupt.  |   
 <29>    RAWWPP   R/W      0x0         0         Allows PEM_DBG_INFO[29] to generate an interrupt.  |   
 <30>    ECRC_E   R/W      0x0         0         Allows PEM_DBG_INFO[30] to generate an interrupt.  |   
 <63:31> NS       RAZ      NS          NS        Reserved.                                          |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM_BAR1_INDEX@ = PEM BAR1 Index@ Register
 *
 * Contains address index and control bits for access to memory ranges of BAR-1. Index is build from supplied address [25:22].
 * 

     ==============================================================
     PEM(0..1)_BAR1_INDEX(0..15) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:20> NS       RAZ      NS          NS        Reserved				                
 <19:4>  ADDR_IDX R/W      0x0         NS        Address bits [37:22] sent to L2C                       
 <3>     CA       R/W      0x0         0         Set '1' when access is not to be cached in L2.         
 <2:1>   END_SWP  R/W      0x0         NS        Endian Swap Mode                                       
 <0>     ADDR_V   R/W      0x0         NS        Set '1' when the selected address range is valid.      
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM_BAR_CTUS = PEM BAR Control
 *
 * Contains control for BAR accesses.
 * 

     ==============================================================
     PEM(0..1)_BAR_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ      NS          NS        Reserved				            |   
 <6:4>   BAR1_SIZ R/W      1           1         Pcie-Port0, Bar1 Size. 1 == 64MB, 2 == 128MB,      |   
 						 3 == 256MB, 4 == 512MB, 5 == 1024MB, 6 == 2048MB,  |
						 0 and 7 are reserved.                              |
 <3>     BAR2_ENB R/W      0           1         When set '1' BAR2 is enable and will respond when  |   
                                                 clear '0' BAR2 access will cause UR responses.     |
 <2:1>   BAR2_ESX R/W      0           NS        Value will be XORed with pci-address[39:38] to     |   
                                                 determine the endian swap mode.                    |
 <0>     BAR2_CAX R/W      0           0         Value will be XORed with pcie-address[40] to       |   
                                                 determine the L2 cache attribute.                  |
                                                 Not cached in L2 if XOR result is 1                |
----------------------------------------------------------------------------------------------------
===


 * Below are in pesc_csr
 *
 *                  PEM(0..1)_INT_SUM = PEM Interrupt Summary
 *
 * Interrupt conditions for the PEM.
 *

     ==============================================================
     PEM(0..1)_INT_SUM Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>      AERI     RO       0x0         0         Advanced Error Reporting Interrupt, RC Mode Only.  |   
                                                  (cfg_aer_rc_err_int).                              |
 <1>      SE       R/W1C    0x0         0         System Error, RC Mode Only.                        |   
                                                  (cfg_sys_err_rc)                                   |
 <2>      PMEI     RO       0x0         0         PME Interrupt.                                     |   
                                                  (cfg_pme_int)                                      |
 <3>      PMEM     RO       0x0         0         Recived PME MSG.                                   |   
                                                  (radm_pm_pme)                                      |
 <4>      UP_B1    R/W1C    0x0         0         Received P-TLP for Bar1 when bar1 index valid      |   
					          is not set.                                        |
 <5>      UP_B2    R/W1C    0x0         0         Received P-TLP for Bar2 when bar2 is disabeld.     |   
 <6>      UP_BX    R/W1C    0x0         0         Received P-TLP for an unknown Bar.                 |   
 <7>      UN_B1    R/W1C    0x0         0         Received N-TLP for Bar1 when bar1 index valid      |   
					          is not set.                                        |
 <8>      UN_B2    R/W1C    0x0         0         Received N-TLP for Bar2 when bar2 is disabled.     |   
 <9>      UN_BX    R/W1C    0x0         0         Received N-TLP for an unknown Bar.                 |   
 <10>     EXC      RO       0x0         0         Set when the PEM_DBG_INFO register has a bit       |   
                                                  set and its cooresponding PEM_DBG_INFO_EN bit      |
                                                  is set.                                            |
 <11>     RDLK     R/W1C    0x0         0         Received Read Lock TLP.                            |   
 <12>     CRS_ER   R/W1C    0x0         0         Had a CRS Timeout when Retries were enabled.       |   
 <13>     CRS_DR   R/W1C    0x0         0         Had a CRS Timeout when Retries were disabled.      |   
 <63:14>  NS       RAZ      NS          NS        Reserved					     |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM(0..1)_INT_ENB = PEM Interrupt Enable
 *
 * Enables interrupt conditions for the PEM to generate an RSL interrupt.
 *

     ==============================================================
     PEM(0..1)_INT_ENB Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     AERI     R/W      0x0         1         Enables PEM_INT_SUM[0] to generate an              |    
                                                 interrupt to the MIO.                              |
 <1>     SE       R/W      0x0         1         Enables PEM_INT_SUM[1] to generate an              |    
                                                 interrupt to the MIO.                              |
 <2>     PMEI     R/W      0x0         1         Enables PEM_INT_SUM[2] to generate an              |    
                                                 interrupt to the MIO.                              |
 <3>     PMEM     R/W      0x0         1         Enables PEM_INT_SUM[3] to generate an              |    
                                                 interrupt to the MIO.                              |
 <4>     UP_B1    R/W      0x0         1         Enables PEM_INT_SUM[4] to generate an              |    
                                                 interrupt to the MIO.                              |
 <5>     UP_B2    R/W      0x0         1         Enables PEM_INT_SUM[5] to generate an              |    
                                                 interrupt to the MIO.                              |
 <6>     UP_BX    R/W      0x0         1         Enables PEM_INT_SUM[6] to generate an              |    
                                                 interrupt to the MIO.                              |
 <7>     UN_B1    R/W      0x0         1         Enables PEM_INT_SUM[7] to generate an              |    
                                                 interrupt to the MIO.                              |
 <8>     UN_B2    R/W      0x0         1         Enables PEM_INT_SUM[8] to generate an              |    
                                                 interrupt to the MIO.                              |
 <9>     UN_BX    R/W      0x0         1         Enables PEM_INT_SUM[9] to generate an              |    
                                                 interrupt to the MIO.                              |
 <10>    EXC      R/W      0x0         1         Enables PEM_INT_SUM[10] to generate an             |    
                                                 interrupt to the MIO.                              |
 <11>    RDLK     R/W      0x0         1         Enables PEM_INT_SUM[11] to generate an             |    
                                                 interrupt to the MIO.                              |
 <12>    CRS_ER   R/W      0x0         1         Enables PEM_INT_SUM[12] to generate an             |    
                                                 interrupt to the MIO.                              |
 <13>    CRS_DR   R/W      0x0         1         Enables PEM_INT_SUM[13] to generate an             |    
                                                 interrupt to the MIO.                              |
 <63:14> NS       RAZ      NS          NS        Reserved					    |   
----------------------------------------------------------------------------------------------------
===


 *
 *                  PEM(0..1)_INT_ENB_INT = PEM Interrupt Enable
 *
 * Enables interrupt conditions for the PEM to generate an RSL interrupt.
 *

     ==============================================================
     PEM(0..1)_INT_ENB_INT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     AERI     R/W      0x0         1         Enables PEM_INT_SUM[0] to generate an              |    
                                                 interrupt to the SLI as SLI_INT_SUM[MAC#_INT].     |
 <1>     SE       R/W      0x0         1         Enables PEM_INT_SUM[1] to generate an              |    
                                                 interrupt to the SLI as SLI_INT_SUM[MAC#_INT].     |
 <2>     PMEI     R/W      0x0         1         Enables PEM_INT_SUM[2] to generate an              |    
                                                 interrupt to the SLI as SLI_INT_SUM[MAC#_INT].     |
 <3>     PMEM     R/W      0x0         1         Enables PEM_INT_SUM[3] to generate an              |    
                                                 interrupt to the SLI as SLI_INT_SUM[MAC#_INT].     |
 <4>     UP_B1    R/W      0x0         1         Enables PEM_INT_SUM[4] to generate an              |    
                                                 interrupt to the SLI as SLI_INT_SUM[MAC#_INT].     |
 <5>     UP_B2    R/W      0x0         1         Enables PEM_INT_SUM[5] to generate an              |    
                                                 interrupt to the SLI as SLI_INT_SUM[MAC#_INT].     |
 <6>     UP_BX    R/W      0x0         1         Enables PEM_INT_SUM[6] to generate an              |    
                                                 interrupt to the SLI as SLI_INT_SUM[MAC#_INT].     |
 <7>     UN_B1    R/W      0x0         1         Enables PEM_INT_SUM[7] to generate an              |    
                                                 interrupt to the SLI as SLI_INT_SUM[MAC#_INT].     |
 <8>     UN_B2    R/W      0x0         1         Enables PEM_INT_SUM[8] to generate an              |    
                                                 interrupt to the SLI as SLI_INT_SUM[MAC#_INT].     |
 <9>     UN_BX    R/W      0x0         1         Enables PEM_INT_SUM[9] to generate an              |    
                                                 interrupt to the SLI as SLI_INT_SUM[MAC#_INT].     |
 <10>    EXC      R/W      0x0         1         Enables PEM_INT_SUM[10] to generate an             |    
                                                 interrupt to the SLI as SLI_INT_SUM[MAC#_INT].     |
 <11>    RDLK     R/W      0x0         1         Enables PEM_INT_SUM[11] to generate an             |    
                                                 interrupt to the SLI as SLI_INT_SUM[MAC#_INT].     |
 <12>    CRS_ER   R/W      0x0         1         Enables PEM_INT_SUM[12] to generate an             |    
                                                 interrupt to the SLI as SLI_INT_SUM[MAC#_INT].     |
 <13>    CRS_DR   R/W      0x0         1         Enables PEM_INT_SUM[13] to generate an             |    
                                                 interrupt to the SLI as SLI_INT_SUM[MAC#_INT].     |
 <63:14> NS       RAZ      NS          NS        Reserved					    |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  PEM(0..1)_BIST_STATUS2 = PEM BIST Status Register
 *
 * Results from BIST runs of PEM's memories.
 *

     ==============================================================
     PEM(0..1)_BIST_STATUS2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     PPF      RO       0x0         0         BIST Status for the ppf_fifo                       |   
 <1>     PEF_TC0  RO       0x0         0         BIST Status for the pef_tlp_cpl_fifo0              |   
 <2>     PEF_TCF1 RO       0x0         0         BIST Status for the pef_tlp_cpl_fifo1              |   
 <3>     PEF_TNF  RO       0x0         0         BIST Status for the pef_tlp_n_fifo                 |   
 <4>     PEF_TPF0 RO       0x0         0         BIST Status for the pef_tlp_p_fifo0                |   
 <5>     PEF_TPF1 RO       0x0         0         BIST Status for the pef_tlp_p_fifo1                |   
 <6>     PEAI_P2E RO       0x0         0         BIST Status for the peai__pesc_fifo                |   
 <7>     E2P_P    RO       0x0         0         BIST Status for the e2p_p_fifo                     |   
 <8>     E2P_N    RO       0x0         0         BIST Status for the e2p_n_fifo                     |   
 <9>     E2P_CPL  RO       0x0         0         BIST Status for the e2p_cpl_fifo                   |   
 <63:10> NS       RAZ      NS          NS        Reserved					    |   
----------------------------------------------------------------------------------------------------
===


 *
 * PIP_BIST_STATUS = PIP's BIST Results
 *

     ==============================================================
     PIP_BIST_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:18> NS       RAZ      NS          NS        Reserved				            |   
 <17:0>  BIST     RO       0x0         0         BIST Results.                                      |   
                                                  HW sets a bit in BIST for for memory that fails   |
						  BIST.						    |
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_INT_REG = PIP's Interrupt Register
 *
 * Any exception event that occurs is captured in the PIP_INT_REG.
 * PIP_INT_REG will set the exception bit regardless of the value
 * of PIP_INT_EN.  PIP_INT_EN only controls if an interrupt is
 * raised to software.
 *

     ==============================================================
     PIP_INT_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:13> NS       RAZ      NS          NS        Reserved				            |   
 <12>	 PUNYERR  R/W1C    0x0         0         Frame was received with length <=4B when CRC	    |	
						  stripping in IPD is enable			    |
 <11>	 LENERR   R/W1C    0x0         0         Frame was received with length error		    |	
 <10>    MAXERR   R/W1C    0x0         0         Frame was received with length > max_length	    |	
 <9>     MINERR   R/W1C    0x0         0         Frame was received with length < min_length	    |	
 <8>     BEPERR   R/W1C    0x0         0         Parity Error in back end memory                    |   
 <7>     FEPERR   R/W1C    0x0         0         Parity Error in front end memory                   |   
 <6>     TODOOVR  R/W1C    0x0         0         Todo list overflow (see PIP_BCK_PRS[HIWATER])      |   
 <5>     SKPRUNT  R/W1C    0x0         0         Packet was engulfed by skipper                     |   
						  This interrupt can occur with received PARTIAL    |
						  packets that are truncated to SKIP bytes or	    |
						  smaller.					    |
 <4>     BADTAG   R/W1C    0x0         0         A bad tag was sent from IPD                        |   
 <3>     PRTNXA   R/W1C    0x0         0         Non-existent port                                  |   
 <2>     BCKPRS   R/W1C    0x0         0         PIP asserted backpressure                          |   
 <1>     CRCERR   R/W1C    0x0         0         PIP calculated bad CRC                             |   
 <0>     PKTDRP   R/W1C    0x0         0         Packet Dropped due to QOS                          |   

Notes:
* TODOOVR
  The PIP Todo list stores packets that have been received and require work
  queue entry generation.  PIP will normally assert backpressure when the
  list fills up such that any error is normally is result of a programming
  the PIP_BCK_PRS[HIWATER] incorrectly.  PIP itself can handle 29M
  packets/sec @500MHz or 15Gbs @ 64B packets.

* SKPRUNT
  If a packet size is less then the amount programmed in the per port
  skippers, then there will be nothing to parse and the entire packet will
  basically be skipped over.  This is probably not what the user desired, so
  there is an indication to software.

* BADTAG
  A tag is considered bad when it is resued by a new packet before it was
  released by PIP.  PIP considers a tag released by one of two methods.
  . QOS dropped so that it is released over the pip__ipd_release bus.
  . WorkQ entry is validated by the pip__ipd_done signal

* PRTNXA
  If PIP receives a packet that is not in the valid port range, the port
  processed will be mapped into the valid port space (the mapping is
  currently unpredictable) and the PRTNXA bit will be set.  PRTNXA will be
  set for packets received under the following conditions:

  * packet ports (ports 0-31)
    - GMX_INF_MODE[TYPE]==0 (SGMII), received port is 4-15 or 20-31
    - GMX_INF_MODE[TYPE]==1 (XAUI),  received port is 1-15 or 17-31
  * upper ports (pci and loopback ports 32-63)
    - received port is 40-47 or 52-63

* BCKPRS
  PIP can assert backpressure to the receive logic when the todo list
  exceeds a high-water mark (see PIP_BCK_PRS for more details).  When this
  occurs, PIP can raise an interrupt to software.

* CRCERR
  Octane can compute CRC in two places.  Each RGMII port will compute its
  own CRC, but PIP can provide an additional check or check loopback or
  PCI ports. If PIP computes a bad CRC, then PIP will raise an interrupt.

* PKTDRP
  PIP can drop packets based on QOS results received from IPD.  If the QOS
  algorithm decides to drop a packet, PIP will assert an interrupt.
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_INT_EN = PIP's Interrupt Enable Register
 *
 * Determines if hardward should raise an interrupt to software
 * when an exception event occurs.
 *

     ==============================================================
     PIP_INT_EN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:13> NS       RAZ      NS          NS        Reserved				            |   
 <12>	 PUNYERR  R/W      0x0         0         Frame was received with length <=4B when CRC	    |	
						  stripping in IPD is enable			    |
 <11>	 LENERR   R/W      0x0         0         Frame was received with length error		    |	
 <10>    MAXERR   R/W      0x0         0         Frame was received with length > max_length	    |	
 <9>     MINERR   R/W      0x0         0         Frame was received with length < min_length	    |	
 <8>     BEPERR   R/W      0x0         0         Parity Error in back end memory                    |   
 <7>     FEPERR   R/W      0x0         0         Parity Error in front end memory                   |   
 <6>     TODOOVR  R/W      0x0         0         Todo list overflow (see PIP_BCK_PRS[HIWATER])      |   
 <5>     SKPRUNT  R/W      0x0         0         Packet was engulfed by skipper                     |   
 <4>     BADTAG   R/W      0x0         0         A bad tag was sent from IPD                        |   
 <3>     PRTNXA   R/W      0x0         0         Non-existent port                                  |   
 <2>     BCKPRS   R/W      0x0         0         PIP asserted backpressure                          |   
 <1>     CRCERR   R/W      0x0         0         PIP calculated bad CRC                             |   
 <0>     PKTDRP   R/W      0x0         0         Packet Dropped due to QOS                          |   
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_STAT_CTL = PIP's Stat Control Register
 *
 * Controls how the PIP statistics counters are handled.
 *

     ==============================================================
     PIP_STAT_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved				            |   
 <0>     RDCLR    R/W      0x1         1         Stat registers are read and clear                  |   
                                                  0 = stat registers hold value when read           |
						  1 = stat registers are cleared when read          |
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_GBL_CTL = PIP's Global Control Register
 *
 * Global control information.  These are the global checker enables for
 * IPv4/IPv6 and TCP/UDP parsing.  The enables effect all ports.
 *

     ==============================================================
     PIP_GBL_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:28> NS       RAZ      NS          NS        Reserved				            |   
 <27>    IHMSK_DIS    R/W  0           0         Instruction Header Mask Disable		    |	
						  0=Allow NTAG,NTT,NGRP,NQOS bits in the	    |    
						    instruction header to control which fields from |
						    the instruction header are used for WQE WORD2.  |
						  1=Ignore the NTAG,NTT,NGRP,NQOS bits in the	    |
						    instruction header and act as if these fields   |
						    were zero.  Thus always use the TAG,TT,GRP,QOS  |
						    (depending on the instruction header length)    |
						    from the instruction header for the WQE WORD2.  |
 <26>	 DSA_GRP_TVID R/W  0	       0	 DSA Group Algorithm				    |	
						  Use the DSA source id to compute GRP		    |
 <25>	 DSA_GRP_SCMD R/W  0	       0	 DSA Group Algorithm				    |	
						  Use the DSA source id to compute GRP when the	    |
						  DSA tag command to TO_CPU			    |
 <24>	 DSA_GRP_SID  R/W  0	       0	 DSA Group Algorithm				    |	
						  Use the DSA VLAN id to compute GRP		    |
 <23:21> NS       RAZ      NS          NS        Reserved				            |   
 <20>    RING_EN  R/W      0           1         Enable PCIe ring information in WQE	            |	
 <19:17> SPARE    R/W	   0	       0	 Spare Bits                                	    |	
 <16>    IGNRS    R/W	   0	       0	 Ignore the PKT_INST_HDR[RS] bit when set	    |	
						  Does not apply to PCI ports (32-35)  		    |
						  When using 2-byte instruction header words,	    |
						  either PIP_PRT_CFG[DYN_RS] or IGNRS should be set |
 <15>    VS_WQE   R/W      0           0	 Which DSA/VLAN CFI/ID to use when VLAN Stacking    |	
						  0=use the 1st (network order) VLAN		    |
						  1=use the 2nd (network order) VLAN		    |
 <14>	 VS_QOS	  R/W	   0	       0	 Which DSA/VLAN priority to use when VLAN Stacking  |	
						  0=use the 1st (network order) VLAN		    |
						  1=use the 2nd (network order) VLAN		    |
 <13>    L2_MAL   R/W      1           1         Enable L2 malformed packet check                   |   
 <12>    TCP_FLAG R/W      1           1         Enable TCP flags checks                            |   
 <11>    L4_LEN   R/W      1           1         Enable TCP/UDP length check                        |   
 <10>    L4_CHK   R/W      1           1         Enable TCP/UDP checksum check                      |   
 <9>     L4_PRT   R/W      1           1         Enable TCP/UDP illegal port check                  |   
 <8>     L4_MAL   R/W      1           1         Enable TCP/UDP malformed packet check              |   
 <7:6>   NS       RAZ      NS          NS        Reserved				            |   
 <5:4>   IP6_EEXT R/W      1           3         Enable IPv6 early extension headers                |   
 <3>     IP4_OPTS R/W      1           1         Enable IPv4 options check                          |   
 <2>     IP_HOP   R/W      1           1         Enable TTL (IPv4) / hop (IPv6) check               |   
 <1>     IP_MAL   R/W      1           1         Enable malformed check                             |   
 <0>     IP_CHK   R/W      1           1         Enable IPv4 header checksum check                  |   

Notes:
The following text describes the conditions in which each checker will
assert and flag an exception.  By disabling the checker, the exception will
not be flagged and the packet will be parsed as best it can.  Note, by
disabling conditions, packets can be parsed incorrectly (.i.e. IP_MAL and
L4_MAL could cause bits to be seen in the wrong place.  IP_CHK and L4_CHK
means that the packet was corrupted).

* IP_CHK
  Indicates that an IPv4 packet contained an IPv4 header checksum
  violations.  Only applies to packets classified as IPv4.

* IP_MAL
  Indicates that the packet was malformed.  Malformed packets are defined as
  packets that are not long enough to cover the IP header or not long enough
  to cover the length in the IP header.

* IP_HOP
  Indicates that the IPv4 TTL field or IPv6 HOP field is zero.

* IP4_OPTS
  Indicates the presence of IPv4 options.  It is set when the length != 5.
  This only applies to packets classified as IPv4.

* IP6_EEXT
  Indicate the presence of IPv6 early extension headers.  These bits only
  apply to packets classified as IPv6.  Bit 0 will flag early extensions
  when next_header is any one of the following...

	- hop-by-hop (0)
	- destination (60)
	- routing (43)

  Bit 1 will flag early extentions when next_header is NOT any of the
  following...

	- TCP (6)
	- UDP (17)
	- fragmentation (44)
	- ICMP (58)
	- IPSEC ESP (50)
	- IPSEC AH (51)
	- IPCOMP

* L4_MAL
  Indicates that a TCP or UDP packet is not long enough to cover the TCP or
  UDP header.

* L4_PRT
  Indicates that a TCP or UDP packet has an illegal port number - either the
  source or destination port is zero.

* L4_CHK
  Indicates that a packet classified as either TCP or UDP contains an L4
  checksum failure

* L4_LEN
  Indicates that the TCP or UDP length does not match the the IP length.

* TCP_FLAG
  Indicates any of the following conditions...

  	{URG, ACK, PSH, RST, SYN, FIN} : tcp_flag
  	6'b000001: (FIN only)
  	6'b000000: (0)
  	6'bxxx1x1: (RST+FIN+*)
  	6'b1xxx1x: (URG+SYN+*)
  	6'bxxx11x: (RST+SYN+*)
  	6'bxxxx11: (SYN+FIN+*)
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_GBL_CFG = PIP's Global Config Register
 *
 * Global config information that applies to all ports.
 *

     ==============================================================
     PIP_GBL_CFG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:19> NS       RAZ      NS          NS        Reserved				            |   
 <18>    TAG_SYN  R/W      0           0         Do not include src_crc for TCP/SYN&!ACK packets    |   
						  0 = include src_crc				    |
						  1 = tag hash is dst_crc for TCP/SYN&!ACK packets  |
 <17>    IP6_UDP  R/W      1           1         IPv6/UDP checksum is not optional                  |   
						  0 = Allow optional checksum code		    |
						  1 = Do not allow optional checksum code	    |
 <16>    MAX_L2   R/W      0           0         Config bit to choose the largest L2 frame size     |   
                                                  Chooses the value of the L2 Type/Length field	    |
						  to classify the frame as length.		    |
                                                  0 = 1500 / 0x5dc				    |
                                                  1 = 1535 / 0x5ff				    |
 <15:11> NS       RAZ      NS          NS        Reserved				            |   
 <10:8>  RAW_SHF  R/W      0           0         RAW Packet shift amount		            |   
                                                  Number of bytes to pad a RAW packet.              |
 <7:3>   NS       RAZ      NS          NS        Reserved				            |   
 <2:0>   NIP_SHF  R/W      0           0         Non-IP shift amount			            |   
                                                  Number of bytes to pad a packet that has been	    |
						  classified as not IP.                             |

Notes:
* IP6_UDP
  IPv4 allows optional UDP checksum by sending the all 0's patterns.  IPv6
  outlaws this and the spec says to always check UDP checksum.  This mode
  bit allows the user to treat IPv6 as IPv4, meaning that the all 0's
  pattern will cause a UDP checksum pass.
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_SFT_RST = PIP Soft Reset
 *
 * When written to a '1', resets the pip block
 *

     ==============================================================
     PIP_SFT_RST Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved				            |   
 <0>     RST      R/W      0x0         0x0       Soft Reset                                         |   

Notes:
When RST is set to a '1' by SW, PIP will get a short reset pulse (3 cycles
in duration).  Although this will reset much of PIP's internal state, some
CSRs will not reset.

. PIP_BIST_STATUS
. PIP_STAT0_PRT*
. PIP_STAT1_PRT*
. PIP_STAT2_PRT*
. PIP_STAT3_PRT*
. PIP_STAT4_PRT*
. PIP_STAT5_PRT*
. PIP_STAT6_PRT*
. PIP_STAT7_PRT*
. PIP_STAT8_PRT*
. PIP_STAT9_PRT*
. PIP_XSTAT0_PRT*
. PIP_XSTAT1_PRT*
. PIP_XSTAT2_PRT*
. PIP_XSTAT3_PRT*
. PIP_XSTAT4_PRT*
. PIP_XSTAT5_PRT*
. PIP_XSTAT6_PRT*
. PIP_XSTAT7_PRT*
. PIP_XSTAT8_PRT*
. PIP_XSTAT9_PRT*
. PIP_STAT_INB_PKTS*
. PIP_STAT_INB_OCTS*
. PIP_STAT_INB_ERRS*
. PIP_TAG_INC*
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_BCK_PRS = PIP's Back Pressure Register
 *
 * When to assert backpressure based on the todo list filling up
 *

     ==============================================================
     PIP_BCK_PRS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    BCKPRS   RO       0           0         PIP is currently asserting backpressure to IOB     |   
						  Backpressure from PIP will assert when the	    |
						  entries to the todo list exceed HIWATER.	    |
						  Backpressure will be held until the todo entries  |
						  is less than or equal to LOWATER.		    |
 <62:13> NS       RAZ      0           NS        Reserved				            |   
 <12:8>  HIWATER  R/W      24          24        Water mark in the todo list to assert backpressure |   
						  Legal values are 1-26.  A 0 value will deadlock   |
						  the machine.  A value > 26, will trash memory	    |
 <7:5>   NS       RAZ      0           NS        Reserved				            |   
 <4:0>   LOWATER  R/W      4           4         Water mark in the todo list to release backpressure|   
						  The LOWATER value should be < HIWATER.	    |
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     PIP_CLKEN Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      0           NS        Reserved				            |   
 <0>     CLKEN    R/W      0           0         Controls the conditional clocking within PIP	    |   
						  0=Allow HW to control the clocks		    |
						  1=Force the clocks to be always on		    |
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_IP_OFFSET = Location of the IP in the workQ entry
 *
 * An 8-byte offset to find the start of the IP header in the data portion of IP workQ entires
 *

     ==============================================================
     PIP_IP_OFFSET Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:3>  NS       RAZ      NS          NS        Reserved				            |   
 <2:0>   OFFSET   R/W      0x0         0x0       Number of 8B ticks to include in workQ entry	    |   
						  prior to IP data				    |
						  0:  0 Bytes / IP start at WORD4 of workQ entry    |
						  1:  8 Bytes / IP start at WORD5 of workQ entry    |
						  2: 16 Bytes / IP start at WORD6 of workQ entry    |
						  3: 24 Bytes / IP start at WORD7 of workQ entry    |
						  4: 32 Bytes / IP start at WORD8 of workQ entry    |
						  5: 40 Bytes / IP start at WORD9 of workQ entry    |
						  6: 48 Bytes / IP start at WORD10 of workQ entry   |
						  7: 56 Bytes / IP start at WORD11 of workQ entry   |

Notes:
In normal configurations, OFFSET must be set in the 0..4 range to allow the
entire IP and TCP/UDP headers to be buffered in HW and calculate the L4
checksum for TCP/UDP packets.

The MAX value of OFFSET is determined by the the types of packets that can
be sent to PIP as follows...

Packet Type		 MAX OFFSET
IPv4/TCP/UDP		 7
IPv6/TCP/UDP		 5
IPv6/without L4 parsing  6

If the L4 can be ignored, then the MAX OFFSET for IPv6 packets can increase
to 6.  Here are the following programming restrictions for IPv6 packets and
OFFSET==6:

 . PIP_GBL_CTL[TCP_FLAG] == 0
 . PIP_GBL_CTL[L4_LEN]   == 0
 . PIP_GBL_CTL[L4_CHK]   == 0
 . PIP_GBL_CTL[L4_PRT]   == 0
 . PIP_GBL_CTL[L4_MAL]   == 0
 . PIP_DEC_IPSEC[TCP]    == 0
 . PIP_DEC_IPSEC[UDP]    == 0
 . PIP_PRT_TAG[IP6_DPRT] == 0
 . PIP_PRT_TAG[IP6_SPRT] == 0
 . PIP_PRT_TAG[TCP6_TAG] == 0
 . PIP_GBL_CFG[TAG_SYN]  == 0
----------------------------------------------------------------------------------------------------
===


 *
 * PIP_TAG_SECRET = Initial value in tag generation
 *
 * The source and destination IV's provide a mechanism for each Octeon to be unique.
 *

     ==============================================================
     PIP_TAG_SECRET Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |   
 <31:16> DST      R/W      0x0         0x0       Secret for the destination tuple tag CRC calc	    |   
 <15:0>  SRC      R/W      0x0         0x0       Secret for the source tuple tag CRC calc	    |   
----------------------------------------------------------------------------------------------------
===


 *
 * PIP_TAG_MASK = Mask bit in the tag generation
 *

     ==============================================================
     PIP_TAG_MASK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |   
 <15:0>  MASK     R/W      0x0         0x0       When set, MASK clears individual bits of lower 16  |   
						  bits of the computed tag.  Does not effect RAW    |
						  or INSTR HDR packets.				    |
----------------------------------------------------------------------------------------------------
===


 *
 * PIP_TODO_ENTRY = Head entry of the Todo list (debug only)
 *
 * Summary of the current packet that has completed and waiting to be processed
 *

     ==============================================================
     PIP_TODO_ENTRY Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    VAL      RO       NS          NS        Entry is valid					    |   
 <62>    NS       RAZ      NS          NS        Reserved				            |   
 <61:0>  ENTRY    RO       NS          NS        Todo list entry summary			    |   
----------------------------------------------------------------------------------------------------
===

 
 *
 * PIP_DEC_IPSEC = UDP or TCP ports to watch for DEC IPSEC
 *
 * PIP sets the dec_ipsec based on TCP or UDP destination port.
 *

     ==============================================================
     PIP_DEC_IPSEC(0..3) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:18> NS       RAZ      NS          NS        Reserved				            |   
 <17>    TCP      R/W      0x0         0x0       This DPRT should be used for TCP packets           |   
 <16>    UDP      R/W      0x0         0x0       This DPRT should be used for UDP packets           |   
 <15:0>  DPRT     R/W      0x0000      0x0000    UDP or TCP destination port to match on            |   
----------------------------------------------------------------------------------------------------
===


 *
 * PIP_RAW_WORD = The RAW Word2 of the workQ entry.
 *
 * The RAW Word2 to be inserted into the workQ entry of RAWFULL packets.
 *

     ==============================================================
     PIP_RAW_WORD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:56> NS       RAZ      NS          NS        Reserved				            |   
 <55:0>  WORD     R/W      0x0         0x0       Word2 of the workQ entry                           |   
                                                  The 8-bit bufs field is still set by HW (IPD)     |
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_QOS_VLAN@ = QOS VLAN Tables
 *
 * If the PIP indentifies a packet is DSA/VLAN tagged, then the QOS
 * can be set based on the DSA/VLAN user priority.  These eight register
 * comprise the QOS values for all DSA/VLAN user priority values.
 * 

     ==============================================================
     PIP_QOS_VLAN(0..7) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ      NS          NS        Reserved				            |   
 <6:4>   QOS1     R/W      0x0         0x0       DSA/VLAN QOS level                                 |   
						  Selected when PIP_PRT_CFGx[QOS_VSEL] = 1	    |
 <3>     NS       RAZ      NS          NS        Reserved				            |   
 <2:0>   QOS      R/W      0x0         0x0       DSA/VLAN QOS level                                 |   
						  Selected when PIP_PRT_CFGx[QOS_VSEL] = 0	    |
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_QOS_WATCH@ = QOS Watcher Tables
 * 
 * Sets up the Configuration CSRs for the four QOS Watchers.
 * Each Watcher can be set to look for a specific protocol,
 * TCP/UDP destination port, or Ethertype to override the
 * default QOS value.
 * 

     ==============================================================
     PIP_QOS_WATCH(0..7) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |   
 <47:32> MASK     R/W      0x0         0x0       Mask off a range of values                         |   
 <31:28> NS       RAZ      NS          NS        Reserved				            |   
 <27:24> GRP      R/W      0x0         0x0       The GRP number of the watcher                      |   
 <23>    NS       RAZ      NS          NS        Reserved				            |   
 <22:20> WATCHER  R/W      0x0         0x0       The QOS level of the watcher                       |   
 <19>    NS       RAZ      NS          NS        Reserved				            |   
 <18:16> TYPE     R/W      0x0         0x0       The field for the watcher match against            |   
                                                  0   = disable across all ports		    |
						  1   = protocol (ipv4)				    |
						      = next_header (ipv6)			    |
						  2   = TCP destination port			    |
						  3   = UDP destination port			    |
						  4   = Ether type				    |
						  5-7 = Reserved				    |
 <15:0>  MATCH    R/W      0x0000      0x0000    The value to watch for                             |   
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PIP_FRM_LEN_CHK(0..0) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |   
 <31:16> MAXLEN   R/W      0x600       0x600    Byte count for Max-sized frame check                |   
						  PIP_PRT_CFGn[MAXERR_EN] enables the check for	    |
						  port n.					    |
						  If enabled, failing packets set the MAXERR	    |
						  interrupt and work-queue entry WORD2[opcode] is   |
						  set to OVER_FCS (0x3, if packet has bad FCS) or   |
						  OVER_ERR (0x4, if packet has good FCS).	    |
						  The effective MAXLEN used by HW is		    |
						  PIP_PRT_CFG[DSA_EN] == 0,			    |
						   PIP_FRM_LEN_CHK[MAXLEN] + 4*VV + 4*VS	    |
						  PIP_PRT_CFG[DSA_EN] == 1,			    |
						   PIP_FRM_LEN_CHK[MAXLEN] + PIP_PRT_CFG[SKIP]+4*VS |
						  If PTP_MODE, the 8B timestamp is prepended to the |
						   packet.  MAXLEN should be increased by 8 to	    |
						   compensate for the additional timestamp field.   |
 <15:0>  MINLEN   R/W      0x40        0x40      Byte count for Min-sized frame check               |   
						  PIP_PRT_CFGn[MINERR_EN] enables the check for	    |
						  port n.					    |
						  If enabled, failing packets set the MINERR	    |
						  interrupt and work-queue entry WORD2[opcode] is   |
						  set to UNDER_FCS (0x6, if packet has bad FCS) or  |
						  UNDER_ERR (0x8, if packet has good FCS).	    |
						  If PTP_MODE, the 8B timestamp is prepended to the |
						   packet.  MINLEN should be increased by 8 to	    |
						   compensate for the additional timestamp field.   |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PIP_DSA_SRC_GRP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:60> MAP15    R/W      0x0         0x0       DSA Group Algorithm			            |   
 <59:56> MAP14    R/W      0x0         0x0       DSA Group Algorithm			            |   
 <55:52> MAP13    R/W      0x0         0x0       DSA Group Algorithm			            |   
 <51:48> MAP12    R/W      0x0         0x0       DSA Group Algorithm			            |   
 <47:44> MAP11    R/W      0x0         0x0       DSA Group Algorithm			            |   
 <43:40> MAP10    R/W      0x0         0x0       DSA Group Algorithm			            |   
 <39:36> MAP9     R/W      0x0         0x0       DSA Group Algorithm			            |   
 <35:32> MAP8     R/W      0x0         0x0       DSA Group Algorithm			            |   
 <31:28> MAP7     R/W      0x0         0x0       DSA Group Algorithm			            |   
 <27:24> MAP6     R/W      0x0         0x0       DSA Group Algorithm			            |   
 <23:20> MAP5     R/W      0x0         0x0       DSA Group Algorithm			            |   
 <19:16> MAP4     R/W      0x0         0x0       DSA Group Algorithm			            |   
 <15:12> MAP3     R/W      0x0         0x0       DSA Group Algorithm			            |   
 <11:8>  MAP2     R/W      0x0         0x0       DSA Group Algorithm			            |   
 <7:4>   MAP1     R/W      0x0         0x0       DSA Group Algorithm			            |   
 <3:0>   MAP0     R/W      0x0         0x0       DSA Group Algorithm			            |   
						  Use the DSA source id to compute GRP		    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PIP_DSA_VID_GRP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:60> MAP15    R/W      0x0         0x0       DSA Group Algorithm			            |   
 <59:56> MAP14    R/W      0x0         0x0       DSA Group Algorithm			            |   
 <55:52> MAP13    R/W      0x0         0x0       DSA Group Algorithm			            |   
 <51:48> MAP12    R/W      0x0         0x0       DSA Group Algorithm			            |   
 <47:44> MAP11    R/W      0x0         0x0       DSA Group Algorithm			            |   
 <43:40> MAP10    R/W      0x0         0x0       DSA Group Algorithm			            |   
 <39:36> MAP9     R/W      0x0         0x0       DSA Group Algorithm			            |   
 <35:32> MAP8     R/W      0x0         0x0       DSA Group Algorithm			            |   
 <31:28> MAP7     R/W      0x0         0x0       DSA Group Algorithm			            |   
 <27:24> MAP6     R/W      0x0         0x0       DSA Group Algorithm			            |   
 <23:20> MAP5     R/W      0x0         0x0       DSA Group Algorithm			            |   
 <19:16> MAP4     R/W      0x0         0x0       DSA Group Algorithm			            |   
 <15:12> MAP3     R/W      0x0         0x0       DSA Group Algorithm			            |   
 <11:8>  MAP2     R/W      0x0         0x0       DSA Group Algorithm			            |   
 <7:4>   MAP1     R/W      0x0         0x0       DSA Group Algorithm			            |   
 <3:0>   MAP0     R/W      0x0         0x0       DSA Group Algorithm			            |   
						  Use the DSA source id to compute GRP		    |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PIP_HG_PRI_QOS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:13> NS       RAZ      NS          NS        Reserved				            |   
 <12>    UP_QOS   RAZ      0x0         NS        When written to '1', updates the entry in the	    |   
						  HG_QOS_TABLE as specified by PRI to a value of    |
						  QOS as follows				    |
						  HG_QOS_TABLE[PRI] = QOS			    |
 <11>    NS       RAZ      NS          NS        Reserved				            |   
 <10:8>  QOS      R/W      0x0         NS        QOS Map level to priority		            |   
 <7:6>   NS       RAZ      NS          NS        Reserved				            |   
 <5:0>   PRI      R/W      0x0         NS        The priority level from HiGig header	            |   
						  HiGig/HiGig+ PRI = {1'b0, CNG[1:0], COS[2:0]}	    |
						  HiGig2       PRI = {DP[1:0], TC[3:0]}	    	    |

Notes:
This register controls accesses to the HG_QOS_TABLE.  To write an entry of
the table, write PIP_HG_PRI_QOS with PRI=table address, QOS=priority level,
UP_QOS=1.  To read an entry of the table, write PIP_HG_PRI_QOS with
PRI=table address, QOS=dont_carepriority level, UP_QOS=0 and then read
PIP_HG_PRI_QOS.  The table data will be in PIP_HG_PRI_QOS[QOS].
----------------------------------------------------------------------------------------------------
===


 *
 * PIP_PRT_CFG@ = Per port config information
 *

     ==============================================================
     PIP_PRT_CFG(0..3,32..35,36..39,40..43) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:53> NS       RAZ      NS          NS        Reserved				            |   
 <52>	 PAD_LEN  R/W      0x0         0         When set, disables the length check for pkts with  |	
						  padding in the client data			    |
 <51>	 VLAN_LEN R/W      0x0         0         When set, disables the length check for DSA/VLAN   |	
                                                  pkts                                              |
 <50>	 LENERR_EN R/W     0x1         1         L2 length error check enable			    |	
						  Frame was received with length error		    |
						   Typically, this check will not be enabled for    |
						   incoming packets on the PCIe ports.		    |
 <49>	 MAXERR_EN R/W     0x1         1	 Max frame error check enable			    |	
						  Frame was received with length > max_length	    |
 <48>	 MINERR_EN R/W     0x1         1         Min frame error check enable			    |	
						  Frame was received with length < min_length	    |
						   Typically, this check will not be enabled for    |
						   incoming packets on the PCIe ports.		    |
 <47:44> GRP_WAT_47 R/W    0x0         0x0       GRP Watcher enable				    |   
						  (Watchers 4-7)				    |
 <43:40> QOS_WAT_47 R/W    0x0         0x0       QOS Watcher enable				    |   
						  (Watchers 4-7)				    |
 <39:37> NS       RAZ      NS          NS        Reserved				            |   
 <36>    RAWDRP   R/W      0x0         0x0       Allow the IPD to RED drop a packet.		    |	
						  Normally, IPD will never drop a packet that PIP   |
						  indicates is RAW.				    |
						  0=never drop RAW packets based on RED algorithm   |
						  1=allow RAW packet drops based on RED algorithm   |
 <35:34> TAG_INC  R/W	   0x0	       0x0	 Which of the 4 PIP_TAG_INC to use when		    |	
						  calculating mask tag hash			    |
 <33>    DYN_RS	  R/W	   0x0	       0x0	 Dynamically calculate RS based on pkt size and	    |	
						  configuration.  If DYN_RS is set then		    |
						  PKT_INST_HDR[RS] is not used.  When using 2-byte  |
						  instruction header words, either DYN_RS or	    |
						  PIP_GBL_CTL[IGNRS] should be set.		    |
 <32>    INST_HDR R/W      0x0         0x0       8-byte INST_HDR is present on all packets	    |	
						  (not for PCI prts, 32-35)			    |
						  Must be zero in DSA mode			    |
 <31:28> GRP_WAT  R/W      0x0         0x0       GRP Watcher enable				    |   
 <27>    HG_QOS   R/W      0x0         0x0       When set, uses the HiGig priority bits as a	    |	
						  lookup into the HG_QOS_TABLE (PIP_HG_PRI_QOS)	    |
						  to determine the QOS value			    |
						  HG_QOS must not be set when HIGIG_EN=0	    |
 <26:24> QOS      R/W      0x0         0x0       Default QOS level of the port                      |   
 <23:20> QOS_WAT  R/W      0x0         0x0       QOS Watcher enable                                 |   
						  (Watchers 0-3)				    |
 <19>    QOS_VSEL R/W      0x0         0x0	 Which QOS in PIP_QOS_VLAN to use		    |   
						  0 = PIP_QOS_VLAN[QOS]				    |
						  1 = PIP_QOS_VLAN[QOS1]			    |
 <18>    QOS_VOD  R/W      0x0         0x0       QOS VLAN over Diffserv                             |   
						  if DSA/VLAN exists, it is used		    |
						  else if IP exists, Diffserv is used		    |
						  else the per port default is used		    |
						  Watchers are still highest priority		    |
 <17>    QOS_DIFF R/W      0x0         0x0       QOS Diffserv                                       |   
 <16>    QOS_VLAN R/W      0x0         0x0       QOS VLAN                                           |   
 <15:13> NS       RAZ      NS          NS        Reserved				            |   
 <12>    CRC_EN   RO       0x0         0x0       CRC Checking enabled                               |   
 <11>    HIGIG_EN R/W      0x0         0x0       Enable HiGig parsing				    |   
						  Should not be set for PCIe ports (ports 32-35)    |
						  Should not be set for ports in which PTP_MODE=1   |
                                                  When HIGIG_EN=1:                                  |
                                                   DSA_EN field below must be zero                  |
                                                   SKIP field below is both Skip I size and the     |
                                                     size of the HiGig* header (12 or 16 bytes)     |
 <10>    DSA_EN   R/W      0x0         0x0       Enable DSA tag parsing				    |   
                                                  When DSA_EN=1:                                    |
                                                   HIGIG_EN field above must be zero                |
                                                   SKIP field below is size of DSA tag (4, 8, or    |
                                                     12 bytes) rather than the size of Skip I       |
                                                   total SKIP (Skip I + header + Skip II            |
                                                     must be zero                                   |
                                                   INST_HDR field above must be zero (non-PCIe      |
                                                     ports)                                         |
                                                   For PCIe ports, NPEI_PKT*_INSTR_HDR[USE_IHDR]    |
                                                     and PCIE_INST_HDR[R] should be clear           |
                                                   MODE field below must be "skip to L2"            |
 <9:8>   MODE     R/W      0x0         0x0       Parse Mode                                         |   
                                                  0 = no packet inspection (Uninterpreted)	    |
                                                  1 = L2 parsing / skip to L2			    |
						  2 = IP parsing / skip to L3			    |
						  3 = (illegal)	                                    |
                                                  Must be 2 ("skip to L2") when in DSA mode.        |
 <7>     NS       RAZ      NS          NS        Reserved				            |   
 <6:0>   SKIP     R/W      0x0         0x0       Optional Skip I amount for packets.  Does not	    |	
						  apply to packets on PCI ports when a PKT_INST_HDR |
						  is present.  See section 7.2.7 - Legal Skip	    |
						  Values for further details.			    |
						  In DSA mode, indicates the DSA header length, not |
                                                    Skip I size. (Must be 4,8,or 12)                |
                                                  In HIGIG mode, indicates both the Skip I size and |
                                                    the HiGig header size (Must be 12 or 16).       |
						  If PTP_MODE, the 8B timestamp is prepended to the |
						   packet.  SKIP should be increased by 8 to	    |
						   compensate for the additional timestamp field.   |
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_PRT_TAG@ = Per port config information
 *

     ==============================================================
     PIP_PRT_TAG(0..3,32..35,36..39,40..43) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:40> NS       RAZ      NS          NS        Reserved				            |   
 <39:36> GRPTAGBASE R/W	   0	       0         Offset to use when computing group from tag bits   |	
						  when GRPTAG is set.				    |
 <35:32> GRPTAGMASK R/W	   0	       0         Which bits of the tag to exclude when computing    |	
						  group when GRPTAG is set.			    |
 <31>    GRPTAG   R/W      0x0         0x0       When set, use the lower bit of the tag to compute  |	
						  the group in the work queue entry		    |
						  GRP = WQE[TAG[3:0]] & ~GRPTAGMASK + GRPTAGBASE    |
 <30>    GRPTAG_MSKIP R/W  0x0         0x0       When set, GRPTAG will be used regardless if the    |	
						  packet IS_IP.					    |
 <29:28> TAG_MODE R/W	   0x0	       0x0	 Which tag algorithm to use			    |	
						  0 = always use tuple tag algorithm		    |
						  1 = always use mask tag algorithm		    |
						  2 = if packet is IP, use tuple else use mask	    |
						  3 = tuple XOR mask				    |
 <27:26> INC_VS   R/W      0x0         0x0       determines the DSA/VLAN ID (VID) to be included in |   
						  tuple tag when VLAN stacking is detected	    |
						  0 = do not include VID in tuple tag generation    |
						  1 = include VID (VLAN0) in hash		    |
						  2 = include VID (VLAN1) in hash		    |
						  3 = include VID ({VLAN0,VLAN1}) in hash	    |
 <25>    INC_VLAN R/W      0x0         0x0       when set, the DSA/VLAN ID is included in tuple tag |   
						  when VLAN stacking is not detected		    |
						  0 = do not include VID in tuple tag generation    |
						  1 = include VID in hash			    |
 <24>    INC_PRT  R/W      0x0         0x0       sets whether the port is included in tuple tag     |   
 <23>    IP6_DPRT R/W      0x0         0x0       sets whether the TCP/UDP dst port is               |   
                                                  included in tuple tag for IPv6 packets            |
 <22>    IP4_DPRT R/W      0x0         0x0       sets whether the TCP/UDP dst port is               |   
                                                  included in tuple tag for IPv4                    |
 <21>    IP6_SPRT R/W      0x0         0x0       sets whether the TCP/UDP src port is               |   
                                                  included in tuple tag for IPv6 packets            |
 <20>    IP4_SPRT R/W      0x0         0x0       sets whether the TCP/UDP src port is               |   
                                                  included in tuple tag for IPv4                    |
 <19>    IP6_NXTH R/W      0x0         0x0       sets whether ipv6 includes next header in tuple    |   
						  tag hash					    |
 <18>    IP4_PCTL R/W      0x0         0x0       sets whether ipv4 includes protocol in tuple	    |   
						  tag hash					    |
 <17>    IP6_DST  R/W      0x0         0x0       sets whether ipv6 includes dst address in tuple    |   
						  tag hash					    |
 <16>    IP4_DST  R/W      0x0         0x0       sets whether ipv4 includes dst address in tuple    |   
						  tag hash					    |
 <15>    IP6_SRC  R/W      0x0         0x0       sets whether ipv6 includes src address in tuple    |   
						  tag hash					    |
 <14>    IP4_SRC  R/W      0x0         0x0       sets whether ipv4 includes src address in tuple    |   
						  tag hash					    |
 <13:12> TCP6_TAG R/W      0x0         0x0       sets the tag_type of a TCP packet (IPv6)           |   
                                                  0 = ordered tags				    |
                                                  1 = atomic tags				    |
                                                  2 = Null tags				            |
 <11:10> TCP4_TAG R/W      0x0         0x0       sets the tag_type of a TCP packet (IPv4)           |   
                                                  0 = ordered tags				    |
                                                  1 = atomic tags				    |
                                                  2 = Null tags				            |
 <9:8>   IP6_TAG  R/W      0x0         0x0       sets whether IPv6 packet tag type                  |   
                                                  0 = ordered tags				    |
                                                  1 = atomic tags				    |
                                                  2 = Null tags				            |
 <7:6>   IP4_TAG  R/W      0x0         0x0       sets whether IPv4 packet tag type                  |   
                                                  0 = ordered tags				    |
                                                  1 = atomic tags				    |
                                                  2 = Null tags				            |
 <5:4>   NON_TAG  R/W      0x0         0x0       sets whether non-IP packet tag type                |   
                                                  0 = ordered tags				    |
                                                  1 = atomic tags				    |
                                                  2 = Null tags				            |
 <3:0>   GRP      R/W      0x0         0x0       4-bit value indicating the group to schedule to    |   
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_QOS_DIFF@ = QOS Diffserv Tables
 *

     ==============================================================
     PIP_QOS_DIFF(0..63) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:3>  NS       RAZ      NS          NS        Reserved				            |   
 <2:0>   QOS      R/W      0x0         0x0       Diffserv QOS level                                 |   
----------------------------------------------------------------------------------------------------
===

 *
 *          PIP Statistics Counters
 *
 * Note: special stat counter behavior
 *
 * 1) Read and write operations must arbitrate for the statistics resources
 *     along with the packet engines which are incrementing the counters.
 *     In order to not drop packet information, the packet HW is always a
 *     higher priority and the CSR requests will only be satisified when
 *     there are idle cycles.  This can potentially cause long delays if the
 *     system becomes full.
 *
 * 2) stat counters can be cleared in two ways.  If PIP_STAT_CTL[RDCLR] is
 *     set, then all read accesses will clear the register.  In addition,
 *     any write to a stats register will also reset the register to zero.
 *     Please note that the clearing operations must obey rule #1 above.
 *
 * 3) all counters are wrapping - software must ensure they are read periodically
 *
 * 4) The counters accumulate statistics for packets that are sent to PKI.  If
 *    PTP_MODE is enabled, the 8B timestamp is prepended to the packet.  This
 *    additional 8B of data is captured in the octet counts.


 * PIP_STAT0_PRT = PIP_STAT_DRP_PKTS / PIP_STAT_DRP_OCTS

     ==============================================================
     PIP_STAT0_PRT(0..3,32..35,36..39) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> DRP_PKTS R/W      0x0         NS        Inbound packets marked to be dropped by the IPD    |   
						 QOS widget per port				    |
 <31:0>  DRP_OCTS R/W      0x0         NS        Inbound octets marked to be dropped by the IPD     |   
						 QOS widget per port				    |
----------------------------------------------------------------------------------------------------
===

 * PIP_STAT1_PRT@ = PIP_STAT_OCTS

     ==============================================================
     PIP_STAT1_PRT(0..3,32..35,36..39) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |   
 <47:0>  OCTS     R/W      0x0         NS        Number of octets received by PIP (good and bad)    |   
----------------------------------------------------------------------------------------------------
===

 * PIP_STAT2_PRT@ = PIP_STAT_PKTS     / PIP_STAT_RAW

     ==============================================================
     PIP_STAT2_PRT(0..3,32..35,36..39) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> PKTS     R/W      0x0         NS        Number of packets processed by PIP                 |   
 <31:0>  RAW      R/W      0x0         NS        RAWFULL + RAWSCH Packets without an L1/L2 error    |   
                                                  received by PIP per port			    |
----------------------------------------------------------------------------------------------------
===

 * PIP_STAT3_PRT@ = PIP_STAT_BCST     / PIP_STAT_MCST

     ==============================================================
     PIP_STAT3_PRT(0..3,32..35,36..39) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> BCST     R/W      0x0         NS        Number of indentified L2 broadcast packets         |   
						  Does not include multicast packets		    |
						  Only includes packets whose parse mode is	    |
						  SKIP_TO_L2.					    |
 <31:0>  MCST     R/W      0x0         NS        Number of indentified L2 multicast packets         |   
						  Does not include broadcast packets		    |
						  Only includes packets whose parse mode is	    |
						  SKIP_TO_L2.					    |
----------------------------------------------------------------------------------------------------
===
 
 * PIP_STAT4_PRT@ = PIP_STAT_HIST1    / PIP_STAT_HIST0

     ==============================================================
     PIP_STAT4_PRT(0..3,32..35,36..39) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> H65to127 R/W      0x0         NS        Number of 65-127B packets		            |   
 <31:0>  H64      R/W      0x0         NS        Number of 1-64B packets                            |   
----------------------------------------------------------------------------------------------------
===
 
 * PIP_STAT5_PRT@ = PIP_STAT_HIST3    / PIP_STAT_HIST2

     ==============================================================
     PIP_STAT5_PRT(0..3,32..35,36..39) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> H256to511 R/W     0x0         NS        Number of 256-511B packets		            |   
 <31:0>  H128to255 R/W     0x0         NS        Number of 128-255B packets                         |   
----------------------------------------------------------------------------------------------------
===
 
 * PIP_STAT6_PRT@ = PIP_STAT_HIST5    / PIP_STAT_HIST4

     ==============================================================
     PIP_STAT6_PRT(0..3,32..35,36..39) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> H1024to1518 R/W   0x0         NS        Number of 1024-1518B packets		            |   
 <31:0>  H512to1023  R/W   0x0         NS        Number of 512-1023B packets                        |   
----------------------------------------------------------------------------------------------------
===
 
 * PIP_STAT7_PRT@ = PIP_STAT_FCS      / PIP_STAT_HIST6

     ==============================================================
     PIP_STAT7_PRT(0..3,32..35,36..39) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> FCS      R/W      0x0         NS        Number of packets with FCS or Align opcode errors    |   
 <31:0>  H1519    R/W      0x0         NS        Number of 1519-max packets                           |   

Notes:
Note: FCS is not checked on the PCI ports 32..35.
----------------------------------------------------------------------------------------------------
===
 
 * PIP_STAT8_PRT@ = PIP_STAT_FRAG     / PIP_STAT_UNDER

     ==============================================================
     PIP_STAT8_PRT(0..3,32..35,36..39) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> FRAG     R/W     0x0          NS        Number of packets with length < min and FCS error  |   
 <31:0>  UNDERSZ  R/W     0x0          NS        Number of packets with length < min                |   

Notes:
Note: FCS is not checked on the PCI ports 32..35.
----------------------------------------------------------------------------------------------------
===
 
 * PIP_STAT9_PRT@ = PIP_STAT_JABBER   / PIP_STAT_OVER

     ==============================================================
     PIP_STAT9_PRT(0..3,32..35,36..39) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> JABBER   R/W     0x0          NS        Number of packets with length > max and FCS error  |   
 <31:0>  OVERSZ   R/W     0x0          NS        Number of packets with length > max                |   

Notes:
Note: FCS is not checked on the PCI ports 32..35.
----------------------------------------------------------------------------------------------------
===

 * PIP_STAT10_PRT@ = PIP_STAT_L2_MCAST / PIP_STAT_L2_BCAST
 * CISCO-SPECIFIC CSR

     ==============================================================
     PIP_STAT10_PRT(0..3,32..35,36..39) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> BCAST    R/W     0x0          NS        Number of packets with L2 Broadcast DMAC	    |   
						  that were dropped due to RED.			    |
						  The HW will consider a packet to be an L2	    |
						  broadcast packet when the 48-bit DMAC is all 1's. |
						  Only applies when the parse mode for the packet   |
						  is SKIP-TO-L2.				    |
 <31:0>  MCAST    R/W     0x0          NS        Number of packets with L2 Mulitcast DMAC	    |   
						  that were dropped due to RED.			    |
						  The HW will consider a packet to be an L2	    |
						  multicast packet when the least-significant bit   |
						  of the first byte of the DMAC is set and the	    |
						  packet is not an L2 broadcast packet.		    |
						  Only applies when the parse mode for the packet   |
						  is SKIP-TO-L2.				    |
----------------------------------------------------------------------------------------------------
===

 * PIP_STAT11_PRT@ = PIP_STAT_L3_MCAST / PIP_STAT_L3_BCAST
 * CISCO-SPECIFIC CSR

     ==============================================================
     PIP_STAT11_PRT(0..3,32..35,36..39) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> BCAST    R/W     0x0          NS        Number of packets with L3 Broadcast Dest Address   |   
						  that were dropped due to RED.			    |
						  The HW considers an IPv4 packet to be broadcast   |
						  when all bits are set in the MSB of the	    |
						  destination address. IPv6 does not have the	    |
						  concept of a broadcast packets.		    |
						  Only applies when the parse mode for the packet   |
						  is SKIP-TO-L2 and the packet is IP or the parse   |
						  mode for the packet is SKIP-TO-IP.		    |
 <31:0>  MCAST    R/W     0x0          NS        Number of packets with L3 Multicast Dest Address   |   
						  that were dropped due to RED.			    |
						  The HW considers an IPv4 packet to be multicast   |
						  when the most-significant nibble of the 32-bit    |
						  destination address is 0xE (i.e. it is a class D  |
						  address). The HW considers an IPv6 packet to be   |
						  multicast when the most-significant byte of the   |
						  128-bit destination address is all 1's.	    |
						  Only applies when the parse mode for the packet   |
						  is SKIP-TO-L2 and the packet is IP or the parse   |
						  mode for the packet is SKIP-TO-IP.		    |
----------------------------------------------------------------------------------------------------
===

 * PIP_XSTAT0_PRT = PIP_XSTAT_DRP_PKTS / PIP_XSTAT_DRP_OCTS

     ==============================================================
     PIP_XSTAT0_PRT(40..43) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> DRP_PKTS R/W      0x0         NS        Inbound packets marked to be dropped by the IPD    |   
						 QOS widget per port				    |
 <31:0>  DRP_OCTS R/W      0x0         NS        Inbound octets marked to be dropped by the IPD     |   
						 QOS widget per port				    |
----------------------------------------------------------------------------------------------------
===

 * PIP_XSTAT1_PRT@ = PIP_XSTAT_OCTS

     ==============================================================
     PIP_XSTAT1_PRT(40..43) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |   
 <47:0>  OCTS     R/W      0x0         NS        Number of octets received by PIP (good and bad)    |   
----------------------------------------------------------------------------------------------------
===

 * PIP_XSTAT2_PRT@ = PIP_XSTAT_PKTS     / PIP_XSTAT_RAW

     ==============================================================
     PIP_XSTAT2_PRT(40..43) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> PKTS     R/W      0x0         NS        Number of packets processed by PIP                 |   
 <31:0>  RAW      R/W      0x0         NS        RAWFULL + RAWSCH Packets without an L1/L2 error    |   
                                                  received by PIP per port			    |
----------------------------------------------------------------------------------------------------
===

 * PIP_XSTAT3_PRT@ = PIP_XSTAT_BCST     / PIP_XSTAT_MCST

     ==============================================================
     PIP_XSTAT3_PRT(40..43) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> BCST     R/W      0x0         NS        Number of indentified L2 broadcast packets         |   
						  Does not include multicast packets		    |
						  Only includes packets whose parse mode is	    |
						  SKIP_TO_L2.					    |
 <31:0>  MCST     R/W      0x0         NS        Number of indentified L2 multicast packets         |   
						  Does not include broadcast packets		    |
						  Only includes packets whose parse mode is	    |
						  SKIP_TO_L2.					    |
----------------------------------------------------------------------------------------------------
===
 
 * PIP_XSTAT4_PRT@ = PIP_XSTAT_HIST1    / PIP_XSTAT_HIST0

     ==============================================================
     PIP_XSTAT4_PRT(40..43) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> H65to127 R/W      0x0         NS        Number of 65-127B packets		            |   
 <31:0>  H64      R/W      0x0         NS        Number of 1-64B packets                            |   
----------------------------------------------------------------------------------------------------
===
 
 * PIP_XSTAT5_PRT@ = PIP_XSTAT_HIST3    / PIP_XSTAT_HIST2

     ==============================================================
     PIP_XSTAT5_PRT(40..43) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> H256to511 R/W     0x0         NS        Number of 256-511B packets		            |   
 <31:0>  H128to255 R/W     0x0         NS        Number of 128-255B packets                         |   
----------------------------------------------------------------------------------------------------
===
 
 * PIP_XSTAT6_PRT@ = PIP_XSTAT_HIST5    / PIP_XSTAT_HIST4

     ==============================================================
     PIP_XSTAT6_PRT(40..43) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> H1024to1518 R/W   0x0         NS        Number of 1024-1518B packets		            |   
 <31:0>  H512to1023  R/W   0x0         NS        Number of 512-1023B packets                        |   
----------------------------------------------------------------------------------------------------
===
 
 * PIP_XSTAT7_PRT@ = PIP_XSTAT_FCS      / PIP_XSTAT_HIST6

     ==============================================================
     PIP_XSTAT7_PRT(40..43) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> FCS      R/W      0x0         NS        Number of packets with FCS or Align opcode errors    |   
 <31:0>  H1519    R/W      0x0         NS        Number of 1519-max packets                           |   

Notes:
Note: FCS is not checked on the PCI ports 32..35.
----------------------------------------------------------------------------------------------------
===
 
 * PIP_XSTAT8_PRT@ = PIP_XSTAT_FRAG     / PIP_XSTAT_UNDER

     ==============================================================
     PIP_XSTAT8_PRT(40..43) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> FRAG     R/W     0x0          NS        Number of packets with length < min and FCS error  |   
 <31:0>  UNDERSZ  R/W     0x0          NS        Number of packets with length < min                |   

Notes:
Note: FCS is not checked on the PCI ports 32..35.
----------------------------------------------------------------------------------------------------
===
 
 * PIP_XSTAT9_PRT@ = PIP_XSTAT_JABBER   / PIP_XSTAT_OVER

     ==============================================================
     PIP_XSTAT9_PRT(40..43) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> JABBER   R/W     0x0          NS        Number of packets with length > max and FCS error  |   
 <31:0>  OVERSZ   R/W     0x0          NS        Number of packets with length > max                |   

Notes:
Note: FCS is not checked on the PCI ports 32..35.
----------------------------------------------------------------------------------------------------
===

 * PIP_XSTAT10_PRT@ = PIP_XSTAT_L2_MCAST / PIP_XSTAT_L2_BCAST
 * CISCO-SPECIFIC CSR

     ==============================================================
     PIP_XSTAT10_PRT(40..43) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> BCAST    R/W     0x0          NS        Number of packets with L2 Broadcast DMAC	    |   
						  that were dropped due to RED.			    |
						  The HW will consider a packet to be an L2	    |
						  broadcast packet when the 48-bit DMAC is all 1's. |
						  Only applies when the parse mode for the packet   |
						  is SKIP-TO-L2.				    |
 <31:0>  MCAST    R/W     0x0          NS        Number of packets with L2 Mulitcast DMAC	    |   
						  that were dropped due to RED.			    |
						  The HW will consider a packet to be an L2	    |
						  multicast packet when the least-significant bit   |
						  of the first byte of the DMAC is set and the	    |
						  packet is not an L2 broadcast packet.		    |
						  Only applies when the parse mode for the packet   |
						  is SKIP-TO-L2.				    |
----------------------------------------------------------------------------------------------------
===

 * PIP_XSTAT11_PRT@ = PIP_XSTAT_L3_MCAST / PIP_XSTAT_L3_BCAST
 * CISCO-SPECIFIC CSR

     ==============================================================
     PIP_XSTAT11_PRT(40..43) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> BCAST    R/W     0x0          NS        Number of packets with L3 Broadcast Dest Address   |   
						  that were dropped due to RED.			    |
						  The HW considers an IPv4 packet to be broadcast   |
						  when all bits are set in the MSB of the	    |
						  destination address. IPv6 does not have the	    |
						  concept of a broadcast packets.		    |
						  Only applies when the parse mode for the packet   |
						  is SKIP-TO-L2 and the packet is IP or the parse   |
						  mode for the packet is SKIP-TO-IP.		    |
 <31:0>  MCAST    R/W     0x0          NS        Number of packets with L3 Multicast Dest Address   |   
						  that were dropped due to RED.			    |
						  The HW considers an IPv4 packet to be multicast   |
						  when the most-significant nibble of the 32-bit    |
						  destination address is 0xE (i.e. it is a class D  |
						  address). The HW considers an IPv6 packet to be   |
						  multicast when the most-significant byte of the   |
						  128-bit destination address is all 1's.	    |
						  Only applies when the parse mode for the packet   |
						  is SKIP-TO-L2 and the packet is IP or the parse   |
						  mode for the packet is SKIP-TO-IP.		    |
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_STAT_INB_PKTS@ = Inbound packets received by PIP per port 
 *
 * Inbound stats collect all data sent to PIP from all packet interfaces.
 * Its the raw counts of everything that comes into the block.  The counts
 * will reflect all error packets and packets dropped by the PKI RED engine.
 * These counts are intended for system debug, but could convey useful
 * information in production systems.
 *

     ==============================================================
     PIP_STAT_INB_PKTS(0..3,32..35,36..39,40..43) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |   
 <31:0>  PKTS     R/W      0x0         NS        Number of packets without errors                   |   
						  received by PIP				    |
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_STAT_INB_OCTS@ = Inbound octets received by PIP per port
 *
 * Inbound stats collect all data sent to PIP from all packet interfaces.
 * Its the raw counts of everything that comes into the block.  The counts
 * will reflect all error packets and packets dropped by the PKI RED engine.
 * These counts are intended for system debug, but could convey useful
 * information in production systems. The OCTS will include the bytes from
 * timestamp fields in PTP_MODE.
 *

     ==============================================================
     PIP_STAT_INB_OCTS(0..3,32..35,36..39,40..43) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |   
 <47:0>  OCTS     R/W      0x0         NS        Total number of octets from all packets received   |   
						  by PIP					    |
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_STAT_INB_ERRS@ = Inbound error packets received by PIP per port
 *
 * Inbound stats collect all data sent to PIP from all packet interfaces.
 * Its the raw counts of everything that comes into the block.  The counts
 * will reflect all error packets and packets dropped by the PKI RED engine.
 * These counts are intended for system debug, but could convey useful
 * information in production systems.
 *

     ==============================================================
     PIP_STAT_INB_ERRS(0..3,32..35,36..39,40..43) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved				            |   
 <15:0>  ERRS     R/W      0x0         NS        Number of packets with errors                      |   
						  received by PIP				    |
----------------------------------------------------------------------------------------------------
===

 *
 * PIP_TAG_INC = Which bytes to include in the new tag hash algorithm
 *
*# $PIP_TAG_INC@ = 0x300+@ @=(0..63) RegType=(RSL) RtlReg=(pip_tag_inc_csr_direct_TestbuilderTask)

     ==============================================================
     PIP_TAG_INC(0..63) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved				            |   
 <7:0>   EN       R/W      0x0         0x0       Which bytes to include in mask tag algorithm       |   
						  Broken into 4, 16-entry masks to cover 128B	    |
						  PIP_PRT_CFG[TAG_INC] selects 1 of 4 to use	    |
						  registers  0-15 map to PIP_PRT_CFG[TAG_INC] == 0  |
						  registers 16-31 map to PIP_PRT_CFG[TAG_INC] == 1  |
						  registers 32-47 map to PIP_PRT_CFG[TAG_INC] == 2  |
						  registers 48-63 map to PIP_PRT_CFG[TAG_INC] == 3  |
						  [7] coresponds to the MSB of the 8B word	    |
						  [0] coresponds to the LSB of the 8B word	    |
						  If PTP_MODE, the 8B timestamp is prepended to the |
						   packet.  The EN byte masks should be adjusted to |
						   compensate for the additional timestamp field.   |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_FLAGS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ       NS          NS       RESERVED                                               
 <3>     RESET    RAZ       0           0        Reset oneshot pulse                                    
 <2>     STORE_BE R/W       0           0        Force STORE0 byte write address to big endian          
 <1>     ENA_DWB  R/W       0           0        Set to enable DontWriteBacks                           
 <0>     ENA_PKO  R/W       0           0        Set to enable the PKO picker                           

Notes:
 When set, ENA_PKO enables the PKO picker and places the PKO in normal operation.  When set, ENA_DWB
 enables the use of DontWriteBacks during the buffer freeing operations.  When not set, STORE_BE inverts
 bits[2:0] of the STORE0 byte write address.  When set, RESET causes a 4-cycle reset pulse to the
 entire box.
----------------------------------------------------------------------------------------------------
===
 

     ==============================================================
     PKO_REG_READ_IDX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        RESERVED                                               
 <15:8>  INC      R/W      0           0         Increment to add to current index for next index       
 <7:0>   IDX      R/W      0           0         Index to use for next memory CSR read                  

Notes:
 Provides the read index during a CSR read operation to any of the CSRs that are physically stored
 as memories.  The names of these CSRs begin with the prefix "PKO_MEM_".
 IDX[7:0] is the read index.  INC[7:0] is an increment that is added to IDX[7:0] after any CSR read.
 The intended use is to initially write this CSR such that IDX=0 and INC=1.  Then, the entire
 contents of a CSR memory can be read with consecutive CSR read commands.
----------------------------------------------------------------------------------------------------
===
 
 

     ==============================================================
     PKO_REG_CMD_BUF Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:23> NS       RAZ      NS          NS        RESERVED                                               
 <22:20> POOL     R/W      0           0         Free list used to free command buffer segments         
 <19:13> NS       R/W      0           0         MBZ                                                    
 <12:0>  SIZE     R/W      0           0         Number of uint64s per command buffer segment           

Notes:
 Sets the command buffer parameters
 The size of the command buffer segments is measured in uint64s.  The pool specifies (1 of 8 free
 lists to be used when freeing command buffer segments.
----------------------------------------------------------------------------------------------------
===
 


     ==============================================================
     PKO_REG_GMX_PORT_MODE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6>  NS       RAZ      NS          NS        RESERVED                                               
 <5:3>   MODE1    R/W      0           0         MBZ                                                    
 <2:0>   MODE0    R/W      2           2         # of GM0 ports = 16 >> MODE0, 0 <= MODE0 <= 4          

Notes:
 The system has a total of 4 + 0 + 4 + 4 + 4 ports and 4 + 0 + 1 + 1 + 1 + 1 engines (GM0 + GM1 + PCI + LOOP + SRIO0 + SRIO1).
 This CSR sets the number of GMX0 ports and amount of local storage per engine.
 It has no effect on the number of ports or amount of local storage per engine for PCI, LOOP,
 SRIO0, or SRIO1.  When all GMX ports are used (MODE0=2), each GMX engine has 2.5kB of local
 storage.  Increasing the value of MODEn by 1 decreases the number of GMX ports by a power of 2 and
 increases the local storage per PKO GMX engine by a power of 2.
 Modes 0 and 1 are illegal and, if selected, are treated as mode 2.

 MODE[n] GM[0] PCI   LOOP  GM[0]                      PCI            LOOP            SRIO0           SRIO1
         ports ports ports storage/engine             storage/engine storage/engine  storage/engine  storage/engine
 0       4     4     4       2.5kB                    2.5kB	     2.5kB	     2.5kB	     2.5kB	  
 1       4     4     4       2.5kB                    2.5kB	     2.5kB	     2.5kB	     2.5kB	  
 2       4     4     4       2.5kB                    2.5kB	     2.5kB	     2.5kB	     2.5kB	  
 3       2     4     4       5.0kB                    2.5kB	     2.5kB	     2.5kB	     2.5kB	  
 4       1     4     4      10.0kB                    2.5kB	     2.5kB	     2.5kB	     2.5kB	  
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     PKO_REG_QUEUE_MODE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ      NS          NS        RESERVED                                               
 <1:0>   MODE     R/W      0           0         # of queues = 256 >> MODE, 0 <= MODE <=2               

Notes:
 Sets the number of queues and amount of local storage per queue
 The system has a total of 256 queues and (256*8) words of local command storage.  This CSR sets the
 number of queues that are used.  Increasing the value of MODE by 1 decreases the number of queues
 by a power of 2 and increases the local storage per queue by a power of 2.
 MODEn queues storage/queue
 0     256     64B ( 8 words)
 1     128    128B (16 words)
 2      64    256B (32 words)
----------------------------------------------------------------------------------------------------
===
 


     ==============================================================
     PKO_REG_ENGINE_INFLIGHT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        RESERVED                                               
 <47:44> ENGINE11 R/W      4           4         Maximum number of inflight packets for engine11        
 <43:40> ENGINE10 R/W      4           4         Maximum number of inflight packets for engine10        
 <39:36> ENGINE9  R/W      4           4         Maximum number of inflight packets for engine9         
 <35:32> ENGINE8  R/W      4           4         Maximum number of inflight packets for engine8         
 <31:28> ENGINE7  R/W      0           0         MBZ                                                    
 <27:24> ENGINE6  R/W      0           0         MBZ                                                    
 <23:20> ENGINE5  R/W      0           0         MBZ                                                    
 <19:16> ENGINE4  R/W      0           0         MBZ                                                    
 <15:12> ENGINE3  R/W      4           4         Maximum number of inflight packets for engine3         
 <11:8>  ENGINE2  R/W      4           4         Maximum number of inflight packets for engine2         
 <7:4>   ENGINE1  R/W      4           4         Maximum number of inflight packets for engine1         
 <3:0>   ENGINE0  R/W      4           4         Maximum number of inflight packets for engine0         

Notes:
 Sets the maximum number of inflight packets, per engine.  Values greater than 4 are illegal.
 Setting an engine's value to 0 effectively stops the engine.
 Note that engines 4-7 do not exist
----------------------------------------------------------------------------------------------------
===
 


     ==============================================================
     PKO_REG_ENGINE_THRESH Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:12> NS       RAZ      NS          NS        RESERVED                                               
 <11:0>  MASK     R/W      0           0         Mask[n]=0 disables packet send threshold for engine n  
                                                 Mask[n]=1 enables  packet send threshold for engine n  $PR       NS              
                                                 Mask[n] MBZ for n = 4-7, as engines 4-7 dont exist

Notes:
 When not enabled, packet data may be sent as soon as it is written into PKO's internal buffers.
 When enabled and the packet fits entirely in the PKO's internal buffer, none of the packet data will
 be sent until all of it has been written into the PKO's internal buffer.  Note that a packet is
 considered to fit entirely only if the packet's size is <= BUFFER_SIZE-8.  When enabled and the
 packet does not fit entirely in the PKO's internal buffer, none of the packet data will be sent until
 at least BUFFER_SIZE-256 bytes of the packet have been written into the PKO's internal buffer
 (note that BUFFER_SIZE is a function of PKO_REG_GMX_PORT_MODE above)
 Note that engines 4-7 do not exist, so MASK<7:4> MBZ
----------------------------------------------------------------------------------------------------
===
 


     ==============================================================
     PKO_REG_TIMESTAMP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ      NS          NS        RESERVED                                               
 <3:0>   WQE_WORD R/W      2           2         Specifies the 8-byte word in the WQE to which a PTP    
                                                 timestamp is written.  Values 0 and 1 are illegal.

Notes:
 None.
----------------------------------------------------------------------------------------------------
===
 


     ==============================================================
     PKO_REG_BIST_RESULT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:35> NS       RAZ       NS          NS       RESERVED                                               
 <34:34> CSR      RO        X           0        BiST result of CSR      memories (0=pass, !0=fail)     
 <33:33> IOB      RO        X           0        BiST result of IOB      memories (0=pass, !0=fail)     
 <32:32> OUT_DAT  RO        X           0        BiST result of OUT_DAT  memories (0=pass, !0=fail)     
 <31:29> OUT_CTL  RO        X           0        BiST result of OUT_CTL  memories (0=pass, !0=fail)     
 <28:28> OUT_STA  RO        X           0        BiST result of OUT_STA  memories (0=pass, !0=fail)     
 <27:27> OUT_WIF  RO        X           0        BiST result of OUT_WIF  memories (0=pass, !0=fail)     
 <26:24> PRT_CHK  RO        X           0        BiST result of PRT_CHK  memories (0=pass, !0=fail)     
 <23:23> PRT_NXT  RO        X           0        BiST result of PRT_NXT  memories (0=pass, !0=fail)     
 <22:15> PRT_PSB  RO        X           0        BiST result of PRT_PSB  memories (0=pass, !0=fail)     
 <14:13> NCB_INB  RO        X           0        BiST result of NCB_INB  memories (0=pass, !0=fail)     
 <12:11> PRT_QCB  RO        X           0        BiST result of PRT_QCB  memories (0=pass, !0=fail)     
 <10:8>  PRT_QSB  RO        X           0        BiST result of PRT_QSB  memories (0=pass, !0=fail)     
 <7:6>   PRT_CTL  RO        X           0        BiST result of PRT_CTL  memories (0=pass, !0=fail)     
 <5:4>   DAT_DAT  RO        X           0        BiST result of DAT_DAT  memories (0=pass, !0=fail)     
 <3:0>   DAT_PTR  RO        X           0        BiST result of DAT_PTR  memories (0=pass, !0=fail)     

Notes:
 Access to the internal BiST results
 Each bit is the BiST result of an individual memory (per bit, 0=pass and 1=fail).
----------------------------------------------------------------------------------------------------
===

 

     ==============================================================
     PKO_REG_ERROR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:3>  NS       RAZ      NS          NS        RESERVED                                               
 <2>     CURRZERO R/W1C    0           0         A packet data pointer has size=0                       
 <1>     DOORBELL R/W1C    0           0         A doorbell count has overflowed                        
 <0>     PARITY   R/W1C    0           0         Read parity error at port data buffer                  

Notes:
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_INT_MASK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:3>  NS       RAZ      NS          NS        RESERVED                                               
 <2>     CURRZERO R/W      0           0         Bit mask corresponding to PKO_REG_ERROR[2] above       
 <1>     DOORBELL R/W      0           0         Bit mask corresponding to PKO_REG_ERROR[1] above       
 <0>     PARITY   R/W      0           0         Bit mask corresponding to PKO_REG_ERROR[0] above       

Notes:
 When a mask bit is set, the corresponding interrupt is enabled.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_DEBUG0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ASSERTS  RO       0           0         Various assertion checks                               

Notes:
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_DEBUG1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ASSERTS  RO       0           0         Various assertion checks                               

Notes:
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_DEBUG2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ASSERTS  RO       0           0         Various assertion checks                               

Notes:
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_DEBUG3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ASSERTS  RO       0           0         Various assertion checks                               

Notes:
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_QUEUE_PTRS1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ       NS          NS       RESERVED                                               
 <1>     IDX3     R/W       0           0        [3] of Index (distance from head) in the queue array   
 <0>     QID7     R/W       0           0        [7] of Queue ID				        

Notes:
 This CSR is used with PKO_MEM_QUEUE_PTRS and PKO_MEM_QUEUE_QOS to allow access to queues 128-255
 and to allow up mapping of up to 16 queues per port.  When programming queues 128-255, the
 programming sequence must first write PKO_REG_QUEUE_PTRS1 and then write PKO_MEM_QUEUE_PTRS or
 PKO_MEM_QUEUE_QOS for each queue.
 See the descriptions of PKO_MEM_QUEUE_PTRS and PKO_MEM_QUEUE_QOS for further explanation of queue
 programming.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_QUEUE_PREEMPT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2> NS        RAZ      NS           NS       RESERVED                                               
 <1>    PREEMPTEE R/W      0            0        Allow this QID to be preempted.                        
                                                 0=cannot be preempted, 1=can be preempted
 <0>    PREEMPTER R/W      0            0        Preempts the servicing of packet on PID to             
                                                 allow this QID immediate servicing.  0=do not cause
                                                 preemption, 1=cause preemption.  Per PID, at most
                                                 1 QID can have this bit set.

Notes:
 CISCO-SPECIFIC CSR
 Per QID, setting both PREEMPTER=1 and PREEMPTEE=1 is illegal and sets only PREEMPTER=1.
 This CSR is used with PKO_MEM_QUEUE_PTRS and PKO_REG_QUEUE_PTRS1.  When programming queues, the
 programming sequence must first write PKO_REG_QUEUE_PREEMPT, then PKO_REG_QUEUE_PTRS1 and then
 PKO_MEM_QUEUE_PTRS for each queue.  Preemption is supported only on queues that are ultimately
 mapped to engines 0-7.  It is illegal to set preemptee or preempter for a queue that is ultimately
 mapped to engines 8-11.

 Also, PKO_REG_ENGINE_INFLIGHT must be at least 2 for any engine on which preemption is enabled.

 See the descriptions of PKO_MEM_QUEUE_PTRS for further explanation of queue programming.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_REG_PREEMPT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS           NS       RESERVED                                               
 <15:0>  MIN_SIZE R/W      0            0        Threshhold for packet preemption, measured in bytes.   
                                                 Only packets which have at least MIN_SIZE bytes    
                                                 remaining to be read can be preempted.
Notes:
 CISCO-SPECIFIC CSR
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_QUEUE_PTRS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    S_TAIL   R/W       X           0        Set if this QID is the tail of the static queues       
 <62>    STATIC_P R/W       X           0        Set if any QID in this PID has static priority         
 <61>    STATIC_Q R/W       X           0        Set if this QID has static priority	                
 <60:53> QOS_MASK R/W       X           0        Mask to control priority across 8 QOS rounds           
 <52:17> BUF_PTR  R/W       X           0        Command buffer pointer, <23:17> MBZ	                
 <16:16> TAIL     R/W       X           0        Set if this QID is the tail of the queue array         
 <15:13> IDX      WR0       X           0        Index[2:0] (distance from head) in the queue array     
 <12:7>  PID      WR0       X           0        Port ID to which this queue is mapped	                
 <6:0>   QID      R/W       X           0        Queue ID[6:0]				                

Notes:
 Sets the queue to port mapping and the initial command buffer pointer, per queue
 Each queue may map to at most one port.  No more than 16 queues may map to a port.  The set of
 queues that is mapped to a port must be a contiguous array of queues.  The port to which queue QID
 is mapped is port PID.  The index of queue QID in port PID's queue list is IDX.  The last queue in
 port PID's queue array must have its TAIL bit set.  Unused queues must be mapped to port 63.
 STATIC_Q marks queue QID as having static priority.  STATIC_P marks the port PID to which QID is
 mapped as having at least one queue with static priority.  If any QID that maps to PID has static
 priority, then all QID that map to PID must have STATIC_P set.  Queues marked as static priority
 must be contiguous and begin at IDX 0.  The last queue that is marked as having static priority
 must have its S_TAIL bit set.  
 This CSR is a memory of 256 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_QUEUE_QOS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:61> NS       RAZ       NS          NS       RESERVED				                
 <60:53> QOS_MASK R/W       X           0        Mask to control priority across 8 QOS rounds           
 <52:13> NS       RAZ       NS          NS       RESERVED				                
 <12:7>  PID      WR0       X           0        Port ID to which this queue is mapped	                
 <6:0>   QID      R/W       X           0        Queue ID				                

Notes:
 Sets the QOS mask, per queue.  These QOS_MASK bits are logically and physically the same QOS_MASK
 bits in PKO_MEM_QUEUE_PTRS.  This CSR address allows the QOS_MASK bits to be written during PKO
 operation without affecting any other queue state.  The port to which queue QID is mapped is port
 PID.  Note that the queue to port mapping must be the same as was previously programmed via the
 PKO_MEM_QUEUE_PTRS CSR.
 This CSR is a memory of 256 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_PORT_PTRS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:62> NS        RAZ      NS          NS       RESERVED                                               
 <61>    STATIC_P  R/W      X           0        Set if this PID has static priority	                
 <60:53> QOS_MASK  R/W      X           0        Mask to control priority across 8 QOS rounds           
 <52:16> NS        RAZ      NS          NS       RESERVED                                               
 <15:10> BP_PORT   R/W      X           0        PID listens to BP_PORT for per-packet backpressure     
                                                 Legal BP_PORTs: 0-15, 32-43, 63 (63 means no BP)
 <9:6>   EID       R/W      X           0        Engine ID to which this port is mapped	                
                                                 Legal EIDs: 0-3, 8-11, 15 (15 only if port not used)
 <5:0>   PID       R/W      X           0        Port ID[5:0]				                

Notes:
 Sets the port to engine mapping, per port.  Ports marked as static priority need not be contiguous,
 but they must be the lowest numbered PIDs mapped to this EID and must have QOS_MASK=0xff.  If EID==8
 or EID==9, then PID[1:0] is used to direct the packet to the correct port on that interface.
 EID==15 can be used for unused PKO-internal ports.
 BP_PORT==63 means that the PKO-internal port is not backpressured.
 BP_PORTs are assumed to belong to an interface as follows:
   42 <= BP_PORT < 44 -> srio       interface 1
   40 <= BP_PORT < 42 -> srio       interface 0
   36 <= BP_PORT < 40 -> loopback   interface
   32 <= BP_PORT < 36 -> PCIe       interface
   0  <= BP_PORT < 16 -> SGMII/Xaui interface 0

 Note that the SRIO interfaces do not actually provide backpressure.  Thus, ports that use 
 40 <= BP_PORT < 44 for backpressure will never be backpressured.

 The reset configuration is the following:
   PID EID(ext port) BP_PORT QOS_MASK STATIC_P
   -------------------------------------------
     0   0( 0)             0     0xff        0
     1   1( 1)             1     0xff        0
     2   2( 2)             2     0xff        0
     3   3( 3)             3     0xff        0
     4   0( 0)             4     0xff        0
     5   1( 1)             5     0xff        0
     6   2( 2)             6     0xff        0
     7   3( 3)             7     0xff        0
     8   0( 0)             8     0xff        0
     9   1( 1)             9     0xff        0
    10   2( 2)            10     0xff        0
    11   3( 3)            11     0xff        0
    12   0( 0)            12     0xff        0
    13   1( 1)            13     0xff        0
    14   2( 2)            14     0xff        0
    15   3( 3)            15     0xff        0
   -------------------------------------------
    16   0( 0)             0     0xff        0
    17   1( 1)             1     0xff        0
    18   2( 2)             2     0xff        0
    19   3( 3)             3     0xff        0
    20   0( 0)             4     0xff        0
    21   1( 1)             5     0xff        0
    22   2( 2)             6     0xff        0
    23   3( 3)             7     0xff        0
    24   0( 0)             8     0xff        0
    25   1( 1)             9     0xff        0
    26   2( 2)            10     0xff        0
    27   3( 3)            11     0xff        0
    28   0( 0)            12     0xff        0
    29   1( 1)            13     0xff        0
    30   2( 2)            14     0xff        0
    31   3( 3)            15     0xff        0
   -------------------------------------------
    32   8(32)            32     0xff        0
    33   8(33)            33     0xff        0
    34   8(34)            34     0xff        0
    35   8(35)            35     0xff        0
   -------------------------------------------
    36   9(36)            36     0xff        0
    37   9(37)            37     0xff        0
    38   9(38)            38     0xff        0
    39   9(39)            39     0xff        0
   -------------------------------------------
    40  10(40)            40     0xff        0
    41  10(41)            41     0xff        0
   -------------------------------------------
    42  11(42)            42     0xff        0
    43  11(43)            43     0xff        0

 This CSR is a memory of 44 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_PORT_QOS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:61> NS        RAZ      NS          NS       RESERVED                                               
 <60:53> QOS_MASK  R/W      X           0        Mask to control priority across 8 QOS rounds           
 <52:10> NS        RAZ      NS          NS       RESERVED                                               
 <9:6>   EID       R/W      X           0        Engine ID to which this port is mapped	                
                                                 Legal EIDs: 0-3, 8-11
 <5:0>   PID       R/W      X           0        Port ID[5:0]				                

Notes:
 Sets the QOS mask, per port.  These QOS_MASK bits are logically and physically the same QOS_MASK
 bits in PKO_MEM_PORT_PTRS.  This CSR address allows the QOS_MASK bits to be written during PKO
 operation without affecting any other port state.  The engine to which port PID is mapped is engine
 EID.  Note that the port to engine mapping must be the same as was previously programmed via the
 PKO_MEM_PORT_PTRS CSR.
 This CSR is a memory of 44 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_PORT_RATE0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:51> NS        RAZ      NS          NS       RESERVED                                               
 <50:32> RATE_WORD R/W      X           0        Rate limiting adder per 8 byte                         
 <31:8>  RATE_PKT  R/W      X           0        Rate limiting adder per packet                         
 <7:6>   NS        RAZ      NS          NS       RESERVED                                               
 <5:0>   PID       R/W      X           0        Port ID[5:0]				                

Notes:
 This CSR is a memory of 44 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_PORT_RATE1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS        RAZ      NS          NS       RESERVED                                               
 <31:8>  RATE_LIM  R/W      X           0        Rate limiting accumulator limit                        
 <7:6>   NS        RAZ      NS          NS       RESERVED                                               
 <5:0>   PID       R/W      X           0        Port ID[5:0]				                

Notes:
 Writing PKO_MEM_PORT_RATE1[PID,RATE_LIM] has the side effect of setting the corresponding
 accumulator to zero.
 This CSR is a memory of 44 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_COUNT0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved				            |   
 <31:0>  COUNT    R/W1C    X           0         Total number of packets seen by PKO                |   

Notes:
 Total number of packets seen by PKO, per port
 A write to this address will clear the entry whose index is specified as COUNT[5:0].
 This CSR is a memory of 44 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===
 
 

     ==============================================================
     PKO_MEM_COUNT1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved				            |   
 <47:0>  COUNT    R/W1C    X           0         Total number of bytes seen by PKO                  |   

Notes:
 Total number of bytes seen by PKO, per port
 A write to this address will clear the entry whose index is specified as COUNT[5:0].
 This CSR is a memory of 44 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===
 


     ==============================================================
     PKO_MEM_DEBUG0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:36> FAU      RO        X           0        Fetch and add command words                            
 <35:22> CMD      RO        X           0        Command word                                           
 <21:16> SEGS     RO        X           0        Number of segments/gather size                         
 <15:0>  SIZE     RO        X           0        Packet length in bytes			                

Notes:
 Internal per-port state intended for debug use only - pko_prt_psb.cmnd[63:0]
 This CSR is a memory of 12 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     PKO_MEM_DEBUG1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:63> I        RO        X           0        "I"  value used for free operation                     
 <62:59> BACK     RO        X           0        Back value used for free operation                     
 <58:56> POOL     RO        X           0        Pool value used for free operation                     
 <55:40> SIZE     RO        X           0        Size in bytes                                          
 <39:0>  PTR      RO        X           0        Data pointer          			                

Notes:
 Internal per-port state intended for debug use only - pko_prt_psb.curr[63:0]
 This CSR is a memory of 12 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===
 


     ==============================================================
     PKO_MEM_DEBUG2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:63> I        RO        X           0        "I"  value used for free operation                     
 <62:59> BACK     RO        X           0        Back value used for free operation                     
 <58:56> POOL     RO        X           0        Pool value used for free operation                     
 <55:40> SIZE     RO        X           0        Size in bytes                                          
 <39:0>  PTR      RO        X           0        Data pointer          			                

Notes:
 Internal per-port state intended for debug use only - pko_prt_psb.head[63:0]
 This CSR is a memory of 12 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===
 


     ==============================================================
     PKO_MEM_DEBUG3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  DATA     RO        X           0        WorkQ data or Store0 pointer                           

Notes:
 Internal per-port state intended for debug use only - pko_prt_psb.resp[63:0]
 This CSR is a memory of 12 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===
 


     ==============================================================
     PKO_MEM_DEBUG4 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:56> CURR_SIZ    RO     X           0        Internal state                                         
 <55:40> CURR_OFF    RO     X           0        Internal state                                         
 <39:34> CMND_SEGS   RO     X           0        Internal state                                         
 <33:18> CMND_SIZ    RO     X           0        Internal state                                         
 <17:12> CMND_OFF    RO     X           0        Internal state                                         
 <11:10> UID         RO     X           0        Internal state                                         
 <9:9>   DREAD_SOP   RO     X           0        Internal state                                         
 <8:8>   INIT_DWRITE RO     X           0        Internal state                                         
 <7:7>   CHK_ONCE    RO     X           0        Internal state                                         
 <6:6>   CHK_MODE    RO     X           0        Internal state                                         
 <5:5>   WAIT        RO     X           0        Internal state                                         
 <4:3>   MINOR       RO     X           0        Internal state                                         
 <2:0>   MAJOR       RO     X           0        Internal state                                         

Notes:
 Internal per-port state intended for debug use only - pko_prt_psb.state[63:0]
 This CSR is a memory of 12 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===
 


     ==============================================================
     PKO_MEM_DEBUG5 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:56> NS        RAZ      NS          NS       RESERVED                                               
 <55:55> PTP       RO       X           0        Internal state                                         
 <54:54> MAJOR_3   RO       X           0        Internal state                                         
 <53:48> NXT_INFLT RO       X           0        Internal state                                         
 <47:8>  CURR_PTR  RO       X           0        Internal state                                         
 <7:0>   CURR_SIZ  RO       X           0        Internal state                                         

Notes:
 Internal per-port state intended for debug use only - pko_prt_psb.state[127:64]
 This CSR is a memory of 12 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===
 


     ==============================================================
     PKO_MEM_DEBUG6 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:37> NS         RO       X           0        Internal state                                         
 <36:33> QID_OFFRES RO       X           0        Internal state                                         
 <32:29> QID_OFFTHS RO       X           0        Internal state                                         
 <28:28> PREEMPTER  RO       X           0        Internal state                                         
 <27:27> PREEMPTEE  RO       X           0        Internal state                                         
 <26:26> PREEMPTED  RO       X           0        Internal state                                         
 <25:25> ACTIVE     RO       X           0        Internal state                                         
 <24:24> STATIC     RO       X           0        Internal state                                         
 <23:21> QOS        RO       X           0        Internal state                                         
 <20:16> QCB_RIDX   RO       X           0        Internal state                                         
 <15:12> QID_OFFMAX RO       X           0        Internal state                                         
 <11:8>  QID_OFF    RO       X           0        Internal state                                         
 <7:0>   QID_BASE   RO       X           0        Internal state                                         

Notes:
 Internal per-port state intended for debug use only - pko_prt_psb.port[63:0]
 This CSR is a memory of 44 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===
 


     ==============================================================
     PKO_MEM_DEBUG7 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:59> QOS      RO        X           0        QOS mask to enable the queue when set                  
 <58:58> TAIL     RO        X           0        This queue is the last (tail) in the queue array       
 <57:45> BUF_SIZ  RO        X           0        Command buffer remaining size in words                 
 <44:12> BUF_PTR  RO        X           0        Command word pointer                                   
 <11:6>  QCB_WIDX RO        X           0        Buffer write index for QCB                             
 <5:0>   QCB_RIDX RO        X           0        Buffer read  index for QCB                             

Notes:
 Internal per-queue state intended for debug use only - pko_prt_qsb.state[63:0]
 This CSR is a memory of 256 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===
 


     ==============================================================
     PKO_MEM_DEBUG8 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:29> NS        RAZ      NS          NS       RESERVED                                               
 <28>    PREEMPTER RO       X           0        Preempter                                              
 <27:8>  DOORBELL  RO       X           0        Doorbell count                                         
 <7>     NS        RAZ      NS          NS       RESERVED                                               
 <6>     PREEMPTEE RO       X           0        Preemptee                                              
 <5>     STATIC_P  RO       X           0        Static priority                                        
 <4>     S_TAIL    RO       X           0        Static tail                                            
 <3>     STATIC_Q  RO       X           0        Static priority                                        
 <2:0>   QOS       RO       X           0        QOS mask to enable the queue when set                  

Notes:
 Internal per-queue state intended for debug use only - pko_prt_qsb.state[91:64]
 This CSR is a memory of 256 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_DEBUG9 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:49> NS       RAZ       NS          NS       RESERVED                                               
 <48:32> PTRS0    RO        X           0        Internal state                                         
 <31:17> NS       RAZ       NS          NS       RESERVED                                               
 <16:0>  PTRS3    RO        X           0        Internal state                                         

Notes:
 Internal per-port state intended for debug use only - pko.dat.ptr.ptrs0, pko.dat.ptr.ptrs3
 This CSR is a memory of 44 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_DEBUG10 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:49> NS       RAZ       NS          NS       RESERVED                                               
 <48:32> PTRS1    RO        X           0        Internal state                                         
 <31:17> NS       RAZ       NS          NS       RESERVED                                               
 <16:0>  PTRS2    RO        X           0        Internal state                                         

Notes:
 Internal per-port state intended for debug use only - pko.dat.ptr.ptrs1, pko.dat.ptr.ptrs2
 This CSR is a memory of 44 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_DEBUG11 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:23> NS       RAZ       NS          NS       RESERVED                                               
 <22:22> MAJ      RO        X           0        Internal state                                         
 <21:19> UID      RO        X           0        Internal state                                         
 <18:18> SOP      RO        X           0        Internal state                                         
 <17:17> LEN      RO        X           0        Internal state                                         
 <16:16> CHK      RO        X           0        Internal state                                         
 <15:3>  CNT      RO        X           0        Internal state                                         
 <2:0>   MOD      RO        X           0        Internal state                                         

Notes:
 Internal per-port state intended for debug use only - pko.out.sta.state[22:0]
 This CSR is a memory of 44 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     PKO_MEM_DEBUG12 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:36> FAU      RO        X           0        Fetch and add command words                            
 <35:22> CMD      RO        X           0        Command word                                           
 <21:16> SEGS     RO        X           0        Number of segments/gather size                         
 <15:0>  SIZE     RO        X           0        Packet length in bytes			                

Notes:
 Internal per-port state intended for debug use only - pko.out.ctl.cmnd[63:0]
 This CSR is a memory of 44 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     PKO_MEM_DEBUG13 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:63> I        RO        X           0        "I"  value used for free operation                     
 <62:59> BACK     RO        X           0        Back value used for free operation                     
 <58:56> POOL     RO        X           0        Pool value used for free operation                     
 <55:40> SIZE     RO        X           0        Size in bytes                                          
 <39:0>  PTR      RO        X           0        Data pointer          			                

Notes:
 Internal per-port state intended for debug use only - pko.out.ctl.head[63:0]
 This CSR is a memory of 44 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     PKO_MEM_DEBUG14 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  DATA     RO        X           0        Command words                                          

Notes:
 Internal per-port state intended for debug use only - pko.prt.psb.save[63:0]
 This CSR is a memory of 132 entries, and thus, the PKO_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===




 *
 * POW_PP_GRP_MSK@ = POW PP Group Mask Register (1 per PP)
 *
 * Selects which group(s) a PP belongs to.  A '1' in any bit position sets the PP's membership in
 * the corresponding group.  A value of 0x0 will prevent the PP from receiving new work.  Note:
 * disabled or non-existent PP's should have this field set to 0xffff (the reset value) in order to
 * maximize POW performance.
 *
 * Also contains the QOS level priorities for each PP.  0x0 is highest priority, and 0x7 the lowest.
 * Setting the priority to 0xf will prevent that PP from receiving work from that QOS level.
 * Priority values 0x8 through 0xe are reserved and should not be used.  For a given PP, priorities
 * should begin at 0x0 and remain contiguous throughout the range.
 *

     ==============================================================
     POW_PP_GRP_MSK(0..5) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved                                           |   
 <47:44> QOS7_PRI R/W      0x0         NS        PP@ priority for QOS level 7                       |   
 <43:40> QOS6_PRI R/W      0x0         NS        PP@ priority for QOS level 6                       |   
 <39:36> QOS5_PRI R/W      0x0         NS        PP@ priority for QOS level 5                       |   
 <35:32> QOS4_PRI R/W      0x0         NS        PP@ priority for QOS level 4                       |   
 <31:28> QOS3_PRI R/W      0x0         NS        PP@ priority for QOS level 3                       |   
 <27:24> QOS2_PRI R/W      0x0         NS        PP@ priority for QOS level 2                       |   
 <23:20> QOS1_PRI R/W      0x0         NS        PP@ priority for QOS level 1                       |   
 <19:16> QOS0_PRI R/W      0x0         NS        PP@ priority for QOS level 0                       |   
 <15:0>  GRP_MSK  R/W      0xffff      0xffff    PP@ group mask                                     |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_WQ_INT_THR@ = POW Work Queue Interrupt Threshold Register (1 per group)
 *
 * Contains the thresholds for enabling and setting work queue interrupts.  For more information
 * regarding this register, see the interrupt section.
 *
 * Note: Up to 8 of the POW's internal storage buffers can be allocated for hardware use and are
 * therefore not available for incoming work queue entries.  Additionally, any PP that is not in the
 * NULL_NULL state consumes a buffer.  Thus in a 6 PP system, it is not advisable to set either
 * IQ_THR or DS_THR to greater than 1024 - 8 - 6 = 1010.  Doing so may prevent the interrupt from
 * ever triggering.
 *

     ==============================================================
     POW_WQ_INT_THR(0..15) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:29> NS       RAZ      NS          NS        Reserved                                           |   
 <28>    TC_EN    R/W      0x0         NS        Time counter interrupt enable for group @          |   
                                                  TC_EN must be zero when TC_THR==0                 |
 <27:24> TC_THR   R/W      0x0         NS        Time counter interrupt threshold for group @       |   
                                                  When TC_THR==0, POW_WQ_INT_CNT*[TC_CNT] is zero   |
 <23:22> NS       RAZ      NS          NS        Reserved                                           |   
 <21:12> DS_THR   R/W      0x0         NS        De-schedule count threshold for group @            |   
                                                  DS_THR==0 disables the threshold interrupt        |
 <11:10> NS       RAZ      NS          NS        Reserved                                           |   
 <9:0>   IQ_THR   R/W      0x0         NS        Input queue count threshold for group @            |   
                                                  IQ_THR==0 disables the threshold interrupt        |
----------------------------------------------------------------------------------------------------
===

 *
 * POW_WQ_INT_CNT@ = POW Work Queue Interrupt Count Register (1 per group)
 *
 * Contains a read-only copy of the counts used to trigger work queue interrupts.  For more
 * information regarding this register, see the interrupt section.
 *

     ==============================================================
     POW_WQ_INT_CNT(0..15) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:28> NS       RAZ      NS          NS        Reserved                                           |   
 <27:24> TC_CNT   RO       0x0         NS        Time counter current value for group @             |   
                                                 HW sets TC_CNT to POW_WQ_INT_THR*[TC_THR] whenever:|
                                                  - corresponding POW_WQ_INT_CNT*[IQ_CNT]==0 and    |
                                                    corresponding POW_WQ_INT_CNT*[DS_CNT]==0        |
                                                  - corresponding POW_WQ_INT[WQ_INT<*>] is written  |
                                                    with a 1 by SW                                  |
                                                  - corresponding POW_WQ_INT[IQ_DIS<*>] is written  |
                                                    with a 1 by SW                                  |
                                                  - corresponding POW_WQ_INT_THR* is written by SW  |
                                                  - TC_CNT==1 and periodic counter                  |
                                                    POW_WQ_INT_PC[PC]==0                            |
                                                 Otherwise, HW decrements TC_CNT whenever the       |
                                                 periodic counter POW_WQ_INT_PC[PC]==0.             |
                                                 TC_CNT is 0 whenever POW_WQ_INT_THR*[TC_THR]==0.   |
 <23>    NS       RAZ      NS          NS        Reserved                                           |   
 <22:12> DS_CNT   RO       0x0         NS        De-schedule executable count for group @           |   
 <11>    NS       RAZ      NS          NS        Reserved                                           |   
 <10:0>  IQ_CNT   RO       0x0         NS        Input queue executable count for group @           |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_QOS_THR@ = POW QOS Threshold Register (1 per QOS level)
 *
 * Contains the thresholds for allocating POW internal storage buffers.  If the number of remaining
 * free buffers drops below the minimum threshold (MIN_THR) or the number of allocated buffers for
 * this QOS level rises above the maximum threshold (MAX_THR), future incoming work queue entries
 * will be buffered externally rather than internally.  This register also contains a read-only count
 * of the current number of free buffers (FREE_CNT), the number of internal buffers currently
 * allocated to this QOS level (BUF_CNT), and the total number of buffers on the de-schedule list
 * (DES_CNT) (which is not the same as the total number of de-scheduled buffers).
 *

     ==============================================================
     POW_QOS_THR(0..7) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:59> NS       RAZ      NS          NS        Reserved                                           |   
 <58:48> DES_CNT  RO       0x0         NS        # of buffers on de-schedule list                   |   
 <47>    NS       RAZ      NS          NS        Reserved                                           |   
 <46:36> BUF_CNT  RO       0x0         NS        # of internal buffers allocated to QOS level @     |   
 <35>    NS       RAZ      NS          NS        Reserved                                           |   
 <34:24> FREE_CNT RO       0x3f3       NS        # of total free buffers                            |   
 <23:22> NS       RAZ      NS          NS        Reserved                                           |   
 <21:12> MAX_THR  R/W      0x3ff       NS        Max threshold for QOS level @                      |   
 <11:10> NS       RAZ      NS          NS        Reserved                                           |   
 <9:0>   MIN_THR  R/W      0x0         NS        Min threshold for QOS level @                      |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_QOS_RND@ = POW QOS Issue Round Register (4 rounds per register x 8 registers = 32 rounds)
 *
 * Contains the round definitions for issuing new work.  Each round consists of 8 bits with each bit
 * corresponding to a QOS level.  There are 4 rounds contained in each register for a total of 32
 * rounds.  The issue logic traverses through the rounds sequentially (lowest round to highest round)
 * in an attempt to find new work for each PP.  Within each round, the issue logic traverses through
 * the QOS levels sequentially (highest QOS to lowest QOS) skipping over each QOS level with a clear
 * bit in the round mask.  Note: setting a QOS level to all zeroes in all issue round registers will
 * prevent work from being issued from that QOS level.
 *

     ==============================================================
     POW_QOS_RND(0..7) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved                                           |   
 <31:24> RND_P3   R/W      0xff        NS        Round mask for round @x4+3                         |   
 <23:16> RND_P2   R/W      0xff        NS        Round mask for round @x4+2                         |   
 <15:8>  RND_P1   R/W      0xff        NS        Round mask for round @x4+1                         |   
 <7:0>   RND      R/W      0xff        NS        Round mask for round @x4                           |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_WQ_INT = POW Work Queue Interrupt Register
 *
 * Contains the bits (1 per group) that set work queue interrupts and are used to clear these
 * interrupts.  Also contains the input queue interrupt temporary disable bits (1 per group).  For
 * more information regarding this register, see the interrupt section.
 *

     ==============================================================
     POW_WQ_INT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved                                           |   
 <31:16> IQ_DIS   R/W1     0x0         NS        Input queue interrupt temporary disable mask       |   
                                                 Corresponding WQ_INT<*> bit cannot be set due to   |
                                                 IQ_CNT/IQ_THR check when this bit is set.          |
                                                 Corresponding IQ_DIS bit is cleared by HW whenever:|
                                                  - POW_WQ_INT_CNT*[IQ_CNT] is zero, or             |
                                                  - POW_WQ_INT_CNT*[TC_CNT]==1 when periodic        |
                                                    counter POW_WQ_INT_PC[PC]==0                    |
 <15:0>  WQ_INT   R/W1C    0x0         NS        Work queue interrupt bits                          |   
                                                 Corresponding WQ_INT bit is set by HW whenever:    |
                                                  - POW_WQ_INT_CNT*[IQ_CNT] >=                      |
                                                    POW_WQ_INT_THR*[IQ_THR] and the threshold       |
                                                    interrupt is not disabled.                      |
                                                    IQ_DIS<*>==1 disables the interrupt.            |
                                                    POW_WQ_INT_THR*[IQ_THR]==0 disables the int.    |
                                                  - POW_WQ_INT_CNT*[DS_CNT] >=                      |
                                                    POW_WQ_INT_THR*[DS_THR] and the threshold       |
                                                    interrupt is not disabled                       |
                                                    POW_WQ_INT_THR*[DS_THR]==0 disables the int.    |
                                                  - POW_WQ_INT_CNT*[TC_CNT]==1 when periodic        |
                                                    counter POW_WQ_INT_PC[PC]==0 and                |
                                                    POW_WQ_INT_THR*[TC_EN]==1 and at least one of:  |
                                                    - POW_WQ_INT_CNT*[IQ_CNT] > 0                   |
                                                    - POW_WQ_INT_CNT*[DS_CNT] > 0                   |
----------------------------------------------------------------------------------------------------
===

 *
 * POW_WQ_INT_PC = POW Work Queue Interrupt Periodic Counter Register
 *
 * Contains the threshold value for the work queue interrupt periodic counter and also a read-only
 * copy of the periodic counter.  For more information regarding this register, see the interrupt
 * section.
 *

     ==============================================================
     POW_WQ_INT_PC Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:60> NS       RAZ      NS          NS        Reserved                                           |   
 <59:32> PC       RO       0x0         NS        Work queue interrupt periodic counter              |   
 <31:28> NS       RAZ      NS          NS        Reserved                                           |   
 <27:8>  PC_THR   R/W      0x0         NS        Work queue interrupt periodic counter threshold    |   
 <7:0>   NS       RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_NW_TIM = POW New Work Timer Period Register
 *
 * Sets the minimum period for a new work request timeout.  Period is specified in n-1 notation
 * where the increment value is 1024 clock cycles.  Thus, a value of 0x0 in this register translates
 * to 1024 cycles, 0x1 translates to 2048 cycles, 0x2 translates to 3072 cycles, etc...  Note: the
 * maximum period for a new work request timeout is 2 times the minimum period.  Note: the new work
 * request timeout counter is reset when this register is written.
 *
 * There are two new work request timeout cases:
 *
 * - WAIT bit clear.  The new work request can timeout if the timer expires before the pre-fetch
 *   engine has reached the end of all work queues.  This can occur if the executable work queue
 *   entry is deep in the queue and the pre-fetch engine is subject to many resets (i.e. high switch,
 *   de-schedule, or new work load from other PP's).  Thus, it is possible for a PP to receive a work
 *   response with the NO_WORK bit set even though there was at least one executable entry in the
 *   work queues.  The other (and typical) scenario for receiving a NO_WORK response with the WAIT
 *   bit clear is that the pre-fetch engine has reached the end of all work queues without finding
 *   executable work.
 *
 * - WAIT bit set.  The new work request can timeout if the timer expires before the pre-fetch
 *   engine has found executable work.  In this case, the only scenario where the PP will receive a
 *   work response with the NO_WORK bit set is if the timer expires.  Note: it is still possible for
 *   a PP to receive a NO_WORK response even though there was at least one executable entry in the
 *   work queues.
 *
 * In either case, it's important to note that switches and de-schedules are higher priority
 * operations that can cause the pre-fetch engine to reset.  Thus in a system with many switches or
 * de-schedules occuring, it's possible for the new work timer to expire (resulting in NO_WORK
 * responses) before the pre-fetch engine is able to get very deep into the work queues.
 *

     ==============================================================
     POW_NW_TIM Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:10> NS       RAZ      NS          NS        Reserved                                           |   
 <9:0>   NW_TIM   R/W      0x0         0x3ff     New work timer period                              |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_ECC_ERR = POW ECC Error Register
 *
 * Contains the single and double error bits and the corresponding interrupt enables for the ECC-
 * protected POW index memory.  Also contains the syndrome value in the event of an ECC error.
 *
 * Also contains the remote pointer error bit and interrupt enable.  RPE is set when the POW detected
 * corruption on one or more of the input queue lists in L2/DRAM (POW's local copy of the tail pointer
 * for the L2/DRAM input queue did not match the last entry on the the list).   This is caused by
 * L2/DRAM corruption, and is generally a fatal error because it likely caused POW to load bad work
 * queue entries.
 *
 * This register also contains the illegal operation error bits and the corresponding interrupt
 * enables as follows:
 *
 *  <0> Received SWTAG/SWTAG_FULL/SWTAG_DESCH/DESCH/UPD_WQP from PP in NULL_NULL state
 *  <1> Received SWTAG/SWTAG_DESCH/DESCH/UPD_WQP from PP in NULL state
 *  <2> Received SWTAG/SWTAG_FULL/SWTAG_DESCH/GET_WORK from PP with pending tag switch to ORDERED or ATOMIC
 *  <3> Received SWTAG/SWTAG_FULL/SWTAG_DESCH from PP with tag specified as NULL_NULL
 *  <4> Received SWTAG_FULL/SWTAG_DESCH from PP with tag specified as NULL
 *  <5> Received SWTAG/SWTAG_FULL/SWTAG_DESCH/DESCH/UPD_WQP/GET_WORK/NULL_RD from PP with GET_WORK pending
 *  <6> Received SWTAG/SWTAG_FULL/SWTAG_DESCH/DESCH/UPD_WQP/GET_WORK/NULL_RD from PP with NULL_RD pending
 *  <7> Received CLR_NSCHED from PP with SWTAG_DESCH/DESCH/CLR_NSCHED pending
 *  <8> Received SWTAG/SWTAG_FULL/SWTAG_DESCH/DESCH/UPD_WQP/GET_WORK/NULL_RD from PP with CLR_NSCHED pending
 *  <9> Received illegal opcode
 * <10> Received ADD_WORK with tag specified as NULL_NULL
 * <11> Received DBG load from PP with DBG load pending
 * <12> Received CSR load from PP with CSR load pending
 *

     ==============================================================
     POW_ECC_ERR Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:45> NS       RAZ      NS          NS        Reserved                                           |   
 <44:32> IOP_IE   R/W      0x0         NS        Illegal operation interrupt enables                |   
 <31:29> NS       RAZ      NS          NS        Reserved                                           |   
 <28:16> IOP      R/W1C    0x0         0x0       Illegal operation errors                           |   
 <15:14> NS       RAZ      NS          NS        Reserved                                           |   
 <13>    RPE_IE   R/W      0x0         NS        Remote pointer error interrupt enable              |   
 <12>    RPE      R/W1C    0x0         0x0       Remote pointer error                               |   
 <11:9>  NS       RAZ      NS          NS        Reserved                                           |   
 <8:4>   SYN      RO       NS          NS        Syndrome value (only valid when DBE or SBE is set) |   
 <3>     DBE_IE   R/W      0x0         NS        Double bit error interrupt enable                  |   
 <2>     SBE_IE   R/W      0x0         NS        Single bit error interrupt enable                  |   
 <1>     DBE      R/W1C    0x0         0x0       Double bit error                                   |   
 <0>     SBE      R/W1C    0x0         0x0       Single bit error                                   |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_INT_CTL = POW Internal Control Register
 *
 * Contains POW internal control values (for internal use, not typically for customer use):
 *
 * PFR_DIS = Disable high-performance pre-fetch reset mode.
 *
 * NBR_THR = Assert ncb__busy when the number of remaining coherent bus NBR credits equals is less
 * than or equal to this value.
 *

     ==============================================================
     POW_INT_CTL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6>  NS       RAZ      NS          NS        Reserved                                           |   
 <5>     PFR_DIS  R/W      0x0         0x0       High-perf pre-fetch reset mode disable             |   
 <4:0>   NBR_THR  R/W      0x2         0x2       NBR busy threshold                                 |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_NOS_CNT = POW No-schedule Count Register
 *
 * Contains the number of work queue entries on the no-schedule list.
 *

     ==============================================================
     POW_NOS_CNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:11> NS       RAZ      NS          NS        Reserved                                           |   
 <10:0>  NOS_CNT  RO       0x0         NS        # of work queue entries on the no-schedule list    |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_PF_RST_MSK = POW Prefetch Reset Mask
 *
 * Resets the work prefetch engine when work is stored in an internal buffer (either when the add
 * work arrives or when the work is reloaded from an external buffer) for an enabled QOS level
 * (1 bit per QOS level).
 *

     ==============================================================
     POW_PF_RST_MSK Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |   
 <7:0>   RST_MSK  R/W      0x0         NS        Prefetch engine reset mask                         |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_IQ_INT = POW Input Queue Interrupt Register
 *
 * Contains the bits (1 per QOS level) that can trigger the input queue interrupt.  An IQ_INT bit
 * will be set if POW_IQ_CNT#QOS# changes and the resulting value is equal to POW_IQ_THR#QOS#.
 *

     ==============================================================
     POW_IQ_INT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |   
 <7:0>   IQ_INT   R/W1C    0x0         NS        Input queue interrupt bits                         |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_IQ_INT_EN = POW Input Queue Interrupt Enable Register
 *
 * Contains the bits (1 per QOS level) that enable the input queue interrupt.
 *

     ==============================================================
     POW_IQ_INT_EN Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved                                           |   
 <7:0>   INT_EN   R/W      0x0         NS        Input queue interrupt enable bits                  |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_WS_PC@ = POW Work Schedule Performance Counter (1 per group)
 *
 * Counts the number of work schedules for each group.  Write to clear.
 *

     ==============================================================
     POW_WS_PC(0..15) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved                                           |   
 <31:0>  WS_PC    R/W1C    0x0         NS        Work schedule performance counter for group @      |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_WA_PC@ = POW Work Add Performance Counter (1 per QOS level)
 *
 * Counts the number of add new work requests for each QOS level.  Write to clear.
 *

     ==============================================================
     POW_WA_PC(0..7) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved                                           |   
 <31:0>  WA_PC    R/W1C    0x0         NS        Work add performance counter for QOS level @       |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_IQ_CNT@ = POW Input Queue Count Register (1 per QOS level)
 *
 * Contains a read-only count of the number of work queue entries for each QOS level.
 *

     ==============================================================
     POW_IQ_CNT(0..7) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved                                           |   
 <31:0>  IQ_CNT   RO       0x0         NS        Input queue count for QOS level @                  |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_WA_COM_PC = POW Work Add Combined Performance Counter
 *
 * Counts the number of add new work requests for all QOS levels.  Write to clear.
 *

     ==============================================================
     POW_WA_COM_PC Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved                                           |   
 <31:0>  WA_PC    R/W1C    0x0         NS        Work add combined performance counter              |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_IQ_COM_CNT = POW Input Queue Combined Count Register
 *
 * Contains a read-only count of the total number of work queue entries in all QOS levels.
 *

     ==============================================================
     POW_IQ_COM_CNT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved                                           |   
 <31:0>  IQ_CNT   RO       0x0         NS        Input queue combined count                         |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_TS_PC = POW Tag Switch Performance Counter
 *
 * Counts the number of tag switch requests.  Write to clear.
 *

     ==============================================================
     POW_TS_PC Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved                                           |   
 <31:0>  TS_PC    R/W1C    0x0         NS        Tag switch performance counter                     |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_DS_PC = POW De-Schedule Performance Counter
 *
 * Counts the number of de-schedule requests.  Write to clear.
 *

     ==============================================================
     POW_DS_PC Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved                                           |   
 <31:0>  DS_PC    R/W1C    0x0         NS        De-schedule performance counter                    |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_IQ_THR@ = POW Input Queue Threshold Register (1 per QOS level)
 *
 * Threshold value for triggering input queue interrupts.
 *

     ==============================================================
     POW_IQ_THR(0..7) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved                                           |   
 <31:0>  IQ_THR   R/W      0xffffffff  NS        Input queue threshold for QOS level @              |   
----------------------------------------------------------------------------------------------------
===

 *
 * POW_BIST_STAT = POW BIST Status Register
 *
 * Contains the BIST status for the POW memories ('0' = pass, '1' = fail).
 *
 * Also contains the BIST status for the PP's.  Each bit in the PP field is the OR of all BIST
 * results for the corresponding physical PP ('0' = pass, '1' = fail).
 *

     ==============================================================
     POW_BIST_STAT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:22> NS       RAZ      NS          NS        Reserved                                           |   
 <21:16> PP       RO       0x0         0x0       Physical PP BIST status                            |   
 <15:12> NS       RAZ      NS          NS        Reserved                                           |   
 <11>    CAM      RO       0x0         0x0       POW CAM BIST status                                |   
 <10:8>  NBR      RO       0x0         0x0       NCB receiver memory BIST status                    |   
 <7:4>   NBT      RO       0x0         0x0       NCB transmitter memory BIST status                 |   
 <3>     IDX      RO       0x0         0x0       Index memory BIST status                           |   
 <2>     FIDX     RO       0x0         0x0       Forward index memory BIST status                   |   
 <1>     PEND     RO       0x0         0x0       Pending switch memory BIST status                  |   
 <0>     ADR      RO       0x0         0x0       Address memory BIST status                         |   
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6>  NS       RAZ       0           0        RESERVED                                               
 <5:2>   MAX_READ R/W       8           8        Maximum number of outstanding data read commands       
 <1>     STORE_LE R/W       0           0        Force STORE0 byte write address to little endian       
 <0>     RESET    RAZ       0           0        Reset oneshot pulse (lasts for 4 cycles)               

Notes:
 MAX_READ is a throttle to control NCB usage.  Values >8 are illegal.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_CMD_BUF Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:58> NS       RAZ       0           0        RESERVED                                               
 <57:49> DWB      R/W       0           NS       Number of DontWriteBacks                               
 <48:46> POOL     R/W       0           NS       Free list used to free command buffer segments         
 <45:33> SIZE     R/W       0           NS       Number of uint64s per command buffer segment           
 <32:0>  PTR      R/W       0           NS       Initial command buffer pointer[39:7] (128B-aligned)    

Notes:
 Sets the command buffer parameters
 The size of the command buffer segments is measured in uint64s.  The pool specifies 1 of 8 free
 lists to be used when freeing command buffer segments.  The PTR field is overwritten with the next
 pointer each time that the command buffer segment is exhausted.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_POLYNOMIAL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ       0           0        RESERVED                                               
 <7:0>   COEFFS   R/W       0x1d        0x1d     coefficients of GF(2^8) irreducible polynomial         

Notes:
 The polynomial is x^8 + C7*x^7 + C6*x^6 + C5*x^5 + C4*x^4 + C3*x^3 + C2*x^2 + C1*x^1 + C0.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_READ_IDX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        RESERVED                                               
 <31:16> INC      R/W      0           0         Increment to add to current index for next index       
 <15:0>  IDX      R/W      0           0         Index to use for next memory CSR read                  

Notes:
 Provides the read index during a CSR read operation to any of the CSRs that are physically stored
 as memories.  The names of these CSRs begin with the prefix "RAD_MEM_".
 IDX[15:0] is the read index.  INC[15:0] is an increment that is added to IDX[15:0] after any CSR read.
 The intended use is to initially write this CSR such that IDX=0 and INC=1.  Then, the entire
 contents of a CSR memory can be read with consecutive CSR read commands.
----------------------------------------------------------------------------------------------------
===
 
 

     ==============================================================
     RAD_REG_BIST_RESULT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6>  NS       RAZ       NS          NS       RESERVED                                               
 <5>     STA      RO        X           0        BiST result of the STA     memories                    
 <4>     NCB_OUB  RO        X           0        BiST result of the NCB_OUB memories                    
 <3:2>   NCB_INB  RO        X           0        BiST result of the NCB_INB memories                    
 <1:0>   DAT      RO        X           0        BiST result of the DAT     memories                    

Notes:
 Access to the internal BiST results
 Each bit is the BiST result of an individual memory (per bit, 0=pass and 1=fail).
----------------------------------------------------------------------------------------------------
===

 

     ==============================================================
     RAD_REG_ERROR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        RESERVED                                               
 <0>     DOORBELL R/W1C    0           0         A doorbell count has overflowed                        
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_INT_MASK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        RESERVED                                               
 <0>     DOORBELL R/W      0           0         Bit mask corresponding to RAD_REG_ERROR[0] above       

Notes:
 When a mask bit is set, the corresponding interrupt is enabled.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:57> NS       RO       NS          NS        RESERVED                                               
 <56:32> LOOP     RO       NS          NS        Loop offset                                            
 <31:24> NS       RO       NS          NS        RESERVED                                               
 <23:22> NS       RO       NS          NS        RESERVED                                               
 <21:16> IRIDX    RO       NS          NS        IWords read index                                      
 <15:14> NS       RO       NS          NS        RESERVED                                               
 <13:8>  IWIDX    RO       NS          NS        IWords write index                                     
 <7>     OWORDQV  RO       NS          NS        Valid for OWORDQ                                       
 <6>     OWORDPV  RO       NS          NS        Valid for OWORDP                                       
 <5>     COMMIT   RO       NS          NS        Waiting for write commit                               
 <4:0>   STATE    RO       NS          NS        Main state                                             
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  CWORD    RO       NS          NS        CWord                                                  
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  OWORDP   RO       NS          NS        OWordP                                                 
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  OWORDQ   RO       NS          NS        OWordQ                                                 
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG4 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  RWORD    RO       NS          NS        RWord                                                  
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG5 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:53> NS       RAZ      NS          NS        RESERVED                                               
 <52:50> NIROPC7  RO       NS          NS        NCBI ropc (stage7 grant)                               
 <49:48> NIRQUE7  RO       NS          NS        NCBI rque (stage7 grant)                               
 <47:43> NIRVAL7  RO       NS          NS        NCBI rval (stage7 grant)                               
 <42:40> NIROPC6  RO       NS          NS        NCBI ropc (stage6 arb)                                 
 <39:38> NIRQUE6  RO       NS          NS        NCBI rque (stage6 arb)                                 
 <37>    NIRARB6  RO       NS          NS        NCBI rarb (stage6 arb)                                 
 <36:32> NIRVAL6  RO       NS          NS        NCBI rval (stage6 arb)                                 
 <31:28> NIRIDX1  RO       NS          NS        NCBI ridx1                                             
 <27:24> NIWIDX1  RO       NS          NS        NCBI widx1                                             
 <23:20> NIRIDX0  RO       NS          NS        NCBI ridx0                                             
 <19:16> NIWIDX0  RO       NS          NS        NCBI widx0                                             
 <15:14> WCCREDS  RO       0           0         WC credits                                             
 <13:12> FPACREDS RO       1           0         POW credits                                            
 <11:10> NS       RAZ      NS          NS        RESERVED                                               
 <9:8>   POWCREDS RO       2           0         POW credits                                            
 <7:4>   N1CREDS  RO       8           0         NCBI1 credits                                          
 <3:0>   N0CREDS  RO       8           0         NCBI0 credits                                          
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG6 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:56> CNT      RO       NS          NS        CCTL count[7:0] (bytes)                                
 <55:40> SIZE     RO       NS          NS        CCTL size (bytes)                                      
 <39:0>  PTR      RO       NS          NS        CCTL pointer                                           
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG7 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:15> NS       RAZ      NS          NS        RESERVED                                               
 <14:0>  CNT      RO       NS          NS        CCTL count[22:8] (bytes)                               
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG8 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:56> FLAGS    RO       NS          NS        ICTL flags                                             
 <55:40> SIZE     RO       NS          NS        ICTL size (bytes)                                      
 <39:0>  PTR      RO       NS          NS        ICTL pointer                                           
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG9 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:20> NS       RAZ      NS          NS        RESERVED                                               
 <19>    EOD      RO       NS          NS        ICTL eod flag                                          
 <18>    INI      RO       NS          NS        ICTL init flag                                         
 <17>    Q        RO       NS          NS        ICTL q enable                                          
 <16>    P        RO       NS          NS        ICTL p enable                                          
 <15:8>  MUL      RO       NS          NS        ICTL multiplier                                        
 <7:0>   IDX      RO       NS          NS        ICTL index                                             
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG10 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:56> FLAGS    RO       NS          NS        OCTL flags                                             
 <55:40> SIZE     RO       NS          NS        OCTL size (bytes)                                      
 <39:0>  PTR      RO       NS          NS        OCTL pointer                                           
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG11 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:13> NS       RAZ      NS          NS        RESERVED                                               
 <12>    Q        RO       NS          NS        OCTL q flag                                            
 <11>    P        RO       NS          NS        OCTL p flag                                            
 <10>    WC       RO       NS          NS        OCTL write commit flag                                 
 <9>     EOD      RO       NS          NS        OCTL eod flag                                          
 <8>     SOD      RO       NS          NS        OCTL sod flag                                          
 <7:0>   IDX      RO       NS          NS        OCTL index                                             
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_REG_DEBUG12 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:15> NS       RAZ      NS          NS        RESERVED                                               
 <14:0>  ASSERTS  RO       NS          NS        Various assertion checks                               
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_MEM_DEBUG0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  IWORD    RO       NS          NS        IWord                                                  

Notes:
 This CSR is a memory of 32 entries, and thus, the RAD_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_MEM_DEBUG1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  P_DAT    RO       NS          NS        P data                                                 

Notes:
 This CSR is a memory of 256 entries, and thus, the RAD_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     RAD_MEM_DEBUG2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  Q_DAT    RO       NS          NS        Q data                                                 

Notes:
 This CSR is a memory of 256 entries, and thus, the RAD_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed.  A read of any entry that has not been
 previously written is illegal and will result in unpredictable CSR read data.
----------------------------------------------------------------------------------------------------
===

 *
 *                  RNM_CTL_STATUS = RNM's Control/Status Register
 *
 * The RNM's interrupt enable register.
 *

     ==============================================================
     RNM_CTL_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     ENT_EN   R/W      0           0         Entropy enable for random number generator.            
 <1>     RNG_EN   R/W      0           0         Enable the output of the RNG.                          
 <2>     RNM_RST  R/W      0           0         Reset the RNM as core reset except for register        
                                                 logic.
 <3>     RNG_RST  R/W      0           0         Reset RNG as core reset.                               
 <4>     EXP_ENT  R/W      0           0         Exported entropy enable for random number generator    
 <8:5>   ENT_SEL  R/W      0           0         ?                                                      
 <9>     EER_VAL  RO       0           0         Dormant encryption key match                           
 <10>    EER_LCK  RO       0           0         Encryption enable register locked                      
 <63:11> NS       RAZ      NS          NS        Reserved					        
----------------------------------------------------------------------------------------------------
===

 *
 *                  RNM_BIST_STATUS = RNM's BIST Status Register
 *
 * The RNM's Memory Bist Status register.
 *

     ==============================================================
     RNM_BIST_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     MEM      RO       0           0         Status of MEM block bist.                              
 <1>     RRC      RO       0           0         Status of RRC block bist.                              
 <63:2>  NS       RAZ      NS          NS        Reserved					        
----------------------------------------------------------------------------------------------------
===

 *
 *                  RNM_EER_KEY = RNM's Encryption enable register
 *
 * The RNM's Encryption enable register
 *

     ==============================================================
     RNM_EER_KEY Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  KEY      WO       0           0         Dormant encryption key.  If dormant crypto is fuse     
                                                 enabled, crypto can be enable by writing this 
                                                 register with the correct key.
----------------------------------------------------------------------------------------------------
===

 *
 *                  RNM_EER_DBG = RNM's Encryption enable debug register 
 *
 * The RNM's Encryption enable debug register
 *

     ==============================================================
     RNM_EER_DBG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  DAT       RO       NS          NS        Dormant encryption debug info.                        
----------------------------------------------------------------------------------------------------
===



*
* Add Lock Register (Set on Read, Clear on write), SW uses to control access to BAR0 space.
*

 
 * Total Address is 16Kb; 0x0000 - 0x3fff, 0x000 - 0x7fe(Reg, every other 8B)
 *
 * General  5kb; 0x0000 - 0x13ff, 0x000 - 0x27e(Reg-General)
 * PktMem  10Kb; 0x1400 - 0x3bff, 0x280 - 0x77e(Reg-General-Packet)
 * Rsvd     1Kb; 0x3c00 - 0x3fff, 0x780 - 0x7fe(Reg-NCB Only Mode)

 *
 *                  SLI_WIN_WR_ADDR = SLI Window Write Address Register
 *
 * Contains the address to be writen to when a write operation is started by writing the
 * SLI_WIN_WR_DATA register (see below).
 *
 * This register should NOT be used to write SLI_* registers.
 *

     ==============================================================
     SLI_WIN_WR_ADDR Type=PEXP
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:49> NS       RAZ      NS          NS        Reserved				                
 <48>    IOBIT    RAZ      0x0         0x0       A 1 or 0 can be written here but this will always      
                                                 read as '0'.
 <47:3>  WR_ADDR  R/W      0x0         NS        The address that will be written to when the           
                                                 SLI_WIN_WR_DATA register is written.
                                                 [47:40] = NCB_ID
                                                 [39:3]  = Address
                                                 When [47:43] == SLI & [42:40] == 0 bits [39:0] are:
                                                      [39:32] == x, Not Used
                                                      [31:24] == RSL_ID
                                                      [23:3]  == RSL Register Offset
 <2:0>   NS       RAZ      NS          NS        Reserved				                
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_WIN_RD_ADDR = SLI Window Read Address Register
 *
 * The address to be read when the SLI_WIN_RD_DATA register is read.
 * This register should NOT be used to read SLI_* registers.
 *

     ==============================================================
     SLI_WIN_RD_ADDR Type=PEXP
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:51> NS       RAZ      NS          NS        Reserved				                
 <50:49> LD_CMD   R/W      0x3         NS        The load command sent wit hthe read.                   
						 0x3 == Load 8-bytes, 0x2 == Load 4-bytes,
						 0x1 == Load 2-bytes, 0x0 == Load 1-bytes,
 <48>    IOBIT    R/W      0x0         0x0       A 1 or 0 can be written here but will not be used      
                                                 in address generation.
 <47:0>  RD_ADDR  R/W      0x0         NS        The address to be read from.                           
                                                 [47:40] = NCB_ID
                                                 [39:0]  = Address
                                                 When [47:43] == SLI & [42:40] == 0 bits [39:0] are:
                                                      [39:32] == x, Not Used
                                                      [31:24] == RSL_ID
                                                      [23:0]  == RSL Register Offset
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_WIN_WR_DATA = SLI Window Write Data Register
 *
 * Contains the data to write to the address located in the SLI_WIN_WR_ADDR Register.
 * Writing the least-significant-byte of this register will cause a write operation to take place.
 *
 *

     ==============================================================
     SLI_WIN_WR_DATA Type=PEXP
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  WR_DATA  R/W      0x0         NS        The data to be written. Whenever the LSB of this       
                                                 register is written, the Window Write will take
                                                 place.
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_WIN_WR_MASK = SLI Window Write Mask Register
 *
 * Contains the mask for the data in the SLI_WIN_WR_DATA Register.
 *

     ==============================================================
     SLI_WIN_WR_MASK Type=PEXP
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ      NS          NS        Reserved				                
 <7:0>   WR_MASK  R/W      0xFF        0x0       The data to be written. When a bit is '1'              
                                                 the corresponding byte will be written. The values
                                                 of this field must be contiguos and for 1, 2, 4, or
                                                 8 byte operations and aligned to operation size.
						 A Value of 0 will produce unpredictable results
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_WIN_RD_DATA = SLI Window Read Data Register
 *
 * Reading this register causes a window read operation to take place. Address read is that contained in the SLI_WIN_RD_ADDR
 * register.
 *

     ==============================================================
     SLI_WIN_RD_DATA Type=PEXP
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  RD_DATA  RO       0x0         NS        The read data.                                     |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_CTL_PORT@ = SLI's Control Port @
 *
 * Contains control for access for Port0
 *

     ==============================================================
     SLI_CTL_PORT(0..1) Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     WAIT_COM R/W      0           0         When set '1' casues the SLI to wait for a commit   |   
                                                 from the L2C before sending additional stores to   |
                                                 the L2C from a MAC.                                |
                                                 The SLI will request a commit on the last store    |
                                                 if more than one STORE operation is required on    |
                                                 the NCB.                                           |
                                                 Most applications will not notice a difference, so |
                                                 should not set this bit. Setting the bit is more   |
                                                 conservative on ordering, lower performance        |
 <4:1>   NS       R/W      0           0         Reserved.                                          |   
 <5>     PTLP_RO  R/W      0           1         Relaxed ordering enable for Posted TLPS.           |   
 <6>     NS       R/W      0           0         Reserved.                                          |   
 <7>     CTLP_RO  R/W      0           1         Relaxed ordering enable for Completion TLPS.       |   
 <9:8>   INTA_MAP R/W      0           0         Maps INTA to INTA(00), INTB(01), INTC(10) or       |   
                                                 INTD (11).                                         |
 <11:10> INTB_MAP R/W      1           1         Maps INTB to INTA(00), INTB(01), INTC(10) or       |   
                                                 INTD (11).                                         |
 <13:12> INTC_MAP R/W      2           2         Maps INTC to INTA(00), INTB(01), INTC(10) or       |   
                                                 INTD (11).                                         |
 <15:14> INTD_MAP R/W      3           3         Maps INTD to INTA(00), INTB(01), INTC(10) or       |   
                                                 INTD (11).                                         |
 <16>    WAITL_COM R/W     0           NS        When set '1' casues the SLI to wait for a commit   |   
                                                 from the L2C before sending additional completions |
                                                 to the L2C from a MAC.                             |
                                                 Set this for more conservative behavior. Clear     |
                                                 this for more aggressive, higher-performance       |
                                                 behavior                                           |
 <17>    DIS_PORT R/W1C    0           0         When set the output to the MAC is disabled. This   |   
	 					 occurs when the MAC reset line transitions from    |
						 de-asserted to asserted. Writing a '1' to this     |
						 location will clear this condition when the MAC is |
						 no longer in reset and the output to the MAC is at |
						 the begining of a transfer.			    |
 <18>    INTA     RO       1           1         When '0' Inta wire asserted. Before mapping.       |   
 <19>    INTB     RO       1           1         When '0' Intb wire asserted. Before mapping.       |   
 <20>    INTC     RO       1           1         When '0' Intc wire asserted. Before mapping.       |   
 <21>    INTD     RO       1           1         When '0' Intd wire asserted. Before mapping.       |   
 <63:22> NS       RAZ      NS          NS        Reserved					    |   
----------------------------------------------------------------------------------------------------
===

//// *
//// * 8070 - 80C0 saved for ports 2 through 7
//// *

//// *
//// * 0x80d0 free
//// *

 *
 *                  SLI_MEM_ACCESS_SUBID@ = SLI Memory Access Subid@ Register
 *
 * Contains address index and control bits for access to memory from Core PPs.
 * 

     ==============================================================
     SLI_MEM_ACCESS_SUBID(12..27) Type=PEXP_NCB
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:43> NS       RAZ      NS          NS        Reserved				            |   
 <42>    ZERO     R/W      0x0         0         Causes all byte reads to be zero length reads.     |   
                                                 Returns to the EXEC a zero for all read data.      |
                                                 This must be zero for sRIO ports.                  |
 <41:39> PORT     R/W      0x0         NS        Physical MAC Port that reads/writes to             |   
                                                 this subid are sent to. Must be <= 1, as there are |
                                                 only two ports present.                            |
 <38>    NMERGE   R/W      0x0         0         When set, no merging is allowed in this window.    |   
 <37:36> ESR      R/W      0x0         NS        ES<1:0> for reads to this subid.                   |   
                                                 ES<1:0> is the endian-swap attribute for these MAC |
                                                 memory space reads.                                |
 <35:34> ESW      R/W      0x0         NS        ES<1:0> for writes to this subid.                  |   
                                                 ES<1:0> is the endian-swap attribute for these MAC |
                                                 memory space writes.                               |
 <33:32> WTYPE    R/W      0x0         NS        ADDRTYPE<1:0> for writes to this subid             |   
                                                 For PCIe:                                          |
                                                 - ADDRTYPE<0> is the relaxed-order attribute       |
                                                 - ADDRTYPE<1> is the no-snoop attribute            |
                                                 For sRIO:                                          |
                                                 - ADDRTYPE<1:0> help select an SRIO*_S2M_TYPE*     |
                                                   entry                                            |
 <31:30> RTYPE    R/W      0x0         NS        ADDRTYPE<1:0> for reads to this subid              |   
                                                 For PCIe:                                          |
                                                 - ADDRTYPE<0> is the relaxed-order attribute       |
                                                 - ADDRTYPE<1> is the no-snoop attribute            |
                                                 For sRIO:                                          |
                                                 - ADDRTYPE<1:0> help select an SRIO*_S2M_TYPE*     |
                                                   entry                                            |
 <29:0>  BA       R/W      0x0         NS        Address Bits <63:34> for reads/writes that use     |   
                                                 this subid.                                        |
----------------------------------------------------------------------------------------------------
===

//// *
//// * 81e0 - 82d0 Reserved for future subids
//// *

 *
 *                  SLI_WINDOW_CTL = SLI's Window Control
 *
 * Access to register space on the NCB (caused by Window Reads/Writes) will wait for a period of time specified
 * by this register before timeing out. Because a Window Access can access the RML, which has a fixed timeout of 0xFFFF
 * core clocks, the value of this register should be set to a minimum of 0x200000 to ensure that a timeout to an RML register
 * occurs on the RML 0xFFFF timer before the timeout for a BAR0 access from the MAC.
 * 

     ==============================================================
     SLI_WINDOW_CTL Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  TIME     R/W      0x0         0x200000  Time to wait in core clocks for a                  |   
                                                 BAR0 access to completeon the NCB                  |
	                                         before timing out. A value of 0 will cause no      |
						 timeouts. A minimum value of 0x200000 should be    |
                                                 used when this register is not set to 0x0.         |
 <63:32> NS       RAZ      NS          NS        Reserved					    |   
----------------------------------------------------------------------------------------------------
===


 *
 *                  SLI_MEM_ACCESS_CTL = SLI's Memory Access Control
 *
 * Contains control for access to the MAC address space.
 *

     ==============================================================
     SLI_MEM_ACCESS_CTL Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <9:0>   TIMER    R/W      0           50        When the SLI starts a PP to MAC write it waits     |   
                                                 no longer than the value of TIMER in eclks to      |
                                                 merge additional writes from the PPs into 1        |
                                                 large write. The values for this field is 1 to     |
                                                 1024 where a value of '0' is treated as 1024.      |
 <13:10> MAX_WORD R/W      0           0         The maximum number of words to merge into a single |   
                                                 write operation from the PPs to the MAC. Legal     |
                                                 values are 1 to 16, where a '0' is treated as 16.  |
 <63:14> NS       RAZ      NS          NS        Reserved					    |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_DBG_SELECT = Debug Select Register
 *
 * Contains the debug select value last written to the RSLs.
 *

     ==============================================================
     SLI_DBG_SELECT Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DBG_SEL  R/W      0           NS        When this register is written the RML will write       
                                                 all "F"s to the previous RTL to disable it from
                                                 sending Debug-Data. The RML will then send a write
                                                 to the new RSL with the supplied Debug-Select
                                                 value. Because it takes time for the new Debug
                                                 Select value to take effect and the requested
                                                 Debug-Data to return, time is needed to the new
                                                 Debug-Data to arrive.  The inititator of the Debug
                                                 Select should issue a read to a CSR before reading
                                                 the Debug Data (this read could also be to the
	                                         SLI_DBG_DATA but the returned value for the first
                                                 read will return NS data.
 <32>    ADBG_SEL R/W      0           NS        When set '1' the SLI_DBG_DATA[DATA] will only be       
						 loaded when SLI_DBG_DATA[DATA] bit [16] is a '1'.
						 When the debug data comes from an Async-RSL bit
						 16 is used to tell that the data present is valid.
<63:33> NS       RAZ      NS          NS        Reserved					        
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_DBG_DATA = SLI Debug Data Register
 *
 * Value returned on the debug-data lines from the RSLs
 *

     ==============================================================
     SLI_DBG_DATA Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <16:0>  DATA      RO       0x0         NS        Value on the debug data lines.                         
 <17>    DSEL_EXT  R/W      1           0         Allows changes in the external pins to set the         
                                                  debug select value.
<63:18>  NS        RAZ      NS          NS        Reserved					         
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  SLI_INT_SUM = SLI Interrupt Summary Register
 *
 * Set when an interrupt condition occurs, write '1' to clear.
 *

     ==============================================================
     SLI_INT_SUM Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     RML_TO   R/W1C    0x0         0         A read or write transfer did not complete          |   
                                                 within 0xffff core clocks.                         |
 <1>     NS       R/W1C    0x0         0         Reserved	 				    |   
 <2>     BAR0_TO  R/W1C    0x0         0         BAR0 R/W to a NCB device did not receive           |   
                                                 read-data/commit in 0xffff core clocks.            |
 <3>     IOB2BIG  R/W1C    0x0         0         A requested IOBDMA is to large.                    |   
 <4>     PCNT     RO       0x0         0         Packet Counter has an interrupt. Which rings can   |   
                                                 be found in SLI_PKT_CNT_INT.                       |
 <5>     PTIME    RO       0x0         0         Packet Timer has an interrupt. Which rings can     |   
                                                 be found in SLI_PKT_TIME_INT.                      |
 <7:6>   NS       R/W1C    0x0         0         Reserved	 				    |   
 <8>     M0_UP_B0 R/W1C    0x0         0         Received Unsupported P-TLP for Bar0 from MAC 0.    |   
                                                 This occurs when the BAR 0 address space is        |
                                                 disabeled.                                         |
 <9>     M0_UP_WI R/W1C    0x0         0         Received Unsupported P-TLP for Window Register     |   
                                                 from MAC 0. This occurs when the window registers  |
                                                 are disabeld and a window register access occurs.  |
 <10>    M0_UN_B0 R/W1C    0x0         0         Received Unsupported N-TLP for Bar0 from MAC 0.    |   
                                                 This occurs when the BAR 0 address space is        |
                                                 disabeled.                                         |
 <11>    M0_UN_WI R/W1C    0x0         0         Received Unsupported N-TLP for Window Register     |   
                                                 from MAC 0. This occurs when the window registers  |
                                                 are disabeld and a window register access occurs.  |
 <12>    M1_UP_B0 R/W1C    0x0         0         Received Unsupported P-TLP for Bar0 from MAC 1.    |   
                                                 This occurs when the BAR 0 address space is        |
                                                 disabeled.                                         |
 <13>    M1_UP_WI R/W1C    0x0         0         Received Unsupported P-TLP for Window Register     |   
                                                 from MAC 1. This occurs when the window registers  |
                                                 are disabeld and a window register access occurs.  |
 <14>    M1_UN_B0 R/W1C    0x0         0         Received Unsupported N-TLP for Bar0 from MAC 1.    |   
                                                 This occurs when the BAR 0 address space is        |
                                                 disabeled.                                         |
 <15>    M1_UN_WI R/W1C    0x0         0         Received Unsupported N-TLP for Window Register     |   
                                                 from MAC 1. This occurs when the window registers  |
                                                 are disabeld and a window register access occurs.  |
 <16>    MIO_INT0 RO       0x0         0         Interrupt from MIO for PORT 0.                     |   
                                                 See CIU_INT32_SUM0, CIU_INT_SUM1                   |
                                                 (enabled by CIU_INT32_EN0, CIU_INT32_EN1)          |
 <17>    MIO_INT1 RO       0x0         0         Interrupt from MIO for PORT 1.                     |   
                                                 See CIU_INT33_SUM0, CIU_INT_SUM1                   |
                                                 (enabled by CIU_INT33_EN0, CIU_INT33_EN1)          |
 <18>    MAC0_INT RO       0x0         0         Interrupt from MAC0.                               |   
                                                 See PEM0_INT_SUM (enabled by PEM0_INT_ENB_INT)     |
 <19>    MAC1_INT RO       0x0         0         Interrupt from MAC1.                               |   
                                                 See PEM1_INT_SUM (enabled by PEM1_INT_ENB_INT)     |
 <31:20> NS       RAZ      NS          NS        Reserved                                           |   
 <33:32> DMAFI    R/W1C    0x0         0         DMA set Forced Interrupts.                         |   
 <35:34> DCNT     RO       0x0         0         DCNT[x] is set whenever SLI_DMAx_CNT[CNT] >	    |	
						  SLI_DMAx_INT_LEVEL[CNT].			    |
						  DCNT[x] is normally cleared by decreasing	    |
						  SLI_DMAx_CNT[CNT].				    |
 <37:36> DTIME    RO       0x0         0         Whenever SLI_DMAx_CNT[CNT] is not 0, the	    |   
                                                  SLI_DMAx_TIM[TIM] timer increments every SLI	    |
						  clock.					    |
						  DTIME[x] is set whenever SLI_DMAx_TIM[TIM] >	    |
						  SLI_DMAx_INT_LEVEL[TIME].			    |
						  DTIME[x] is normally cleared by clearing	    |
						  SLI_DMAx_CNT[CNT] (which also clears		    |
						  SLI_DMAx_TIM[TIM]).				    |
 <47:38> NS        RAZ     NS          NS        Reserved                                           |   
 <48>    PIDBOF    R/W1C   0x0         0         Packet Instruction Doorbell count overflowed. Which|   
                                                 doorbell can be found in DPI_PINT_INFO[PIDBOF]     |
 <49>    PSLDBOF   R/W1C   0x0         0         Packet Scatterlist Doorbell count overflowed. Which|   
                                                 doorbell can be found in DPI_PINT_INFO[PSLDBOF]    |
 <50>    POUT_ERR  R/W1C   0x0         0         Set when PKO sends packet data with the error bit  |   
						 set.						    |
 <51>    PIN_BP    R/W1C   0x0         0         Packet input count has exceeded the WMARK.         |   
                                                 See SLI_PKT_IN_BP                                  |
 <52>    PGL_ERR   R/W1C   0x0         0         When a read error occurs on a packet gather list   |   
						 read this bit is set.                              |
 <53>    PDI_ERR   R/W1C   0x0         0         When a read error occurs on a packet data read     |   
						 this bit is set.                                   |
 <54>    POP_ERR   R/W1C   0x0         0         When a read error occurs on a packet scatter       |   
						 pointer pair this bit is set.                      |
 <55>    PINS_ERR  R/W1C   0x0         0         When a read error occurs on a packet instruction   |   
						 this bit is set.                                   |
 <56>    SPRT0_ERR R/W1C   0x0         0         When an error response received on SLI port 0	    |   
						 this bit is set.				    |
 <57>    SPRT1_ERR R/W1C   0x0         0         When an error response received on SLI port 1 	    |   
                                                 this bit is set.                                   |
 <59:58> NS        RAZ     NS          NS        Reserved for SLI port expansion                    |   
 <60>    ILL_PAD   R/W1C   0x0         0         Set when a BAR0 address R/W falls into theaddress  |   
                                                 range of the Packet-CSR, but for an unused         |
						 address.                                           |
 <63:61> NS        RAZ     NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_INT_ENB_PORTX = SLI's Interrupt Enable Register per mac port 
 *
 * Used to allow the generation of interrupts (MSI/INTA) to the PORT X
 *

     ==============================================================
     SLI_INT_ENB_PORT(0..1) Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     RML_TO    R/W     0x0         1         Enables SLI_INT_SUM[0] to generate an              |    
                                                 interrupt to the PCIE core for MSI/inta.           |
 <1>     NS        R/W     0x0         1         Enables SLI_INT_SUM[1] to generate an              |    
                                                 interrupt to the PCIE core for MSI/inta.           |
 <2>     BAR0_TO   R/W     0x0         1         Enables SLI_INT_SUM[2] to generate an              |    
                                                 interrupt to the PCIE core for MSI/inta.           |
 <3>     IOB2BIG   R/W     0x0         1         Enables SLI_INT_SUM[3] to generate an              |    
                                                 interrupt to the PCIE core for MSI/inta.           |
 <4>     PCNT      R/W     0x0         1         Enables SLI_INT_SUM[4] to generate an              |    
                                                 interrupt to the PCIE core for MSI/inta.           |
 <5>     PTIME     R/W     0x0         1         Enables SLI_INT_SUM[5] to generate an              |    
                                                 interrupt to the PCIE core for MSI/inta.           |
 <7:6>   NS        R/W     0x0         0         Reserved	 				    |    
 <8>     M0_UP_B0  R/W     0x0         1         Enables SLI_INT_SUM[8] to generate an              |    
                                                 interrupt to the PCIE core for MSI/inta.           |
 <9>     M0_UP_WI  R/W     0x0         1         Enables SLI_INT_SUM[9] to generate an              |    
                                                 interrupt to the PCIE core for MSI/inta.           |
 <10>    M0_UN_B0  R/W     0x0         1         Enables SLI_INT_SUM[10] to generate an             |    
                                                 interrupt to the PCIE core for MSI/inta.           |
 <11>    M0_UN_WI  R/W     0x0         1         Enables SLI_INT_SUM[11] to generate an             |    
                                                 interrupt to the PCIE core for MSI/inta.           |
 <12>    M1_UP_B0   R/W    0x0         1         Enables SLI_INT_SUM[12] to generate an             |    
                                                 interrupt to the PCIE core for MSI/inta.           |
 <13>    M1_UP_WI   R/W    0x0         1         Enables SLI_INT_SUM[13] to generate an             |    
                                                 interrupt to the PCIE core for MSI/inta.           |
 <14>    M1_UN_B0   R/W    0x0         1         Enables SLI_INT_SUM[14] to generate an             |    
                                                 interrupt to the PCIE core for MSI/inta.           |
 <15>    M1_UN_WI  R/W     0x0         1         Enables SLI_INT_SUM[15] to generate an             |    
                                                 interrupt to the PCIE core for MSI/inta.           |
 <16>    MIO_INT0  R/W     0x0         1         Enables SLI_INT_SUM[16] to generate an             |    
                                                 interrupt to the PCIE core for MSI/inta.           |
                                                 SLI_INT_ENB_PORT1[MIO_INT0] should NEVER be set.   |
 <17>    MIO_INT1  R/W     0x0         1         Enables SLI_INT_SUM[17] to generate an             |    
                                                 interrupt to the PCIE core for MSI/inta.           |
                                                 SLI_INT_ENB_PORT0[MIO_INT1] should NEVER be set.   |
 <18>    MAC0_INT  R/W     0x0         1         Enables SLI_INT_SUM[18] to generate an             |    
                                                 interrupt to the PCIE-Port0 for MSI/inta.          |
                                                 The valus of this bit has NO effect on PCIE Port1. |
						 SLI_INT_ENB_PORT1[MAC0_INT] sould NEVER be set.    |
 <19>    MAC1_INT  R/W     0x0         1         Enables SLI_INT_SUM[19] to generate an             |    
                                                 interrupt to the PCIE-Port1 for MSI/inta.          |
                                                 The valuse of this bit has NO effect on PCIE Port0.|
						 SLI_INT_ENB_PORT0[MAC1_INT] sould NEVER be set.    |
 <31:20> NS        R/W     0x0         0         Reserved	 				    |    
 <33:32> DMAFI     R/W     0x0         0         DMA set Forced Interrupts                          |    
 <35:34> DCNT      R/W     0x0         0         DMA Count Interrupts				    |    
 <37:36> DTIME     R/W     0x0         0         DMA Timer Interrupts				    |    
 <47:38> NS        R/W     0x0         0         Reserved	 				    |    
 <48>    PIDBOF    R/W     0x0         0         Packet Instruction Doorbell Count Overflow.	    |    
 <49>    PSLDBOF   R/W     0x0         0         Packet Scatterlist Doorbell Count Overflow.	    |    
 <50>    POUT_ERR  R/W     0x0         0         Packet Out Interrupt, Error From PKO.		    |    
 <51>    PIN_BP    R/W     0x0         0         Packet Input Count exceeded WMARK.		    |    
 <52>    PGL_ERR   R/W     0x0         0         Read Error during gather list fetch.		    |    
 <53>    PDI_ERR   R/W     0x0         0         Read Error during packet data fetch.		    |    
 <54>    POP_ERR   R/W     0x0         0         Read Error during packet scatter pointer fetch.    |    
 <55>    PINS_ERR  R/W     0x0         0         Read Error during packet instruction fetch.	    |    
 <56>    SPRT0_ERR R/W     0x0         0         Error Response received on SLI port 0.        	    |    
 <57>    SPRT1_ERR R/W     0x0         0         Error Response received on SLI port 1.        	    |    
 <59:58> NS        R/W     0x0         0         Reserved for SLI port expansion                    |    
 <60>    ILL_PAD   R/W     0x0         0         Illegal packet csr address.             	    |    
 <63:61> NS        R/W     0x0         0         Reserved                                           |    

 Notes: This CSR is not used when the corresponding MAC is sRIO.
----------------------------------------------------------------------------------------------------
===


 *
 *                  SLI_SCRATCH_1 = SLI's Scratch 1 
 *
 * A general purpose 64 bit register for SW use.
 *

     ==============================================================
     SLI_SCRATCH_1 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  DATA     R/W      0           NS        The value in this register is totaly SW dependent. |   
----------------------------------------------------------------------------------------------------
===


 *
 *                  SLI_SCRATCH_2 = SLI's Scratch 2
 *
 * A general purpose 64 bit register for SW use.
 *

     ==============================================================
     SLI_SCRATCH_2 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  DATA     R/W      0           NS        The value in this register is totaly SW dependent. |   
----------------------------------------------------------------------------------------------------
===


 *
 *                  SLI_DMAx_INT_LEVEL = SLI DMAx Interrupt Level
 *
 * Thresholds for DMA count and timer interrupts.
 *

     ==============================================================
     SLI_DMA(0..1)_INT_LEVEL Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32>  TIME    R/W      0x0         NS        Whenever the SLI_DMAx_TIM[TIM] timer exceeds       |   
						  this value, SLI_INT_SUM[DTIME<x>] is set.	    |
                                                  The SLI_DMAx_TIM[TIM] timer increments every SLI  |
                                                  clock whenever SLI_DMAx_CNT[CNT]!=0, and is 	    |
                                                  cleared when SLI_INT_SUM[DTIME<x>] is written with|
						  one.						    |
 <31:0>   CNT     R/W      0x0         NS        Whenever SLI_DMAx_CNT[CNT] exceeds this value,	    |   
						  SLI_INT_SUM[DCNT<x>] is set.			    |
----------------------------------------------------------------------------------------------------
===


 *
 *                  SLI_DMAx_CNT = SLI DMA Count
 *
 * The DMA Count value.
 *

     ==============================================================
     SLI_DMA(0..1)_CNT Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved					    |   
 <31:0>  CNT      R/W      0x0         NS        The DMA counter.				    |   
                                                  Writing this field will cause the written value   |
						  to be subtracted from DMA. HW will optionally	    |
						  increment this field after it completes an	    |
						  OUTBOUND or EXTERNAL-ONLY DMA instruction. These  |
						  increments may cause interrupts. Refer to	    |
						  SLI_DMAx_INT_LEVEL and SLI_INT_SUM[DCNT,DTIME].   |
----------------------------------------------------------------------------------------------------
===


 *
 *                  SLI_DMAx_TIM = SLI DMA Timer
 *
 * The DMA Timer value.
 *

     ==============================================================
     SLI_DMA(0..1)_TIM Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved					    |   
 <31:0>  TIM      R/W      0x0         NS        The DMA timer value.				    |   
						  The timer will increment when SLI_DMAx_CNT[CNT]!=0|
						  and will clear when SLI_DMAx_CNT[CNT]==0	    |
----------------------------------------------------------------------------------------------------
===


 *
 *                  SLI_CTL_STATUS = SLI Control Status Register
 *
 * Contains control and status for SLI. Writes to this register are not ordered with writes/reads to the MAC Memory space.
 * To ensure that a write has completed the user must read the register before making an access(i.e. MAC memory space)
 * that requires the value of this register to be updated.
 *

     ==============================================================
     SLI_CTL_STATUS Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   CHIP_REV  RO      NS          NS        The chip revision.                                 |   
 <13:8>  P0_NTAGS  R/W     0x20        0x20      Number of tags available for MAC Port0.            |   
                                                 In RC mode 1 tag is needed for each outbound TLP   |
                                                 that requires a CPL TLP. In Endpoint mode the      |
                                                 number of tags required for a TLP request is       |
                                                 1 per 64-bytes of CPL data + 1.                    |
                                                 This field should only be written as part of       |
                                                 reset sequence, before issuing any reads, CFGs, or |
                                                 IO transactions from the core(s).                  |
 <19:14> P1_NTAGS  R/W     0x20        0x20      Number of tags available for MAC Port1.            |   
                                                 In RC mode 1 tag is needed for each outbound TLP   |
                                                 that requires a CPL TLP. In Endpoint mode the      |
                                                 number of tags required for a TLP request is       |
                                                 1 per 64-bytes of CPL data + 1.                    |
                                                 This field should only be written as part of       |
                                                 reset sequence, before issuing any reads, CFGs, or |
                                                 IO transactions from the core(s).                  |
 <63:20> NS        RAZ     NS          NS        Reserved					    |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_BIST_STATUS = SLI's BIST Status Register
 *
 * Results from BIST runs of SLI's memories.
 *

     ==============================================================
     SLI_BIST_STATUS Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     NCB_CMD  RO       0x0         0         BIST Status for NCB Outbound Commands                  
 <1>     MSI      RO       0x0         0         BIST Status for MSI Memory Map                         
 <2>     DSI0_0   RO       0x0         0         BIST Status for DSI0 Memory 0                          
 <3>     DSI0_1   RO       0x0         0         BIST Status for DSI0 Memory 1                          
 <4>     DSI1_0   RO       0x0         0         BIST Status for DSI1 Memory 0                          
 <5>     DSI1_1   RO       0x0         0         BIST Status for DSI1 Memory 1                          
 <6>     NS       RAZ      NS          NS        Reserved					        
 <7>     NS       RAZ      NS          NS        Reserved					        
 <8>     NS       RAZ      NS          NS        Reserved					        
 <9>     P2N1_P1  RO       0x0         0         BIST Status for P2N Port1 P1                           
 <10>    P2N1_P0  RO       0x0         0         BIST Status for P2N Port1 P0                           
 <11>    P2N1_N   RO       0x0         0         BIST Status for P2N Port1 N                            
 <12>    P2N1_C1  RO       0x0         0         BIST Status for P2N Port1 C1                           
 <13>    P2N1_C0  RO       0x0         0         BIST Status for P2N Port1 C0                           
 <14>    P2N0_P1  RO       0x0         0         BIST Status for P2N Port0 P1                           
 <15>    P2N0_P0  RO       0x0         0         BIST Status for P2N Port0 P0                           
 <16>    P2N0_N   RO       0x0         0         BIST Status for P2N Port0 N                            
 <17>    P2N0_C1  RO       0x0         0         BIST Status for P2N Port0 C1                           
 <18>    P2N0_C0  RO       0x0         0         BIST Status for P2N Port0 C0                           
 <19>    NS       RAZ      NS          NS        Reserved					        
 <20>    NS       RAZ      NS          NS        Reserved					        
 <21>    NS       RAZ      NS          NS        Reserved					        
 <22>    NS       RAZ      NS          NS        Reserved					        
 <23>    NS       RAZ      NS          NS        Reserved					        
 <24>    NS       RAZ      NS          NS        Reserved					        
 <25>    CPL_P1   RO       0x0         0         BIST Status for CPL Port 1                             
 <26>    CPL_P0   RO       0x0         0         BIST Status for CPL Port 0                             
 <27>    N2P1_O   RO       0x0         0         BIST Status for N2P Port1 Data                         
 <28>    N2P1_C   RO       0x0         0         BIST Status for N2P Port1 Cmd                          
 <29>    N2P0_O   RO       0x0         0         BIST Status for N2P Port0 Data                         
 <30>    N2P0_C   RO       0x0         0         BIST Status for N2P Port0 Cmd                          
 <63:31> NS       RAZ      NS          NS        Reserved					        
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_DATA_OUT_CNT = SLI DATA OUT COUNT
 *
 * The EXEC data out fifo-count and the data unload counter.
 *

     ==============================================================
     SLI_DATA_OUT_CNT Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <5:0>   P0_FCNT  RO       0x0         NS        MAC Port0 Data Out Fifo Count. Number of address   |   
                                                 data words to be sent out the MAC port presently   |
                                                 buffered in the FIFO.                              |
 <21:6>  P0_UCNT  RO       0x0         NS        MAC Port0 Fifo Unload Count. This counter is       |   
                                                 incremented by '1' every time a word is removed    |
                                                 from the Data Out FIFO, whose count is shown in    |
                                                 P0_FCNT.                                           |
 <27:22> P1_FCNT  RO       0x0         NS        MAC Port1 Data Out Fifo Count. Number of address   |   
                                                 data words to be sent out the MAC port presently   |
                                                 buffered in the FIFO.                              |
 <43:28> P1_UCNT  RO       0x0         NS        MAC Port1 Fifo Unload Count. This counter is       |   
                                                 incremented by '1' every time a word is removed    |
                                                 from the Data Out FIFO, whose count is shown in    |
                                                 P0_FCNT.                                           |
 <63:44> NS       RAZ      NS          NS        Reserved					    |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_LAST_WIN_RDATA0 = SLI Last Window Read Data Port0
 *
 * The data from the last initiated window read.
 *

     ==============================================================
     SLI_LAST_WIN_RDATA0 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>   DATA     RO       0x0         NS        Last window read data.                             |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_LAST_WIN_RDATA1 = SLI Last Window Read Data Port1
 *
 * The data from the last initiated window read.
 *

     ==============================================================
     SLI_LAST_WIN_RDATA1 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>   DATA     RO       0x0         NS        Last window read data.                             |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_STATE1 = SLI State 1
 *
 * State machines in SLI. For debug.
 *

     ==============================================================
     SLI_STATE1 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <38:0>  CSR      RO       0x1         NS        CSR State                                          |   
 <39>    ARB      RO       0x0         NS        ARB State                                          |   
 <51:40> CPL0     RO       0x1         NS        CPL0 State                                         |   
 <63:52> CPL1     RO       0x1         NS        CPL1 State                                         |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_STATE2 = SLI State 2
 *
 * State machines in SLI. For debug.
 *

     ==============================================================
     SLI_STATE2 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   NND      RO       0x1         NS        NND State                                          |   
 <15:8>  NNP0     RO       0x1         NS        NNP0 State                                         |   
 <30:16> CSM0     RO       0x1         NS        CSM0 State                                         |   
 <45:31> CSM1     RO       0x1         NS        CSM1 State                                         |   
 <46>    RAC      RO       0x1         NS        RAC State                                          |   
 <47>    NS       RAZ      NS          NS        Reserved					    |   
 <55:48> NNP1     RO       0x1         NS        NNP1 State                                         |   
 <63:56> NS       RAZ      NS          NS        Reserved					    |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_STATE3 = SLI State 3
 *
 * State machines in SLI. For debug.
 *

     ==============================================================
     SLI_STATE3 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <12:0>  NSM0     RO       0x1         NS        NSM0 State                                         |   
 <25:13> NSM1     RO       0x1         NS        NSM1 State                                         |   
 <40:26> PSM0     RO       0x1         NS        PSM0 State                                         |   
 <55:41> PSM1     RO       0x1         NS        PSM1 State                                         |   
 <63:56> NS       RAZ      NS          NS        Reserved					    |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PCIE_MSI_RCV_B1 = SLI MAC MSI Receive Byte 1
 *
 * Register where MSI writes are directed from the MAC.
 *

     ==============================================================
     SLI_PCIE_MSI_RCV_B1 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   NS       RAZ      NS          NS        Reserved					    |   
 <15:8>  INT      R/W      0x0         NS        A write to this register will result in a bit in   |   
                                                 one of the SLI_MSI_RCV# registers being set.       |
	                                         Which bit is set is dependent on the previously    |
                                                 written using the SLI_MSI_WR_MAP register or if    |
                                                 not previously written the reset value of the MAP. |
 <63:16> NS       RAZ      NS          NS        Reserved					    |   

 Notes: This CSR can be used by PCIe and sRIO MACs.
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PCIE_MSI_RCV_B2 = SLI MAC MSI Receive Byte 2
 *
 * Register where MSI writes are directed from the MAC.
 *

     ==============================================================
     SLI_PCIE_MSI_RCV_B2 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <15:0>  NS       RAZ      NS          NS        Reserved					    |   
 <23:16> INT      R/W      0x0         NS        A write to this register will result in a bit in   |   
                                                 one of the SLI_MSI_RCV# registers being set.      |
	                                         Which bit is set is dependent on the previously    |
                                                 written using the SLI_MSI_WR_MAP register or if   |
                                                 not previously written the reset value of the MAP. |
 <63:24> NS       RAZ      NS          NS        Reserved					    |   

 Notes: This CSR can be used by PCIe and sRIO MACs.
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PCIE_MSI_RCV_B3 = SLI MAC MSI Receive Byte 3
 *
 * Register where MSI writes are directed from the MAC.
 *

     ==============================================================
     SLI_PCIE_MSI_RCV_B3 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <23:0>   NS       RAZ      NS          NS       Reserved					    |   
 <31:24>  INT      R/W      0x0         NS       A write to this register will result in a bit in   |   
                                                 one of the SLI_MSI_RCV# registers being set.      |
	                                         Which bit is set is dependent on the previously    |
                                                 written using the SLI_MSI_WR_MAP register or if   |
                                                 not previously written the reset value of the MAP. |
 <63:32> NS       RAZ      NS          NS        Reserved					    |   

 Notes: This CSR can be used by PCIe and sRIO MACs.
----------------------------------------------------------------------------------------------------
===


 *
 *                  SLI_PKT[0..31]_OUT_SIZE = SLI Packet Out Size
 *
 * Contains the BSIZE and ISIZE for output packet ports.
 *

     ==============================================================
     SLI_PKT(0..31)_OUT_SIZE Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <15:0>  BSIZE    R/W      0x0         NS        BUFFER SIZE (bytes) for ring @.                    |   
 <22:16> ISIZE    R/W      0x0         NS        INFO BYTES size (bytes) for ring @. Legal sizes    |   
                                                 are 0 to 120. Not used in buffer-pointer-only mode.|
 <63:23> NS       RAZ      NS          NS        Reserved					    |   
----------------------------------------------------------------------------------------------------
===



 *
 *                  SLI_PKT_INSTR_ENB = SLI's Packet Instruction Enable
 *
 * Enables the instruction fetch for a Packet-ring.
 *

     ==============================================================
     SLI_PKT_INSTR_ENB Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  ENB      R/W      0           NS        When ENB<i>=1, instruction input ring i is enabled.|   
 <63:32> NS       RAZ      NS          NS        Reserved					    |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_OUT_ENB = SLI's Packet Output Enable
 *
 * Enables the output packet engines.
 *

     ==============================================================
     SLI_PKT_OUT_ENB Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  ENB      R/W      0           NS        When ENB<i>=1, packet output ring i is enabled.    |   
                                                 If an error occurs on reading pointers for an      |
						 output ring, the ring will be disabled by clearing |
						 the bit associated with the ring to '0'.           |
 <63:32> NS       RAZ      NS          NS        Reserved					    |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_INSTR_SIZE = SLI's Packet Instruction Size
 *
 * Determines if instructions are 64 or 32 byte in size for a Packet-ring.
 *

     ==============================================================
     SLI_PKT_INSTR_SIZE Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  IS_64B   R/W      0           NS        When IS_64B<i>=1, instruction input ring i uses 64B|   
                                                 instructions, else 32B instructions.               |
 <63:32> NS       RAZ      NS          NS        Reserved					    |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_SLIST_ROR = SLI's Packet Scatter List Relaxed Ordering
 *
 * The ROR field for the TLP when fetching Scatter List.
 *

     ==============================================================
     SLI_PKT_SLIST_ROR Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  ROR      R/W      0           NS        ADDRTYPE<0> for the packet output ring reads that  |   
                                                 fetch buffer/info pointer pairs.                   |
                                                 ROR<i> becomes ADDRTYPE<0> in DPI/SLI reads that   |
                                                 fetch buffer/info pairs from packet output ring i  |
                                                 (from address SLI_PKTi_SLIST_BADDR+ in MAC memory  |
                                                 space.)                                            |
                                                 ADDRTYPE<0> is the relaxed-order attribute for PCIe|
                                                 , helps select an SRIO*_S2M_TYPE* entry with sRIO. |
 <63:32> NS       RAZ      NS          NS        Reserved					    |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_SLIST_NS = SLI's Packet Scatter List No Snoop
 *
 * The NS field for the TLP when fetching Scatter List.
 *

     ==============================================================
     SLI_PKT_SLIST_NS Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  NSR      R/W      0           NS        ADDRTYPE<1> for the packet output ring reads that  |   
                                                 fetch buffer/info pointer pairs.                   |
                                                 NSR<i> becomes ADDRTYPE<1> in DPI/SLI reads that   |
                                                 fetch buffer/info pairs from packet output ring i  |
                                                 (from address SLI_PKTi_SLIST_BADDR+ in MAC memory  |
                                                 space.)                                            |
                                                 ADDRTYPE<1> is the relaxed-order attribute for PCIe|
                                                 , helps select an SRIO*_S2M_TYPE* entry with sRIO. |
 <63:32> NS       RAZ      NS          NS        Reserved					    |   
----------------------------------------------------------------------------------------------------
===


 *
 *                  SLI_PKT_SLIST_ES = SLI's Packet Scatter List Endian Swap
 *
 * The Endian Swap for Scatter List Read.
 *

     ==============================================================
     SLI_PKT_SLIST_ES Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ES       R/W      0           NS        ES<1:0> for the packet output ring reads that      |   
                                                 fetch buffer/info pointer pairs.                   |
                                                 ES<2i+1:2i> becomes ES<1:0> in DPI/SLI reads that  |
                                                 fetch buffer/info pairs from packet output ring i  |
                                                 (from address SLI_PKTi_SLIST_BADDR+ in MAC memory  |
                                                 space.)                                            |
                                                 ES<1:0> is the endian-swap attribute for these MAC |
                                                 memory space reads.                                |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_IPTR = SLI's Packet Info Poitner
 *
 * Controls using the Info-Pointer to store length and data.
 *

     ==============================================================
     SLI_PKT_IPTR Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  IPTR     R/W      0           NS        When IPTR<i>=1, packet output ring i is in info-   |   
                                                 pointer mode, else buffer-pointer-only mode.       |
 <63:32> NS       RAZ      NS          NS        Reserved					    |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_DPADDR = SLI's Packet Data Pointer Addr
 *
 * Used to detemine address and attributes for packet data writes.
 *

     ==============================================================
     SLI_PKT_DPADDR Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DPTR     R/W      0         0xffffffff  Determines whether buffer/info pointers are        |   
                                                 DPTR format 0 or DPTR format 1.                    |
                                                 When DPTR<i>=1, the buffer/info pointers fetched   |
                                                 from packet output ring i are DPTR format 0.       |
                                                 When DPTR<i>=0, the buffer/info pointers fetched   |
                                                 from packet output ring i are DPTR format 1.       |
                                                 (Replace SLI_PKT_INPUT_CONTROL[D_ESR,D_NSR,D_ROR]  |
                                                 in the HRM descriptions of DPTR format 0/1 with    |
                                                 SLI_PKT_DATA_OUT_ES[ES<2i+1:2i>],                  |
                                                 SLI_PKT_DATA_OUT_NS[NSR<i>], and                   |
                                                 SLI_PKT_DATA_OUT_ROR[ROR<i>], respectively,        |
                                                 though.)                                           |
 <63:32> NS       RAZ      NS          NS        Reserved					    |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_DATA_OUT_ROR = SLI's Packet Data Out Relaxed Ordering
 *
 * The ROR field for the TLP when writing Packet Data.
 *

     ==============================================================
     SLI_PKT_DATA_OUT_ROR Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  ROR      R/W      0           NS        ADDRTYPE<0> or MACADD<60> for buffer/info writes.  |   
                                                 ROR<i> becomes either ADDRTYPE<0> or MACADD<60>    |
                                                 for writes to buffer/info pair MAC memory space    |
                                                 addresses fetched from packet output ring i.       |
                                                 ADDRTYPE<0> if SLI_PKT_DPADDR[DPTR<i>]=1, else     |
                                                 MACADD<60>.                                        |
                                                 In the latter case,ADDRTYPE<0> comes from DPTR<60>.|
                                                 ADDRTYPE<0> is the relaxed-order attribute for PCIe|
                                                 , helps select an SRIO*_S2M_TYPE* entry with sRIO. |
 <63:32> NS       RAZ      NS          NS        Reserved					    |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_DATA_OUT_NS = SLI's Packet Data Out No Snoop
 *
 * The NS field for the TLP when writing packet data.
 *

     ==============================================================
     SLI_PKT_DATA_OUT_NS Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  NSR      R/W      0           NS        ADDRTYPE<1> or MACADD<61> for buffer/info writes.  |   
                                                 NSR<i> becomes either ADDRTYPE<1> or MACADD<61>    |
                                                 for writes to buffer/info pair MAC memory space    |
                                                 addresses fetched from packet output ring i.       |
                                                 ADDRTYPE<1> if SLI_PKT_DPADDR[DPTR<i>]=1, else     |
                                                 MACADD<61>.                                        |
                                                 In the latter case,ADDRTYPE<1> comes from DPTR<61>.|
                                                 ADDRTYPE<1> is the no-snoop attribute for PCIe     |
                                                 , helps select an SRIO*_S2M_TYPE* entry with sRIO. |
 <63:32> NS       RAZ      NS          NS        Reserved					    |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_DATA_OUT_ES = SLI's Packet Data Out Endian Swap
 *
 * The Endian Swap for writing Data Out.
 *

     ==============================================================
     SLI_PKT_DATA_OUT_ES Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ES       R/W      0           NS        ES<1:0> or MACADD<63:62> for buffer/info writes.   |   
                                                 ES<2i+1:2i> becomes either ES<1:0> or              |
                                                 MACADD<63:62> for writes to buffer/info pair       |
                                                 MAC memory space addresses fetched from packet     |
                                                 output ring i. ES<1:0> if SLI_PKT_DPADDR[DPTR<i>]=1|
                                                 , else MACADD<63:62>.                              |
                                                 In the latter case, ES<1:0> comes from DPTR<63:62>.|
                                                 ES<1:0> is the endian-swap attribute for these MAC |
                                                 memory space writes.                               |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_OUT_BMODE = SLI's Packet Out Byte Mode
 *
 * Control the updating of the SLI_PKT#_CNT register.
 *

     ==============================================================
     SLI_PKT_OUT_BMODE Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0> BMODE     R/W      0           NS        Determines whether SLI_PKTi_CNTS[CNT] is a byte or |   
                                                 packet counter.                                    |
                                                 When BMODE<i>=1, SLI_PKTi_CNTS[CNT] is a byte      |
                                                 counter, else SLI_PKTi_CNTS[CNT] is a packet       |
                                                 counter.                                           |
 <63:32> NS       RAZ      NS          NS        Reserved					    |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_PCIE_PORT = SLI's Packet To MAC Port Assignment
 *
 * Assigns Packet Ports to MAC ports.
 *

     ==============================================================
     SLI_PKT_PCIE_PORT Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  PP       R/W      0           NS        The physical MAC  port that the output ring uses.  |   
						 Two bits are used per ring (i.e. ring 0 [1:0],     |
                                                 ring 1 [3:2], ....). A value of '0 means           |
  						 that the Packetring is assign to MAC Port 0, a '1' |
						 MAC Port 1, '2' and '3' are reserved.              |
----------------------------------------------------------------------------------------------------
===

 *
 * 0x90F0 reserved SLI_PKT_PCIE_PORT2
 *






 *
 *                  SLI_PKT_INT_LEVELS = SLI's Packet Interrupt Levels
 *
 * Output packet interrupt levels.
 *

     ==============================================================
     SLI_PKT_INT_LEVELS Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>   CNT     R/W      0x0         NS         Output ring counter interrupt threshold            |   
                                                 SLI sets SLI_PKT_CNT_INT[PORT<i>] whenever         |
                                                 SLI_PKTi_CNTS[CNT] > CNT                           |
<53:32>  TIME    R/W      0x0         NS         Output ring counter time interrupt threshold       |   
                                                 SLI sets SLI_PKT_TIME_INT[PORT<i>] whenever        |
                                                 SLI_PKTi_CNTS[TIMER] > TIME                        |
<63:54>  NS      RAZ      NS          NS         Reserved					    |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_CNT_INT = SLI Packet Counter Interrupt
 *
 * The packets rings that are interrupting because of Packet Counters.
 *

     ==============================================================
     SLI_PKT_CNT_INT Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>   PORT     R/W1C   0x0         NS        Output ring packet counter interrupt bits          |   
                                                 SLI sets PORT<i> whenever                          |
						 SLI_PKTi_CNTS[CNT] > SLI_PKT_INT_LEVELS[CNT].      |
                                                 SLI_PKT_CNT_INT_ENB[PORT<i>] is the corresponding  |
                                                 enable.                                            |
 <63:32>  NS       RAZ     NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_TIME_INT = SLI Packet Timer Interrupt
 *
 * The packets rings that are interrupting because of Packet Timers.
 *

     ==============================================================
     SLI_PKT_TIME_INT Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>   PORT     R/W1C   0x0         NS        Output ring packet timer interrupt bits            |   
                                                 SLI sets PORT<i> whenever                          |
						 SLI_PKTi_CNTS[TIMER] > SLI_PKT_INT_LEVELS[TIME].   |
                                                 SLI_PKT_TIME_INT_ENB[PORT<i>] is the corresponding |
                                                 enable.                                            |
 <63:32>  NS       RAZ     NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_CNT_INT_ENB = SLI Packet Counter Interrupt Enable
 *
 * Enable for the packets rings that are interrupting because of Packet Counters.
 *

     ==============================================================
     SLI_PKT_CNT_INT_ENB Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>   PORT     R/W     0x0         NS        Output ring packet counter interrupt enables       |   
                                                 When both PORT<i> and corresponding                |
                                                 SLI_PKT_CNT_INT[PORT<i>] are set, for any i,       |
                                                 then SLI_INT_SUM[PCNT] is set, which can cause     |
                                                 an interrupt.                                      |
 <63:32>  NS       RAZ     NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_TIME_INT_ENB = SLI Packet Timer Interrupt Enable
 *
 * The packets rings that are interrupting because of Packet Timers.
 *

     ==============================================================
     SLI_PKT_TIME_INT_ENB Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>   PORT     R/W     0x0         NS        Output ring packet timer interrupt enables         |   
                                                 When both PORT<i> and corresponding                |
                                                 SLI_PKT_TIME_INT[PORT<i>] are set, for any i,      |
                                                 then SLI_INT_SUM[PTIME] is set, which can cause    |
                                                 an interrupt.                                      |
 <63:32>  NS       RAZ     NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_INPUT_CONTROL = SLI's Packet Input Control
 *
 * Control for reads for gather list and instructions.
 *

     ==============================================================
     SLI_PKT_INPUT_CONTROL Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     ROR      R/W      0x0         NS        ADDRTYPE<0> for packet input instruction reads and     
                                                 gather list (i.e. DPI component) reads from MAC
                                                 memory space.
                                                 ADDRTYPE<0> is the relaxed-order attribute for PCIe
                                                 , helps select an SRIO*_S2M_TYPE* entry with sRIO.
 <2:1>   ESR      R/W      0x0         NS        ES<1:0> for packet input instruction reads and         
                                                 gather list (i.e. DPI component) reads from MAC
                                                 memory space.
                                                 ES<1:0> is the endian-swap attribute for these MAC
                                                 memory space reads.
 <3>     NSR      R/W      0x0         NS        ADDRTYPE<1> for packet input instruction reads and     
                                                 gather list (i.e. DPI component) reads from MAC
                                                 memory space.
                                                 ADDRTYPE<1> is the no-snoop attribute for PCIe
                                                 , helps select an SRIO*_S2M_TYPE* entry with sRIO.
 <4>     USE_CSR  R/W      0x0         1         When set '1' the csr value will be used for            
                                                 ROR, ESR, and NSR. When clear '0' the value in
                                                 DPTR will be used. In turn the bits not used for
                                                 ROR, ESR, and NSR, will be used for bits [63:60]
                                                 of the address used to fetch packet data. 
 <5>     D_ROR    R/W      0x0         NS        ADDRTYPE<0> or MACADD<60> for packet input data        
                                                 reads.
                                                 D_ROR becomes either ADDRTYPE<0> or MACADD<60>
                                                 for MAC memory space reads of packet input data
                                                 fetched for any packet input ring.
                                                 ADDRTYPE<0> if USE_CSR=1, else MACADD<60>.
                                                 In the latter case, ADDRTYPE<0> comes from DPTR<60>.
                                                 ADDRTYPE<0> is the relaxed-order attribute for PCIe
                                                 , helps select an SRIO*_S2M_TYPE* entry with sRIO.
 <7:6>   D_ESR    R/W      0x0         NS        ES<1:0> or MACADD<63:62> for packet input data         
                                                 reads.
                                                 D_ESR becomes either ES<1:0> or MACADD<63:62>
                                                 for MAC memory space reads of packet input data
                                                 fetched for any packet input ring.
                                                 ES<1:0> if USE_CSR=1, else MACADD<63:62>.
                                                 In the latter case, ES<1:0> comes from DPTR<63:62>.
                                                 ES<1:0> is the endian-swap attribute for these MAC
                                                 memory space reads.
 <8>     D_NSR    R/W      0x0         NS        ADDRTYPE<1> or MACADD<61> for packet input data        
                                                 reads.
                                                 D_NSR becomes either ADDRTYPE<1> or MACADD<61>
                                                 for MAC memory space reads of packet input data
                                                 fetched for any packet input ring.
                                                 ADDRTYPE<1> if USE_CSR=1, else MACADD<61>.
                                                 In the latter case, ADDRTYPE<1> comes from DPTR<61>.
                                                 ADDRTYPE<1> is the no-snoop attribute for PCIe
                                                 , helps select an SRIO*_S2M_TYPE* entry with sRIO.
 <21:9>  PBP_DHI  R/W      0x0         0         PBP_DHI replaces address bits that are used            
                                                 for parse mode and skip-length when
                                                 SLI_PKTi_INSTR_HEADER[PBP]=1.
                                                 PBP_DHI becomes either MACADD<63:55> or MACADD<59:51>
                                                 for the instruction DPTR reads in this case.
                                                 The instruction DPTR reads are called
                                                 "First Direct" or "First Indirect" in the HRM.
                                                 When PBP=1, if "First Direct" and USE_CSR=0, PBP_DHI
                                                 becomes MACADD<59:51>, else MACADD<63:55>.
 <22>    PKT_RR   R/W      0x0         1         When set '1' the input packet selection will be        
                                                 made with a Round Robin arbitration. When '0'
                                                 the input packet ring is fixed in priority,
                                                 where the lower ring number has higher priority.
 <63:23> NS       RAZ      NS          NS        Reserved					        
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_OUTPUT_WMARK = SLI's Packet Output Water Mark
 *
 * Value that when the SLI_PKT#_SLIST_BAOFF_DBELL[DBELL} value is less then that backpressure for the rings will be applied.
 *

     ==============================================================
     SLI_PKT_OUTPUT_WMARK Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  WMARK    R/W      0x0         14        Value when DBELL count drops below backpressure    |   
						 for the ring will be applied to the PKO.           |
 <63:32> NS       RAZ      NS          NS        Reserved					    |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_INSTR_RD_SIZE = SLI Instruction Read Size
 *
 * The number of instruction allowed to be read at one time.
 * 

     ==============================================================
     SLI_PKT_INSTR_RD_SIZE Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  RDSIZE   R/W      0x0         NS        Number of instructions to be read in one MAC read  |   
                                                 request for the 4 ports - 8 rings. Every two bits  |
                                                 (i.e. 1:0, 3:2, 5:4..) are assign to the port/ring |
                                                 combinations.                                      |
                                                 15:0  PKIPort0,Ring 7..0  31:16 PKIPort1,Ring 7..0 |
                                                 47:32 PKIPort2,Ring 7..0  63:48 PKIPort3,Ring 7..0 |
                                                 Two bit value are:                                 |
                                                 0 - 1 Instruction                                  |
                                                 1 - 2 Instructions                                 |
                                                 2 - 3 Instructions                                 |
                                                 3 - 4 Instructions                                 |
----------------------------------------------------------------------------------------------------
===


 *
 *                  SLI_PKT_IN_PCIE_PORT = SLI's Packet In To MAC Port Assignment
 *
 * Assigns Packet Input rings to MAC ports.
 *

     ==============================================================
     SLI_PKT_IN_PCIE_PORT Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  PP       R/W      0           NS        The MAC port that the Packet ring number is        |   
						 assigned. Two bits are used per ring (i.e. ring 0  |
						 [1:0], ring 1 [3:2], ....). A value of '0 means    |
  						 that the Packetring is assign to MAC Port 0, a '1' |
						 MAC Port 1, '2' and '3' are reserved.              |
----------------------------------------------------------------------------------------------------
===

*
*91c0 reserved
*91d0 reserved
*91e0 reserved
* 



 *
 *                  SLI_PKT_PORT_IN_RST = SLI Packet Port In Reset
 *
 * Vector bits related to ring-port for ones that are reset.
 *

     ==============================================================
     SLI_PKT_PORT_IN_RST Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  OUT_RST  RO       0           NS        When asserted '1' the vector bit cooresponding     |   
                                                 to the outbound Packet-ring is in reset.           |
 <63:32> IN_RST   RO       0           NS        When asserted '1' the vector bit cooresponding     |   
                                                 to the inbound Packet-ring is in reset.            |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_IN_INSTR_COUNTS = SLI Packet Input Instrutction Counts
 *
 * Keeps track of the number of instructions read into the FIFO and Packets sent to IPD.
 *

     ==============================================================
     SLI_PKT_IN_INSTR_COUNTS Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  RD_CNT   RO       0           NS        Shows the value of instructions that have had reads|   
                                                 issued for them.                                   |
                                                 to the Packet-ring is in reset.                    |
 <63:32> WR_CNT   RO       0           NS        Shows the number of packets sent to the IPD.       |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_IN_BP = SLI Packet Input Backpressure
 *
 * Which input rings have backpressure applied.
 *

     ==============================================================
     SLI_PKT_IN_BP Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  BP       RO       0           NS        A packet input  ring that has its count greater    |   
						 than its WMARK will have backpressure applied.     |
						 Each of the 32 bits coorespond to an input ring.   |
						 When '1' that ring has backpressure applied an     |
						 will fetch no more instructions, but will process  |
						 any previously fetched instructions.               |
 <63:32> NS       RAZ      NS          NS        Reserved					    |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_CTL = SLI Packet Control
 *
 * Control for packets.
 *

     ==============================================================
     SLI_PKT_CTL Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>   PKT_BP    R/W     0xF         0xF       When set '1' enable the port level backpressure for|   
                                                 PKO ports associated with the bit.                 |
 <4>     RING_EN   R/W     0x0         0x0       When '0' forces "relative Q position" received     |   
						 from PKO to be zero, and replicates the back-      |
						 pressure indication for the first ring attached    |
						 to a PKO port across all the rings attached to a   |
						 PKO port. When '1' backpressure is on a per        |
						 port/ring.                                         |
 <63:5>  NS       RAZ      NS          NS        Reserved					    |   
----------------------------------------------------------------------------------------------------
===





 *
 *                  SLI_PKT[0..31]_SLIST_BADDR = SLI Packet ring# Scatter List Base Address
 *
 * Start of Scatter List for output packet pointers - MUST be 16 byte alligned
 *

     ==============================================================
     SLI_PKT(0..31)_SLIST_BADDR Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <3:0>   NS       RAZ      NS          NS        Reserved					    |   
 <63:4>  ADDR     R/W      0x0         NS        Base address for scatter list pointers.            |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT[0..31]_SLIST_BAOFF_DBELL = SLI Packet ring# Scatter List Base Address Offset and Doorbell
 *
 * The doorbell and base address offset for next read.
 *

     ==============================================================
     SLI_PKT(0..31)_SLIST_BAOFF_DBELL Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DBELL    R/W      0x0         0         Scatter list doorbell count. Writes to this field  |   
                                                 will increment the value here. Reads will return   |
                                                 present value. The value of this field is          |
                                                 decremented as read operations are ISSUED for      |
                                                 scatter pointers.                                  |
                                                 A write of 0xFFFFFFFF will clear DBELL and AOFF    |
 <63:32> AOFF     RO       0x0         NS        The offset from the SLI_PKT[0..31]_SLIST_BADDR    |   
                                                 where the next SList pointer will be read.         |
	                                         A write of 0xFFFFFFFF to the DBELL field will      |
						 clear DBELL and AOFF                               |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT[0..31]_SLIST_FIFO_RSIZE = SLI Packet ring# Scatter List FIFO and Ring Size.
 *
 * The number of scatter pointer pairs in the scatter list.
 *

     ==============================================================
     SLI_PKT(0..31)_SLIST_FIFO_RSIZE Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  RSIZE    R/W      0x0         NS        The number of scatter pointer pairs contained in   |   
                                                 the scatter list ring.                             |
 <63:32> NS       RO       0x0         NS        Reserverd.                                         |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT_IN_DONE[0..31]_CNTS = SLI Instruction Done ring# Counts
 *
 * Counters for instructions completed on Input rings.
 *

     ==============================================================
     SLI_PKT_IN_DONE(0..31)_CNTS Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  CNT      RO       0x0         NS        This field is incrmented by '1' when an instruction|   
						 is completed. This field is incremented as the     |
						 last of the data is read from the MAC.             |
 <63:32> NS       RO       0x0         NS        Reserverd.                                         |   
----------------------------------------------------------------------------------------------------
===


 *
 *                  SLI_PKT[0..31]_CNTS = SLI Packet ring# Counts
 *
 * The counters for output rings.
 *

     ==============================================================
     SLI_PKT(0..31)_CNTS Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  CNT      R/W      0x0         0         ring counter. This field is incremented as         |   
                                                 packets are sent out and decremented in response to|
                                                 writes to this field.                              |
                                                 When SLI_PKT_OUT_BMODE is '0' a value of 1 is     |
						 added to the register for each packet, when '1'    |
						 and the info-pointer is NOT used the length of the |
						 packet plus 8 is added, when '1' and info-pointer  |
						 mode IS used the packet length is added to this    |
						 field.  					    |
 <53:32> TIMER    RO       0x0         0         Timer incremented every 1024 core clocks           |   
                                                 when SLI_PKTS#_CNTS[CNT] is non zero. Field       |
                                                 cleared when SLI_PKTS#_CNTS[CNT] goes to 0.       |
                                                 Field is also cleared when SLI_PKT_TIME_INT is    |
                                                 cleared.                                           |
                                                 The first increment of this count can occur        |
                                                 between 0 to 1023 core clocks.                     |
 <63:54> NS       RO      NS          NS        Reserved					    |   
----------------------------------------------------------------------------------------------------
===


 *
 *                  SLI_PKT[0..31]_INSTR_BADDR = SLI Packet ring# Instruction Base Address
 *
 * Start of Instruction for input packets.
 *

     ==============================================================
     SLI_PKT(0..31)_INSTR_BADDR Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <2:0>   NS       RAZ      NS          NS        Reserved					    |   
 <63:3>  ADDR     R/W       0x0         NS        Base address for Instructions.                    |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT[0..31]_INSTR_BAOFF_DBELL = SLI Packet ring# Instruction Base Address Offset and Doorbell
 *
 * The doorbell and base address offset for next read.
 *

     ==============================================================
     SLI_PKT(0..31)_INSTR_BAOFF_DBELL Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  DBELL    R/W      0x0         0         Instruction doorbell count. Writes to this field   |   
                                                 will increment the value here. Reads will return   |
                                                 present value. A write of 0xffffffff will set the  |
						 DBELL and AOFF fields to '0'.                      |
 <63:32> AOFF     RO       0x0         NS        The offset from the SLI_PKT[0..31]_INSTR_BADDR    |   
                                                 where the next instruction will be read.           |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT[0..31]_INSTR_FIFO_RSIZE = SLI Packet ring# Instruction FIFO and Ring Size.
 *
 * Fifo field and ring size for Instructions.
 *

     ==============================================================
     SLI_PKT(0..31)_INSTR_FIFO_RSIZE Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  RSIZE    R/W      0x0         NS        Instruction ring size.                             |   
 <36:32> FCNT     RO       0x0         NS        Fifo count.                                        |   
 <45:37> WRP      RO       0x0         NS        Fifo write pointer.                                |   
 <54:46> RRP      RO       0x0         NS        Fifo read pointer.                                 |   
 <63:55> MAX      RO       0x10        NS        Max Fifo Size.                                     |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT[0..31]_INSTR_HEADER = SLI Packet ring# Instruction Header.
 *
 * VAlues used to build input packet header.
 *

     ==============================================================
     SLI_PKT(0..31)_INSTR_HEADER Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     NTAG     R/W      0x0         NS        NTAG. Used when packet is raw and PBP==0.              
 <1>     NTT      R/W      0x0         NS        NTT. Used when packet is raw and PBP==0.               
 <2>     NGRP     R/W      0x0         NS        NGRP. Used when packet is raw and PBP==0.              
 <3>     NQOS     R/W      0x0         NS        NQOS. Used when packet is raw and PBP==0.              
 <5:4>   NS       R/W      0x0         NS        Reserved                                               
                                                 (A R/W field in real HW, but we require SW to
                                                 always write zeroes.)
 <12:6>  SKP_LEN  R/W      0x0         NS        Skip Length. Used when USE_IHDR is set and packet      
                                                 is not raw and PBP is not set.
 <13>    NS       R/W      0x0         NS        Reserved                                               
                                                 (A R/W field in real HW, but we require SW to
                                                 always write zeroes.)
                                                 instruction header sent to IPD.
 <15:14> PAR_MODE R/W      0x0         NS        Parse Mode. Used when USE_IHDR is set and packet       
                                                 is not raw and PBP is not set.
 <20:16> NS       R/W      0x0         NS        Reserved                                               
                                                 (A R/W field in real HW, but we require SW to
                                                 always write zeroes.)
 <21>    USE_IHDR R/W      0x0         NS        When set '1' the instruction header will be sent       
                                                 as part of the packet data, regardless of the
                                                 value of bit [63] of the instruction header.
                                                 USE_IHDR must be set whenever PBP is set.
 <22>    RNTAG    R/W      0x0         NS        RNTAG. Used when packet is raw and PBP==0.             
 <23>    RNTT     R/W      0x0         NS        RNTT. Used when packet is raw and PBP==0.              
 <24>    RNGRP    R/W      0x0         NS        RNGRP. Used when packet is raw and PBP==0.             
 <25>    RNQOS    R/W      0x0         NS        RNQOS. Used when packet is raw and PBP==0.             
 <27:26> NS       R/W      0x0         NS        Reserved                                               
                                                 (A R/W field in real HW, but we require SW to
                                                 always write zeroes.)
 <34:28> RSKP_LEN R/W      0x0         NS        Skip Length. Used when packet is raw and PBP==0.       
 <35>    NS       RAZ      0x0         NS        Reserved                                               
                                                 (A R/W field in real HW, but we require SW to
                                                 always write zeroes.)
 <37:36> RPARMODE R/W      0x0         NS        Parse Mode. Used when packet is raw and PBP==0.        
 <42:38> NS       RAZ      0x0         NS        Reserved                                               
                                                 (A R/W field in real HW, but we require SW to
                                                 always write zeroes.)
 <43>    PBP      R/W      0x0         NS        Enable Packet-by-packet mode.                          
 <63:44> NS       RAZ      NS          NS        Reserved                                               
                                                 (A R/W field in real HW, but we require SW to
                                                 always write zeroes.)
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PKT[0..31]_IN_BP = SLI Packet ring# Input Backpressure
 *
 * The counters and thresholds for input packets to apply backpressure to processing of the packets.
 *

     ==============================================================
     SLI_PKT(0..31)_IN_BP Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  CNT      R/W      0x0         0         ring counter. This field is incremented by one     |   
						 whenever OCTEON receives, buffers, and creates a   |
                                                 work queue entry for a packet that arrives by the  |
                                                 cooresponding input ring. A write to this field    |
						 will be subtracted from the field value.           |
                                                 When writing this field of the SLI_PKT#_IN_BP     |
						 register, use a 4-byte write so as to not write    |
						 any other field of this register. 		    |
 <63:32> WMARK    R/W      0xffffffff  NS        When CNT is greater than this threshold no more    |   
                                                 packets will be processed for this ring.           |
                                                 When writing this field of the SLI_PKT#_IN_BP     |
						 register, use a 4-byte write so as to not write    |
						 any other field of this register. 		    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_MSI_RCV0 = SLI MSI Receive0
 *
 * Contains bits [63:0] of the 256 bits of MSI interrupts.
 *

     ==============================================================
     SLI_MSI_RCV0 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  INT      R/W1C    0x0         0         Bits 63-0 of the 256 bits of MSI interrupt.            
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_MSI_RCV1 = SLI MSI Receive1
 *
 * Contains bits [127:64] of the 256 bits of MSI interrupts.
 *

     ==============================================================
     SLI_MSI_RCV1 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  INT      R/W1C    0x0         0         Bits 127-64 of the 256 bits of MSI interrupt.          
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_MSI_RCV2 = SLI MSI Receive2
 *
 * Contains bits [191:128] of the 256 bits of MSI interrupts.
 *

     ==============================================================
     SLI_MSI_RCV2 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  INT      R/W1C    0x0         0         Bits 191-128 of the 256 bits of MSI interrupt.         
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_MSI_RCV3 = SLI MSI Receive3
 *
 * Contains bits [255:192] of the 256 bits of MSI interrupts.
 *

     ==============================================================
     SLI_MSI_RCV3 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  INT      R/W1C    0x0         0         Bits 255-192 of the 256 bits of MSI interrupt.         
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_MSI_ENB0 = SLI MSI Enable0
 *
 * Used to enable the interrupt generation for the bits in the SLI_MSI_RCV0.
 *

     ==============================================================
     SLI_MSI_ENB0 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ENB      R/W      0x0 0xffffffffffffffff Enables bit [63:0] of SLI_MSI_RCV0.                  
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_MSI_ENB1 = SLI MSI Enable1
 *
 * Used to enable the interrupt generation for the bits in the SLI_MSI_RCV1.
 *

     ==============================================================
     SLI_MSI_ENB1 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ENB      R/W      0x0 0xffffffffffffffff Enables bit [63:0] of SLI_MSI_RCV1.                  
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_MSI_ENB2 = SLI MSI Enable2
 *
 * Used to enable the interrupt generation for the bits in the SLI_MSI_RCV2.
 *

     ==============================================================
     SLI_MSI_ENB2 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ENB      R/W      0x0 0xffffffffffffffff Enables bit [63:0] of SLI_MSI_RCV2.                  
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_MSI_ENB3 = SLI MSI Enable3
 *
 * Used to enable the interrupt generation for the bits in the SLI_MSI_RCV3.
 *

     ==============================================================
     SLI_MSI_ENB3 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  ENB      R/W      0x0 0xffffffffffffffff Enables bit [63:0] of SLI_MSI_RCV3.                  
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_MSI_WR_MAP = SLI MSI Write MAP
 *
 * Used to write the mapping function of the SLI_PCIE_MSI_RCV to SLI_MSI_RCV registers.
 *

     ==============================================================
     SLI_MSI_WR_MAP Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   MSI_INT  R/W      0x0         NS        Selects the value that would be received when the  |   
                                                 SLI_PCIE_MSI_RCV register is written.             |
 <15:8>  CIU_INT  R/W      0x0         NS        Selects which bit in the SLI_MSI_RCV# (0-255)     |   
                                                 will be set when the value specified in the        |
                                                 MSI_INT of this register is recevied during a      |
                                                 write to the SLI_PCIE_MSI_RCV register.           |
 <63:16> NS       RAZ      NS          NS        Reserved					    |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_MSI_RD_MAP = SLI MSI Read MAP
 *
 * Used to read the mapping function of the SLI_PCIE_MSI_RCV to SLI_MSI_RCV registers.
 *

     ==============================================================
     SLI_MSI_RD_MAP Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   MSI_INT  R/W      0x0         NS        Selects the value that would be received when the  |   
                                                 SLI_PCIE_MSI_RCV register is written.             |
 <15:8>  RD_INT   RO       0x0         NS        The value of the map at the location PREVIOUSLY    |   
                                                 written to the MSI_INT field of this register.     |
 <63:16> NS       RAZ      NS          NS        Reserved					    |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_PCIE_MSI_RCV = SLI MAC MSI Receive
 *
 * Register where MSI writes are directed from the MAC.
 *

     ==============================================================
     SLI_PCIE_MSI_RCV Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   INT      R/W      0x0         NS        A write to this register will result in a bit in   |   
                                                 one of the SLI_MSI_RCV# registers being set.      |
	                                         Which bit is set is dependent on the previously    |
                                                 written using the SLI_MSI_WR_MAP register or if   |
                                                 not previously written the reset value of the MAP. |
 <63:8>  NS       RAZ      NS          NS        Reserved					    |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_INT_ENB_CIU = SLI's Interrupt Enable CIU Register
 *
 * Used to enable the various interrupting conditions of SLI
 *

     ==============================================================
     SLI_INT_ENB_CIU Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <0>     RML_TO    R/W     0x0         1         Enables SLI_INT_SUM[0] to generate an              |    
                                                 interrupt on the RSL.                              |
 <1>     NS        R/W     0x0         1         Enables SLI_INT_SUM[1] to generate an              |    
                                                 interrupt on the RSL.                              |
 <2>     BAR0_TO   R/W     0x0         1         Enables SLI_INT_SUM[2] to generate an              |    
                                                 interrupt on the RSL.                              |
 <3>     IOB2BIG   R/W     0x0         1         Enables SLI_INT_SUM[3] to generate an              |    
                                                 interrupt on the RSL.                              |
 <4>     PCNT      R/W     0x0         1         Enables SLI_INT_SUM[4] to generate an              |    
                                                 interrupt on the RSL.                              |
 <5>     PTIME     R/W     0x0         1         Enables SLI_INT_SUM[5] to generate an              |    
                                                 interrupt on the RSL.                              |
 <7:6>   NS        R/W     0x0         0         Reserved	 				    |    
 <8>     M0_UP_B0  R/W     0x0         1         Enables SLI_INT_SUM[8] to generate an              |    
                                                 interrupt on the RSL.                              |
 <9>     M0_UP_WI  R/W     0x0         1         Enables SLI_INT_SUM[9] to generate an              |    
                                                 interrupt on the RSL.                              |
 <10>    M0_UN_B0  R/W     0x0         1         Enables SLI_INT_SUM[10] to generate an             |    
                                                 interrupt on the RSL.                              |
 <11>    M0_UN_WI  R/W     0x0         1         Enables SLI_INT_SUM[11] to generate an             |    
                                                 interrupt on the RSL.                              |
 <12>    M1_UP_B0   R/W    0x0         1         Enables SLI_INT_SUM[12] to generate an             |    
                                                 interrupt on the RSL.                              |
 <13>    M1_UP_WI   R/W    0x0         1         Enables SLI_INT_SUM[13] to generate an             |    
                                                 interrupt on the RSL.                              |
 <14>    M1_UN_B0   R/W    0x0         1         Enables SLI_INT_SUM[14] to generate an             |    
                                                 interrupt on the RSL.                              |
 <15>    M1_UN_WI  R/W     0x0         1         Enables SLI_INT_SUM[15] to generate an             |    
                                                 interrupt on the RSL.                              |
 <16>    MIO_INT0  R/W     0x0         0         Enables SLI_INT_SUM[16] to generate an             |    
                                                 interrupt on the RSL.                              |
                                                 THIS SHOULD NEVER BE SET                           |
 <17>    MIO_INT1  R/W     0x0         0         Enables SLI_INT_SUM[17] to generate an             |    
                                                 interrupt on the RSL.                              |
                                                 THIS SHOULD NEVER BE SET                           |
 <18>    NS        R/W     0x0         0         Reserved	 				    |    
 <19>    NS        R/W     0x0         0         Reserved	 				    |    
 <31:20> NS        R/W     0x0         0         Reserved	 				    |    
 <33:32> DMAFI     R/W     0x0         0         DMA set Forced Interrupts                          |    
 <35:34> DCNT      R/W     0x0         0         DMA Count Interrupts				    |    
 <37:36> DTIME     R/W     0x0         0         DMA Timer Interrupts				    |    
 <47:38> NS        R/W     0x0         0         Reserved	 				    |    
 <48>    PIDBOF    R/W     0x0         0         Packet Instruction Doorbell Count Overflow.	    |    
 <49>    PSLDBOF   R/W     0x0         0         Packet Scatterlist Doorbell Count Overflow.	    |    
 <50>    POUT_ERR  R/W     0x0         0         Packet Out Interrupt, Error From PKO.		    |    
 <51>    PIN_BP    R/W     0x0         0         Packet Input Count exceeded WMARK.		    |    
 <52>    PGL_ERR   R/W     0x0         0         Read Error during gather list fetch.		    |    
 <53>    PDI_ERR   R/W     0x0         0         Read Error during packet data fetch.		    |    
 <54>    POP_ERR   R/W     0x0         0         Read Error during packet scatter pointer fetch.    |    
 <55>    PINS_ERR  R/W     0x0         0         Read Error during packet instruction fetch.	    |    
 <56>    SPRT0_ERR R/W     0x0         0         Error Response received on SLI port 0.        	    |    
 <57>    SPRT1_ERR R/W     0x0         0         Error Response received on SLI port 1.        	    |    
 <59:58> NS        R/W     0x0         0         Reserved for SLI port expansion                    |    
 <60>    ILL_PAD   R/W     0x0         0         Illegal packet csr address.             	    |    
 <63:61> NS        R/W     0x0         0         Reserved                                           |    
----------------------------------------------------------------------------------------------------
===


 *
 *                  SLI_MSI_W1C_ENB0 = SLI MSI Write 1 To Clear Enable0
 *
 * Used to clear bits in SLI_MSI_ENB0.
 *

     ==============================================================
     SLI_MSI_W1C_ENB0 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  CLR      R/W      0x0         0x0       A write of '1' to a vector will clear the          |   
                                                 cooresponding bit in SLI_MSI_ENB0.                |
                                                 A read to this address will return 0.              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_MSI_W1C_ENB1 = SLI MSI Write 1 To Clear Enable1
 *
 * Used to clear bits in SLI_MSI_ENB1.
 *

     ==============================================================
     SLI_MSI_W1C_ENB1 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  CLR      R/W      0x0         0x0       A write of '1' to a vector will clear the          |   
                                                 cooresponding bit in SLI_MSI_ENB1.                |
                                                 A read to this address will return 0.              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_MSI_W1C_ENB2 = SLI MSI Write 1 To Clear Enable2
 *
 * Used to clear bits in SLI_MSI_ENB2.
 *

     ==============================================================
     SLI_MSI_W1C_ENB2 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  CLR      R/W      0x0         0x0       A write of '1' to a vector will clear the          |   
                                                 cooresponding bit in SLI_MSI_ENB2.                |
                                                 A read to this address will return 0.              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_MSI_W1C_ENB3 = SLI MSI Write 1 To Clear Enable3
 *
 * Used to clear bits in SLI_MSI_ENB3.
 *

     ==============================================================
     SLI_MSI_W1C_ENB3 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  CLR      R/W      0x0         0x0       A write of '1' to a vector will clear the          |   
                                                 cooresponding bit in SLI_MSI_ENB3.                |
                                                 A read to this address will return 0.              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_MSI_W1S_ENB0 = SLI MSI Write 1 To Set Enable0
 *
 * Used to set bits in SLI_MSI_ENB0.
 *

     ==============================================================
     SLI_MSI_W1S_ENB0 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  SET      R/W      0x0         0x0       A write of '1' to a vector will set the            |   
                                                 cooresponding bit in SLI_MSI_ENB0.                |
                                                 A read to this address will return 0.              |
----------------------------------------------------------------------------------------------------
===
 *
 *                  SLI_MSI_W1S_ENB0 = SLI MSI Write 1 To Set Enable1
 *
 * Used to set bits in SLI_MSI_ENB1.
 *

     ==============================================================
     SLI_MSI_W1S_ENB1 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  SET      R/W      0x0         0x0       A write of '1' to a vector will set the            |   
                                                 cooresponding bit in SLI_MSI_ENB1.                |
                                                 A read to this address will return 0.              |
----------------------------------------------------------------------------------------------------
===
 *
 *                  SLI_MSI_W1S_ENB2 = SLI MSI Write 1 To Set Enable2
 *
 * Used to set bits in SLI_MSI_ENB2.
 *

     ==============================================================
     SLI_MSI_W1S_ENB2 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  SET      R/W      0x0         0x0       A write of '1' to a vector will set the            |   
                                                 cooresponding bit in SLI_MSI_ENB2.                |
                                                 A read to this address will return 0.              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_MSI_W1S_ENB3 = SLI MSI Write 1 To Set Enable3
 *
 * Used to set bits in SLI_MSI_ENB3.
 *

     ==============================================================
     SLI_MSI_W1S_ENB3 Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  SET      R/W      0x0         0x0       A write of '1' to a vector will set the            |   
                                                 cooresponding bit in SLI_MSI_ENB3.                |
                                                 A read to this address will return 0.              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_MAC_CREDIT_CNT = SLI MAC Credit Count
 *
 * Contains the number of credits for the MAC port FIFOs used by the SLI. This value needs to be set BEFORE S2M traffic
 * flow starts. A write to this register will cause the credit counts in the SLI for the MAC ports to be reset to the value
 * in this register.
 *

     ==============================================================
     SLI_MAC_CREDIT_CNT Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <7:0>   P0_PCNT  R/W      0x80        0x80      Port0 P-TLP FIFO Credits.                          |   
                                                 Legal values are 0x25 to 0x80.                     |
 <15:8>  P0_NCNT  R/W      0x10        0x10      Port0 N-TLP FIFO Credits.                          |   
                                                 Legal values are 0x5 to 0x10.                      |
 <23:16> P0_CCNT  R/W      0x80        0x80      Port0 C-TLP FIFO Credits.                          |   
                                                 Legal values are 0x25 to 0x80.                     |
 <31:24> P1_PCNT  R/W      0x80        0x80      Port1 P-TLP FIFO Credits.                          |   
                                                 Legal values are 0x25 to 0x80.                     |
 <39:32> P1_NCNT  R/W      0x10        0x10      Port1 N-TLP FIFO Credits.                          |   
                                                 Legal values are 0x5 to 0x10.                      |
 <47:40> P1_CCNT  R/W      0x80        0x80      Port1 C-TLP FIFO Credits.                          |   
                                                 Legal values are 0x25 to 0x80.                     |
 <63:48> NS       RAZ      NS          NS        Reserved                                           |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  SLI_S2M_PORT@_CTL = SLI's S2M Port 0 Control
 *
 * Contains control for access from SLI to a MAC port.
 * Writes to this register are not ordered with writes/reads to the MAC Memory space.
 * To ensure that a write has completed the user must read the register before
 * making an access(i.e. MAC memory space) that requires the value of this register to be updated.
 *

     ==============================================================
     SLI_S2M_PORT(0..1)_CTL Type=PEXP_NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <2:0>   MRRS     R/W      2           2         Max Read Request Size                              |   
                                                         0 = 128B                                   |
                                                         1 = 256B                                   |
                                                         2 = 512B                                   |
                                                         3 = 1024B                                  |
                                                         4 = 2048B                                  |
                                                         5-7 = Reserved                             |
                                                 This field should not exceed the desired           |
                                                       max read request size. This field is used to |
                                                       determine if an IOBDMA is too large.         |
                                                 For a PCIe MAC, this field should not exceed       |
                                                       PCIE*_CFG030[MRRS].                          |
                                                 For a sRIO MAC, this field should indicate a size  |
                                                       of 256B or smaller.                          |
 <3>     BAR0_D   R/W      0           0         When set '1' disables access from MAC to           |   
						 BAR-0 address offsets: Less Than 0x330,            |
						 0x3CD0, and greater than 0x3D70.                   |
 <4>     WIND_D   R/W      0           0         When set '1' disables access to the Window         |   
                                                 Registers from the MAC-Port.                       |
 <63:5>  NS       RAZ      NS          NS        Reserved					    |   
----------------------------------------------------------------------------------------------------
===

// 0x13DA0 - 0x13DF0 reserved for ports 2 - 7



 *
 *                  SRIO_STATUS_REG = SRIO Status Register
 *
 * General status of the SRIO.
 *

     ==============================================================
     SRIO(0..1)_STATUS_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ      NS          NS        Reserved.                                          |   
 <1>     ACCESS   RO       NS          NS        SRIO and SRIOMAINT Register Access.                |   
                                                 0 - Register Access Disabled.                      |
                                                 1 - Register Access Enabled.                       |
 <0>     SRIO     RO       NS          NS        SRIO Port Enabled.                                 |   
                                                 0 - All SRIO functions disabled.                   |
                                                 1 - All SRIO Operations permitted.                 |
                                                                                                    |
Notes:                                                                                              |
 The SRIO field displays if the port has been configured for SRIO operation.  This register can be  |
 read regardless of whether the SRIO is selected or being reset.  Although some other registers can |
 be accessed while the ACCESS bit is zero (see individual registers for details), the majority of   |
 SRIO registers and all the SRIOMAINT registers can be used only when the ACCESS bit is asserted.   |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_STATUS_REG	sclk	srst_n	                                            |
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  SRIO_BIST_STATUS = SRIO Bist Status
 *
 * Results from BIST runs of SRIO's memories.
 *

     ==============================================================
     SRIO(0..1)_BIST_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:44> NS       RAZ      NS          NS        Reserved.                                          |   
 <43:42> MRAM     RO       0           0         Incoming Message SLI FIFO.                         |   
 <41:40> CRAM     RO       0           0         Incoming Rd/Wr/Response Command FIFO.              |   
 <39:38> BELL     RO       0           0         Incoming Doorbell FIFO.                            |   
 <37:36> OTAG     RO       0           0         Outgoing Tag Data.                                 |   
 <35>    ITAG     RO       0           0         Incoming TAG Data.                                 |   
 <34>    OFREE    RO       0           0         Outgoing Free Pointer RAM (OFIFO)                  |   
 <33:32> RTN      RO       0           0         Outgoing Response Return FIFO.                     |   
 <31:28> OBULK    RO       0           0         Outgoing Bulk Data RAMs (OFIFO)                    |   
 <27:24> OPTRS    RO       0           0         Outgoing Priority Pointer RAMs (OFIFO)             |   
 <23:20> NS       RAZ      NS          NS        Reserved                                           |   
 <19:18> OARB     RO       0           0         Outgoing Priority RAMs (OARB)                      |   
 <17>    ISPF     RO       0           0         Incoming Soft Packet FIFO                          |   
 <16>    OSPF     RO       0           0         Outgoing Soft Packet FIFO                          |   
 <15:14> TXBUF    RO       0           0         Outgoing SRIO MAC Buffer.                          |   
 <13:12> RXBUF    RO       0           0         Incoming SRIO MAC Buffer.                          |   
 <11:7>  IMSG     RO       0           0         Incoming Message RAMs.                             |   
 <6:0>   OMSG     RO       0           0         Outgoing Message RAMs.                             |   
                                                                                                    |
Notes:                                                                                              |
 BIST Results.                                                                                      |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_BIST_STATUS	hclk	hrst_n	                                            |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIO_INT_ENABLE = SRIO Interrupt Enable
 *
 * Allows SRIO to generate interrupts when corresponding enable bit is set.
 *

     ==============================================================
     SRIO(0..1)_INT_ENABLE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:22> NS       RAZ      NS          NS        Reserved.                                          |   
 <21>    F_ERROR  R/W      0x0         1         SRIO Fatal Port Error (MAC reset required)         |   
 <20>    RTRY_ERR R/W      0x0         1         Outbound Message Retry Threshold Exceeded          |   
 <19>    PKO_ERR  R/W      0x0         1         Outbound Message Received PKO Error                |   
 <18>    OMSG_ERR R/W      0x0         1         Outbound Message Invalid Descriptor Error          |   
 <17>    OMSG1    R/W      0x0         1         Controller 1 Outbound Message Complete             |   
 <16>    OMSG0    R/W      0x0         1         Controller 0 Outbound Message Complete             |   
 <15>    LINK_UP  R/W      0x0         1         Serial Link going from Inactive to Active          |   
 <14>    LINK_DWN R/W      0x0         1         Serial Link going from Active to Inactive          |   
 <13>    PHY_ERB  R/W      0x0         1         Physical Layer Error detected in ERB               |   
 <12>    LOG_ERB  R/W      0x0         1         Logical/Transport Layer Error detected in ERB      |   
 <11>    SOFT_RX  R/W      0x0         1         Incoming Packet received by Soft Packet FIFO       |   
 <10>    SOFT_TX  R/W      0x0         1         Outgoing Packet sent by Soft Packet FIFO           |   
 <9>     MCE_RX   R/W      0x0         1         Incoming Multicast Event Symbol                    |   
 <8>     MCE_TX   R/W      0x0         1         Outgoing Multicast Event Transmit Complete         |   
 <7>     WR_DONE  R/W      0x0         0         Outgoing Last Nwrite_R DONE Response Received.     |   
 <6>     SLI_ERR  R/W      0x0         1         Unsupported S2M Transaction Received.              |   
 <5>     DENY_WR  R/W      0x0         1         Incoming Maint_Wr Access to Denied Bar Registers.  |   
 <4>     BAR_ERR  R/W      0x0         1         Incoming Access Crossing/Missing BAR Address       |   
 <3>     MAINT_OP R/W      0x0         1         Internal Maintenance Operation Complete.           |   
 <2>     RXBELL   R/W      0x0         1         One or more Incoming Doorbells Received.           |   
 <1>     BELL_ERR R/W      0x0         1         Outgoing Doorbell Timeout, Retry or Error.         |   
 <0>     TXBELL   R/W      0x0         1         Outgoing Doorbell Complete.                        |   
                                                                                                    |
Notes:                                                                                              |
 This register enables interrupts.                                                                  |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_INT_ENABLE	hclk	hrst_n	                                            |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIO_INT_REG = SRIO Interrupt Register
 *
 * Displays and clears which enabled interrupts have occured
 *

     ==============================================================
     SRIO(0..1)_INT_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:22> NS       RAZ      NS          NS        Reserved.                                          |   
 <21>    F_ERROR  R/W1C    0x0         0         SRIO Fatal Port Error (MAC reset required)         |   
 <20>    RTRY_ERR R/W1C    0x0         0         Outbound Message Retry Threshold Exceeded          |   
                                                 See SRIO(0..1)_INT_INFO3                                |
                                                 When one or more of the segments in an outgoing    |
                                                 message have a RTRY_ERR, SRIO will not set         |
                                                 OMSG* after the message "transfer".                |
 <19>    PKO_ERR  R/W1C    0x0         0         Outbound Message Received PKO Error                |   
 <18>    OMSG_ERR R/W1C    0x0         0         Outbound Message Invalid Descriptor Error          |   
                                                 See SRIO(0..1)_INT_INFO2                                |
 <17>    OMSG1    R/W1C    0x0         0         Controller 1 Outbound Message Complete             |   
 <16>    OMSG0    R/W1C    0x0         0         Controller 0 Outbound Message Complete             |   
 <15>    LINK_UP  R/W1C    0x0         0         Serial Link going from Inactive to Active          |   
 <14>    LINK_DWN R/W1C    0x0         0         Serial Link going from Active to Inactive          |   
 <13>    PHY_ERB  R/W1C    0x0         0         Physical Layer Error detected in ERB               |   
                                                 See SRIOMAINT*_ERB_ATTR_CAPT                       |
 <12>    LOG_ERB  R/W1C    0x0         0         Logical/Transport Layer Error detected in ERB      |   
                                                 See SRIOMAINT(0..1)_ERB_LT_ERR_DET                      |
 <11>    SOFT_RX  R/W1C    0x0         0         Incoming Packet received by Soft Packet FIFO       |   
 <10>    SOFT_TX  R/W1C    0x0         0         Outgoing Packet sent by Soft Packet FIFO           |   
 <9>     MCE_RX   R/W1C    0x0         0         Incoming Multicast Event Symbol                    |   
 <8>     MCE_TX   R/W1C    0x0         0         Outgoing Multicast Event Transmit Complete         |   
 <7>     WR_DONE  R/W1C    0x0         0         Outgoing Last Nwrite_R DONE Response Received.     |   
 <6>     SLI_ERR  R/W1C    0x0         0         Unsupported S2M Transaction Received.              |   
                                                 See SRIO(0..1)_INT_INFO[1:0]                            |
 <5>     DENY_WR  R/W1C    0x0         0         Incoming Maint_Wr Access to Denied Bar Registers.  |   
 <4>     BAR_ERR  R/W1C    0x0         0         Incoming Access Crossing/Missing BAR Address       |   
 <3>     MAINT_OP R/W1C    0x0         0         Internal Maintenance Operation Complete.           |   
                                                 See SRIO(0..1)_MAINT_OP and SRIO(0..1)_MAINT_RD_DATA         |
 <2>     RXBELL   RO       0x0         0         One or more Incoming Doorbells Received.           |   
                                                 Read SRIO(0..1)_RX_BELL to empty FIFO                   |
 <1>     BELL_ERR R/W1C    0x0         0         Outgoing Doorbell Timeout, Retry or Error.         |   
                                                 See SRIO(0..1)_TX_BELL_INFO                             |
 <0>     TXBELL   R/W1C    0x0         0         Outgoing Doorbell Complete.                        |   
                                                 TXBELL will not be asserted if a Timeout, Retry or |
                                                 Error occurs.                                      |
                                                                                                    |
Notes:                                                                                              |
 This register provides interrupt status.  Like most SRIO CSRs, this register can only              |
 be read/written when the corresponding SRIO is both present and not in reset.                      |
 Any set bits written to this register clear the                                                    | 
 corresponding interrupt.  The RXBELL interrupt is cleared by reading all the entries in the        |
 incoming Doorbell FIFO.  The LOG_ERB interrupt must be cleared before writing zeroes               |
 to clear the bits in the SRIOMAINT*_ERB_LT_ERR_DET register.  Otherwise a new interrupt may be     |
 lost. The PHY_ERB interrupt must be cleared before writing a zero to                               |
 SRIOMAINT*_ERB_ATTR_CAPT[VALID]. Otherwise, a new interrupt may be lost.  OMSG_ERR is set when an  |
 invalid outbound message descriptor is received.  The descriptor is deemed to be invalid if the    |
 SSIZE field is set to a reserved value, the SSIZE field combined with the packet length would      |
 result in more than 16 message segments, or the packet only contains a descriptor (no data).       |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_INT_REG	hclk	hrst_n	                                                    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIO_INT_INFO0 = SRIO Interrupt Information
 *
 * The SRIO Interrupt Information
 *

     ==============================================================
     SRIO(0..1)_INT_INFO0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:60> CMD      RO       0x0         NS        Command                                            |   
                                                  0 = Load, Outgoing Read Request                   |
                                                  4 = Store, Outgoing Write Request                 |
                                                  8 = Response, Outgoing Read Response              |
                                                  All Others are reserved and generate errors       | 
 <59:56> TYPE     RO       0x0         NS        Command Type                                       |   
                                                  Load/Store SRIO_S2M_TYPE used                     |
                                                  Response (Reserved)                               |
 <55:48> TAG      RO       0x0         NS        Internal Transaction Number                        |   
 <47:42> NS       RO       NS          NS        Reserved.                                          |   
 <41:32> LENGTH   RO       0x0         NS        Data Length in 64-bit Words (Load/Store Only)      |   
 <31:29> STATUS   RO       0x0         NS        Response Status                                    |   
                                                  0 = Success                                       |
                                                  1 = Error                                         |
                                                  All others reserved                               |
 <28:16> NS       RO       NS          NS        Reserved.                                          |   
 <15:8>  BE0      RO       0x0         NS        First 64-bit Word Byte Enables (Load/Store Only)   |   
 <7:0>   BE1      RO       0x0         NS        Last 64-bit Word Byte Enables (Load/Store Only)    |   
                                                                                                    |
Notes:                                                                                              |
 This register contains the first header word of the illegal s2m transaction associated with the    |
 SLI_ERR interrupt.  The remaining information is located in SRIO(0..1)_INT_INFO1.   This register is    |
 only updated when the SLI_ERR is initially detected.  Once the interrupt is cleared then           |
 additional information can be captured.                                                            |
 Common Errors Include:                                                                             |
  1.  Load/Stores with Length over 32                                                               |
  2.  Load/Stores that translate to Maintenance Ops with a length over 8                            |
  3.  Load Ops that translate to Atomic Ops with other than 1, 2 and 4 byte accesses                |
  4.  Load/Store Ops with a Length 0                                                                |
  5.  Unexpected Responses                                                                          |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_INT_REG	hclk	hrst_n	                                                    |
----------------------------------------------------------------------------------------------------
===


 *
 *                  SRIO_INT_INFO1 = SRIO Interrupt Information
 *
 * The SRIO Interrupt Information
 *

     ==============================================================
     SRIO(0..1)_INT_INFO1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:0>  INFO1    RO       0x0         0         Address (Load/Store) or First 64-bit Word of       |   
                                                 Response Data Associated with Interrupt            |
                                                                                                    |
Notes:                                                                                              |
 This register contains the second header word of the illegal s2m transaction associated with the   |
 SLI_ERR interrupt.  The remaining information is located in SRIO(0..1)_INT_INFO0.   This register is    |
 only updated when the SLI_ERR is initially detected.  Once the interrupt is cleared then           |
 additional information can be captured.                                                            |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_INT_REG	hclk	hrst_n	                                                    |
----------------------------------------------------------------------------------------------------
===


 *
 *                  SRIO_INT_INFO2 = SRIO Interrupt Information
 *
 * The SRIO Interrupt Information
 *

     ==============================================================
     SRIO(0..1)_INT_INFO2 Type=RSL
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:62> PRIO     RO        0          NS        PRIO field of outbound message descriptor          |   
                                                  associated with the OMSG_ERR interrupt            |
 <61:61> TT       RO        0          NS        TT field of outbound message descriptor            |   
                                                  associated with the OMSG_ERR interrupt            |
 <60:60> SIS      RO        0          NS        SIS field of outbound message descriptor           |   
                                                  associated with the OMSG_ERR interrupt            |
 <59:56> SSIZE    RO        0          NS        SSIZE field of outbound message descriptor         |   
                                                  associated with the OMSG_ERR interrupt            |
 <55:40> DID      RO        0          NS        DID field of outbound message descriptor           |   
                                                  associated with the OMSG_ERR interrupt            |
 <39:36> XMBOX    RO        0          NS        XMBOX field of outbound message descriptor         |   
                                                  associated with the OMSG_ERR interrupt            |
 <35:34> MBOX     RO        0          NS        MBOX field of outbound message descriptor          |   
                                                  associated with the OMSG_ERR interrupt            |
 <33:32> LETTER   RO        0          NS        LETTER field of outbound message descriptor        |   
                                                  associated with the OMSG_ERR interrupt            |
 <31:2>  RSRVD    RO        0          NS        RSRVD field of outbound message descriptor         |   
                                                  associated with the OMSG_ERR interrupt            |
 <1:1>   LNS      RO        0          NS        LNS field of outbound message descriptor           |   
                                                  associated with the OMSG_ERR interrupt            |
 <0:0>   INT      RO        0          NS        INT field of outbound message descriptor           |   
                                                  associated with the OMSG_ERR interrupt            |
                                                                                                    |
Notes:                                                                                              |
 This register contains the invalid outbound message descriptor associated with the OMSG_ERR        |
 interrupt.  This register is only updated when the OMSG_ERR is initially detected.  Once the       |
 interrupt is cleared then additional information can be captured.                                  |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_INT_REG	hclk	hrst_n	                                                    |
----------------------------------------------------------------------------------------------------
===


 *
 *                  SRIO_INT_INFO3 = SRIO Interrupt Information
 *
 * The SRIO Interrupt Information
 *

     ==============================================================
     SRIO(0..1)_INT_INFO3 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:62> PRIO     RO        0          NS        Priority of received retry response message        |   
 <61:60> TT       RO        0          NS        TT of received retry response message              |   
 <59:56> TYPE     RO        0          NS        Type of received retry response message            |   
                                                 (should be 13)                                     |
 <55:8>  OTHER    RO        0          NS        Other fields of received retry response message    |   
                                                 If TT==0 (8-bit ID's)                              |
                                                  OTHER<47:40> => destination ID                    |
                                                  OTHER<39:32> => source ID                         |
                                                  OTHER<31:28> => transaction (should be 1 - msg)   |
                                                  OTHER<27:24> => status (should be 3 - retry)      |
                                                  OTHER<23:22> => letter                            |
                                                  OTHER<21:20> => mbox                              |
                                                  OTHER<19:16> => msgseg                            |
                                                  OTHER<15:0>  => unused                            |
                                                 If TT==1 (16-bit ID's)                             |
                                                  OTHER<47:32> => destination ID                    |
                                                  OTHER<31:16> => source ID                         |
                                                  OTHER<15:12> => transaction (should be 1 - msg)   |
                                                  OTHER<11:8>  => status (should be 3 - retry)      |
                                                  OTHER<7:6>   => letter                            |
                                                  OTHER<5:4>   => mbox                              |
                                                  OTHER<3:0>   => msgseg                            |
 <7:0>   UNUSED   RO        NS         NS        Unused                                             |   
                                                                                                    |
Notes:                                                                                              |
 This register contains the retry response associated with the RTRY_ERR interrupt.  This register   |
 is only updated when the RTRY_ERR is initially detected.  Once the interrupt is cleared then       |
 additional information can be captured.                                                            |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_INT_REG	hclk	hrst_n	                                                    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIO_ACC_CTRL = SRIO Access Control
 *
 * General access control of the incoming BAR registers.
 *

     ==============================================================
     SRIO(0..1)_ACC_CTRL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:3>  NS        RAZ      NS          NS       Reserved.                                          |   
 <2>     DENY_BAR2 R/W      0           0        Deny SRIO Write Access to BAR2 Registers           |   
 <1>     DENY_BAR1 R/W      0           0        Deny SRIO Write Access to BAR1 Registers           |   
 <0>     DENY_BAR0 R/W      0           0        Deny SRIO Write Access to BAR0 Registers           |   
                                                                                                    |
Notes:                                                                                              |
 This register controls write access to the BAR registers via SRIO Maintenance Operations.  At      |
 powerup the BAR registers can be accessed via RSL and Maintenance Operations.  If the DENY_BAR*    |
 bits are set then Maintenance Writes to the corresponding BAR registers are ignored.  This         |
 register does not effect read operations.                                                          |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_ACC_CTRL	hclk	hrst_n	                                                    |
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  SRIO_TLP_CREDITS = SRIO TLP Credits
 *
 * Specifies the number of credits the SRIO can use for incoming Commands and Messages.
 *

     ==============================================================
     SRIO(0..1)_TLP_CREDITS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:28> NS       RAZ      NS          NS        Reserved.		                            |   
 <27:24> MBOX     R/W      8           8         Credits for Mailbox Data used in M2S.              |   
                                                 Legal values are 0x2 to 0x8.                       |
 <23:16> COMP     R/W      128         128       Credits for Read Completions used in M2S.          |   
                                                 Legal values are 0x22 to 0x80.                     |
 <15:13> NS       RAZ      NS          NS        Reserved.		                            |   
 <12:8>  N_POST   R/W      16          16        Credits for Read Requests used in M2S.             |   
                                                 Legal values are 0x4 to 0x10.                      |
 <7:0>   POST     R/W      128         128       Credits for Write Request Postings used in M2S.    |   
                                                 Legal values are 0x22 to 0x80.                     |
Notes:                                                                                              |
 Specifies the number of maximum credits the SRIO can use for incoming Commands and Messages.       |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_TLP_CREDITS	hclk	hrst_n	                                            |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIO_MAINT_OP = SRIO Maintenance Operation
 *
 * Allows access to maintenance registers.
 *

     ==============================================================
     SRIO(0..1)_MAINT_OP Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> WR_DATA  R/W      0           NS        Write Data[31:0].                                  |   
 <31:27> NS       RAZ      NS          NS        Reserved.                                          |   
 <26>    FAIL     RO       0           NS        Maintenance Operation Address Error                |   
 <25>    PENDING  RO       0           NS        Maintenance Operation Pending                      |   
 <24>    OP       R/W      0           NS        Operation. 0=Read, 1=Write                         |   
 <23:0>  ADDR     R/W      0           NS        Address. Addr[1:0] are ignored.                    |   
                                                                                                    |
Notes:                                                                                              |
 This register allows write access to the local SRIOMAINT registers.  A write to this register      |
 posts a read or write operation selected by the OP bit to the local SRIOMAINT register selected by |
 ADDR.  This write also sets the PENDING bit.  The PENDING bit is cleared by hardware when the      |
 operation is complete.  The MAINT_OP Interrupt is also set as the PENDING bit is cleared.  While   |
 this bit is set, additional writes to this register stall the RSL.  The FAIL bit is set with the   |
 clearing of the PENDING bit when an illegal address is selected. WR_DATA is used only during write |
 operations.  Only 32-bit Maintenance Operations are supported.                                     |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_MAINT_OP	hclk	hrst_n	                                                    |
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  SRIO_MAINT_RD_DATA = SRIO Maintenance Read Data
 *
 * Allows read access of maintenance registers.
 *

     ==============================================================
     SRIO(0..1)_MAINT_RD_DATA Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:33> NS       RAZ      NS          NS        Reserved.                                          |   
 <32>    VALID    RO       0           NS        Read Data Valid.                                   |   
 <31:0>  RD_DATA  RO       0           NS        Read Data[31:0].                                   |   
                                                                                                    |
Notes:                                                                                              |
 This register allows read access of the local SRIOMAINT registers.  A write to the SRIO(0..1)_MAINT_OP  |
 register with the OP bit set to zero initiates a read request and clears the VALID bit.  The       |
 resulting read is returned here and the VALID bit is set.  Access to the register will not stall   |
 the RSL but the VALID bit should be read.                                                          |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_MAINT_RD_DATA	hclk	hrst_n	                                            |
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  SRIO_MEM_OP_CTRL = SRIO Memory Operation Control
 *
 * The SRIO Memory Operation Control
 *

     ==============================================================
     SRIO(0..1)_MEM_OP_CTRL Type=RSL
     ==============================================================


----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:10> NS       RAZ      NS          NS        Reserved                                           |   
 <9>     RR_RO    R/W      0x0         0x0       Read Response Relaxed Ordering.  Controls ordering |   
                                                 rules for incoming memory operations               |
                                                  0 = Normal Ordering                               |
                                                  1 = Relaxed Ordering                              |
 <8>     W_RO     R/W      0x0         0x0       Write Relaxed Ordering.  Controls ordering rules   |   
                                                 for incoming memory operations                     |
                                                  0 = Normal Ordering                               |
                                                  1 = Relaxed Ordering                              |
 <7:6>   NS       RAZ      NS          NS        Reserved                                           |   
 <5>     RP1_SID  R/W      0x0         0x0       Sets response priority for incomimg memory ops     |   
                                                 of priority 1 on the secondary ID (0=2, 1=3)       |
 <4:3>   RP0_SID  R/W      0x0         0x0       Sets response priority for incomimg memory ops     |   
                                                 of priority 0 on the secondary ID (0,1=1 2=2, 3=3) |
 <2>     RP1_PID  R/W      0x0         0x0       Sets response priority for incomimg memory ops     |   
                                                 of priority 1 on the primary ID (0=2, 1=3)         |
 <1:0>   RP0_PID  R/W      0x0         0x0       Sets response priority for incomimg memory ops     |   
                                                 of priority 0 on the primary ID (0,1=1 2=2, 3=3)   |
                                                                                                    |
Notes:                                                                                              |
 This register is used to control memory operations.  Bits are provided to override the priority of |
 the outgoing responses to memory operations.  The memory operations with responses include NREAD,  |
 NWRITE_R, ATOMIC_INC, ATOMIC_DEC, ATOMIC_SET and ATOMIC_CLR.                                       |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_MEM_OP_CTRL	hclk	hrst_n	                                            |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIO_TX_CTRL = SRIO Transmit Control
 *
 * The SRIO Transmit Control
 *

     ==============================================================
     SRIO(0..1)_TX_CTRL Type=RSL
     ==============================================================


----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:53> NS       RAZ      NS          NS        Reserved                                           |   
 <52:48> TAG_TH2  R/W      0x1         0x1       Sets threshold for minimum number of OTAGs         |   
                                                 required before a packet of priority 2 requiring a |
                                                 response will be queued for transmission. (Max 16) |
                                                 There generally should be no priority 3 request    |
                                                 packets which require a response/tag, so a TAG_THR |
                                                 value as low as 0 is allowed.                      |
 <47:45> NS       RAZ      NS          NS        Reserved                                           |   
 <44:40> TAG_TH1  R/W      0x2         0x2       Sets threshold for minimum number of OTAGs         |   
                                                 required before a packet of priority 1 requiring a |
                                                 response will be queued for transmission. (Max 16) |
                                                 Generally, TAG_TH1 must be > TAG_TH2 to leave OTAGs|
                                                 for outgoing priority 2 (or 3) requests.           |
 <39:37> NS       RAZ      NS          NS        Reserved                                           |   
 <36:32> TAG_TH0  R/W      0x3         0x3       Sets threshold for minimum number of OTAGs         |   
                                                 required before a packet of priority 0 requiring a |
                                                 response will be queued for transmission. (Max 16) |
                                                 Generally, TAG_TH0 must be > TAG_TH1 to leave OTAGs|
                                                 for outgoing priority 1 or 2 (or 3) requests.      |
 <31:20> NS       RAZ      NS          NS        Reserved                                           |   
 <19:16> TX_TH2   R/W      0x2         0x1       Sets threshold for minimum number of TX buffers    |   
                                                 before a Priority 2 Packet will be queued for      |
                                                 transmission. (Max 8)                              |
                                                 Generally, TX_TH2 must be > 0 to leave space for   |
                                                 outgoing priority 3 packets.                       |
 <15:12> NS       RAZ      NS          NS        Reserved                                           |   
 <11:8>  TX_TH1   R/W      0x4         0x2       Sets threshold for minimum number of TX buffers    |   
                                                 before a Priority 1 Packet will be queued for      |
                                                 transmission. (Max 8)                              |
                                                 Generally, TX_TH1 must be > TX_TH2 to leave space  |
                                                 for outgoing priority 2 or 3 packets.              |
 <7:4>   NS       RAZ      NS          NS        Reserved                                           |   
 <3:0>   TX_TH0   R/W      0x6         0x3       Sets threshold for minimum number of TX buffers    |   
                                                 before a Priority 0 Packet will be queued for      |
                                                 transmission. (Max 8)                              |
                                                 Generally, TX_TH0 must be > TX_TH1 to leave space  |
                                                 for outgoing priority 1 or 2 or 3 packets.         |
                                                                                                    |
Notes:                                                                                              |
 This register is used to control SRIO Outgoing Packet Allocation.  TX_TH[2:0] set the thresholds   |
 to allow each priority traffic to be queued for transmission.  8 TX Buffer are available.  A       |
 threshold greater than 8 stops all traffic on that priority and should be avoided.  TAG_TH[2:0]    |
 set the thresholds to allow priority traffic requiring responses to be queued based on the number  |
 of outgoing tags (TIDs) available.  16 Tags are available.  If a priority is blocked for lack of   |
 tags then all lower priority packets are also blocked irregardless of whether they require tags.   |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_TX_CTRL	hclk	hrst_n	                                                    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIO_TAG_CTRL = SRIO TAG Control
 *
 * The SRIO TAG Control
 *

     ==============================================================
     SRIO(0..1)_TAG_CTRL Type=RSL
     ==============================================================


----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:17> NS       RAZ      NS          NS        Reserved                                           |   
 <16>    O_CLR    R/W      0x0         0x0       Manual OTAG Clear.  This bit manually resets the   |   
                                                 number of OTAGs back to 16 and loses track of any  |
                                                 outgoing packets.  This function is automatically  |
                                                 performed when the SRIO MAC is reset but it may be |
                                                 necessary after a chip reset while the MAC is in   |
                                                 operation.  This bit must be set then cleared to   |
                                                 return to normal operation.  Typically, Outgoing   |
                                                 SRIO packets must be halted 6 seconds prior to     |
                                                 this bit is set to avoid generating duplicate tags |
                                                 and unexpected response errors.                    |
 <15:13> NS       RAZ      NS          NS        Reserved                                           |   
 <12:8>  OTAG     RO       0x10        NS        Number of Available Outbound Tags.  Tags are       |   
                                                 required for all outgoing memory and maintenance   |
                                                 operations that require a response. (Max 16)       |
 <7:5>   NS       RAZ      NS          NS        Reserved                                           |   
 <4:0>   ITAG     RO       0x10        NS        Number of Available Inbound Tags.  Tags are        |   
                                                 required for all incoming memory operations that   |
                                                 require a response. (Max 16)                       |
                                                                                                    |
Notes:                                                                                              |
 This register is used to show the state of the internal transaction tags and provides a manual     |
 reset of the outgoing tags.                                                                        |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_TAG_CTRL	hclk	hrst_n	                                                    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIO_S2M_TYPE[0:15] = SLI to SRIO MAC Operation Type
 *
 * SRIO Operation Type selected by PP or DMA Accesses
 *

     ==============================================================
     SRIO(0..1)_S2M_TYPE(0..15) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:19> NS        RAZ     NS          NS        Reserved.                                          |   
                                                                                                    |
 <18:16> WR_OP     R/W     0           0         sRIO operation for SLI/DPI writes                  |   
                                                                                                    |
                                                 SLI/DPI hardware break MAC memory space writes     |
                                                 that they generate into pieces of maximum size     |
                                                 256B. For NWRITE/NWRITE_R/SWRITE WR_OP variants    |
                                                 below, SRIO will, if necessary to obey sRIO        |
                                                 requirements, automatically break the write into   |
                                                 even smaller writes. The same is not true for      |
                                                 MAINTENANCE writes and port-writes. Additional     |
                                                 SW/usage restrictions are required for these       |
                                                 MAINTENANCE WR_OP's to work correctly. SW must     |
                                                 restrict the alignment and length of DPI pointers, |
                                                 limit the store sizes that the cores issue, and    |
                                                 possibly also set SLI_MEM_ACCESS_SUBID*[NMERGE]    |
                                                 so that all MAC memory space writes with           |
                                                 MAINTENANCE write and port-write WR_OP's can be    |
                                                 serviced in a single sRIO operation.               |
                                                                                                    |
                                                 SRIO always sends the write data (64-bit) words    |
                                                 out in order.                                      |
                                                                                                    |
                                                  WR_OP = 0 = Normal Write (NWRITE)                 |
                                                         SRIO breaks a MAC memory space write into  |
                                                         the minimum number of required sRIO NWRITE |
                                                         operations. This will be 1-5 total NWRITEs,|
                                                         depending on endian-swap, alignment, and   |
                                                         length.                                    |
                                                                                                    |
                                                  WR_OP = 1 = Normal Write w/Response (NWRITE_R)    |
                                                         SRIO breaks a MAC memory space write into  |
                                                         the minimum number of required sRIO        |
                                                         NWRITE_R operations. This will be 1-5 total|
                                                         NWRITE_R's, depending on endian-swap,      |
                                                         alignment, and length.                     |
                                                                                                    |
                                                         SRIO sets SRIO*_INT_REG[WR_DONE] after it  |
                                                         receives the DONE response for the last    |
                                                         NWRITE_R sent.                             |
                                                                                                    |
                                                  WR_OP = 2 = NWRITE, Streaming write (SWRITE),     |
                                                              NWRITE                                |
                                                         SRIO attempts to turn the MAC memory space |
                                                         write into an SWRITE operation. There will |
                                                         be 1-5 total sRIO operations (0-2 NWRITE's |
                                                         followed by 0-1 SWRITE's followed by 0-2   |
                                                         NWRITE's) generated to complete the MAC    |
                                                         memory space write, depending on           |
                                                         endian-swap, alignment, and length.        |
                                                                                                    |
                                                         If the starting address is not 64-bit      |
                                                         aligned, SRIO first creates 1-4 NWRITE's to|
                                                         either align it or complete the write. Then|
                                                         SRIO creates a SWRITE including all aligned|
                                                         64-bit words. (SRIO won't create an SWRITE |
                                                         when there are none.) If store data        |
                                                         remains, SRIO finally creates another 1 or |
                                                         2 NWRITE's.                                |
                                                                                                    |
                                                  WR_OP = 3 = NWRITE, SWRITE, NWRITE_R              |
                                                         SRIO attempts to turn the MAC memory space |
                                                         write into an SWRITE operation followed by |
                                                         a NWRITE_R operation. The last operation   |
                                                         is always NWRITE_R. There will be 1-5      |
                                                         total sRIO operations (0-2 NWRITE's,       |
                                                         followed by 0-1 SWRITE, followed by 1-4    |
                                                         NWRITE_R's) generated to service the MAC   |
                                                         memory space write, depending on           |
                                                         endian-swap, alignment, and length.        |
                                                                                                    |
                                                         If the write is contained in one aligned   |
                                                         64-bit word, SRIO will completely service  |
                                                         the MAC memory space write with 1-4        |
                                                         NWRITE_R's.                                |
                                                                                                    |
                                                         Otherwise, if the write spans multiple     |
                                                         words, SRIO services the write as follows. |
                                                         First, if the start of the write is not    |
                                                         word-aligned, SRIO creates 1 or 2 NWRITE's |
                                                         to align it. Then SRIO creates an SWRITE   |
                                                         that includes all aligned 64-bit words,    |
                                                         leaving data for the final NWRITE_R(s).    |
                                                         (SRIO won't create the SWRITE when there is|
                                                         no data for it.) Then SRIO finally creates |
                                                         1 or 2 NWRITE_R's.                         |
                                                                                                    |
                                                         In any case, SRIO sets                     |
                                                         SRIO*_INT_REG[WR_DONE] after it receives   |
                                                         the DONE response for the last NWRITE_R    |
                                                         sent.                                      |
                                                                                                    |
                                                  WR_OP = 4 = NWRITE, NWRITE_R                      |
                                                         SRIO attempts to turn the MAC memory space |
                                                         write into an NWRITE operation followed by |
                                                         a NWRITE_R operation. The last operation   |
                                                         is always NWRITE_R. There will be 1-5      |
                                                         total sRIO operations (0-3 NWRITE's        |
                                                         followed by 1-4 NWRITE_R's) generated to   |
                                                         service the MAC memory space write,        |
                                                         depending on endian-swap, alignment, and   |
                                                         length.                                    |
                                                                                                    |
                                                         If the write is contained in one aligned   |
                                                         64-bit word, SRIO will completely service  |
                                                         the MAC memory space write with 1-4        |
                                                         NWRITE_R's.                                |
                                                                                                    |
                                                         Otherwise, if the write spans multiple     |
                                                         words, SRIO services the write as follows. |
                                                         First, if the start of the write is not    |
                                                         word-aligned, SRIO creates 1 or 2 NWRITE's |
                                                         to align it. Then SRIO creates an NWRITE   |
                                                         that includes all aligned 64-bit words,    |
                                                         leaving data for the final NWRITE_R(s).    |
                                                         (SRIO won't create this NWRITE when there  |
                                                         is no data for it.) Then SRIO finally      |
                                                         creates 1 or 2 NWRITE_R's.                 |
                                                                                                    |
                                                         In any case, SRIO sets                     |
                                                         SRIO*_INT_REG[WR_DONE] after it receives   |
                                                         the DONE response for the last NWRITE_R    |
                                                         sent.                                      |
                                                                                                    |
                                                  WR_OP = 5 = Reserved                              |
                                                                                                    |
                                                  WR_OP = 6 = Maintenance Write                     |
                                                       - SRIO will create one sRIO MAINTENANCE write|
                                                         operation to service the MAC memory space  |
                                                         write                                      |
                                                       - IAOW_SEL must be zero. (see description    |
                                                         below.)                                    |
                                                       - MDS must be zero. (MDS is MACADD[63:62] -  |
                                                         see IAOW_SEL description below.)           |
                                                       - Hop Cnt is MACADD[31:24]/SRIOAddress[31:24]|
                                                       - MACADD[23:0]/SRIOAddress[23:0] selects     |
                                                         maintenance register (i.e. config_offset)  |
                                                       - sRIODestID[15:0] is MACADD[49:34].         |
                                                         (MACADD[49:42] unused when ID16=0)         |
                                                       - Write size/alignment must obey sRIO rules  |
                                                         (4, 8, 16, 24, 32, 40, 48, 56 and 64 byte  |
                                                         lengths allowed)                           |
                                                                                                    |
                                                  WR_OP = 7 = Maintenance Port Write                |
                                                       - SRIO will create one sRIO MAINTENANCE port |
                                                         write operation to service the MAC memory  |
                                                         space write                                |
                                                       - IAOW_SEL must be zero. (see description    |
                                                         below.)                                    |
                                                       - MDS must be zero. (MDS is MACADD[63:62] -  |
                                                         see IAOW_SEL description below.)           |
                                                       - Hop Cnt is MACADD[31:24]/sRIOAddress[31:24]|
                                                       - MACADD[23:0]/sRIOAddress[23:0] MBZ         |
                                                         (config_offset field reserved by sRIO)     |
                                                       - sRIODestID[15:0] is MACADD[49:34].         |
                                                         (MACADD[49:42] unused when ID16=0)         |
                                                       - Write size/alignment must obey sRIO rules  |
                                                         (4, 8, 16, 24, 32, 40, 48, 56 and 64 byte  |
                                                         lengths allowed)                           |
                                                                                                    |
 <15>    NS        RAZ     NS          NS        Reserved.                                          |   
                                                                                                    |
 <14:12> RD_OP     R/W     0           0         sRIO operation for SLI/DPI reads                   |   
                                                                                                    |
                                                 SLI/DPI hardware and sRIO configuration            |
                                                 restrictions guarantee that SRIO can service any   |
                                                 MAC memory space read that it receives from SLI/DPI|
                                                 with a single NREAD, assuming that RD_OP selects   |
                                                 NREAD. DPI will break a read into multiple MAC     |
                                                 memory space reads to ensure this holds. The same  |
                                                 is not true for the ATOMIC and MAINTENANCE RD_OP   |
                                                 values. Additional SW/usage restrictions are       |
                                                 required for ATOMIC and MAINTENANCE RD_OP to work  |
                                                 correctly. SW must restrict the alignment and      |
                                                 length of DPI pointers and limit the load sizes    |
                                                 that the cores issue such that all MAC memory space|
                                                 reads with ATOMIC and MAINTENANCE RD_OP's can be   |
                                                 serviced in a single sRIO operation.               |
                                                                                                    |
                                                  RD_OP = 0 = Normal Read (NREAD)                   |
                                                       - SRIO will create one sRIO NREAD            |
                                                         operation to service the MAC memory        |
                                                         space read                                 |
                                                       - Read size/alignment must obey sRIO rules   |
                                                         (up to 256 byte lengths). (This requirement|
                                                         is guaranteed by SLI/DPI usage restrictions|
                                                         and configuration.)                        |
                                                                                                    |
                                                  RD_OP = 1 = Reserved                              |
                                                                                                    |
                                                  RD_OP = 2 = Atomic Set                            |
                                                       - SRIO will create one sRIO ATOMIC set       |
                                                         operation to service the MAC memory        |
                                                         space read                                 |
                                                       - Read size/alignment must obey sRIO rules   |
                                                         (1, 2, and 4 byte lengths allowed)         |
                                                                                                    |
                                                  RD_OP = 3 = Atomic Clear                          |
                                                       - SRIO will create one sRIO ATOMIC clr       |
                                                         operation to service the MAC memory        |
                                                         space read                                 |
                                                       - Read size/alignment must obey sRIO rules   |
                                                         (1, 2, and 4 byte lengths allowed)         |
                                                                                                    |
                                                  RD_OP = 4 = Atomic Increment                      |
                                                       - SRIO will create one sRIO ATOMIC inc       |
                                                         operation to service the MAC memory        |
                                                         space read                                 |
                                                       - Read size/alignment must obey sRIO rules   |
                                                         (1, 2, and 4 byte lengths allowed)         |
                                                                                                    |
                                                  RD_OP = 5 = Atomic Decrement                      |
                                                       - SRIO will create one sRIO ATOMIC dec       |
                                                         operation to service the MAC memory        |
                                                         space read                                 |
                                                       - Read size/alignment must obey sRIO rules   |
                                                         (1, 2, and 4 byte lengths allowed)         |
                                                                                                    |
                                                  RD_OP = 6 = Maintenance Read                      |
                                                       - SRIO will create one sRIO MAINTENANCE read |
                                                         operation to service the MAC memory        |
                                                         space read                                 |
                                                       - IAOW_SEL must be zero. (see description    |
                                                         below.)                                    |
                                                       - MDS must be zero. (MDS is MACADD[63:62] -  |
                                                         see IAOW_SEL description below.)           |
                                                       - Hop Cnt is MACADD[31:24]/sRIOAddress[31:24]|
                                                       - MACADD[23:0]/sRIOAddress[23:0] selects     |
                                                         maintenance register (i.e. config_offset)  |
                                                       - sRIODestID[15:0] is MACADD[49:34].         |
                                                         (MACADD[49:42] unused when ID16=0)         |
                                                       - Read size/alignment must obey sRIO rules   |
                                                         (4, 8, 16, 32 and 64 byte lengths allowed) |
                                                                                                    |
                                                  RD_OP = 7 = Reserved                              |
                                                                                                    |
 <11:10> WR_PRIOR  R/W     0           0         Transaction Priority 0-3 used for writes           |   
                                                                                                    |
 <9:8>   RD_PRIOR  R/W     1           1         Transaction Priority 0-3 used for reads/ATOMICs    |   
                                                                                                    |
 <7:6>   NS        RAZ     NS          NS        Reserved.                                          |   
                                                                                                    |
 <5>     SRC_ID    R/W     0           0         Source ID                                          |   
                                                                                                    |
                                                  0 = Use Primary ID as Source ID                   | 
                                                      (SRIOMAINT*_PRI_DEV_ID[ID16 or ID8], depending|
                                                      on SRIO TT ID (i.e. ID16 below))              |
                                                                                                    |
                                                  1 = Use Secondary ID as Source ID                 | 
                                                      (SRIOMAINT*_SEC_DEV_ID[ID16 or ID8], depending|
                                                      on SRIO TT ID (i.e. ID16 below))              |
                                                                                                    |
 <4>     ID16      R/W     0           0         SRIO TT ID 0=8bit, 1=16-bit                        |   
                                                      IAOW_SEL must not be 2 when ID16=1.           |
                                                                                                    |
 <3:2>   NS        RAZ     NS          NS        Reserved.                                          |   
                                                                                                    |
 <1:0>   IAOW_SEL  R/W     0           0         Internal Address Offset Width Select               |   
                                                                                                    |
                                                 IAOW_SEL determines how to convert the             |
                                                 MACADD[63:62,58:51,49:0] recieved from SLI/DPI with|
                                                 read/write into an sRIO address (sRIOAddress[...]) |
                                                 and sRIO destination ID (sRIODestID[...]). The sRIO|
                                                 address width mode (SRIOMAINT_PE_LLC[EX_ADDR]) and |
                                                 ID16, determine the  width of the sRIO address and |
                                                 ID in the outgoing request(s), respectively.       |
                                                                                                    |
                                                 MACADD[61:60] is always unused.                    |
                                                                                                    |
                                                 MACADD[59] is always TYPEIDX[3]                    |
                                                 MACADD[50] is always TYPEIDX[2]                    |
                                                  (TYPEIDX[3:0] selects one of these                |
                                                  SRIO*_S2M_TYPE* table entries.)                   |
                                                                                                    |
                                                 MACADD[17:0] always becomes sRIOAddress[17:0].     |
                                                                                                    |
                                                  IAOW_SEL = 0 = 34-bit Address Offset              |
                                                                                                    |
                                                      Must be used when sRIO link is in 34-bit      |
                                                       address width mode.                          |
                                                      When sRIO is in 50-bit address width mode,    |
                                                       sRIOAddress[49:34]=0 in the outgoing request.|
                                                      When sRIO is in 66-bit address width mode,    |
                                                       sRIOAddress[65:34]=0 in the outgoing request.|
                                                                                                    |
                                                      Usage of the SLI/DPI MAC address when         |
                                                      IAOW_SEL = 0:                                 |
                                                       MACADD[63:62] = Multi-Device Swap (MDS)      |
                                                         MDS value affects MACADD[49:18] usage      |
                                                       MACADD[58:51] => unused                      |
                                                       MACADD[49:18] usage depends on MDS value     |
                                                        MDS = 0                                     |
                                                          MACADD[49:34] => sRIODestID[15:0]         |
                                                            (MACADD[49:42] unused when ID16=0)      |
                                                          MACADD[33:18] => sRIOAddress[33:18]       |
                                                        MDS = 1                                     |
                                                          MACADD[49:42] => sRIODestID[15:8]         |
                                                            (MACADD[49:42] unused when ID16 = 0)    |                       
                                                          MACADD[41:34] => sRIOAddress[33:26]       |
                                                          MACADD[33:26] => sRIODestID[7:0]          |
                                                          MACADD[25:18] => sRIOAddress[25:18]       |
                                                        MDS = 2                                     |
                                                          ID16 must be one.                         |
                                                          MACADD[49:34] => sRIOAddress[33:18]       |
                                                          MACADD[33:18] => sRIODestID[15:0]         |
                                                        MDS = 3 = Reserved                          |
                                                                                                    |
                                                  IAOW_SEL = 1 = 42-bit Address Offset              |
                                                                                                    |
                                                      Must not be used when sRIO link is in 34-bit  |
                                                       address width mode.                          |
                                                      When sRIO is in 50-bit address width mode,    |
                                                       sRIOAddress[49:42]=0 in the outgoing request.|
                                                      When sRIO is in 66-bit address width mode,    |
                                                       sRIOAddress[65:42]=0 in the outgoing request.|
                                                                                                    |
                                                      Usage of the SLI/DPI MAC address when         |
                                                      IAOW_SEL = 1:                                 |
                                                       MACADD[63:62] => Multi-Device Swap (MDS)     |
                                                         MDS value affects MACADD[58:51,49:42,33:18]|
                                                           use                                      |
                                                       MACADD[41:34] => sRIOAddress[41:34]          |
                                                       MACADD[58:51,49:42,33:18] usage depends on   |
                                                       MDS value:                                   |
                                                        MDS = 0                                     |
                                                          MACADD[58:51] => sRIODestID[15:8]         |
                                                          MACADD[49:42] => sRIODestID[7:0]          |
                                                            (MACADD[58:51] unused when ID16=0)      |
                                                          MACADD[33:18] => sRIOAddress[33:18]       |
                                                        MDS = 1                                     |
                                                          MACADD[58:51] => sRIODestID[15:8]         |
                                                            (MACADD[58:51] unused when ID16 = 0)    |                       
                                                          MACADD[49:42] => sRIOAddress[33:26]       |
                                                          MACADD[33:26] => sRIODestID[7:0]          |
                                                          MACADD[25:18] => sRIOAddress[25:18]       |
                                                        MDS = 2                                     |
                                                          ID16 must be one.                         |
                                                          MACADD[58:51] => sRIOAddress[33:26]       |
                                                          MACADD[49:42] => sRIOAddress[25:18]       |
                                                          MACADD[33:18] => sRIODestID[15:0]         |
                                                        MDS = 3 = Reserved                          |
                                                                                                    |
                                                  IAOW_SEL = 2 = 50-bit Address Offset              |
                                                                                                    |
                                                      Must not be used when sRIO link is in 34-bit  |
                                                       address width mode.                          |
                                                      Must not be used when ID16=1.                 |
                                                      When sRIO is in 66-bit address width mode,    |
                                                       sRIOAddress[65:50]=0 in the outgoing request.|
                                                                                                    |
                                                      Usage of the SLI/DPI MAC address when         |
                                                      IAOW_SEL = 2:                                 |
                                                       MACADD[63:62] => Multi-Device Swap (MDS)     |
                                                         MDS value affects MACADD[58:51,33:26] use  |
                                                         MDS value 3 is reserved                    |
                                                       MACADD[49:34] => sRIOAddress[49:34]          |
                                                       MACADD[25:18] => sRIOAddress[25:18]          |
                                                       MACADD[58:51,33:26] usage depends on         |
                                                       MDS value:                                   |
                                                        MDS = 0                                     |
                                                          MACADD[58:51] => sRIODestID[7:0]          |
                                                          MACADD[33:26] => sRIOAddress[33:26]       |
                                                        MDS = 1                                     |
                                                          MACADD[58:51] => sRIOAddress[33:26]       |
                                                          MACADD[33:26] => sRIODestID[7:0]          |
                                                        MDS = 2 = Reserved                          |
                                                        MDS = 3 = Reserved                          |
                                                                                                    |
                                                  IAOW_SEL = 3 = Reserved                           |
                                                                                                    |
Notes:                                                                                              |
 This CSR table specifies how to convert a SLI/DPI MAC read or write into sRIO operations.          |
 Each SLI/DPI read or write access supplies a 64-bit address (MACADD[63:0]), 2-bit ADDRTYPE, and    |
 2-bit endian-swap. This SRIO*_S2M_TYPE* CSR description specifies a table with 16 CSRs. SRIO       |
 selects one of the table entries with TYPEIDX[3:0], which it creates from the SLI/DPI MAC memory   |
 space read or write as follows:                                                                    |
   TYPEIDX[1:0] = ADDRTYPE[1:0] (ADDRTYPE[1] is no-snoop to the PCIe MAC,                           |
                                 ADDRTYPE[0] is relaxed-ordering to the PCIe MAC)                   |
   TYPEIDX[2] = MACADD[50]                                                                          |
   TYPEIDX[3] = MACADD[59]                                                                          |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_S2M_TYPE[0:15]	hclk	hrst_n	                                            |
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  SRIO_ASMBLY_ID = SRIO Assembly ID
 *
 * The Assembly ID register controls the Assembly ID and Vendor
 *

     ==============================================================
     SRIO(0..1)_ASMBLY_ID Type=RSL
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved.                                          |   
 <31:16> ASSY_ID  R/W      0x0         0         Assembly Identifer                                 |   
 <15:0>  ASSY_VEN R/W      0x008C      0         Assembly Vendor Identifer                          |   
                                                                                                    |
Notes:                                                                                              |
 This register specifies the Assembly ID and Vendor visible in SRIOMAINT(0..1)_ASMBLY_ID register.  The  |
 Assembly Vendor ID is typically supplied by the RapidIO Trade Association.  This register is only  |
 reset during COLD boot and may only be modified while SRIO(0..1)_STATUS_REG.ACCESS is zero.             |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_ASMBLY_ID	sclk	srst_cold_n	                                            |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIO_ASMBLY_INFO = SRIO Assembly Information
 *
 * The Assembly Info register controls the Assembly Revision
 *

     ==============================================================
     SRIO(0..1)_ASMBLY_INFO Type=RSL
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved.                                          |   
 <31:16> ASSY_REV R/W      0x0         0         Assembly Revision                                  |   
 <15:0>  NS       RAZ      NS          NS        Reserved.                                          |   
                                                                                                    |
Notes:                                                                                              |
 The Assembly Info register controls the Assembly Revision visible in the ASSY_REV field of the     |
 SRIOMAINT(0..1)_ASMBLY_INFO register.  This register is only reset during COLD boot and may only be     |
 modified while SRIO(0..1)_STATUS_REG.ACCESS is zero.                                                    |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_ASMBLY_INFO	sclk	srst_cold_n	                                    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIO_MCE_TX_CTL = SRIO Multicast Event Transmit Control
 *
 * Multicast Event TX Control
 *

     ==============================================================
     SRIO(0..1)_MCE_TX_CTL Type=RSL
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved.                                          |   
 <0>     MCE      R/W      0x0         0         Multicast Event Transmit.                          |   
                                                                                                    |
Notes:                                                                                              |
 Writes to this register cause the SRIO device to generate a Multicast Event.  Setting the MCE bit  |
 requests the logic to generate the Multicast Event Symbol.  Reading the MCS bit shows the status   |
 of the transmit event.  The hardware will clear the bit when the event has been transmitted and    |
 set the MCS_TX Interrupt.                                                                          |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_MCE_TX_CTL	hclk	hrst_n	                                            |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIO_SEQ = SRIO Sequence Count
 *
 * The SRIO Sequence Count
 *

     ==============================================================
     SRIO(0..1)_SEQ Type=RSL
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved.                                          |   
 <31:0>  SEQ      RO       0x0         0         32-bit Sequence #                                  |   
                                                                                                    |
Notes:                                                                                              |
 This register contains the current value of the sequence counter.  This counter increments every   |
 time a doorbell or the first segment of a message is accepted.                                     |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_SEQ	hclk	hrst_n	                                                    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIO_TX_BELL = SRIO Transmit Doorbell
 *
 * The SRIO Outgoing (TX) Doorbell
 *

     ==============================================================
     SRIO(0..1)_TX_BELL Type=RSL
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved.                                          |   
 <47:32> DATA     R/W      0x0         0         Information field for next doorbell operation      |   
 <31:16> DEST_ID  R/W      0x0         0         Doorbell Destination Device ID[15:0]               |   
 <15:9>  NS       RAZ      NS          NS        Reserved.                                          |   
 <8>     PENDING  RO       0x0         0         Doorbell Transmit in Progress                      |   
 <7:5>   NS       RAZ      NS          NS        Reserved.                                          |   
 <4>     SRC_ID   R/W      0x0         0         Source Device ID 0=Primary, 1=Secondary            |   
 <3>     ID16     R/W      0x0         0         Transaction Type, 0=use ID[7:0], 1=use ID[15:0]    |   
 <2>     NS       RAZ      NS          NS        Reserved.                                          |   
 <1:0>   PRIORITY R/W      0x0         0         Doorbell Priority                                  |   
                                                                                                    |
Notes:                                                                                              |
 This register specifies SRIO Information, Device ID, Transaction Type and Priority of the outgoing |
 Doorbell Transaction.  Writes to this register causes the Doorbell to be issued using these bits.  |
 The write also causes the PENDING bit to be set. The hardware automatically clears bit when the    |
 Doorbell operation has been acknowledged.  A write to this register while the PENDING bit is set   |
 should be avoided as it will stall the RSL until the first Doorbell has completed.                 |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_TX_BELL	hclk	hrst_n	                                                    |
----------------------------------------------------------------------------------------------------
===


 *
 *                  SRIO_TX_BELL_INFO = SRIO Transmit Doorbell Interrupt Information
 *
 * The SRIO Outgoing (TX) Doorbell Interrupt Information
 *

     ==============================================================
     SRIO(0..1)_TX_BELL_INFO Type=RSL
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved.                                          |   
 <47:32> DATA     RO       0x0         0         Information field from last doorbell operation     |   
 <31:16> DEST_ID  RO       0x0         0         Doorbell Destination Device ID[15:0]               |   
 <15:8>  NS       RAZ      NS          NS        Reserved.                                          |   
 <7>     TIMEOUT  RO       0x0         0         Transmit Doorbell Failed with Timeout.             |   
 <6>     ERROR    RO       0x0         0         Transmit Doorbell Destination returned Error.      |   
 <5>     RETRY    RO       0x0         0         Transmit Doorbell Requests a retransmission.       |   
 <4>     SRC_ID   RO       0x0         0         Source Device ID 0=Primary, 1=Secondary            |   
 <3>     ID16     RO       0x0         0         Transaction Type, 0=use ID[7:0], 1=use ID[15:0]    |   
 <2>     NS       RAZ      NS          NS        Reserved.                                          |   
 <1:0>   PRIORITY RO       0x0         0         Doorbell Priority                                  |   
                                                                                                    |
Notes:                                                                                              |
 This register is only updated if the BELL_ERR bit is clear in SRIO(0..1)_INT_REG.  This register        |
 displays SRIO Information, Device ID, Transaction Type and Priority of the Doorbell Transaction    |
 that generated the BELL_ERR Interrupt.  The register includes either a RETRY, ERROR or TIMEOUT     |
 Status.                                                                                            |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_TX_BELL_INFO	hclk	hrst_n	                                            |
----------------------------------------------------------------------------------------------------
===


 *
 *                  SRIO_RX_BELL_SEQ = SRIO Receive Doorbell Sequence Count
 *
 * The SRIO Incoming (RX) Doorbell Sequence Count 
 *

     ==============================================================
     SRIO(0..1)_RX_BELL_SEQ Type=RSL
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:40> NS       RAZ      NS          NS        Reserved.                                          |   
 <39:32> COUNT    RO       0x0         NS        RX Bell FIFO Count                                 |   
                                                 Note:  Count must be > 0 for entry to be valid.    |
 <31:0>  SEQ      RO       0x0         NS        32-bit Sequence # associated with Doorbell Message |   
                                                                                                    |
Notes:                                                                                              |
 This register contains the value of the sequence counter when the doorbell was received and a      |
 shadow copy of the Bell FIFO Count that can be read without emptying the FIFO.  This register must |
 be read prior to SRIO(0..1)_RX_BELL to guarantee that the information corresponds to the correct        |
 doorbell.                                                                                          |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_RX_BELL_SEQ	hclk	hrst_n	                                            |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIO_RX_BELL = SRIO Receive Doorbell
 *
 * The SRIO Incoming (RX) Doorbell
 *

     ==============================================================
     SRIO(0..1)_RX_BELL Type=RSL
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        Reserved.                                          |   
 <47:32> DATA     RO       0x0         0         Information field from received doorbell           |   
 <31:16> SRC_ID   RO       0x0         0         Doorbell Source Device ID[15:0]                    |   
 <15:8>  COUNT    RO       0x0         0         RX Bell FIFO Count                                 |   
                                                 Note:  Count must be > 0 for entry to be valid.    |
 <7:5>   NS       RAZ      NS          NS        Reserved.                                          |   
 <4>     DEST_ID  RO       0x0         0         Destination Device ID 0=Primary, 1=Secondary       |   
 <3>     ID16     RO       0x0         0         Transaction Type, 0=use ID[7:0], 1=use ID[15:0]    |   
 <2>     NS       RAZ      NS          NS        Reserved.                                          |   
 <1:0>   PRIORITY RO       0x0         0         Doorbell Priority                                  |   
                                                                                                    |
Notes:                                                                                              |
 This register contains the SRIO Information, Device ID, Transaction Type and Priority of the       |
 incoming Doorbell Transaction as well as the number of transactions waiting to be read.  Reading   |
 this register causes a Doorbell to be removed from the RX Bell FIFO and the COUNT to be            |
 decremented.  If the COUNT is zero then the FIFO is empty and the other fields should be           |
 considered invalid.  When the FIFO is full an ERROR is automatically issued.  The RXBELL Interrupt |
 can be used to detect posts to this FIFO.                                                          |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_RX_BELL	hclk	hrst_n	                                                    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIO_BELL_RESP_CTRL = SRIO Doorbell Response Control
 *
 * The SRIO Doorbell Response Control Register
 *

     ==============================================================
     SRIO(0..1)_BELL_RESP_CTRL Type=RSL
     ==============================================================


----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6>  NS       RAZ      NS          NS        Reserved                                           |   
 <5>     RP1_SID  R/W      0x0         0x0       Sets response priority for incomimg doorbells      |   
                                                 of priority 1 on the secondary ID (0=2, 1=3)       |
 <4:3>   RP0_SID  R/W      0x0         0x0       Sets response priority for incomimg doorbells      |   
                                                 of priority 0 on the secondary ID (0,1=1 2=2, 3=3) |
 <2>     RP1_PID  R/W      0x0         0x0       Sets response priority for incomimg doorbells      |   
                                                 of priority 1 on the primary ID (0=2, 1=3)         |
 <1:0>   RP0_PID  R/W      0x0         0x0       Sets response priority for incomimg doorbells      |   
                                                 of priority 0 on the primary ID (0,1=1 2=2, 3=3)   |
                                                                                                    |
Notes:                                                                                              |
 This register is used to override the response priority of the outgoing doorbell responses.        |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_BELL_RESP_CTRL	hclk	hrst_n	                                            |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIO_RX_STATUS = SRIO Inbound Credits/Response Status
 *
 * Specifies the current number of credits/responses by SRIO for Inbound Traffic
 *

     ==============================================================
     SRIO(0..1)_RX_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:56> RTN_PR3  RO       0           NS        Number of pending Priority 3 Response Entries.     |   
 <55:48> RTN_PR2  RO       0           NS        Number of pending Priority 2 Response Entries.     |   
 <47:40> RTN_PR1  RO       0           NS        Number of pending Priority 1 Response Entries.     |   
 <39:28> NS       RAZ      NS          NS        Reserved.		                            |   
 <27:24> MBOX     RO       8           NS        Credits for Mailbox Data used in M2S.              |   
 <23:16> COMP     RO       128         NS        Credits for Read Completions used in M2S.          |   
 <15:13> NS       RAZ      NS          NS        Reserved.		                            |   
 <12:8>  N_POST   RO       16          NS        Credits for Read Requests used in M2S.             |   
 <7:0>   POST     RO       128         NS        Credits for Write Request Postings used in M2S.    |   
                                                                                                    |
Notes:                                                                                              |
 Debug Register specifying the number of credits/responses currently in use for Inbound Traffic.    |
 The maximum value for COMP, N_POST and POST is set in SRIO(0..1)_TLP_CREDITS.  When all inbound traffic |
 has stopped the values should eventually return to the maximum values.  The RTN_PR[3:1] entry      |
 counts should eventually return to the reset values.                                               |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_RX_STATUS	hclk	hrst_n	                                                    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIO_TX_STATUS = SRIO Outbound Credits/Ops Status
 *
 * Specifies the current number of credits/ops by SRIO for Outbound Traffic
 *

     ==============================================================
     SRIO(0..1)_TX_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved.		                            |   
 <31:24> S2M_PR3  RO       0           NS        Number of pending S2M Priority 3 Entries.          |   
 <23:16> S2M_PR2  RO       0           NS        Number of pending S2M Priority 2 Entries.          |   
 <15:8>  S2M_PR1  RO       0           NS        Number of pending S2M Priority 1 Entries.          |   
 <7:0>   S2M_PR0  RO       0           NS        Number of pending S2M Priority 0 Entries.          |   
                                                                                                    |
Notes:                                                                                              |
 Debug Register specifying the number of credits/ops currently in use for Outbound Traffic.         |
 When all outbound traffic has stopped the values should eventually return to the reset values.     |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_TX_STATUS	hclk	hrst_n	                                                    |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIO_IP_FEATURE = SRIO IP Feature Select
 *
 * Debug Register used to enable IP Core Features
 *

     ==============================================================
     SRIO(0..1)_IP_FEATURE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> OPS      R/W      0xFCF4      0xFCF4    Reset Value for the OPs fields in both the         |   
                                                 SRIOMAINT(0..1)_SRC_OPS and SRIOMAINT(0..1)_DST_OPS          |
                                                 registers.                                         |
 <31:14> NS       RAZ      NS          NS        Reserved.		                            |   
 <13>    A66      R/W      0x1         0x1       66-bit Address Support.  Value for bit 2 of the    |   
                                                 EX_ADDR field in the SRIOMAINT(0..1)_PE_FEAT register.  |
 <12>    A50      R/W      0x1         0x1       50-bit Address Support.  Value for bit 1 of the    |   
                                                 EX_ADDR field in the SRIOMAINT(0..1)_PE_FEAT register.  |
 <11>    NS       RAZ      NS          NS        Reserved.		                            |   
 <10>    TX_FLOW  R/W      0           0         Reset Value for the TX_FLOW field in the           |   
                                                 SRIOMAINT(0..1)_IR_BUFFER_CONFIG register.              |
 <9:8>   PT_WIDTH R/W      0x2         0x2       Value for the PT_WIDTH field in the                |   
                                                 SRIOMAINT(0..1)_PORT_0_CTL register.                    | 
 <7:4>   TX_POL   R/W      0x0         0         TX Serdes Polarity Lanes 3-0                       |   
                                                  0 = Normal Operation                              |
                                                  1 = Invert, Swap +/- Tx SERDES Pins               |
 <3:0>   RX_POL   R/W      0x0         0         RX Serdes Polarity Lanes 3-0                       |   
                                                  0 = Normal Operation                              |
                                                  1 = Invert, Swap +/- Rx SERDES Pins               |
                                                                                                    |
Notes:                                                                                              |
 This register is used to override powerup values used by the SRIOMAINT Registers and QLM           |
 configuration.  The register is only reset during COLD boot.  It should only be modified only      |
 while SRIO(0..1)_STATUS_REG.ACCESS is zero.                                                             |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_IP_FEATURE	sclk	srst_cold_n                                         |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIO_OMSG_PORT@ = SRIO Outbound Message Port
 *
 * The SRIO Controller @ Outbound Message Port Register
 *

     ==============================================================
     SRIO(0..1)_OMSG_PORT(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved                                           |   
 <31>    ENABLE   R/W      0x0         NS        Controller @ enable                                |   
 <30:2>  NS       RAZ      NS          NS        Reserved                                           |   
 <1:0>   PORT     R/W      0x0         NS        Controller @ PKO port                              |   
                                                                                                    |
Notes:                                                                                              |
 PORT maps the PKO port to SRIO interface # / controller @ as follows:                              |
                                                                                                    |
   00 == PKO port 40                                                                                |
   01 == PKO port 41                                                                                |
   10 == PKO port 42                                                                                |
   11 == PKO port 43                                                                                |
                                                                                                    |
 No two PORT fields among the enabled controllers (ENABLE == 1) may be set to the same value.       |
 The register is only reset during COLD boot.  The register can be accessed/modified regardless of  |
 the value in SRIO(0..1)_STATUS_REG.ACCESS.                                                              |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_OMSG_PORT[0:1]	sclk	srst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIO_OMSG_CTRL@ = SRIO Outbound Message Control
 *
 * The SRIO Controller @ Outbound Message Control Register
 *

     ==============================================================
     SRIO(0..1)_OMSG_CTRL(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    TESTMODE R/W      0x0         0         Controller @ test mode (keep as RSVD in HRM)       |   
 <62:32> NS       RAZ      NS          NS        Reserved                                           |   
 <31:16> RTRY_THR R/W      0x0         NS        Controller @ Retry threshold                       |   
 <15>    RTRY_EN  R/W      0x0         NS        Controller @ Retry threshold enable                |   
 <14:11> NS       RAZ      NS          NS        Reserved                                           |   
 <10>    IDM_TT   R/W      0x1         NS        Controller @ ID match includes TT ID               |   
 <9>     IDM_SIS  R/W      0x1         NS        Controller @ ID match includes SIS                 |   
 <8>     IDM_DID  R/W      0x1         NS        Controller @ ID match includes DID                 |   
 <7:4>   LTTR_SP  R/W      0xf         NS        Controller @ SP allowable letters in dynamic       |   
                                                 letter select mode (LNS)                           |
 <3:0>   LTTR_MP  R/W      0xf         NS        Controller @ MP allowable letters in dynamic       |   
                                                 letter select mode (LNS)                           |
                                                                                                    |
Notes:                                                                                              |
1) If IDM_TT, IDM_SIS, and IDM_DID are all clear, then the "ID match" will always be false.         |
2) LTTR_SP and LTTR_MP must be non-zero at all times, otherwise the message output queue can        |
       get blocked                                                                                  |
3) TESTMODE has no function on controller 1                                                         |
4) When IDM_TT=0, it is possible for an ID match to match an 8-bit DID with a 16-bit DID - SRIO     |
       zero-extends all 8-bit DID's, and the DID comparisons are always 16-bits.                    |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_OMSG_CTRL[0:1]	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIO_OMSG_SP_MR@ = SRIO Outbound Message SP Message Restriction
 *
 * The SRIO Controller @ Outbound Message SP Message Restriction Register
 *

     ==============================================================
     SRIO(0..1)_OMSG_SP_MR(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        Reserved                                           |   
 <15>    XMBOX_SP R/W      0x0         NS        Controller @ SP enable XMBOX SP                    |   
                                                 When set, the SP candidate message can only        |
                                                 match siloed SP segments with the same 4-bit xmbox |
                                                 value as the candidate. When clear, this SP-SP     |
                                                 match can occur with any xmbox values.             |
                                                 When XMBOX_SP is set, MBOX_SP will commonly be set.|
                                                 Not used by the hardware when ALL_SP is set.       |
 <14>    CTLR_SP  R/W      0x0         NS        Controller @ SP enable controller SP               |   
                                                 When set, the SP candidate message can             |
                                                 only match siloed SP segments that were created    |
                                                 by the same controller. When clear, this SP-SP     |
                                                 match can also occur when the segments were        |
                                                 created by the other controller.                   |
                                                 Not used by the hardware when ALL_SP is set.       |
 <13>    CTLR_FMP R/W      0x0         NS        Controller @ SP enable controller FIRSTMP          |   
                                                 When set, the SP candidate message can             |
                                                 only match siloed FMP segments that were created   |
                                                 by the same controller. When clear, this SP-FMP    |
                                                 match can also occur when the segments were        |
                                                 created by the other controller.                   |
                                                 Not used by the hardware when ALL_FMP is set.      |
 <12>    CTLR_NMP R/W      0x0         NS        Controller @ SP enable controller NFIRSTMP         |   
                                                 When set, the SP candidate message can             |
                                                 only match siloed NMP segments that were created   |
                                                 by the same controller. When clear, this SP-NMP    |
                                                 match can also occur when the segments were        |
                                                 created by the other controller.                   |
                                                 Not used by the hardware when ALL_NMP is set.      |
 <11>    ID_SP    R/W      0x0         NS        Controller @ SP enable ID SP                       |   
                                                 When set, the SP candidate message can             |
                                                 only match siloed SP segments that "ID match" the  |
                                                 candidate. When clear, this SP-SP match can occur  |
                                                 with any ID values.                                |
                                                 Not used by the hardware when ALL_SP is set.       |
 <10>    ID_FMP   R/W      0x0         NS        Controller @ SP enable ID FIRSTMP                  |   
                                                 When set, the SP candidate message can             |
                                                 only match siloed FMP segments that "ID match" the |
                                                 candidate. When clear, this SP-FMP match can occur |
                                                 with any ID values.                                |
                                                 Not used by the hardware when ALL_FMP is set.      |
 <9>     ID_NMP   R/W      0x0         NS        Controller @ SP enable ID NFIRSTMP                 |   
                                                 When set, the SP candidate message can             |
                                                 only match siloed NMP segments that "ID match" the |
                                                 candidate. When clear, this SP-NMP match can occur |
                                                 with any ID values.                                |
                                                 Not used by the hardware when ALL_NMP is set.      |
 <8>     ID_PSD   R/W      0x0         NS        Controller @ SP enable ID PSEUDO                   |   
                                                 When set, the SP candidate message can             |
                                                 only match the silo pseudo (for the other          |
                                                 controller) when it is an "ID match". When clear,  |
                                                 this SP-PSD match can occur with any ID values.    |
                                                 Not used by the hardware when ALL_PSD is set.      |
 <7>     MBOX_SP  R/W      0x0         NS        Controller @ SP enable MBOX SP                     |   
                                                 When set, the SP candidate message can only        |
                                                 match siloed SP segments with the same 2-bit mbox  |
                                                 value as the candidate. When clear, this SP-SP     |
                                                 match can occur with any mbox values.              |
                                                 Not used by the hardware when ALL_SP is set.       |
 <6>     MBOX_FMP R/W      0x0         NS        Controller @ SP enable MBOX FIRSTMP                |   
                                                 When set, the SP candidate message can only        |
                                                 match siloed FMP segments with the same 2-bit mbox |
                                                 value as the candidate. When clear, this SP-FMP    |
                                                 match can occur with any mbox values.              |
                                                 Not used by the hardware when ALL_FMP is set.      |
 <5>     MBOX_NMP R/W      0x0         NS        Controller @ SP enable MBOX NFIRSTMP               |   
                                                 When set, the SP candidate message can only        |
                                                 match siloed NMP segments with the same 2-bit mbox |
                                                 value as the candidate. When clear, this SP-NMP    |
                                                 match can occur with any mbox values.              |
                                                 Not used by the hardware when ALL_NMP is set.      |
 <4>     MBOX_PSD R/W      0x0         NS        Controller @ SP enable MBOX PSEUDO                 |   
                                                 When set, the SP candidate message can only        |
                                                 match the silo pseudo (for the other controller)   |
                                                 if the pseudo has the same 2-bit mbox value as the |
                                                 candidate. When clear, this SP-PSD match can occur |
                                                 with any mbox values.                              |
                                                 Not used by the hardware when ALL_PSD is set.      |
 <3>     ALL_SP   R/W      0x0         NS        Controller @ SP enable all SP                      |   
                                                 When set, no SP candidate messages ever            |
                                                 match siloed SP segments, and XMBOX_SP, ID_SP,     |
                                                 and MBOX_SP are not used. When clear, SP-SP        |
                                                 matches can occur.                                 |
 <2>     ALL_FMP  R/W      0x0         NS        Controller @ SP enable all FIRSTMP                 |   
                                                 When set, no SP candidate messages ever            |
                                                 match siloed FMP segments and ID_FMP and MBOX_FMP  |
                                                 are not used. When clear, SP-FMP matches can       |
                                                 occur.                                             |
 <1>     ALL_NMP  R/W      0x0         NS        Controller @ SP enable all NFIRSTMP                |   
                                                 When set, no SP candidate messages ever            |
                                                 match siloed NMP segments and ID_NMP and MBOX_NMP  |
                                                 are not used. When clear, SP-NMP matches can       |
                                                 occur.                                             |
 <0>     ALL_PSD  R/W      0x0         NS        Controller @ SP enable all PSEUDO                  |   
                                                 When set, no SP candidate messages ever            |
                                                 match the silo pseudo (for the other controller)   |
                                                 and ID_PSD and MBOX_PSD are not used. When clear,  |
                                                 SP-PSD matches can occur.                          |
Notes:                                                                                              |
This CSR controls when SP candidate message segments (from the two different controllers) can enter |
the message segment silo to be sent out. A segment remains in the silo until after is has           |
been transmitted and either acknowledged or errored out.                                            |
                                                                                                    |
Candidates and silo entries are one of 4 types:                                                     |
 SP  - a single-segment message                                                                     |
 FMP - the first segment of a multi-segment message                                                 |
 NMP - the other segments in a multi-segment message                                                |
 PSD - the silo psuedo-entry that is valid only while a controller is in the middle of pushing      |
       a multi-segment message into the silo and can match against segments generated by            |
       the other controller                                                                         |
                                                                                                    |
When a candidate "matches" against a silo entry or pseudo entry, it cannot enter the silo.          |
By default (i.e. zeroes in this CSR), the SP candidate matches against all entries in the           |
silo. When fields in this CSR are set, SP candidate segments will match fewer silo entries and      |
can enter the silo more freely, probably providing better performance.                              |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_OMSG_SP_MR[0:1]	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIO_OMSG_FMP_MR@ = SRIO Outbound Message FIRSTMP Message Restriction
 *
 * The SRIO Controller @ Outbound Message FIRSTMP Message Restriction Register
 *

     ==============================================================
     SRIO(0..1)_OMSG_FMP_MR(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:15> NS       RAZ      NS          NS        Reserved                                           |   
 <14>    CTLR_SP  R/W      0x0         NS        Controller @ FIRSTMP enable controller SP          |   
                                                 When set, the FMP candidate message segment can    |
                                                 only match siloed SP segments that were created    |
                                                 by the same controller. When clear, this FMP-SP    |
                                                 match can also occur when the segments were        |
                                                 created by the other controller.                   |
                                                 Not used by the hardware when ALL_SP is set.       |
 <13>    CTLR_FMP R/W      0x0         NS        Controller @ FIRSTMP enable controller FIRSTMP     |   
                                                 When set, the FMP candidate message segment can    |
                                                 only match siloed FMP segments that were created   |
                                                 by the same controller. When clear, this FMP-FMP   |
                                                 match can also occur when the segments were        |
                                                 created by the other controller.                   |
                                                 Not used by the hardware when ALL_FMP is set.      |
 <12>    CTLR_NMP R/W      0x0         NS        Controller @ FIRSTMP enable controller NFIRSTMP    |   
                                                 When set, the FMP candidate message segment can    |
                                                 only match siloed NMP segments that were created   |
                                                 by the same controller. When clear, this FMP-NMP   |
                                                 match can also occur when the segments were        |
                                                 created by the other controller.                   |
                                                 Not used by the hardware when ALL_NMP is set.      |
 <11>    ID_SP    R/W      0x0         NS        Controller @ FIRSTMP enable ID SP                  |   
                                                 When set, the FMP candidate message segment can    |
                                                 only match siloed SP segments that "ID match" the  |
                                                 candidate. When clear, this FMP-SP match can occur |
                                                 with any ID values.                                |
                                                 Not used by the hardware when ALL_SP is set.       |
 <10>    ID_FMP   R/W      0x0         NS        Controller @ FIRSTMP enable ID FIRSTMP             |   
                                                 When set, the FMP candidate message segment can    |
                                                 only match siloed FMP segments that "ID match" the |
                                                 candidate. When clear, this FMP-FMP match can occur|
                                                 with any ID values.                                |
                                                 Not used by the hardware when ALL_FMP is set.      |
 <9>     ID_NMP   R/W      0x0         NS        Controller @ FIRSTMP enable ID NFIRSTMP            |   
                                                 When set, the FMP candidate message segment can    |
                                                 only match siloed NMP segments that "ID match" the |
                                                 candidate. When clear, this FMP-NMP match can occur|
                                                 with any ID values.                                |
                                                 Not used by the hardware when ALL_NMP is set.      |
 <8>     ID_PSD   R/W      0x0         NS        Controller @ FIRSTMP enable ID PSEUDO              |   
                                                 When set, the FMP candidate message segment can    |
                                                 only match the silo pseudo (for the other          |
                                                 controller) when it is an "ID match". When clear,  |
                                                 this FMP-PSD match can occur with any ID values.   |
                                                 Not used by the hardware when ALL_PSD is set.      |
 <7>     MBOX_SP  R/W      0x0         NS        Controller @ FIRSTMP enable MBOX SP                |   
                                                 When set, the FMP candidate message segment can    |
                                                 only match siloed SP segments with the same 2-bit  |
                                                 mbox value as the candidate. When clear, this      |
                                                 FMP-SP match can occur with any mbox values.       |
                                                 Not used by the hardware when ALL_SP is set.       |
 <6>     MBOX_FMP R/W      0x0         NS        Controller @ FIRSTMP enable MBOX FIRSTMP           |   
                                                 When set, the FMP candidate message segment can    |
                                                 only match siloed FMP segments with the same 2-bit |
                                                 mbox value as the candidate. When clear, this      |
                                                 FMP-FMP match can occur with any mbox values.      |
                                                 Not used by the hardware when ALL_FMP is set.      |
 <5>     MBOX_NMP R/W      0x0         NS        Controller @ FIRSTMP enable MBOX NFIRSTMP          |   
                                                 When set, the FMP candidate message segment can    |
                                                 only match siloed NMP segments with the same 2-bit |
                                                 mbox value as the candidate. When clear, this      |
                                                 FMP-NMP match can occur with any mbox values.      |
                                                 Not used by the hardware when ALL_NMP is set.      |
 <4>     MBOX_PSD R/W      0x0         NS        Controller @ FIRSTMP enable MBOX PSEUDO            |   
                                                 When set, the FMP candidate message segment can    |
                                                 only match the silo pseudo (for the other          |
                                                 controller) if the pseudo has the same 2-bit mbox  |
                                                 value as the candidate. When clear, this FMP-PSD   |
                                                 match can occur with any mbox values.              |
                                                 Not used by the hardware when ALL_PSD is set.      |
 <3>     ALL_SP   R/W      0x0         NS        Controller @ FIRSTMP enable all SP                 |   
                                                 When set, no FMP candidate message segments ever   |
                                                 match siloed SP segments and ID_SP                 |
                                                 and MBOX_SP are not used. When clear, FMP-SP       |
                                                 matches can occur.                                 |
 <2>     ALL_FMP  R/W      0x0         NS        Controller @ FIRSTMP enable all FIRSTMP            |   
                                                 When set, no FMP candidate message segments ever   |
                                                 match siloed FMP segments and ID_FMP and MBOX_FMP  |
                                                 are not used. When clear, FMP-FMP matches can      |
                                                 occur.                                             |
 <1>     ALL_NMP  R/W      0x0         NS        Controller @ FIRSTMP enable all NFIRSTMP           |   
                                                 When set, no FMP candidate message segments ever   |
                                                 match siloed NMP segments and ID_NMP and MBOX_NMP  |
                                                 are not used. When clear, FMP-NMP matches can      |
                                                 occur.                                             |
 <0>     ALL_PSD  R/W      0x0         NS        Controller @ FIRSTMP enable all PSEUDO             |   
                                                 When set, no FMP candidate message segments ever   |
                                                 match the silo pseudo (for the other controller)   |
                                                 and ID_PSD and MBOX_PSD are not used. When clear,  |
                                                 FMP-PSD matches can occur.                         |
Notes:                                                                                              |
This CSR controls when FMP candidate message segments (from the two different controllers) can enter|
the message segment silo to be sent out. A segment remains in the silo until after is has           |
been transmitted and either acknowledged or errored out.                                            |
                                                                                                    |
Candidates and silo entries are one of 4 types:                                                     |
 SP  - a single-segment message                                                                     |
 FMP - the first segment of a multi-segment message                                                 |
 NMP - the other segments in a multi-segment message                                                |
 PSD - the silo psuedo-entry that is valid only while a controller is in the middle of pushing      |
       a multi-segment message into the silo and can match against segments generated by            |
       the other controller                                                                         |
                                                                                                    |
When a candidate "matches" against a silo entry or pseudo entry, it cannot enter the silo.          |
By default (i.e. zeroes in this CSR), the FMP candidate matches against all entries in the          |
silo. When fields in this CSR are set, FMP candidate segments will match fewer silo entries and     |
can enter the silo more freely, probably providing better performance.                              |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_OMSG_FMP_MR[0:1]	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIO_OMSG_NMP_MR@ = SRIO Outbound Message NFIRSTMP Message Restriction
 *
 * The SRIO Controller @ Outbound Message NFIRSTMP Message Restriction Register
 *

     ==============================================================
     SRIO(0..1)_OMSG_NMP_MR(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:15> NS       RAZ      NS          NS        Reserved                                           |   
 <14>    CTLR_SP  R/W      0x0         NS        Controller @ NFIRSTMP enable controller SP         |   
                                                 When set, the NMP candidate message segment can    |
                                                 only match siloed SP segments that were created    |
                                                 by the same controller. When clear, this NMP-SP    |
                                                 match can also occur when the segments were        |
                                                 created by the other controller.                   |
                                                 Not used by the hardware when ALL_SP is set.       |
 <13>    CTLR_FMP R/W      0x0         NS        Controller @ NFIRSTMP enable controller FIRSTMP    |   
                                                 When set, the NMP candidate message segment can    |
                                                 only match siloed FMP segments that were created   |
                                                 by the same controller. When clear, this NMP-FMP   |
                                                 match can also occur when the segments were        |
                                                 created by the other controller.                   |
                                                 Not used by the hardware when ALL_FMP is set.      |
 <12>    CTLR_NMP R/W      0x0         NS        Controller @ NFIRSTMP enable controller NFIRSTMP   |   
                                                 When set, the NMP candidate message segment can    |
                                                 only match siloed NMP segments that were created   |
                                                 by the same controller. When clear, this NMP-NMP   |
                                                 match can also occur when the segments were        |
                                                 created by the other controller.                   |
                                                 Not used by the hardware when ALL_NMP is set.      |
 <11>    ID_SP    R/W      0x0         NS        Controller @ NFIRSTMP enable ID SP                 |   
                                                 When set, the NMP candidate message segment can    |
                                                 only match siloed SP segments that "ID match" the  |
                                                 candidate. When clear, this NMP-SP match can occur |
                                                 with any ID values.                                |
                                                 Not used by the hardware when ALL_SP is set.       |
 <10>    ID_FMP   R/W      0x0         NS        Controller @ NFIRSTMP enable ID FIRSTMP            |   
                                                 When set, the NMP candidate message segment can    |
                                                 only match siloed FMP segments that "ID match" the |
                                                 candidate. When clear, this NMP-FMP match can occur|
                                                 with any ID values.                                |
                                                 Not used by the hardware when ALL_FMP is set.      |
 <9>     ID_NMP   R/W      0x0         NS        Controller @ NFIRSTMP enable ID NFIRSTMP           |   
                                                 When set, the NMP candidate message segment can    |
                                                 only match siloed NMP segments that "ID match" the |
                                                 candidate. When clear, this NMP-NMP match can occur|
                                                 with any ID values.                                |
                                                 Not used by the hardware when ALL_NMP is set.      |
 <8>     NS       R/W      0x0         0         Reserved                                           |   
 <7>     MBOX_SP  R/W      0x0         NS        Controller @ NFIRSTMP enable MBOX SP               |   
                                                 When set, the NMP candidate message segment can    |
                                                 only match siloed SP segments with the same 2-bit  |
                                                 mbox  value as the candidate. When clear, this     |
                                                 NMP-SP match can occur with any mbox values.       |
                                                 Not used by the hardware when ALL_SP is set.       |
 <6>     MBOX_FMP R/W      0x0         NS        Controller @ NFIRSTMP enable MBOX FIRSTMP          |   
                                                 When set, the NMP candidate message segment can    |
                                                 only match siloed FMP segments with the same 2-bit |
                                                 mbox value as the candidate. When clear, this      |
                                                 NMP-FMP match can occur with any mbox values.      |
                                                 Not used by the hardware when ALL_FMP is set.      |
 <5>     MBOX_NMP R/W      0x0         NS        Controller @ NFIRSTMP enable MBOX NFIRSTMP         |   
                                                 When set, the NMP candidate message segment can    |
                                                 only match siloed NMP segments with the same 2-bit |
                                                 mbox value as the candidate. When clear, this      |
                                                 NMP-NMP match can occur with any mbox values.      |
                                                 Not used by the hardware when ALL_NMP is set.      |
 <4>     NS       R/W      0x0         0         Reserved                                           |   
 <3>     ALL_SP   R/W      0x0         NS        Controller @ NFIRSTMP enable all SP                |   
                                                 When set, no NMP candidate message segments ever   |
                                                 match siloed SP segments and ID_SP                 |
                                                 and MBOX_SP are not used. When clear, NMP-SP       |
                                                 matches can occur.                                 |
 <2>     ALL_FMP  R/W      0x0         NS        Controller @ NFIRSTMP enable all FIRSTMP           |   
                                                 When set, no NMP candidate message segments ever   |
                                                 match siloed FMP segments and ID_FMP and MBOX_FMP  |
                                                 are not used. When clear, NMP-FMP matches can      |
                                                 occur.                                             |
 <1>     ALL_NMP  R/W      0x0         NS        Controller @ NFIRSTMP enable all NFIRSTMP          |   
                                                 When set, no NMP candidate message segments ever   |
                                                 match siloed NMP segments and ID_NMP and MBOX_NMP  |
                                                 are not used. When clear, NMP-NMP matches can      |
                                                 occur.                                             |
 <0>     NS       R/W      0x0         0         Reserved                                           |   
Notes:                                                                                              |
This CSR controls when NMP candidate message segments (from the two different controllers) can enter|
the message segment silo to be sent out. A segment remains in the silo until after is has           |
been transmitted and either acknowledged or errored out.                                            |
                                                                                                    |
Candidates and silo entries are one of 4 types:                                                     |
 SP  - a single-segment message                                                                     |
 FMP - the first segment of a multi-segment message                                                 |
 NMP - the other segments in a multi-segment message                                                |
 PSD - the silo psuedo-entry that is valid only while a controller is in the middle of pushing      |
       a multi-segment message into the silo and can match against segments generated by            |
       the other controller                                                                         |
                                                                                                    |
When a candidate "matches" against a silo entry or pseudo entry, it cannot enter the silo.          |
By default (i.e. zeroes in this CSR), the NMP candidate matches against all entries in the          |
silo. When fields in this CSR are set, NMP candidate segments will match fewer silo entries and     |
can enter the silo more freely, probably providing better performance.                              |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_OMSG_NMP_MR[0:1]	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIO_IMSG_VPORT_THR = SRIO Incoming Message Virtual Port Threshold
 *
 * The SRIO Incoming Message Virtual Port Threshold Register
 *

     ==============================================================
     SRIO(0..1)_IMSG_VPORT_THR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:54> NS       RAZ      NS          NS        Reserved                                           |   
 <53:48> MAX_TOT  R/W      0x30        NS        Sets max number of vports available to SRIO0+SRIO1 |   
                                                 This field is only used in SRIO0.                  |
                                                 SRIO1 never uses SRIO1_IMSG_VPORT_THR[MAX_TOT].    |
 <47:46> NS       RAZ      NS          NS        Reserved                                           |   
 <45:40> MAX_S1   R/W      0x30        NS        Sets max number of vports available to SRIO1       |   
                                                 This field is only used in SRIO0.                  |
                                                 SRIO1 never uses SRIO1_IMSG_VPORT_THR[MAX_S1].     |
 <39:38> NS       RAZ      NS          NS        Reserved                                           |   
 <37:32> MAX_S0   R/W      0x30        NS        Sets max number of vports available to SRIO0       |   
                                                 This field is only used in SRIO0.                  |
                                                 SRIO1 never uses SRIO1_IMSG_VPORT_THR[MAX_S0].     |
 <31>    SP_VPORT R/W      0x1          1        Single-segment vport pre-allocation.               |   
                                                 When set, single-segment messages use pre-allocated|
                                                 vport slots (that do not count toward thresholds). |
                                                 When clear, single-segment messages must allocate  |
                                                 vport slots just like multi-segment messages do.   |
 <30:20> NS       RAZ      NS          NS        Reserved                                           |   
 <19:16> BUF_THR  R/W      0x0         NS        Sets number of vports to be buffered by this       |   
                                                 interface. BUF_THR must not be zero when receiving |
                                                 messages. The max BUF_THR value is 8.              |
                                                 Recommend BUF_THR values 1-4. If the 46 available  |
                                                 vports are not statically-allocated across the two |
                                                 SRIO's, smaller BUF_THR values may leave more      |
                                                 vports available for the other SRIO. Lack of a     |
                                                 buffered vport can force a retry for a received    |
                                                 first segment, so, particularly if SP_VPORT=0      |
                                                 (which is not recommended) or the segment size is  |
                                                 small, larger BUF_THR values may improve           |
                                                 performance.                                       |
 <15:14> NS       RAZ      NS          NS        Reserved                                           |   
 <13:8>  MAX_P1   R/W      0x30        NS        Sets max number of open vports in port 1           |   
 <7:6>   NS       RAZ      NS          NS        Reserved                                           |   
 <5:0>   MAX_P0   R/W      0x30        NS        Sets max number of open vports in port 0           |   
                                                                                                    |
Notes:                                                                                              |
SRIO0_IMSG_VPORT_THR.MAX_TOT must be >= SRIO0_IMSG_VPORT_THR.BUF_THR + SRIO1_IMSG_VPORT_THR.BUF_THR |
This register can be accessed regardless of the value in SRIO(0..1)_STATUS_REG.ACCESS and is not         |
effected by MAC reset.                                                                              |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_IMSG_VPORT_THR	sclk	srst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIO_IMSG_CTRL = SRIO Incoming Message Control
 *
 * The SRIO Incoming Message Control Register
 *

     ==============================================================
     SRIO(0..1)_IMSG_CTRL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ      NS          NS        Reserved                                           |   
 <31>    TO_MODE  R/W      0x0         NS        MP message timeout mode:                           |   
                                                 0: The timeout counter gets reset whenever the     |
                                                    next sequential segment is received, regardless |
                                                    of whether it is accepted                       |
                                                 1: The timeout counter gets reset only when the    |
                                                    next sequential segment is received and         |
                                                    accepted                                        |
 <30>    NS       RAZ      NS          NS        Reserved                                           |   
 <29:24> RSP_THR  R/W      0x0         0x0       Sets max number of msg responses in queue before   |   
                                                 sending link-layer retries (field value is added   |
                                                 to 16 to create threshold value)                   |
 <23:22> NS       RAZ      NS          NS        Reserved                                           |   
 <21>    RP1_SID  R/W      0x0         0x0       Sets msg response priority for incomimg messages   |   
                                                 of priority 1 on the secondary ID (0=2, 1=3)       |
 <20:19> RP0_SID  R/W      0x0         0x0       Sets msg response priority for incomimg messages   |   
                                                 of priority 0 on the secondary ID (0,1=1 2=2, 3=3) |
 <18>    RP1_PID  R/W      0x0         0x0       Sets msg response priority for incomimg messages   |   
                                                 of priority 1 on the primary ID (0=2, 1=3)         |
 <17:16> RP0_PID  R/W      0x0         0x0       Sets msg response priority for incomimg messages   |   
                                                 of priority 0 on the primary ID (0,1=1 2=2, 3=3)   |
 <15>    NS       RAZ      NS          NS        Reserved                                           |   
 <14:12> PRT_SEL  R/W      0x0         NS        Port/Controller selection method:                  |   
                                                 0: Table lookup based on mailbox                   |
                                                 1: Table lookup based on priority                  |
                                                 2: Table lookup based on letter                    |
                                                 3: Size-based (SP to port 0, MP to port 1)         |
                                                 4: ID-based (pri ID to port 0, sec ID to port 1)   |
 <11:8>  LTTR     R/W      0x0         NS        Port/Controller selection letter table             |   
 <7:4>   PRIO     R/W      0x0         NS        Port/Controller selection priority table           |   
 <3:0>   MBOX     R/W      0x0         NS        Port/Controller selection mailbox table            |   
                                                                                                    |
Notes: RSP_THR should not typically be modified from reset value.                                   |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_IMSG_CTRL	hclk	hrst_n                                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIO_IMSG_INST_HDR@ = SRIO Incoming Message Packet Instruction Header
 *
 * The SRIO Port/Controller @ Incoming Message Packet Instruction Header Register
 *

     ==============================================================
     SRIO(0..1)_IMSG_INST_HDR(0..1) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    R        R/W      0x0         NS        Port/Controller @ R                                |   
 <62:58> NS       RAZ      NS          NS        Reserved                                           |   
 <57:56> PM       R/W      0x0         NS        Port/Controller @ PM                               |   
 <55>    NS       RAZ      NS          NS        Reserved                                           |   
 <54:48> SL       R/W      0x0         NS        Port/Controller @ SL                               |   
 <47:46> NS       RAZ      NS          NS        Reserved                                           |   
 <45>    NQOS     R/W      0x0         NS        Port/Controller @ NQOS                             |   
 <44>    NGRP     R/W      0x0         NS        Port/Controller @ NGRP                             |   
 <43>    NTT      R/W      0x0         NS        Port/Controller @ NTT                              |   
 <42>    NTAG     R/W      0x0         NS        Port/Controller @ NTAG                             |   
 <41:35> NS       RAZ      NS          NS        Reserved                                           |   
 <34>    RS       R/W      0x0         NS        Port/Controller @ RS                               |   
 <33:32> TT       R/W      0x0         NS        Port/Controller @ TT                               |   
 <31:0>  TAG      R/W      0x0         NS        Port/Controller @ TAG                              |   
Notes:                                                                                              |
 SRIO HW generates most of the SRIO_WORD1 fields from these values. SRIO_WORD1 is the 2nd of two    |
 header words that SRIO inserts in front of all received messages. SRIO_WORD1 may commonly be used  |
 as a PIP/IPD PKT_INST_HDR. This CSR matches the PIP/IPD PKT_INST_HDR format except for the QOS     |
 and GRP fields. SRIO*_IMSG_QOS_GRP*[QOS*,GRP*] supply the QOS and GRP fields.                      |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_IMSG_INST_HDR[0:1]	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIO_IMSG_QOS_GRP@ = SRIO Incoming Message QOS/GRP Table
 *
 * The SRIO Incoming Message QOS/GRP Table Entry @
 *

     ==============================================================
     SRIO(0..1)_IMSG_QOS_GRP(0..31) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    NS       RAZ      NS          NS        Reserved                                           |   
 <62:60> QOS7     R/W      0x0         NS        Entry @:7 QOS (ID=1, LETTER=3)                     |   
 <59:56> GRP7     R/W      0x0         NS        Entry @:7 GRP (ID=1, LETTER=3)                     |   
 <55>    NS       RAZ      NS          NS        Reserved                                           |   
 <54:52> QOS6     R/W      0x0         NS        Entry @:6 QOS (ID=1, LETTER=2)                     |   
 <51:48> GRP6     R/W      0x0         NS        Entry @:6 GRP (ID=1, LETTER=2)                     |   
 <47>    NS       RAZ      NS          NS        Reserved                                           |   
 <46:44> QOS5     R/W      0x0         NS        Entry @:5 QOS (ID=1, LETTER=1)                     |   
 <43:40> GRP5     R/W      0x0         NS        Entry @:5 GRP (ID=1, LETTER=1)                     |   
 <39>    NS       RAZ      NS          NS        Reserved                                           |   
 <38:36> QOS4     R/W      0x0         NS        Entry @:4 QOS (ID=1, LETTER=0)                     |   
 <35:32> GRP4     R/W      0x0         NS        Entry @:4 GRP (ID=1, LETTER=0)                     |   
 <31>    NS       RAZ      NS          NS        Reserved                                           |   
 <30:28> QOS3     R/W      0x0         NS        Entry @:3 QOS (ID=0, LETTER=3)                     |   
 <27:24> GRP3     R/W      0x0         NS        Entry @:3 GRP (ID=0, LETTER=3)                     |   
 <23>    NS       RAZ      NS          NS        Reserved                                           |   
 <22:20> QOS2     R/W      0x0         NS        Entry @:2 QOS (ID=0, LETTER=2)                     |   
 <19:16> GRP2     R/W      0x0         NS        Entry @:2 GRP (ID=0, LETTER=2)                     |   
 <15>    NS       RAZ      NS          NS        Reserved                                           |   
 <14:12> QOS1     R/W      0x0         NS        Entry @:1 QOS (ID=0, LETTER=1)                     |   
 <11:8>  GRP1     R/W      0x0         NS        Entry @:1 GRP (ID=0, LETTER=1)                     |   
 <7>     NS       RAZ      NS          NS        Reserved                                           |   
 <6:4>   QOS0     R/W      0x0         NS        Entry @:0 QOS (ID=0, LETTER=0)                     |   
 <3:0>   GRP0     R/W      0x0         NS        Entry @:0 GRP (ID=0, LETTER=0)                     |   
                                                                                                    |
Notes: The QOS/GRP table contains 32 entries with 8 QOS/GRP pairs per entry - 256 pairs total.      |
      HW selects the table entry by the concatenation of SRIO_WORD0[PRIO,DIS,MBOX], thus entry 0 is |
      used for messages with PRIO=0,DIS=0,MBOX=0, entry 1 is for PRIO=0,DIS=0,MBOX=1, etc.  HW      |
      selects the QOS/GRP pair from the table entry by the concatenation of SRIO_WORD0[ID,LETTER] as|
      shown above. HW then inserts the QOS/GRP pair into SRIO_WORD1[QOS,GRP], which may commonly    |
      be used for the PIP/IPD PKT_INST_HDR[QOS,GRP] fields.                                         |
                                                                                                    |
Clk_Rst:	SRIO(0..1)_IMSG_QOS_GRP[0:1]	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIO_IMSG_STATUS@ = SRIO Incoming Message Status Table
 *
 * The SRIO Incoming Message Status Table Entry @
 *

     ==============================================================
     SRIO(0..1)_IMSG_STATUS(0..23) Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63>    VAL1     RO       0x0         NS        Entry @:1 Valid                                    |   
 <62>    ERR1     RO       0x0         NS        Entry @:1 Error                                    |   
 <61>    TOE1     RO       0x0         NS        Entry @:1 Timeout Error                            |   
 <60>    TOC1     RO       0x0         NS        Entry @:1 Timeout Count                            |   
 <59>    PRT1     RO       0x0         NS        Entry @:1 Port                                     |   
 <58>    NS       RAZ      NS          NS        Reserved                                           |   
 <57>    TT1      RO       0x0         NS        Entry @:1 TT ID                                    |   
 <56>    DIS1     RO       0x0         NS        Entry @:1 Dest ID                                  |   
 <55:52> SEG1     RO       0x0         NS        Entry @:1 Next Segment                             |   
 <51:50> MBOX1    RO       0x0         NS        Entry @:1 Mailbox                                  |   
 <49:48> LTTR1    RO       0x0         NS        Entry @:1 Letter                                   |   
 <47:32> SID1     RO       0x0         NS        Entry @:1 Source ID                                |   
 <31>    VAL0     RO       0x0         NS        Entry @:0 Valid                                    |   
 <30>    ERR0     RO       0x0         NS        Entry @:0 Error                                    |   
 <29>    TOE0     RO       0x0         NS        Entry @:0 Timeout Error                            |   
 <28>    TOC0     RO       0x0         NS        Entry @:0 Timeout Count                            |   
 <27>    PRT0     RO       0x0         NS        Entry @:0 Port                                     |   
 <26>    NS       RAZ      NS          NS        Reserved                                           |   
 <25>    TT0      RO       0x0         NS        Entry @:0 TT ID                                    |   
 <24>    DIS0     RO       0x0         NS        Entry @:0 Dest ID                                  |   
 <23:20> SEG0     RO       0x0         NS        Entry @:0 Next Segment                             |   
 <19:18> MBOX0    RO       0x0         NS        Entry @:0 Mailbox                                  |   
 <17:16> LTTR0    RO       0x0         NS        Entry @:0 Letter                                   |   
 <15:0>  SID0     RO       0x0         NS        Entry @:0 Source ID                                |   
                                                                                                    |
Notes:                                                                                              |
Clk_Rst:	SRIO(0..1)_IMSG_STATUS[0:1]	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===



 *
 *                  SRIOMAINT_DEV_ID = SRIO Device ID
 *
 * The DeviceVendor Identity field identifies the vendor that manufactured the device
 *

     ==============================================================
     SRIOMAINT(0..1)_DEV_ID Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:16> DEVICE   RO       0x0090      NS        Product Identity                                   |   
 <15:0>  VENDOR   RO       0x008C      0x008C    Cavium Vendor Identity                             |   
                                                                                                    |
Notes:                                                                                              |
 This register identifies Cavium Networks and the Product ID.                                       |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_DEV_ID	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_DEV_REV = SRIO Device Revision
 *
 * The Device Revision register identifies the chip pass and revision
 *

     ==============================================================
     SRIOMAINT(0..1)_DEV_REV Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:8>  NS       RAZ      NS          NS        Reserved.                                          |   
 <7:0>   REVISION RO       NS          NS        Chip Pass/Revision                                 |   
                                                                                                    |
Notes:                                                                                              |
 This register identifies the chip pass and revision derived from the fuses.                        |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_DEV_REV	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_ASMBLY_ID = SRIO Assembly ID
 *
 * The Assembly ID register shows the Assembly ID and Vendor
 *

     ==============================================================
     SRIOMAINT(0..1)_ASMBLY_ID Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:16> ASSY_ID  RO       0x0         0         Assembly Identifer                                 |   
 <15:0>  ASSY_VEN RO       0x008C      0         Assembly Vendor Identifer                          |   
                                                                                                    |
Notes:                                                                                              |
 The Assembly ID register shows the Assembly ID and Vendor specified in $SRIO_ASMBLY_ID.            |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_ASMBLY_ID	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_ASMBLY_INFO = SRIO Assembly Information
 *
 * The Assembly Info register shows the Assembly Revision specified in $SRIO_ASMBLY_INFO
 *

     ==============================================================
     SRIOMAINT(0..1)_ASMBLY_INFO Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:16> ASSY_REV RO       0x0         0         Assembly Revision                                  |   
 <15:0>  EXT_FPTR RO       0x0100      0x0100    Pointer to the first entry in the extended feature |   
                                                 list.                                              |
                                                                                                    |
Notes:                                                                                              |
 The Assembly Info register shows the Assembly Revision specified in $SRIO_ASMBLY_INFO and Extended | 
 Feature Pointer.                                                                                   |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_ASMBLY_INFO	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_PE_FEAT = SRIO Processing Element Features
 *
 * The Supported Processing Element Features.
 *

     ==============================================================
     SRIOMAINT(0..1)_PE_FEAT Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31>    BRIDGE   RO       0x0         0         Bridge Functions not supported.                    |   
 <30>    MEMORY   RO       0x1         1         PE contains addressable memory.                    |   
 <29>    PROC     RO       0x1         1         PE contains a local processor.                     |   
 <28>    SWITCH   RO       0x0         0         Switch Functions not supported.                    |   
 <27>    MULT_PRT RO       0x0         0         Multiport Functions not supported.                 |   
 <26:7>  NS       RAZ      NS          NS        Reserved.                                          |   
 <6>     SUPPRESS RO       0x0         0         Error Recovery Suppression not supported.          |   
 <5>     CRF      RO       0x0         0         Critical Request Flow not supported.               |   
 <4>     LG_TRAN  RO       0x1         1         Large Transport (16-bit Device IDs) supported.     |   
 <3>     EX_FEAT  RO       0x1         1         Extended Feature Pointer is valid.                 |   
 <2:0>   EX_ADDR  RO       0x7         7         PE supports 66, 50 and 34-bit addresses.           |   
                                                 [2:1] are a RO copy of SRIO*_IP_FEATURE[A66,A50].  |
                                                                                                    |
Notes:                                                                                              |
 The Processing Element Feature register describes the major functionality provided by the SRIO     |
 device.                                                                                            |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_PE_FEAT	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_SRC_OPS = SRIO Source Operations
 *
 * The logical operations initiated by the Octeon.
 *

     ==============================================================
     SRIOMAINT(0..1)_SRC_OPS Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31>    GSM_READ RO       0x0         0         PE does not support Read Home operations.          |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<31>]     |
 <30>    I_READ   RO       0x0         0         PE does not support Instruction Read.              |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<30>]     |
 <29>    RD_OWN   RO       0x0         0         PE does not support Read for Ownership.            |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<29>]     |
 <28>    D_INVALD RO       0x0         0         PE does not support Data Cache Invalidate.         |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<28>]     |
 <27>    CASTOUT  RO       0x0         0         PE does not support Castout Operations.            |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<27>]     |
 <26>    D_FLUSH  RO       0x0         0         PE does not support Data Cache Flush.              |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<26>]     |
 <25>    IO_READ  RO       0x0         0         PE does not support IO Read.                       |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<25>]     |
 <24>    I_INVALD RO       0x0         0         PE does not support Instruction Cache Invalidate.  |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<24>]     |
 <23>    TLB_INV  RO       0x0         0         PE does not support TLB Entry Invalidate.          |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<23>]     |
 <22>    TLB_INVS RO       0x0         0         PE does not support TLB Entry Invalidate Sync.     |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<22>]     |
 <21:16> NS       RAZ      NS          NS        Reserved.                                          |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<21:16>]  |
 <15>    READ     RO       0x1         1         PE can support Nread operations.                   |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<15>]     |
 <14>    WRITE    RO       0x1         1         PE can support Nwrite operations.                  |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<14>]     |
 <13>    SWRITE   RO       0x1         1         PE can support Swrite operations.                  |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<13>]     |
 <12>    WRITE_R  RO       0x1         1         PE can support Write with Response operations.     |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<12>]     |
 <11>    MSG      RO       0x1         1         PE can support Data Message operations.            |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<11>]     |
 <10>    DOORBELL RO       0x1         1         PE can support Doorbell operations.                |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<10>]     |
 <9>     COMPSWAP RO       0x0         0         PE does not support Atomic Compare and Swap.       |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<9>]      |
 <8>     TESTSWAP RO       0x0         0         PE does not support Atomic Test and Swap.          |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<8>]      |
 <7>     ATOM_INC RO       0x1         1         PE can support Atomic increment operations.        |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<7>]      |
 <6>     ATOM_DEC RO       0x1         1         PE can support Atomic decrement operations.        |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<6>]      |
 <5>     ATOM_SET RO       0x1         1         PE can support Atomic set operations.              |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<5>]      |
 <4>     ATOM_CLR RO       0x1         1         PE can support Atomic clear operations.            |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<4>]      |
 <3>     ATOM_SWP RO       0x0         0         PE does not support Atomic Swap.                   |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<3>]      |
 <2>     PORT_WR  RO       0x1         1         PE can Port Write operations.                      |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<2>]      |
 <1:0>   NS       RAZ      NS          NS        Reserved.                                          |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<1:0>]    |
                                                                                                    |
Notes:                                                                                              |
 The logical operations initiated by the Cores.   The Source OPs register shows the operations      |
 specified in the SRIO(0..1)_IP_FEATURE.OPS register.                                                    |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_SRC_OPS	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_DST_OPS = SRIO Source Operations
 *
 * The logical operations supported from external devices.
 *

     ==============================================================
     SRIOMAINT(0..1)_DST_OPS Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31>    GSM_READ RO       0x0         0         PE does not support Read Home operations.          |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<31>]     |
 <30>    I_READ   RO       0x0         0         PE does not support Instruction Read.              |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<30>]     |
 <29>    RD_OWN   RO       0x0         0         PE does not support Read for Ownership.            |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<29>]     |
 <28>    D_INVALD RO       0x0         0         PE does not support Data Cache Invalidate.         |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<28>]     |
 <27>    CASTOUT  RO       0x0         0         PE does not support Castout Operations.            |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<27>]     |
 <26>    D_FLUSH  RO       0x0         0         PE does not support Data Cache Flush.              |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<26>]     |
 <25>    IO_READ  RO       0x0         0         PE does not support IO Read.                       |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<25>]     |
 <24>    I_INVALD RO       0x0         0         PE does not support Instruction Cache Invalidate.  |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<24>]     |
 <23>    TLB_INV  RO       0x0         0         PE does not support TLB Entry Invalidate.          |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<23>]     |
 <22>    TLB_INVS RO       0x0         0         PE does not support TLB Entry Invalidate Sync.     |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<22>]     |
 <21:16> NS       RAZ      NS          NS        Reserved.                                          |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<21:16>]  |
 <15>    READ     RO       0x1         1         PE can support Nread operations.                   |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<15>]     |
 <14>    WRITE    RO       0x1         1         PE can support Nwrite operations.                  |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<14>]     |
 <13>    SWRITE   RO       0x1         1         PE can support Swrite operations.                  |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<13>]     |
 <12>    WRITE_R  RO       0x1         1         PE can support Write with Response operations.     |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<12>]     |
 <11>    MSG      RO       0x1         1         PE can support Data Message operations.            |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<11>]     |
 <10>    DOORBELL RO       0x1         1         PE can support Doorbell operations.                |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<10>]     |
 <9>     COMPSWAP RO       0x0         0         PE does not support Atomic Compare and Swap.       |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<9>]      |
 <8>     TESTSWAP RO       0x0         0         PE does not support Atomic Test and Swap.          |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<8>]      |
 <7>     ATOM_INC RO       0x1         1         PE can support Atomic increment operations.        |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<7>]      |
 <6>     ATOM_DEC RO       0x1         1         PE can support Atomic decrement operations.        |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<6>]      |
 <5>     ATOM_SET RO       0x1         1         PE can support Atomic set operations.              |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<5>]      |
 <4>     ATOM_CLR RO       0x1         1         PE can support Atomic clear operations.            |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<4>]      |
 <3>     ATOM_SWP RO       0x0         0         PE does not support Atomic Swap.                   |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<3>]      |
 <2>     PORT_WR  RO       0x1         1         PE can Port Write operations.                      |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<2>]      |
 <1:0>   NS       RAZ      NS          NS        Reserved.                                          |   
                                                 This is a RO copy of SRIO*_IP_FEATURE[OPS<1:0>]    |
                                                                                                    |
Notes:                                                                                              |
 The logical operations supported from external devices.   The Destination OPs register shows the   |
 operations specified in the SRIO(0..1)_IP_FEATURE.OPS register.                                         |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_DST_OPS	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_PE_LLC = SRIO Processing Element Logical Layer Control
 *
 * Addresses supported by the SRIO Device.
 *

     ==============================================================
     SRIOMAINT(0..1)_PE_LLC Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:3>  NS       RAZ      NS          NS        Reserved.                                          |   
 <2:0>   EX_ADDR  R/W      0x1         1         Controls the number of address bits generated by   |   
                                                 PE as a source and processed by the PE as a        |
                                                 target of an operation.                            |
                                                  001 = 34-bit Addresses                            |
                                                  010 = 50-bit Addresses                            |
                                                  100 = 66-bit Addresses                            |
                                                  All other encodings are reserved.                 |
Notes:                                                                                              |
 The Processing Element Logical Layer is used for general configuration for the logical interface.  |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_PE_LLC	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_LCS_BA0 = SRIO Local Configuration Space MSB Base Address
 *
 * MSBs of SRIO Address Space mapped to Maintenance BAR.
 *

     ==============================================================
     SRIOMAINT(0..1)_LCS_BA0 Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31>    NS       RAZ      NS          NS        Reserved.                                          |   
 <30:0>  LCSBA    R/W      0x0         0         SRIO Address 65:35                                 |   
                                                                                                    |
Notes:                                                                                              |
 The double word aligned SRIO address window mapped to the SRIO Maintenance BAR.  This window has   |
 the highest priority and eclipses matches to the BAR0, BAR1 and BAR2 windows.  Note:  Address bits |
 not supplied in the transfer are considered zero.  For example, SRIO Address 65:35 must be set to  |
 zero to match in a 34-bit access.  SRIO Address 65:50 must be set to zero to match in a 50-bit     |
 access.  This coding allows the Maintenance Bar window to appear in specific address spaces. The   |
 remaining bits are located in SRIOMAINT(0..1)_LCS_BA1. This SRIO maintenance BAR is effectively         |
 disabled when LCSBA[30] is set with 34 or 50-bit addressing.                                       |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_LCS_BA0	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_LCS_BA1 = SRIO Local Configuration Space LSB Base Address
 *
 * LSBs of SRIO Address Space mapped to Maintenance BAR.
 *

     ==============================================================
     SRIOMAINT(0..1)_LCS_BA1 Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:21> LCSBA    R/W      0x0         0         SRIO Address 34:24                                 |   
 <20:0>  NS       R/W      0x0         0         Reserved.                                          |   
                                                                                                    |
Notes:                                                                                              |
 The double word aligned SRIO address window mapped to the SRIO Maintenance BAR.  This window has   |
 the highest priority and eclipses matches to the BAR0, BAR1 and BAR2 windows. Address bits not     |
 supplied in the transfer are considered zero.  For example, SRIO Address 65:35 must be set to zero |
 to match in a 34-bit access and SRIO Address 65:50 must be set to zero to match in a 50-bit access.|
 This coding allows the Maintenance Bar window to appear in specific address spaces. Accesses       |
 through this BAR are limited to single word (32-bit) aligned transfers of one to four bytes.       |
 Accesses which violate this rule will return an error response if possible and be otherwise        |
 ignored.  The remaining bits are located in SRIOMAINT(0..1)_LCS_BA0.                                    |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_LCS_BA1	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_PRI_DEV_ID = SRIO Primary Device ID
 *
 * Primary 8 and 16 bit Device IDs
 *

     ==============================================================
     SRIOMAINT(0..1)_PRI_DEV_ID Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:24> NS       RAZ      NS          NS        Reserved.                                          |   
 <23:16> ID8      R/W      0xFF        0         Primary 8-bit Device ID                            |   
 <15:0>  ID16     R/W      0xFFFF      0         Primary 16-bit Device ID                           |   
                                                                                                    |
Notes:                                                                                              |
 This register defines the primary 8 and 16 bit device IDs used for large and small transport.  An  |
 optional secondary set of device IDs are located in SRIOMAINT(0..1)_SEC_DEV_ID.                         |  
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_PRI_DEV_ID	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_HB_DEV_ID_LOCK = SRIO Host Device ID Lock
 *
 * The Host Base Device ID
 *

     ==============================================================
     SRIOMAINT(0..1)_HB_DEV_ID_LOCK Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:16> NS       RAZ      NS          NS        Reserved.                                          |   
 <15:0>  HOSTID   R/W      0xFFFF      0         Primary 16-bit Device ID                           |   
                                                                                                    |
Notes:                                                                                              |
 This register contains the Device ID of the Host responsible for initializing this SRIO device.    |
 The register contains a special write once function that captures the first HOSTID written to it   |
 after reset.  The function allows several potential hosts to write to this register and then read  |
 it to see if they have responsibility for initialization.  The register can be unlocked by         |
 rewriting the current host value.  This will reset the lock and restore the value to 0xFFFF.       |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_HB_DEV_ID_LOCK	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_COMP_TAG = SRIO Component Tag
 *
 * Component Tag 
 *

     ==============================================================
     SRIOMAINT(0..1)_COMP_TAG Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  COMP_TAG R/W      0x0         0         Component Tag for Firmware Use                     |   
                                                                                                    |
Notes:                                                                                              |
 This register contains a component tag value for the processing element and the value can be       |
 assigned by software when the device is initialized.                                               |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_COMP_TAG	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_PORT_MBH0 = SRIO Port Maintenance Block Header 0
 *
 * Port Maintenance Block Header 0
 *

     ==============================================================
     SRIOMAINT(0..1)_PORT_MBH0 Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:16> EF_PTR   RO       0x1000      0         Pointer to Error Management Block.                 |   
 <15:0>  EF_ID    RO       0x0001      0         Extended Feature ID (Generic Endpoint Device)      |   
                                                                                                    |
Notes:                                                                                              |
Clk_Rst:	SRIOMAINT(0..1)_PORT_MBH0	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_PORT_LT_CTL = SRIO Link Layer Timeout Control
 *
 * Link Layer Timeout Control
 *

     ==============================================================
     SRIOMAINT(0..1)_PORT_LT_CTL Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:8>  TIMEOUT  R/W      0xFFFFFF    0         Timeout Value                                      |   
 <7:0>   NS       RAZ      NS          NS        Reserved.                                          |   
                                                                                                    |
Notes:                                                                                              |
 This register controls the timeout for link layer transactions.  It is used as the timeout between |
 sending a packet (of any type) or link request to receiving the corresponding link acknowledge or  |
 link-response.  Each count represents 200ns.  The minimum timeout period is the TIMEOUT x 200nS    |
 and the maximum is twice that number.  A value less than 32 may not guarantee that all timeout     |
 errors will be reported correctly.  When the timeout period expires the packet or link request is  |
 dropped and the error is logged in the LNK_TOUT field of the SRIOMAINT(0..1)_ERB_ERR_DET register.  A   |
 value of 0 in this register will allow the packet or link request to be issued but it will timeout |
 immediately.  This value is not recommended for normal operation.                                  |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_PORT_LT_CTL	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_PORT_RT_CTL = SRIO Logical Layer Timeout Control
 *
 * Logical Layer Timeout Control
 *

     ==============================================================
     SRIOMAINT(0..1)_PORT_RT_CTL Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:8>  TIMEOUT  R/W      0xFFFFFF    0         Timeout Value                                      |   
 <7:0>   NS       RAZ      NS          NS        Reserved.                                          |   
                                                                                                    |
Notes:                                                                                              |
 This register controls the timeout for logical layer transactions.  It is used under two           |
 conditions.  First, it is used as the timeout period between sending a packet requiring a packet   |
 response being sent to receiving the corresponding response.  This is used for all outgoing packet |
 types including memory, maintenance, doorbells and message operations.  When the timeout period    |
 expires the packet is disgarded and the error is logged in the PKT_TOUT field of the               |
 SRIOMAINT(0..1)_ERB_LT_ERR_DET register.  The second use of this register is as a timeout period        |
 between incoming message segments of the same message.  If a message segment is received then the  |
 MSG_TOUT field of the SRIOMAINT(0..1)_ERB_LT_ERR_DET register is set if the next segment has not been   |
 received before the time expires.  In both cases, each count represents 200ns.  The minimum        |
 timeout period is the TIMEOUT x 200nS and the maximum is twice that number.  A value less than 32  |
 may not guarantee that all timeout errors will be reported correctly.  A value of 0 disables the   |
 logical layer timeouts and is not recommended for normal operation.                                |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_PORT_RT_CTL	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_PORT_GEN_CTL = SRIO Port General Control
 *
 * Port General Control
 *

     ==============================================================
     SRIOMAINT(0..1)_PORT_GEN_CTL Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31>    HOST     R/W      NS          NS        Host Device.                                       |   
                                                 The HOST reset value is based on corresponding     |
                                                 MIO_RST_CTL*[PRTMODE], whose reset value is        |
                                                 selected by the corresponding QLM*_HOST_MODE strap |
                                                 on a chip cold reset (and can be later modified by |
                                                 software). HOST resets to 1 when                   |
                                                 MIO_RST_CTL*[PRTMODE] selects RC (i.e. host) mode, |
                                                 else 0.                                            |
 <30>    MENABLE  R/W      NS          0x1       Master Enable.  Must be set for device to issue    |   
                                                 read, write, doorbell, message requests.           |
 <29>    DISCOVER R/W      0x0         0x1       Discovered. The device has been discovered by the  |   
                                                 host responsible for initialization.               |
 <28:0>  NS       RAZ      NS          NS        Reserved.                                          |   
                                                                                                    |
Notes:                                                                                              |
Clk_Rst:	SRIOMAINT(0..1)_PORT_GEN_CTL	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_PORT_0_CTL2 = SRIO Port 0 Control 2
 *
 * Port 0 Control 2
 *

     ==============================================================
     SRIOMAINT(0..1)_PORT_0_CTL2 Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:28> SEL_BAUD RO       0x0         NS        Link Baud Rate Selected.                           |   
                                                   0000 - No rate selected                          |
                                                   0001 - 1.25 GBaud                                |
                                                   0010 - 2.5 GBaud                                 |
                                                   0011 - 3.125 GBaud                               |
                                                   0100 - 5.0 GBaud                                 |
                                                   0101 - 6.25 GBaud (reserved)                     |
                                                   0110 - 0b1111 - Reserved                         |
                                                 Indicates the speed of the interface SERDES lanes  |
                                                 (should match the value selected by SUP_*/ENB_*    |
                                                 below).                                            |
 <27>    BAUD_SUP RO       0x0         0         Automatic Baud Rate Discovery not supported.       |   
 <26>    BAUD_ENB R/W      0x0         0         Auto Baud Rate Discovery Enable.                   |   
 <25>    SUP_125G RO       NS          NS        1.25GB Rate Operation supported.                   |   
                                                 Set when the interface SERDES lanes are operating  |
                                                 at 1.25 Gbaud (as selected by QLM*_SPD straps).    |
 <24>    ENB_125G R/W      NS          NS        1.25GB Rate Operation enable.                      |   
                                                 Reset to 1 when the interface SERDES lanes are     |
                                                 operating at 1.25 Gbaud (as selected by QLM*_SPD   |
                                                 straps). Reset to 0 otherwise.                     |
 <23>    SUP_250G RO       NS          NS        2.50GB Rate Operation supported.                   |   
                                                 Set when the interface SERDES lanes are operating  |
                                                 at 2.5 Gbaud (as selected by QLM*_SPD straps).     |
 <22>    ENB_250G R/W      NS          NS        2.50GB Rate Operation enable.                      |   
                                                 Reset to 1 when the interface SERDES lanes are     |
                                                 operating at 2.5 Gbaud (as selected by QLM*_SPD    |
                                                 straps). Reset to 0 otherwise.                     |
 <21>    SUP_312G RO       NS          NS        3.125GB Rate Operation supported.                  |   
                                                 Set when the interface SERDES lanes are operating  |
                                                 at 3.125 Gbaud (as selected by QLM*_SPD straps).   |
 <20>    ENB_312G R/W      NS          NS        3.125GB Rate Operation enable.                     |   
                                                 Reset to 1 when the interface SERDES lanes are     |
                                                 operating at 3.125 Gbaud (as selected by QLM*_SPD  |
                                                 straps). Reset to 0 otherwise.                     |
 <19>    SUB_500G RO       NS          NS        5.0GB Rate Operation supported.                    |   
                                                 Set when the interface SERDES lanes are operating  |
                                                 at 5.0 Gbaud (as selected by QLM*_SPD straps).     |
 <18>    ENB_500G R/W      NS          NS        5.0GB Rate Operation enable.                       |   
                                                 Reset to 1 when the interface SERDES lanes are     |
                                                 operating at 5.0 Gbaud (as selected by QLM*_SPD    |
                                                 straps). Reset to 0 otherwise.                     |
 <17>    SUP_625G RO       0           0         6.25GB Rate Operation (not supported).             |   
 <16>    ENB_625G R/W      0           0         6.25GB Rate Operation enable.                      |   
 <15:3>  NS       RAZ      NS          NS        Reserved.                                          |   
 <2>     NS       R/W      0x0         0         Reserved.                                          |   
 <1>     TX_EMPH  RO       0x0         0         Indicates whether is port is able to transmit      |   
                                                 commands to control the transmit emphasis in the   |
                                                 connected port.                                    |
 <0>     EMPH_EN  R/W      0x0         0         Controls whether a port may adjust the             |   
                                                 transmit emphasis in the connected port.  This bit |
                                                 should be cleared for normal operation.            |
                                                                                                    |
Notes:                                                                                              |
 These registers are accessed when a local processor or an external device wishes to examine the    |
 port baudrate information.  WARNING:  Writes to this register will reinitialize the SRIO link.     |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_PORT_0_CTL2	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_PORT_0_ERR_STAT = SRIO Port 0 Error and Status
 *
 * Port 0 Error and Status
 *

     ==============================================================
     SRIOMAINT(0..1)_PORT_0_ERR_STAT Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:27> NS       RAZ      NS          NS        Reserved.                                          |   
 <26>    PKT_DROP R/W1C    0x0         0         Output Packet Dropped.                             |   
 <25>    O_FAIL   R/W1C    0x0         0         Output Port has encountered a failure condition,   |   
                                                 meaning the port's failed error threshold has      |
                                                 reached SRIOMAINT(0..1)_ERB_ERR_RATE_THR.ER_FAIL value. |
 <24>    O_DGRAD  R/W1C    0x0         0         Output Port has encountered a degraded condition,  |   
                                                 meaning the port's degraded threshold has          |
                                                 reached SRIOMAINT(0..1)_ERB_ERR_RATE_THR.ER_DGRAD       |
                                                 value.                                             |
 <23:21> NS       RAZ      NS          NS        Reserved.                                          |   
 <20>    O_RETRY  R/W1C    0x0         0         Output Retry Encountered.  This bit is set when    |   
                                                 bit 18 is set.                                     |
 <19>    O_RTRIED RO       0x0         0         Output Port has received a packet-retry condition  |   
                                                 and cannot make forward progress.  This bit is set |
                                                 when  bit 18 is set and is cleared when a packet-  |
                                                 accepted or a packet-not-accepted control symbol   |
                                                 is received.                                       |
 <18>    O_SM_RET RO       0x0         0         Output Port State Machine has received a           |   
                                                 packet-retry control symbol and is retrying the    |
                                                 packet.                                            |
 <17>    O_ERROR  R/W1C    0x0         0         Output Error Encountered and possibly recovered    |   
                                                 from.  This sticky bit is set with bit 16.         |
 <16>    O_SM_ERR RO       0x0         0         Output Port State Machine has encountered an       |   
                                                 error.                                             |
 <15:11> NS       RAZ      NS          NS        Reserved.                                          |   
 <10>    I_SM_RET RO       0x0         0         Input Port State Machine has received a            |   
                                                 packet-retry control symbol and is retrying the    |
                                                 packet.                                            |
 <9>     I_ERROR  R/W1C    0x0         0         Input Error Encountered and possibly recovered     |   
                                                 from.  This sticky bit is set with bit 8.          |
 <8>     I_SM_ERR RO       0x0         0         Input Port State Machine has encountered an        |   
                                                 error.                                             |
 <7:5>   NS       RAZ      NS          NS        Reserved.                                          |   
 <4>     PT_WRITE R/W1C    0x0         0         Port has encountered a condition which required it |   
                                                 initiate a Maintenance Port-Write Operation.       |
 <3>     NS       RAZ      NS          NS        Reserved.                                          |   
 <2>     PT_ERROR R/W1C    0x0         0         Input or Output Port has encountered an            |   
                                                 unrecoverable error condition.                     |
 <1>     PT_OK    RO       0x0         0         Input or Output Port are intitialized and the port |   
                                                 is exchanging error free control symbols with      |
                                                 attached device.                                   |
 <0>     PT_UINIT RO       0x0         0         Port is uninitialized.  This bit and bit 1 are     |   
                                                 mutually exclusive.                                |
                                                                                                    |
Notes:                                                                                              |
 This register displays port error and status information.  Several port error conditions are       |
 captured here and must be cleared by writing 1's to the individual bits.                           |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_PORT_0_ERR_STAT	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_PORT_0_CTL = SRIO Port 0 Control
 *
 * Port 0 Control
 *

     ==============================================================
     SRIOMAINT(0..1)_PORT_0_CTL Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:30> PT_WIDTH RO       0x2         2         Hardware Port Width.                               |   
                                                 00 = One Lane supported.                           |             
                                                 01 = One/Two Lanes supported.                      |             
                                                 10 = One/Four Lanes supported.                     |             
                                                 11 = One/Two/Four Lanes supported.                 |
                                                 This is a RO copy of SRIO*_IP_FEATURE[PT_WIDTH].   |
 <29:27> IT_WIDTH RO       0x0         NS        Initialized Port Width                             |   
                                                 000 = Single-lane, Lane 0                          |
                                                 001 = Single-lane, Lane 1 or 2                     |
                                                 010 = Four-lane                                    |
                                                 011 = Two-lane                                     |
                                                 Others = Reserved                                  |
 <26:24> OV_WIDTH R/W      0x0         0         Override Port Width.  Writing this register causes |   
                                                 the port to reinitialize.                          |
                                                 000 = No Override all lanes possible               |
                                                 001 = Reserved                                     |
                                                 010 = Force Single-lane, Lane 0                    |
                                                 011 = Force Single-lane, Lane 2                    |
                                                       (Lane 1 if only lanes 0,1 are connected)     |
                                                 100 = Reserved                                     |
                                                 101 = Force Two-lane, Disable Four-Lane            |
                                                 110 = Force Four-lane, Disable Two-Lane            |
                                                 111 = All lanes sizes enabled                      |
 <23>    DISABLE  R/W      0x0         0         Port Disable.  Setting this bit disables both      |   
                                                 drivers and receivers.                             |
 <22>    O_ENABLE R/W      0x0         1         Port Output Enable.  When cleared, port will       |   
                                                 generate control symbols and respond to            |
                                                 maintenance transactions only.  When set, all      |
                                                 transactions are allowed.                          | 
 <21>    I_ENABLE R/W      0x0         1         Port Input Enable.  When cleared, port will        |   
                                                 generate control symbols and respond to            |
                                                 maintenance packets only.  All other packets will  |
                                                 not be accepted.                                   |
 <20>    DIS_ERR  R/W      0x0         0         Disable Error Checking.  Diagnostic Only.          |   
 <19>    MCAST    R/W      0x0         0         Reserved.                                          |   
 <18>    NS       RAZ      NS          NS        Reserved.                                          |   
 <17>    ENUM     R/W      0x0         0         Enumeration Boundry. SW can use this bit to        |   
                                                 determine port enumeration.                        |
 <16>    NS       RAZ      NS          NS        Reserved.                                          |   
 <15:14> EX_WIDTH RO       0x0         0         Extended Port Width not supported.                 |   
 <13:12> EX_STAT  RO       0x0         0         Extended Port Width Status. 00 = not supported     |   
 <11:4>  SUPPRESS RO       0x00        0         Retransmit Suppression Mask.  CRF not Supported.   |   
 <3>     STP_PORT R/W      0x0         0         Stop on Failed Port.  This bit is used with the    |   
                                                 DROP_PKT bit to force certain behavior when the    |
                                                 Error Rate Failed Threshold has been met or        |
                                                 exceeded.                                          |
 <2>     DROP_PKT R/W      0x0         0         Drop on Failed Port.  This bit is used with the    |   
                                                 STP_PORT bit to force certain behavior when the    |
                                                 Error Rate Failed Threshold has been met or        |
                                                 exceeded.                                          |
 <1>     PRT_LOCK R/W      0x0         0         When this bit is cleared, the packets that may be  |   
                                                 received and issued are controlled by the state of |
                                                 the O_ENABLE and I_ENABLE bits.  When this bit is  |
                                                 set, this port is stopped and is not enabled to    |
                                                 issue or receive any packets; the input port can   |
                                                 still follow the training procedure and can still  |
                                                 send and respond to link-requests; all received    |
                                                 packets return packet-not-accepted control symbols |
                                                 to force an error condition to be signaled by the  |
                                                 sending device.                                    |
 <0>     PT_TYPE  RO       0x1         1         Port Type.  1 = Serial port.                       |   
                                                                                                    |
Notes:                                                                                              |
 This register contains assorted control bits.                                                      |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_PORT_0_CTL	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_SERIAL_LANE_HDR = SRIO Serial Lane Header
 *
 * SRIO Serial Lane Header
 *

     ==============================================================
     SRIOMAINT(0..1)_SERIAL_LANE_HDR Type=SRIOMAINT
     ==============================================================


----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:16> EF_PTR   RO       0x2000      0         Pointer to the next block in the extended features |   
                                                 data structure.                                    |
 <15:0>  EF_ID    RO       0x000D      0xD                                                          |   
                                                                                                    |
Notes:                                                                                              |
 The error management extensions block header register contains the EF_PTR to the next EF_BLK and   |
 the EF_ID that identifies this as the Serial Lane Status Block.                                    |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_SERIAL_LANE_HDR	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_LANE_@_STATUS_0 = SRIO Lane @ Status 0
 *
 * SRIO Lane Status 0
 *

     ==============================================================
     SRIOMAINT(0..1)_LANE_(0..3)_STATUS_0 Type=SRIOMAINT
     ==============================================================


----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:24> PORT     RO       0x0         0         The number of the port within the device to which  |   
                                                 the lane is assigned.                              |
 <23:20> LANE     RO       0x0         0         Lane Number within the port.                       |   
 <19>    TX_TYPE  RO       0x0         0         Transmitter Type                                   |   
                                                  0 = Short Run                                     |
                                                  1 = Long Run                                      |
 <18>    TX_MODE  RO       0x0         0         Transmitter Operating Mode                         |   
                                                  0 = Short Run                                     |
                                                  1 = Long Run                                      |
 <17:16> RX_TYPE  RO       0x0         0         Receiver Type                                      |   
                                                  0 = Short Run                                     |
                                                  1 = Medium Run                                    |
                                                  2 = Long Run                                      |
                                                  3 = Reserved                                      |
 <15>    RX_INV   RO       0x0         0         Receiver Input Inverted                            |   
                                                  0 = No Inversion                                  |
                                                  1 = Input Inverted                                |
 <14>    RX_ADAPT RO       0x1         1         Receiver Trained                                   |   
                                                  0 = One or more adaptive equalizers are           |
                                                      controlled by the lane receiver and at least  |
                                                      one is not trained.                           |
                                                  1 = The lane receiver controls no adaptive        |
                                                      equalizers or all the equalizers are trained. |
 <13>    RX_SYNC  RO       0x0         0         Receiver Lane Sync'd                               |   
 <12>    RX_TRAIN RO       0x0         0         Receiver Lane Trained                              |   
 <11:8>  DEC_ERR  RO       0x0         0         8Bit/10Bit Decoding Errors                         |   
                                                  0    = No Errors since last read                  |
                                                  1-14 = Number of Errors since last read           |
                                                  15   = Fifteen or more Errors since last read     |
 <7>     XSYNC    RO       0x0         0         Receiver Lane Sync Change                          |   
                                                  0 = Lane Sync has not changed since last read     |
                                                  1 = Lane Sync has changed since last read         |
 <6>     XTRAIN   RO       0x0         0         Receiver Training Change                           |   
                                                  0 = Training has not changed since last read      |
                                                  1 = Training has changed since last read          |
 <5:4>   NS       RAZ      NS          NS        Reserved.                                          |   
 <3>     STATUS1  RO       0x0         0         Status 1 CSR Implemented                           |   
 <2:0>   STATUSN  RO       0x0         0         Status 2-7 Not Implemented                         |   
                                                                                                    |
Notes:                                                                                              |
 This register contains status information about the local lane transceiver.                        |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_LANE_[0:3]_STATUS_0	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_ERB_HDR = SRIO Error Reporting Block Header
 *
 * Error Reporting Block Header
 *

     ==============================================================
     SRIOMAINT(0..1)_ERB_HDR Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:16> EF_PTR   RO       0x0000      0         Pointer to the next block in the extended features |   
                                                 data structure.                                    |
 <15:0>  EF_ID    RO       0x0007      7         Single Port ID                                     |   
                                                                                                    |
Notes:                                                                                              |
 The error management extensions block header register contains the EF_PTR to the next EF_BLK and   |
 the EF_ID that identifies this as the error management extensions block header. In this            |
 implementation this is the last block and therefore the EF_PTR is a NULL pointer.                  |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_ERB_HDR	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_ERB_LT_ERR_DET = SRIO Logical/Transport Layer Error Detect
 *
 * SRIO Logical/Transport Layer Error Detect
 *

     ==============================================================
     SRIOMAINT(0..1)_ERB_LT_ERR_DET Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31>    IO_ERR   R/W      0x0         0         Received a response of ERROR for an IO Logical     |   
                                                 Layer Request.  This includes all Maintenance and  |
                                                 Memory Responses not destined for the RX Soft      |
                                                 Packet FIFO. When SRIO receives an ERROR response  |
                                                 for a read, the issuing core or DPI DMA engine     |
                                                 receives result bytes with all bits set. In the    |
                                                 case of writes with response, this bit is the only |
                                                 indication of failure.                             |
 <30>    MSG_ERR  R/W      0x0         0         Received a response of ERROR for an outgoing       |   
                                                 message segment. This bit is the only direct       |
                                                 indication of a MSG_ERR. When a MSG_ERR occurs,    |
                                                 SRIO drops the message segment and will not set    |
                                                 SRIO*_INT_REG[OMSG*] after the message             |
                                                 "transfer". NOTE: SRIO can continue to send or     |
                                                 retry other segments from the same message after   |
                                                 a MSG_ERR.                                         |
 <29>    GSM_ERR  R/W      0x0         0         Received a response of ERROR for an GSM Logical    |   
                                                 Request.  SRIO hardware never sets this bit. GSM   |
                                                 operations are not supported (outside of the Soft  |
                                                 Packet FIFO).                                      |
 <28>    MSG_FMT  R/W      0x0         0         Received an incoming Message Segment with a        |   
                                                 formating error.  A MSG_FMT error occurs when SRIO |
                                                 receives a message segment with a reserved SSIZE,  |
                                                 or a illegal data payload size, or a MSGSEG greater|
                                                 than MSGLEN, or a MSGSEG that is the duplicate of  |
                                                 one already received by an inflight message.       |
                                                 When a non-duplicate MSG_FMT error occurs, SRIO    |
                                                 drops the segment and sends an ERROR response.     |
                                                 When a duplicate MSG_FMT error occurs, SRIO        |
                                                 (internally) terminates the currently-inflight     |
                                                 message with an error and processes the duplicate, |
                                                 which may result in a new message being generated  |
                                                 internally for the duplicate.                      |
 <27>    ILL_TRAN R/W      0x0         0         Received illegal fields in the request/response    |   
                                                 packet for a supported transaction or any packet   |
                                                 with a reserved transaction type. When an ILL_TRAN |
                                                 error occurs, SRIO ignores the packet. ILL_TRAN    |
                                                 errors are 2nd priority after ILL_TGT and may mask |
                                                 other problems. Packets with ILL_TRAN errors cannot|
                                                 enter the RX Soft Packet FIFO.                     |
                                                 There are two things that can set ILL_TRAN:        |
                                                 (1) SRIO received a packet with a tt value is not  |
                                                 0 or 1, or (2) SRIO received a response to an      |
                                                 outstanding message segment whose status was not   |
                                                 DONE, RETRY, or ERROR.                             |
 <26>    ILL_TGT  R/W      0x0         0         Received a packet that contained a destination ID  |   
                                                 other than SRIOMAINT*_PRI_DEV_ID or                |
                                                 SRIOMAINT*_SEC_DEV_ID. When an ILL_TGT error       |
                                                 occurs, SRIO drops the packet. ILL_TGT errors are  |
                                                 highest priority, so may mask other problems.      |
                                                 Packets with ILL_TGT errors cannot enter the RX    |
                                                 soft packet fifo.                                  |
 <25>    MSG_TOUT R/W      0x0         0         An expected incoming message request has not been  |   
                                                 received within the time-out interval specified in |
                                                 SRIOMAINT(0..1)_PORT_RT_CTL. When a MSG_TOUT occurs,    |
                                                 SRIO (internally) terminates the inflight message  |
                                                 with an error.                                     |
 <24>    PKT_TOUT R/W      0x0         0         A required response has not been received to an    |   
                                                 outgoing memory, maintenance or message request    |
                                                 before the time-out interval specified in          |
                                                 SRIOMAINT(0..1)_PORT_RT_CTL.  When an IO or maintenance |
                                                 read request operation has a PKT_TOUT, the issuing |
                                                 core load or DPI DMA engine receive all ones for   |
                                                 the result. When an IO NWRITE_R has a PKT_TOUT,    |
                                                 this bit is the only indication of failure. When a |
                                                 message request operation has a PKT_TOUT, SRIO     |
                                                 discards the the outgoing message segment,  and    |
                                                 this bit is the only direct indication of failure. |
                                                 NOTE: SRIO may continue to send or retry other     |
                                                 segments from the same message. When one or more of|
                                                 the segments in an outgoing message have a         |
                                                 PKT_TOUT, SRIO will not set SRIO*_INT_REG[OMSG*]   |
                                                 after the message "transfer".                      |
 <23>    UNS_RESP R/W      0x0         0         An unsolicited/unexpected memory, maintenance or   |   
                                                 message response packet was received that was not  |
                                                 destined for the RX Soft Packet FIFO.  When this   |
                                                 condition is detected, the packet is dropped.      |
 <22>    UNS_TRAN R/W      0x0         0         A transaction is received that is not supported.   |   
                                                 SRIO HW will never set this bit - SRIO routes all  |
                                                 unsupported transactions to the RX soft packet     |
                                                 FIFO.                                              |
 <21:8>  NS       RAZ      NS          NS        Reserved.                                          |   
 <7:1>   NS       R/W      0x0         0         Reserved.                                          |   
 <0>     RESP_SZ  R/W      0x0         0         Received an incoming Memory or Maintenance         |   
                                                 Read response packet with a DONE status and less   |
                                                 data then expected.  This condition causes the     |
                                                 Read to be completed and an error response to be   |
                                                 returned with all the data bits set to the issuing |
                                                 Core or DMA Engine.                                |
                                                                                                    |
Notes:                                                                                              |
 This register indicates the error that was detected by the Logical or Transport logic layer.       |
 Once a bit is set in this CSR, HW will lock the register until SW writes a zero to clear all the   |
 fields.  The HW sets SRIO_INT_REG[LOG_ERB] every time it sets one of the bits.                     |
 To handle the interrupt, the following procedure may be best:                                      |
      (1) clear SRIO_INT_REG[LOG_ERB],                                                              |
      (2) read this CSR, corresponding SRIOMAINT*_ERB_LT_ADDR_CAPT_H, SRIOMAINT*_ERB_LT_ADDR_CAPT_L,|
          SRIOMAINT*_ERB_LT_DEV_ID_CAPT, and SRIOMAINT*_ERB_LT_CTRL_CAPT                            |
      (3) Write this CSR to 0.                                                                      |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_ERB_LT_ERR_DET	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_ERB_LT_ERR_EN = SRIO Logical/Transport Layer Error Enable
 *
 * SRIO Logical/Transport Layer Error Enable
 *

     ==============================================================
     SRIOMAINT(0..1)_ERB_LT_ERR_EN Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31>    IO_ERR   R/W      0x0         0         Enable reporting of an IO error response. Save and |   
                                                 lock original request transaction information in   |
                                                 all Logical/Transport Layer Capture CSRs.          |
 <30>    MSG_ERR  R/W      0x0         0         Enable reporting of a Message error response. Save |   
                                                 and lock original request transaction information  |
                                                 in all Logical/Transport Layer Capture CSRs.       |    
 <29>    GSM_ERR  R/W      0x0         0         Enable reporting of a GSM error response. Save and |   
                                                 lock original request transaction capture          |
                                                 information in all Logical/Transport Layer Capture |
                                                 CSRs.                                              |
 <28>    MSG_FMT  R/W      0x0         0         Enable reporting of a message format error. Save   |   
                                                 and lock transaction capture information in        |
                                                 Logical/Transport Layer Device ID and Control      |
                                                 Capture CSRs.                                      |
 <27>    ILL_TRAN R/W      0x0         0         Enable reporting of an illegal transaction decode  |   
                                                 error Save and lock transaction capture            |
                                                 information in Logical/Transport Layer Device ID   |
                                                 and Control Capture CSRs.                          |
 <26>    ILL_TGT  R/W      0x0         0         Enable reporting of an illegal transaction target  |   
                                                 error. Save and lock transaction capture           |
                                                 information in Logical/Transport Layer Device ID   |
                                                 and Control Capture CSRs.                          |
 <25>    MSG_TOUT R/W      0x0         0         Enable reporting of a Message Request time-out     |   
                                                 error. Save and lock transaction capture           |
                                                 information in Logical/Transport Layer Device ID   |
                                                 and Control Capture CSRs for the last Message      |
                                                 request segment packet received.                   |
 <24>    PKT_TOUT R/W      0x0         0         Enable reporting of a packet response time-out     |   
                                                 error.  Save and lock original request address in  |
                                                 Logical/Transport Layer Address Capture CSRs.      |
                                                 Save and lock original request Destination ID in   |
                                                 Logical/Transport Layer Device ID Capture CSR.     |    
 <23>    UNS_RESP R/W      0x0         0         Enable reporting of an unsolicited response error. |   
                                                 Save and lock transaction capture information in   |
                                                 Logical/Transport Layer Device ID and Control      |
                                                 Capture CSRs.                                      |
 <22>    UNS_TRAN R/W      0x0         0         Enable reporting of an unsupported transaction     |   
                                                 error.  Save and lock transaction capture          |
                                                 information in Logical/Transport Layer Device ID   |
                                                 and Control Capture CSRs.                          |
 <21:8>  NS       RAZ      NS          NS        Reserved.                                          |   
 <7:1>   NS       R/W      0x0         0         Reserved.                                          |   
 <0>     RESP_SZ  R/W      0x0         0         Enable reporting of an incoming response with      |   
                                                 unexpected data size                               |
                                                                                                    |
Notes:                                                                                              |
 This register contains the bits that control if an error condition locks the Logical/Transport     |
 Layer Error Detect and Capture registers and is reported to the system host.                       |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_ERB_LT_ERR_EN	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_ERB_LT_ADDR_CAPT_H = SRIO Logical/Transport Layer High Address Capture
 *
 * Logical/Transport Layer High Address Capture
 *

     ==============================================================
     SRIOMAINT(0..1)_ERB_LT_ADDR_CAPT_H Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  ADDR     R/W      0x0         0         Most significant 32 bits of the address associated |   
                                                 with the error. Information supplied for requests  |
                                                 and responses if available.                        |
                                                                                                    |
Notes:                                                                                              |
 This register contains error information. It is locked when a Logical/Transport error is detected  |
 and unlocked when the SRIOMAINT(0..1)_ERB_LT_ERR_DET is written to zero. This register should be        |
 written only when error detection is disabled.  This register is only required for end point       |
 transactions of 50 or 66 bits.                                                                     |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_ERB_LT_ADDR_CAPT_H	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_ERB_LT_ADDR_CAPT_L = SRIO Logical/Transport Layer Low Address Capture
 *
 * Logical/Transport Layer Low Address Capture
 *

     ==============================================================
     SRIOMAINT(0..1)_ERB_LT_ADDR_CAPT_L Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:3>  ADDR     R/W      0x0         0         Least significant 29 bits of the address           |   
                                                 associated with the error.  Bits 31:24 specify the |
                                                 request HOP count for Maintenance Operations.      |
                                                 Information supplied for requests and responses if |
                                                 available.                                         |
 <2>     NS       RAZ      NS          NS        Reserved.                                          |   
 <1:0>   XADDR    R/W      0x0         0         Extended address bits of the address associated    |   
                                                 with the error.  Information supplied for requests |
                                                 and responses if available.                        |
                                                                                                    |
Notes:                                                                                              |
 This register contains error information. It is locked when a Logical/Transport error is detected  |
 and unlocked when the SRIOMAINT(0..1)_ERB_LT_ERR_DET is written to zero.  This register should be       |
 written only when error detection is disabled.                                                     |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_ERB_LT_ADDR_CAPT_L	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_ERB_LT_DEV_ID_CAPT = SRIO Logical/Transport Layer Device ID Capture
 *
 * Logical/Transport Layer Device ID Capture
 *

     ==============================================================
     SRIOMAINT(0..1)_ERB_LT_DEV_ID_CAPT Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:24> DST_ID16 R/W      0x0         0         Most significant byte of the large transport       |   
                                                 destination ID associated with the error           |
 <23:16> DST_ID8  R/W      0x0         0         Least significant byte of the large transport      |   
                                                 destination ID or the 8-bit small transport        |
                                                 destination ID associated with the error           |
 <15:8>  SRC_ID16 R/W      0x0         0         Most significant byte of the large transport       |   
                                                 source ID associated with the error                |
 <7:0>   SRC_ID8  R/W      0x0         0         Least significant byte of the large transport      |   
                                                 source ID or the 8-bit small transport source ID   |
                                                 associated with the error                          |
                                                                                                    |
Notes:                                                                                              |
 This register contains error information. It is locked when a Logical/Transport error is detected  |
 and unlocked when the SRIOMAINT(0..1)_ERB_LT_ERR_DET is written to zero.  This register should be       |
 written only when error detection is disabled.                                                     |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_ERB_LT_DEV_ID_CAPT	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_ERB_LT_CTRL_CAPT = SRIO Logical/Transport Layer Control Capture
 *
 * Logical/Transport Layer Control Capture
 *

     ==============================================================
     SRIOMAINT(0..1)_ERB_LT_CTRL_CAPT Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:28> FTYPE    R/W      0x0         0         Format Type associated with the error              |   
 <27:24> TTYPE    R/W      0x0         0         Transaction Type associated with the error         |   
                                                 (For Messages)                                     |
                                                 Message Length                                     |
 <23:16> EXTRA    R/W      0x0         0         Additional Information                             |   
                                                 (For Messages)                                     |
                                                 23:22 Letter                                       |
                                                 21:20 Mbox                                         |
                                                 19:16 Msgseg/xmbox                                 |
                                                 Information for the last message request sent      |
                                                 for the mailbox that had an error                  |
                                                 (For Responses)                                    |
                                                 23:20 Response Request FTYPE                       |
                                                 19:16 Response Request TTYPE                       |
                                                 (For all other types)                              |
                                                 Reserved.                                          |
 <15:12> STATUS   R/W      0x0         0         Response Status.                                   |   
                                                 (For all other Requests)                           |
                                                 Reserved.                                          |
 <11:8>  SIZE     R/W      0x0         0         Size associated with the transaction.              |   
 <7>     TT       R/W      0x0         0         Transfer Type 0=ID8, 1=ID16.                       |   
 <6>     WDPTR    R/W      0x0         0         Word Pointer associated with the error.            |   
 <5>     NS       R/W      0x0         0         Reserved.                                          |   
 <4:0>   CAPT_IDX R/W      0x0         0         Capture Index. 31 - Bit set in                     |   
                                                 SRIOMAINT(0..1)_ERB_LT_ERR_DET.                         |
                                                                                                    |
Notes:                                                                                              |
 This register contains error information. It is locked when a Logical/Transport error is detected  |
 and unlocked when the SRIOMAINT(0..1)_ERB_LT_ERR_DET is written to zero.  This register should be       |
 written only when error detection is disabled.                                                     |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_ERB_LT_CTRL_CAPT	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_ERB_LT_DEV_ID = SRIO Port-write Target deviceID 
 *
 * Port-write Target deviceID
 *

     ==============================================================
     SRIOMAINT(0..1)_ERB_LT_DEV_ID Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:24> ID16     R/W      0x0         0         This is the most significant byte of the           |   
                                                 port-write destination deviceID (large transport   |
                                                 systems only)                                      |
                                                 destination ID used for Port Write errors          |
 <23:16> ID8      R/W      0x0         0         This is the port-write destination deviceID        |   
 <15>    TT       R/W      0x0         0         Transport Type used for Port Write                 |   
                                                 0 = Small Transport, ID8 Only                      |
                                                 1 = Large Transport, ID16 and ID8                  |
 <14:0>  NS       RAZ      NS          NS        Reserved.                                          |   
                                                                                                    |
Notes:                                                                                              |
 This SRIO interface does not support generating Port-Writes based on ERB Errors.  This register is |
 currently unused and should be treated as reserved.                                                |
                                                                                                    |
Clk_Rst:	SRIOMAINT_ERB_LT_DEV_ID	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_ERB_ERR_DET = SRIO Error Detect 
 *
 * Error Detect
 *

     ==============================================================
     SRIOMAINT(0..1)_ERB_ERR_DET Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:24> NS       RAZ      NS          NS        Reserved.                                          |   
 <23>    NS       R/W      0x0         0         Reserved.                                          |   
 <22>    CTL_CRC  R/W      0x0         0         Received a control symbol with a bad CRC value     |   
                                                 Complete Symbol in SRIOMAINT(0..1)_ERB_PACK_SYM_CAPT    |
 <21>    UNS_ID   R/W      0x0         0         Received an acknowledge control symbol with an     |   
                                                 unexpected ackID (packet-accepted or packet_retry) |
                                                 Partial Symbol in SRIOMAINT(0..1)_ERB_PACK_SYM_CAPT     |
 <20>    NACK     R/W      0x0         0         Received packet-not-accepted acknowledge control   |   
                                                 symbols.                                           |
                                                 Partial Symbol in SRIOMAINT(0..1)_ERB_PACK_SYM_CAPT     |
 <19>    OUT_ACK  R/W      0x0         0         Received packet with unexpected ackID value        |   
                                                 Header in SRIOMAINT(0..1)_ERB_PACK_SYM_CAPT             |
 <18>    PKT_CRC  R/W      0x0         0         Received a packet with a bad CRC value             |   
                                                 Header in SRIOMAINT(0..1)_ERB_PACK_SYM_CAPT             |
 <17>    SIZE     R/W      0x0         0         Received packet which exceeds the maximum allowed  |   
                                                 size of 276 bytes.                                 |
                                                 Header in SRIOMAINT(0..1)_ERB_PACK_SYM_CAPT             |
 <16:6>  NS       RAZ      NS          NS        Reserved.                                          |   
 <5>     BAD_ACK  R/W      0x0         0         Link_response received with an ackID that is not   |   
                                                 outstanding.                                       |  
                                                 Partial Symbol in SRIOMAINT(0..1)_ERB_PACK_SYM_CAPT     |
 <4>     PROTERR  R/W      0x0         0         An unexpected packet or control symbol was         |   
                                                 received.                                          |
                                                 Partial Symbol in SRIOMAINT(0..1)_ERB_PACK_SYM_CAPT     |
 <3>     F_TOGGLE R/W      0x0         0         Reserved.                                          |   
 <2>     DEL_ERR  R/W      0x0         0         Received illegal or undefined codegroup.           |   
                                                 (either INV_DATA or INV_CHAR) (Pass 2)             |  
                                                 Complete Symbol in SRIOMAINT(0..1)_ERB_PACK_SYM_CAPT    |
 <1>     UNS_ACK  R/W      0x0         0         An unexpected acknowledge control symbol was       |   
                                                 received.                                          |
                                                 Partial Symbol in SRIOMAINT(0..1)_ERB_PACK_SYM_CAPT     |
 <0>     LNK_TOUT R/W      0x0         0         An acknowledge or link-response control symbol is  |   
                                                 not received within the specified timeout interval | 
                                                 Partial Header in SRIOMAINT(0..1)_ERB_PACK_SYM_CAPT     |
                                                                                                    |
Notes:                                                                                              |
 The Error Detect Register indicates physical layer transmission errors detected by the hardware.   |
 The HW will not update this register (i.e. this register is locked) while                          |
 SRIOMAINT*_ERB_ATTR_CAPT[VALID] is set.                                                            |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_ERB_ERR_DET	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_ERB_ERR_RATE_EN = SRIO Error Rate Enable
 *
 * Error Rate Enable
 *

     ==============================================================
     SRIOMAINT(0..1)_ERB_ERR_RATE_EN Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:24> NS       RAZ      NS          NS        Reserved.                                          |   
 <23>    NS       R/W      0x0         0         Reserved.                                          |   
 <22>    CTL_CRC  R/W      0x0         0         Enable error rate counting of control symbols with |   
                                                 bad CRC values                                     |
 <21>    UNS_ID   R/W      0x0         0         Enable error rate counting of acknowledge control  |   
                                                 symbol with unexpected ackIDs                      |
                                                 (packet-accepted or packet_retry)                  |
 <20>    NACK     R/W      0x0         0         Enable error rate counting of packet-not-accepted  |   
                                                 acknowledge control symbols.                       |
 <19>    OUT_ACK  R/W      0x0         0         Enable error rate counting of received packet with |   
                                                 unexpected ackID value                             |  
 <18>    PKT_CRC  R/W      0x0         0         Enable error rate counting of received a packet    |   
                                                 with a bad CRC value                               |
 <17>    SIZE     R/W      0x0         0         Enable error rate counting of received packet      |   
                                                 which exceeds the maximum size of 276 bytes.       |
 <16:6>  NS       RAZ      NS          NS        Reserved.                                          |   
 <5>     BAD_ACK  R/W      0x0         0         Enable error rate counting of link_responses with  |   
                                                 an ackID that is not outstanding.                  |  
 <4>     PROTERR  R/W      0x0         0         Enable error rate counting of unexpected packet or |   
                                                 control symbols received.                          |
 <3>     F_TOGGLE R/W      0x0         0         Reserved.                                          |   
 <2>     DEL_ERR  R/W      0x0         0         Enable error rate counting of illegal or undefined |   
                                                 codegroups (either INV_DATA or INV_CHAR). (Pass 2) |  
 <1>     UNS_ACK  R/W      0x0         0         Enable error rate counting of unexpected           |   
                                                 acknowledge control symbols received.              |
 <0>     LNK_TOUT R/W      0x0         0         Enable error rate counting of acknowledge or       |   
                                                 link-response control symbols not received within  |
                                                 the specified timeout interval                     | 
                                                                                                    |
Notes:                                                                                              |
 This register contains the bits that control when an error condition is allowed to increment the   |
 error rate counter in the Error Rate Threshold Register and lock the Error Capture registers.      |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_ERB_ERR_RATE_EN	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_ERB_ATTR_CAPT = SRIO Attributes Capture
 *
 * Attributes Capture
 *

     ==============================================================
     SRIOMAINT(0..1)_ERB_ATTR_CAPT Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:29> INF_TYPE R/W      0x0         0         Type of Information Logged.                        |   
                                                   000 - Packet                                     |
                                                   010 - Short Control Symbol                       |
                                                         (use only first capture register)          |
                                                   All Others Reserved                              |
 <28:24> ERR_TYPE R/W      0x0         0         The encoded value of the 31 minus the bit in       |   
                                                 SRIOMAINT(0..1)_ERB_ERR_DET that describes the error    |
                                                 captured in SRIOMAINT(0..1)_ERB_*CAPT Registers.        |
                                                 (For example a value of 5 indicates 31-5 = bit 26) | 
 <23:1>  NS       RAZ      NS          NS        Reserved.                                          |   
 <0>     VALID    R/W0C    0x0         0         This bit is set by hardware to indicate that the   |   
                                                 Packet/control symbol capture registers contain    |
                                                 valid information. For control symbols, only       |
                                                 capture register 0 will contain meaningful         |
                                                 information.  This bit must be cleared by software |
                                                 to allow capture of other errors.                  |
                                                                                                    |
Notes:                                                                                              |
 This register contains the information captured during the error.                                  |
 The HW will not update this register (i.e. this register is locked) while                          |
 VALID is set in this CSR.                                                                          |
 The HW sets SRIO_INT_REG[PHY_ERB] every time it sets VALID in this CSR.                            |
 To handle the interrupt, the following procedure may be best:                                      |
      (1) clear SRIO_INT_REG[PHY_ERB],                                                              |
      (2) read this CSR, corresponding SRIOMAINT*_ERB_ERR_DET, SRIOMAINT*_ERB_PACK_SYM_CAPT,        |
          SRIOMAINT*_ERB_PACK_CAPT_1, SRIOMAINT*_ERB_PACK_CAPT_2, and SRIOMAINT*_ERB_PACK_CAPT_3    |
      (3) Write VALID in this CSR to 0.                                                             |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_ERB_ATTR_CAPT	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_ERB_PACK_SYM_CAPT = SRIO Packet/Control Symbol Capture
 *
 * Packet/Control Symbol Capture
 *

     ==============================================================
     SRIOMAINT(0..1)_ERB_PACK_SYM_CAPT Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  CAPTURE  R/W      0x0         0         Control Character and Control Symbol or Bytes 0 to |   
                                                 3 of Packet Header                                 |
                                                 The Control Symbol consists of                     |
                                                   31:24 - SC Character (0 in Partial Symbol)       |
                                                   23:21 - Stype 0                                  |
                                                   20:16 - Parameter 0                              |
                                                   15:11 - Parameter 1                              |
                                                   10: 8 - Stype 1 (0 in Partial Symbol)            |
                                                    7: 5 - Command (0 in Partial Symbol)            |
                                                    4: 0 - CRC5    (0 in Partial Symbol)            |
Notes:                                                                                              |
 This register contains either captured control symbol information or the first 4 bytes of captured |
 packet information.  The Errors that generate Partial Control Symbols can be found in              |
 SRIOMAINT*_ERB_ERR_DET.  The HW will not update this register (i.e. this register is locked) while |
 SRIOMAINT*_ERB_ATTR_CAPT[VALID] is set.  This register should only be read while this bit is set.  |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_ERB_PACK_SYM_CAPT	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_ERB_PACK_CAPT_1 = SRIO Packet Capture 1
 *
 * Packet Capture 1
 *

     ==============================================================
     SRIOMAINT(0..1)_ERB_PACK_CAPT_1 Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  CAPTURE  R/W      0x0         0         Bytes 4 thru 7 of the packet header.               |   
                                                                                                    |
Notes:                                                                                              |
 Error capture register 1 contains either long symbol capture information or bytes 4 through 7 of   |
 the packet header.                                                                                 |
 The HW will not update this register (i.e. this register is locked) while                          |
 SRIOMAINT*_ERB_ATTR_CAPT[VALID] is set.  This register should only be read while this bit is set.  |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_ERB_PACK_CAPT_1	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_ERB_PACK_CAPT_2 = SRIO Packet Capture 2
 *
 * Packet Capture 2
 *

     ==============================================================
     SRIOMAINT(0..1)_ERB_PACK_CAPT_2 Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  CAPTURE  R/W      0x0         0         Bytes 8 thru 11 of the packet header.              |   
                                                                                                    |
Notes:                                                                                              |
 Error capture register 2 contains bytes 8 through 11 of the packet header.                         |
 The HW will not update this register (i.e. this register is locked) while                          |
 SRIOMAINT*_ERB_ATTR_CAPT[VALID] is set.  This register should only be read while this bit is set.  |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_ERB_PACK_CAPT_2	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_ERB_PACK_CAPT_3 = SRIO Packet Capture 3
 *
 * Packet Capture 3
 *

     ==============================================================
     SRIOMAINT(0..1)_ERB_PACK_CAPT_3 Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  CAPTURE  R/W      0x0         0         Bytes 12 thru 15 of the packet header.             |   
                                                                                                    |
Notes:                                                                                              |
 Error capture register 3 contains bytes 12 through 15 of the packet header.                        |
 The HW will not update this register (i.e. this register is locked) while                          |
 SRIOMAINT*_ERB_ATTR_CAPT[VALID] is set.  This register should only be read while this bit is set.  |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_ERB_PACK_CAPT_3	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_ERB_ERR_RATE = SRIO Error Rate
 *
 * Error Rate
 *

     ==============================================================
     SRIOMAINT(0..1)_ERB_ERR_RATE Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:24> ERR_BIAS R/W      0x80        0x80       These bits provide the error rate bias value.     |   
                                                   0x00 - do not decrement the error rate counter   |
                                                   0x01 - decrement every 1ms (+/-34%)              |
                                                   0x02 - decrement every 10ms (+/-34%)             |
                                                   0x04 - decrement every 100ms (+/-34%)            |
                                                   0x08 - decrement every 1s (+/-34%)               |
                                                   0x10 - decrement every 10s (+/-34%)              |
                                                   0x20 - decrement every 100s (+/-34%)             |
                                                   0x40 - decrement every 1000s (+/-34%)            |
                                                   0x80 - decrement every 10000s (+/-34%)           |
                                                   All other values are reserved                    |
 <23:18> NS       RAZ      NS          NS        Reserved.                                          |   
 <17:16> RATE_LIM R/W      0x0         0         These bits limit the incrementing of the error     |   
                                                 rate counter above the failed threshold trigger.   |
                                                   00 - only count 2 errors above                   |
                                                   01 - only count 4 errors above                   |
                                                   10 - only count 16 error above                   |
                                                   11 - do not limit incrementing the error rate ct | 
 <15:8>  PK_RATE  R/W      0x0         NS        Peak Value attainted by the error rate counter     |   
 <7:0>   RATE_CNT R/W      0x0         NS        These bits maintain a count of the number of       |   
                                                 transmission errors that have been detected by the |
                                                 port, decremented by the Error Rate Bias           |
                                                 mechanism, to create an indication of the link     |
                                                 error rate.                                        |
                                                                                                    |
Notes:                                                                                              |
 The Error Rate register is used with the Error Rate Threshold register to monitor and control the  |
 reporting of transmission errors.                                                                  |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_ERB_ERR_RATE	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_ERB_ERR_RATE_THR = SRIO Error Rate Threshold
 *
 * Error Rate Threshold
 *

     ==============================================================
     SRIOMAINT(0..1)_ERB_ERR_RATE_THR Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:24> FAIL_TH  R/W      0xFF         0xFF     These bits provide the threshold value for         |   
                                                 reporting an error condition due to a possibly     |
                                                 broken link.                                       |
                                                   0x00 - Disable the Error Rate Failed Threshold   |
                                                          Trigger                                   |
                                                   0x01 - Set the error reporting threshold to 1    |
                                                   0x02 - Set the error reporting threshold to 2    |
                                                   ...                                              |
                                                   0xFF - Set the error reporting threshold to 255  |
 <23:16> DGRAD_TH R/W      0xFF         0x80     These bits provide the threshold value for         |   
                                                 reporting an error condition due to a possibly     |
                                                 degrading link.                                    |
                                                   0x00 - Disable the Degrade Rate Failed Threshold |
                                                          Trigger                                   |
                                                   0x01 - Set the error reporting threshold to 1    |
                                                   0x02 - Set the error reporting threshold to 2    |
                                                   ...                                              |
                                                   0xFF - Set the error reporting threshold to 255  |
 <15:0>  NS       RAZ      NS          NS        Reserved.                                          |   
                                                                                                    |
Notes:                                                                                              |
 The Error Rate Threshold register is used to control the reporting of errors to the link status.   |
 Typically the Degraded Threshold is less than the Fail Threshold.                                  |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_ERB_ERR_RATE_THR	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_IR_BUFFER_CONFIG = SRIO Buffer Configuration
 *
 * Buffer Configuration
 *

     ==============================================================
     SRIOMAINT(0..1)_IR_BUFFER_CONFIG Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:28> TX_WM0   R/W      0x4         3         Transmitter Flow Control Priority 0 Threshold.     |   
                                                 Number of Receive Buffers available before packet  |
                                                 can be scheduled for transmission.                 |
                                                 Maximum Value 8.                                   |
                                                 Generally, TX_WM0 Must be > TX_WM1 to reserve      |
                                                 buffers for priority 1-3 packets when transmitting |
                                                 in transmitter-controlled flow control mode.       |
                                                 TX_WM0 is not used by the hardware when TX_FLOW=0  |
                                                 or whenever transmitting in                        |
                                                 receiver-controlled flow-control mode.             |
 <27:24> TX_WM1   R/W      0x3         2         Transmitter Flow Control Priority 1 Threshold.     |   
                                                 Number of Receive Buffers available before packet  |
                                                 can be scheduled for transmission.                 |
                                                 Maximum Value 8.                                   |
                                                 Generally, TX_WM1 Must be > TX_WM2 to reserve      |
                                                 buffers for priority 2-3 packets when transmitting |
                                                 in transmitter-controlled flow control mode.       |
                                                 TX_WM1 is not used by the hardware when TX_FLOW=0  |
                                                 or whenever transmitting in                        |
                                                 receiver-controlled flow-control mode.             |
 <23:20> TX_WM2   R/W      0x2         1         Transmitter Flow Control Priority 2 Threshold.     |   
                                                 Number of Receive Buffers available before packet  |
                                                 can be scheduled for transmission.                 |
                                                 Maximum Value 8.                                   |
                                                 Generally, TX_WM2 Must be > 0 to reserve a         |
                                                 buffer for priority 3 packets when transmitting    |
                                                 in transmitter-controlled flow control mode.       |
                                                 TX_WM2 is not used by the hardware when TX_FLOW=0  |
                                                 or whenever transmitting in                        |
                                                 receiver-controlled flow-control mode.             |
 <19:3>  NS       R/W      0x0         0         Reserved.                                          |   
 <2>     TX_FLOW  R/W      0x0         0         Controls whether Transmitter Flow Control is       |   
                                                 permitted on this device.                          |
                                                   0 - Disabled                                     |
                                                   1 - Permitted                                    |
                                                 The reset value of this field is                   |
                                                 SRIO*_IP_FEATURE[TX_FLOW].                         |
 <1>     TX_SYNC  R/W      0x0         0         Controls whether the synchronizers are enabled     |   
                                                 between the SRIO TXCLK and the Internal Clocks.    |
                                                   0 - Synchronizers are enabled                    |
                                                   1 - Synchronizers are disabled                   |
 <0>     RX_SYNC  R/W      0x0         0         Controls whether the synchronizers are enabled     |   
                                                 between the SRIO RXCLK and the Internal Clocks.    |
                                                   0 - Synchronizers are enabled                    |
                                                   1 - Synchronizers are disabled                   |
                                                                                                    |
Notes:                                                                                              |
 This register controls the operation of the SRIO Core buffer mux logic.                            |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_IR_BUFFER_CONFIG	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_IR_SP_TX_CTRL = SRIO Soft Packet FIFO Transmit Control 
 *
 * Soft Packet FIFO Transmit Control
 *

     ==============================================================
     SRIOMAINT(0..1)_IR_SP_TX_CTRL Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:16> OCTETS   R/W      0x0         0         Writing a non-zero value (N) to this field arms    |   
                                                 the packet FIFO for packet transmission. The FIFO  |
                                                 control logic will transmit the next N bytes       |
                                                 written 4-bytes at a time to the                   |
                                                 SRIOMAINT(0..1)_IR_SP_TX_DATA Register and create a     |
                                                 single RapidIO packet.                             |
 <15:0>  NS       RAZ      NS          NS        Reserved.                                          |   
                                                                                                    |
Notes:                                                                                              |
 This register is used to configure and control the transmission of packets using the soft packet   |
 FIFO.                                                                                              |
                                                                                                    |
Clk_Rst:	SRIOMAINT_IR_SP_TX_CTRL	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_IR_SP_TX_STAT = SRIO Soft Packet FIFO Transmit Status
 *
 * Soft Packet FIFO Transmit Status
 *

     ==============================================================
     SRIOMAINT(0..1)_IR_SP_TX_STAT Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:16> OCTETS   RO       0x0         0         This field shows how many octets are still to be   |   
                                                 loaded in the current packet.                      |
 <15:12> BUFFERS  RO       0x0         0         This field indicates how many complete packets are |   
                                                 stored in the Tx FIFO.  The field always reads     |
                                                 zero in the current hardware.                      |
 <11:5>  NS       RAZ      NS          NS        Reserved.                                          |   
 <4>     FULL     RO       0x0         0         This bit is set when the value of Buffers Filled   |   
                                                 equals the number of available transmission        |
                                                 buffers.                                           |
 <3:0>   FIFO_ST  RO       0x0         0         These bits display the state of the state machine  |   
                                                 that controls loading of packet data into the TX   |
                                                 FIFO. The enumeration of states are as follows:    |
                                                   0000 - Idle                                      |
                                                   0001 - Armed                                     |
                                                   0010 - Active                                    |
                                                   All other states are reserved.                   |
                                                                                                    |
Notes:                                                                                              |
 This register is used to monitor the transmission of packets using the soft packet FIFO.           |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_IR_SP_TX_STAT	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_IR_SP_TX_DATA = SRIO Soft Packet FIFO Transmit Data
 *
 * Soft Packet FIFO Transmit Data
 *

     ==============================================================
     SRIOMAINT(0..1)_IR_SP_TX_DATA Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PKT_DATA R/W      0x0         0         This register is used to write packet data to the  |   
                                                 Tx FIFO. Reads of this register will return zero.  |
                                                                                                    |
Notes:                                                                                              |
 This register is used to write data to the soft packet FIFO.  The format of the packet follows the |
Internal Packet Format (add link here).  Care must be taken on creating TIDs for the packets which  |
generate a response.  Bits [7:6] of the 8 bit TID must be set for all Soft Packet FIFO generated    |
packets.  TID values of 0x00 - 0xBF are reserved for hardware generated Tags.  The remainer of the  |
TID[5:0] must be unique for each packet in flight and cannot be reused until a response is received |
in the SRIOMAINT(0..1)_IR_SP_RX_DATA register.                                                           |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_IR_SP_TX_DATA	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_IR_SP_RX_CTRL = SRIO Soft Packet FIFO Receive Control
 *
 * Soft Packet FIFO Receive Control
 *

     ==============================================================
     SRIOMAINT(0..1)_IR_SP_RX_CTRL Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:1>  NS       RAZ      NS          NS        Reserved.                                          |   
 <0>     OVERWRT  R/W      0x0         0         When clear, SRIO drops received packets that should|   
                                                 enter the soft packet FIFO when the FIFO is full.  |
                                                 When set, SRIO                                     |
                                                 stalls received packets that should enter the soft |
                                                 packet FIFO when the FIFO is full. SRIO may stop   |
                                                 receiving any packets in this stall case if        |
                                                 software does not drain the receive soft packet    |
                                                 FIFO.                                              |
                                                                                                    |
Notes:                                                                                              |
 This register is used to configure events generated by the reception of packets using the soft     |
packet FIFO.                                                                                        |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_IR_SP_RX_CTRL	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_IR_SP_RX_STAT = SRIO Soft Packet FIFO Receive Status
 *
 * Soft Packet FIFO Receive Status
 *

     ==============================================================
     SRIOMAINT(0..1)_IR_SP_RX_STAT Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:16> OCTETS   RO       0x0         0         This field shows how many octets are remaining     |   
                                                 in the current packet in the RX FIFO.              |
 <15:12> BUFFERS  RO       0x0         0         This field indicates how many complete packets are |   
                                                 stored in the Rx FIFO.                             |
 <11:5>  NS       RAZ      NS          NS        Reserved.                                          |   
 <4>     FULL     RO       0x0         0         This bit is set when the value of Buffers Filled   |   
                                                 equals the number of available reception buffers.  |
                                                 This bit always reads zero in Pass 1               |
 <3:0>   FIFO_ST  RO       0x0         0         These bits display the state of the state machine  |   
                                                 that controls loading of packet data into the RX   |
                                                 FIFO. The enumeration of states are as follows:    |
                                                   0000 - Idle                                      |
                                                   0001 - Armed                                     |
                                                   0010 - Active                                    |
                                                   All other states are reserved.                   |
                                                                                                    |
Notes:                                                                                              |
 This register is used to monitor the reception of packets using the soft packet FIFO.              |
 The HW sets SRIO_INT_REG[SOFT_RX] every time a packet arrives in the soft packet FIFO. To read     |
 out (one or more) packets, the following procedure may be best:                                    |
      (1) clear SRIO_INT_REG[SOFT_RX],                                                              |
      (2) read this CSR to determine how many packets there are,                                    |
      (3) read the packets out (via SRIOMAINT*_IR_SP_RX_DATA).                                      |
 This procedure could lead to situations where SOFT_RX will be set even though there are currently  |
 no packets - the SW interrupt handler would need to properly handle this case                      |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_IR_SP_RX_STAT	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_IR_SP_RX_DATA = SRIO Soft Packet FIFO Receive Data
 *
 * Soft Packet FIFO Receive Data
 *

     ==============================================================
     SRIOMAINT(0..1)_IR_SP_RX_DATA Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PKT_DATA RO       0x0         0         This register is used to read packet data from the |   
                                                 RX FIFO.                                           |
                                                                                                    |
Notes:                                                                                              |
 This register is used to read data from the soft packet FIFO.  The Soft Packet FIFO contains the   |
 majority of the packet data received from the SRIO link.  The packet does not include the Control  |
 Symbols or the initial byte containing AckId, 2 Reserved Bits and the CRF.  In the case of packets |
 with less than 80 bytes (including AckId byte) both the trailing CRC and Pad (if present) are      |
 included in the FIFO and Octet Count.  In the case of a packet with exactly 80 bytes (including    |
 the AckId byte) the CRC is removed and the Pad is maintained so the Octet Count will read 81 bytes |
 instead of the expected 83.  In cases over 80 bytes the CRC at 80 bytes is removed but the         |
 trailing CRC and Pad (if necessary) are present.                                                   |   
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_IR_SP_RX_DATA	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_IR_PI_PHY_CTRL = SRIO Platform Independent PHY Control
 *
 * Platform Independent PHY Control
 *

     ==============================================================
     SRIOMAINT(0..1)_IR_PI_PHY_CTRL Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31>    TX_RESET R/W      0x1         1         Outgoing PHY Logic Reset.  0=Reset, 1=Normal Op    |   
 <30>    RX_RESET R/W      0x1         1         Incoming PHY Logic Reset.  0=Reset, 1=Normal Op    |   
 <29>    NS       R/W      0x0         0         Reserved.                                          |   
 <28:27> LOOPBACK R/W      0x0         0         These bits control the state of the loopback       |   
                                                 control vector on the transceiver interface.  The  |
                                                 loopback modes are enumerated as follows:          |
                                                   00 - No Loopback                                 |
                                                   01 - Near End PCS Loopback                       |
                                                   10 - Far End PCS Loopback                        |
                                                   11 - Both Near and Far End PCS Loopback          |
 <26:0>  NS       RAZ      NS          NS        Reserved.                                          |   
                                                                                                    |
Notes:                                                                                              |
 This register is used to control platform independent operating modes of the transceivers. These   |
 control bits are uniform across all platforms.                                                     |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_IR_PI_PHY_CTRL	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_IR_PI_PHY_STAT = SRIO Platform Independent PHY Status
 *
 * Platform Independent PHY Status
 *

     ==============================================================
     SRIOMAINT(0..1)_IR_PI_PHY_STAT Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:10>  NS       RAZ      NS          NS        Reserved.                                         |   
 <9:0>    INIT_SM  RO       0x0         0         Initialization State Machine                      |   
                                                   001 - Silent                                     |
                                                   002 - Seek                                       |
                                                   004 - Discovery                                  |
                                                   008 - 1x_Mode_Lane0                              |
                                                   010 - 1x_Mode_Lane1                              |
                                                   020 - 1x_Mode_Lane2                              |
                                                   040 - 1x_Recovery                                |
                                                   080 - 2x_Mode                                    |
                                                   100 - 2x_Recovery                                |
                                                   200 - 4x_Mode                                    |
                                                   All others are reserved                          |
                                                                                                    |
Notes:                                                                                              |
 This register displays the status of the link initialization state machine.  Changes to this state |
 cause the SRIO(0..1)_INT_REG.LINK_UP or SRIO(0..1)_INT_REG.LINK_DOWN interrupts.                             |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_IR_PI_PHY_STAT	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_IR_PD_PHY_CTRL = SRIO Platform Dependent PHY Control
 *
 * Platform Dependent PHY Control
 *

     ==============================================================
     SRIOMAINT(0..1)_IR_PD_PHY_CTRL Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  PD_CTRL  R/W      0x0         0         Unused Register available for testing              |   
                                                                                                    |
Notes:                                                                                              |
 This register can be used for testing.  The register is otherwise unused by the hardware.          |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_IR_PD_PHY_CTRL	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_IR_PD_PHY_STAT = SRIO Platform Dependent PHY Status
 *
 * Platform Dependent PHY Status
 *

     ==============================================================
     SRIOMAINT(0..1)_IR_PD_PHY_STAT Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:16> NS       RAZ      NS          NS        Reserved.                                          |   
 <15:13> LN3_RX   RO       0x0         0         Phy Lane 3 RX Status                               |   
                                                  0XX = Normal Operation                            |
                                                  100 = 8B/10B Error                                |
                                                  101 = Elastic Buffer Overflow (Data Lost)         |
                                                  110 = Elastic Buffer Underflow (Data Corrupted)   |
                                                  111 = Disparity Error                             |
 <12>    LN3_DIS  RO       0x0         0         Lane 3 Phy Clock Disabled                          |   
                                                  0 = Phy Clock Valid                               |
                                                  1 = Phy Clock InValid                             |
 <11:9>  LN2_RX   RO       0x0         0         Phy Lane 2 RX Status                               |   
                                                  0XX = Normal Operation                            |
                                                  100 = 8B/10B Error                                |
                                                  101 = Elastic Buffer Overflow (Data Lost)         |
                                                  110 = Elastic Buffer Underflow (Data Corrupted)   |
                                                  111 = Disparity Error                             |
 <8>     LN2_DIS  RO       0x0         0         Lane 2 Phy Clock Disabled                          |   
                                                  0 = Phy Clock Valid                               |
                                                  1 = Phy Clock InValid                             |
 <7:5>   LN1_RX   RO       0x0         0         Phy Lane 1 RX Status                               |   
                                                  0XX = Normal Operation                            |
                                                  100 = 8B/10B Error                                |
                                                  101 = Elastic Buffer Overflow (Data Lost)         |
                                                  110 = Elastic Buffer Underflow (Data Corrupted)   |
                                                  111 = Disparity Error                             |
 <4>     LN1_DIS  RO       0x0         0         Lane 1 Phy Clock Disabled                          |   
                                                  0 = Phy Clock Valid                               |
                                                  1 = Phy Clock InValid                             |
 <3:1>   LN0_RX   RO       0x0         0         Phy Lane 0 RX Status                               |   
                                                  0XX = Normal Operation                            |
                                                  100 = 8B/10B Error                                |
                                                  101 = Elastic Buffer Overflow (Data Lost)         |
                                                  110 = Elastic Buffer Underflow (Data Corrupted)   |
                                                  111 = Disparity Error                             |
 <0>     LN0_DIS  RO       0x0         0         Lane 0 Phy Clock Disabled                          |   
                                                  0 = Phy Clock Valid                               |
                                                  1 = Phy Clock InValid                             |
                                                                                                    |
Notes:                                                                                              |
 This register is used to monitor PHY status on each lane.  They are documented here to assist in   |
 debugging only.  The lane numbers take into account the lane swap pin.                             |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_IR_PD_PHY_STAT	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_M2S_BAR0_START0 = SRIO Device Access BAR0 MSB Start
 *
 * The starting SRIO address to forwarded to the NPEI Configuration Space.
 *

     ==============================================================
     SRIOMAINT(0..1)_M2S_BAR0_START0 Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:16> ADDR64   R/W      0x0         0         SRIO Address 63:48                                 |   
 <15:0>  ADDR48   R/W      0x0         0         SRIO Address 47:32                                 |   
                                                                                                    |
Notes:                                                                                              |
 This register specifies the 50-bit and 66-bit SRIO Address mapped to the BAR0 Space.  See          |
 SRIOMAINT(0..1)_M2S_BAR0_START1 for more details. This register is only writeable over SRIO if the      |
 SRIO(0..1)_ACC_CTRL.DENY_BAR0 bit is zero.                                                              |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_M2S_BAR0_START0	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_M2S_BAR0_START1 = SRIO Device Access BAR0 LSB Start
 *
 * The starting SRIO address to forwarded to the NPEI Configuration Space.
 *

     ==============================================================
     SRIOMAINT(0..1)_M2S_BAR0_START1 Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:14> ADDR32   R/W      0x0         0         SRIO Address 31:14                                 |   
 <13:3>  NS       RAZ      NS          NS        Reserved.                                          |   
 <2:1>   ADDR66   R/W      0x0         0         SRIO Address 65:64                                 |   
 <0>     ENABLE   R/W      0x0         0         Enable BAR0 Access                                 |   
                                                                                                    |
Notes:                                                                                              |
 This register specifies the SRIO Address mapped to the BAR0 RSL Space.  If the transaction has not |
 already been mapped to SRIO Maintenance Space through the SRIOMAINT_LCS_BA[1:0] registers, if      |
 ENABLE is set and the address bits match then the SRIO Memory transactions will map to Octeon SLI  |
 Registers.  34-bit address transactions require a match in SRIO Address 33:14 and require all the  |
 other bits in ADDR48, ADDR64 and ADDR66 fields to be zero.  50-bit address transactions a match of |
 SRIO Address 49:14 and require all the other bits of ADDR64 and ADDR66 to be zero.  66-bit address |
 transactions require matches of all valid address field bits.  Reads and  Writes through Bar0      |
 have a size limit of 8 bytes and cannot cross a 64-bit boundry.  All accesses with sizes greater   |
 than this limit will be ignored and return an error on any SRIO responses.  Note: ADDR48 and       |
 ADDR64 fields are located in SRIOMAINT(0..1)_M2S_BAR0_START0.  This register is only writeable over     |
 SRIO if the SRIO(0..1)_ACC_CTRL.DENY_BAR0 bit is zero.                                                  |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_M2S_BAR0_START1	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===
 
 *
 *                  SRIOMAINT_M2S_BAR1_START0 = SRIO Device Access BAR1 MSB Start
 *
 * The starting SRIO address to forwarded to the BAR1 Memory Space.
 *

     ==============================================================
     SRIOMAINT(0..1)_M2S_BAR1_START0 Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:16> ADDR64   R/W      0x0         0         SRIO Address 63:48                                 |   
 <15:0>  ADDR48   R/W      0x0         0         SRIO Address 47:32                                 |   
                                                                                                    |
Notes:                                                                                              |
 This register specifies the 50-bit and 66-bit SRIO Address mapped to the BAR1 Space.  See          |
 SRIOMAINT(0..1)_M2S_BAR1_START1 for more details.  This register is only writeable over SRIO if the     |
 SRIO(0..1)_ACC_CTRL.DENY_BAR1 bit is zero.                                                              |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_M2S_BAR1_START0	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_M2S_BAR1_START1 = SRIO Device to BAR1 Start
 *
 * The starting SRIO address to forwarded to the BAR1 Memory Space.
 *

     ==============================================================
     SRIOMAINT(0..1)_M2S_BAR1_START1 Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:20> ADDR32   R/W      0x0         0         SRIO Address 31:20                                 |   
                                                 With BARSIZE < 12, the upper 12-BARSIZE            |
                                                 bits of this field are used, and the lower BARSIZE |
                                                 bits of this field are unused by the SRIO hardware.|
 <19:6>  NS       RAZ      NS          NS        Reserved.                                          |   
 <5:3>   BARSIZE  R/W      0x0         0         Bar Size.                                          |   
                                                                      SRIO_Address*                 |
                                                                 ---------------------              |
                                                                /                     \             |
                                                 BARSIZE         BAR     Entry   Entry    Entry     |
                                                 Value   BAR    compare  Select  Offset   Size      |
                                                         Size    bits    bits    bits               |
                                                  0       1MB    65:20   19:16   15:0     64KB      |
                                                  1       2MB    65:21   20:17   16:0    128KB      |
                                                  2       4MB    65:22   21:18   17:0    256KB      |
                                                  3       8MB    65:23   22:19   18:0    512KB      |
                                                  4      16MB    65:24   23:20   19:0      1MB      |
                                                  5      32MB    65:25   24:21   20:0      2MB      |
                                                  6      64MB    65:26   25:22   21:0      4MB      |
                                                  7     128MB    65:27   26:23   22:0      8MB      |
                                                  8     256MB  ** not in pass 1                     |
                                                  9     512MB  ** not in pass 1                     |
                                                 10       1GB  ** not in pass 1                     |
                                                 11       2GB  ** not in pass 1                     |
                                                 12       4GB  ** not in pass 1                     |
                                                 13       8GB  ** not in pass 1                     |
                                                                                                    |
                                                 *The SRIO Transaction Address                      |
                                                 The entry select bits is the @ that  select an     |
                                                 SRIOMAINT(0..1)_BAR1_IDX@ entry.                        |
                                                                                                    |
                                                 In O63 pass 2, BARSIZE is 4 bits (6:3 in this      |
                                                 CSR), and BARSIZE values 8-13 are implemented,     |
                                                 providing a total possible BAR1 size range from    |
                                                 1MB up to 8GB.                                     |
                                                                                                    |
 <2:1>   ADDR66   R/W      0x0         0         SRIO Address 65:64                                 |   
 <0>     ENABLE   R/W      0x0         0         Enable BAR1 Access                                 |   
                                                                                                    |
Notes:                                                                                              |
 This register specifies the SRIO Address mapped to the BAR1 Space.  If the transaction has not     |
 already been mapped to SRIO Maintenance Space through the SRIOMAINT_LCS_BA[1:0] registers and the  |
 address bits do not match enabled BAR0 addresses and if ENABLE is set and the addresses match the  |
 BAR1 addresses then SRIO Memory transactions will map to Octeon Memory Space specified by          |
 SRIOMAINT(0..1)_BAR1_IDX[31:0] registers.  The BARSIZE field determines the size of BAR1, the entry     |
 select bits, and the size of each entry. A 34-bit address matches BAR1 when it matches             |
 SRIO_Address[33:20+BARSIZE] while all the other bits in ADDR48, ADDR64 and ADDR66 are zero.        |
 A 50-bit address matches BAR1 when it matches SRIO_Address[49:20+BARSIZE] while all the            |
 other bits of ADDR64 and ADDR66 are zero.  A 66-bit address matches BAR1 when all of               |
 SRIO_Address[65:20+BARSIZE] match all corresponding address CSR field bits.  Note: ADDR48 and      |
 ADDR64 fields are located in SRIOMAINT(0..1)_M2S_BAR1_START0. This register is only writeable from SRIO |
 if the SRIO(0..1)_ACC_CTRL.DENY_BAR1 bit is zero.                                                       |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_M2S_BAR1_START1	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_BAR1_IDX@ = SRIO BAR1 Index@ Register
 *
 * Contains address index and control bits for access to memory ranges of BAR1.
 * 

     ==============================================================
     SRIOMAINT(0..1)_BAR1_IDX(0..15) Type=SRIOMAINT
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:30> NS       RAZ      NS          NS        Reserved.                                          |   
 <29:8>  LA       R/W      0x0         NS        L2/DRAM Address bits [37:16]                       |   
                                                 Not all LA[21:0] bits are used by SRIO hardware,   |
                                                 depending on SRIOMAINT(0..1)_M2S_BAR1_START1[BARSIZE].  |
                                                                                                    |
                                                                         Become                     |
                                                                         L2/DRAM                    |
                                                                         Address  Entry             |
                                                 BARSIZE   LA Bits Used   Bits    Size              |
                                                    0        LA[21:0]    [37:16]   64KB             |
                                                    1        LA[21:1]    [37:17]  128KB             |
                                                    2        LA[21:2]    [37:18]  256KB             |
                                                    3        LA[21:3]    [37:19]  512KB             |
                                                    4        LA[21:4]    [37:20]    1MB             |
                                                    5        LA[21:5]    [37:21]    2MB             |
                                                    6        LA[21:6]    [37:22]    4MB             |
                                                    7        LA[21:7]    [37:23]    8MB             |
                                                    8        ** not in pass 1                       |
                                                    9        ** not in pass 1                       |
                                                   10        ** not in pass 1                       |
                                                   11        ** not in pass 1                       |
                                                   12        ** not in pass 1                       |
                                                   13        ** not in pass 1                       |
                                                                                                    |
 <7:6>   NS       RAZ      NS          NS        Reserved.                                          |   
 <5:4>   ES       R/W      0x0         NS        Endian Swap Mode.                                  |   
                                                 0 = No Swap                                        |
                                                 1 = 64-bit Swap Bytes [ABCD_EFGH] -> [HGFE_DCBA]   |
                                                 2 = 32-bit Swap Words [ABCD_EFGH] -> [DCBA_HGFE]   |
                                                 3 = 32-bit Word Exch  [ABCD_EFGH] -> [EFGH_ABCD]   |
 <3>     NCA      R/W      0x0         0         Non-Cacheable Access Mode.  When set, transfers    |   
                                                 through this window are not cacheable.             |
 <2:1>   NS       RAZ      NS          NS        Reserved                                           |   
 <0>     ENABLE   R/W      0x0         NS        When set the selected index address is valid.      |   
                                                                                                    |
Notes:                                                                                              |
 This register specifies the Octeon address, endian swap and cache status associated with each of   |
 the 16 BAR1 entries.  The local address bits used are based on the BARSIZE field located in the    |
 SRIOMAINT(0..1)_M2S_BAR1_START0 register.  This register is only writeable over SRIO if the             |
 SRIO(0..1)_ACC_CTRL.DENY_BAR1 bit is zero.                                                              |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_BAR1_IDX[0:15]	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_M2S_BAR2_START = SRIO Device to BAR2 Start
 *
 * The starting SRIO address to forwarded to the BAR2 Memory Space.
 *

     ==============================================================
     SRIOMAINT(0..1)_M2S_BAR2_START Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:16> ADDR64   R/W      0x0         0         SRIO Address 63:48                                 |   
 <15:9>  ADDR48   R/W      0x0         0         SRIO Address 47:41                                 |   
 <8:6>   NS       RAZ      NS          NS        Reserved.                                          |   
 <5:4>   ESX      R/W      0x0         0         Endian Swap Mode used for SRIO 34-bit access.      |   
                                                 For 50/66-bit assesses Endian Swap is determine    |
                                                 by ESX XOR'd with SRIO Addr 39:38.                 |
                                                 0 = No Swap                                        |
                                                 1 = 64-bit Swap Bytes [ABCD_EFGH] -> [HGFE_DCBA]   |
                                                 2 = 32-bit Swap Words [ABCD_EFGH] -> [DCBA_HGFE]   |
                                                 3 = 32-bit Word Exch  [ABCD_EFGH] -> [EFGH_ABCD]   |
 <3>     CAX      R/W      0x0         0         Cacheable Access Mode.  When set transfer is       |   
                                                 cached.  This bit is used for SRIO 34-bit access.  |
                                                 For 50/66-bit accessas NCA is determine by CAX     |
                                                 XOR'd with SRIO Addr 40.                           |
 <2:1>   ADDR66   R/W      0x0         0         SRIO Address 65:64                                 |   
 <0>     ENABLE   R/W      0x0         0         Enable BAR2 Access                                 |   
                                                                                                    |
Notes:                                                                                              |
 This register specifies the SRIO Address mapped to the BAR2 Space.  If ENABLE is set and the       |
 address bits do not match and other enabled BAR address and match the BAR2 addresses then the SRIO |
 Memory transactions will map to Octeon BAR2 Memory Space.  34-bit address transactions require     |
 ADDR66, ADDR64 and ADDR48 fields set to zero and supplies zeros for unused addresses 40:34.        |
 50-bit address transactions a match of SRIO Address 49:41 and require all the other bits of ADDR64 |
 and ADDR66 to be zero.  66-bit address transactions require matches of all valid address field     |
 bits.  This register is only writeable over SRIO if the SRIO(0..1)_ACC_CTRL.DENY_BAR2 bit is zero.      |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_M2S_BAR2_START	hclk	hrst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_SEC_DEV_ID = SRIO Secondary Device ID
 *
 * Secondary 8 and 16 bit Device IDs
 *

     ==============================================================
     SRIOMAINT(0..1)_SEC_DEV_ID Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:24> NS       RAZ      NS          NS        Reserved.                                          |   
 <23:16> ID8      R/W      0xFF        0         Secondary 8-bit Device ID                          |   
 <15:0>  ID16     R/W      0xFFFF      0         Secondary 16-bit Device ID                         |   
                                                                                                    |
Notes:                                                                                              |
 This register defines the secondary 8 and 16 bit device IDs used for large and small transport.    |
 The corresponding secondary ID must be written before the ID is enabled in the                     |
 SRIOMAINT(0..1)_SEC_DEV_CTRL register.  The primary set of device IDs are located in                    |
 SRIOMAINT(0..1)_PRI_DEV_ID register.  The secondary IDs should not be written to the same values as the |
 corresponding primary IDs.                                                                         |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_SEC_DEV_ID	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_SEC_DEV_CTRL = SRIO Secondary Device ID Control
 *
 * Control for Secondary Device IDs
 *

     ==============================================================
     SRIOMAINT(0..1)_SEC_DEV_CTRL Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:2>  NS       RAZ      NS          NS        Reserved.                                          |   
 <1>     ENABLE8  R/W      0x0         0         Enable matches to secondary 8-bit Device ID        |   
 <0>     ENABLE16 R/W      0x0         0         Enable matches to secondary 16-bit Device ID       |   
                                                                                                    |
Notes:                                                                                              |
 This register enables the secondary 8 and 16 bit device IDs used for large and small transport.    |
 The corresponding secondary ID must be written before the ID is enabled.  The secondary IDs should |
 not be enabled if the values of the primary and secondary IDs are identical.                       |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_SEC_DEV_CTRL	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_CORE_ENABLES = SRIO Core Control
 *
 * Core Control
 *

     ==============================================================
     SRIOMAINT(0..1)_CORE_ENABLES Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:5>  NS       RAZ      NS          NS        Reserved.                                          |   
 <4>     HALT     RO       0x0         0         OCTEON currently in Reset                          |   
                                                  0 = All OCTEON resources are available.           |
                                                  1 = The OCTEON is in reset. When this bit is set, |
                                                      SRIO maintenance registers can be accessed,   |
                                                      but BAR0, BAR1, and BAR2 cannot be.           |
 <3>     IMSG1    R/W      0x0         1         Allow Incoming Message Unit 1 Operations           |   
                                                 Note: This bit is cleared when the C63XX is reset  |
                                                  0 = SRIO Incoming Messages to Unit 1 ignored and  |
                                                      return error response                         |
                                                  1 = SRIO Incoming Messages to Unit 1              |
 <2>     IMSG0    R/W      0x0         1         Allow Incoming Message Unit 0 Operations           |   
                                                 Note: This bit is cleared when the C63XX is reset  |
                                                  0 = SRIO Incoming Messages to Unit 0 ignored and  |
                                                      return error response                         |
                                                  1 = SRIO Incoming Messages to Unit 0              |
 <1>     DOORBELL R/W      0x0         1         Allow Inbound Doorbell Operations                  |   
                                                 Note: This bit is cleared when the C63XX is reset  |
                                                  0 = SRIO Doorbell OPs ignored and return error    |
                                                      response                                      |
                                                  1 = SRIO Doorbell OPs Allowed                     |
 <0>     MEMORY   R/W      0x0         1         Allow Inbound/Outbound Memory Operations           |   
                                                 Note: This bit is cleared when the C63XX is reset  |
                                                  0 = SRIO Incoming Nwrites and Swrites are         |
                                                      dropped.  Incoming Nreads, Atomics and        |
                                                      NwriteRs return responses with ERROR status.  |
                                                      SRIO Incoming Maintenance BAR Memory Accesses |
                                                      are processed normally.                       |
                                                      Outgoing Store Operations are Dropped         |
                                                      Outgoing Load Operations are not issued and   |
                                                      return all 1's with an ERROR status.          |
                                                      In Flight Operations started while the bit is |
                                                      set in both directions will complete normally.|
                                                  1 = SRIO Memory Read/Write OPs Allowed            |
                                                                                                    |
Notes:                                                                                              |
 This register displays the reset state of the Octeon Core Logic while the SRIO Link is running.    |
 The bit should be set after the software has initialized the chip to allow memory operations.      |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_CORE_ENABLES	hclk	hrst_n, srst_n                                      |
----------------------------------------------------------------------------------------------------
===

 *
 *                  SRIOMAINT_BELL_STATUS = SRIO Incoming Doorbell Status
 *
 * The SRIO Incoming (RX) Doorbell Status
 *

     ==============================================================
     SRIOMAINT(0..1)_BELL_STATUS Type=SRIOMAINT
     ==============================================================

 
----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:1>  NS       RAZ      NS          NS        Reserved.                                          |   
 <0>     FULL     RO       0x0         0         Not able to receive Doorbell Transactions          |   
                                                                                                    |
Notes:                                                                                              |
 This register displays the status of the doorbells received.  If FULL is set the SRIO device will  |
 retry incoming transactions.                                                                       |
                                                                                                    |
Clk_Rst:	SRIOMAINT(0..1)_BELL_STATUS	hclk	hrst_n                                              |
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     TIM_REG_FLAGS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:3>  NS       RAZ       NS          NS       RESERVED                                               
   <2>   RESET    RAZ       0           0        Reset oneshot pulse for free-running structures        
   <1>   ENA_DWB  R/W       0           0        Enables non-zero DonwWriteBacks when set               
                                                 When set, enables the use of
                                                 DontWriteBacks during the buffer freeing
                                                 operations.
   <0>   ENA_TIM  R/W       0           0        Enables the TIM section when set                       
                                                 When set, TIM is in normal operation.
                                                 When clear, time is effectively stopped for all
                                                 rings in TIM.

Notes:
 TIM has a counter that causes a periodic tick every 1024 cycles. This counter is shared by all
 rings. (Each tick causes the HW to decrement the time offset (i.e. COUNT) for all enabled rings.)
 When ENA_TIM==0, the HW stops this shared periodic counter, so there are no more ticks, and there
 are no more new bucket traversals (for any ring).

 If ENA_TIM transitions 1->0, TIM will no longer create new bucket traversals, but there may
 have been previous ones. If there are ring bucket traversals that were already pending but
 not currently active (i.e. bucket traversals that need to be done by the HW, but haven't been yet)
 during this ENA_TIM 1->0 transition, then these bucket traversals will remain pending until
 ENA_TIM is later set to one. Bucket traversals that were already in progress will complete
 after the 1->0 ENA_TIM transition, though.
----------------------------------------------------------------------------------------------------
===

 

     ==============================================================
     TIM_REG_READ_IDX Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        RESERVED                                               
 <15:8>  INC      R/W      0           0         Increment to add to current index for next index       
 <7:0>   IDX      R/W      0           0         Index to use for next memory CSR read                  

Notes:
 Provides the read index during a CSR read operation to any of the CSRs that are physically stored
 as memories.  The names of these CSRs begin with the prefix "TIM_MEM_".
 IDX[7:0] is the read index.  INC[7:0] is an increment that is added to IDX[7:0] after any CSR read.
 The intended use is to initially write this CSR such that IDX=0 and INC=1.  Then, the entire
 contents of a CSR memory can be read with consecutive CSR read commands.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     TIM_REG_BIST_RESULT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ       NS          NS       RESERVED                                               
 <3:2>   STA      RO        X           0        BiST result of the STA   memories (0=pass, !0=fail)    
 <1:1>   NCB      RO        X           0        BiST result of the NCB   memories (0=pass, !0=fail)    
 <0:0>   CTL      RO        X           0        BiST result of the CTL   memories (0=pass, !0=fail)    

Notes:
 Access to the internal BiST results
 Each bit is the BiST result of an individual memory (per bit, 0=pass and 1=fail).
----------------------------------------------------------------------------------------------------
===

 

     ==============================================================
     TIM_REG_ERROR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        RESERVED                                               
 <15:0>  MASK     R/W1C    0           0         Bit mask indicating the rings in error                 

Notes:
 A ring is in error if its interval has elapsed more than once without having been serviced.
 During a CSR write to this register, the write data is used as a mask to clear the selected mask
 bits (mask'[15:0] = mask[15:0] & ~write_data[15:0]).
----------------------------------------------------------------------------------------------------
===
 


     ==============================================================
     TIM_REG_INT_MASK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ      NS          NS        RESERVED                                               
 <15:0>  MASK     R/W      0           0         Bit mask corresponding to TIM_REG_ERROR.MASK above     

Notes:
 Note that this CSR is present only in chip revisions beginning with pass2.
 When mask bit is set, the interrupt is enabled.
----------------------------------------------------------------------------------------------------
===
 


     ==============================================================
     TIM_MEM_RING0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:55> NS       RAZ      NS          NS        RESERVED                                               
 <54:24> BASE     R/W      0           0         Pointer[35:5] to bucket[0]                             
 <23:4>  BSIZE    R/W      0           0         Number of buckets - 1                                  
 <3:0>   RID      R/W      0           0         Ring ID                                                

Notes:
 TIM_MEM_RING0 must not be written for a ring when TIM_MEM_RING1[ENA] is set for the ring.
 Every write to TIM_MEM_RING0 clears the current bucket for the ring. (The current bucket is
 readable via TIM_MEM_DEBUG2[BUCKET],TIM_MEM_DEBUG1[BUCKET].)
 BASE is a 32-byte aligned pointer[35:0].  Only pointer[35:5] are stored because pointer[4:0] = 0.
 This CSR is a memory of 16 entries, and thus, the TIM_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===
 


     ==============================================================
     TIM_MEM_RING1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:43> NS       RAZ      NS          NS        RESERVED                                               
 <42:42> ENA      R/W      0           0         Ring timer enable                                      
                                                 When clear, the ring is disabled and TIM
                                                 will not traverse any new buckets for the ring.
 <41:39> CPOOL    R/W      0           0         Free list used to free chunks                          
 <38:26> CSIZE    R/W      0           0         Number of words per chunk                              
 <25:4>  INTERVAL R/W      0           0         Timer interval - 1, measured in 1024 cycle ticks       
 <3:0>   RID      R/W      0           0         Ring ID                                                

Notes:
 After a 1->0 transition on ENA, the HW will still complete a bucket traversal for the ring
 if it was pending or active prior to the transition. (SW must delay to ensure the completion
 of the traversal before reprogramming the ring.)
 Every write to TIM_MEM_RING1 resets the current time offset for the ring to the INTERVAL value.
 (The current time offset for the ring is readable via TIM_MEM_DEBUG0[COUNT].)
 CSIZE must be at least 16.  It is illegal to program CSIZE to a value that is less than 16.
 This CSR is a memory of 16 entries, and thus, the TIM_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===

 

     ==============================================================
     TIM_MEM_DEBUG0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ       NS          NS       RESERVED                                               
 <47:47> ENA      RO        X           0        Ring timer enable                                      
 <46:46> NS       RAZ       NS          NS       RESERVED                                               
 <45:24> COUNT    RO        X           0        Time offset for the ring                               
                                                 Set to INTERVAL and counts down by 1 every 1024
                                                 cycles when ENA==1. The HW forces a bucket
                                                 traversal (and resets COUNT to INTERVAL) whenever
                                                 the decrement would cause COUNT to go negative.
                                                 COUNT is unpredictable whenever ENA==0.
                                                 COUNT is reset to INTERVAL whenever TIM_MEM_RING1
                                                 is written for the ring.
 <23:22> NS       RAZ       NS          NS       RESERVED                                               
 <21:0>  INTERVAL RO        X           0        Timer interval - 1                                     

Notes:
 Internal per-ring state intended for debug use only - tim.ctl[47:0]
 This CSR is a memory of 16 entries, and thus, the TIM_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===

 

     ==============================================================
     TIM_MEM_DEBUG1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:51> BUCKET   RO        X           0        Current bucket[12:0]                                   
                                                 Reset to 0 whenever TIM_MEM_RING0 is written for
                                                 the ring. Incremented (modulo BSIZE) once per
                                                 bucket traversal.
                                                 See TIM_MEM_DEBUG2[BUCKET].
 <50:20> BASE     RO        X           0        Pointer[35:5] to bucket[0]                             
 <19:0>  BSIZE    RO        X           0        Number of buckets - 1                                  

Notes:
 Internal per-ring state intended for debug use only - tim.sta[63:0]
 This CSR is a memory of 16 entries, and thus, the TIM_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     TIM_MEM_DEBUG2 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:24> NS       RAZ       NS          NS       RESERVED                                               
 <23:21> CPOOL    RO        X           0        Free list used to free chunks                          
 <20:8>  CSIZE    RO        X           0        Number of words per chunk                              
 <7>     NS       RO        X           0        RESERVED                                               
 <6:0>   BUCKET   RO        X           0        Current bucket[19:13]                                  
                                                 See TIM_MEM_DEBUG1[BUCKET].

Notes:
 Internal per-ring state intended for debug use only - tim.sta[95:64]
 This CSR is a memory of 16 entries, and thus, the TIM_REG_READ_IDX CSR must be written before any
 CSR read operations to this address can be performed. 
----------------------------------------------------------------------------------------------------
===

 *
 *                  TRA_CTL = Trace Buffer Control
 *
 * Description: 
 *

     ==============================================================
     TRA(0..0)_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16>  NS       RAZ      0           0         RESERVED 				                
<15>     CLKALWAYS R/W     0           0         Conditional clock enable                               
                                                   If set, the TRA clock is never disabled.
<14>     IGNORE_O R/W      0           0         Ignore overflow during wrap mode                       
                                                   If set and wrapping mode is enabled, then tracing
                                                   will not stop at the overflow condition.  Each
                                                   write during an overflow will overwrite the
                                                   oldest, unread entry and the read pointer is
                                                   incremented by one entry.  This bit has no effect
                                                   if WRAP=0.
<13>     MCD0_ENA R/W      0           0         MCD0 enable		                                
                                                   If set and any PP sends the MCD0 signal, the
                                                   tracing is disabled.
<12>     MCD0_THR R/W      0           0         MCD0_threshold		                                
                                                   At a fill threshold event, sends an MCD0
                                                   wire pulse that can cause cores to enter debug
                                                   mode, if enabled.  This MCD0 wire pulse will not
                                                   occur while (TRA_INT_STATUS.MCD0_THR == 1).
<11>     MCD0_TRG R/W      0           0         MCD0_trigger		                                
                                                   At an end trigger event, sends an MCD0
                                                   wire pulse that can cause cores to enter debug
                                                   mode, if enabled.  This MCD0 wire pulse will not
                                                   occur while (TRA_INT_STATUS.MCD0_TRG == 1).
<10>     CIU_THR R/W      0           0          CIU_threshold		                                
                                                   When set during a fill threshold event,
                                                   TRA_INT_STATUS[CIU_THR] is set, which can cause
                                                   core interrupts, if enabled.
<9>      CIU_TRG R/W      0           0          CIU_trigger		                                
                                                   When set during an end trigger event,
                                                   TRA_INT_STATUS[CIU_TRG] is set, which can cause
                                                   core interrupts, if enabled.
<8:7>    FULL_THR R/W      0           0         Full Threshhold		                        
                                                   0=none
                                                   1=1/2 full
                                                   2=3/4 full
                                                   3=4/4 full
<6:4>    TIME_GRN R/W      0           0         Timestamp granularity		                        
                                                   granularity=8^n cycles, n=0,1,2,3,4,5,6,7
<3:2>    TRIG_CTL R/W      0           0         Trigger Control			                
                                                   Note: trigger events are written to the trace
                                                   0=no triggers
                                                   1=trigger0=start trigger, trigger1=stop trigger
                                                   2=(trigger0 || trigger1)=start trigger
                                                   3=(trigger0 || trigger1)=stop trigger
<1>      WRAP     R/W      0           0         Wrap mode		                                
                                                   When WRAP=0, the trace buffer will disable itself
                                                   after having logged 1024 entries.  When WRAP=1,
                                                   the trace buffer will never disable itself.
                                                   In this case, tracing may or may not be
                                                   temporarily suspended during the overflow
                                                   condition (see IGNORE_O above).
                                                   0=do not wrap
                                                   1=wrap
<0>      ENA      R/W      0           0         Enable Trace		                                
                                                   Master enable.  Tracing only happens when ENA=1.
                                                   When ENA changes from 0 to 1, the read and write
                                                   pointers are reset to 0x00 to begin a new trace.
                                                   The MCD0 event may set ENA=0 (see MCD0_ENA
                                                   above).  When using triggers, tracing occurs only
                                                   between start and stop triggers (including the
                                                   triggers themselves).
                                                   0=disable
                                                   1=enable

Notes:
 It is illegal to change the values of WRAP, TRIG_CTL, IGNORE_O while tracing (i.e. when ENA=1).
 Note that the following fields are present only in chip revisions beginning with pass2: IGNORE_O
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_INT_STATUS = Trace Buffer Interrupt Status
 *
 * Description: 
 *

     ==============================================================
     TRA(0..0)_INT_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:4>   NS       RAZ      0           0         RESERVED 				                
<3>      MCD0_THR R/W1C    0           0         MCD0 full threshold interrupt status                   
                                                   0=trace buffer did not generate MCD0 wire pulse
                                                   1=trace buffer did     generate MCD0 wire pulse
                                                     and prevents additional MCD0_THR MCD0 wire pulses
<2>      MCD0_TRG R/W1C    0           0         MCD0 end trigger interrupt status                      
                                                   0=trace buffer did not generate interrupt
                                                   1=trace buffer did     generate interrupt
                                                     and prevents additional MCD0_TRG MCD0 wire pulses
<1>      CIU_THR  R/W1C    0           0         CIU full threshold interrupt status                    
                                                   0=trace buffer did not generate interrupt
                                                   1=trace buffer did     generate interrupt
<0>      CIU_TRG  R/W1C    0           0         CIU end trigger interrupt status                       
                                                   0=trace buffer did not generate interrupt
                                                   1=trace buffer did     generate interrupt

Notes:
 During a CSR write to this register, the write data is used as a mask to clear the selected status
 bits (status'[3:0] = status[3:0] & ~write_data[3:0]).
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_BIST_STATUS = Trace Buffer BiST Status
 *
 * Description: 
 *

     ==============================================================
     TRA(0..0)_BIST_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:1>   NS       RAZ      0           0         RESERVED 				                
<0>      TDF      RO       0           0         Bist Results for TCF memory                            
                                                   0: GOOD (or bist in progress/never run)
                                                   1: BAD
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_CYCLES_SINCE = Trace Buffer Cycles Since Last Write, Read/Write pointers
 *
 * Description: 
 *

     ==============================================================
     TRA(0..0)_CYCLES_SINCE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:16>  CYCLES   RO       0           0         Cycles since the last entry was written                
<15:8>   RPTR     RO       0           0         Read pointer			                        
<7:0>    WPTR     RO       0           0         Write pointer			                        

Notes:
 This CSR is obsolete.  Use TRA_CYCLES_SINCE1 instead.
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_READ_DAT = Trace Buffer Read Data
 *
 * Description: 
 *

     ==============================================================
     TRA(0..0)_READ_DAT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:0>   DATA     RO       0           0         Trace buffer data for current entry	                

Notes:
 This CSR is a memory of 1024 entries.  When the trace was enabled, the read pointer was set to entry
 0 by hardware.  Each read to this address increments the read pointer.
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_CYCLES_SINCE1 = Trace Buffer Cycles Since Last Write, Read/Write pointers
 *
 * Description: 
 *

     ==============================================================
     TRA(0..0)_CYCLES_SINCE1 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:24>  CYCLES   RO       0           0         Cycles since the last entry was written                
<23:22>  NS       RAZ      NS          NS        RESERVED                                               
<21:12>  RPTR     RO       0           0         Read pointer			                        
<11:10>  NS       RAZ      NS          NS        RESERVED                                               
<9:0>    WPTR     RO       0           0         Write pointer			                        
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_FILT_CMD = Trace Buffer Filter Command Mask
 *
 * Description: 
 *

     ==============================================================
     TRA(0..0)_FILT_CMD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63>     SAA64    R/W      0           1         Enable SAA64 tracing			                
                                                   0=disable, 1=enable
<62>     SAA32    R/W      0           1         Enable SAA32 tracing			                
                                                   0=disable, 1=enable
<61:60>  NS       R/W      0           0         Must be written to zero				
<59>     FAA64    R/W      0           1         Enable FAA64 tracing			                
                                                   0=disable, 1=enable
<58>     FAA32    R/W      0           1         Enable FAA32 tracing			                
                                                   0=disable, 1=enable
<57:56>  NS       R/W      0           0         Must be written to zero       			        
<55>     DECR64   R/W      0           1         Enable DECR64  tracing			                
                                                   0=disable, 1=enable
<54>     DECR32   R/W      0           1         Enable DECR32  tracing			                
                                                   0=disable, 1=enable
<53>     DECR16   R/W      0           1         Enable DECR16  tracing			                
                                                   0=disable, 1=enable
<52>     DECR8    R/W      0           1         Enable DECR8   tracing			                
                                                   0=disable, 1=enable
<51>     INCR64   R/W      0           1         Enable INCR64  tracing			                
                                                   0=disable, 1=enable
<50>     INCR32   R/W      0           1         Enable INCR32  tracing			                
                                                   0=disable, 1=enable
<49>     INCR16   R/W      0           1         Enable INCR16  tracing			                
                                                   0=disable, 1=enable
<48>     INCR8    R/W      0           1         Enable INCR8   tracing			                
                                                   0=disable, 1=enable
<47>     CLR64    R/W      0           1         Enable CLR64   tracing			                
                                                   0=disable, 1=enable
<46>     CLR32    R/W      0           1         Enable CLR32   tracing			                
                                                   0=disable, 1=enable
<45>     CLR16    R/W      0           1         Enable CLR16   tracing			                
                                                   0=disable, 1=enable
<44>     CLR8     R/W      0           1         Enable CLR8    tracing			                
                                                   0=disable, 1=enable
<43>     SET64    R/W      0           1         Enable SET64   tracing			                
                                                   0=disable, 1=enable
<42>     SET32    R/W      0           1         Enable SET32   tracing			                
                                                   0=disable, 1=enable
<41>     SET16    R/W      0           1         Enable SET16   tracing			                
                                                   0=disable, 1=enable
<40>     SET8     R/W      0           1         Enable SET8    tracing			                
                                                   0=disable, 1=enable
<39>     IOBST64  R/W      0           1         Enable IOBST64 tracing			                
                                                   0=disable, 1=enable
<38>     IOBST32  R/W      0           1         Enable IOBST32 tracing			                
                                                   0=disable, 1=enable
<37>     IOBST16  R/W      0           1         Enable IOBST16 tracing			                
                                                   0=disable, 1=enable
<36>     IOBST8   R/W      0           1         Enable IOBST8  tracing			                
                                                   0=disable, 1=enable
<35>     IOBLD64  R/W      0           1         Enable IOBLD64 tracing			                
                                                   0=disable, 1=enable
<34>     IOBLD32  R/W      0           1         Enable IOBLD32 tracing			                
                                                   0=disable, 1=enable
<33>     IOBLD16  R/W      0           1         Enable IOBLD16 tracing			                
                                                   0=disable, 1=enable
<32>     IOBLD8   R/W      0           1         Enable IOBLD8  tracing			                
                                                   0=disable, 1=enable
<31>     LCKL2    R/W      0           1         Enable LCKL2   tracing			                
                                                   0=disable, 1=enable
<30>     WBL2     R/W      0           1         Enable WBL2    tracing			                
                                                   0=disable, 1=enable
<29>     WBIL2    R/W      0           1         Enable WBIL2   tracing			                
                                                   0=disable, 1=enable
<28>     INVL2    R/W      0           1         Enable INVL2   tracing			                
                                                   0=disable, 1=enable
<27>     NS       R/W      0           0         Must be written to zero		                
<26>     STGL2I   R/W      0           1         Enable STGL2I  tracing			                
                                                   0=disable, 1=enable
<25>     LTGL2I   R/W      0           1         Enable LTGL2I  tracing			                
                                                   0=disable, 1=enable
<24>     WBIL2I   R/W      0           1         Enable WBIL2I  tracing			                
                                                   0=disable, 1=enable
<23>     FAS64    R/W      0           1         Enable FAS64   tracing			                
                                                   0=disable, 1=enable
<22>     FAS32    R/W      0           1         Enable FAS32   tracing			                
                                                   0=disable, 1=enable
<21>     STTIL1   R/W      0           1         Enable STTIL1  tracing			                
                                                   0=disable, 1=enable
<20>     STFIL1   R/W      0           1         Enable STFIL1  tracing			                
                                                   0=disable, 1=enable
<19>     STC      R/W      0           1         Enable STC     tracing			                
                                                   0=disable, 1=enable
<18>     STP      R/W      0           1         Enable STP     tracing			                
                                                   0=disable, 1=enable
<17>     STT      R/W      0           1         Enable STT     tracing			                
                                                   0=disable, 1=enable
<16>     STF      R/W      0           1         Enable STF     tracing			                
                                                   0=disable, 1=enable
<15>     IOBDMA   R/W      0           1         Enable IOBDMA  tracing			                
                                                   0=disable, 1=enable
<14:10>  NS       R/W      0           0         Must be written to zero       		                
<9>      PSL1     R/W      0           1         Enable PSL1    tracing			                
                                                   0=disable, 1=enable
<8>      LDD      R/W      0           1         Enable LDD     tracing			                
                                                   0=disable, 1=enable
<7:6>    NS       R/W      0           0         Must be written to zero       			        
<5>      DWB      R/W      0           1         Enable DWB     tracing			                
                                                   0=disable, 1=enable
<4>      RPL2     R/W      0           1         Enable RPL2    tracing			                
                                                   0=disable, 1=enable
<3>      PL2      R/W      0           1         Enable PL2     tracing			                
                                                   0=disable, 1=enable
<2>      LDI      R/W      0           1         Enable LDI     tracing			                
                                                   0=disable, 1=enable
<1>      LDT      R/W      0           1         Enable LDT     tracing			                
                                                   0=disable, 1=enable
<0>      NOP      R/W      0           1         Enable NOP     tracing			                
                                                   0=disable, 1=enable


Notes:
Note that the trace buffer does not do proper IOBDMA address compares.  Thus, if IOBDMA is set, then
the address compare must be disabled (i.e. TRA_FILT_ADR_MSK set to zero) to guarantee that IOBDMAs
enter the trace.
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_FILT_SID = Trace Buffer Filter SourceId Mask
 *
 * Description: 
 *

     ==============================================================
     TRA(0..0)_FILT_SID Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32>  NS       RAZ      0           0         RESERVED 				                
<31:20>  NS       R/W      0           0         Must be written to zero                                
<19>     DWB      R/W      0           0         Enable tracing of requests from the IOB DWB engine     
<18>     IOBREQ   R/W      0           0         Enable tracing of requests from FPA,TIM,DFA,           
                                                 PCI,ZIP,POW, and PKO (writes)
<17>     PKO      R/W      0           0         Enable tracing of read requests from PKO               
<16>     PKI      R/W      0           0         Enable tracing of write requests from PIP/IPD          
<15:8>   NS       R/W      0           0         Must be written to zero                                
<7:0>    PP       R/W      0           0         Enable tracing from PP[N] with matching SourceID       
                                                   0=disable, 1=enableper bit N where  0<=N<=15
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_FILT_DID = Trace Buffer Filter DestinationId Mask
 *
 * Description: 
 *

     ==============================================================
     TRA(0..0)_FILT_DID Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32>  NS       RAZ      0           0         RESERVED 				                
<31>     ILLEGAL5 R/W      0           1         Illegal destinations                                   
<30>     FAU      R/W      0           1         Enable tracing of FAU accesses                         
<29:28>  ILLEGAL4 R/W      0           0x3       Illegal destinations                                   
<27>     DPI      R/W      0           1         Enable tracing of DPI accesses                         
                                                 (DPI NCB CSRs)
<26:15>  ILLEGAL  R/W      0           0xFFF     Illegal destinations                                   
<14>     RAD      R/W      0           1         Enable tracing of RAD accesses                         
                                                 (doorbells)
<13>     USB0     R/W      0           1         Enable tracing of USB0 accesses                        
                                                 (UAHC0 EHCI and OHCI NCB CSRs)
<12>     POW      R/W      0           1         Enable tracing of requests to POW                      
                                                 (get work, add work, status/memory/index
                                                 loads, NULLRd loads, CSR's)
<11>     ILLEGAL2 R/W      0           1         Illegal destination                                    
<10>     PKO      R/W      0           1         Enable tracing of PKO accesses                         
                                                 (doorbells)
<9>      IPD      R/W      0           1         Enable tracing of IPD CSR accesses                     
                                                 (IPD CSRs)
<8>      RNG      R/W      0           1         Enable tracing of requests to RNG                      
                                                 (loads/IOBDMA's are legal)
<7>      ZIP      R/W      0           1         Enable tracing of requests to ZIP                      
                                                 (doorbell stores are legal)
<6>      DFA      R/W      0           1         Enable tracing of requests to DFA                      
                                                 (CSR's and operations are legal)
<5>      FPA      R/W      0           1         Enable tracing of requests to FPA                      
                                                 (alloc's (loads/IOBDMA's), frees (stores) are legal)
<4>      KEY      R/W      0           1         Enable tracing of requests to KEY memory               
                                                 (loads/IOBDMA's/stores are legal)
<3>      SLI      R/W      0           1         Enable tracing of requests to SLI and RSL-type         
                                                 CSR's (RSL CSR's, PCI/sRIO bus operations, SLI
                                                 CSR's)
<2:1>    ILLEGAL3 R/W      0           0x3       Illegal destinations                                   
<0>      MIO      R/W      0           1         Enable tracing of MIO accesses                         
                                                 (CIU and GPIO CSR's, boot bus accesses)
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_FILT_ADR_ADR = Trace Buffer Filter Address Address
 *
 * Description: 
 *

     ==============================================================
     TRA(0..0)_FILT_ADR_ADR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:38>  NS       RAZ      0           0         RESERVED 				                
<37:0>   ADR      R/W      0           NS        Unmasked Address                                       
                                                   The combination of TRA_FILT_ADR_ADR and
                                                   TRA_FILT_ADR_MSK is a masked address to
                                                   enable tracing of only those commands whose
                                                   masked address matches
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_FILT_ADR_MSK = Trace Buffer Filter Address Mask
 *
 * Description: 
 *

     ==============================================================
     TRA(0..0)_FILT_ADR_MSK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:38>  NS       RAZ      0           0         RESERVED 				                
<37:0>   ADR      R/W      0           0         Address Mask                                           
                                                   The combination of TRA_FILT_ADR_ADR and
                                                   TRA_FILT_ADR_MSK is a masked address to
                                                   enable tracing of only those commands whose
                                                   masked address matches.  When a mask bit is not
                                                   set, the corresponding address bits are assumed
                                                   to match.  Also, note that IOBDMAs do not have
                                                   proper addresses, so when TRA_FILT_CMD[IOBDMA]
                                                   is set, TRA_FILT_ADR_MSK must be zero to
                                                   guarantee that any IOBDMAs enter the trace.
----------------------------------------------------------------------------------------------------
===

 *
 *                  TRA_TRIG0_CMD = Trace Buffer Filter Command Mask
 *
 * Description: 
 *

     ==============================================================
     TRA(0..0)_TRIG0_CMD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63>     SAA64    R/W      0           1         Enable SAA64 tracing			                
                                                   0=disable, 1=enable
<62>     SAA32    R/W      0           1         Enable SAA32 tracing			                
                                                   0=disable, 1=enable
<61:60>  NS       R/W      0           0         Must be written to zero				
<59>     FAA64    R/W      0           1         Enable FAA64 tracing			                
                                                   0=disable, 1=enable
<58>     FAA32    R/W      0           1         Enable FAA32 tracing			                
                                                   0=disable, 1=enable
<57:56>  NS       R/W      0           0         Must be written to zero       			        
<55>     DECR64   R/W      0           1         Enable DECR64  tracing			                
                                                   0=disable, 1=enable
<54>     DECR32   R/W      0           1         Enable DECR32  tracing			                
                                                   0=disable, 1=enable
<53>     DECR16   R/W      0           1         Enable DECR16  tracing			                
                                                   0=disable, 1=enable
<52>     DECR8    R/W      0           1         Enable DECR8   tracing			                
                                                   0=disable, 1=enable
<51>     INCR64   R/W      0           1         Enable INCR64  tracing			                
                                                   0=disable, 1=enable
<50>     INCR32   R/W      0           1         Enable INCR32  tracing			                
                                                   0=disable, 1=enable
<49>     INCR16   R/W      0           1         Enable INCR16  tracing			                
                                                   0=disable, 1=enable
<48>     INCR8    R/W      0           1         Enable INCR8   tracing			                
                                                   0=disable, 1=enable
<47>     CLR64    R/W      0           1         Enable CLR64   tracing			                
                                                   0=disable, 1=enable
<46>     CLR32    R/W      0           1         Enable CLR32   tracing			                
                                                   0=disable, 1=enable
<45>     CLR16    R/W      0           1         Enable CLR16   tracing			                
                                                   0=disable, 1=enable
<44>     CLR8     R/W      0           1         Enable CLR8    tracing			                
                                                   0=disable, 1=enable
<43>     SET64    R/W      0           1         Enable SET64   tracing			                
                                                   0=disable, 1=enable
<42>     SET32    R/W      0           1         Enable SET32   tracing			                
                                                   0=disable, 1=enable
<41>     SET16    R/W      0           1         Enable SET16   tracing			                
                                                   0=disable, 1=enable
<40>     SET8     R/W      0           1         Enable SET8    tracing			                
                                                   0=disable, 1=enable
<39>     IOBST64  R/W      0           1         Enable IOBST64 tracing			                
                                                   0=disable, 1=enable
<38>     IOBST32  R/W      0           1         Enable IOBST32 tracing			                
                                                   0=disable, 1=enable
<37>     IOBST16  R/W      0           1         Enable IOBST16 tracing			                
                                                   0=disable, 1=enable
<36>     IOBST8   R/W      0           1         Enable IOBST8  tracing			                
                                                   0=disable, 1=enable
<35>     IOBLD64  R/W      0           1         Enable IOBLD64 tracing			                
                                                   0=disable, 1=enable
<34>     IOBLD32  R/W      0           1         Enable IOBLD32 tracing			                
                                                   0=disable, 1=enable
<33>     IOBLD16  R/W      0           1         Enable IOBLD16 tracing			                
                                                   0=disable, 1=enable
<32>     IOBLD8   R/W      0           1         Enable IOBLD8  tracing			                
                                                   0=disable, 1=enable
<31>     LCKL2    R/W      0           1         Enable LCKL2   tracing			                
                                                   0=disable, 1=enable
<30>     WBL2     R/W      0           1         Enable WBL2    tracing			                
                                                   0=disable, 1=enable
<29>     WBIL2    R/W      0           1         Enable WBIL2   tracing			                
                                                   0=disable, 1=enable
<28>     INVL2    R/W      0           1         Enable INVL2   tracing			                
                                                   0=disable, 1=enable
<27>     NS       R/W      0           0         Must be written to zero		                
<26>     STGL2I   R/W      0           1         Enable STGL2I  tracing			                
                                                   0=disable, 1=enable
<25>     LTGL2I   R/W      0           1         Enable LTGL2I  tracing			                
                                                   0=disable, 1=enable
<24>     WBIL2I   R/W      0           1         Enable WBIL2I  tracing			                
                                                   0=disable, 1=enable
<23>     FAS64    R/W      0           1         Enable FAS64   tracing			                
                                                   0=disable, 1=enable
<22>     FAS32    R/W      0           1         Enable FAS32   tracing			                
                                                   0=disable, 1=enable
<21>     STTIL1   R/W      0           1         Enable STTIL1  tracing			                
                                                   0=disable, 1=enable
<20>     STFIL1   R/W      0           1         Enable STFIL1  tracing			                
                                                   0=disable, 1=enable
<19>     STC      R/W      0           1         Enable STC     tracing			                
                                                   0=disable, 1=enable
<18>     STP      R/W      0           1         Enable STP     tracing			                
                                                   0=disable, 1=enable
<17>     STT      R/W      0           1         Enable STT     tracing			                
                                                   0=disable, 1=enable
<16>     STF      R/W      0           1         Enable STF     tracing			                
                                                   0=disable, 1=enable
<15>     IOBDMA   R/W      0           1         Enable IOBDMA  tracing			                
                                                   0=disable, 1=enable
<14:10>  NS       R/W      0           0         Must be written to zero       		                
<9>      PSL1     R/W      0           1         Enable PSL1    tracing			                
                                                   0=disable, 1=enable
<8>      LDD      R/W      0           1         Enable LDD     tracing			                
                                                   0=disable, 1=enable
<7:6>    NS       R/W      0           0         Must be written to zero       			        
<5>      DWB      R/W      0           1         Enable DWB     tracing			                
                                                   0=disable, 1=enable
<4>      RPL2     R/W      0           1         Enable RPL2    tracing			                
                                                   0=disable, 1=enable
<3>      PL2      R/W      0           1         Enable PL2     tracing			                
                                                   0=disable, 1=enable
<2>      LDI      R/W      0           1         Enable LDI     tracing			                
                                                   0=disable, 1=enable
<1>      LDT      R/W      0           1         Enable LDT     tracing			                
                                                   0=disable, 1=enable
<0>      NOP      R/W      0           1         Enable NOP     tracing			                
                                                   0=disable, 1=enable

Notes:
Note that the trace buffer does not do proper IOBDMA address compares.  Thus, if IOBDMA is set, then
the address compare must be disabled (i.e. TRA_TRIG0_ADR_MSK set to zero) to guarantee that IOBDMAs
are recognized as triggers.
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_TRIG0_SID = Trace Buffer Filter SourceId Mask
 *
 * Description: 
 *

     ==============================================================
     TRA(0..0)_TRIG0_SID Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32>  NS       RAZ      0           0         RESERVED 				                
<31:20>  NS       R/W      0           0         Must be written to zero                                
<19>     DWB      R/W      0           0         Enable triggering on requests from the IOB DWB engine  
<18>     IOBREQ   R/W      0           0         Enable triggering on requests from FPA,TIM,DFA,        
                                                 PCI,ZIP,POW, and PKO (writes)
<17>     PKO      R/W      0           0         Enable triggering on read requests from PKO            
<16>     PKI      R/W      0           0         Enable triggering on write requests from PIP/IPD       
<15:8>   NS       R/W      0           0         Must be written to zero                                
<7:0>    PP       R/W      0           0         Enable triggering from PP[N] with matching SourceID    
                                                   0=disable, 1=enableper bit N where  0<=N<=15
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_TRIG0_DID = Trace Buffer Filter DestinationId Mask
 *
 * Description: 
 *

     ==============================================================
     TRA(0..0)_TRIG0_DID Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32>  NS       RAZ      0           0         RESERVED 				                
<31>     ILLEGAL5 R/W      0           1         Illegal destinations                                   
<30>     FAU      R/W      0           1         Enable triggering on FAU accesses                      
<29:28>  ILLEGAL4 R/W      0           0x3       Illegal destinations                                   
<27>     DPI      R/W      0           1         Enable triggering on DPI accesses                      
                                                 (DPI NCB CSRs)
<26:15>  ILLEGAL  R/W      0           0xFFF     Illegal destinations                                   
<14>     RAD      R/W      0           1         Enable triggering on RAD accesses                      
                                                 (doorbells)
<13>     USB0     R/W      0           1         Enable triggering on USB0 accesses                     
                                                 (UAHC0 EHCI and OHCI NCB CSRs)
<12>     POW      R/W      0           1         Enable triggering on requests to POW                   
                                                 (get work, add work, status/memory/index
                                                 loads, NULLRd loads, CSR's)
<11>     ILLEGAL2 R/W      0           1         Illegal destination                                    
<10>     PKO      R/W      0           1         Enable triggering on PKO accesses                      
                                                 (doorbells)
<9>      IPD      R/W      0           1         Enable triggering on IPD CSR accesses                  
                                                 (IPD CSRs)
<8>      RNG      R/W      0           1         Enable triggering on requests to RNG                   
                                                 (loads/IOBDMA's are legal)
<7>      ZIP      R/W      0           1         Enable triggering on requests to ZIP                   
                                                 (doorbell stores are legal)
<6>      DFA      R/W      0           1         Enable triggering on requests to DFA                   
                                                 (CSR's and operations are legal)
<5>      FPA      R/W      0           1         Enable triggering on requests to FPA                   
                                                 (alloc's (loads/IOBDMA's), frees (stores) are legal)
<4>      KEY      R/W      0           1         Enable triggering on requests to KEY memory            
                                                 (loads/IOBDMA's/stores are legal)
<3>      SLI      R/W      0           1         Enable triggering on requests to SLI and RSL-type      
                                                 CSR's (RSL CSR's, PCI/sRIO bus operations, SLI
                                                 CSR's)
<2:1>    ILLEGAL3 R/W      0           0x3       Illegal destinations                                   
<0>      MIO      R/W      0           1         Enable triggering on MIO accesses                      
                                                 (CIU and GPIO CSR's, boot bus accesses)
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_TRIG0_ADR_ADR = Trace Buffer Filter Address Address
 *
 * Description: 
 *

     ==============================================================
     TRA(0..0)_TRIG0_ADR_ADR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:38>  NS       RAZ      0           0         RESERVED 				                
<37:0>   ADR      R/W      0           NS        Unmasked Address                                       
                                                   The combination of TRA_TRIG0_ADR_ADR and
                                                   TRA_TRIG0_ADR_MSK is a masked address to
                                                   enable tracing of only those commands whose
                                                   masked address matches
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_TRIG0_ADR_MSK = Trace Buffer Filter Address Mask
 *
 * Description: 
 *

     ==============================================================
     TRA(0..0)_TRIG0_ADR_MSK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:38>  NS       RAZ      0           0         RESERVED 				                
<37:0>   ADR      R/W      0           0         Address Mask                                           
                                                   The combination of TRA_TRIG0_ADR_ADR and
                                                   TRA_TRIG0_ADR_MSK is a masked address to
                                                   enable tracing of only those commands whose
                                                   masked address matches.  When a mask bit is not
                                                   set, the corresponding address bits are assumed
                                                   to match.  Also, note that IOBDMAs do not have
                                                   proper addresses, so when TRA_TRIG0_CMD[IOBDMA]
                                                   is set, TRA_FILT_TRIG0_MSK must be zero to
                                                   guarantee that any IOBDMAs are recognized as
                                                   triggers.
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_TRIG1_CMD = Trace Buffer Filter Command Mask
 *
 * Description: 
 *

     ==============================================================
     TRA(0..0)_TRIG1_CMD Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63>     SAA64    R/W      0           1         Enable SAA64 tracing			                
                                                   0=disable, 1=enable
<62>     SAA32    R/W      0           1         Enable SAA32 tracing			                
                                                   0=disable, 1=enable
<61:60>  NS       R/W      0           0         Must be written to zero				
<59>     FAA64    R/W      0           1         Enable FAA64 tracing			                
                                                   0=disable, 1=enable
<58>     FAA32    R/W      0           1         Enable FAA32 tracing			                
                                                   0=disable, 1=enable
<57:56>  NS       R/W      0           0         Must be written to zero       			        
<55>     DECR64   R/W      0           1         Enable DECR64  tracing			                
                                                   0=disable, 1=enable
<54>     DECR32   R/W      0           1         Enable DECR32  tracing			                
                                                   0=disable, 1=enable
<53>     DECR16   R/W      0           1         Enable DECR16  tracing			                
                                                   0=disable, 1=enable
<52>     DECR8    R/W      0           1         Enable DECR8   tracing			                
                                                   0=disable, 1=enable
<51>     INCR64   R/W      0           1         Enable INCR64  tracing			                
                                                   0=disable, 1=enable
<50>     INCR32   R/W      0           1         Enable INCR32  tracing			                
                                                   0=disable, 1=enable
<49>     INCR16   R/W      0           1         Enable INCR16  tracing			                
                                                   0=disable, 1=enable
<48>     INCR8    R/W      0           1         Enable INCR8   tracing			                
                                                   0=disable, 1=enable
<47>     CLR64    R/W      0           1         Enable CLR64   tracing			                
                                                   0=disable, 1=enable
<46>     CLR32    R/W      0           1         Enable CLR32   tracing			                
                                                   0=disable, 1=enable
<45>     CLR16    R/W      0           1         Enable CLR16   tracing			                
                                                   0=disable, 1=enable
<44>     CLR8     R/W      0           1         Enable CLR8    tracing			                
                                                   0=disable, 1=enable
<43>     SET64    R/W      0           1         Enable SET64   tracing			                
                                                   0=disable, 1=enable
<42>     SET32    R/W      0           1         Enable SET32   tracing			                
                                                   0=disable, 1=enable
<41>     SET16    R/W      0           1         Enable SET16   tracing			                
                                                   0=disable, 1=enable
<40>     SET8     R/W      0           1         Enable SET8    tracing			                
                                                   0=disable, 1=enable
<39>     IOBST64  R/W      0           1         Enable IOBST64 tracing			                
                                                   0=disable, 1=enable
<38>     IOBST32  R/W      0           1         Enable IOBST32 tracing			                
                                                   0=disable, 1=enable
<37>     IOBST16  R/W      0           1         Enable IOBST16 tracing			                
                                                   0=disable, 1=enable
<36>     IOBST8   R/W      0           1         Enable IOBST8  tracing			                
                                                   0=disable, 1=enable
<35>     IOBLD64  R/W      0           1         Enable IOBLD64 tracing			                
                                                   0=disable, 1=enable
<34>     IOBLD32  R/W      0           1         Enable IOBLD32 tracing			                
                                                   0=disable, 1=enable
<33>     IOBLD16  R/W      0           1         Enable IOBLD16 tracing			                
                                                   0=disable, 1=enable
<32>     IOBLD8   R/W      0           1         Enable IOBLD8  tracing			                
                                                   0=disable, 1=enable
<31>     LCKL2    R/W      0           1         Enable LCKL2   tracing			                
                                                   0=disable, 1=enable
<30>     WBL2     R/W      0           1         Enable WBL2    tracing			                
                                                   0=disable, 1=enable
<29>     WBIL2    R/W      0           1         Enable WBIL2   tracing			                
                                                   0=disable, 1=enable
<28>     INVL2    R/W      0           1         Enable INVL2   tracing			                
                                                   0=disable, 1=enable
<27>     NS       R/W      0           0         Must be written to zero		                
<26>     STGL2I   R/W      0           1         Enable STGL2I  tracing			                
                                                   0=disable, 1=enable
<25>     LTGL2I   R/W      0           1         Enable LTGL2I  tracing			                
                                                   0=disable, 1=enable
<24>     WBIL2I   R/W      0           1         Enable WBIL2I  tracing			                
                                                   0=disable, 1=enable
<23>     FAS64    R/W      0           1         Enable FAS64   tracing			                
                                                   0=disable, 1=enable
<22>     FAS32    R/W      0           1         Enable FAS32   tracing			                
                                                   0=disable, 1=enable
<21>     STTIL1   R/W      0           1         Enable STTIL1  tracing			                
                                                   0=disable, 1=enable
<20>     STFIL1   R/W      0           1         Enable STFIL1  tracing			                
                                                   0=disable, 1=enable
<19>     STC      R/W      0           1         Enable STC     tracing			                
                                                   0=disable, 1=enable
<18>     STP      R/W      0           1         Enable STP     tracing			                
                                                   0=disable, 1=enable
<17>     STT      R/W      0           1         Enable STT     tracing			                
                                                   0=disable, 1=enable
<16>     STF      R/W      0           1         Enable STF     tracing			                
                                                   0=disable, 1=enable
<15>     IOBDMA   R/W      0           1         Enable IOBDMA  tracing			                
                                                   0=disable, 1=enable
<14:10>  NS       R/W      0           0         Must be written to zero       		                
<9>      PSL1     R/W      0           1         Enable PSL1    tracing			                
                                                   0=disable, 1=enable
<8>      LDD      R/W      0           1         Enable LDD     tracing			                
                                                   0=disable, 1=enable
<7:6>    NS       R/W      0           0         Must be written to zero      			        
<5>      DWB      R/W      0           1         Enable DWB     tracing			                
                                                   0=disable, 1=enable
<4>      RPL2     R/W      0           1         Enable RPL2    tracing			                
                                                   0=disable, 1=enable
<3>      PL2      R/W      0           1         Enable PL2     tracing			                
                                                   0=disable, 1=enable
<2>      LDI      R/W      0           1         Enable LDI     tracing			                
                                                   0=disable, 1=enable
<1>      LDT      R/W      0           1         Enable LDT     tracing			                
                                                   0=disable, 1=enable
<0>      NOP      R/W      0           1         Enable NOP     tracing			                
                                                   0=disable, 1=enable

Notes:
Note that the trace buffer does not do proper IOBDMA address compares.  Thus, if IOBDMA is set, then
the address compare must be disabled (i.e. TRA_TRIG1_ADR_MSK set to zero) to guarantee that IOBDMAs
are recognized as triggers.
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_TRIG1_SID = Trace Buffer Filter SourceId Mask
 *
 * Description: 
 *

     ==============================================================
     TRA(0..0)_TRIG1_SID Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32>  NS       RAZ      0           0         RESERVED 				                
<31:20>  NS       R/W      0           0         Must be written to zero                                
<19>     DWB      R/W      0           0         Enable triggering on requests from the IOB DWB engine  
<18>     IOBREQ   R/W      0           0         Enable triggering on requests from FPA,TIM,DFA,        
                                                 PCI,ZIP,POW, and PKO (writes)
<17>     PKO      R/W      0           0         Enable triggering on read requests from PKO            
<16>     PKI      R/W      0           0         Enable triggering on write requests from PIP/IPD       
<15:8>   NS       R/W      0           0         Must be written to zero                                
<7:0>    PP       R/W      0           0         Enable trigering from PP[N] with matching SourceID     
                                                   0=disable, 1=enableper bit N where  0<=N<=15
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_TRIG1_DID = Trace Buffer Filter DestinationId Mask
 *
 * Description: 
 *

     ==============================================================
     TRA(0..0)_TRIG1_DID Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32>  NS       RAZ      0           0         RESERVED 				                
<31>     ILLEGAL5 R/W      0           1         Illegal destinations                                   
<30>     FAU      R/W      0           1         Enable triggering on FAU accesses                      
<29:28>  ILLEGAL4 R/W      0           0x3       Illegal destinations                                   
<27>     DPI      R/W      0           1         Enable triggering on DPI accesses                      
                                                 (DPI NCB CSRs)
<26:15>  ILLEGAL  R/W      0           0xFFF     Illegal destinations                                   
<14>     RAD      R/W      0           1         Enable triggering on RAD accesses                      
                                                 (doorbells)
<13>     USB0     R/W      0           1         Enable triggering on USB0 accesses                     
                                                 (UAHC0 EHCI and OHCI NCB CSRs)
<12>     POW      R/W      0           1         Enable triggering on requests to POW                   
                                                 (get work, add work, status/memory/index
                                                 loads, NULLRd loads, CSR's)
<11>     ILLEGAL2 R/W      0           1         Illegal destination                                    
<10>     PKO      R/W      0           1         Enable triggering on PKO accesses                      
                                                 (doorbells)
<9>      IPD      R/W      0           1         Enable triggering on IPD CSR accesses                  
                                                 (IPD CSRs)
<8>      RNG      R/W      0           1         Enable triggering on requests to RNG                   
                                                 (loads/IOBDMA's are legal)
<7>      ZIP      R/W      0           1         Enable triggering on requests to ZIP                   
                                                 (doorbell stores are legal)
<6>      DFA      R/W      0           1         Enable triggering on requests to DFA                   
                                                 (CSR's and operations are legal)
<5>      FPA      R/W      0           1         Enable triggering on requests to FPA                   
                                                 (alloc's (loads/IOBDMA's), frees (stores) are legal)
<4>      KEY      R/W      0           1         Enable triggering on requests to KEY memory            
                                                 (loads/IOBDMA's/stores are legal)
<3>      SLI      R/W      0           1         Enable triggering on requests to SLI and RSL-type      
                                                 CSR's (RSL CSR's, PCI/sRIO bus operations, SLI
                                                 CSR's)
<2:1>    ILLEGAL3 R/W      0           0x3       Illegal destinations                                   
<0>      MIO      R/W      0           1         Enable triggering on MIO accesses                      
                                                 (CIU and GPIO CSR's, boot bus accesses)
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_TRIG1_ADR_ADR = Trace Buffer Filter Address Address
 *
 * Description: 
 *

     ==============================================================
     TRA(0..0)_TRIG1_ADR_ADR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:38>  NS       RAZ      0           0         RESERVED 				                
<37:0>   ADR      R/W      0           NS        Unmasked Address                                       
                                                   The combination of TRA_TRIG1_ADR_ADR and
                                                   TRA_TRIG1_ADR_MSK is a masked address to
                                                   enable tracing of only those commands whose
                                                   masked address matches
----------------------------------------------------------------------------------------------------
===
 *
 *                  TRA_TRIG1_ADR_MSK = Trace Buffer Filter Address Mask
 *
 * Description: 
 *

     ==============================================================
     TRA(0..0)_TRIG1_ADR_MSK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:38>  NS       RAZ      0           0         RESERVED 				                
<37:0>   ADR      R/W      0           0         Address Mask                                           
                                                   The combination of TRA_TRIG1_ADR_ADR and
                                                   TRA_TRIG1_ADR_MSK is a masked address to
                                                   enable tracing of only those commands whose
                                                   masked address matches.  When a mask bit is not
                                                   set, the corresponding address bits are assumed
                                                   to match.  Also, note that IOBDMAs do not have
                                                   proper addresses, so when TRA_TRIG1_CMD[IOBDMA]
                                                   is set, TRA_FILT_TRIG1_MSK must be zero to
                                                   guarantee that any IOBDMAs are recognized as
                                                   triggers.
----------------------------------------------------------------------------------------------------
===


 *
 *                  HCCAPBASE = Host Controller BASE Capability Register
 *
 * 
 *

     ==============================================================
     UAHC(0)_EHCI_HCCAPBASE Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:16> HCIVERSION       RO      0x0100       0x0100    Host Controller Interface Version Number                                   |  
<15:8>  NS               RO      0x00         0x00      Reserved                                                                   |  
<7:0>   CAPLENGTH        RO      0x10         0x10      Capabitlity Registers Length                                               |  
----------------------------------------------------------------------------------------------------
===


*
*
* HCSPARAMS = Host Controller Structural Parameters
* This is a set of fields that are structural parameters: Number of downstream ports, etc. 
*

     ==============================================================
     UAHC(0)_EHCI_HCSPARAMS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:24> NS          RO     0       0        These bits are reserved and should be set to zero.                                             |  
<23:20> DPN         RO     0       0        Debug Port Number. Optional. This register identifies which of the host controller ports       |  
                                            is the debug port. The value is the port number (one-based) of the debug port. A nonzero       |
                                            value in this field indicates the presence of a debug port. The value in this register         |
                                            must not be greater than N_PORTS (see below).                                                  |
<19:17> NS          RO     0       0        These bits are reserved and should be set to zero.                                             |  
<16:16> P_INDICATOR RO     0       0        Port Indicator. This bit indicates whether the ports support port                              |  
                                            indicator control. When this bit is a one, the port status and control 			   |
                                            registers include a read/writeable field for controlling the state of 			   |
                                            the port indicator.  									   |
<15:12> N_CC        RO     1       1        Number of Companion Controller. This field indicates the number of 				   |  
                                            companion controllers associated with this USB 2.0 host controller. 			   |
                                            A zero in this field indicates there are no companion host controllers.                        |
                                            Port-ownership hand-off is not supported. Only high-speed devices are 			   |
                                            supported on the host controller root ports. 						   |
                                            A value larger than zero in this field indicates there are companion USB 1.1 host 		   |
                                            controller(s). Port-ownership hand-offs are supported. High, Full-and Low-speed 		   |
                                            devices are supported on the host controller root ports. 					   |
<11:8>  N_PCC       RO     2       2        Number of Ports per Companion Controller (N_PCC). This field indicates			   |  
                                            the number of ports supported per companion host controller. It is used to 			   |
                                            indicate the port routing  configuration to system software. 				   |
<7>     PRR         RO     0       0        Port Routing Rules. This field indicates the method used by this implementation for            |  
                                            how all ports are mapped to companion controllers. The value of this field has 		   |
                                            the following interpretation: 								   |
                                            0 The first N_PCC ports are routed to the lowest numbered function                             |
                                              companion host controller, the next N_PCC port are routed to the next 			   |
                                              lowest function companion controller, and so on. 						   |
                                            1 The port routing is explicitly enumerated by the first N_PORTS elements			   |
                                              of the HCSP-PORTROUTE array. 								   |
<6:5>  NS          RO       0      0       These bits are reserved and should be set to zero. 						   |  
<4>    PPC         RO       0      0       Port Power Control. This field indicates whether the host controller 			   |  
                                           implementation includes port power control. A one in this bit indicates the ports have 	   |
                                           port power switches. A zero in this bit indicates the port do not have port power 		   |
                                           switches. The value of this field affects the functionality of the Port Power field 		   |
                                           in each port status and control register (see Section 2.3.8). 				   |
<3:0>  N_PORTS     RO       2      2       This field specifies the number of physical downstream ports implemented 			   |  
                                           on this host controller. The value of this field determines how many port registers are         |
                                           addressable in the Operational Register Space (see Table 2-8). Valid values are in the          |
                                           range of 1H to FH. A zero in this field is undefined.                                           |
----------------------------------------------------------------------------------------------------
===


*
* HCCPARAMS = Host Controller Capability Parameters 
* Multiple Mode control (time-base bit functionality), addressing capability
*
*

     ==============================================================
     UAHC(0)_EHCI_HCCPARAMS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:16> NS        RO   0x0000 0x0000 These bits are reserved and should be set to zero.                                            |  
<15:8>  EECP      RO   0xa0   0xa0   EHCI Extended Capabilities Pointer. Default = Implementation Dependent. 			   |  
                                     This optional field indicates the existence of a capabilities list. A value of 00h indicates  |
                                     no extended capabilities are implemented. A non-zero value in this register indicates the 	   |
                                     offset in PCI configuration space of the first EHCI extended capability. The pointer value    |
                                     must be 40h or greater if implemented to maintain the consistency of the PCI header 	   |
                                     defined for this class of device. 								   |
<7:4>  IST        RO    0x2    0x2      Isochronous Scheduling Threshold. Default = implementation dependent. This field           |  
                                     indicates, relative to the current position of the executing host controller, where software  |
                                     can reliably update the isochronous schedule. When bit [7] is zero, the value of the least    |
                                     significant 3 bits indicates the number of micro-frames a host controller can hold a set of   |
                                     isochronous data structures (one or more) before flushing the state. When bit [7] is a 	   |
                                     one, then host software assumes the host controller may cache an isochronous data             |
                                     structure for an entire frame. Refer to Section 4.7.2.1 for details on how software uses 	   |
                                     this information for scheduling isochronous transfers. 					   |
<3>    NS        RO     0     0      Reserved. This bit is reserved and should be set to zero.  				   |  
<2>    ASPC      RO     0     0      Asynchronous Schedule Park Capability. Default = Implementation dependent. If this 	   |  
                                     bit is set to a one, then the host controller supports the park feature for high-speed 	   |
                                     queue heads in the Asynchronous Schedule. The feature can be disabled or enabled 		   |
                                     and set to a specific level by using the Asynchronous Schedule Park Mode Enable and 	   |
                                     Asynchronous Schedule Park Mode Count fields in the USBCMD register. 			   |
<1>    PFLF     RO      0     0      Programmable Frame List Flag. Default = Implementation dependent. If this bit is set 	   |  
                                     to a zero, then system software must use a frame list length of 1024 elements with this 	   |
                                     host controller. The USBCMD register Frame List Size field is a read-only register and 	   |
                                     should be set to zero.                                                                        |
                                     If set to a one, then system software can specify and use a smaller frame list and 	   |
                                     configure the host controller via the USBCMD register Frame List Size field. The frame 	   |
                                     list must always be aligned on a 4K page boundary. This requirement ensures that the 	   |
                                     frame list is always physically contiguous. 						   |
<0>   AC64      RO     1      1      64-bit Addressing Capability1 . This field documents the addressing range capability of 	   |  
                                     this implementation. The value of this field determines whether software should use the 	   |
                                     data structures defined in Section 3 (32-bit) or those defined in Appendix B (64-bit). 	   |
                                     Values for this field have the following interpretation: 					   |
                                     0: data structures using 32-bit address memory pointers 					   |
                                     1: data structures using 64-bit address memory pointers 					   |
----------------------------------------------------------------------------------------------------
===


*
*
* USBCMD = USB Command Register
* The Command Register indicates the command to be executed by the serial bus host controller. Writing to the register causes a command to be executed.
*
*

     ==============================================================
     UAHC(0)_EHCI_USBCMD Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:24> NS        RO   0    0     These bits are reserved and should be set to zero.                                               |  
<23:16> ITC       R/W  0x08 0x08  Interrupt Threshold Control. This field is used by system software 				   |  
                                  to select the maximum rate at which the host controller will issue interrupts. The only 	   |
                                  valid values are defined below. If software writes an invalid value to this register, the 	   |
                                  results are undefined. Value Maximum Interrupt Interval 					   |
                                    00h Reserved 										   |
                                    01h 1 micro-frame 										   |
                                    02h 2 micro-frames 										   |
                                    04h 4 micro-frames 										   |
                                    08h 8 micro-frames (default, equates to 1 ms) 						   |
                                    10h 16 micro-frames (2 ms) 									   |
                                    20h 32 micro-frames (4 ms) 									   |
                                    40h 64 micro-frames (8 ms)                                                                     |
<15:12> NS       RO    0   0     These bits are reserved and should be set to zero. 						   |  
<11>    ASPM_EN  RO    0   0     Asynchronous Schedule Park Mode Enable.							   |  
<10>    NS       RO    0   0     This bit is reserved and should be set to zero. 						   |  
<9:8>   ASPMC    RO    0   0     Asynchronous Schedule Park Mode Count.								   |  
<7>     LHCR     R/W   0   0     Light Host Controller Reset									   |  
<6>     IAA_DB   R/W   0   0     Interrupt on Async Advance Doorbell.This bit is used as a doorbell by 				   |  
                                 software to tell the host controller to issue an interrupt the next time it advances 		   |
                                 asynchronous schedule. Software must write a 1 to this bit to ring the doorbell. 		   |
                                 When the host controller has evicted all appropriate cached schedule state, it sets the 	   |
                                 Interrupt on Async Advance status bit in the USBSTS register. If the Interrupt on Async 	   |
                                 Advance Enable bit in the USBINTR register is a one then the host controller will assert 	   |
                                 an interrupt at the next interrupt threshold.                                                     |
<5>    AS_EN    R/W    0   0     Asynchronous Schedule Enable .This bit controls whether the host 				   |  
                                 controller skips processing the Asynchronous Schedule. Values mean: 				   |
                                   0: Do not process the Asynchronous Schedule 							   |
                                   1: Use the ASYNCLISTADDR register to access the Asynchronous Schedule. 			   |
<4>    PS_EN    R/W    0   0     Periodic Schedule Enable. This bit controls whether the host 					   |  
                                 controller skips processing the Periodic Schedule. Values mean: 				   |
                                     0: Do not process the Periodic Schedule 							   |
                                     1: Use the PERIODICLISTBASE register to access the Periodic Schedule. 			   |
<3:2>  FLS      RO     0   0     Frame List Size. This field is R/W only if Programmable 					   |  
                                 Frame List Flag in the HCCPARAMS registers is set to a one. This field specifies the 		   |
                                 size of the frame list. The size the frame list controls which bits in the Frame Index 	   |
                                 Register should be used for the Frame List Current index. Values mean:                            |
                                      00b: 1024 elements (4096 bytes) Default value 						   |
                                      01b: 512 elements  (2048 bytes) 								   |
                                      10b: 256 elements  (1024 bytes) - for resource-constrained environments 			   |
                                      11b: Reserved 										   |
<1>   HCRESET  R/W   0     0    Host Controller Reset (HCRESET). This control bit is used by software to reset 			   |  
                                the host controller. The effects of this on Root Hub registers are similar to a Chip 		   |
                                Hardware Reset. When software writes a one to this bit, the Host Controller resets		   |
                                its internal pipelines, timers, counters, state machines, etc. to their initial 		   |
                                value. Any transaction currently in progress on USB is immediately terminated.			   |
                                A USB reset is not driven on downstream ports. 							   |
                                This bit is set to zero by the Host Controller when the reset process is complete. Software can not|
                                terminate the reset process early by writing zero to this register.                                |
                                Software should not set this bit to a one when the HCHalted bit in the USBSTS register is a zero.  |
                                Attempting to reset an activtely running host controller will result in undefined behavior.        |
<0>   RS       R/W   0     1    Run/Stop (RS).											   |  
                                  1=Run. 0=Stop.                                                                                   |
                                When set to a 1, the Host Controller proceeds with execution of the schedule. 			   |
                                The Host Controller continues execution as long as this bit is set to a 1. 			   |
                                When this bit is set to 0, the Host Controller completes the current and any 			   |
                                actively pipelined transactions on the USB and then halts. The Host 				   |
                                Controller must halt within 16 micro-frames after software clears the Run bit. The HC 		   |
                                Halted bit in the status register indicates when the Host Controller has finished its 		   |
                                pending pipelined transactions and has entered the stopped state. Software must not 		   |
                                write a one to this field unless the host controller is in the Halted state (i.e. HCHalted in 	   |
                                the USBSTS register is a one). Doing so will yield undefined results. 				   |
----------------------------------------------------------------------------------------------------
===
																   



*
* USBSTS = USB Status Register 
* This register indicates pending interrupts and various states of the Host Controller. The status resulting from
* a transaction on the serial bus is not indicated in this register. Software sets a bit to 0 in this register by
* writing a 1 to it.
*
*

     ==============================================================
     UAHC(0)_EHCI_USBSTS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:16>  NS     RO     0    0    Reserved. These bits are reserved and should be set to zero.                                      |  
<15>     ASS    RO     0    0    Asynchronous Schedule Status. The bit reports the current real 				   |  
                                 status of the Asynchronous Schedule. If this bit is a zero then the status of the 		   |
                                 Asynchronous Schedule is disabled. If this bit is a one then the status of the 		   |
                                 Asynchronous Schedule is enabled. The Host Controller is not required to immediately 		   |
                                 disable or enable the Asynchronous Schedule when software transitions the 			   |
                                 Asynchronous Schedule Enable bit in the USBCMD register. When this bit and the 		   |
                                 Asynchronous Schedule Enable bit are the same value, the Asynchronous Schedule is 		   |
                                 either enabled (1) or disabled (0). 								   |
<14>    PSS     RO     0    0    Periodic Schedule Status. The bit reports the current real status of 				   |  
                                 the Periodic Schedule. If this bit is a zero then the status of the Periodic			   |
                                 Schedule is disabled. If this bit is a one then the status of the Periodic Schedule		   |
                                 is enabled. The Host Controller is not required to immediately disable or enable the              |
                                 Periodic Schedule when software transitions the Periodic Schedule Enable bit in 		   |
                                 the USBCMD register. When this bit and the Periodic Schedule Enable bit are the 		   |
                                 same value, the Periodic Schedule is either enabled (1) or disabled (0). 			   |
<13>   RECLM    RO     0    0    Reclamation.This is a read-only status bit, which is used to detect an 			   |  
                                 empty asynchronous schedule. 									   |
<12>   HCHTD    RO     1    0    HCHalted. This bit is a zero whenever the Run/Stop bit is a one. The 				   |  
                                 Host Controller sets this bit to one after it has stopped executing as a result of the 	   |
                                 Run/Stop bit being set to 0, either by software or by the Host Controller hardware (e.g. 	   |
                                 internal error). 										   |
<11:6> NS       RO     0   0     These bits are reserved and should be set to zero. 						   |  
<5>    IOAA     R/W1C   0   0    Interrupt on Async Advance. System software can force the host 				   |  
                                 controller to issue an interrupt the next time the host controller advances the                   | 
                                 asynchronous schedule by writing a one to the Interrupt on Async Advance Doorbell bit 		   |
                                 in the USBCMD register. This status bit indicates the assertion of that interrupt source. 	   |  
<4>    HSYSERR  R/W1C   0   0     Host System Error. The Host Controller sets this bit to 1 when a serious error 		   |  
                                 occurs during a host system access involving the Host Controller module. 			   |
<3>    FLRO     R/W1C   0   0     Frame List Rollover. The Host Controller sets this bit to a one when the 			   |  
                                 Frame List Index rolls over from its maximum value to zero. The exact value at 		   |
                                 which the rollover occurs depends on the frame list size. For example, if 			   |
                                 the frame list size (as programmed in the Frame List Size field of the USBCMD register) 	   |
                                 is 1024, the Frame Index Register rolls over every time FRINDEX[13] toggles. Similarly, 	   |
                                 if the size is 512, the Host Controller sets this bit to a one every time FRINDEX[12] 		   |
                                 toggles. 											   |
<2>    PCD      R/W1C   0   0     Port Change Detect. The Host Controller sets this bit to a one when any port                     |  
                                 for which the Port Owner bit is set to zero (see Section 2.3.9) has a change bit transition 	   |
                                 from a zero to a one or a Force Port Resume bit transition from a zero to a one as a 		   |
                                 result of a J-K transition detected on a suspended port. This bit will also be set as a 	   |
                                 result of the Connect Status Change being set to a one after system software has 		   |
                                 relinquished ownership of a connected port by writing a one to a port's Port Owner bit. 	   |
<1> USBERRINT  R/W1C   0    0    USB Error Interrupt. The Host Controller sets this bit to 1 when completion of a USB 		   |  
                                transaction results in an error condition (e.g., error counter underflow). If the TD on 	   |
                                which the error interrupt occurred also had its IOC bit set, both this bit and USBINT 		   |
                                bit are set. 											   |
<0> USBINT     R/W1C   0    0    USB Interrupt. The Host Controller sets this bit to 1 on the completion of a USB 		   |  
                                transaction, which results in the retirement of a Transfer Descriptor that had its 		   |
                                IOC bit set. The Host Controller also sets this bit to 1 when a short packet is                    |
                                detected (actual number of bytes received was less than the expected number of bytes).             |
----------------------------------------------------------------------------------------------------
===



*
*
*  USBINTR = USB Interrupt Enable Register 
*  This register enables and disables reporting of the corresponding interrupt to the software. When a bit is set
*  and the corresponding interrupt is active, an interrupt is generated to the host. Interrupt sources that are
*  disabled in this register still appear in the USBSTS to allow the software to poll for events.
*  Each interrupt enable bit description indicates whether it is dependent on the interrupt threshold mechanism.
*  Note: for all enable register bits, 1= Enabled, 0= Disabled 
*

     ==============================================================
     UAHC(0)_EHCI_USBINTR Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:6> NS      RO     0     0   These bits are reserved and should be zero.                                                        |  
<5>    IOAA_EN R/W    0     NS  Interrupt on Async Advance Enable When this bit is a one, and the Interrupt on 			   |  
                                Async Advance bit in the USBSTS register is a one, the host controller will issue an 		   |
                                interrupt at the next interrupt threshold. The interrupt is acknowledged by software 		   |
                                clearing the Interrupt on Async Advance bit. 							   |
<4>   HSERR_EN R/W    0     NS  Host System Error Enable When this bit is a one, and the Host System 				   |  
                                Error Status bit in the USBSTS register is a one, the host controller will issue an  		   |
                                interrupt. The interrupt is acknowledged by software clearing the Host System Error bit.  	   |
<3>   FLRO_EN  R/W    0     NS  Frame List Rollover Enable. When this bit is a one, and the Frame List 				   |  
                                Rollover bit in the USBSTS register is a one, the host controller will issue an			   |
                                interrupt. The interrupt is acknowledged by software clearing the Frame List Rollover bit. 	   |
<2>   PCI_EN   R/W    0     NS  Port Change Interrupt Enable. When this bit is a one, and the Port Change Detect bit in 	   |  
                                the USBSTS register is a one, the host controller will issue an interrupt.                         |    
                                The interrupt is acknowledged by software clearing the Port Change Detect bit. 			   |
<1> USBERRINT_EN R/W   0    NS  USB Error Interrupt Enable. When this bit is a one, and the USBERRINT 				   |  
                                bit in the USBSTS register is a one, the host controller will issue an interrupt at the next 	   |
                                interrupt threshold. The interrupt is acknowledged by software clearing the USBERRINT bit. 	   |
<0> USBINT_EN  R/W    0     NS  USB Interrupt Enable. When this bit is a one, and the USBINT bit in the USBSTS register 	   |  
                                is a one, the host controller will issue an interrupt at the next interrupt threshold. 		   |
                                The interrupt is acknowledged by software clearing the USBINT bit. 				   |
----------------------------------------------------------------------------------------------------
===



*
* FRINDEX = Frame Index Register 
* This register is used by the host controller to index into the periodic frame list. The register updates every 
* 125 microseconds (once each micro-frame). Bits [N:3] are used to select a particular entry in the Periodic 
* Frame List during periodic schedule execution. The number of bits used for the index depends on the size of 
* the frame list as set by system software in the Frame List Size field in the USBCMD register. 
* This register cannot be written unless the Host Controller is in the Halted state as indicated by the 
* HCHalted bit. A write to this register while the Run/Stop bit is set to a one (USBCMD register) produces 
* undefined results. Writes to this register also affect the SOF value.
*

     ==============================================================
     UAHC(0)_EHCI_FRINDEX Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:14> NS    RO       0       0        Reserved field.                                                                                   |  
<13:0>  FI    R/W      0       NS       Frame Index. The value in this register increments at the end of each time frame (e.g. 		  |  
                                        micro-frame). Bits [N:3] are used for the Frame List current index. This means that each 	  |
                                        location of the frame list is accessed 8 times (frames or micro-frames) before moving to 	  |
                                        the next index. The following illustrates values of N based on the value of the Frame List 	  |
                                        Size field in the USBCMD register. 								  |
                                        USBCMD[Frame List Size] Number Elements N 							  |
                                           00b (1024) 12 										  |
                                           01b (512) 11 									          |
                                           10b (256) 10 									          |
                                           11b Reserved 								                  |
----------------------------------------------------------------------------------------------------
===



*
*  CTRLDSSEGMENT = Control Data Structure Segment Register 
* 
* This 32-bit register corresponds to the most significant address bits [63:32] for all EHCI data structures. If 
* the 64-bit Addressing Capability field in HCCPARAMS is a zero, then this register is not used. Software 
* cannot write to it and a read from this register will return zeros. 
*
* If the 64-bit Addressing Capability field in HCCPARAMS is a one, then this register is used with the link 
* pointers to construct 64-bit addresses to EHCI control data structures. This register is concatenated with the 
* link pointer from either the PERIODICLISTBASE, ASYNCLISTADDR, or any control data structure link 
* field to construct a 64-bit address. 
* 
* This register allows the host software to locate all control data structures within the same 4 Gigabyte 
* memory segment. 
* 

     ==============================================================
     UAHC(0)_EHCI_CTRLDSSEGMENT Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:0>  CTRLDSSEG R/W      0           NS       Control Data Strucute Semgent Address Bit [63:32]                          |  
----------------------------------------------------------------------------------------------------
===




*
*
* PERIODICLISTBASE = Periodic Frame List Base Address Register 
*
* This 32-bit register contains the beginning address of the Periodic Frame List in the system memory. If the 
* host controller is in 64-bit mode (as indicated by a one in the 64-bit Addressing Capability field in the 
* HCCSPARAMS register), then the most significant 32 bits of every control data structure address comes 
* from the CTRLDSSEGMENT register (see Section 2.3.5). System software loads this register prior to 
* starting the schedule execution by the Host Controller (see 4.1). The memory structure referenced by this 
* physical memory pointer is assumed to be 4-Kbyte aligned. The contents of this register are combined with 
* the Frame Index Register (FRINDEX) to enable the Host Controller to step through the Periodic Frame List 
* in sequence. 
* 

     ==============================================================
     UAHC(0)_EHCI_PERIODICLISTBASE Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:12> BADDR  R/W       0       NS       Base Address (Low). These bits correspond to memory address signals [31:12],respectively.    |  
<11:0>  NS     R/W       0       NS       Reserved. Must be written as 0s.Dring runtime, the values of these bits are undefined.       |  
----------------------------------------------------------------------------------------------------
===





*
*
* ASYNCLISTADDR = Current Asynchronous List Address Register 
* 
* This 32-bit register contains the address of the next asynchronous queue head to be executed. If the host 
* controller is in 64-bit mode (as indicated by a one in 64-bit Addressing Capability field in the 
* HCCPARAMS register), then the most significant 32 bits of every control data structure address comes from 
* the CTRLDSSEGMENT register (See Section 2.3.5). Bits [4:0] of this register cannot be modified by system 
* software and will always return a zero when read. The memory structure referenced by this physical memory 
* pointer is assumed to be 32-byte (cache line) aligned. 
*

     ==============================================================
     UAHC(0)_EHCI_ASYNCLISTADDR Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:5>  LPL    R/W       0        NS       Link Pointer Low (LPL). These bits correspond to memory address signals [31:5],           |  
                                           respectively. This field may only reference a Queue Head (QH).                            |  
<4:0>   NS     R/W       0        NS       Reserved. These bits are reserved and their value has no effect on operation.             |  
----------------------------------------------------------------------------------------------------
===




*
*
* CONFIGFLAG = Configure Flag Register 
* This register is in the auxiliary power well. It is only reset by hardware when the auxiliary power is initially 
* applied or in response to a host controller reset. 
*

     ==============================================================
     UAHC(0)_EHCI_CONFIGFLAG Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:1> NS        R/W    0        0      Reserved. These bits are reserved and should be set to zero.                                    |  
<0>    CF        R/W    0        1      Configure Flag (CF) .Host software sets this bit as the last action in 				|  
                                        its process of configuring the Host Controller (see Section 4.1). This bit controls the 	|
                                        default port-routing control logic. Bit values and side-effects are listed below. 	        |
                                         0b: Port routing control logic default-routes each port to an implementation 			|
                                             dependent classic host controller.  						        |
                                         1b: Port routing control logic default-routes all ports to this host controller.               |
----------------------------------------------------------------------------------------------------
===

																   
*																  
* PORTSC@ = Port @ Status and Control Register 
* Default: 00002000h (w/PPC set to one); 00003000h (w/PPC set to a zero) 
*

     ==============================================================
     UAHC(0)_EHCI_PORTSC(1..2) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:23> NS       RO     0      0    These bits are reserved for future use and should return a value of zero when read.            |  
<22>    WKOC_E   R/W    0      0    Wake on Over-current Enable.Writing this bit to a 						   |  
                                    one enables the port to be sensitive to over-current conditions as wake-up events. 		   |
                                    This field is zero if Port Power is zero. 							   |
<21>  WKDSCNNT_E R/W    0      0    Wake on Disconnect Enable. Writing this bit to a one enables the port to be 	           |  
                                    sensitive to device disconnects as wake-up events. 						   |
                                    This field is zero if Port Power is zero. 							   |
<20>  WKCNNT_E   R/W    0      0    Wake on Connect Enable. Writing this bit to a one enables the port to be 			   |  
                                    sensitive to device connects as wake-up events. 				                   |
                                    This field is zero if Port Power is zero. 							   |
<19:16> PTC      R/W    0      0    Port Test Control. When this field is zero, the port is NOT 			           |  
                                    operating in a test mode. A non-zero value indicates that it is operating 			   |
                                    in test mode and the specific test mode is indicated by the specific value.                    |
                                    The encoding of the test mode bits are (0110b - 1111b are reserved): 			   |
                                    Bits Test Mode 										   |
                                     0000b Test mode not enabled 								   |
                                     0001b Test J_STATE 									   |
                                     0010b Test K_STATE 									   |
                                     0011b Test SE0_NAK 									   |
                                     0100b Test Packet 										   |
                                     0101b Test FORCE_ENABLE									   |
<15:14> PIC     R/W     0      0   Port Indicator Control. Writing to these bits has no effect if the 				   |  
                                   P_INDICATOR bit in the HCSPARAMS register is a zero. If P_INDICATOR bit is a one, 		   |
                                   then the bit encodings are: 									   |
                                   Bit Value Meaning 										   |
                                    00b Port indicators are off                                                                    |
                                    01b Amber 											   |
                                    10b Green 											   |
                                    11b Undefined 									           |
                                   This field is zero if Port Power is zero. 							   |
<13>    PO      R/W     1      0   Port Owner.This bit unconditionally goes to a 0b when the 					   |  
                                   Configured bit in the CONFIGFLAG register makes a 0b to 1b transition. This bit 	           |
                                   unconditionally goes to 1b whenever the Configured bit is zero. 			           |
                                   System software uses this field to release ownership of the port to a selected host 		   |
                                   controller (in the event that the attached device is not a high-speed device). Software         |
                                   writes a one to this bit when the attached device is not a high-speed device. A one in          |
                                   this bit means that a companion host controller owns and controls the port. 			   |
<12>    PP      RO      1      1   Port Power. The function of this bit depends on the value of the Port                           |  
                                   Power Control (PPC) field in the HCSPARAMS register. The behavior is as follows: 		   |
                                   PPC PP    Operation 										   |
                                    0b 1b    RO  - Host controller does not have port power control switches. 		           |
                                                   Each port is hard-wired to power. 						   |
                                    1b 1b/0b R/W - Host controller has port power control switches. This bit 			   |
                                                   represents the current setting of the switch (0 = off, 1 = on). When            |
                                                   power is not available on a port (i.e. PP equals a 0), the port is              |
                                                   nonfunctional  and will not report attaches, detaches, etc. 		           |
                                   When an over-current condition is detected on a powered port and PPC is a one, the PP 	   |
                                   bit in each affected port may be transitioned by the host controller from a 1 to 0 		   |
                                   (removing power from the port). 							           |
<11:10> LSTS     RO     0      NS  Line Status.These bits reflect the current logical levels of the D+ (bit 11) and D(bit 10)      |  
                                   signal lines. These bits are used for detection of low-speed USB devices prior to 		   |
                                   the port reset and enable sequence. This field is valid only when the port enable bit is 	   |
                                   zero and the current connect status bit is set to a one. 					   |
                                   The encoding of the bits are: 								   |
                                    Bits[11:10] USB State   Interpretation 							   |
                                    00b         SE0         Not Low-speed device, perform EHCI reset 				   |
                                    10b         J-state     Not Low-speed device, perform EHCI reset 				   |
                                    01b         K-state     Low-speed device, release ownership of port 			   |
                                    11b         Undefined   Not Low-speed device, perform EHCI reset. 				   |
                                  This value of this field is undefined if Port Power is zero. 					   |
<9>     NS       RO     0     0   This bit is reserved for future use, and should return a value of zero when read. 	           |  
<8>     PRST     R/W    0     0   Port Reset.1=Port is in Reset. 0=Port is not in Reset. Default = 0. When                         |  
                                  software writes a one to this bit (from a zero), the bus reset sequence as defined in the 	   |
                                  USB Specification Revision 2.0 is started. Software writes a zero to this bit to terminate 	   |
                                  the bus reset sequence. Software must keep this bit at a one long enough to ensure the 	   |
                                  reset sequence, as specified in the USB Specification Revision 2.0, completes. Note: 		   |
                                  when software writes this bit to a one, it must also write a zero to the Port Enable bit. 	   |
                                  Note that when software writes a zero to this bit there may be a delay before the bit 	   |
                                  status changes to a zero. The bit status will not read as a zero until after the reset has 	   |
                                  completed. If the port is in high-speed mode after reset is complete, the host controller 	   |
                                  will automatically enable this port (e.g. set the Port Enable bit to a one). A host controller   |
                                  must terminate the reset and stabilize the state of the port within 2 milliseconds of 	   |
                                  software transitioning this bit from a one to a zero. For example: if the port detects that 	   |
                                  the attached device is high-speed during reset, then the host controller must have the           |
                                  port in the enabled state within 2ms of software writing this bit to a zero.  	           |
                                  The HCHalted bit in the USBSTS register should be a zero before software attempts to 		   |
                                  use this bit. The host controller may hold Port Reset asserted to a one when the 		   |
                                  HCHalted bit is a one.									   |
                                  This field is zero if Port Power is zero. 							   |
<7>     SPD      R/W     0    0   Suspend. 1=Port in suspend state. 0=Port not in suspend state. Default = 0. Port 		   |  
                                  Enabled Bit and Suspend bit of this register define the port states as follows: 		   |
                                  Bits [Port Enabled, Suspend]     Port State 							   |
                                               0X                  Disable 							   |
                                               10                  Enable 							   |
                                               11                  Suspend 							   |
                                  When in suspend state, downstream propagation of data is blocked on this port, except            |  
                                  for port reset. The blocking occurs at the end of the current transaction, if a transaction 	   |
                                  was in progress when this bit was written to 1. In the suspend state, the port is sensitive 	   |
                                  to resume detection. Note that the bit status does not change until the port is 		   |
                                  suspended and that there may be a delay in suspending a port if there is a transaction 	   |
                                  currently in progress on the USB. 								   |
                                  A write of zero to this bit is ignored by the host controller. The host controller will 	   |
                                  unconditionally set this bit to a zero when: 							   |
                                  . Software sets the Force Port Resume bit to a zero (from a one). 				   |
                                  . Software sets the Port Reset bit to a one (from a zero). 					   |
                                  If host software sets this bit to a one when the port is not enabled (i.e. Port enabled bit is   |
                                  a zero) the results are undefined. 								   |
                                  This field is zero if Port Power is zero.                                                        | 
<6>     FPR      R/W     0    0   Force Port Resume.                 								   |  
                                  1= Resume detected/driven on port. 0=No resume (Kstate) 					   |
                                  detected/driven on port. Default = 0. This functionality defined for manipulating 		   |
                                  this bit depends on the value of the Suspend bit. For example, if the port is not 		   |
                                  suspended (Suspend and Enabled bits are a one) and software transitions this bit to a 	   |
                                  one, then the effects on the bus are undefined. 						   |
                                  Software sets this bit to a 1 to drive resume signaling. The Host Controller sets this bit to    |
                                  a 1 if a J-to-K transition is detected while the port is in the Suspend state. When this bit 	   |
                                  transitions to a one because a J-to-K transition is detected, the Port Change Detect bit in 	   |
                                  the USBSTS register is also set to a one. If software sets this bit to a one, the host           |
                                  controller must not set the Port Change Detect bit. 						   |
                                  Note that when the EHCI controller owns the port, the resume sequence follows the                |
                                  defined sequence documented in the USB Specification Revision 2.0. The resume 	           |
                                  signaling (Full-speed 'K') is driven on the port as long as this bit remains a one. Software 	   |
                                  must appropriately time the Resume and set this bit to a zero when the appropriate 	           |
                                  amount of time has elapsed. Writing a zero (from one) causes the port to return to high-         |
                                  speed mode (forcing the bus below the port into a high-speed idle). This bit will remain a       |
                                  one until the port has switched to the high-speed idle. The host controller must complete        |
                                  this transition within 2 milliseconds of software setting this bit to a zero. 	           |
                                  This field is zero if Port Power is zero. 						           |
<5>   OCC     R/W1C      0     0  Over-current Change. 1=This bit gets set to a one when there is a change to Over-current Active. |  
                                  Software clears this bit by writing a one to this bit position. 			           |
<4>   OCA     RO         0     0  Over-current Active. 1=This port currently has an over-current condition. 0=This port does not   |  
                                  have an over-current condition. This bit will automatically transition from a one to a zero when |
                                  the over current condition is removed. 							   |
<3>   PEDC    R/W1C      0     0  Port Enable/Disable Change. 1=Port enabled/disabled status has changed. 			   |  
                                  0=No change. Default = 0. For the root hub, this bit gets set to a one only when a port is  	   |
                                        disabled due to the appropriate conditions existing at the EOF2 point (See Chapter 11 of   |
                                  the USB Specification for the definition of a Port Error). Software clears this bit by writing   |
                                  a 1 to it. 											   |
                                  This field is zero if Port Power is zero. 							   |
<2>   PED     R/W        0     0  Port Enabled/Disabled. 1=Enable. 0=Disable. Ports can only be 				   |  
                                  enabled by the host controller as a part of the reset and enable. Software cannot enable 	   |
                                  a port by writing a one to this field. The host controller will only set this bit to a one when  |
                                  the reset sequence determines that the attached device is a high-speed device. 		   |
                                  Ports can be disabled by either a fault condition (disconnect event or other fault               |
                                  condition) or by host software. Note that the bit status does not change until the port 	   |
                                  state actually changes. There may be a delay in disabling or enabling a port due to other 	   |
                                  host controller and bus events. See Section 4.2 for full details on port reset and enable. 	   |
                                  When the port is disabled (0b) downstream propagation of data is blocked on this port, 	   |
                                  except for reset. 										   |
                                  This field is zero if Port Power is zero. 							   |
<1>    CSC    R/W1C      0     0  Connect Status Change. 1=Change in Current Connect Status. 0=No change. Indicates a change 	   |  
                                  has occurred in the port's Current Connect Status. The host controller sets this bit for all 	   |
                                  changes to the port device connect status, even if system software has not cleared an existing   |
                                  connect status change. For example, the insertion status changes twice before system software    |
                                  has cleared the changed condition, hub hardware will be setting an already-set bit 	           |
                                  (i.e., the bit will remain set). Software sets this bit to 0 by writing a 1 to it.               |
                                  This field is zero if Port Power is zero. 						           |
<0>     CCS   RO         0     0  Current Connect Status. 1=Device is present on port. 0=No device is present. 			   |  
                                  This value reflects the current state of the port, and may not correspond 			   |
                                  directly to the event that caused the Connect Status Change bit (Bit 1) to be set. 		   |
                                  This field is zero if Port Power is zero. 							   |
----------------------------------------------------------------------------------------------------
===


*																  
* EHCI_INSNREG00 = EHCI Programmable Microframe Base Value Register (Synopsys Speicific)
* This register allows you to change the microframe length value (default is microframe SOF = 125 s) to reduce the simulation time. 
*

     ==============================================================
     UAHC(0)_EHCI_INSNREG00 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:14>  NS      R/W     0       0        Reserved.                                                                                | 
<13:1>   MFMC    R/W     0       0        For byte interface (8-bits), <13:1> is used as the 1-microframe counter.                 | 
                                          For word interface (16_bits> <12:1> is used as the 1-microframe counter with word        |
                                            interface (16-bits).                                                                   | 
<0>      EN      R/W     0       0        Writing 1b1 enables this register.                                                       | 
                                          Note: Do not enable this register for the gate-level netlist                             |
----------------------------------------------------------------------------------------------------
===

*																  
* EHCI_INSNREG03 = EHCI Timing Adjust Register (Synopsys Speicific)
* This register allows you to change the timing of Phy Tx turnaround delay etc. 
*

     ==============================================================
     UAHC(0)_EHCI_INSNREG03 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:13> NS         R/W     0       0        Reserved.                                                                                  | 
<12:10> TXTX_TADAO R/W     0       0        Tx-Tx turnaround Delay Add on. This field specifies the extra delays in phy_clks to        | 
                                            be added to the "Transmit to Transmit turnaround delay" value maintained in the core.      |
                                            The default value of this register field is 0. This default value of 0 is sufficient       |
                                            for most PHYs. But for some PHYs which puts wait states during the token packet, it        |
                                            may be required to program a value greater than 0 to meet the transmit to transmit         |
                                            minimum turnaround time. The recommendation to use the default value of 0 and change       |
                                            it only if there is an issue with minimum transmit-to- transmit turnaround time. This      |
                                            value should be programmed during core initialization and should not be changed afterwards.|
<9>     NS         R/W     0       0        Reserved.                                                                                  | 
<8:1>   TA_OFF     R/W     0       0        Time-Available Offset. This value indicates the additional number of bytes to be           | 
                                            accommodated for the time-available calculation. The USB traffic on the bus can be started |
                                            only when sufficient time is available to complete the packet within the EOF1 point. Refer |
                                            to the USB 2.0 specification for details of the EOF1 point. This time-available            |
                                            calculation is done in the hardware, and can be further offset by programming a value in   |
                                            this location.                                                                             |
                                            Note: Time-available calculation is added for future flexibility. The application is not   |
                                            required to program this field by default.                                                 |
<0>     NS         R/W     0       0        Reserved.                                                                                  | 
----------------------------------------------------------------------------------------------------
===


*																  
* EHCI_INSNREG04 = EHCI Debug Register (Synopsys Speicific)
* This register is used only for debug purposes.
*

     ==============================================================
     UAHC(0)_EHCI_INSNREG04 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:6>  NS        R/W     0       0        Reserved.                                                                                   | 
<5>     AUTO_DIS  R/W     0       0        Automatic feature disable.                                                                  | 
                                            1'b0: 0 by default, the automatic feature is enabled. The Suspend signal is deasserted     |
                                                  (logic level 1'b1) when run/stop is reset by software, but the hchalted bit is not   |
                                                  yet set.                                                                             |
                                            1'b1: Disables the automatic feature, which takes all ports out of suspend when software   |
                                                  clears the run/stop bit. This is for backward compatibility.                         |
                                           This bit has an added functionality in release 2.80a and later. For systems where the host  |
                                           is halted without waking up all ports out of suspend, the port can become stuck because     |
                                           the PHYCLK is not running when the halt is programmed. To avoid this, the DWC H20AHB host   |
                                           core automatically pulls ports out of suspend when the host is halted by software. This bit |
                                           is used to disable this automatic function.                                                 |
<4>   NAKRF_DIS   R/W      0       0       NAK Reload Fix Disable.                                                                     | 
                                             1b0: NAK reload fix enabled.                                                              |
                                             1b1: NAK reload fix disabled. (Incorrect NAK reload transition at the end of a microframe |
                                                  for backward compatibility with Release 2.40c. For more information see the USB 2.0  |
                                                  Host-AHB Release Notes.                                                              |
<3>   NS          RAZ      0       0       Reserved.                                                                                   | 
<2>   PESD        R/W      0       0       Scales down port enumeration time.                                                          | 
                                            1'b1: scale down enabled                                                                   |
                                            1'b0:  scale downd disabled                                                                |
                                           This is for simulation only.                                                                |
<1>   HCP_FW      R/W      0       0       HCCPARAMS Field Writeable.                                                                  | 
                                            1'b1: The HCCPARAMS register's bits 17, 15:4, and 2:0 become writable.                     |
                                            1'b0: The HCCPARAMS register's bits 17, 15:4, and 2:0 are not writable.                    |
<0>   HCP_RW      R/W      0       0       HCCPARAMS Reigster Writeable.                                                               | 
                                            1'b1: The HCCPARAMS register becomes writable.                                             |
                                            1'b0: The HCCPARAMS register is not writable.                                              |
----------------------------------------------------------------------------------------------------
===


*																  
* EHCI_INSNREG06 = EHCI  AHB Error Status Register (Synopsys Speicific)
* This register contains AHB Error Status. 
*

     ==============================================================
     UAHC(0)_EHCI_INSNREG06 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31>    VLD       R/W    0        0        AHB Error Captured. Indicator that an AHB error was encountered and values were captured.  | 
                                            To clear this field the application must write a 0 to it.                                  |
 <30:0>  NS        R/W    0       0        Reserved.                                                                                   | 
----------------------------------------------------------------------------------------------------
===

*																  
* EHCI_INSNREG07 = EHCI  AHB Error Address Register (Synopsys Speicific)
* This register contains AHB Error Status. 
*

     ==============================================================
     UAHC(0)_EHCI_INSNREG07 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  ERR_ADDR   RO    0        0        AHB Master Error Address. AHB address of the control phase at which the AHB error occurred  | 
----------------------------------------------------------------------------------------------------
===



 *
 *
 *    HCREVISION = Host Controller Revision Register 
 *                  
 *
 * 

     ==============================================================
     UAHC(0)_OHCI0_HCREVISION Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:8>   NS            RO       0x0         0x0       Reserved                                                                     |  
<7:0>    REV           RO       0x10        0x10      Revision This read-only field contains the BCD representation of the version |  
                                                      of the HCI specification that is implemented by this HC. For example, a value|
                                                      of 11h corresponds to version 1.1. All of the HC implementations that are    |
                                                      compliant with this specification will have a value of 10h.                  |
----------------------------------------------------------------------------------------------------
===


 *
 *
 *   HCCONTROL = Host Controller Control Register 
 * 
 *   The HcControl register defines the operating modes for the Host Controller. Most of the fields in this register are modified only by the Host Controller 
 *   Driver, except HostControllerFunctionalState and RemoteWakeupConnected.                
 *
 * 

     ==============================================================
     UAHC(0)_OHCI0_HCCONTROL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<1:0>   CBSR           R/W      0            NS      ControlBulkServiceRatio. This specifies the service ratio between Control and        |  
                                                     Bulk EDs. Before processing any of the nonperiodic lists, HC must compare the        |
                                                     ratio specified with its internal count on how many nonempty Control EDs have        | 
                                                     been processed, in determining whether to continue serving another Control ED        |
                                                     or switching to Bulk EDs. The internal count will be retained when crossing          |
                                                     the frame boundary. In case of reset, HCD is responsible for restoring this          |
                                                     value. 									          |
																          |
                                                       CBSR   No. of Control EDs Over Bulk EDs Served 				          |
                                                        0             1:1 							          |
                                                        1             2:1                                                                 |
                                                        2             3:1                                                                 |
                                                        3             4:1                                                                 |
<2>     PLE           R/W       0            0       PeriodicListEnable. This bit is set to enable the processing of the periodic list    |  
                                                     in the next Frame. If cleared by HCD, processing of the periodic list does not 	  |
                                                     occur after the next SOF. HC must check this bit before it starts processing 	  |
                                                     the list.  									  |
<3>     IE            R/W       0            0       IsochronousEnable This bit is used by HCD to enable/disable processing of 		  |  
                                                     isochronous EDs. While processing the periodic list in a Frame, HC checks the        |
                                                     status of this bit when it finds an Isochronous ED (F=1). If set (enabled), HC       |
                                                     continues processing the EDs. If cleared (disabled), HC halts processing of the      |
                                                     periodic list (which now contains only isochronous EDs) and begins processing the 	  |
                                                     Bulk/Control lists. Setting this bit is guaranteed to take effect in the next 	  |
                                                     Frame (not the current Frame).  							  |
<4>     CLE           R/W       0            0       ControlListEnable. This bit is set to enable the processing of the Control list in   |  
                                                     the next Frame. If cleared by HCD, processing of the Control list does not occur     |
                                                     after the next SOF. HC must check this bit whenever it determines to process the     |
                                                     list. When disabled, HCD may modify the list. If HcControlCurrentED is pointing to   |
                                                     an ED to be removed, HCD must advance the pointer by updating HcControlCurrentED     |
                                                     before re-enabling processing of the list.  					  |
<5>     BLE           R/W       0            0       BulkListEnable. This bit is set to enable the processing of the Bulk list in the     |  
                                                     next Frame. If cleared by HCD, processing of the Bulk list does not occur after 	  |
                                                     the next SOF. HC checks this bit whenever it determines to process the list. When 	  |
                                                     disabled, HCD may modify the list. If HcBulkCurrentED is pointing to an ED to be     |
                                                     removed, HCD must advance the pointer by updating HcBulkCurrentED before re-enabling |
                                                     processing of the list.  								  |
<7:6>   HCFS          R/W       0            0       HostControllerFunctionalState for USB 						  |  
                                                      00b: USBRESET 									  |
                                                      01b: USBRESUME 									  |
                                                      10b: USBOPERATIONAL                                                                 |
                                                      11b: USBSUSPEND 									  |
                                                     A transition to USBOPERATIONAL from another state causes SOF generation to begin 	  |
                                                     1 ms later. HCD may determine whether HC has begun sending SOFs by reading the 	  |
                                                     StartofFrame field of HcInterruptStatus. 						  |
                                                     This field may be changed by HC only when in the USBSUSPEND state. HC may move from  |
                                                     the USBSUSPEND state to the USBRESUME state after detecting the resume signaling 	  |
                                                     from a downstream port. 								  |
                                                     HC enters USBSUSPEND after a software reset, whereas it enters USBRESET after a 	  |
                                                     hardware reset. The latter also resets the Root Hub and asserts subsequent reset 	  |
                                                     signaling to downstream ports.  							  |
<8>     IR            R/W       0            0       InterruptRouting									  |  
                                                     This bit determines the routing of interrupts generated by events registered in 	  |
                                                     HcInterruptStatus. If clear, all interrupts are routed to the normal host bus 	  |
                                                     interrupt mechanism. If set, interrupts are routed to the System Management 	  |
                                                     Interrupt. HCD clears this bit upon a hardware reset, but it does not alter 	  |
                                                     this bit upon a software reset. HCD uses this bit as a tag to indicate the 	  |
                                                     ownership of HC.  									  |
<9>     RWC           R/W       0            0       RemoteWakeupConnected.This bit indicates whether HC supports remote wakeup signaling.|  
                                                     If remote wakeup is supported and used by the system it is the responsibility of 	  |
                                                     system firmware to set this bit during POST. HC clears the bit upon a hardware reset |
                                                     but does not alter it upon a software reset. Remote wakeup signaling of the host 	  |
                                                     system is host-bus-specific and is not described in this specification.  		  |
<10>    RWE           R/W       0            0       RemoteWakeupEnable. This bit is used by HCD to enable or disable the remote wakeup   |  
                                                     feature upon the detection of upstream resume signaling. When this bit is set and 	  |
                                                     the ResumeDetected bit in HcInterruptStatus is set, a remote wakeup is signaled      |
                                                     to the host system. Setting this bit has no impact on the generation of hardware     |
                                                     interrupt.                                                                           |
<31:11> NS            RO        0            0       Resverved                                                                            |  
----------------------------------------------------------------------------------------------------
===



 *
 * HCCOMMANDSTATUS = Host Controller Command Status Register
 * 
 * The HcCommandStatus register is used by the Host Controller to receive commands issued by the Host Controller Driver, as well as reflecting the 
 * current status of the Host Controller. To the Host Controller Driver, it appears to be a "write to set" register. The Host Controller must ensure 
 * that bits written as '1' become set in the register while bits written as '0' remain unchanged in the register. The Host Controller Driver
 * may issue multiple distinct commands to the Host Controller without concern for corrupting previously issued commands. The Host Controller Driver 
 * has normal read access to all bits. 
 * The SchedulingOverrunCount field indicates the number of frames with which the Host Controller has detected the scheduling overrun error. This 
 * occurs when the Periodic list does not complete before EOF. When a scheduling overrun error is detected, the Host Controller increments the counter 
 * and sets the SchedulingOverrun field in the HcInterruptStatus register.                 
 *
 * 

     ==============================================================
     UAHC(0)_OHCI0_HCCOMMANDSTATUS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      HCR           R/W       0           0        HostControllerReset. This bit is set by HCD to initiate a software reset of  |  
                                                      HC. Regardless of the functional state of HC, it moves to the USBSUSPEND 	   |
                                                      state in which most of the operational registers are reset except those 	   |
                                                      stated otherwise; e.g., the InterruptRouting field of HcControl, and no 	   |
                                                      Host bus accesses are allowed. This bit is cleared by HC upon the 	   |
                                                      completion of the reset operation. The reset operation must be completed 	   |
                                                      within 10 ms. This bit, when set, should not cause a reset to the Root Hub   |
                                                      and no subsequent reset signaling should be asserted to its downstream ports.|  
<1>      CLF           R/W       0           0        ControlListFilled. This bit is used to indicate whether there are any TDs    |  
                                                      on the Control list. It is set by HCD whenever it adds a TD to an ED in the  |
                                                      Control list. When HC begins to process the head of the Control list, it 	   |
                                                      checks CLF. As long as ControlListFilled is 0, HC will not start processing  |
                                                      the Control list. If CF is 1, HC will start processing the Control list and  |
                                                      will set ControlListFilled to 0. If HC finds a TD on the list, then HC will  |
                                                      set ControlListFilled to 1 causing the Control list processing to continue.  |
                                                      If no TD is found on the Control list, and if the HCD does not set 	   |
                                                      ControlListFilled, then ControlListFilled will still be 0 when HC completes  |
                                                      processing the Control list and Control list processing will stop.  	   |
<2>      BLF           R/W       0           0        BulkListFilled This bit is used to indicate whether there are any TDs on the |  
                                                      Bulk list. It is set by HCD whenever it adds a TD to an ED in the Bulk list. |
                                                      When HC begins to process the head of the Bulk list, it checks BF. As long   |
                                                      as BulkListFilled is 0, HC will not start processing the Bulk list. If 	   |
                                                      BulkListFilled is 1, HC will start processing the Bulk list and will set BF  |
                                                      to 0. If HC finds a TD on the list, then HC will set BulkListFilled to 1 	   |
                                                      causing the Bulk list processing to continue. If no TD is found on the Bulk  |
                                                      list,and if HCD does not set BulkListFilled, then BulkListFilled will still  |
                                                      be 0 when HC completes processing the Bulk list and Bulk list processing will| 
                                                      stop.                                                                        |  
<3>      OCR           R/W       0           0        OwnershipChangeRequest. This bit is set by an OS HCD to request a change of  |  
                                                      control of the HC. When set HC will set the OwnershipChange field in         |
                                                      HcInterruptStatus. After the changeover, this bit is cleared and remains so  |
                                                      until the next request from OS HCD.                                          |
<15:4>   NS            RO        0           0        Reserved field                                                               |  
<17:16>  SOC           RO        0           0        SchedulingOverrunCount. These bits are incremented on each scheduling overrun|  
                                                      error. It is initialized to 00b and wraps around at 11b. This will be        |
                                                      incremented when a scheduling overrun is detected even if SchedulingOverrun  |
                                                      in HcInterruptStatus has already been set. This is used by HCD to monitor    |
                                                      any persistent scheduling problems.                                          |
<31:18>  NS            RO        0           0        Resverved field                                                              |  
----------------------------------------------------------------------------------------------------
===


 *
 * HCINTERRUPTSTATUS = Host Controller InterruptStatus Register 
 *
 * This register provides status on various events that cause hardware interrupts. When an event occurs, Host Controller sets the corresponding bit 
 * in this register. When a bit becomes set, a hardware interrupt is generated if the interrupt is enabled in the HcInterruptEnable register 
 * and the MasterInterruptEnable bit is set. The Host Controller Driver may clear specific bits in this register by writing '1' to bit positions
 * to be cleared. The Host Controller Driver may not set any of these bits. The Host Controller will never clear the bit. 

     ==============================================================
     UAHC(0)_OHCI0_HCINTERRUPTSTATUS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      SO            R/W1C     0          0         SchedulingOverrun. This bit is set when the USB schedule for the current       |  
                                                      Frame overruns and after the update of HccaFrameNumber. A scheduling overrun   |
                                                      will also cause the SchedulingOverrunCount of HcCommandStatus to be 	     |
                                                      incremented.  								     |
<1>      WDH           R/W1C     0          0         WritebackDoneHead. This bit is set immediately after HC has written 	     |  
                                                      HcDoneHead to HccaDoneHead. Further updates of the HccaDoneHead will not 	     |
                                                      occur until this bit has been cleared. HCD should only clear this bit after    |
                                                      it has saved the content of HccaDoneHead.  				     |
<2>      SF            R/W1C     0          0         StartofFrame. This bit is set by HC at each start of a frame and after the     |  
                                                       update of HccaFrameNumber. HC also generates a SOF token at the same time.    |
<3>      RD            R/W1C     0          0         ResumeDetected. This bit is set when HC detects that a device on the USB is    |  
                                                       asserting resume signaling. It is the transition from no resume signaling to  |
                                                      resume signaling causing this bit to be set. This bit is not set when HCD      |
                                                      sets the USBRESUME state.  						     |
<4>      UE            R/W1C     0          0         UnrecoverableError. This bit is set when HC detects a system error not related |  
                                                      to USB. HC should not proceed with any processing nor signaling before the     |
                                                      system error has been corrected. HCD clears this bit after HC has been reset.  |
<5>      FNO           R/W1C     0          0         FrameNumberOverflow. This bit is set when the MSb of HcFmNumber (bit 15) 	     |  
                                                      changes value, from 0 to 1 or from 1 to 0, and after HccaFrameNumber has been  |
                                                      updated.  								     |
<6>      RHSC          R/W1C     0          0         RootHubStatusChange. This bit is set when the content of HcRhStatus or the     |  
                                                      content of any of HcRhPortStatus[NumberofDownstreamPort] has changed.  	     |
<29:7>   NS            RO        0          0         Reserved									     |  
<30>     OC            R/W1C     0          0         OwnershipChange. This bit is set by HC when HCD sets the OwnershipChangeRequest|  
                                                      field in HcCommandStatus. This event, when unmasked, will always generate an   |
                                                      System Management Interrupt (SMI) immediately. This bit is tied to 0b when the |
                                                      SMI pin is not implemented.                                                    |
<31>     NS            RO        0          0         Resvered                                                                       |  
----------------------------------------------------------------------------------------------------
===


 *
 * HCINTERRUPTENABLE = Host Controller InterruptEnable Register 
 *
 * Each enable bit in the HcInterruptEnable register corresponds to an associated interrupt bit in the HcInterruptStatus register. The HcInterruptEnable 
 * register is used to control which events generate a hardware interrupt. When a bit is set in the HcInterruptStatus register AND the corresponding bit 
 * in the HcInterruptEnable register is set AND the MasterInterruptEnable bit is set, then a hardware interrupt is requested on the host bus. 
 * Writing a '1' to a bit in this register sets the corresponding bit, whereas writing a '0' to a bit in this register leaves the corresponding bit 
 * unchanged. On read, the current value of this register is returned.                 
 *
 * 

     ==============================================================
     UAHC(0)_OHCI0_HCINTERRUPTENABLE Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     SO         R/W      0            0         0 - Ignore; 1 - Enable interrupt generation due to Scheduling Overrun.          |  
<1>     WDH        R/W      0            0         0 - Ignore; 1 - Enable interrupt generation due to HcDoneHead Writeback.        |  
<2>     SF         R/W      0            0         0 - Ignore; 1 - Enable interrupt generation due to Start of Frame.              |  
<3>     RD         R/W      0            0         0 - Ignore; 1 - Enable interrupt generation due to Resume Detect.               |  
<4>     UE         R/W      0            0         0 - Ignore; 1 - Enable interrupt generation due to Unrecoverable Error.         |  
<5>     FNO        R/W      0            0         0 - Ignore; 1 - Enable interrupt generation due to Frame Number Overflow.       |  
<6>     RHSC       R/W      0            0         0 - Ignore; 1 - Enable interrupt generation due to Root Hub Status Change.      |  
<29:7>  NS         RO       0            0         Reserved field                                                                  |  
<30>    OC         R/W      0            0         0 - Ignore; 1 - Enable interrupt generation due to Ownership Change.            |  
<31>    MIE        R/W      0            0         A '0' written to this field is ignored by HC.                                   |  
                                                   A '1' written to this field enables interrupt generation due to events          |          
                                                   specified in the other bits of this register. This is used by HCD as a Master   |  
                                                   Interrupt Enable.                                                               |  
----------------------------------------------------------------------------------------------------
===

 *
 *   HCINTERRUPTDISABLE = Host Controller InterruptDisable Register 
 *
 * Each disable bit in the HcInterruptDisable register corresponds to an associated interrupt bit in the HcInterruptStatus register. The HcInterruptDisable 
 * register is coupled with the HcInterruptEnable register. Thus, writing a '1' to a bit in this register clears the corresponding bit in the HcInterruptEnable 
 * register, whereas writing a '0' to a bit in this register leaves the corresponding bit in the HcInterruptEnable register unchanged. On read, the current 
 * value of the HcInterruptEnable register is returned. 
 * 

     ==============================================================
     UAHC(0)_OHCI0_HCINTERRUPTDISABLE Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>     SO            R/W       0            0       0 - Ignore; 1 - Disable interrupt generation due to Scheduling Overrun.       |  
<1>     WDH           R/W       0            0       0 - Ignore; 1 - Disable interrupt generation due to HcDoneHead Writeback.     |  
<2>     SF            R/W       0            0       0 - Ignore; 1 - Disable interrupt generation due to Start of Frame.  	   |  
<3>     RD            R/W       0            0       0 - Ignore; 1 - Disable interrupt generation due to Resume Detect.  	   |  
<4>     UE            R/W       0            0       0 - Ignore; 1 - Disable interrupt generation due to Unrecoverable Error.  	   |  
<5>     FNO           R/W       0            0       0 - Ignore; 1 - Disable interrupt generation due to Frame Number Overflow.    |  
<6>     RHSC          R/W       0            0       0 - Ignore; 1 - Disable interrupt generation due to Root Hub Status Change.   |  
<29:7>  NS            RO        0            0       Reserved 									   |  
<30>    OC            R/W       0            0       0 - Ignore; 1 - Disable interrupt generation due to Ownership Change.  	   |  
<31>    MIE           R/W       0            0       A '0' written to this field is ignored by HC. 				   |  
                                                     A '1' written to this field disables interrupt generation due to events 	   |
                                                     specified in the other bits of this register. This field is set after a 	   |
                                                     hardware or software reset.  						   |
----------------------------------------------------------------------------------------------------
===


 *
 *
 * HCHCCA =  Host Controller Host Controller Communication Area Register 
 *
 * The HcHCCA register contains the physical address of the Host Controller Communication Area. The Host Controller Driver determines the alignment restrictions 
 * by writing all 1s to HcHCCA and reading the content of HcHCCA. The alignment is evaluated by examining the number of zeroes in the lower order bits. The 
 * minimum alignment is 256 bytes; therefore, bits 0 through 7 must always return '0' when read. Detailed description can be found in Chapter 4. This area 
 * is used to hold the control structures and the Interrupt table that are accessed by both the Host Controller and the Host Controller Driver. 
 *

     ==============================================================
     UAHC(0)_OHCI0_HCHCCA Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:8>   HCCA           R/W      0        NS       This is the base address (bits [31:8]) of the Host Controller Communication Area. | 
<7:0>    NS             R/W      0        0        Reserved. Always write/read 0.                                                    | 
----------------------------------------------------------------------------------------------------
===


 *
 *   HCPERIODCURRENTED = Host Controller Period Current ED Register 
 * 
 * The HcPeriodCurrentED register contains the physical address of the current Isochronous or Interrupt Endpoint Descriptor.                 
 *
 * 

     ==============================================================
     UAHC(0)_OHCI0_HCPERIODCURRENTED Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:4>   PCED          RO        0          NS        PeriodCurrentED. This is used by HC to point to the head of one of the       |  
                                                      Periodic lists which will be processed in the current Frame. The content of  |
                                                      this register is updated by HC after a periodic ED has been processed. HCD   |
                                                      may read the content in determining which ED is currently being processed    |
                                                      at the time of reading.                                                      |
<3:0>    NS            RO        0          0         Reserved. Always read as 0                                                   |  
----------------------------------------------------------------------------------------------------
===



 *
 *
 * HCCONTROLHEADED = Host Controller Control Head ED Register 
 *
 * The HcControlHeadED register contains the physical address of the first Endpoint Descriptor of the Control list.  
 *                  
 *
 * 

     ==============================================================
     UAHC(0)_OHCI0_HCCONTROLHEADED Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:4>   CHED         R/W       0            NS       ControlHeadED. HC traverses the Control list starting with the HcControlHeadED  |  
                                                      pointer. The content is loaded from HCCA during the initialization of HC.       |
<3:0>    NS           R/W       0            0        Resvered. Always write/read 0.                                                  |  
----------------------------------------------------------------------------------------------------
===




 *
 *
 * HCCONTROLCURRENTED = Host Controller Control Current ED Register 
 *
 * The HcControlCurrentED register contains the physical address of the current Endpoint Descriptor of the Control list. 
 *                  
 *
 * 

     ==============================================================
     UAHC(0)_OHCI0_HCCONTROLCURRENTED Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:4>   CCED          R/W       0           NS       ControlCurrentED. This pointer is advanced to the next ED after serving the  |  
                                                      present one. HC will continue processing the list from where it left off in  |
                                                      the last Frame. When it reaches the end of the Control list, HC checks the   |
                                                      ControlListFilled of in HcCommandStatus. If set, it copies the content of    |
                                                      HcControlHeadED to HcControlCurrentED and clears the bit. If not set, it 	   |
                                                      does nothing. HCD is allowed to modify this register only when the 	   |
                                                      ControlListEnable of HcControl is cleared. When set, HCD only reads the 	   |
                                                      instantaneous value of this register. Initially, this is set to zero to 	   |
                                                      indicate the end of the Control list.  					   |
<3:0>    NS            R/W       0            0       Reserved. Always Write/read 0.						   |  
----------------------------------------------------------------------------------------------------
===
																   
																   
 *
 * 
 * HCBULKHEADED = Host Controller Bulk Head ED Register 
 *
 * The HcBulkHeadED register contains the physical address of the first Endpoint Descriptor of the Bulk list. 
 *                  
 *
 * 

     ==============================================================
     UAHC(0)_OHCI0_HCBULKHEADED Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:4>    BHED          R/W      0           NS       BulkHeadED. HC traverses the Bulk list starting with the HcBulkHeadED        |  
                                                      pointer. The content is loaded from HCCA during the initialization of HC.    |
<3:0>     NS            R/W      0           0        Reserved field. Always write/read 0.                                         |  
----------------------------------------------------------------------------------------------------
===



 *
 *
 * HCBULKCURRENTED = Host Controller Bulk Current ED Register
 *
 * The HcBulkCurrentED register contains the physical address of the current endpoint of the Bulk list. As the Bulk list will be served in a round-robin 
 * fashion, the endpoints will be ordered according to their insertion to the list. 
 *                  
 * 

     ==============================================================
     UAHC(0)_OHCI0_HCBULKCURRENTED Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:4>   BCED          R/W       0           NS       BulkCurrentED. This is advanced to the next ED after the HC has served the   |  
                                                      present one. HC continues processing the list from where it left off in the  |
                                                      last Frame. When it reaches the end of the Bulk list, HC checks the 	   |
                                                      ControlListFilled of HcControl. If set, it copies the content of HcBulkHeadED| 
                                                      to HcBulkCurrentED and clears the bit. If it is not set, it does nothing.    |
                                                      HCD is only allowed to modify this register when the BulkListEnable of 	   |
                                                      HcControl is cleared. When set, the HCD only reads the instantaneous value of| 
                                                      this register. This is initially set to zero to indicate the end of the Bulk |
                                                      list.  									   |
<3:0>    NS            R/W       0           0        Reserved field. Always write/read 0.					   |  
----------------------------------------------------------------------------------------------------
===



 *
 * 
 * HCDONEHEAD = Host Controller Done Head Register 
 *
 * The HcDoneHead register contains the physical address of the last completed Transfer Descriptor that was added to the Done queue. In normal operation, 
 * the Host Controller Driver should not need to read this register as its content is periodically written to the HCCA.                
 *
 * 

     ==============================================================
     UAHC(0)_OHCI0_HCDONEHEAD Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<31:4>   DH             RO      0            NS       DoneHead. When a TD is completed, HC writes the content of HcDoneHead to the   |  
                                                      NextTD field of the TD. HC then overwrites the content of HcDoneHead with the  |
                                                      address of this TD. This is set to zero whenever HC writes the content of      |
                                                      this register to HCCA. It also sets the WritebackDoneHead of HcInterruptStatus.|  
<3:0>    NS             RO      0            0        Reserved field. Always read 0.                                                 |  
----------------------------------------------------------------------------------------------------
===


 *
 * 
 * HCFMINTERVAL = Host Controller Frame Interval Register 
 *
 * The HcFmInterval register contains a 14-bit value which indicates the bit time interval in a Frame, (i.e., between two consecutive SOFs), and a 15-bit value 
 * indicating the Full Speed maximum packet size that the Host Controller may transmit or receive without causing scheduling overrun. The Host Controller Driver 
 * may carry out minor adjustment on the FrameInterval by writing a new value over the present one at each SOF. This provides the programmability necessary for 
 * the Host Controller to synchronize with an external clocking resource and to adjust any unknown local clock offset. 
 *                  
 *

     ==============================================================
     UAHC(0)_OHCI0_HCFMINTERVAL Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<13:0>   FI            R/W      0x2EDF       NS       FrameInterval. This specifies the interval between two consecutive SOFs in bit |  
                                                      times. The nominal value is set to be 11,999. HCD should store the current     |
                                                      value of this field before resetting HC. By setting the HostControllerReset    |
                                                      field of HcCommandStatus as this will cause the HC to reset this field to its  |
                                                      nominal value. HCD may choose to restore the stored value upon the completion  |
                                                      of the Reset sequence.  							     |
<15:14>  NS            R/W      0            0        Reserved. Always write/read 0.						     |  
<30:16>  FSMPS         R/W      0            NS       FSLargestDataPacket. This field specifies a value which is loaded into the     |  
                                                      Largest Data Packet Counter at the beginning of each frame. The counter value  |
                                                      represents the largest amount of data in bits which can be sent or received by |
                                                      the HC in a single transaction at any given time without causing scheduling    |
                                                      overrun. The field value is calculated by the HCD.  			     |
<31>     FIT           R/W      0            0        FrameIntervalToggle. HCD toggles this bit whenever it loads a new value to     |  
                                                      FrameInterval.                                                                 |
----------------------------------------------------------------------------------------------------
===


 *
 * 
 * HCFMREMAINING = Host Controller Frame Remaining Register 
 * The HcFmRemaining register is a 14-bit down counter showing the bit time remaining in the current Frame. 
 *
 * 

     ==============================================================
     UAHC(0)_OHCI0_HCFMREMAINING Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<13:0>   FR            RO       0           NS        FrameRemaining. This counter is decremented at each bit time. When it          |  
                                                      reaches zero, it is reset by loading the FrameInterval value specified in      |
                                                      HcFmInterval at the next bit time boundary. When entering the USBOPERATIONAL   |
                                                      state, HC re-loads the content with the FrameInterval of HcFmInterval and uses |
                                                      the updated value from the next SOF.                                           |
<30:14>  NS            RO       0           0         Resvered. Always read 0.                                                       |  
<31>     FRT           RO       0           0         FrameRemainingToggle. This bit is loaded from the FrameIntervalToggle field    |  
                                                      of HcFmInterval whenever FrameRemaining reaches 0. This bit is used by HCD     |
                                                      for the synchronization between FrameInterval and FrameRemaining.              |
----------------------------------------------------------------------------------------------------
===



 *
 * 
 * HCFMNUMBER = Host Cotroller Frame Number Register
 * 
 * The HcFmNumber register is a 16-bit counter. It provides a timing reference among events happening in the Host Controller and the Host Controller Driver. 
 * The Host Controller Driver may use the 16-bit value specified in this register and generate a 32-bit frame number without requiring frequent access to 
 * the register. 
 *                  
 *

     ==============================================================
     UAHC(0)_OHCI0_HCFMNUMBER Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>   FN             RO       0           NS       FrameNumber. This is incremented when HcFmRemaining is re-loaded. It will be |  
                                                      rolled over to 0h after ffffh. When entering the USBOPERATIONAL state,       |
                                                      this will be incremented automatically. The content will be written to HCCA  |
                                                      after HC has incremented the FrameNumber at each frame boundary and sent a   |
                                                      SOF but before HC reads the first ED in that Frame. After writing to HCCA,   |
                                                      HC will set the StartofFrame in HcInterruptStatus.                           |
<31:16>  NS             RO       0           0        Reserved. Always read 0.                                                     |  
----------------------------------------------------------------------------------------------------
===


 *
 * 
 * HCPERIODICSTART = Host Controller Periodic Start Register 
 *
 * The HcPeriodicStart register has a 14-bit programmable value which determines when is the earliest time HC should start processing the periodic list. 
 *                  
 *
 * 

     ==============================================================
     UAHC(0)_OHCI0_HCPERIODICSTART Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<13:0>    PS            R/W      0          0x3E67    PeriodicStart After a hardware reset, this field is cleared. This is then set|   
                                                      by HCD during the HC initialization. The value is calculated roughly as 10%  |
                                                      off from HcFmInterval.. A typical value will be 3E67h. When HcFmRemaining    |
                                                      reaches the value specified, processing of the periodic lists will have      |
                                                      priority over Control/Bulk processing. HC will therefore start processing    |
                                                      the Interrupt list after completing the current Control or Bulk transaction  |
                                                      that is in progress.                                                         |
<31:14>   NS            R/W      0           0        Reserved. Always write/read 0.                                               |   
----------------------------------------------------------------------------------------------------
===

 
 *
 *
 * HCLSTHRESHOLD = Host Controller LS Threshold Register 
 *
 * The HcLSThreshold register contains an 11-bit value used by the Host Controller to determine whether to commit to the transfer of a maximum of 8-byte 
 * LS packet before EOF. Neither the Host Controller nor the Host Controller Driver are allowed to change this value. 
 *                  
 *
 * 

     ==============================================================
     UAHC(0)_OHCI0_HCLSTHRESHOLD Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<11:0>   LST           R/W      0x0628        NS      LSThreshold                                                                  |  
                                                      This field contains a value which is compared to the FrameRemaining field    |
                                                      prior to initiating a Low Speed transaction. The transaction is started only |
                                                      if FrameRemaining >= this field. The value is calculated by HCD              |
                                                      with the consideration of transmission and setup overhead.                   |
<31:12>  NS            R/W      0x0           0x0     Reserved. Always write/read 0.                                               |  
----------------------------------------------------------------------------------------------------
===




 *
 * 
 * HCRHDESCRIPTORA = Host Controller Root Hub DescriptorA Register 
 *
 * The HcRhDescriptorA register is the first register of two describing the characteristics of the Root Hub. Reset values are implementation-specific. 
 * The descriptor length (11), descriptor type (0x29), and hub controller current (0) fields of the hub Class Descriptor are emulated by the HCD. All 
 * other fields are located in the HcRhDescriptorA and HcRhDescriptorB registers.
 *                  
 *

     ==============================================================
     UAHC(0)_OHCI0_HCRHDESCRIPTORA Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<7:0>    NDP          RO        2           2        NumberDownstreamPorts. These bits specify the number of downstream ports         |  
                                                     supported by the Root Hub. It is implementation-specific. The minimum number     |
                                                     of ports is 1. The maximum number of ports supported by OpenHCI is 15. 	      |
<8>      NPS          R/W       0           0        NoPowerSwitching These bits are used to specify whether power switching is       |  
                                                     supported or port are always powered. It is implementation-specific. When 	      |
                                                     this bit is cleared, the PowerSwitchingMode specifies global or per-port 	      |
                                                     switching. 								      |
                                                       0: Ports are power switched 						      |
                                                       1: Ports are always powered on when the HC is powered on  		      |
<9>      PSM          R/W       1           1        PowerSwitchingMode. This bit is used to specify how the power switching of       |  
                                                     the Root Hub ports is controlled. It is implementation-specific. This field      |
                                                     is only valid if the NoPowerSwitching field is cleared. 0: all ports are 	      |
                                                     powered at the same time. 1: each port is powered individually.  This mode       |
                                                     allows port power to be controlled by either the global switch or per-port       |
                                                     switching. If the PortPowerControlMask bit is set, the port responds only 	      |
                                                     to port power commands (Set/ClearPortPower). If the port mask is cleared, 	      |
                                                     then the port is controlled only by the global power switch 		      |
                                                     (Set/ClearGlobalPower).  							      |
<10>     DT           RO        0           0        DeviceType. This bit specifies that the Root Hub is not a compound device. The   |  
                                                     Root Hub is not permitted to be a compound device. This field should always      |
                                                     read/write 0.  								      |
<11>     OCPM         R/W       NS         NS        OverCurrentProtectionMode. This bit describes how the overcurrent status for     |  
                                                     the Root Hub ports are reported. At reset, this fields should reflect the same   |
                                                     mode as PowerSwitchingMode. This field is valid only if the 		      |
                                                     NoOverCurrentProtection field is cleared. 0: over-current status is reported     |
                                                     collectively for all downstream ports 1: over-current status is reported on a    |
                                                     per-port basis                                                                   |
<12>     NOCP         R/W       1          1         NoOverCurrentProtection. This bit describes how the overcurrent status for the   |  
                                                     Root Hub ports are reported. When this bit is cleared, the                       |
                                                     OverCurrentProtectionMode field specifies global or per-port reporting.          |
                                                      0: Over-current status is reported  collectively for all downstream ports       |
                                                      1: No overcurrent protection supported                                          |
<23:13>  NS           RO        0          0         Reserved.                                                                        |  
<31:24>  POTPGT       R/W       1          1         PowerOnToPowerGoodTime. This byte specifies the duration HCD has to wait before  |  
                                                     accessing a powered-on port of the Root Hub. It is implementation-specific. The  |
                                                     unit of time is 2 ms. The duration is calculated as POTPGT * 2 ms.               |
----------------------------------------------------------------------------------------------------
===



 *
 * 
 * HCRHDESCRIPTORB = Host Controller Root Hub DescriptorB Register
 *  
 * The HcRhDescriptorB register is the second register of two describing the characteristics of the Root Hub. These fields are written during 
 * initialization to correspond with the system implementation. Reset values are implementation-specific. 
 *                  
 * 

     ==============================================================
     UAHC(0)_OHCI0_HCRHDESCRIPTORB Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<15:0>   DR            R/W       0          0         DeviceRemovable.                                                             |  
                                                      Each bit is dedicated to a port of the Root Hub. When cleared,the attached   |
	                                              device is removable. When set, the attached device is not removable.	   |
                                                          bit 0: Reserved							   |
                                                          bit 1: Device attached to Port #1					   |
                                                          bit 2: Device attached to Port #2					   |
                                                          ...									   |
                                                          bit15: Device attached to Port #15					   |
<31:16>  PPCM          R/W       0          NS        PortPowerControlMask. 							   |  
                                                      Each bit indicates if a port is affected by a global power control command   |
                                                      when PowerSwitchingMode is set. When set, the port's power state is only 	   |
                                                      affected by per-port power control (Set/ClearPortPower). When cleared, the   |
                                                      port is controlled by the global power switch (Set/ClearGlobalPower). If 	   |
                                                      the device is configured to global switching mode (PowerSwitchingMode=0),    |
                                                      this field is not valid.							   |
                                                         bit 0: Reserved							   |
                                                         bit 1: Ganged-power mask on Port #1					   |
                                                         bit 2: Ganged-power mask on Port #2					   |
                                                         ...									   |
                                                         bit15: Ganged-power mask on Port #15					   |
----------------------------------------------------------------------------------------------------
===


 *																   
 * 																   
 * HCRHSTATUS = Host Controller Root Hub Status Register
 *
 * The HcRhStatus register is divided into two parts. The lower word of a Dword represents the Hub Status field and the upper word represents the Hub 
 * Status Change field. Reserved bits should always be written '0'.                 
 *
 * 

     ==============================================================
     UAHC(0)_OHCI0_HCRHSTATUS Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      LPS           R/W       0           0       (read)  LocalPowerStatus. The Root Hub does not support the local power status     |  
                                                             feature; thus, this bit is always read as '0. 				|
                                                     (write) ClearGlobalPower. In global power mode (PowerSwitchingMode=0), This 	|
                                                             bit is written to '1' to turn off power to all ports 			|
                                                             (clear PortPowerStatus). In per-port power mode, it clears 		|
                                                             PortPowerStatus only on ports whose PortPowerControlMask bit is not 	|
                                                             set. Writing a '0' has no effect. Description  				|
<1>      OCI           RO        0           0       OverCurrentIndicator. This bit reports overcurrent conditions when the global 	|  
                                                     reporting is implemented. When set, an overcurrent condition exists. When 		|
                                                     cleared, all power operations are normal. If per-port overcurrent protection 	|
                                                     is implemented this bit is always '0'  						|
<14:2>   NS            RO        0           0       Reserved  										|  
<15>     DRWE          R/W       0           NS      (read) DeviceRemoteWakeupEnable. This bit enables a ConnectStatusChange bit as 	|  
                                                            a resume event, causing a USBSUSPEND to USBRESUME state transition and      |
                                                            setting the ResumeDetected interrupt. 0 = ConnectStatusChange is not a 	|
                                                            remote wakeup event. 1 = ConnectStatusChange is a remote wakeup event. 	|
                                                     (write) SetRemoteWakeupEnable Writing a '1' sets DeviceRemoveWakeupEnable. 	|
                                                             Writing a '0' has no effect.  						|
<16>     LPSC          R/W       0         NS        (read) LocalPowerStatusChange. The Root Hub does not support the local power 	|  
                                                            status feature; thus, this bit is always read as '0'. 			|
                                                     (write) SetGlobalPower In global power mode (PowerSwitchingMode=0), This bit 	|
                                                             is written to '1' to turn on power to all ports (clear PortPowerStatus).   |
                                                             In per-port power mode, it sets PortPowerStatus only on ports whose 	|
                                                             PortPowerControlMask bit is not set. Writing a '0' has no effect.  	|
<17>     CCIC          R/W1C     0           NS      OverCurrentIndicatorChange. This bit is set by hardware when a change has 		|  
                                                     occurred to the OCI field of this register. The HCD clears this bit by 		|
                                                     writing a '1'. Writing a '0' has no effect.                                        |
<30:18>  NS            RO        0           0       Reserved                                                                           |  
<31>     CRWE          WO       NS          NS       (write) ClearRemoteWakeupEnable Writing a '1' clears DeviceRemoveWakeupEnable.     |  
                                                             Writing a '0' has no effect.                                               |
----------------------------------------------------------------------------------------------------
===




 *
 * 
 * HCRHPORTSTATUS@ = Host Controller Root Hub Port @ Status Registers 
 *
 * The HcRhPortStatus[1:NDP] register is used to control and report port events on a per-port basis. NumberDownstreamPorts represents the number 
 * of HcRhPortStatus registers that are implemented in hardware. The lower word is used to reflect the port status, whereas the upper word reflects 
 * the status change bits. Some status bits are implemented with special write behavior (see below). If a transaction (token through handshake) is 
 * in progress when a write to change port status occurs, the resulting port status change must be postponed until the transaction completes. 
 * Reserved bits should always be written '0'. 
 *                  
 *

     ==============================================================
     UAHC(0)_OHCI0_HCRHPORTSTATUS(1..2) Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<0>      CCS            R/W     0            NS      (read) CurrentConnectStatus. This bit reflects the current state of the           |  
                                                            downstream port.              					       |
                                                              0 = no device connected						       |
                                                              1 = device connected						       |
                                                      (write) ClearPortEnable.							       |
                                                             The HCD writes a '1' to this bit to clear the PortEnableStatus bit.       |
                                                             Writing a '0' has no effect. The CurrentConnectStatus is not	       |
                                                             affected by any write.						       |
                                                       Note: This bit is always read '1b' when the attached device is	       |
                                                             nonremovable (DeviceRemoveable[NDP]).				       |
<1>      PES           R/W      0           NS        (read) PortEnableStatus. This bit indicates whether the port is enabled or       |  
                                                             disabled. The Root Hub may clear this bit when an overcurrent condition,  |
                                                             disconnect event, switched-off power, or operational bus error such       |
                                                             as babble is detected. This change also causes PortEnabledStatusChange    | 
                                                             to be set. HCD sets this bit by writing SetPortEnable and clears it by    |
                                                             writing ClearPortEnable. This bit cannot be set when CurrentConnectStatus |
                                                             is cleared. This bit is also set, if not already, at the completion of a  |
                                                             port reset when ResetStatusChange is set or port suspend when 	       |
                                                             SuspendStatusChange is set. 					       |
                                                               0 = port is disabled 						       |
                                                               1 = port is enabled 						       |
                                                        (write) SetPortEnable. The HCD sets PortEnableStatus by writing a '1'.         |
                                                             Writing a '0' has no effect. If CurrentConnectStatus is cleared, this     |
                                                             write does not set PortEnableStatus, but instead sets ConnectStatusChange.| 
                                                             This informs the driver that it attempted to enable a disconnected port.  |
<2>       PSS           R/W     0           NS         (read) PortSuspendStatus. This bit indicates the port is suspended or in the    |  
                                                             resume sequence. It is set by a SetSuspendState write and cleared when    |
                                                             PortSuspendStatusChange is set at the end of the resume interval. This    |
                                                             bit cannot be set if CurrentConnectStatus is cleared. This bit is also    |
                                                             cleared when PortResetStatusChange is set at the end of the port reset    |
                                                             or when the HC is placed in the USBRESUME state. If an upstream resume is |
                                                             in progress, it should propagate to the HC. 			       |
                                                                0 = port is not suspended 					       |
                                                                1 = port is suspended 						       |
                                                        (write) SetPortSuspend. The HCD sets the PortSuspendStatus bit by writing a    |
                                                             '1' to this bit. Writing a '0' has no effect. If CurrentConnectStatus|
                                                               is cleared, this write does not set PortSuspendStatus; instead it sets  |
                                                               ConnectStatusChange.This informs the driver that it attempted to suspend|
                                                               a disconnected port.  						       |
<3>        POCI         R/W     0           NS          (read) PortOverCurrentIndicator. This bit is only valid when the Root Hub is   | 
                                                               configured in such a way that overcurrent conditions are reported on a  |
                                                               per-port basis. If per-port overcurrent reporting is not supported, this| 
                                                               bit is set to 0. If cleared, all power operations are normal for this   |
                                                               port. If set, an overcurrent condition exists on this port. This bit    |
                                                               always reflects the overcurrent input signal 			       |
                                                                 0 = no overcurrent condition. 					       |
                                                                 1 = overcurrent condition detected. 				       |
                                                        (write) ClearSuspendStatus. The HCD writes a '1' to initiate a resume. 	       |
                                                                Writing  a '0' has no effect. A resume is initiated only if 	       |
                                                                PortSuspendStatus is set.  					       |
<4>        PRS         R/W      0           NS          (read) PortResetStatus. When this bit is set by a write to SetPortReset, port  |  
                                                               reset signaling is asserted. When reset is completed, this bit is       |
                                                               cleared when PortResetStatusChange is set. This bit cannot be set if    | 
                                                               CurrentConnectStatus is cleared. 				       |
                                                                  0 = port reset signal is not active 				       |
                                                               1 = port reset signal is active 					       |
                                                         (write) SetPortReset. The HCD sets the port reset signaling by writing a '1'  |
                                                               to this bit. Writing a '0'has no effect. If CurrentConnectStatus is     |
                                                               cleared, this write does not set PortResetStatus, but instead sets      |
                                                               ConnectStatusChange. This informs the driver that it attempted to reset |
                                                               a disconnected port. Description  				       |
<7:5>       NS         R/W       0          0            Reserved. Always write/read 0.						       |  
<8>         PPS        R/W       0          NS           (read) PortPowerStatus. This bit reflects the port's power status, regardless |  
                                                             of the type of power switching implemented. This bit is cleared if an     |
                                                             overcurrent condition is detected. HCD sets this bit by writing 	       |
                                                             SetPortPower or SetGlobalPower. HCD clears this bit by writing            |
                                                             ClearPortPower or ClearGlobalPower. Which power control switches are      |
                                                             enabled is determined by PowerSwitchingMode and PortPortControlMask[NDP]. |
                                                             In global switching mode (PowerSwitchingMode=0), only Set/ClearGlobalPower| 
                                                               controls this bit. In per-port power switching (PowerSwitchingMode=1),  |
                                                               if the PortPowerControlMask[NDP] bit for the port is set, only 	       |
                                                               Set/ClearPortPower commands are enabled. If the mask is not set, only   |
                                                               Set/ClearGlobalPower commands are enabled. When port power is disabled, |
                                                               CurrentConnectStatus, PortEnableStatus, PortSuspendStatus, and 	       |
                                                               PortResetStatus should be reset. 				       |
                                                                  0 = port power is off 					       |
                                                                  1 = port power is on 						       |
                                                         (write) SetPortPower. The HCD writes a '1' to set the PortPowerStatus bit.    |
                                                               Writing a '0' has no effect. Note: This bit is always reads '1'         |
                                                               if power switching is not supported.                                    |
<9>        LSDA        R/W      NS        NS             (read) LowSpeedDeviceAttached. This bit indicates the speed of the device     |  
                                                               attached to this port. When set, a Low Speed device is attached to this |
                                                               port. When clear, a Full Speed device is attached to this port. This    |
                                                               field is valid only when the CurrentConnectStatus is set. 	       |
                                                                  0 = full speed device attached 				       |
                                                                  1 = low speed device attached 				       |
                                                          (write) ClearPortPower. The HCD clears the PortPowerStatus bit by writing a  |
                                                               '1' to this bit. Writing a '0' has no effect.  			       |
<15:10>    NS         R/W       0          0              Reserved. Always write/read 0.					       |  
<16>       CSC        R/W       0          NS             ConnectStatusChange. This bit is set whenever a connect or disconnect event  |  
                                                          occurs. The HCD writes a '1' to clear this bit. Writing a '0' has no         |
                                                          effect. If CurrentConnectStatus is cleared when a SetPortReset,SetPortEnable,| 
                                                          or SetPortSuspend write occurs, this bit is set to force the driver to       |
                                                          re-evaluate the connection status since these writes should not occur if the |
                                                          port is disconnected. 						       |
                                                            0 = no change in CurrentConnectStatus 				       |
                                                            1 = change in CurrentConnectStatus 					       |
                                                          Note: If the DeviceRemovable[NDP] bit is set, this bit is set only after a   |
                                                           Root Hub reset to inform the system that the device is attached. Description|  
<17>       PESC       R/W       0          NS             PortEnableStatusChange. This bit is set when hardware events cause the       |  
                                                          PortEnableStatus bit to be cleared. Changes from HCD writes do not set this  |
                                                          bit. The HCD writes a '1' to clear this bit. Writing a '0' has no effect.    |
                                                            0 = no change in PortEnableStatus 					       |
                                                            1 = change in PortEnableStatus  					       |
<18>       PSSC       R/W       0          NS             PortSuspendStatusChange. This bit is set when the full resume sequence has   |  
                                                          been completed. This sequence includes the 20-s resume pulse, LS EOP, and    |
                                                          3-ms resychronization delay. 						       |
                                                          The HCD writes a '1' to clear this bit. Writing a '0' has no effect. This    |
                                                          bit is also cleared when ResetStatusChange is set. 			       |
                                                             0 = resume is not completed 					       |
                                                             1 = resume completed  						       |
<19>       OCIC       R/W       0          NS             PortOverCurrentIndicatorChange. This bit is valid only if overcurrent        |  
                                                          conditions are reported on a per-port basis. This bit is set when Root Hub   |
                                                          changes the PortOverCurrentIndicator bit. The HCD writes a '1' to clear this |
                                                          bit. Writing a  '0'  has no effect. 					       |
                                                             0 = no change in PortOverCurrentIndicator 				       |
                                                             1 = PortOverCurrentIndicator has changed  				       |
<20>       PRSC       R/W       0         NS             PortResetStatusChange. This bit is set at the end of the 10-ms port reset    |  
                                                          signal. The HCD writes a '1' to clear this bit. Writing a '0' has no effect. |
                                                             0 = port reset is not complete                                            |
                                                             1 = port reset is complete                                                |
<31:21>    NS         R/W       0         0             Reserved. Always write/read 0.                                                |  
----------------------------------------------------------------------------------------------------
===



*																  
* OHCI0_INSNREG06 = OHCI  AHB Error Status Register (Synopsys Speicific)
*
* This register contains AHB Error Status. 
*

     ==============================================================
     UAHC(0)_OHCI0_INSNREG06 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31>    VLD       R/W    0        0        AHB Error Captured. Indicator that an AHB error was encountered and values were captured.  | 
                                            To clear this field the application must write a 0 to it.                                  |
 <30:0>  NS        R/W    0        0        Reserved.                                                                                  | 
----------------------------------------------------------------------------------------------------
===



*																  
* OHCI0_INSNREG07 = OHCI  AHB Error Address Register (Synopsys Speicific)
*
* This register contains AHB Error Status. 
*

     ==============================================================
     UAHC(0)_OHCI0_INSNREG07 Type=NCB
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <31:0>  ERR_ADDR   RO    0        0        AHB Master Error Address. AHB address of the control phase at which the AHB error occurred  | 
----------------------------------------------------------------------------------------------------
===



 *
 * CLK_RST_CTL = Clock and Reset Control Reigster
 * This register controls the frequceny of hclk and resets for hclk and phy clocks. It also controls Simulation modes and Bists.

     ==============================================================
     UCTL(0)_CLK_RST_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:25> NS             RAZ     NS       NS      Reserved                                            |  
<24>    CLEAR_BIST     R/W      0        0      Clear BIST on the HCLK memories                     |  
<23>    START_BIST     R/W      0        0      Starts BIST on the HCLK memories during 0-to-1      |  
                                                transition.                                         |
<22>    EHCI_SM        R/W      0        0      Only set it during simulation time. When set to 1,  |  
                                                this bit sets the PHY in a non-driving mode so the  |
                                                EHCI can detect device connection.                  | 
                                                Note: it must not be set to 1, during normal        |
                                                operation.                                          |
<21>    OHCI_CLKCKTRST R/W      1       1       Clear clock reset. Active low.  OHCI initial reset  |  
                                                signal for the DPLL block. This is only needed by   |
                                                simulation. The duration of the reset  in simulation|
                                                must be the same as HRST.                           |
                                                Note: it must be set to 1 during normal operation.  |
<20>    OHCI_SM	        R/W     0       0       OHCI Simulation Mode. It selects the counter value  |  
                                                for simulation or real time for 1 ms.               |
                                                0: counter full 1ms; 1: simulation time.            |
<19>    OHCI_SUSP_LGCY	R/W     1       1       OHCI Clock Control Signal. Note: This bit must be   |  
                                                set to 0 if the OHCI 48/12Mhz clocks must be        |
                                                suspended when the EHCI and OHCI controllers are    |
                                                not active.                                         |
<18>    APP_START_CLK   R/W     0       0       OHCI Clock Control Signal. When the OHCI clocks are |  
                                                suspended, the system has to assert this signal to  |
                                                start the clocks (12 and 48 Mhz).                   |
<17>	O_CLKDIV_RST    R/W     0       1       OHCI 12Mhz  clock divider reset. Active low. When   |  
                                                set to 0, divider is held in reset.                 | 
                                                The reset to the divider is also asserted when core |
                                                reset is asserted.                                  |
<16>    H_CLKDIV_BYP    R/W     0       0       Used to enable the bypass input to the USB_CLK_DIV  |  
<15>    H_CLKDIV_RST    R/W     0       1       Host clock divider reset. Active low. When set to 0,|  
                                                divider is held in reset. This must be set to 0     |
                                                before change H_DIV0 and H_DIV1.                    |
                                                The reset to the divider is also asserted when core |
                                                reset is asserted.                                  |
<14>    H_CLKDIV_EN     R/W     0       1       Hclk enable. When set to 1, the hclk is gernerated. |  
<13>    O_CLKDIV_EN     R/W     0       1       OHCI 48Mhz/12MHz clock enable. When set to 1, the   |  
                                                clocks are gernerated.                              |  
<12:9>  H_DIV           R/W     0x6     0x6     The hclk frequency is sclk frequency divided by     |  
                                                H_DIV. The maximum frequency of hclk is 200Mhz.     |
                                                The minimum frequency of hclk is no less than the   |
                                                UTMI clock frequency which is 60Mhz. After writing a|
                                                value to this field, the software should read the   |
                                                field for the value written. The [H_ENABLE] field of|
                                                this register should not be set until after this    |
                                                field is set and  then read.                        | 
                                                Only the following values are valid:                |
                                                   1, 2, 3, 4, 6, 8, 12.                            |
                                                All other values are reserved and will be coded as  |
                                                following:                                          |
                                                   0        -> 1                                    |
                                                   5        -> 4                                    |
                                                   7        -> 6                                    |
                                                   9,10,11  -> 8                                    |
                                                   13,14,15 -> 12                                   |
<8:7>   P_REFCLK_SEL   R/W    0x0    0x0        PHY PLL Reference Clock Select.                     |  
                                                00: uses 12Mhz crystal at USB_XO and USB_XI;        |
                                                01: uses 12/24/48Mhz 2.5V clock source at USB_XO.   |
                                                    USB_XI should be tied to GND.                   |
                                                1x: Reserved.                                       |
<6:5>   P_REFCLK_DIV    R/W    0x0    0x0       PHY Reference Clock Frequency Select.               |  
                                                00: 12MHz, 01: 24Mhz, 10: 48Mhz, 11: Reserved.      |
                                                Note: This value must be set during POR is active.  |
                                                If a crystal is used as a reference clock,this field|
                                                must be set to 12 MHz. Values 01 and 10 are reserved|
                                                when a crystal is used.                             |
<4>     NS             R/W     0        NS      Reserved                                            |  
<3>     P_COM_ON       R/W     0      0         PHY Common Block Power-Down Control.                |  
                                                1: The XO, Bias, and PLL blocks are powered down in |
                                                   Suspend mode.                                    |
                                                0: The XO, Bias, and PLL blocks remain powered in   |
                                                   suspend mode.                                    |
                                                Note: This bit must be set to 0 during POR is active|
                                                in current design.                                  | 
<2>     P_POR           R/W     1      0        Power on reset for PHY. Resets all the PHY's        |  
                                                registers and state machines.                       |  
<1>     P_PRST          R/W     0      1        PHY Clock Reset. The is the value for phy_rst_n,    |  
                                                utmi_rst_n[1] and utmi_rst_n[0]. It is synchronized |
                                                to each clock domain to generate the corresponding  |
                                                reset signal. This should not be set to 1 until the |
                                                time it takes for six clock cycles (HCLK and        |
                                                PHY CLK, which ever is slower) has passed.          |
<0>     HRST            R/W     0      1        Host Clock Reset. This is the value for hreset_n.   |  
                                                This should not be set to 1 until 12ms after PHY CLK|
                                                is stable.                                          |
----------------------------------------------------------------------------------------------------
===

 *
 * UPHY_CTL_STATUS = USB PHY Control and Status Reigster
 * This register controls the USB PHY test and Bist.

     ==============================================================
     UCTL(0)_UPHY_CTL_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:10>  NS             RAZ      NS      NS     Reserved                                            |  
<9>      BIST_DONE      RO       0       0      PHY BIST DONE.  Asserted at the end of the PHY BIST |  
                                                sequence.                                           |  
<8>      BIST_ERR       RO       0       0      PHY BIST Error.  Valid when BIST_ENB is high.       |  
                                                Indicates an internal error was detected during the |
                                                BIST sequence.                                      |
<7>      HSBIST         R/W     0       0       High-Speed BIST Enable                              |  
<6>      FSBIST         R/W     0       0       Full-Speed BIST Enable                              |  
<5>      LSBIST         R/W     0       0       Low-Speed BIST Enable                               |  
<4>      SIDDQ          R/W     0       0       Drives the PHY SIDDQ input. Normally should be set  |  
                                                to zero. Customers not using USB PHY interface      |
                                                should do the following:                            | 
                                                  Provide 3.3V to USB_VDD33 Tie USB_REXT to 3.3V    |
                                                  supply and Set SIDDQ to 1.                        |
<3>      VTEST_EN       R/W     0       0       Analog Test Pin Enable.                             |  
                                                  1 = The PHY's ANALOG_TEST pin is enabled for the  |
                                                      input and output of applicable analog test    |
                                                      signals.                                      |
                                                  0 = The ANALOG_TEST pin is disabled.              |
<2>      UPHY_BIST      R/W     0       0       When set to 1,  it makes sure that during PHY BIST, |  
                                                utmi_txvld == 0.                                    | 
<1>      BIST_EN        R/W     0       0       PHY BIST ENABLE                                     |  
<0>      ATE_RESET      R/W     0       0       Reset Input from ATE. This is a test signal. When   |  
                                                the USB core is powered up (not in suspend mode), an|
                                                automatic tester can use this to disable PHYCLOCK   |
                                                and FREECLK, then re-enable them with an aligned    |
                                                phase.                                              |
                                                 1:  PHYCLOCKs and FREECLK outputs are disable.     |
                                                 0: PHYCLOCKs and FREECLK are available within a    |
                                                    specific period after ATERESET is de-asserted.  |
----------------------------------------------------------------------------------------------------
===

 *
 * UPHY_PORT@_CTL_STATUS = USB PHY Port @ Control and Status Reigsters
 * This register controls the each port of the USB PHY.

     ==============================================================
     UCTL(0)_UPHY_PORT(0..1)_CTL_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:43>  NS                RAZ      NS   NS        Reserved                                            |  
<42:39>  TDATA_OUT         RO       NS   NS        PHY test data out. Presents either interlly         |  
                                                   generated signals or test register contenets, based |  
                                                   upon the value of TDATA_SEL                         |  
<38>     TXBISTSTUFFENH    R/W      1    1         High-Byte Transmit Bit-Stuffing Enable. It must be  |  
                                                   set to 1'b1 in normal operation.                    |
<37>     TXBISTSTUFFEN     R/W      1    1         Low-Byte Transmit Bit-Stuffing Enable. It must be   |  
                                                   set to 1'b1 in normal operation.                    |
<36>     DMPULLDOWN        R/W      1    1         D- Pull-Down Resistor Enable. It must be set to 1'b1|  
                                                   in normal operation.                                |
<35>     DPPULLDOWN        R/W      1    1         D+ Pull-Down Resistor Enable. It must be set to 1'b1|  
                                                   in normal operation.                                |
<34>     VBUSVLDEXT        R/W      0    0         In host mode, this input is not used and can be tied|  
                                                   to 1'b0.                                            |
<33>     PORTRESET         R/W      0    0         Per-port reset                                      |  
<32:31>  TXHSVXTUNE        R/W      0x0  0x0       Transmitter High-Speed Crossover Adjustment         |  
<30:27>  TXVREFTUNE        R/W      0x5  0x5       HS DC Voltage Level Adjustment                      |  
<26>     TXRISETUNE        R/W      0    0         HS Transmitter Rise/Fall Time Adjustment            |  
<25>     TXPREEMPHASISTUNE R/W      0    0         HS transmitter pre-emphasis enable.                 |  
<24:21>  TXFSLSTUNE        R/W      0x3  0x3       FS/LS Source Impedance Adjustment                   |  
<20:18>  SQRXTUNE          R/W      0x4  0x4       Squelch Threshold Adjustment                        |  
<17:15>  COMPDISTUNE       R/W      0x4  0x4       Disconnect Threshold Adjustment                     |  
<14>     LOOP_EN           R/W      0    0         Port Loop back Test Enable                          |  
                                                    1: During data transmission, the receive logic is  |
                                                       enabled                                         |
                                                    0: During data transmission, the receive logic is  |
                                                       disabled                                        |
<13>     TCLK              R/W      0    0         PHY port test clock, used to load TDATA_IN to the   |  
                                                   UPHY.                                               |
<12>     TDATA_SEL         R/W      1    0         Test Data out select                                |  
                                                    1: Mode-defined test register contents are output  |
                                                    0: internally generated signals are output         |
<11:8>   TADDR_IN          R/W      0x0 0x0        Mode address for test interface. Specifies the      |  
                                                   register address for writing to or reading from the |
                                                   PHY test interface register.                        |
<7:0>    TDATA_IN          R/W      0x0 0x0        Internal testing Register input data and select.    |  
                                                   This is a test bus. Data presents on [3:0] and the  |
                                                   corresponding select (enable) presents on bits[7:4].| 
----------------------------------------------------------------------------------------------------
===

 *
 *                  UCTL_INT_REG = UCTL Interrupt Register
 *
 * Summary of different bits of RSL interrupt status.
 *

     ==============================================================
     UCTL(0)_INT_REG Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS        RAZ       NS          NS      Reserved                                           |   
 <7:7>   EC_OVF_E  R/W1C     0x0          0      Ehci Commit OVerFlow Error                         |   
                                                 When the error happenes, the whole NCB system needs|
                                                 to be reset.                                       |
 <6:6>   OC_OVF_E  R/W1C     0x0          0      Ohci Commit OVerFlow Error                         |   
                                                 When the error happenes, the whole NCB system needs|
                                                 to be reset.                                       |
 <5:5>   WB_POP_E  R/W1C     0x0          0      Write Buffer FIFO Poped When Empty                 |   
 <4:4>   WB_PSH_F  R/W1C     0x0          0      Write Buffer FIFO Pushed When Full                 |   
 <3:3>   CF_PSH_F  R/W1C     0x0          0      Command FIFO Pushed When Full                      |   
 <2:2>   OR_PSH_F  R/W1C     0x0          0      OHCI Read Buffer FIFO Pushed When Full             |   
 <1:1>   ER_PSH_F  R/W1C     0x0          0      EHCI Read Buffer FIFO Pushed When Full             |   
 <0:0>   PP_PSH_F  R/W1C     0x0          0      PP Access FIFO  Pushed When Full                   |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  UCTL_INT_ENA = UCTL Interrupt Enable Register
 *
 * Register to enable individual interrupt source in corresponding to UCTL_INT_REG
 *

     ==============================================================
     UCTL(0)_INT_ENA Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:8>  NS        RAZ     NS          NS       Reserved                                          |   
 <7:7>   EC_OVF_E  R/W     0x0          0      Ehci Commit OVerFlow Error                         |   
 <6:6>   OC_OVF_E  R/W     0x0          0      Ohci Commit OVerFlow Error                         |   
 <5:5>   WB_POP_E  R/W     0x0          0      Write Buffer FIFO Poped When Empty                 |   
 <4:4>   WB_PSH_F  R/W     0x0          0      Write Buffer FIFO Pushed When Full                 |   
 <3:3>   CF_PSH_F  R/W     0x0          0      Command FIFO Pushed When Full                      |   
 <2:2>   OR_PSH_F  R/W     0x0          0      OHCI Read Buffer FIFO Pushed When Full             |   
 <1:1>   ER_PSH_F  R/W     0x0          0      EHCI Read Buffer FIFO Pushed When Full             |   
 <0:0>   PP_PSH_F  R/W     0x0          0      PP Access FIFO  Pushed When Full                   |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  UCTL_IF_ENA = UCTL Interface Enable Register
 *
 * Register to enable the uctl interface clock.
 *

     ==============================================================
     UCTL(0)_IF_ENA Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        Reserved                                           |   
 <0>     EN       R/W      0x0         1         Turns on the USB UCTL interface clock              |   
----------------------------------------------------------------------------------------------------
===

 *
 *                  UCTL_PPAF_WM = UCTL PP Access FIFO WaterMark Register
 *
 * Register to set PP access FIFO full watermark.
 *

     ==============================================================
     UCTL(0)_PPAF_WM Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:5>  NS       RAZ      NS          NS        Reserved                                           |   
 <4:0>   WM       R/W      0x8         0x8       Number of entries when PP Access FIFO will assert  |   
                                                 full (back pressure)                               |
----------------------------------------------------------------------------------------------------
===


 *
 * UCTL_EHCI_CTL = UCTL EHCI Control Register
 * This register controls the general behavior of UCTL EHCI datapath.

     ==============================================================
     UCTL(0)_EHCI_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:20>  NS                RAZ      NS   NS        Reserved                                            |  
<19>     DESC_RBM          R/W      0     0        Descriptor Read Burst Mode on AHB bus               |  
                                                    1: A read burst can be interruprted after 16 AHB   |
                                                       clock cycle                                     |
                                                    0: A read burst will not be interrupted until it   |
                                                       finishes or no more data available              |  
<18>     REG_NB            R/W      0     0        1: EHCI register access will not be blocked by EHCI |  
                                                   buffer/descriptor access on AHB                     |
                                                   0: Buffer/descriptor and register access will be    |
                                                      mutually exclusive                               | 
<17>     L2C_DC            R/W      1     1        When set to 1, set the commit bit in the descriptor |  
                                                   store commands to L2C.                              |
<16>     L2C_BC            R/W      0     0        When set to 1, set the commit bit in the buffer     |  
                                                   store commands to L2C.                              |
<15>     L2C_0PAG          R/W      0     0        When set to 1, sets the zero-page bit in store      |  
                                                   command to  L2C.                                    |
<14>     L2C_STT           R/W      0     0        When set to 1, use STT when store to L2C.           |  
<13:12>  L2C_BUFF_EMOD     R/W      0x1   0x1      Endian format for buffer from/to the L2C.           |  
                                                   IN:       A-B-C-D-E-F-G-H                           |
                                                   OUT0:  A-B-C-D-E-F-G-H                              |
                                                   OUT1:  H-G-F-E-D-C-B-A                              |
                                                   OUT2:  D-C-B-A-H-G-F-E                              |
                                                   OUT3:  E-F-G-H-A-B-C-D                              |
<11:10>  L2C_DESC_EMOD     R/W      0x0   0x0      Endian format for descriptor from/to the L2C.       |  
                                                   IN:        A-B-C-D-E-F-G-H                          |
                                                   OUT0:  A-B-C-D-E-F-G-H                              |
                                                   OUT1:  H-G-F-E-D-C-B-A                              |
                                                   OUT2:  D-C-B-A-H-G-F-E                              |
                                                   OUT3:  E-F-G-H-A-B-C-D                              |
<9>      INV_REG_A2        R/W      0x0   0x0      UAHC register address  bit<2> invert. When set to 1,|  
                                                   for a 32-bit NCB I/O register access, the address   |
                                                   offset will be flipped between 0x4 and 0x0.         |
<8>      EHCI_64B_ADDR_EN  R/W      0x1   0x1      EHCI AHB Master 64-bit Addressing Enable.           |  
                                                   1: enable ehci 64-bit addressing mode;              |
                                                   0: disable ehci 64-bit addressing mode.             |
                                                   When ehci 64-bit addressing mode is disabled,       |
                                                   UCTL_EHCI_CTL[L2C_ADDR_MSB] is used as the address  |
                                                   bit[39:32].                                         |
<7:0>    L2C_ADDR_MSB      R/W      0x0    NS	   This is the bit [39:32] of an address sent to L2C   |  
                                                   for ehci whenUCTL_EHCI_CFG[EHCI_64B_ADDR_EN=0]).    |
----------------------------------------------------------------------------------------------------
===
 * RSL registers starting from 0x10 can be accessed only after hclk is active and hreset is deasserted.

 *
 * UCTL_OHCI_CTL = UCTL OHCI Control Register
 * This register controls the general behavior of UCTL OHCI datapath.

     ==============================================================
     UCTL(0)_OHCI_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:19>  NS                RAZ      NS   NS        Reserved                                            |  
<18>     REG_NB            R/W      0     0        1: OHCI register access will not be blocked by EHCI |  
                                                   buffer/descriptor access on AHB                     |
                                                   0: Buffer/descriptor and register access will be    |
                                                      mutually exclusive                               |   
<17>     L2C_DC            R/W      1     1        When set to 1, set the commit bit in the descriptor |  
                                                   store commands to L2C.                              |
<16>     L2C_BC            R/W      0     0        When set to 1, set the commit bit in the buffer     |  
                                                   store commands to L2C.                              |
<15>     L2C_0PAG          R/W      0     0        When set to 1, sets the zero-page bit in store      |  
                                                   command to  L2C.                                    |
<14>     L2C_STT           R/W      0     0        When set to 1, use STT when store to L2C.           |  
<13:12>  L2C_BUFF_EMOD     R/W      0x1   0x1      Endian format for buffer from/to the L2C.           |  
                                                   IN:       A-B-C-D-E-F-G-H                           |
                                                   OUT0:  A-B-C-D-E-F-G-H                              |
                                                   OUT1:  H-G-F-E-D-C-B-A                              |
                                                   OUT2:  D-C-B-A-H-G-F-E                              |
                                                   OUT3:  E-F-G-H-A-B-C-D                              |
<11:10>  L2C_DESC_EMOD     R/W      0x0   0x0      Endian format for descriptor from/to the L2C.       |  
                                                   IN:        A-B-C-D-E-F-G-H                          |
                                                   OUT0:  A-B-C-D-E-F-G-H                              |
                                                   OUT1:  H-G-F-E-D-C-B-A                              |
                                                   OUT2:  D-C-B-A-H-G-F-E                              |
                                                   OUT3:  E-F-G-H-A-B-C-D                              |
<9>      INV_REG_A2        R/W      0x0   0x0      UAHC register address  bit<2> invert. When set to 1,|  
                                                   for a 32-bit NCB I/O register access, the address   |
                                                   offset will be flipped between 0x4 and 0x0.         |
<8>      NS                RAZ      NS     NS      Reserved                                            |  
<7:0>    L2C_ADDR_MSB      R/W      0x0    NS	   This is the bit [39:32] of an address sent to L2C   |  
                                                   for ohci.                                           |
----------------------------------------------------------------------------------------------------
===


 * UCTL_ERTO_CTL = UCTL EHCI Readbuffer TimeOut Control Register
 * This register controls timeout for EHCI Readbuffer.

     ==============================================================
     UCTL(0)_ERTO_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32>   NS               RAZ      NS   NS        Reserved                                            |  
<31:5>    TO_VAL           R/W     0x0   0x0       Read buffer timeout value                           |  
                                                     (value 0 means timeout disabled)                  |
<4:0>     NS               RAZ      NS   NS        Reserved                                            |  
----------------------------------------------------------------------------------------------------
===


 * UCTL_ORTO_CTL = UCTL OHCI Readbuffer TimeOut Control Register
 * This register controls timeout for OHCI Readbuffer.

     ==============================================================
     UCTL(0)_ORTO_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:32>   NS               RAZ      NS   NS        Reserved                                            |  
<31:8>    TO_VAL           R/W     0x0   0x0       Read buffer timeout value                           |  
                                                     (value 0 means timeout disabled)                  |
<7:0>     NS               RAZ      NS   NS        Reserved                                            |  
----------------------------------------------------------------------------------------------------
===

 *
 *                  UCTL_BIST_STATUS = UCTL Bist Status
 *
 * Results from BIST runs of UCTL's memories.
 *

     ==============================================================
     UCTL(0)_BIST_STATUS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:6>  NS        RO       NS          NS       Reserved                                           |   
 <5:5>   DATA_BIS  RO       0           0        UAHC EHCI Data Ram Bist Status                     |   
 <4:4>   DESC_BIS  RO       0           0        UAHC EHCI Descriptor Ram Bist Status               |   
 <3:3>   ERBM_BIS  RO       0           0        UCTL EHCI Read Buffer Memory Bist Status           |   
 <2:2>   ORBM_BIS  RO       0           0        UCTL OHCI Read Buffer Memory Bist Status           |   
 <1:1>   WRBM_BIS  RO       0           0        UCTL Write Buffer Memory Bist Sta                  |   
 <0:0>   PPAF_BIS  RO       0           0        PP Access FIFO Memory Bist Status                  |   
----------------------------------------------------------------------------------------------------
===

*
 * UCTL_EHCI_FLA = UCTL EHCI Frame Length Adjument Register
 * This register configures the EHCI Frame Length Adjustment.

     ==============================================================
     UCTL(0)_EHCI_FLA Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
<63:6>   NS                RAZ      NS   NS        Reserved                                            |  
<5:0>    FLA               R/W      0x20 0x20      EHCI Frame Length Adjustment. This feature          |  
                                                   adjusts any offset from the clock source that drives|  
                                                   the uSOF counter.  The default value is 32(0x20),   |
                                                   which gives an SOF cycle time of 60,0000 (each      |
                                                   microframe has 60,000 bit times).                   |
                                                   Note: keep this value to 0x20 (decimal 32) for no   |
                                                   offset.                                             |
----------------------------------------------------------------------------------------------------
===




     ==============================================================
     ZIP_CMD_CTL Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ       NS          NS       RESERVED                                               
 <1>     FORCECLK R/W       0           0        Force zip_ctl__clock_on_b == 1 when set                
 <0>     RESET    RAZ       0           0        Reset oneshot pulse for zip core                       
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     ZIP_CMD_BUF Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:58> NS       RAZ       NS          NS       RESERVED                                               
 <57:49> DWB      R/W       0           0        Number of DontWriteBacks                               
 <48:46> POOL     R/W       0           0        Free list used to free command buffer segments         
 <45:33> SIZE     R/W       0           0        Number of uint64s per command buffer segment           
 <32:0>  PTR      R/W       0           0        Initial command buffer pointer[39:7] (128B-aligned)    

Notes:
 Sets the command buffer parameters
 The size of the command buffer segments is measured in uint64s.  The pool specifies (1 of 8 free
 lists to be used when freeing command buffer segments.  The PTR field is overwritten with the next
 pointer each time that the command buffer segment is exhausted.
 When quiescent (i.e. outstanding doorbell count is 0), it is safe to rewrite
 this register to effectively reset the command buffer state machine.  New commands will then be
 read from the newly specified command buffer pointer.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ZIP_THROTTLE Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ       NS          NS       RESERVED                                               
 <3:0>   MAX_INFL R/W       8           8        Maximum number of inflight data fetch transactions on NCB 

Notes:
 The maximum number of inflight data fetch transactions.  Values > 8 are illegal.
 Writing 0 to this register causes the ZIP module to temporarily suspend NCB
 accesses; it is not recommended for normal operation, but may be useful for
 diagnostics.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ZIP_CMD_BIST_RESULT Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:43> NS       RAZ       NS          NS       RESERVED                                               
 <42:4>  ZIP_CORE RO        X           0        BiST result of the ZIP_CORE memories                   
 <3:0>   ZIP_CTL  RO        X           0        BiST result of the ZIP_CTL  memories                   

Notes:
 Access to the internal BiST results
 Each bit is the BiST result of an individual memory (per bit, 0=pass and 1=fail).
----------------------------------------------------------------------------------------------------
===

 

     ==============================================================
     ZIP_ERROR Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        RESERVED                                               
 <0>     DOORBELL R/W1C    0           0         A doorbell count has overflowed                        

Notes:
  Note that this CSR is present only in chip revisions beginning with pass2.
----------------------------------------------------------------------------------------------------
===



     ==============================================================
     ZIP_INT_MASK Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ      NS          NS        RESERVED                                               
 <0>     DOORBELL R/W      0           0         Bit mask corresponding to ZIP_ERROR[0] above           

Notes:
 Note that this CSR is present only in chip revisions beginning with pass2.
 When a mask bit is set, the corresponding interrupt is enabled.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ZIP_DEBUG0 Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:17> NS       RAZ      NS          NS        RESERVED                                               
 <16:0>  ASSERTS  RO       0           0         FIFO assertion checks                                  

Notes:
 Note that this CSR is present only in chip revisions beginning with pass2.
----------------------------------------------------------------------------------------------------
===


     ==============================================================
     ZIP_CONSTANTS Type=RSL
     ==============================================================

----------------------------------------------------------------------------------------------------
Bit      Field   Field    Reset     Typical     Field
Pos      Name    Type     Value     Value       Description
----------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ      NS          NS        RESERVED                                               
 <47:32> DEPTH    RO       0x7c00      0x7c00    Maximum search depth for compression                   
 <31:20> ONFSIZE  RO       0x200       0x200     Output near full threshhold in bytes                   
 <19:8>  CTXSIZE  RO       0x600       0x600     Context size in bytes                                  
 <7:1>   NS       RAZ      NS          NS        unused                                                 
 <0>     DISABLED RO       0           0         1=zip unit isdisabled, 0=zip unit not disabled         

Notes:
 Note that this CSR is present only in chip revisions beginning with pass2.
----------------------------------------------------------------------------------------------------
===

CSR                            Address            CSR Type     Address            CSR_Type
------------------------------------------------------------------------------------------          
AGL_GMX_BAD_REG                0x00011800E0000518  RSL         
AGL_GMX_BIST                   0x00011800E0000400  RSL         
AGL_GMX_PRT0_CFG               0x00011800E0000010  RSL         
AGL_GMX_PRT1_CFG               0x00011800E0000810  RSL         
AGL_GMX_RX0_ADR_CAM0           0x00011800E0000180  RSL         
AGL_GMX_RX0_ADR_CAM1           0x00011800E0000188  RSL         
AGL_GMX_RX0_ADR_CAM2           0x00011800E0000190  RSL         
AGL_GMX_RX0_ADR_CAM3           0x00011800E0000198  RSL         
AGL_GMX_RX0_ADR_CAM4           0x00011800E00001A0  RSL         
AGL_GMX_RX0_ADR_CAM5           0x00011800E00001A8  RSL         
AGL_GMX_RX0_ADR_CAM_EN         0x00011800E0000108  RSL         
AGL_GMX_RX0_ADR_CTL            0x00011800E0000100  RSL         
AGL_GMX_RX0_DECISION           0x00011800E0000040  RSL         
AGL_GMX_RX0_FRM_CHK            0x00011800E0000020  RSL         
AGL_GMX_RX0_FRM_CTL            0x00011800E0000018  RSL         
AGL_GMX_RX0_FRM_MAX            0x00011800E0000030  RSL         
AGL_GMX_RX0_FRM_MIN            0x00011800E0000028  RSL         
AGL_GMX_RX0_IFG                0x00011800E0000058  RSL         
AGL_GMX_RX0_INT_EN             0x00011800E0000008  RSL         
AGL_GMX_RX0_INT_REG            0x00011800E0000000  RSL         
AGL_GMX_RX0_JABBER             0x00011800E0000038  RSL         
AGL_GMX_RX0_PAUSE_DROP_TIME    0x00011800E0000068  RSL         
AGL_GMX_RX0_RX_INBND           0x00011800E0000060  RSL         
AGL_GMX_RX0_STATS_CTL          0x00011800E0000050  RSL         
AGL_GMX_RX0_STATS_OCTS         0x00011800E0000088  RSL         
AGL_GMX_RX0_STATS_OCTS_CTL     0x00011800E0000098  RSL         
AGL_GMX_RX0_STATS_OCTS_DMAC    0x00011800E00000A8  RSL         
AGL_GMX_RX0_STATS_OCTS_DRP     0x00011800E00000B8  RSL         
AGL_GMX_RX0_STATS_PKTS         0x00011800E0000080  RSL         
AGL_GMX_RX0_STATS_PKTS_BAD     0x00011800E00000C0  RSL         
AGL_GMX_RX0_STATS_PKTS_CTL     0x00011800E0000090  RSL         
AGL_GMX_RX0_STATS_PKTS_DMAC    0x00011800E00000A0  RSL         
AGL_GMX_RX0_STATS_PKTS_DRP     0x00011800E00000B0  RSL         
AGL_GMX_RX0_UDD_SKP            0x00011800E0000048  RSL         
AGL_GMX_RX1_ADR_CAM0           0x00011800E0000980  RSL         
AGL_GMX_RX1_ADR_CAM1           0x00011800E0000988  RSL         
AGL_GMX_RX1_ADR_CAM2           0x00011800E0000990  RSL         
AGL_GMX_RX1_ADR_CAM3           0x00011800E0000998  RSL         
AGL_GMX_RX1_ADR_CAM4           0x00011800E00009A0  RSL         
AGL_GMX_RX1_ADR_CAM5           0x00011800E00009A8  RSL         
AGL_GMX_RX1_ADR_CAM_EN         0x00011800E0000908  RSL         
AGL_GMX_RX1_ADR_CTL            0x00011800E0000900  RSL         
AGL_GMX_RX1_DECISION           0x00011800E0000840  RSL         
AGL_GMX_RX1_FRM_CHK            0x00011800E0000820  RSL         
AGL_GMX_RX1_FRM_CTL            0x00011800E0000818  RSL         
AGL_GMX_RX1_FRM_MAX            0x00011800E0000830  RSL         
AGL_GMX_RX1_FRM_MIN            0x00011800E0000828  RSL         
AGL_GMX_RX1_IFG                0x00011800E0000858  RSL         
AGL_GMX_RX1_INT_EN             0x00011800E0000808  RSL         
AGL_GMX_RX1_INT_REG            0x00011800E0000800  RSL         
AGL_GMX_RX1_JABBER             0x00011800E0000838  RSL         
AGL_GMX_RX1_PAUSE_DROP_TIME    0x00011800E0000868  RSL         
AGL_GMX_RX1_RX_INBND           0x00011800E0000860  RSL         
AGL_GMX_RX1_STATS_CTL          0x00011800E0000850  RSL         
AGL_GMX_RX1_STATS_OCTS         0x00011800E0000888  RSL         
AGL_GMX_RX1_STATS_OCTS_CTL     0x00011800E0000898  RSL         
AGL_GMX_RX1_STATS_OCTS_DMAC    0x00011800E00008A8  RSL         
AGL_GMX_RX1_STATS_OCTS_DRP     0x00011800E00008B8  RSL         
AGL_GMX_RX1_STATS_PKTS         0x00011800E0000880  RSL         
AGL_GMX_RX1_STATS_PKTS_BAD     0x00011800E00008C0  RSL         
AGL_GMX_RX1_STATS_PKTS_CTL     0x00011800E0000890  RSL         
AGL_GMX_RX1_STATS_PKTS_DMAC    0x00011800E00008A0  RSL         
AGL_GMX_RX1_STATS_PKTS_DRP     0x00011800E00008B0  RSL         
AGL_GMX_RX1_UDD_SKP            0x00011800E0000848  RSL         
AGL_GMX_RX_BP_DROP0            0x00011800E0000420  RSL         
AGL_GMX_RX_BP_DROP1            0x00011800E0000428  RSL         
AGL_GMX_RX_BP_OFF0             0x00011800E0000460  RSL         
AGL_GMX_RX_BP_OFF1             0x00011800E0000468  RSL         
AGL_GMX_RX_BP_ON0              0x00011800E0000440  RSL         
AGL_GMX_RX_BP_ON1              0x00011800E0000448  RSL         
AGL_GMX_RX_PRT_INFO            0x00011800E00004E8  RSL         
AGL_GMX_RX_TX_STATUS           0x00011800E00007E8  RSL         
AGL_GMX_SMAC0                  0x00011800E0000230  RSL         
AGL_GMX_SMAC1                  0x00011800E0000A30  RSL         
AGL_GMX_STAT_BP                0x00011800E0000520  RSL         
AGL_GMX_TX0_APPEND             0x00011800E0000218  RSL         
AGL_GMX_TX0_CLK                0x00011800E0000208  RSL         
AGL_GMX_TX0_CTL                0x00011800E0000270  RSL         
AGL_GMX_TX0_MIN_PKT            0x00011800E0000240  RSL         
AGL_GMX_TX0_PAUSE_PKT_INTERVAL 0x00011800E0000248  RSL         
AGL_GMX_TX0_PAUSE_PKT_TIME     0x00011800E0000238  RSL         
AGL_GMX_TX0_PAUSE_TOGO         0x00011800E0000258  RSL         
AGL_GMX_TX0_PAUSE_ZERO         0x00011800E0000260  RSL         
AGL_GMX_TX0_SOFT_PAUSE         0x00011800E0000250  RSL         
AGL_GMX_TX0_STAT0              0x00011800E0000280  RSL         
AGL_GMX_TX0_STAT1              0x00011800E0000288  RSL         
AGL_GMX_TX0_STAT2              0x00011800E0000290  RSL         
AGL_GMX_TX0_STAT3              0x00011800E0000298  RSL         
AGL_GMX_TX0_STAT4              0x00011800E00002A0  RSL         
AGL_GMX_TX0_STAT5              0x00011800E00002A8  RSL         
AGL_GMX_TX0_STAT6              0x00011800E00002B0  RSL         
AGL_GMX_TX0_STAT7              0x00011800E00002B8  RSL         
AGL_GMX_TX0_STAT8              0x00011800E00002C0  RSL         
AGL_GMX_TX0_STAT9              0x00011800E00002C8  RSL         
AGL_GMX_TX0_STATS_CTL          0x00011800E0000268  RSL         
AGL_GMX_TX0_THRESH             0x00011800E0000210  RSL         
AGL_GMX_TX1_APPEND             0x00011800E0000A18  RSL         
AGL_GMX_TX1_CLK                0x00011800E0000A08  RSL         
AGL_GMX_TX1_CTL                0x00011800E0000A70  RSL         
AGL_GMX_TX1_MIN_PKT            0x00011800E0000A40  RSL         
AGL_GMX_TX1_PAUSE_PKT_INTERVAL 0x00011800E0000A48  RSL         
AGL_GMX_TX1_PAUSE_PKT_TIME     0x00011800E0000A38  RSL         
AGL_GMX_TX1_PAUSE_TOGO         0x00011800E0000A58  RSL         
AGL_GMX_TX1_PAUSE_ZERO         0x00011800E0000A60  RSL         
AGL_GMX_TX1_SOFT_PAUSE         0x00011800E0000A50  RSL         
AGL_GMX_TX1_STAT0              0x00011800E0000A80  RSL         
AGL_GMX_TX1_STAT1              0x00011800E0000A88  RSL         
AGL_GMX_TX1_STAT2              0x00011800E0000A90  RSL         
AGL_GMX_TX1_STAT3              0x00011800E0000A98  RSL         
AGL_GMX_TX1_STAT4              0x00011800E0000AA0  RSL         
AGL_GMX_TX1_STAT5              0x00011800E0000AA8  RSL         
AGL_GMX_TX1_STAT6              0x00011800E0000AB0  RSL         
AGL_GMX_TX1_STAT7              0x00011800E0000AB8  RSL         
AGL_GMX_TX1_STAT8              0x00011800E0000AC0  RSL         
AGL_GMX_TX1_STAT9              0x00011800E0000AC8  RSL         
AGL_GMX_TX1_STATS_CTL          0x00011800E0000A68  RSL         
AGL_GMX_TX1_THRESH             0x00011800E0000A10  RSL         
AGL_GMX_TX_BP                  0x00011800E00004D0  RSL         
AGL_GMX_TX_COL_ATTEMPT         0x00011800E0000498  RSL         
AGL_GMX_TX_IFG                 0x00011800E0000488  RSL         
AGL_GMX_TX_INT_EN              0x00011800E0000508  RSL         
AGL_GMX_TX_INT_REG             0x00011800E0000500  RSL         
AGL_GMX_TX_JAM                 0x00011800E0000490  RSL         
AGL_GMX_TX_LFSR                0x00011800E00004F8  RSL         
AGL_GMX_TX_OVR_BP              0x00011800E00004C8  RSL         
AGL_GMX_TX_PAUSE_PKT_DMAC      0x00011800E00004A0  RSL         
AGL_GMX_TX_PAUSE_PKT_TYPE      0x00011800E00004A8  RSL         
AGL_PRT0_CTL                   0x00011800E0002000  RSL         
AGL_PRT1_CTL                   0x00011800E0002008  RSL         
CIU_BIST                       0x0001070000000730  NCB         
CIU_BLOCK_INT                  0x00010700000007C0  NCB         
CIU_DINT                       0x0001070000000720  NCB         
CIU_FUSE                       0x0001070000000728  NCB         
CIU_GSTOP                      0x0001070000000710  NCB         
CIU_INT0_EN0                   0x0001070000000200  NCB         
CIU_INT0_EN0_W1C               0x0001070000002200  NCB         
CIU_INT0_EN0_W1S               0x0001070000006200  NCB         
CIU_INT0_EN1                   0x0001070000000208  NCB         
CIU_INT0_EN1_W1C               0x0001070000002208  NCB         
CIU_INT0_EN1_W1S               0x0001070000006208  NCB         
CIU_INT0_EN4_0                 0x0001070000000C80  NCB         
CIU_INT0_EN4_0_W1C             0x0001070000002C80  NCB         
CIU_INT0_EN4_0_W1S             0x0001070000006C80  NCB         
CIU_INT0_EN4_1                 0x0001070000000C88  NCB         
CIU_INT0_EN4_1_W1C             0x0001070000002C88  NCB         
CIU_INT0_EN4_1_W1S             0x0001070000006C88  NCB         
CIU_INT0_SUM0                  0x0001070000000000  NCB         
CIU_INT0_SUM4                  0x0001070000000C00  NCB         
CIU_INT1_EN0                   0x0001070000000210  NCB         
CIU_INT1_EN0_W1C               0x0001070000002210  NCB         
CIU_INT1_EN0_W1S               0x0001070000006210  NCB         
CIU_INT1_EN1                   0x0001070000000218  NCB         
CIU_INT1_EN1_W1C               0x0001070000002218  NCB         
CIU_INT1_EN1_W1S               0x0001070000006218  NCB         
CIU_INT1_EN4_0                 0x0001070000000C90  NCB         
CIU_INT1_EN4_0_W1C             0x0001070000002C90  NCB         
CIU_INT1_EN4_0_W1S             0x0001070000006C90  NCB         
CIU_INT1_EN4_1                 0x0001070000000C98  NCB         
CIU_INT1_EN4_1_W1C             0x0001070000002C98  NCB         
CIU_INT1_EN4_1_W1S             0x0001070000006C98  NCB         
CIU_INT1_SUM0                  0x0001070000000008  NCB         
CIU_INT1_SUM4                  0x0001070000000C08  NCB         
CIU_INT2_EN0                   0x0001070000000220  NCB         
CIU_INT2_EN0_W1C               0x0001070000002220  NCB         
CIU_INT2_EN0_W1S               0x0001070000006220  NCB         
CIU_INT2_EN1                   0x0001070000000228  NCB         
CIU_INT2_EN1_W1C               0x0001070000002228  NCB         
CIU_INT2_EN1_W1S               0x0001070000006228  NCB         
CIU_INT2_EN4_0                 0x0001070000000CA0  NCB         
CIU_INT2_EN4_0_W1C             0x0001070000002CA0  NCB         
CIU_INT2_EN4_0_W1S             0x0001070000006CA0  NCB         
CIU_INT2_EN4_1                 0x0001070000000CA8  NCB         
CIU_INT2_EN4_1_W1C             0x0001070000002CA8  NCB         
CIU_INT2_EN4_1_W1S             0x0001070000006CA8  NCB         
CIU_INT2_SUM0                  0x0001070000000010  NCB         
CIU_INT2_SUM4                  0x0001070000000C10  NCB         
CIU_INT3_EN0                   0x0001070000000230  NCB         
CIU_INT3_EN0_W1C               0x0001070000002230  NCB         
CIU_INT3_EN0_W1S               0x0001070000006230  NCB         
CIU_INT3_EN1                   0x0001070000000238  NCB         
CIU_INT3_EN1_W1C               0x0001070000002238  NCB         
CIU_INT3_EN1_W1S               0x0001070000006238  NCB         
CIU_INT3_EN4_0                 0x0001070000000CB0  NCB         
CIU_INT3_EN4_0_W1C             0x0001070000002CB0  NCB         
CIU_INT3_EN4_0_W1S             0x0001070000006CB0  NCB         
CIU_INT3_EN4_1                 0x0001070000000CB8  NCB         
CIU_INT3_EN4_1_W1C             0x0001070000002CB8  NCB         
CIU_INT3_EN4_1_W1S             0x0001070000006CB8  NCB         
CIU_INT3_SUM0                  0x0001070000000018  NCB         
CIU_INT3_SUM4                  0x0001070000000C18  NCB         
CIU_INT4_EN0                   0x0001070000000240  NCB         
CIU_INT4_EN0_W1C               0x0001070000002240  NCB         
CIU_INT4_EN0_W1S               0x0001070000006240  NCB         
CIU_INT4_EN1                   0x0001070000000248  NCB         
CIU_INT4_EN1_W1C               0x0001070000002248  NCB         
CIU_INT4_EN1_W1S               0x0001070000006248  NCB         
CIU_INT4_EN4_0                 0x0001070000000CC0  NCB         
CIU_INT4_EN4_0_W1C             0x0001070000002CC0  NCB         
CIU_INT4_EN4_0_W1S             0x0001070000006CC0  NCB         
CIU_INT4_EN4_1                 0x0001070000000CC8  NCB         
CIU_INT4_EN4_1_W1C             0x0001070000002CC8  NCB         
CIU_INT4_EN4_1_W1S             0x0001070000006CC8  NCB         
CIU_INT4_SUM0                  0x0001070000000020  NCB         
CIU_INT4_SUM4                  0x0001070000000C20  NCB         
CIU_INT5_EN0                   0x0001070000000250  NCB         
CIU_INT5_EN0_W1C               0x0001070000002250  NCB         
CIU_INT5_EN0_W1S               0x0001070000006250  NCB         
CIU_INT5_EN1                   0x0001070000000258  NCB         
CIU_INT5_EN1_W1C               0x0001070000002258  NCB         
CIU_INT5_EN1_W1S               0x0001070000006258  NCB         
CIU_INT5_EN4_0                 0x0001070000000CD0  NCB         
CIU_INT5_EN4_0_W1C             0x0001070000002CD0  NCB         
CIU_INT5_EN4_0_W1S             0x0001070000006CD0  NCB         
CIU_INT5_EN4_1                 0x0001070000000CD8  NCB         
CIU_INT5_EN4_1_W1C             0x0001070000002CD8  NCB         
CIU_INT5_EN4_1_W1S             0x0001070000006CD8  NCB         
CIU_INT5_SUM0                  0x0001070000000028  NCB         
CIU_INT5_SUM4                  0x0001070000000C28  NCB         
CIU_INT6_EN0                   0x0001070000000260  NCB         
CIU_INT6_EN0_W1C               0x0001070000002260  NCB         
CIU_INT6_EN0_W1S               0x0001070000006260  NCB         
CIU_INT6_EN1                   0x0001070000000268  NCB         
CIU_INT6_EN1_W1C               0x0001070000002268  NCB         
CIU_INT6_EN1_W1S               0x0001070000006268  NCB         
CIU_INT6_SUM0                  0x0001070000000030  NCB         
CIU_INT7_EN0                   0x0001070000000270  NCB         
CIU_INT7_EN0_W1C               0x0001070000002270  NCB         
CIU_INT7_EN0_W1S               0x0001070000006270  NCB         
CIU_INT7_EN1                   0x0001070000000278  NCB         
CIU_INT7_EN1_W1C               0x0001070000002278  NCB         
CIU_INT7_EN1_W1S               0x0001070000006278  NCB         
CIU_INT7_SUM0                  0x0001070000000038  NCB         
CIU_INT8_EN0                   0x0001070000000280  NCB         
CIU_INT8_EN0_W1C               0x0001070000002280  NCB         
CIU_INT8_EN0_W1S               0x0001070000006280  NCB         
CIU_INT8_EN1                   0x0001070000000288  NCB         
CIU_INT8_EN1_W1C               0x0001070000002288  NCB         
CIU_INT8_EN1_W1S               0x0001070000006288  NCB         
CIU_INT8_SUM0                  0x0001070000000040  NCB         
CIU_INT9_EN0                   0x0001070000000290  NCB         
CIU_INT9_EN0_W1C               0x0001070000002290  NCB         
CIU_INT9_EN0_W1S               0x0001070000006290  NCB         
CIU_INT9_EN1                   0x0001070000000298  NCB         
CIU_INT9_EN1_W1C               0x0001070000002298  NCB         
CIU_INT9_EN1_W1S               0x0001070000006298  NCB         
CIU_INT9_SUM0                  0x0001070000000048  NCB         
CIU_INT10_EN0                  0x00010700000002A0  NCB         
CIU_INT10_EN0_W1C              0x00010700000022A0  NCB         
CIU_INT10_EN0_W1S              0x00010700000062A0  NCB         
CIU_INT10_EN1                  0x00010700000002A8  NCB         
CIU_INT10_EN1_W1C              0x00010700000022A8  NCB         
CIU_INT10_EN1_W1S              0x00010700000062A8  NCB         
CIU_INT10_SUM0                 0x0001070000000050  NCB         
CIU_INT11_EN0                  0x00010700000002B0  NCB         
CIU_INT11_EN0_W1C              0x00010700000022B0  NCB         
CIU_INT11_EN0_W1S              0x00010700000062B0  NCB         
CIU_INT11_EN1                  0x00010700000002B8  NCB         
CIU_INT11_EN1_W1C              0x00010700000022B8  NCB         
CIU_INT11_EN1_W1S              0x00010700000062B8  NCB         
CIU_INT11_SUM0                 0x0001070000000058  NCB         
CIU_INT32_EN0                  0x0001070000000400  NCB         
CIU_INT32_EN0_W1C              0x0001070000002400  NCB         
CIU_INT32_EN0_W1S              0x0001070000006400  NCB         
CIU_INT32_EN1                  0x0001070000000408  NCB         
CIU_INT32_EN1_W1C              0x0001070000002408  NCB         
CIU_INT32_EN1_W1S              0x0001070000006408  NCB         
CIU_INT32_SUM0                 0x0001070000000100  NCB         
CIU_INT33_EN0                  0x0001070000000410  NCB         
CIU_INT33_EN0_W1C              0x0001070000002410  NCB         
CIU_INT33_EN0_W1S              0x0001070000006410  NCB         
CIU_INT33_EN1                  0x0001070000000418  NCB         
CIU_INT33_EN1_W1C              0x0001070000002418  NCB         
CIU_INT33_EN1_W1S              0x0001070000006418  NCB         
CIU_INT33_SUM0                 0x0001070000000110  NCB         
CIU_INT_SUM1                   0x0001070000000108  NCB         
CIU_MBOX_CLR0                  0x0001070000000680  NCB         
CIU_MBOX_CLR1                  0x0001070000000688  NCB         
CIU_MBOX_CLR2                  0x0001070000000690  NCB         
CIU_MBOX_CLR3                  0x0001070000000698  NCB         
CIU_MBOX_CLR4                  0x00010700000006A0  NCB         
CIU_MBOX_CLR5                  0x00010700000006A8  NCB         
CIU_MBOX_SET0                  0x0001070000000600  NCB         
CIU_MBOX_SET1                  0x0001070000000608  NCB         
CIU_MBOX_SET2                  0x0001070000000610  NCB         
CIU_MBOX_SET3                  0x0001070000000618  NCB         
CIU_MBOX_SET4                  0x0001070000000620  NCB         
CIU_MBOX_SET5                  0x0001070000000628  NCB         
CIU_NMI                        0x0001070000000718  NCB         
CIU_PCI_INTA                   0x0001070000000750  NCB         
CIU_PP_DBG                     0x0001070000000708  NCB         
CIU_PP_POKE0                   0x0001070000000580  NCB         
CIU_PP_POKE1                   0x0001070000000588  NCB         
CIU_PP_POKE2                   0x0001070000000590  NCB         
CIU_PP_POKE3                   0x0001070000000598  NCB         
CIU_PP_POKE4                   0x00010700000005A0  NCB         
CIU_PP_POKE5                   0x00010700000005A8  NCB         
CIU_PP_RST                     0x0001070000000700  NCB         
CIU_QLM0                       0x0001070000000780  NCB         
CIU_QLM1                       0x0001070000000788  NCB         
CIU_QLM2                       0x0001070000000790  NCB         
CIU_QLM_JTGC                   0x0001070000000768  NCB         
CIU_QLM_JTGD                   0x0001070000000770  NCB         
CIU_SOFT_BIST                  0x0001070000000738  NCB         
CIU_SOFT_PRST                  0x0001070000000748  NCB         
CIU_SOFT_PRST1                 0x0001070000000758  NCB         
CIU_SOFT_RST                   0x0001070000000740  NCB         
CIU_TIM0                       0x0001070000000480  NCB         
CIU_TIM1                       0x0001070000000488  NCB         
CIU_TIM2                       0x0001070000000490  NCB         
CIU_TIM3                       0x0001070000000498  NCB         
CIU_WDOG0                      0x0001070000000500  NCB         
CIU_WDOG1                      0x0001070000000508  NCB         
CIU_WDOG2                      0x0001070000000510  NCB         
CIU_WDOG3                      0x0001070000000518  NCB         
CIU_WDOG4                      0x0001070000000520  NCB         
CIU_WDOG5                      0x0001070000000528  NCB         
DFA_BIST0                      0x00011800370007F0  RSL         
DFA_BIST1                      0x00011800370007F8  RSL         
DFA_CONFIG                     0x0001180037000000  RSL         
DFA_CONTROL                    0x0001180037000020  RSL         
DFA_DBELL                      0x0001370000000000  NCB         
DFA_DEBUG0                     0x0001180037000040  RSL         
DFA_DEBUG1                     0x0001180037000048  RSL         
DFA_DEBUG2                     0x0001180037000050  RSL         
DFA_DEBUG3                     0x0001180037000058  RSL         
DFA_DIFCTL                     0x0001370600000000  NCB         
DFA_DIFRDPTR                   0x0001370200000000  NCB         
DFA_DTCFADR                    0x0001180037000060  RSL         
DFA_ERROR                      0x0001180037000028  RSL         
DFA_INTMSK                     0x0001180037000030  RSL         
DFA_MEMHIDAT                   0x0001370700000000  NCB         
DFA_PFC0_CNT                   0x0001180037000090  RSL         
DFA_PFC0_CTL                   0x0001180037000088  RSL         
DFA_PFC1_CNT                   0x00011800370000A0  RSL         
DFA_PFC1_CTL                   0x0001180037000098  RSL         
DFA_PFC2_CNT                   0x00011800370000B0  RSL         
DFA_PFC2_CTL                   0x00011800370000A8  RSL         
DFA_PFC3_CNT                   0x00011800370000C0  RSL         
DFA_PFC3_CTL                   0x00011800370000B8  RSL         
DFA_PFC_GCTL                   0x0001180037000080  RSL         
DFM_CHAR_CTL                   0x00011800D4000220  RSL         
DFM_CHAR_MASK0                 0x00011800D4000228  RSL         
DFM_CHAR_MASK2                 0x00011800D4000238  RSL         
DFM_COMP_CTL2                  0x00011800D40001B8  RSL         
DFM_CONFIG                     0x00011800D4000188  RSL         
DFM_CONTROL                    0x00011800D4000190  RSL         
DFM_DLL_CTL2                   0x00011800D40001C8  RSL         
DFM_DLL_CTL3                   0x00011800D4000218  RSL         
DFM_FCLK_CNT                   0x00011800D40001E0  RSL         
DFM_FNT_BIST                   0x00011800D40007F8  RSL         
DFM_FNT_CTL                    0x00011800D4000400  RSL         
DFM_FNT_IENA                   0x00011800D4000410  RSL         
DFM_FNT_SCLK                   0x00011800D4000418  RSL         
DFM_FNT_STAT                   0x00011800D4000408  RSL         
DFM_IFB_CNT                    0x00011800D40001D0  RSL         
DFM_MODEREG_PARAMS0            0x00011800D40001A8  RSL         
DFM_MODEREG_PARAMS1            0x00011800D4000260  RSL         
DFM_OPS_CNT                    0x00011800D40001D8  RSL         
DFM_PHY_CTL                    0x00011800D4000210  RSL         
DFM_RESET_CTL                  0x00011800D4000180  RSL         
DFM_RLEVEL_CTL                 0x00011800D40002A0  RSL         
DFM_RLEVEL_DBG                 0x00011800D40002A8  RSL         
DFM_RLEVEL_RANK0               0x00011800D4000280  RSL         
DFM_RLEVEL_RANK1               0x00011800D4000288  RSL         
DFM_RODT_MASK                  0x00011800D4000268  RSL         
DFM_SLOT_CTL0                  0x00011800D40001F8  RSL         
DFM_SLOT_CTL1                  0x00011800D4000200  RSL         
DFM_TIMING_PARAMS0             0x00011800D4000198  RSL         
DFM_TIMING_PARAMS1             0x00011800D40001A0  RSL         
DFM_WLEVEL_CTL                 0x00011800D4000300  RSL         
DFM_WLEVEL_DBG                 0x00011800D4000308  RSL         
DFM_WLEVEL_RANK0               0x00011800D40002B0  RSL         
DFM_WLEVEL_RANK1               0x00011800D40002B8  RSL         
DFM_WODT_MASK                  0x00011800D40001B0  RSL         
DPI_BIST_STATUS                0x0001DF0000000000  NCB         
DPI_CTL                        0x0001DF0000000040  NCB         
DPI_DMA0_COUNTS                0x0001DF0000000300  NCB         
DPI_DMA0_DBELL                 0x0001DF0000000200  NCB         
DPI_DMA0_IBUFF_SADDR           0x0001DF0000000280  NCB         
DPI_DMA0_NADDR                 0x0001DF0000000380  NCB         
DPI_DMA0_REQBNK0               0x0001DF0000000400  NCB         
DPI_DMA0_REQBNK1               0x0001DF0000000480  NCB         
DPI_DMA1_COUNTS                0x0001DF0000000308  NCB         
DPI_DMA1_DBELL                 0x0001DF0000000208  NCB         
DPI_DMA1_IBUFF_SADDR           0x0001DF0000000288  NCB         
DPI_DMA1_NADDR                 0x0001DF0000000388  NCB         
DPI_DMA1_REQBNK0               0x0001DF0000000408  NCB         
DPI_DMA1_REQBNK1               0x0001DF0000000488  NCB         
DPI_DMA2_COUNTS                0x0001DF0000000310  NCB         
DPI_DMA2_DBELL                 0x0001DF0000000210  NCB         
DPI_DMA2_IBUFF_SADDR           0x0001DF0000000290  NCB         
DPI_DMA2_NADDR                 0x0001DF0000000390  NCB         
DPI_DMA2_REQBNK0               0x0001DF0000000410  NCB         
DPI_DMA2_REQBNK1               0x0001DF0000000490  NCB         
DPI_DMA3_COUNTS                0x0001DF0000000318  NCB         
DPI_DMA3_DBELL                 0x0001DF0000000218  NCB         
DPI_DMA3_IBUFF_SADDR           0x0001DF0000000298  NCB         
DPI_DMA3_NADDR                 0x0001DF0000000398  NCB         
DPI_DMA3_REQBNK0               0x0001DF0000000418  NCB         
DPI_DMA3_REQBNK1               0x0001DF0000000498  NCB         
DPI_DMA4_COUNTS                0x0001DF0000000320  NCB         
DPI_DMA4_DBELL                 0x0001DF0000000220  NCB         
DPI_DMA4_IBUFF_SADDR           0x0001DF00000002A0  NCB         
DPI_DMA4_NADDR                 0x0001DF00000003A0  NCB         
DPI_DMA4_REQBNK0               0x0001DF0000000420  NCB         
DPI_DMA4_REQBNK1               0x0001DF00000004A0  NCB         
DPI_DMA5_COUNTS                0x0001DF0000000328  NCB         
DPI_DMA5_DBELL                 0x0001DF0000000228  NCB         
DPI_DMA5_IBUFF_SADDR           0x0001DF00000002A8  NCB         
DPI_DMA5_NADDR                 0x0001DF00000003A8  NCB         
DPI_DMA5_REQBNK0               0x0001DF0000000428  NCB         
DPI_DMA5_REQBNK1               0x0001DF00000004A8  NCB         
DPI_DMA6_COUNTS                0x0001DF0000000330  NCB         
DPI_DMA6_DBELL                 0x0001DF0000000230  NCB         
DPI_DMA6_IBUFF_SADDR           0x0001DF00000002B0  NCB         
DPI_DMA6_NADDR                 0x0001DF00000003B0  NCB         
DPI_DMA6_REQBNK0               0x0001DF0000000430  NCB         
DPI_DMA6_REQBNK1               0x0001DF00000004B0  NCB         
DPI_DMA7_COUNTS                0x0001DF0000000338  NCB         
DPI_DMA7_DBELL                 0x0001DF0000000238  NCB         
DPI_DMA7_IBUFF_SADDR           0x0001DF00000002B8  NCB         
DPI_DMA7_NADDR                 0x0001DF00000003B8  NCB         
DPI_DMA7_REQBNK0               0x0001DF0000000438  NCB         
DPI_DMA7_REQBNK1               0x0001DF00000004B8  NCB         
DPI_DMA_CONTROL                0x0001DF0000000048  NCB         
DPI_DMA_ENG0_EN                0x0001DF0000000080  NCB         
DPI_DMA_ENG1_EN                0x0001DF0000000088  NCB         
DPI_DMA_ENG2_EN                0x0001DF0000000090  NCB         
DPI_DMA_ENG3_EN                0x0001DF0000000098  NCB         
DPI_DMA_ENG4_EN                0x0001DF00000000A0  NCB         
DPI_DMA_ENG5_EN                0x0001DF00000000A8  NCB         
DPI_ENG0_BUF                   0x0001DF0000000880  NCB         
DPI_ENG1_BUF                   0x0001DF0000000888  NCB         
DPI_ENG2_BUF                   0x0001DF0000000890  NCB         
DPI_ENG3_BUF                   0x0001DF0000000898  NCB         
DPI_ENG4_BUF                   0x0001DF00000008A0  NCB         
DPI_ENG5_BUF                   0x0001DF00000008A8  NCB         
DPI_INFO_REG                   0x0001DF0000000980  NCB         
DPI_INT_EN                     0x0001DF0000000010  NCB         
DPI_INT_REG                    0x0001DF0000000008  NCB         
DPI_PINT_INFO                  0x0001DF0000000830  NCB         
DPI_PKT_ERR_RSP                0x0001DF0000000078  NCB         
DPI_REQ_ERR_RSP                0x0001DF0000000058  NCB         
DPI_REQ_ERR_RSP_EN             0x0001DF0000000068  NCB         
DPI_REQ_ERR_RST                0x0001DF0000000060  NCB         
DPI_REQ_ERR_RST_EN             0x0001DF0000000070  NCB         
DPI_REQ_GBL_EN                 0x0001DF0000000050  NCB         
DPI_SLI_PRT0_CFG               0x0001DF0000000900  NCB         
DPI_SLI_PRT0_ERR               0x0001DF0000000920  NCB         
DPI_SLI_PRT0_ERR_INFO          0x0001DF0000000940  NCB         
DPI_SLI_PRT1_CFG               0x0001DF0000000908  NCB         
DPI_SLI_PRT1_ERR               0x0001DF0000000928  NCB         
DPI_SLI_PRT1_ERR_INFO          0x0001DF0000000948  NCB         
FPA_BIST_STATUS                0x00011800280000E8  RSL         
FPA_CTL_STATUS                 0x0001180028000050  RSL         
FPA_FPF0_MARKS                 0x0001180028000000  RSL         
FPA_FPF0_SIZE                  0x0001180028000058  RSL         
FPA_FPF1_MARKS                 0x0001180028000008  RSL         
FPA_FPF1_SIZE                  0x0001180028000060  RSL         
FPA_FPF2_MARKS                 0x0001180028000010  RSL         
FPA_FPF2_SIZE                  0x0001180028000068  RSL         
FPA_FPF3_MARKS                 0x0001180028000018  RSL         
FPA_FPF3_SIZE                  0x0001180028000070  RSL         
FPA_FPF4_MARKS                 0x0001180028000020  RSL         
FPA_FPF4_SIZE                  0x0001180028000078  RSL         
FPA_FPF5_MARKS                 0x0001180028000028  RSL         
FPA_FPF5_SIZE                  0x0001180028000080  RSL         
FPA_FPF6_MARKS                 0x0001180028000030  RSL         
FPA_FPF6_SIZE                  0x0001180028000088  RSL         
FPA_FPF7_MARKS                 0x0001180028000038  RSL         
FPA_FPF7_SIZE                  0x0001180028000090  RSL         
FPA_INT_ENB                    0x0001180028000048  RSL         
FPA_INT_SUM                    0x0001180028000040  RSL         
FPA_QUE0_AVAILABLE             0x0001180028000098  RSL         
FPA_QUE0_PAGE_INDEX            0x00011800280000F0  RSL         
FPA_QUE1_AVAILABLE             0x00011800280000A0  RSL         
FPA_QUE1_PAGE_INDEX            0x00011800280000F8  RSL         
FPA_QUE2_AVAILABLE             0x00011800280000A8  RSL         
FPA_QUE2_PAGE_INDEX            0x0001180028000100  RSL         
FPA_QUE3_AVAILABLE             0x00011800280000B0  RSL         
FPA_QUE3_PAGE_INDEX            0x0001180028000108  RSL         
FPA_QUE4_AVAILABLE             0x00011800280000B8  RSL         
FPA_QUE4_PAGE_INDEX            0x0001180028000110  RSL         
FPA_QUE5_AVAILABLE             0x00011800280000C0  RSL         
FPA_QUE5_PAGE_INDEX            0x0001180028000118  RSL         
FPA_QUE6_AVAILABLE             0x00011800280000C8  RSL         
FPA_QUE6_PAGE_INDEX            0x0001180028000120  RSL         
FPA_QUE7_AVAILABLE             0x00011800280000D0  RSL         
FPA_QUE7_PAGE_INDEX            0x0001180028000128  RSL         
FPA_QUE_ACT                    0x0001180028000138  RSL         
FPA_QUE_EXP                    0x0001180028000130  RSL         
GMX0_BAD_REG                   0x0001180008000518  RSL         
GMX0_BIST                      0x0001180008000400  RSL         
GMX0_CLK_EN                    0x00011800080007F0  RSL         
GMX0_HG2_CONTROL               0x0001180008000550  RSL         
GMX0_INF_MODE                  0x00011800080007F8  RSL         
GMX0_NXA_ADR                   0x0001180008000510  RSL         
GMX0_PRT000_CBFC_CTL           0x0001180008000580  RSL         
GMX0_PRT000_CFG                0x0001180008000010  RSL         
GMX0_PRT001_CFG                0x0001180008000810  RSL         
GMX0_PRT002_CFG                0x0001180008001010  RSL         
GMX0_PRT003_CFG                0x0001180008001810  RSL         
GMX0_RX000_ADR_CAM0            0x0001180008000180  RSL         
GMX0_RX000_ADR_CAM1            0x0001180008000188  RSL         
GMX0_RX000_ADR_CAM2            0x0001180008000190  RSL         
GMX0_RX000_ADR_CAM3            0x0001180008000198  RSL         
GMX0_RX000_ADR_CAM4            0x00011800080001A0  RSL         
GMX0_RX000_ADR_CAM5            0x00011800080001A8  RSL         
GMX0_RX000_ADR_CAM_EN          0x0001180008000108  RSL         
GMX0_RX000_ADR_CTL             0x0001180008000100  RSL         
GMX0_RX000_DECISION            0x0001180008000040  RSL         
GMX0_RX000_FRM_CHK             0x0001180008000020  RSL         
GMX0_RX000_FRM_CTL             0x0001180008000018  RSL         
GMX0_RX000_IFG                 0x0001180008000058  RSL         
GMX0_RX000_INT_EN              0x0001180008000008  RSL         
GMX0_RX000_INT_REG             0x0001180008000000  RSL         
GMX0_RX000_JABBER              0x0001180008000038  RSL         
GMX0_RX000_PAUSE_DROP_TIME     0x0001180008000068  RSL         
GMX0_RX000_STATS_CTL           0x0001180008000050  RSL         
GMX0_RX000_STATS_OCTS          0x0001180008000088  RSL         
GMX0_RX000_STATS_OCTS_CTL      0x0001180008000098  RSL         
GMX0_RX000_STATS_OCTS_DMAC     0x00011800080000A8  RSL         
GMX0_RX000_STATS_OCTS_DRP      0x00011800080000B8  RSL         
GMX0_RX000_STATS_PKTS          0x0001180008000080  RSL         
GMX0_RX000_STATS_PKTS_BAD      0x00011800080000C0  RSL         
GMX0_RX000_STATS_PKTS_CTL      0x0001180008000090  RSL         
GMX0_RX000_STATS_PKTS_DMAC     0x00011800080000A0  RSL         
GMX0_RX000_STATS_PKTS_DRP      0x00011800080000B0  RSL         
GMX0_RX000_UDD_SKP             0x0001180008000048  RSL         
GMX0_RX001_ADR_CAM0            0x0001180008000980  RSL         
GMX0_RX001_ADR_CAM1            0x0001180008000988  RSL         
GMX0_RX001_ADR_CAM2            0x0001180008000990  RSL         
GMX0_RX001_ADR_CAM3            0x0001180008000998  RSL         
GMX0_RX001_ADR_CAM4            0x00011800080009A0  RSL         
GMX0_RX001_ADR_CAM5            0x00011800080009A8  RSL         
GMX0_RX001_ADR_CAM_EN          0x0001180008000908  RSL         
GMX0_RX001_ADR_CTL             0x0001180008000900  RSL         
GMX0_RX001_DECISION            0x0001180008000840  RSL         
GMX0_RX001_FRM_CHK             0x0001180008000820  RSL         
GMX0_RX001_FRM_CTL             0x0001180008000818  RSL         
GMX0_RX001_IFG                 0x0001180008000858  RSL         
GMX0_RX001_INT_EN              0x0001180008000808  RSL         
GMX0_RX001_INT_REG             0x0001180008000800  RSL         
GMX0_RX001_JABBER              0x0001180008000838  RSL         
GMX0_RX001_PAUSE_DROP_TIME     0x0001180008000868  RSL         
GMX0_RX001_STATS_CTL           0x0001180008000850  RSL         
GMX0_RX001_STATS_OCTS          0x0001180008000888  RSL         
GMX0_RX001_STATS_OCTS_CTL      0x0001180008000898  RSL         
GMX0_RX001_STATS_OCTS_DMAC     0x00011800080008A8  RSL         
GMX0_RX001_STATS_OCTS_DRP      0x00011800080008B8  RSL         
GMX0_RX001_STATS_PKTS          0x0001180008000880  RSL         
GMX0_RX001_STATS_PKTS_BAD      0x00011800080008C0  RSL         
GMX0_RX001_STATS_PKTS_CTL      0x0001180008000890  RSL         
GMX0_RX001_STATS_PKTS_DMAC     0x00011800080008A0  RSL         
GMX0_RX001_STATS_PKTS_DRP      0x00011800080008B0  RSL         
GMX0_RX001_UDD_SKP             0x0001180008000848  RSL         
GMX0_RX002_ADR_CAM0            0x0001180008001180  RSL         
GMX0_RX002_ADR_CAM1            0x0001180008001188  RSL         
GMX0_RX002_ADR_CAM2            0x0001180008001190  RSL         
GMX0_RX002_ADR_CAM3            0x0001180008001198  RSL         
GMX0_RX002_ADR_CAM4            0x00011800080011A0  RSL         
GMX0_RX002_ADR_CAM5            0x00011800080011A8  RSL         
GMX0_RX002_ADR_CAM_EN          0x0001180008001108  RSL         
GMX0_RX002_ADR_CTL             0x0001180008001100  RSL         
GMX0_RX002_DECISION            0x0001180008001040  RSL         
GMX0_RX002_FRM_CHK             0x0001180008001020  RSL         
GMX0_RX002_FRM_CTL             0x0001180008001018  RSL         
GMX0_RX002_IFG                 0x0001180008001058  RSL         
GMX0_RX002_INT_EN              0x0001180008001008  RSL         
GMX0_RX002_INT_REG             0x0001180008001000  RSL         
GMX0_RX002_JABBER              0x0001180008001038  RSL         
GMX0_RX002_PAUSE_DROP_TIME     0x0001180008001068  RSL         
GMX0_RX002_STATS_CTL           0x0001180008001050  RSL         
GMX0_RX002_STATS_OCTS          0x0001180008001088  RSL         
GMX0_RX002_STATS_OCTS_CTL      0x0001180008001098  RSL         
GMX0_RX002_STATS_OCTS_DMAC     0x00011800080010A8  RSL         
GMX0_RX002_STATS_OCTS_DRP      0x00011800080010B8  RSL         
GMX0_RX002_STATS_PKTS          0x0001180008001080  RSL         
GMX0_RX002_STATS_PKTS_BAD      0x00011800080010C0  RSL         
GMX0_RX002_STATS_PKTS_CTL      0x0001180008001090  RSL         
GMX0_RX002_STATS_PKTS_DMAC     0x00011800080010A0  RSL         
GMX0_RX002_STATS_PKTS_DRP      0x00011800080010B0  RSL         
GMX0_RX002_UDD_SKP             0x0001180008001048  RSL         
GMX0_RX003_ADR_CAM0            0x0001180008001980  RSL         
GMX0_RX003_ADR_CAM1            0x0001180008001988  RSL         
GMX0_RX003_ADR_CAM2            0x0001180008001990  RSL         
GMX0_RX003_ADR_CAM3            0x0001180008001998  RSL         
GMX0_RX003_ADR_CAM4            0x00011800080019A0  RSL         
GMX0_RX003_ADR_CAM5            0x00011800080019A8  RSL         
GMX0_RX003_ADR_CAM_EN          0x0001180008001908  RSL         
GMX0_RX003_ADR_CTL             0x0001180008001900  RSL         
GMX0_RX003_DECISION            0x0001180008001840  RSL         
GMX0_RX003_FRM_CHK             0x0001180008001820  RSL         
GMX0_RX003_FRM_CTL             0x0001180008001818  RSL         
GMX0_RX003_IFG                 0x0001180008001858  RSL         
GMX0_RX003_INT_EN              0x0001180008001808  RSL         
GMX0_RX003_INT_REG             0x0001180008001800  RSL         
GMX0_RX003_JABBER              0x0001180008001838  RSL         
GMX0_RX003_PAUSE_DROP_TIME     0x0001180008001868  RSL         
GMX0_RX003_STATS_CTL           0x0001180008001850  RSL         
GMX0_RX003_STATS_OCTS          0x0001180008001888  RSL         
GMX0_RX003_STATS_OCTS_CTL      0x0001180008001898  RSL         
GMX0_RX003_STATS_OCTS_DMAC     0x00011800080018A8  RSL         
GMX0_RX003_STATS_OCTS_DRP      0x00011800080018B8  RSL         
GMX0_RX003_STATS_PKTS          0x0001180008001880  RSL         
GMX0_RX003_STATS_PKTS_BAD      0x00011800080018C0  RSL         
GMX0_RX003_STATS_PKTS_CTL      0x0001180008001890  RSL         
GMX0_RX003_STATS_PKTS_DMAC     0x00011800080018A0  RSL         
GMX0_RX003_STATS_PKTS_DRP      0x00011800080018B0  RSL         
GMX0_RX003_UDD_SKP             0x0001180008001848  RSL         
GMX0_RX_BP_DROP000             0x0001180008000420  RSL         
GMX0_RX_BP_DROP001             0x0001180008000428  RSL         
GMX0_RX_BP_DROP002             0x0001180008000430  RSL         
GMX0_RX_BP_DROP003             0x0001180008000438  RSL         
GMX0_RX_BP_OFF000              0x0001180008000460  RSL         
GMX0_RX_BP_OFF001              0x0001180008000468  RSL         
GMX0_RX_BP_OFF002              0x0001180008000470  RSL         
GMX0_RX_BP_OFF003              0x0001180008000478  RSL         
GMX0_RX_BP_ON000               0x0001180008000440  RSL         
GMX0_RX_BP_ON001               0x0001180008000448  RSL         
GMX0_RX_BP_ON002               0x0001180008000450  RSL         
GMX0_RX_BP_ON003               0x0001180008000458  RSL         
GMX0_RX_HG2_STATUS             0x0001180008000548  RSL         
GMX0_RX_PRTS                   0x0001180008000410  RSL         
GMX0_RX_PRT_INFO               0x00011800080004E8  RSL         
GMX0_RX_XAUI_BAD_COL           0x0001180008000538  RSL         
GMX0_RX_XAUI_CTL               0x0001180008000530  RSL         
GMX0_SMAC000                   0x0001180008000230  RSL         
GMX0_SMAC001                   0x0001180008000A30  RSL         
GMX0_SMAC002                   0x0001180008001230  RSL         
GMX0_SMAC003                   0x0001180008001A30  RSL         
GMX0_SOFT_BIST                 0x00011800080007E8  RSL         
GMX0_STAT_BP                   0x0001180008000520  RSL         
GMX0_TX000_APPEND              0x0001180008000218  RSL         
GMX0_TX000_BURST               0x0001180008000228  RSL         
GMX0_TX000_CBFC_XOFF           0x00011800080005A0  RSL         
GMX0_TX000_CBFC_XON            0x00011800080005C0  RSL         
GMX0_TX000_CTL                 0x0001180008000270  RSL         
GMX0_TX000_MIN_PKT             0x0001180008000240  RSL         
GMX0_TX000_PAUSE_PKT_INTERVAL  0x0001180008000248  RSL         
GMX0_TX000_PAUSE_PKT_TIME      0x0001180008000238  RSL         
GMX0_TX000_PAUSE_TOGO          0x0001180008000258  RSL         
GMX0_TX000_PAUSE_ZERO          0x0001180008000260  RSL         
GMX0_TX000_SGMII_CTL           0x0001180008000300  RSL         
GMX0_TX000_SLOT                0x0001180008000220  RSL         
GMX0_TX000_SOFT_PAUSE          0x0001180008000250  RSL         
GMX0_TX000_STAT0               0x0001180008000280  RSL         
GMX0_TX000_STAT1               0x0001180008000288  RSL         
GMX0_TX000_STAT2               0x0001180008000290  RSL         
GMX0_TX000_STAT3               0x0001180008000298  RSL         
GMX0_TX000_STAT4               0x00011800080002A0  RSL         
GMX0_TX000_STAT5               0x00011800080002A8  RSL         
GMX0_TX000_STAT6               0x00011800080002B0  RSL         
GMX0_TX000_STAT7               0x00011800080002B8  RSL         
GMX0_TX000_STAT8               0x00011800080002C0  RSL         
GMX0_TX000_STAT9               0x00011800080002C8  RSL         
GMX0_TX000_STATS_CTL           0x0001180008000268  RSL         
GMX0_TX000_THRESH              0x0001180008000210  RSL         
GMX0_TX001_APPEND              0x0001180008000A18  RSL         
GMX0_TX001_BURST               0x0001180008000A28  RSL         
GMX0_TX001_CTL                 0x0001180008000A70  RSL         
GMX0_TX001_MIN_PKT             0x0001180008000A40  RSL         
GMX0_TX001_PAUSE_PKT_INTERVAL  0x0001180008000A48  RSL         
GMX0_TX001_PAUSE_PKT_TIME      0x0001180008000A38  RSL         
GMX0_TX001_PAUSE_TOGO          0x0001180008000A58  RSL         
GMX0_TX001_PAUSE_ZERO          0x0001180008000A60  RSL         
GMX0_TX001_SGMII_CTL           0x0001180008000B00  RSL         
GMX0_TX001_SLOT                0x0001180008000A20  RSL         
GMX0_TX001_SOFT_PAUSE          0x0001180008000A50  RSL         
GMX0_TX001_STAT0               0x0001180008000A80  RSL         
GMX0_TX001_STAT1               0x0001180008000A88  RSL         
GMX0_TX001_STAT2               0x0001180008000A90  RSL         
GMX0_TX001_STAT3               0x0001180008000A98  RSL         
GMX0_TX001_STAT4               0x0001180008000AA0  RSL         
GMX0_TX001_STAT5               0x0001180008000AA8  RSL         
GMX0_TX001_STAT6               0x0001180008000AB0  RSL         
GMX0_TX001_STAT7               0x0001180008000AB8  RSL         
GMX0_TX001_STAT8               0x0001180008000AC0  RSL         
GMX0_TX001_STAT9               0x0001180008000AC8  RSL         
GMX0_TX001_STATS_CTL           0x0001180008000A68  RSL         
GMX0_TX001_THRESH              0x0001180008000A10  RSL         
GMX0_TX002_APPEND              0x0001180008001218  RSL         
GMX0_TX002_BURST               0x0001180008001228  RSL         
GMX0_TX002_CTL                 0x0001180008001270  RSL         
GMX0_TX002_MIN_PKT             0x0001180008001240  RSL         
GMX0_TX002_PAUSE_PKT_INTERVAL  0x0001180008001248  RSL         
GMX0_TX002_PAUSE_PKT_TIME      0x0001180008001238  RSL         
GMX0_TX002_PAUSE_TOGO          0x0001180008001258  RSL         
GMX0_TX002_PAUSE_ZERO          0x0001180008001260  RSL         
GMX0_TX002_SGMII_CTL           0x0001180008001300  RSL         
GMX0_TX002_SLOT                0x0001180008001220  RSL         
GMX0_TX002_SOFT_PAUSE          0x0001180008001250  RSL         
GMX0_TX002_STAT0               0x0001180008001280  RSL         
GMX0_TX002_STAT1               0x0001180008001288  RSL         
GMX0_TX002_STAT2               0x0001180008001290  RSL         
GMX0_TX002_STAT3               0x0001180008001298  RSL         
GMX0_TX002_STAT4               0x00011800080012A0  RSL         
GMX0_TX002_STAT5               0x00011800080012A8  RSL         
GMX0_TX002_STAT6               0x00011800080012B0  RSL         
GMX0_TX002_STAT7               0x00011800080012B8  RSL         
GMX0_TX002_STAT8               0x00011800080012C0  RSL         
GMX0_TX002_STAT9               0x00011800080012C8  RSL         
GMX0_TX002_STATS_CTL           0x0001180008001268  RSL         
GMX0_TX002_THRESH              0x0001180008001210  RSL         
GMX0_TX003_APPEND              0x0001180008001A18  RSL         
GMX0_TX003_BURST               0x0001180008001A28  RSL         
GMX0_TX003_CTL                 0x0001180008001A70  RSL         
GMX0_TX003_MIN_PKT             0x0001180008001A40  RSL         
GMX0_TX003_PAUSE_PKT_INTERVAL  0x0001180008001A48  RSL         
GMX0_TX003_PAUSE_PKT_TIME      0x0001180008001A38  RSL         
GMX0_TX003_PAUSE_TOGO          0x0001180008001A58  RSL         
GMX0_TX003_PAUSE_ZERO          0x0001180008001A60  RSL         
GMX0_TX003_SGMII_CTL           0x0001180008001B00  RSL         
GMX0_TX003_SLOT                0x0001180008001A20  RSL         
GMX0_TX003_SOFT_PAUSE          0x0001180008001A50  RSL         
GMX0_TX003_STAT0               0x0001180008001A80  RSL         
GMX0_TX003_STAT1               0x0001180008001A88  RSL         
GMX0_TX003_STAT2               0x0001180008001A90  RSL         
GMX0_TX003_STAT3               0x0001180008001A98  RSL         
GMX0_TX003_STAT4               0x0001180008001AA0  RSL         
GMX0_TX003_STAT5               0x0001180008001AA8  RSL         
GMX0_TX003_STAT6               0x0001180008001AB0  RSL         
GMX0_TX003_STAT7               0x0001180008001AB8  RSL         
GMX0_TX003_STAT8               0x0001180008001AC0  RSL         
GMX0_TX003_STAT9               0x0001180008001AC8  RSL         
GMX0_TX003_STATS_CTL           0x0001180008001A68  RSL         
GMX0_TX003_THRESH              0x0001180008001A10  RSL         
GMX0_TX_BP                     0x00011800080004D0  RSL         
GMX0_TX_COL_ATTEMPT            0x0001180008000498  RSL         
GMX0_TX_CORRUPT                0x00011800080004D8  RSL         
GMX0_TX_HG2_REG1               0x0001180008000558  RSL         
GMX0_TX_HG2_REG2               0x0001180008000560  RSL         
GMX0_TX_IFG                    0x0001180008000488  RSL         
GMX0_TX_INT_EN                 0x0001180008000508  RSL         
GMX0_TX_INT_REG                0x0001180008000500  RSL         
GMX0_TX_JAM                    0x0001180008000490  RSL         
GMX0_TX_LFSR                   0x00011800080004F8  RSL         
GMX0_TX_OVR_BP                 0x00011800080004C8  RSL         
GMX0_TX_PAUSE_PKT_DMAC         0x00011800080004A0  RSL         
GMX0_TX_PAUSE_PKT_TYPE         0x00011800080004A8  RSL         
GMX0_TX_PRTS                   0x0001180008000480  RSL         
GMX0_TX_XAUI_CTL               0x0001180008000528  RSL         
GMX0_XAUI_EXT_LOOPBACK         0x0001180008000540  RSL         
GPIO_BIT_CFG0                  0x0001070000000800  NCB         
GPIO_BIT_CFG1                  0x0001070000000808  NCB         
GPIO_BIT_CFG2                  0x0001070000000810  NCB         
GPIO_BIT_CFG3                  0x0001070000000818  NCB         
GPIO_BIT_CFG4                  0x0001070000000820  NCB         
GPIO_BIT_CFG5                  0x0001070000000828  NCB         
GPIO_BIT_CFG6                  0x0001070000000830  NCB         
GPIO_BIT_CFG7                  0x0001070000000838  NCB         
GPIO_BIT_CFG8                  0x0001070000000840  NCB         
GPIO_BIT_CFG9                  0x0001070000000848  NCB         
GPIO_BIT_CFG10                 0x0001070000000850  NCB         
GPIO_BIT_CFG11                 0x0001070000000858  NCB         
GPIO_BIT_CFG12                 0x0001070000000860  NCB         
GPIO_BIT_CFG13                 0x0001070000000868  NCB         
GPIO_BIT_CFG14                 0x0001070000000870  NCB         
GPIO_BIT_CFG15                 0x0001070000000878  NCB         
GPIO_CLK_GEN0                  0x00010700000008C0  NCB         
GPIO_CLK_GEN1                  0x00010700000008C8  NCB         
GPIO_CLK_GEN2                  0x00010700000008D0  NCB         
GPIO_CLK_GEN3                  0x00010700000008D8  NCB         
GPIO_CLK_QLM0                  0x00010700000008E0  NCB         
GPIO_CLK_QLM1                  0x00010700000008E8  NCB         
GPIO_INT_CLR                   0x0001070000000898  NCB         
GPIO_RX_DAT                    0x0001070000000880  NCB         
GPIO_TX_CLR                    0x0001070000000890  NCB         
GPIO_TX_SET                    0x0001070000000888  NCB         
IOB_BIST_STATUS                0x00011800F00007F8  RSL         
IOB_CTL_STATUS                 0x00011800F0000050  RSL         
IOB_DWB_PRI_CNT                0x00011800F0000028  RSL         
IOB_FAU_TIMEOUT                0x00011800F0000000  RSL         
IOB_I2C_PRI_CNT                0x00011800F0000010  RSL         
IOB_INB_CONTROL_MATCH          0x00011800F0000078  RSL         
IOB_INB_CONTROL_MATCH_ENB      0x00011800F0000088  RSL         
IOB_INB_DATA_MATCH             0x00011800F0000070  RSL         
IOB_INB_DATA_MATCH_ENB         0x00011800F0000080  RSL         
IOB_INT_ENB                    0x00011800F0000060  RSL         
IOB_INT_SUM                    0x00011800F0000058  RSL         
IOB_N2C_L2C_PRI_CNT            0x00011800F0000020  RSL         
IOB_N2C_RSP_PRI_CNT            0x00011800F0000008  RSL         
IOB_OUTB_COM_PRI_CNT           0x00011800F0000040  RSL         
IOB_OUTB_CONTROL_MATCH         0x00011800F0000098  RSL         
IOB_OUTB_CONTROL_MATCH_ENB     0x00011800F00000A8  RSL         
IOB_OUTB_DATA_MATCH            0x00011800F0000090  RSL         
IOB_OUTB_DATA_MATCH_ENB        0x00011800F00000A0  RSL         
IOB_OUTB_FPA_PRI_CNT           0x00011800F0000048  RSL         
IOB_OUTB_REQ_PRI_CNT           0x00011800F0000038  RSL         
IOB_P2C_REQ_PRI_CNT            0x00011800F0000018  RSL         
IOB_PKT_ERR                    0x00011800F0000068  RSL         
IOB_TO_CMB_CREDITS             0x00011800F00000B0  RSL         
IPD_1ST_MBUFF_SKIP             0x00014F0000000000  NCB         
IPD_1st_NEXT_PTR_BACK          0x00014F0000000150  NCB         
IPD_2nd_NEXT_PTR_BACK          0x00014F0000000158  NCB         
IPD_BIST_STATUS                0x00014F00000007F8  NCB         
IPD_BP_PRT_RED_END             0x00014F0000000328  NCB         
IPD_CLK_COUNT                  0x00014F0000000338  NCB         
IPD_CTL_STATUS                 0x00014F0000000018  NCB         
IPD_INT_ENB                    0x00014F0000000160  NCB         
IPD_INT_SUM                    0x00014F0000000168  NCB         
IPD_NOT_1ST_MBUFF_SKIP         0x00014F0000000008  NCB         
IPD_PACKET_MBUFF_SIZE          0x00014F0000000010  NCB         
IPD_PKT_PTR_VALID              0x00014F0000000358  NCB         
IPD_PORT0_BP_PAGE_CNT          0x00014F0000000028  NCB         
IPD_PORT1_BP_PAGE_CNT          0x00014F0000000030  NCB         
IPD_PORT2_BP_PAGE_CNT          0x00014F0000000038  NCB         
IPD_PORT3_BP_PAGE_CNT          0x00014F0000000040  NCB         
IPD_PORT32_BP_PAGE_CNT         0x00014F0000000128  NCB         
IPD_PORT33_BP_PAGE_CNT         0x00014F0000000130  NCB         
IPD_PORT34_BP_PAGE_CNT         0x00014F0000000138  NCB         
IPD_PORT35_BP_PAGE_CNT         0x00014F0000000140  NCB         
IPD_PORT36_BP_PAGE_CNT2        0x00014F0000000368  NCB         
IPD_PORT37_BP_PAGE_CNT2        0x00014F0000000370  NCB         
IPD_PORT38_BP_PAGE_CNT2        0x00014F0000000378  NCB         
IPD_PORT39_BP_PAGE_CNT2        0x00014F0000000380  NCB         
IPD_PORT40_BP_PAGE_CNT3        0x00014F00000003D0  NCB         
IPD_PORT41_BP_PAGE_CNT3        0x00014F00000003D8  NCB         
IPD_PORT42_BP_PAGE_CNT3        0x00014F00000003E0  NCB         
IPD_PORT43_BP_PAGE_CNT3        0x00014F00000003E8  NCB         
IPD_PORT_BP_COUNTERS2_PAIR36   0x00014F0000000388  NCB         
IPD_PORT_BP_COUNTERS2_PAIR37   0x00014F0000000390  NCB         
IPD_PORT_BP_COUNTERS2_PAIR38   0x00014F0000000398  NCB         
IPD_PORT_BP_COUNTERS2_PAIR39   0x00014F00000003A0  NCB         
IPD_PORT_BP_COUNTERS3_PAIR40   0x00014F00000003B0  NCB         
IPD_PORT_BP_COUNTERS3_PAIR41   0x00014F00000003B8  NCB         
IPD_PORT_BP_COUNTERS3_PAIR42   0x00014F00000003C0  NCB         
IPD_PORT_BP_COUNTERS3_PAIR43   0x00014F00000003C8  NCB         
IPD_PORT_BP_COUNTERS_PAIR0     0x00014F00000001B8  NCB         
IPD_PORT_BP_COUNTERS_PAIR1     0x00014F00000001C0  NCB         
IPD_PORT_BP_COUNTERS_PAIR2     0x00014F00000001C8  NCB         
IPD_PORT_BP_COUNTERS_PAIR3     0x00014F00000001D0  NCB         
IPD_PORT_BP_COUNTERS_PAIR32    0x00014F00000002B8  NCB         
IPD_PORT_BP_COUNTERS_PAIR33    0x00014F00000002C0  NCB         
IPD_PORT_BP_COUNTERS_PAIR34    0x00014F00000002C8  NCB         
IPD_PORT_BP_COUNTERS_PAIR35    0x00014F00000002D0  NCB         
IPD_PORT_QOS_0_CNT             0x00014F0000000888  NCB         
IPD_PORT_QOS_1_CNT             0x00014F0000000890  NCB         
IPD_PORT_QOS_2_CNT             0x00014F0000000898  NCB         
IPD_PORT_QOS_3_CNT             0x00014F00000008A0  NCB         
IPD_PORT_QOS_4_CNT             0x00014F00000008A8  NCB         
IPD_PORT_QOS_5_CNT             0x00014F00000008B0  NCB         
IPD_PORT_QOS_6_CNT             0x00014F00000008B8  NCB         
IPD_PORT_QOS_7_CNT             0x00014F00000008C0  NCB         
IPD_PORT_QOS_8_CNT             0x00014F00000008C8  NCB         
IPD_PORT_QOS_9_CNT             0x00014F00000008D0  NCB         
IPD_PORT_QOS_10_CNT            0x00014F00000008D8  NCB         
IPD_PORT_QOS_11_CNT            0x00014F00000008E0  NCB         
IPD_PORT_QOS_12_CNT            0x00014F00000008E8  NCB         
IPD_PORT_QOS_13_CNT            0x00014F00000008F0  NCB         
IPD_PORT_QOS_14_CNT            0x00014F00000008F8  NCB         
IPD_PORT_QOS_15_CNT            0x00014F0000000900  NCB         
IPD_PORT_QOS_16_CNT            0x00014F0000000908  NCB         
IPD_PORT_QOS_17_CNT            0x00014F0000000910  NCB         
IPD_PORT_QOS_18_CNT            0x00014F0000000918  NCB         
IPD_PORT_QOS_19_CNT            0x00014F0000000920  NCB         
IPD_PORT_QOS_20_CNT            0x00014F0000000928  NCB         
IPD_PORT_QOS_21_CNT            0x00014F0000000930  NCB         
IPD_PORT_QOS_22_CNT            0x00014F0000000938  NCB         
IPD_PORT_QOS_23_CNT            0x00014F0000000940  NCB         
IPD_PORT_QOS_24_CNT            0x00014F0000000948  NCB         
IPD_PORT_QOS_25_CNT            0x00014F0000000950  NCB         
IPD_PORT_QOS_26_CNT            0x00014F0000000958  NCB         
IPD_PORT_QOS_27_CNT            0x00014F0000000960  NCB         
IPD_PORT_QOS_28_CNT            0x00014F0000000968  NCB         
IPD_PORT_QOS_29_CNT            0x00014F0000000970  NCB         
IPD_PORT_QOS_30_CNT            0x00014F0000000978  NCB         
IPD_PORT_QOS_31_CNT            0x00014F0000000980  NCB         
IPD_PORT_QOS_256_CNT           0x00014F0000001088  NCB         
IPD_PORT_QOS_257_CNT           0x00014F0000001090  NCB         
IPD_PORT_QOS_258_CNT           0x00014F0000001098  NCB         
IPD_PORT_QOS_259_CNT           0x00014F00000010A0  NCB         
IPD_PORT_QOS_260_CNT           0x00014F00000010A8  NCB         
IPD_PORT_QOS_261_CNT           0x00014F00000010B0  NCB         
IPD_PORT_QOS_262_CNT           0x00014F00000010B8  NCB         
IPD_PORT_QOS_263_CNT           0x00014F00000010C0  NCB         
IPD_PORT_QOS_264_CNT           0x00014F00000010C8  NCB         
IPD_PORT_QOS_265_CNT           0x00014F00000010D0  NCB         
IPD_PORT_QOS_266_CNT           0x00014F00000010D8  NCB         
IPD_PORT_QOS_267_CNT           0x00014F00000010E0  NCB         
IPD_PORT_QOS_268_CNT           0x00014F00000010E8  NCB         
IPD_PORT_QOS_269_CNT           0x00014F00000010F0  NCB         
IPD_PORT_QOS_270_CNT           0x00014F00000010F8  NCB         
IPD_PORT_QOS_271_CNT           0x00014F0000001100  NCB         
IPD_PORT_QOS_272_CNT           0x00014F0000001108  NCB         
IPD_PORT_QOS_273_CNT           0x00014F0000001110  NCB         
IPD_PORT_QOS_274_CNT           0x00014F0000001118  NCB         
IPD_PORT_QOS_275_CNT           0x00014F0000001120  NCB         
IPD_PORT_QOS_276_CNT           0x00014F0000001128  NCB         
IPD_PORT_QOS_277_CNT           0x00014F0000001130  NCB         
IPD_PORT_QOS_278_CNT           0x00014F0000001138  NCB         
IPD_PORT_QOS_279_CNT           0x00014F0000001140  NCB         
IPD_PORT_QOS_280_CNT           0x00014F0000001148  NCB         
IPD_PORT_QOS_281_CNT           0x00014F0000001150  NCB         
IPD_PORT_QOS_282_CNT           0x00014F0000001158  NCB         
IPD_PORT_QOS_283_CNT           0x00014F0000001160  NCB         
IPD_PORT_QOS_284_CNT           0x00014F0000001168  NCB         
IPD_PORT_QOS_285_CNT           0x00014F0000001170  NCB         
IPD_PORT_QOS_286_CNT           0x00014F0000001178  NCB         
IPD_PORT_QOS_287_CNT           0x00014F0000001180  NCB         
IPD_PORT_QOS_288_CNT           0x00014F0000001188  NCB         
IPD_PORT_QOS_289_CNT           0x00014F0000001190  NCB         
IPD_PORT_QOS_290_CNT           0x00014F0000001198  NCB         
IPD_PORT_QOS_291_CNT           0x00014F00000011A0  NCB         
IPD_PORT_QOS_292_CNT           0x00014F00000011A8  NCB         
IPD_PORT_QOS_293_CNT           0x00014F00000011B0  NCB         
IPD_PORT_QOS_294_CNT           0x00014F00000011B8  NCB         
IPD_PORT_QOS_295_CNT           0x00014F00000011C0  NCB         
IPD_PORT_QOS_296_CNT           0x00014F00000011C8  NCB         
IPD_PORT_QOS_297_CNT           0x00014F00000011D0  NCB         
IPD_PORT_QOS_298_CNT           0x00014F00000011D8  NCB         
IPD_PORT_QOS_299_CNT           0x00014F00000011E0  NCB         
IPD_PORT_QOS_300_CNT           0x00014F00000011E8  NCB         
IPD_PORT_QOS_301_CNT           0x00014F00000011F0  NCB         
IPD_PORT_QOS_302_CNT           0x00014F00000011F8  NCB         
IPD_PORT_QOS_303_CNT           0x00014F0000001200  NCB         
IPD_PORT_QOS_304_CNT           0x00014F0000001208  NCB         
IPD_PORT_QOS_305_CNT           0x00014F0000001210  NCB         
IPD_PORT_QOS_306_CNT           0x00014F0000001218  NCB         
IPD_PORT_QOS_307_CNT           0x00014F0000001220  NCB         
IPD_PORT_QOS_308_CNT           0x00014F0000001228  NCB         
IPD_PORT_QOS_309_CNT           0x00014F0000001230  NCB         
IPD_PORT_QOS_310_CNT           0x00014F0000001238  NCB         
IPD_PORT_QOS_311_CNT           0x00014F0000001240  NCB         
IPD_PORT_QOS_312_CNT           0x00014F0000001248  NCB         
IPD_PORT_QOS_313_CNT           0x00014F0000001250  NCB         
IPD_PORT_QOS_314_CNT           0x00014F0000001258  NCB         
IPD_PORT_QOS_315_CNT           0x00014F0000001260  NCB         
IPD_PORT_QOS_316_CNT           0x00014F0000001268  NCB         
IPD_PORT_QOS_317_CNT           0x00014F0000001270  NCB         
IPD_PORT_QOS_318_CNT           0x00014F0000001278  NCB         
IPD_PORT_QOS_319_CNT           0x00014F0000001280  NCB         
IPD_PORT_QOS_320_CNT           0x00014F0000001288  NCB         
IPD_PORT_QOS_321_CNT           0x00014F0000001290  NCB         
IPD_PORT_QOS_322_CNT           0x00014F0000001298  NCB         
IPD_PORT_QOS_323_CNT           0x00014F00000012A0  NCB         
IPD_PORT_QOS_324_CNT           0x00014F00000012A8  NCB         
IPD_PORT_QOS_325_CNT           0x00014F00000012B0  NCB         
IPD_PORT_QOS_326_CNT           0x00014F00000012B8  NCB         
IPD_PORT_QOS_327_CNT           0x00014F00000012C0  NCB         
IPD_PORT_QOS_328_CNT           0x00014F00000012C8  NCB         
IPD_PORT_QOS_329_CNT           0x00014F00000012D0  NCB         
IPD_PORT_QOS_330_CNT           0x00014F00000012D8  NCB         
IPD_PORT_QOS_331_CNT           0x00014F00000012E0  NCB         
IPD_PORT_QOS_332_CNT           0x00014F00000012E8  NCB         
IPD_PORT_QOS_333_CNT           0x00014F00000012F0  NCB         
IPD_PORT_QOS_334_CNT           0x00014F00000012F8  NCB         
IPD_PORT_QOS_335_CNT           0x00014F0000001300  NCB         
IPD_PORT_QOS_336_CNT           0x00014F0000001308  NCB         
IPD_PORT_QOS_337_CNT           0x00014F0000001310  NCB         
IPD_PORT_QOS_338_CNT           0x00014F0000001318  NCB         
IPD_PORT_QOS_339_CNT           0x00014F0000001320  NCB         
IPD_PORT_QOS_340_CNT           0x00014F0000001328  NCB         
IPD_PORT_QOS_341_CNT           0x00014F0000001330  NCB         
IPD_PORT_QOS_342_CNT           0x00014F0000001338  NCB         
IPD_PORT_QOS_343_CNT           0x00014F0000001340  NCB         
IPD_PORT_QOS_344_CNT           0x00014F0000001348  NCB         
IPD_PORT_QOS_345_CNT           0x00014F0000001350  NCB         
IPD_PORT_QOS_346_CNT           0x00014F0000001358  NCB         
IPD_PORT_QOS_347_CNT           0x00014F0000001360  NCB         
IPD_PORT_QOS_348_CNT           0x00014F0000001368  NCB         
IPD_PORT_QOS_349_CNT           0x00014F0000001370  NCB         
IPD_PORT_QOS_350_CNT           0x00014F0000001378  NCB         
IPD_PORT_QOS_351_CNT           0x00014F0000001380  NCB         
IPD_PORT_QOS_INT0              0x00014F0000000808  NCB         
IPD_PORT_QOS_INT4              0x00014F0000000828  NCB         
IPD_PORT_QOS_INT5              0x00014F0000000830  NCB         
IPD_PORT_QOS_INT_ENB0          0x00014F0000000848  NCB         
IPD_PORT_QOS_INT_ENB4          0x00014F0000000868  NCB         
IPD_PORT_QOS_INT_ENB5          0x00014F0000000870  NCB         
IPD_PRC_HOLD_PTR_FIFO_CTL      0x00014F0000000348  NCB         
IPD_PRC_PORT_PTR_FIFO_CTL      0x00014F0000000350  NCB         
IPD_PTR_COUNT                  0x00014F0000000320  NCB         
IPD_PWP_PTR_FIFO_CTL           0x00014F0000000340  NCB         
IPD_QOS0_RED_MARKS             0x00014F0000000178  NCB         
IPD_QOS1_RED_MARKS             0x00014F0000000180  NCB         
IPD_QOS2_RED_MARKS             0x00014F0000000188  NCB         
IPD_QOS3_RED_MARKS             0x00014F0000000190  NCB         
IPD_QOS4_RED_MARKS             0x00014F0000000198  NCB         
IPD_QOS5_RED_MARKS             0x00014F00000001A0  NCB         
IPD_QOS6_RED_MARKS             0x00014F00000001A8  NCB         
IPD_QOS7_RED_MARKS             0x00014F00000001B0  NCB         
IPD_QUE0_FREE_PAGE_CNT         0x00014F0000000330  NCB         
IPD_RED_PORT_ENABLE            0x00014F00000002D8  NCB         
IPD_RED_PORT_ENABLE2           0x00014F00000003A8  NCB         
IPD_RED_QUE0_PARAM             0x00014F00000002E0  NCB         
IPD_RED_QUE1_PARAM             0x00014F00000002E8  NCB         
IPD_RED_QUE2_PARAM             0x00014F00000002F0  NCB         
IPD_RED_QUE3_PARAM             0x00014F00000002F8  NCB         
IPD_RED_QUE4_PARAM             0x00014F0000000300  NCB         
IPD_RED_QUE5_PARAM             0x00014F0000000308  NCB         
IPD_RED_QUE6_PARAM             0x00014F0000000310  NCB         
IPD_RED_QUE7_PARAM             0x00014F0000000318  NCB         
IPD_SUB_PORT_BP_PAGE_CNT       0x00014F0000000148  NCB         
IPD_SUB_PORT_FCS               0x00014F0000000170  NCB         
IPD_SUB_PORT_QOS_CNT           0x00014F0000000800  NCB         
IPD_WQE_FPA_QUEUE              0x00014F0000000020  NCB         
IPD_WQE_PTR_VALID              0x00014F0000000360  NCB         
KEY_BIST_REG                   0x0001180020000018  RSL         
KEY_CTL_STATUS                 0x0001180020000010  RSL         
KEY_INT_ENB                    0x0001180020000008  RSL         
KEY_INT_SUM                    0x0001180020000000  RSL         
L2C_BST                        0x00011800808007F8  RSL         
L2C_BST_MEM0                   0x0001180080C007F8  RSL         
L2C_BST_TDT0                   0x0001180080A007F0  RSL         
L2C_BST_TTG0                   0x0001180080A007F8  RSL         
L2C_COP0_MAP0                  0x0001180080940000  RSL         
L2C_COP0_MAP1                  0x0001180080940008  RSL         
L2C_COP0_MAP2                  0x0001180080940010  RSL         
L2C_COP0_MAP3                  0x0001180080940018  RSL         
L2C_COP0_MAP4                  0x0001180080940020  RSL         
L2C_COP0_MAP5                  0x0001180080940028  RSL         
L2C_COP0_MAP6                  0x0001180080940030  RSL         
L2C_COP0_MAP7                  0x0001180080940038  RSL         
L2C_COP0_MAP8                  0x0001180080940040  RSL         
L2C_COP0_MAP9                  0x0001180080940048  RSL         
L2C_COP0_MAP10                 0x0001180080940050  RSL         
L2C_COP0_MAP11                 0x0001180080940058  RSL         
L2C_COP0_MAP12                 0x0001180080940060  RSL         
L2C_COP0_MAP13                 0x0001180080940068  RSL         
L2C_COP0_MAP14                 0x0001180080940070  RSL         
L2C_COP0_MAP15                 0x0001180080940078  RSL         
L2C_COP0_MAP16                 0x0001180080940080  RSL         
L2C_COP0_MAP17                 0x0001180080940088  RSL         
L2C_COP0_MAP18                 0x0001180080940090  RSL         
L2C_COP0_MAP19                 0x0001180080940098  RSL         
L2C_COP0_MAP20                 0x00011800809400A0  RSL         
L2C_COP0_MAP21                 0x00011800809400A8  RSL         
L2C_COP0_MAP22                 0x00011800809400B0  RSL         
L2C_COP0_MAP23                 0x00011800809400B8  RSL         
L2C_COP0_MAP24                 0x00011800809400C0  RSL         
L2C_COP0_MAP25                 0x00011800809400C8  RSL         
L2C_COP0_MAP26                 0x00011800809400D0  RSL         
L2C_COP0_MAP27                 0x00011800809400D8  RSL         
L2C_COP0_MAP28                 0x00011800809400E0  RSL         
L2C_COP0_MAP29                 0x00011800809400E8  RSL         
L2C_COP0_MAP30                 0x00011800809400F0  RSL         
L2C_COP0_MAP31                 0x00011800809400F8  RSL         
L2C_COP0_MAP32                 0x0001180080940100  RSL         
L2C_COP0_MAP33                 0x0001180080940108  RSL         
L2C_COP0_MAP34                 0x0001180080940110  RSL         
L2C_COP0_MAP35                 0x0001180080940118  RSL         
L2C_COP0_MAP36                 0x0001180080940120  RSL         
L2C_COP0_MAP37                 0x0001180080940128  RSL         
L2C_COP0_MAP38                 0x0001180080940130  RSL         
L2C_COP0_MAP39                 0x0001180080940138  RSL         
L2C_COP0_MAP40                 0x0001180080940140  RSL         
L2C_COP0_MAP41                 0x0001180080940148  RSL         
L2C_COP0_MAP42                 0x0001180080940150  RSL         
L2C_COP0_MAP43                 0x0001180080940158  RSL         
L2C_COP0_MAP44                 0x0001180080940160  RSL         
L2C_COP0_MAP45                 0x0001180080940168  RSL         
L2C_COP0_MAP46                 0x0001180080940170  RSL         
L2C_COP0_MAP47                 0x0001180080940178  RSL         
L2C_COP0_MAP48                 0x0001180080940180  RSL         
L2C_COP0_MAP49                 0x0001180080940188  RSL         
L2C_COP0_MAP50                 0x0001180080940190  RSL         
L2C_COP0_MAP51                 0x0001180080940198  RSL         
L2C_COP0_MAP52                 0x00011800809401A0  RSL         
L2C_COP0_MAP53                 0x00011800809401A8  RSL         
L2C_COP0_MAP54                 0x00011800809401B0  RSL         
L2C_COP0_MAP55                 0x00011800809401B8  RSL         
L2C_COP0_MAP56                 0x00011800809401C0  RSL         
L2C_COP0_MAP57                 0x00011800809401C8  RSL         
L2C_COP0_MAP58                 0x00011800809401D0  RSL         
L2C_COP0_MAP59                 0x00011800809401D8  RSL         
L2C_COP0_MAP60                 0x00011800809401E0  RSL         
L2C_COP0_MAP61                 0x00011800809401E8  RSL         
L2C_COP0_MAP62                 0x00011800809401F0  RSL         
L2C_COP0_MAP63                 0x00011800809401F8  RSL         
L2C_COP0_MAP64                 0x0001180080940200  RSL         
L2C_COP0_MAP65                 0x0001180080940208  RSL         
L2C_COP0_MAP66                 0x0001180080940210  RSL         
L2C_COP0_MAP67                 0x0001180080940218  RSL         
L2C_COP0_MAP68                 0x0001180080940220  RSL         
L2C_COP0_MAP69                 0x0001180080940228  RSL         
L2C_COP0_MAP70                 0x0001180080940230  RSL         
L2C_COP0_MAP71                 0x0001180080940238  RSL         
L2C_COP0_MAP72                 0x0001180080940240  RSL         
L2C_COP0_MAP73                 0x0001180080940248  RSL         
L2C_COP0_MAP74                 0x0001180080940250  RSL         
L2C_COP0_MAP75                 0x0001180080940258  RSL         
L2C_COP0_MAP76                 0x0001180080940260  RSL         
L2C_COP0_MAP77                 0x0001180080940268  RSL         
L2C_COP0_MAP78                 0x0001180080940270  RSL         
L2C_COP0_MAP79                 0x0001180080940278  RSL         
L2C_COP0_MAP80                 0x0001180080940280  RSL         
L2C_COP0_MAP81                 0x0001180080940288  RSL         
L2C_COP0_MAP82                 0x0001180080940290  RSL         
L2C_COP0_MAP83                 0x0001180080940298  RSL         
L2C_COP0_MAP84                 0x00011800809402A0  RSL         
L2C_COP0_MAP85                 0x00011800809402A8  RSL         
L2C_COP0_MAP86                 0x00011800809402B0  RSL         
L2C_COP0_MAP87                 0x00011800809402B8  RSL         
L2C_COP0_MAP88                 0x00011800809402C0  RSL         
L2C_COP0_MAP89                 0x00011800809402C8  RSL         
L2C_COP0_MAP90                 0x00011800809402D0  RSL         
L2C_COP0_MAP91                 0x00011800809402D8  RSL         
L2C_COP0_MAP92                 0x00011800809402E0  RSL         
L2C_COP0_MAP93                 0x00011800809402E8  RSL         
L2C_COP0_MAP94                 0x00011800809402F0  RSL         
L2C_COP0_MAP95                 0x00011800809402F8  RSL         
L2C_COP0_MAP96                 0x0001180080940300  RSL         
L2C_COP0_MAP97                 0x0001180080940308  RSL         
L2C_COP0_MAP98                 0x0001180080940310  RSL         
L2C_COP0_MAP99                 0x0001180080940318  RSL         
L2C_COP0_MAP100                0x0001180080940320  RSL         
L2C_COP0_MAP101                0x0001180080940328  RSL         
L2C_COP0_MAP102                0x0001180080940330  RSL         
L2C_COP0_MAP103                0x0001180080940338  RSL         
L2C_COP0_MAP104                0x0001180080940340  RSL         
L2C_COP0_MAP105                0x0001180080940348  RSL         
L2C_COP0_MAP106                0x0001180080940350  RSL         
L2C_COP0_MAP107                0x0001180080940358  RSL         
L2C_COP0_MAP108                0x0001180080940360  RSL         
L2C_COP0_MAP109                0x0001180080940368  RSL         
L2C_COP0_MAP110                0x0001180080940370  RSL         
L2C_COP0_MAP111                0x0001180080940378  RSL         
L2C_COP0_MAP112                0x0001180080940380  RSL         
L2C_COP0_MAP113                0x0001180080940388  RSL         
L2C_COP0_MAP114                0x0001180080940390  RSL         
L2C_COP0_MAP115                0x0001180080940398  RSL         
L2C_COP0_MAP116                0x00011800809403A0  RSL         
L2C_COP0_MAP117                0x00011800809403A8  RSL         
L2C_COP0_MAP118                0x00011800809403B0  RSL         
L2C_COP0_MAP119                0x00011800809403B8  RSL         
L2C_COP0_MAP120                0x00011800809403C0  RSL         
L2C_COP0_MAP121                0x00011800809403C8  RSL         
L2C_COP0_MAP122                0x00011800809403D0  RSL         
L2C_COP0_MAP123                0x00011800809403D8  RSL         
L2C_COP0_MAP124                0x00011800809403E0  RSL         
L2C_COP0_MAP125                0x00011800809403E8  RSL         
L2C_COP0_MAP126                0x00011800809403F0  RSL         
L2C_COP0_MAP127                0x00011800809403F8  RSL         
L2C_COP0_MAP128                0x0001180080940400  RSL         
L2C_COP0_MAP129                0x0001180080940408  RSL         
L2C_COP0_MAP130                0x0001180080940410  RSL         
L2C_COP0_MAP131                0x0001180080940418  RSL         
L2C_COP0_MAP132                0x0001180080940420  RSL         
L2C_COP0_MAP133                0x0001180080940428  RSL         
L2C_COP0_MAP134                0x0001180080940430  RSL         
L2C_COP0_MAP135                0x0001180080940438  RSL         
L2C_COP0_MAP136                0x0001180080940440  RSL         
L2C_COP0_MAP137                0x0001180080940448  RSL         
L2C_COP0_MAP138                0x0001180080940450  RSL         
L2C_COP0_MAP139                0x0001180080940458  RSL         
L2C_COP0_MAP140                0x0001180080940460  RSL         
L2C_COP0_MAP141                0x0001180080940468  RSL         
L2C_COP0_MAP142                0x0001180080940470  RSL         
L2C_COP0_MAP143                0x0001180080940478  RSL         
L2C_COP0_MAP144                0x0001180080940480  RSL         
L2C_COP0_MAP145                0x0001180080940488  RSL         
L2C_COP0_MAP146                0x0001180080940490  RSL         
L2C_COP0_MAP147                0x0001180080940498  RSL         
L2C_COP0_MAP148                0x00011800809404A0  RSL         
L2C_COP0_MAP149                0x00011800809404A8  RSL         
L2C_COP0_MAP150                0x00011800809404B0  RSL         
L2C_COP0_MAP151                0x00011800809404B8  RSL         
L2C_COP0_MAP152                0x00011800809404C0  RSL         
L2C_COP0_MAP153                0x00011800809404C8  RSL         
L2C_COP0_MAP154                0x00011800809404D0  RSL         
L2C_COP0_MAP155                0x00011800809404D8  RSL         
L2C_COP0_MAP156                0x00011800809404E0  RSL         
L2C_COP0_MAP157                0x00011800809404E8  RSL         
L2C_COP0_MAP158                0x00011800809404F0  RSL         
L2C_COP0_MAP159                0x00011800809404F8  RSL         
L2C_COP0_MAP160                0x0001180080940500  RSL         
L2C_COP0_MAP161                0x0001180080940508  RSL         
L2C_COP0_MAP162                0x0001180080940510  RSL         
L2C_COP0_MAP163                0x0001180080940518  RSL         
L2C_COP0_MAP164                0x0001180080940520  RSL         
L2C_COP0_MAP165                0x0001180080940528  RSL         
L2C_COP0_MAP166                0x0001180080940530  RSL         
L2C_COP0_MAP167                0x0001180080940538  RSL         
L2C_COP0_MAP168                0x0001180080940540  RSL         
L2C_COP0_MAP169                0x0001180080940548  RSL         
L2C_COP0_MAP170                0x0001180080940550  RSL         
L2C_COP0_MAP171                0x0001180080940558  RSL         
L2C_COP0_MAP172                0x0001180080940560  RSL         
L2C_COP0_MAP173                0x0001180080940568  RSL         
L2C_COP0_MAP174                0x0001180080940570  RSL         
L2C_COP0_MAP175                0x0001180080940578  RSL         
L2C_COP0_MAP176                0x0001180080940580  RSL         
L2C_COP0_MAP177                0x0001180080940588  RSL         
L2C_COP0_MAP178                0x0001180080940590  RSL         
L2C_COP0_MAP179                0x0001180080940598  RSL         
L2C_COP0_MAP180                0x00011800809405A0  RSL         
L2C_COP0_MAP181                0x00011800809405A8  RSL         
L2C_COP0_MAP182                0x00011800809405B0  RSL         
L2C_COP0_MAP183                0x00011800809405B8  RSL         
L2C_COP0_MAP184                0x00011800809405C0  RSL         
L2C_COP0_MAP185                0x00011800809405C8  RSL         
L2C_COP0_MAP186                0x00011800809405D0  RSL         
L2C_COP0_MAP187                0x00011800809405D8  RSL         
L2C_COP0_MAP188                0x00011800809405E0  RSL         
L2C_COP0_MAP189                0x00011800809405E8  RSL         
L2C_COP0_MAP190                0x00011800809405F0  RSL         
L2C_COP0_MAP191                0x00011800809405F8  RSL         
L2C_COP0_MAP192                0x0001180080940600  RSL         
L2C_COP0_MAP193                0x0001180080940608  RSL         
L2C_COP0_MAP194                0x0001180080940610  RSL         
L2C_COP0_MAP195                0x0001180080940618  RSL         
L2C_COP0_MAP196                0x0001180080940620  RSL         
L2C_COP0_MAP197                0x0001180080940628  RSL         
L2C_COP0_MAP198                0x0001180080940630  RSL         
L2C_COP0_MAP199                0x0001180080940638  RSL         
L2C_COP0_MAP200                0x0001180080940640  RSL         
L2C_COP0_MAP201                0x0001180080940648  RSL         
L2C_COP0_MAP202                0x0001180080940650  RSL         
L2C_COP0_MAP203                0x0001180080940658  RSL         
L2C_COP0_MAP204                0x0001180080940660  RSL         
L2C_COP0_MAP205                0x0001180080940668  RSL         
L2C_COP0_MAP206                0x0001180080940670  RSL         
L2C_COP0_MAP207                0x0001180080940678  RSL         
L2C_COP0_MAP208                0x0001180080940680  RSL         
L2C_COP0_MAP209                0x0001180080940688  RSL         
L2C_COP0_MAP210                0x0001180080940690  RSL         
L2C_COP0_MAP211                0x0001180080940698  RSL         
L2C_COP0_MAP212                0x00011800809406A0  RSL         
L2C_COP0_MAP213                0x00011800809406A8  RSL         
L2C_COP0_MAP214                0x00011800809406B0  RSL         
L2C_COP0_MAP215                0x00011800809406B8  RSL         
L2C_COP0_MAP216                0x00011800809406C0  RSL         
L2C_COP0_MAP217                0x00011800809406C8  RSL         
L2C_COP0_MAP218                0x00011800809406D0  RSL         
L2C_COP0_MAP219                0x00011800809406D8  RSL         
L2C_COP0_MAP220                0x00011800809406E0  RSL         
L2C_COP0_MAP221                0x00011800809406E8  RSL         
L2C_COP0_MAP222                0x00011800809406F0  RSL         
L2C_COP0_MAP223                0x00011800809406F8  RSL         
L2C_COP0_MAP224                0x0001180080940700  RSL         
L2C_COP0_MAP225                0x0001180080940708  RSL         
L2C_COP0_MAP226                0x0001180080940710  RSL         
L2C_COP0_MAP227                0x0001180080940718  RSL         
L2C_COP0_MAP228                0x0001180080940720  RSL         
L2C_COP0_MAP229                0x0001180080940728  RSL         
L2C_COP0_MAP230                0x0001180080940730  RSL         
L2C_COP0_MAP231                0x0001180080940738  RSL         
L2C_COP0_MAP232                0x0001180080940740  RSL         
L2C_COP0_MAP233                0x0001180080940748  RSL         
L2C_COP0_MAP234                0x0001180080940750  RSL         
L2C_COP0_MAP235                0x0001180080940758  RSL         
L2C_COP0_MAP236                0x0001180080940760  RSL         
L2C_COP0_MAP237                0x0001180080940768  RSL         
L2C_COP0_MAP238                0x0001180080940770  RSL         
L2C_COP0_MAP239                0x0001180080940778  RSL         
L2C_COP0_MAP240                0x0001180080940780  RSL         
L2C_COP0_MAP241                0x0001180080940788  RSL         
L2C_COP0_MAP242                0x0001180080940790  RSL         
L2C_COP0_MAP243                0x0001180080940798  RSL         
L2C_COP0_MAP244                0x00011800809407A0  RSL         
L2C_COP0_MAP245                0x00011800809407A8  RSL         
L2C_COP0_MAP246                0x00011800809407B0  RSL         
L2C_COP0_MAP247                0x00011800809407B8  RSL         
L2C_COP0_MAP248                0x00011800809407C0  RSL         
L2C_COP0_MAP249                0x00011800809407C8  RSL         
L2C_COP0_MAP250                0x00011800809407D0  RSL         
L2C_COP0_MAP251                0x00011800809407D8  RSL         
L2C_COP0_MAP252                0x00011800809407E0  RSL         
L2C_COP0_MAP253                0x00011800809407E8  RSL         
L2C_COP0_MAP254                0x00011800809407F0  RSL         
L2C_COP0_MAP255                0x00011800809407F8  RSL         
L2C_COP0_MAP256                0x0001180080940800  RSL         
L2C_COP0_MAP257                0x0001180080940808  RSL         
L2C_COP0_MAP258                0x0001180080940810  RSL         
L2C_COP0_MAP259                0x0001180080940818  RSL         
L2C_COP0_MAP260                0x0001180080940820  RSL         
L2C_COP0_MAP261                0x0001180080940828  RSL         
L2C_COP0_MAP262                0x0001180080940830  RSL         
L2C_COP0_MAP263                0x0001180080940838  RSL         
L2C_COP0_MAP264                0x0001180080940840  RSL         
L2C_COP0_MAP265                0x0001180080940848  RSL         
L2C_COP0_MAP266                0x0001180080940850  RSL         
L2C_COP0_MAP267                0x0001180080940858  RSL         
L2C_COP0_MAP268                0x0001180080940860  RSL         
L2C_COP0_MAP269                0x0001180080940868  RSL         
L2C_COP0_MAP270                0x0001180080940870  RSL         
L2C_COP0_MAP271                0x0001180080940878  RSL         
L2C_COP0_MAP272                0x0001180080940880  RSL         
L2C_COP0_MAP273                0x0001180080940888  RSL         
L2C_COP0_MAP274                0x0001180080940890  RSL         
L2C_COP0_MAP275                0x0001180080940898  RSL         
L2C_COP0_MAP276                0x00011800809408A0  RSL         
L2C_COP0_MAP277                0x00011800809408A8  RSL         
L2C_COP0_MAP278                0x00011800809408B0  RSL         
L2C_COP0_MAP279                0x00011800809408B8  RSL         
L2C_COP0_MAP280                0x00011800809408C0  RSL         
L2C_COP0_MAP281                0x00011800809408C8  RSL         
L2C_COP0_MAP282                0x00011800809408D0  RSL         
L2C_COP0_MAP283                0x00011800809408D8  RSL         
L2C_COP0_MAP284                0x00011800809408E0  RSL         
L2C_COP0_MAP285                0x00011800809408E8  RSL         
L2C_COP0_MAP286                0x00011800809408F0  RSL         
L2C_COP0_MAP287                0x00011800809408F8  RSL         
L2C_COP0_MAP288                0x0001180080940900  RSL         
L2C_COP0_MAP289                0x0001180080940908  RSL         
L2C_COP0_MAP290                0x0001180080940910  RSL         
L2C_COP0_MAP291                0x0001180080940918  RSL         
L2C_COP0_MAP292                0x0001180080940920  RSL         
L2C_COP0_MAP293                0x0001180080940928  RSL         
L2C_COP0_MAP294                0x0001180080940930  RSL         
L2C_COP0_MAP295                0x0001180080940938  RSL         
L2C_COP0_MAP296                0x0001180080940940  RSL         
L2C_COP0_MAP297                0x0001180080940948  RSL         
L2C_COP0_MAP298                0x0001180080940950  RSL         
L2C_COP0_MAP299                0x0001180080940958  RSL         
L2C_COP0_MAP300                0x0001180080940960  RSL         
L2C_COP0_MAP301                0x0001180080940968  RSL         
L2C_COP0_MAP302                0x0001180080940970  RSL         
L2C_COP0_MAP303                0x0001180080940978  RSL         
L2C_COP0_MAP304                0x0001180080940980  RSL         
L2C_COP0_MAP305                0x0001180080940988  RSL         
L2C_COP0_MAP306                0x0001180080940990  RSL         
L2C_COP0_MAP307                0x0001180080940998  RSL         
L2C_COP0_MAP308                0x00011800809409A0  RSL         
L2C_COP0_MAP309                0x00011800809409A8  RSL         
L2C_COP0_MAP310                0x00011800809409B0  RSL         
L2C_COP0_MAP311                0x00011800809409B8  RSL         
L2C_COP0_MAP312                0x00011800809409C0  RSL         
L2C_COP0_MAP313                0x00011800809409C8  RSL         
L2C_COP0_MAP314                0x00011800809409D0  RSL         
L2C_COP0_MAP315                0x00011800809409D8  RSL         
L2C_COP0_MAP316                0x00011800809409E0  RSL         
L2C_COP0_MAP317                0x00011800809409E8  RSL         
L2C_COP0_MAP318                0x00011800809409F0  RSL         
L2C_COP0_MAP319                0x00011800809409F8  RSL         
L2C_COP0_MAP320                0x0001180080940A00  RSL         
L2C_COP0_MAP321                0x0001180080940A08  RSL         
L2C_COP0_MAP322                0x0001180080940A10  RSL         
L2C_COP0_MAP323                0x0001180080940A18  RSL         
L2C_COP0_MAP324                0x0001180080940A20  RSL         
L2C_COP0_MAP325                0x0001180080940A28  RSL         
L2C_COP0_MAP326                0x0001180080940A30  RSL         
L2C_COP0_MAP327                0x0001180080940A38  RSL         
L2C_COP0_MAP328                0x0001180080940A40  RSL         
L2C_COP0_MAP329                0x0001180080940A48  RSL         
L2C_COP0_MAP330                0x0001180080940A50  RSL         
L2C_COP0_MAP331                0x0001180080940A58  RSL         
L2C_COP0_MAP332                0x0001180080940A60  RSL         
L2C_COP0_MAP333                0x0001180080940A68  RSL         
L2C_COP0_MAP334                0x0001180080940A70  RSL         
L2C_COP0_MAP335                0x0001180080940A78  RSL         
L2C_COP0_MAP336                0x0001180080940A80  RSL         
L2C_COP0_MAP337                0x0001180080940A88  RSL         
L2C_COP0_MAP338                0x0001180080940A90  RSL         
L2C_COP0_MAP339                0x0001180080940A98  RSL         
L2C_COP0_MAP340                0x0001180080940AA0  RSL         
L2C_COP0_MAP341                0x0001180080940AA8  RSL         
L2C_COP0_MAP342                0x0001180080940AB0  RSL         
L2C_COP0_MAP343                0x0001180080940AB8  RSL         
L2C_COP0_MAP344                0x0001180080940AC0  RSL         
L2C_COP0_MAP345                0x0001180080940AC8  RSL         
L2C_COP0_MAP346                0x0001180080940AD0  RSL         
L2C_COP0_MAP347                0x0001180080940AD8  RSL         
L2C_COP0_MAP348                0x0001180080940AE0  RSL         
L2C_COP0_MAP349                0x0001180080940AE8  RSL         
L2C_COP0_MAP350                0x0001180080940AF0  RSL         
L2C_COP0_MAP351                0x0001180080940AF8  RSL         
L2C_COP0_MAP352                0x0001180080940B00  RSL         
L2C_COP0_MAP353                0x0001180080940B08  RSL         
L2C_COP0_MAP354                0x0001180080940B10  RSL         
L2C_COP0_MAP355                0x0001180080940B18  RSL         
L2C_COP0_MAP356                0x0001180080940B20  RSL         
L2C_COP0_MAP357                0x0001180080940B28  RSL         
L2C_COP0_MAP358                0x0001180080940B30  RSL         
L2C_COP0_MAP359                0x0001180080940B38  RSL         
L2C_COP0_MAP360                0x0001180080940B40  RSL         
L2C_COP0_MAP361                0x0001180080940B48  RSL         
L2C_COP0_MAP362                0x0001180080940B50  RSL         
L2C_COP0_MAP363                0x0001180080940B58  RSL         
L2C_COP0_MAP364                0x0001180080940B60  RSL         
L2C_COP0_MAP365                0x0001180080940B68  RSL         
L2C_COP0_MAP366                0x0001180080940B70  RSL         
L2C_COP0_MAP367                0x0001180080940B78  RSL         
L2C_COP0_MAP368                0x0001180080940B80  RSL         
L2C_COP0_MAP369                0x0001180080940B88  RSL         
L2C_COP0_MAP370                0x0001180080940B90  RSL         
L2C_COP0_MAP371                0x0001180080940B98  RSL         
L2C_COP0_MAP372                0x0001180080940BA0  RSL         
L2C_COP0_MAP373                0x0001180080940BA8  RSL         
L2C_COP0_MAP374                0x0001180080940BB0  RSL         
L2C_COP0_MAP375                0x0001180080940BB8  RSL         
L2C_COP0_MAP376                0x0001180080940BC0  RSL         
L2C_COP0_MAP377                0x0001180080940BC8  RSL         
L2C_COP0_MAP378                0x0001180080940BD0  RSL         
L2C_COP0_MAP379                0x0001180080940BD8  RSL         
L2C_COP0_MAP380                0x0001180080940BE0  RSL         
L2C_COP0_MAP381                0x0001180080940BE8  RSL         
L2C_COP0_MAP382                0x0001180080940BF0  RSL         
L2C_COP0_MAP383                0x0001180080940BF8  RSL         
L2C_COP0_MAP384                0x0001180080940C00  RSL         
L2C_COP0_MAP385                0x0001180080940C08  RSL         
L2C_COP0_MAP386                0x0001180080940C10  RSL         
L2C_COP0_MAP387                0x0001180080940C18  RSL         
L2C_COP0_MAP388                0x0001180080940C20  RSL         
L2C_COP0_MAP389                0x0001180080940C28  RSL         
L2C_COP0_MAP390                0x0001180080940C30  RSL         
L2C_COP0_MAP391                0x0001180080940C38  RSL         
L2C_COP0_MAP392                0x0001180080940C40  RSL         
L2C_COP0_MAP393                0x0001180080940C48  RSL         
L2C_COP0_MAP394                0x0001180080940C50  RSL         
L2C_COP0_MAP395                0x0001180080940C58  RSL         
L2C_COP0_MAP396                0x0001180080940C60  RSL         
L2C_COP0_MAP397                0x0001180080940C68  RSL         
L2C_COP0_MAP398                0x0001180080940C70  RSL         
L2C_COP0_MAP399                0x0001180080940C78  RSL         
L2C_COP0_MAP400                0x0001180080940C80  RSL         
L2C_COP0_MAP401                0x0001180080940C88  RSL         
L2C_COP0_MAP402                0x0001180080940C90  RSL         
L2C_COP0_MAP403                0x0001180080940C98  RSL         
L2C_COP0_MAP404                0x0001180080940CA0  RSL         
L2C_COP0_MAP405                0x0001180080940CA8  RSL         
L2C_COP0_MAP406                0x0001180080940CB0  RSL         
L2C_COP0_MAP407                0x0001180080940CB8  RSL         
L2C_COP0_MAP408                0x0001180080940CC0  RSL         
L2C_COP0_MAP409                0x0001180080940CC8  RSL         
L2C_COP0_MAP410                0x0001180080940CD0  RSL         
L2C_COP0_MAP411                0x0001180080940CD8  RSL         
L2C_COP0_MAP412                0x0001180080940CE0  RSL         
L2C_COP0_MAP413                0x0001180080940CE8  RSL         
L2C_COP0_MAP414                0x0001180080940CF0  RSL         
L2C_COP0_MAP415                0x0001180080940CF8  RSL         
L2C_COP0_MAP416                0x0001180080940D00  RSL         
L2C_COP0_MAP417                0x0001180080940D08  RSL         
L2C_COP0_MAP418                0x0001180080940D10  RSL         
L2C_COP0_MAP419                0x0001180080940D18  RSL         
L2C_COP0_MAP420                0x0001180080940D20  RSL         
L2C_COP0_MAP421                0x0001180080940D28  RSL         
L2C_COP0_MAP422                0x0001180080940D30  RSL         
L2C_COP0_MAP423                0x0001180080940D38  RSL         
L2C_COP0_MAP424                0x0001180080940D40  RSL         
L2C_COP0_MAP425                0x0001180080940D48  RSL         
L2C_COP0_MAP426                0x0001180080940D50  RSL         
L2C_COP0_MAP427                0x0001180080940D58  RSL         
L2C_COP0_MAP428                0x0001180080940D60  RSL         
L2C_COP0_MAP429                0x0001180080940D68  RSL         
L2C_COP0_MAP430                0x0001180080940D70  RSL         
L2C_COP0_MAP431                0x0001180080940D78  RSL         
L2C_COP0_MAP432                0x0001180080940D80  RSL         
L2C_COP0_MAP433                0x0001180080940D88  RSL         
L2C_COP0_MAP434                0x0001180080940D90  RSL         
L2C_COP0_MAP435                0x0001180080940D98  RSL         
L2C_COP0_MAP436                0x0001180080940DA0  RSL         
L2C_COP0_MAP437                0x0001180080940DA8  RSL         
L2C_COP0_MAP438                0x0001180080940DB0  RSL         
L2C_COP0_MAP439                0x0001180080940DB8  RSL         
L2C_COP0_MAP440                0x0001180080940DC0  RSL         
L2C_COP0_MAP441                0x0001180080940DC8  RSL         
L2C_COP0_MAP442                0x0001180080940DD0  RSL         
L2C_COP0_MAP443                0x0001180080940DD8  RSL         
L2C_COP0_MAP444                0x0001180080940DE0  RSL         
L2C_COP0_MAP445                0x0001180080940DE8  RSL         
L2C_COP0_MAP446                0x0001180080940DF0  RSL         
L2C_COP0_MAP447                0x0001180080940DF8  RSL         
L2C_COP0_MAP448                0x0001180080940E00  RSL         
L2C_COP0_MAP449                0x0001180080940E08  RSL         
L2C_COP0_MAP450                0x0001180080940E10  RSL         
L2C_COP0_MAP451                0x0001180080940E18  RSL         
L2C_COP0_MAP452                0x0001180080940E20  RSL         
L2C_COP0_MAP453                0x0001180080940E28  RSL         
L2C_COP0_MAP454                0x0001180080940E30  RSL         
L2C_COP0_MAP455                0x0001180080940E38  RSL         
L2C_COP0_MAP456                0x0001180080940E40  RSL         
L2C_COP0_MAP457                0x0001180080940E48  RSL         
L2C_COP0_MAP458                0x0001180080940E50  RSL         
L2C_COP0_MAP459                0x0001180080940E58  RSL         
L2C_COP0_MAP460                0x0001180080940E60  RSL         
L2C_COP0_MAP461                0x0001180080940E68  RSL         
L2C_COP0_MAP462                0x0001180080940E70  RSL         
L2C_COP0_MAP463                0x0001180080940E78  RSL         
L2C_COP0_MAP464                0x0001180080940E80  RSL         
L2C_COP0_MAP465                0x0001180080940E88  RSL         
L2C_COP0_MAP466                0x0001180080940E90  RSL         
L2C_COP0_MAP467                0x0001180080940E98  RSL         
L2C_COP0_MAP468                0x0001180080940EA0  RSL         
L2C_COP0_MAP469                0x0001180080940EA8  RSL         
L2C_COP0_MAP470                0x0001180080940EB0  RSL         
L2C_COP0_MAP471                0x0001180080940EB8  RSL         
L2C_COP0_MAP472                0x0001180080940EC0  RSL         
L2C_COP0_MAP473                0x0001180080940EC8  RSL         
L2C_COP0_MAP474                0x0001180080940ED0  RSL         
L2C_COP0_MAP475                0x0001180080940ED8  RSL         
L2C_COP0_MAP476                0x0001180080940EE0  RSL         
L2C_COP0_MAP477                0x0001180080940EE8  RSL         
L2C_COP0_MAP478                0x0001180080940EF0  RSL         
L2C_COP0_MAP479                0x0001180080940EF8  RSL         
L2C_COP0_MAP480                0x0001180080940F00  RSL         
L2C_COP0_MAP481                0x0001180080940F08  RSL         
L2C_COP0_MAP482                0x0001180080940F10  RSL         
L2C_COP0_MAP483                0x0001180080940F18  RSL         
L2C_COP0_MAP484                0x0001180080940F20  RSL         
L2C_COP0_MAP485                0x0001180080940F28  RSL         
L2C_COP0_MAP486                0x0001180080940F30  RSL         
L2C_COP0_MAP487                0x0001180080940F38  RSL         
L2C_COP0_MAP488                0x0001180080940F40  RSL         
L2C_COP0_MAP489                0x0001180080940F48  RSL         
L2C_COP0_MAP490                0x0001180080940F50  RSL         
L2C_COP0_MAP491                0x0001180080940F58  RSL         
L2C_COP0_MAP492                0x0001180080940F60  RSL         
L2C_COP0_MAP493                0x0001180080940F68  RSL         
L2C_COP0_MAP494                0x0001180080940F70  RSL         
L2C_COP0_MAP495                0x0001180080940F78  RSL         
L2C_COP0_MAP496                0x0001180080940F80  RSL         
L2C_COP0_MAP497                0x0001180080940F88  RSL         
L2C_COP0_MAP498                0x0001180080940F90  RSL         
L2C_COP0_MAP499                0x0001180080940F98  RSL         
L2C_COP0_MAP500                0x0001180080940FA0  RSL         
L2C_COP0_MAP501                0x0001180080940FA8  RSL         
L2C_COP0_MAP502                0x0001180080940FB0  RSL         
L2C_COP0_MAP503                0x0001180080940FB8  RSL         
L2C_COP0_MAP504                0x0001180080940FC0  RSL         
L2C_COP0_MAP505                0x0001180080940FC8  RSL         
L2C_COP0_MAP506                0x0001180080940FD0  RSL         
L2C_COP0_MAP507                0x0001180080940FD8  RSL         
L2C_COP0_MAP508                0x0001180080940FE0  RSL         
L2C_COP0_MAP509                0x0001180080940FE8  RSL         
L2C_COP0_MAP510                0x0001180080940FF0  RSL         
L2C_COP0_MAP511                0x0001180080940FF8  RSL         
L2C_COP0_MAP512                0x0001180080941000  RSL         
L2C_COP0_MAP513                0x0001180080941008  RSL         
L2C_COP0_MAP514                0x0001180080941010  RSL         
L2C_COP0_MAP515                0x0001180080941018  RSL         
L2C_COP0_MAP516                0x0001180080941020  RSL         
L2C_COP0_MAP517                0x0001180080941028  RSL         
L2C_COP0_MAP518                0x0001180080941030  RSL         
L2C_COP0_MAP519                0x0001180080941038  RSL         
L2C_COP0_MAP520                0x0001180080941040  RSL         
L2C_COP0_MAP521                0x0001180080941048  RSL         
L2C_COP0_MAP522                0x0001180080941050  RSL         
L2C_COP0_MAP523                0x0001180080941058  RSL         
L2C_COP0_MAP524                0x0001180080941060  RSL         
L2C_COP0_MAP525                0x0001180080941068  RSL         
L2C_COP0_MAP526                0x0001180080941070  RSL         
L2C_COP0_MAP527                0x0001180080941078  RSL         
L2C_COP0_MAP528                0x0001180080941080  RSL         
L2C_COP0_MAP529                0x0001180080941088  RSL         
L2C_COP0_MAP530                0x0001180080941090  RSL         
L2C_COP0_MAP531                0x0001180080941098  RSL         
L2C_COP0_MAP532                0x00011800809410A0  RSL         
L2C_COP0_MAP533                0x00011800809410A8  RSL         
L2C_COP0_MAP534                0x00011800809410B0  RSL         
L2C_COP0_MAP535                0x00011800809410B8  RSL         
L2C_COP0_MAP536                0x00011800809410C0  RSL         
L2C_COP0_MAP537                0x00011800809410C8  RSL         
L2C_COP0_MAP538                0x00011800809410D0  RSL         
L2C_COP0_MAP539                0x00011800809410D8  RSL         
L2C_COP0_MAP540                0x00011800809410E0  RSL         
L2C_COP0_MAP541                0x00011800809410E8  RSL         
L2C_COP0_MAP542                0x00011800809410F0  RSL         
L2C_COP0_MAP543                0x00011800809410F8  RSL         
L2C_COP0_MAP544                0x0001180080941100  RSL         
L2C_COP0_MAP545                0x0001180080941108  RSL         
L2C_COP0_MAP546                0x0001180080941110  RSL         
L2C_COP0_MAP547                0x0001180080941118  RSL         
L2C_COP0_MAP548                0x0001180080941120  RSL         
L2C_COP0_MAP549                0x0001180080941128  RSL         
L2C_COP0_MAP550                0x0001180080941130  RSL         
L2C_COP0_MAP551                0x0001180080941138  RSL         
L2C_COP0_MAP552                0x0001180080941140  RSL         
L2C_COP0_MAP553                0x0001180080941148  RSL         
L2C_COP0_MAP554                0x0001180080941150  RSL         
L2C_COP0_MAP555                0x0001180080941158  RSL         
L2C_COP0_MAP556                0x0001180080941160  RSL         
L2C_COP0_MAP557                0x0001180080941168  RSL         
L2C_COP0_MAP558                0x0001180080941170  RSL         
L2C_COP0_MAP559                0x0001180080941178  RSL         
L2C_COP0_MAP560                0x0001180080941180  RSL         
L2C_COP0_MAP561                0x0001180080941188  RSL         
L2C_COP0_MAP562                0x0001180080941190  RSL         
L2C_COP0_MAP563                0x0001180080941198  RSL         
L2C_COP0_MAP564                0x00011800809411A0  RSL         
L2C_COP0_MAP565                0x00011800809411A8  RSL         
L2C_COP0_MAP566                0x00011800809411B0  RSL         
L2C_COP0_MAP567                0x00011800809411B8  RSL         
L2C_COP0_MAP568                0x00011800809411C0  RSL         
L2C_COP0_MAP569                0x00011800809411C8  RSL         
L2C_COP0_MAP570                0x00011800809411D0  RSL         
L2C_COP0_MAP571                0x00011800809411D8  RSL         
L2C_COP0_MAP572                0x00011800809411E0  RSL         
L2C_COP0_MAP573                0x00011800809411E8  RSL         
L2C_COP0_MAP574                0x00011800809411F0  RSL         
L2C_COP0_MAP575                0x00011800809411F8  RSL         
L2C_COP0_MAP576                0x0001180080941200  RSL         
L2C_COP0_MAP577                0x0001180080941208  RSL         
L2C_COP0_MAP578                0x0001180080941210  RSL         
L2C_COP0_MAP579                0x0001180080941218  RSL         
L2C_COP0_MAP580                0x0001180080941220  RSL         
L2C_COP0_MAP581                0x0001180080941228  RSL         
L2C_COP0_MAP582                0x0001180080941230  RSL         
L2C_COP0_MAP583                0x0001180080941238  RSL         
L2C_COP0_MAP584                0x0001180080941240  RSL         
L2C_COP0_MAP585                0x0001180080941248  RSL         
L2C_COP0_MAP586                0x0001180080941250  RSL         
L2C_COP0_MAP587                0x0001180080941258  RSL         
L2C_COP0_MAP588                0x0001180080941260  RSL         
L2C_COP0_MAP589                0x0001180080941268  RSL         
L2C_COP0_MAP590                0x0001180080941270  RSL         
L2C_COP0_MAP591                0x0001180080941278  RSL         
L2C_COP0_MAP592                0x0001180080941280  RSL         
L2C_COP0_MAP593                0x0001180080941288  RSL         
L2C_COP0_MAP594                0x0001180080941290  RSL         
L2C_COP0_MAP595                0x0001180080941298  RSL         
L2C_COP0_MAP596                0x00011800809412A0  RSL         
L2C_COP0_MAP597                0x00011800809412A8  RSL         
L2C_COP0_MAP598                0x00011800809412B0  RSL         
L2C_COP0_MAP599                0x00011800809412B8  RSL         
L2C_COP0_MAP600                0x00011800809412C0  RSL         
L2C_COP0_MAP601                0x00011800809412C8  RSL         
L2C_COP0_MAP602                0x00011800809412D0  RSL         
L2C_COP0_MAP603                0x00011800809412D8  RSL         
L2C_COP0_MAP604                0x00011800809412E0  RSL         
L2C_COP0_MAP605                0x00011800809412E8  RSL         
L2C_COP0_MAP606                0x00011800809412F0  RSL         
L2C_COP0_MAP607                0x00011800809412F8  RSL         
L2C_COP0_MAP608                0x0001180080941300  RSL         
L2C_COP0_MAP609                0x0001180080941308  RSL         
L2C_COP0_MAP610                0x0001180080941310  RSL         
L2C_COP0_MAP611                0x0001180080941318  RSL         
L2C_COP0_MAP612                0x0001180080941320  RSL         
L2C_COP0_MAP613                0x0001180080941328  RSL         
L2C_COP0_MAP614                0x0001180080941330  RSL         
L2C_COP0_MAP615                0x0001180080941338  RSL         
L2C_COP0_MAP616                0x0001180080941340  RSL         
L2C_COP0_MAP617                0x0001180080941348  RSL         
L2C_COP0_MAP618                0x0001180080941350  RSL         
L2C_COP0_MAP619                0x0001180080941358  RSL         
L2C_COP0_MAP620                0x0001180080941360  RSL         
L2C_COP0_MAP621                0x0001180080941368  RSL         
L2C_COP0_MAP622                0x0001180080941370  RSL         
L2C_COP0_MAP623                0x0001180080941378  RSL         
L2C_COP0_MAP624                0x0001180080941380  RSL         
L2C_COP0_MAP625                0x0001180080941388  RSL         
L2C_COP0_MAP626                0x0001180080941390  RSL         
L2C_COP0_MAP627                0x0001180080941398  RSL         
L2C_COP0_MAP628                0x00011800809413A0  RSL         
L2C_COP0_MAP629                0x00011800809413A8  RSL         
L2C_COP0_MAP630                0x00011800809413B0  RSL         
L2C_COP0_MAP631                0x00011800809413B8  RSL         
L2C_COP0_MAP632                0x00011800809413C0  RSL         
L2C_COP0_MAP633                0x00011800809413C8  RSL         
L2C_COP0_MAP634                0x00011800809413D0  RSL         
L2C_COP0_MAP635                0x00011800809413D8  RSL         
L2C_COP0_MAP636                0x00011800809413E0  RSL         
L2C_COP0_MAP637                0x00011800809413E8  RSL         
L2C_COP0_MAP638                0x00011800809413F0  RSL         
L2C_COP0_MAP639                0x00011800809413F8  RSL         
L2C_COP0_MAP640                0x0001180080941400  RSL         
L2C_COP0_MAP641                0x0001180080941408  RSL         
L2C_COP0_MAP642                0x0001180080941410  RSL         
L2C_COP0_MAP643                0x0001180080941418  RSL         
L2C_COP0_MAP644                0x0001180080941420  RSL         
L2C_COP0_MAP645                0x0001180080941428  RSL         
L2C_COP0_MAP646                0x0001180080941430  RSL         
L2C_COP0_MAP647                0x0001180080941438  RSL         
L2C_COP0_MAP648                0x0001180080941440  RSL         
L2C_COP0_MAP649                0x0001180080941448  RSL         
L2C_COP0_MAP650                0x0001180080941450  RSL         
L2C_COP0_MAP651                0x0001180080941458  RSL         
L2C_COP0_MAP652                0x0001180080941460  RSL         
L2C_COP0_MAP653                0x0001180080941468  RSL         
L2C_COP0_MAP654                0x0001180080941470  RSL         
L2C_COP0_MAP655                0x0001180080941478  RSL         
L2C_COP0_MAP656                0x0001180080941480  RSL         
L2C_COP0_MAP657                0x0001180080941488  RSL         
L2C_COP0_MAP658                0x0001180080941490  RSL         
L2C_COP0_MAP659                0x0001180080941498  RSL         
L2C_COP0_MAP660                0x00011800809414A0  RSL         
L2C_COP0_MAP661                0x00011800809414A8  RSL         
L2C_COP0_MAP662                0x00011800809414B0  RSL         
L2C_COP0_MAP663                0x00011800809414B8  RSL         
L2C_COP0_MAP664                0x00011800809414C0  RSL         
L2C_COP0_MAP665                0x00011800809414C8  RSL         
L2C_COP0_MAP666                0x00011800809414D0  RSL         
L2C_COP0_MAP667                0x00011800809414D8  RSL         
L2C_COP0_MAP668                0x00011800809414E0  RSL         
L2C_COP0_MAP669                0x00011800809414E8  RSL         
L2C_COP0_MAP670                0x00011800809414F0  RSL         
L2C_COP0_MAP671                0x00011800809414F8  RSL         
L2C_COP0_MAP672                0x0001180080941500  RSL         
L2C_COP0_MAP673                0x0001180080941508  RSL         
L2C_COP0_MAP674                0x0001180080941510  RSL         
L2C_COP0_MAP675                0x0001180080941518  RSL         
L2C_COP0_MAP676                0x0001180080941520  RSL         
L2C_COP0_MAP677                0x0001180080941528  RSL         
L2C_COP0_MAP678                0x0001180080941530  RSL         
L2C_COP0_MAP679                0x0001180080941538  RSL         
L2C_COP0_MAP680                0x0001180080941540  RSL         
L2C_COP0_MAP681                0x0001180080941548  RSL         
L2C_COP0_MAP682                0x0001180080941550  RSL         
L2C_COP0_MAP683                0x0001180080941558  RSL         
L2C_COP0_MAP684                0x0001180080941560  RSL         
L2C_COP0_MAP685                0x0001180080941568  RSL         
L2C_COP0_MAP686                0x0001180080941570  RSL         
L2C_COP0_MAP687                0x0001180080941578  RSL         
L2C_COP0_MAP688                0x0001180080941580  RSL         
L2C_COP0_MAP689                0x0001180080941588  RSL         
L2C_COP0_MAP690                0x0001180080941590  RSL         
L2C_COP0_MAP691                0x0001180080941598  RSL         
L2C_COP0_MAP692                0x00011800809415A0  RSL         
L2C_COP0_MAP693                0x00011800809415A8  RSL         
L2C_COP0_MAP694                0x00011800809415B0  RSL         
L2C_COP0_MAP695                0x00011800809415B8  RSL         
L2C_COP0_MAP696                0x00011800809415C0  RSL         
L2C_COP0_MAP697                0x00011800809415C8  RSL         
L2C_COP0_MAP698                0x00011800809415D0  RSL         
L2C_COP0_MAP699                0x00011800809415D8  RSL         
L2C_COP0_MAP700                0x00011800809415E0  RSL         
L2C_COP0_MAP701                0x00011800809415E8  RSL         
L2C_COP0_MAP702                0x00011800809415F0  RSL         
L2C_COP0_MAP703                0x00011800809415F8  RSL         
L2C_COP0_MAP704                0x0001180080941600  RSL         
L2C_COP0_MAP705                0x0001180080941608  RSL         
L2C_COP0_MAP706                0x0001180080941610  RSL         
L2C_COP0_MAP707                0x0001180080941618  RSL         
L2C_COP0_MAP708                0x0001180080941620  RSL         
L2C_COP0_MAP709                0x0001180080941628  RSL         
L2C_COP0_MAP710                0x0001180080941630  RSL         
L2C_COP0_MAP711                0x0001180080941638  RSL         
L2C_COP0_MAP712                0x0001180080941640  RSL         
L2C_COP0_MAP713                0x0001180080941648  RSL         
L2C_COP0_MAP714                0x0001180080941650  RSL         
L2C_COP0_MAP715                0x0001180080941658  RSL         
L2C_COP0_MAP716                0x0001180080941660  RSL         
L2C_COP0_MAP717                0x0001180080941668  RSL         
L2C_COP0_MAP718                0x0001180080941670  RSL         
L2C_COP0_MAP719                0x0001180080941678  RSL         
L2C_COP0_MAP720                0x0001180080941680  RSL         
L2C_COP0_MAP721                0x0001180080941688  RSL         
L2C_COP0_MAP722                0x0001180080941690  RSL         
L2C_COP0_MAP723                0x0001180080941698  RSL         
L2C_COP0_MAP724                0x00011800809416A0  RSL         
L2C_COP0_MAP725                0x00011800809416A8  RSL         
L2C_COP0_MAP726                0x00011800809416B0  RSL         
L2C_COP0_MAP727                0x00011800809416B8  RSL         
L2C_COP0_MAP728                0x00011800809416C0  RSL         
L2C_COP0_MAP729                0x00011800809416C8  RSL         
L2C_COP0_MAP730                0x00011800809416D0  RSL         
L2C_COP0_MAP731                0x00011800809416D8  RSL         
L2C_COP0_MAP732                0x00011800809416E0  RSL         
L2C_COP0_MAP733                0x00011800809416E8  RSL         
L2C_COP0_MAP734                0x00011800809416F0  RSL         
L2C_COP0_MAP735                0x00011800809416F8  RSL         
L2C_COP0_MAP736                0x0001180080941700  RSL         
L2C_COP0_MAP737                0x0001180080941708  RSL         
L2C_COP0_MAP738                0x0001180080941710  RSL         
L2C_COP0_MAP739                0x0001180080941718  RSL         
L2C_COP0_MAP740                0x0001180080941720  RSL         
L2C_COP0_MAP741                0x0001180080941728  RSL         
L2C_COP0_MAP742                0x0001180080941730  RSL         
L2C_COP0_MAP743                0x0001180080941738  RSL         
L2C_COP0_MAP744                0x0001180080941740  RSL         
L2C_COP0_MAP745                0x0001180080941748  RSL         
L2C_COP0_MAP746                0x0001180080941750  RSL         
L2C_COP0_MAP747                0x0001180080941758  RSL         
L2C_COP0_MAP748                0x0001180080941760  RSL         
L2C_COP0_MAP749                0x0001180080941768  RSL         
L2C_COP0_MAP750                0x0001180080941770  RSL         
L2C_COP0_MAP751                0x0001180080941778  RSL         
L2C_COP0_MAP752                0x0001180080941780  RSL         
L2C_COP0_MAP753                0x0001180080941788  RSL         
L2C_COP0_MAP754                0x0001180080941790  RSL         
L2C_COP0_MAP755                0x0001180080941798  RSL         
L2C_COP0_MAP756                0x00011800809417A0  RSL         
L2C_COP0_MAP757                0x00011800809417A8  RSL         
L2C_COP0_MAP758                0x00011800809417B0  RSL         
L2C_COP0_MAP759                0x00011800809417B8  RSL         
L2C_COP0_MAP760                0x00011800809417C0  RSL         
L2C_COP0_MAP761                0x00011800809417C8  RSL         
L2C_COP0_MAP762                0x00011800809417D0  RSL         
L2C_COP0_MAP763                0x00011800809417D8  RSL         
L2C_COP0_MAP764                0x00011800809417E0  RSL         
L2C_COP0_MAP765                0x00011800809417E8  RSL         
L2C_COP0_MAP766                0x00011800809417F0  RSL         
L2C_COP0_MAP767                0x00011800809417F8  RSL         
L2C_COP0_MAP768                0x0001180080941800  RSL         
L2C_COP0_MAP769                0x0001180080941808  RSL         
L2C_COP0_MAP770                0x0001180080941810  RSL         
L2C_COP0_MAP771                0x0001180080941818  RSL         
L2C_COP0_MAP772                0x0001180080941820  RSL         
L2C_COP0_MAP773                0x0001180080941828  RSL         
L2C_COP0_MAP774                0x0001180080941830  RSL         
L2C_COP0_MAP775                0x0001180080941838  RSL         
L2C_COP0_MAP776                0x0001180080941840  RSL         
L2C_COP0_MAP777                0x0001180080941848  RSL         
L2C_COP0_MAP778                0x0001180080941850  RSL         
L2C_COP0_MAP779                0x0001180080941858  RSL         
L2C_COP0_MAP780                0x0001180080941860  RSL         
L2C_COP0_MAP781                0x0001180080941868  RSL         
L2C_COP0_MAP782                0x0001180080941870  RSL         
L2C_COP0_MAP783                0x0001180080941878  RSL         
L2C_COP0_MAP784                0x0001180080941880  RSL         
L2C_COP0_MAP785                0x0001180080941888  RSL         
L2C_COP0_MAP786                0x0001180080941890  RSL         
L2C_COP0_MAP787                0x0001180080941898  RSL         
L2C_COP0_MAP788                0x00011800809418A0  RSL         
L2C_COP0_MAP789                0x00011800809418A8  RSL         
L2C_COP0_MAP790                0x00011800809418B0  RSL         
L2C_COP0_MAP791                0x00011800809418B8  RSL         
L2C_COP0_MAP792                0x00011800809418C0  RSL         
L2C_COP0_MAP793                0x00011800809418C8  RSL         
L2C_COP0_MAP794                0x00011800809418D0  RSL         
L2C_COP0_MAP795                0x00011800809418D8  RSL         
L2C_COP0_MAP796                0x00011800809418E0  RSL         
L2C_COP0_MAP797                0x00011800809418E8  RSL         
L2C_COP0_MAP798                0x00011800809418F0  RSL         
L2C_COP0_MAP799                0x00011800809418F8  RSL         
L2C_COP0_MAP800                0x0001180080941900  RSL         
L2C_COP0_MAP801                0x0001180080941908  RSL         
L2C_COP0_MAP802                0x0001180080941910  RSL         
L2C_COP0_MAP803                0x0001180080941918  RSL         
L2C_COP0_MAP804                0x0001180080941920  RSL         
L2C_COP0_MAP805                0x0001180080941928  RSL         
L2C_COP0_MAP806                0x0001180080941930  RSL         
L2C_COP0_MAP807                0x0001180080941938  RSL         
L2C_COP0_MAP808                0x0001180080941940  RSL         
L2C_COP0_MAP809                0x0001180080941948  RSL         
L2C_COP0_MAP810                0x0001180080941950  RSL         
L2C_COP0_MAP811                0x0001180080941958  RSL         
L2C_COP0_MAP812                0x0001180080941960  RSL         
L2C_COP0_MAP813                0x0001180080941968  RSL         
L2C_COP0_MAP814                0x0001180080941970  RSL         
L2C_COP0_MAP815                0x0001180080941978  RSL         
L2C_COP0_MAP816                0x0001180080941980  RSL         
L2C_COP0_MAP817                0x0001180080941988  RSL         
L2C_COP0_MAP818                0x0001180080941990  RSL         
L2C_COP0_MAP819                0x0001180080941998  RSL         
L2C_COP0_MAP820                0x00011800809419A0  RSL         
L2C_COP0_MAP821                0x00011800809419A8  RSL         
L2C_COP0_MAP822                0x00011800809419B0  RSL         
L2C_COP0_MAP823                0x00011800809419B8  RSL         
L2C_COP0_MAP824                0x00011800809419C0  RSL         
L2C_COP0_MAP825                0x00011800809419C8  RSL         
L2C_COP0_MAP826                0x00011800809419D0  RSL         
L2C_COP0_MAP827                0x00011800809419D8  RSL         
L2C_COP0_MAP828                0x00011800809419E0  RSL         
L2C_COP0_MAP829                0x00011800809419E8  RSL         
L2C_COP0_MAP830                0x00011800809419F0  RSL         
L2C_COP0_MAP831                0x00011800809419F8  RSL         
L2C_COP0_MAP832                0x0001180080941A00  RSL         
L2C_COP0_MAP833                0x0001180080941A08  RSL         
L2C_COP0_MAP834                0x0001180080941A10  RSL         
L2C_COP0_MAP835                0x0001180080941A18  RSL         
L2C_COP0_MAP836                0x0001180080941A20  RSL         
L2C_COP0_MAP837                0x0001180080941A28  RSL         
L2C_COP0_MAP838                0x0001180080941A30  RSL         
L2C_COP0_MAP839                0x0001180080941A38  RSL         
L2C_COP0_MAP840                0x0001180080941A40  RSL         
L2C_COP0_MAP841                0x0001180080941A48  RSL         
L2C_COP0_MAP842                0x0001180080941A50  RSL         
L2C_COP0_MAP843                0x0001180080941A58  RSL         
L2C_COP0_MAP844                0x0001180080941A60  RSL         
L2C_COP0_MAP845                0x0001180080941A68  RSL         
L2C_COP0_MAP846                0x0001180080941A70  RSL         
L2C_COP0_MAP847                0x0001180080941A78  RSL         
L2C_COP0_MAP848                0x0001180080941A80  RSL         
L2C_COP0_MAP849                0x0001180080941A88  RSL         
L2C_COP0_MAP850                0x0001180080941A90  RSL         
L2C_COP0_MAP851                0x0001180080941A98  RSL         
L2C_COP0_MAP852                0x0001180080941AA0  RSL         
L2C_COP0_MAP853                0x0001180080941AA8  RSL         
L2C_COP0_MAP854                0x0001180080941AB0  RSL         
L2C_COP0_MAP855                0x0001180080941AB8  RSL         
L2C_COP0_MAP856                0x0001180080941AC0  RSL         
L2C_COP0_MAP857                0x0001180080941AC8  RSL         
L2C_COP0_MAP858                0x0001180080941AD0  RSL         
L2C_COP0_MAP859                0x0001180080941AD8  RSL         
L2C_COP0_MAP860                0x0001180080941AE0  RSL         
L2C_COP0_MAP861                0x0001180080941AE8  RSL         
L2C_COP0_MAP862                0x0001180080941AF0  RSL         
L2C_COP0_MAP863                0x0001180080941AF8  RSL         
L2C_COP0_MAP864                0x0001180080941B00  RSL         
L2C_COP0_MAP865                0x0001180080941B08  RSL         
L2C_COP0_MAP866                0x0001180080941B10  RSL         
L2C_COP0_MAP867                0x0001180080941B18  RSL         
L2C_COP0_MAP868                0x0001180080941B20  RSL         
L2C_COP0_MAP869                0x0001180080941B28  RSL         
L2C_COP0_MAP870                0x0001180080941B30  RSL         
L2C_COP0_MAP871                0x0001180080941B38  RSL         
L2C_COP0_MAP872                0x0001180080941B40  RSL         
L2C_COP0_MAP873                0x0001180080941B48  RSL         
L2C_COP0_MAP874                0x0001180080941B50  RSL         
L2C_COP0_MAP875                0x0001180080941B58  RSL         
L2C_COP0_MAP876                0x0001180080941B60  RSL         
L2C_COP0_MAP877                0x0001180080941B68  RSL         
L2C_COP0_MAP878                0x0001180080941B70  RSL         
L2C_COP0_MAP879                0x0001180080941B78  RSL         
L2C_COP0_MAP880                0x0001180080941B80  RSL         
L2C_COP0_MAP881                0x0001180080941B88  RSL         
L2C_COP0_MAP882                0x0001180080941B90  RSL         
L2C_COP0_MAP883                0x0001180080941B98  RSL         
L2C_COP0_MAP884                0x0001180080941BA0  RSL         
L2C_COP0_MAP885                0x0001180080941BA8  RSL         
L2C_COP0_MAP886                0x0001180080941BB0  RSL         
L2C_COP0_MAP887                0x0001180080941BB8  RSL         
L2C_COP0_MAP888                0x0001180080941BC0  RSL         
L2C_COP0_MAP889                0x0001180080941BC8  RSL         
L2C_COP0_MAP890                0x0001180080941BD0  RSL         
L2C_COP0_MAP891                0x0001180080941BD8  RSL         
L2C_COP0_MAP892                0x0001180080941BE0  RSL         
L2C_COP0_MAP893                0x0001180080941BE8  RSL         
L2C_COP0_MAP894                0x0001180080941BF0  RSL         
L2C_COP0_MAP895                0x0001180080941BF8  RSL         
L2C_COP0_MAP896                0x0001180080941C00  RSL         
L2C_COP0_MAP897                0x0001180080941C08  RSL         
L2C_COP0_MAP898                0x0001180080941C10  RSL         
L2C_COP0_MAP899                0x0001180080941C18  RSL         
L2C_COP0_MAP900                0x0001180080941C20  RSL         
L2C_COP0_MAP901                0x0001180080941C28  RSL         
L2C_COP0_MAP902                0x0001180080941C30  RSL         
L2C_COP0_MAP903                0x0001180080941C38  RSL         
L2C_COP0_MAP904                0x0001180080941C40  RSL         
L2C_COP0_MAP905                0x0001180080941C48  RSL         
L2C_COP0_MAP906                0x0001180080941C50  RSL         
L2C_COP0_MAP907                0x0001180080941C58  RSL         
L2C_COP0_MAP908                0x0001180080941C60  RSL         
L2C_COP0_MAP909                0x0001180080941C68  RSL         
L2C_COP0_MAP910                0x0001180080941C70  RSL         
L2C_COP0_MAP911                0x0001180080941C78  RSL         
L2C_COP0_MAP912                0x0001180080941C80  RSL         
L2C_COP0_MAP913                0x0001180080941C88  RSL         
L2C_COP0_MAP914                0x0001180080941C90  RSL         
L2C_COP0_MAP915                0x0001180080941C98  RSL         
L2C_COP0_MAP916                0x0001180080941CA0  RSL         
L2C_COP0_MAP917                0x0001180080941CA8  RSL         
L2C_COP0_MAP918                0x0001180080941CB0  RSL         
L2C_COP0_MAP919                0x0001180080941CB8  RSL         
L2C_COP0_MAP920                0x0001180080941CC0  RSL         
L2C_COP0_MAP921                0x0001180080941CC8  RSL         
L2C_COP0_MAP922                0x0001180080941CD0  RSL         
L2C_COP0_MAP923                0x0001180080941CD8  RSL         
L2C_COP0_MAP924                0x0001180080941CE0  RSL         
L2C_COP0_MAP925                0x0001180080941CE8  RSL         
L2C_COP0_MAP926                0x0001180080941CF0  RSL         
L2C_COP0_MAP927                0x0001180080941CF8  RSL         
L2C_COP0_MAP928                0x0001180080941D00  RSL         
L2C_COP0_MAP929                0x0001180080941D08  RSL         
L2C_COP0_MAP930                0x0001180080941D10  RSL         
L2C_COP0_MAP931                0x0001180080941D18  RSL         
L2C_COP0_MAP932                0x0001180080941D20  RSL         
L2C_COP0_MAP933                0x0001180080941D28  RSL         
L2C_COP0_MAP934                0x0001180080941D30  RSL         
L2C_COP0_MAP935                0x0001180080941D38  RSL         
L2C_COP0_MAP936                0x0001180080941D40  RSL         
L2C_COP0_MAP937                0x0001180080941D48  RSL         
L2C_COP0_MAP938                0x0001180080941D50  RSL         
L2C_COP0_MAP939                0x0001180080941D58  RSL         
L2C_COP0_MAP940                0x0001180080941D60  RSL         
L2C_COP0_MAP941                0x0001180080941D68  RSL         
L2C_COP0_MAP942                0x0001180080941D70  RSL         
L2C_COP0_MAP943                0x0001180080941D78  RSL         
L2C_COP0_MAP944                0x0001180080941D80  RSL         
L2C_COP0_MAP945                0x0001180080941D88  RSL         
L2C_COP0_MAP946                0x0001180080941D90  RSL         
L2C_COP0_MAP947                0x0001180080941D98  RSL         
L2C_COP0_MAP948                0x0001180080941DA0  RSL         
L2C_COP0_MAP949                0x0001180080941DA8  RSL         
L2C_COP0_MAP950                0x0001180080941DB0  RSL         
L2C_COP0_MAP951                0x0001180080941DB8  RSL         
L2C_COP0_MAP952                0x0001180080941DC0  RSL         
L2C_COP0_MAP953                0x0001180080941DC8  RSL         
L2C_COP0_MAP954                0x0001180080941DD0  RSL         
L2C_COP0_MAP955                0x0001180080941DD8  RSL         
L2C_COP0_MAP956                0x0001180080941DE0  RSL         
L2C_COP0_MAP957                0x0001180080941DE8  RSL         
L2C_COP0_MAP958                0x0001180080941DF0  RSL         
L2C_COP0_MAP959                0x0001180080941DF8  RSL         
L2C_COP0_MAP960                0x0001180080941E00  RSL         
L2C_COP0_MAP961                0x0001180080941E08  RSL         
L2C_COP0_MAP962                0x0001180080941E10  RSL         
L2C_COP0_MAP963                0x0001180080941E18  RSL         
L2C_COP0_MAP964                0x0001180080941E20  RSL         
L2C_COP0_MAP965                0x0001180080941E28  RSL         
L2C_COP0_MAP966                0x0001180080941E30  RSL         
L2C_COP0_MAP967                0x0001180080941E38  RSL         
L2C_COP0_MAP968                0x0001180080941E40  RSL         
L2C_COP0_MAP969                0x0001180080941E48  RSL         
L2C_COP0_MAP970                0x0001180080941E50  RSL         
L2C_COP0_MAP971                0x0001180080941E58  RSL         
L2C_COP0_MAP972                0x0001180080941E60  RSL         
L2C_COP0_MAP973                0x0001180080941E68  RSL         
L2C_COP0_MAP974                0x0001180080941E70  RSL         
L2C_COP0_MAP975                0x0001180080941E78  RSL         
L2C_COP0_MAP976                0x0001180080941E80  RSL         
L2C_COP0_MAP977                0x0001180080941E88  RSL         
L2C_COP0_MAP978                0x0001180080941E90  RSL         
L2C_COP0_MAP979                0x0001180080941E98  RSL         
L2C_COP0_MAP980                0x0001180080941EA0  RSL         
L2C_COP0_MAP981                0x0001180080941EA8  RSL         
L2C_COP0_MAP982                0x0001180080941EB0  RSL         
L2C_COP0_MAP983                0x0001180080941EB8  RSL         
L2C_COP0_MAP984                0x0001180080941EC0  RSL         
L2C_COP0_MAP985                0x0001180080941EC8  RSL         
L2C_COP0_MAP986                0x0001180080941ED0  RSL         
L2C_COP0_MAP987                0x0001180080941ED8  RSL         
L2C_COP0_MAP988                0x0001180080941EE0  RSL         
L2C_COP0_MAP989                0x0001180080941EE8  RSL         
L2C_COP0_MAP990                0x0001180080941EF0  RSL         
L2C_COP0_MAP991                0x0001180080941EF8  RSL         
L2C_COP0_MAP992                0x0001180080941F00  RSL         
L2C_COP0_MAP993                0x0001180080941F08  RSL         
L2C_COP0_MAP994                0x0001180080941F10  RSL         
L2C_COP0_MAP995                0x0001180080941F18  RSL         
L2C_COP0_MAP996                0x0001180080941F20  RSL         
L2C_COP0_MAP997                0x0001180080941F28  RSL         
L2C_COP0_MAP998                0x0001180080941F30  RSL         
L2C_COP0_MAP999                0x0001180080941F38  RSL         
L2C_COP0_MAP1000               0x0001180080941F40  RSL         
L2C_COP0_MAP1001               0x0001180080941F48  RSL         
L2C_COP0_MAP1002               0x0001180080941F50  RSL         
L2C_COP0_MAP1003               0x0001180080941F58  RSL         
L2C_COP0_MAP1004               0x0001180080941F60  RSL         
L2C_COP0_MAP1005               0x0001180080941F68  RSL         
L2C_COP0_MAP1006               0x0001180080941F70  RSL         
L2C_COP0_MAP1007               0x0001180080941F78  RSL         
L2C_COP0_MAP1008               0x0001180080941F80  RSL         
L2C_COP0_MAP1009               0x0001180080941F88  RSL         
L2C_COP0_MAP1010               0x0001180080941F90  RSL         
L2C_COP0_MAP1011               0x0001180080941F98  RSL         
L2C_COP0_MAP1012               0x0001180080941FA0  RSL         
L2C_COP0_MAP1013               0x0001180080941FA8  RSL         
L2C_COP0_MAP1014               0x0001180080941FB0  RSL         
L2C_COP0_MAP1015               0x0001180080941FB8  RSL         
L2C_COP0_MAP1016               0x0001180080941FC0  RSL         
L2C_COP0_MAP1017               0x0001180080941FC8  RSL         
L2C_COP0_MAP1018               0x0001180080941FD0  RSL         
L2C_COP0_MAP1019               0x0001180080941FD8  RSL         
L2C_COP0_MAP1020               0x0001180080941FE0  RSL         
L2C_COP0_MAP1021               0x0001180080941FE8  RSL         
L2C_COP0_MAP1022               0x0001180080941FF0  RSL         
L2C_COP0_MAP1023               0x0001180080941FF8  RSL         
L2C_COP0_MAP1024               0x0001180080942000  RSL         
L2C_COP0_MAP1025               0x0001180080942008  RSL         
L2C_COP0_MAP1026               0x0001180080942010  RSL         
L2C_COP0_MAP1027               0x0001180080942018  RSL         
L2C_COP0_MAP1028               0x0001180080942020  RSL         
L2C_COP0_MAP1029               0x0001180080942028  RSL         
L2C_COP0_MAP1030               0x0001180080942030  RSL         
L2C_COP0_MAP1031               0x0001180080942038  RSL         
L2C_COP0_MAP1032               0x0001180080942040  RSL         
L2C_COP0_MAP1033               0x0001180080942048  RSL         
L2C_COP0_MAP1034               0x0001180080942050  RSL         
L2C_COP0_MAP1035               0x0001180080942058  RSL         
L2C_COP0_MAP1036               0x0001180080942060  RSL         
L2C_COP0_MAP1037               0x0001180080942068  RSL         
L2C_COP0_MAP1038               0x0001180080942070  RSL         
L2C_COP0_MAP1039               0x0001180080942078  RSL         
L2C_COP0_MAP1040               0x0001180080942080  RSL         
L2C_COP0_MAP1041               0x0001180080942088  RSL         
L2C_COP0_MAP1042               0x0001180080942090  RSL         
L2C_COP0_MAP1043               0x0001180080942098  RSL         
L2C_COP0_MAP1044               0x00011800809420A0  RSL         
L2C_COP0_MAP1045               0x00011800809420A8  RSL         
L2C_COP0_MAP1046               0x00011800809420B0  RSL         
L2C_COP0_MAP1047               0x00011800809420B8  RSL         
L2C_COP0_MAP1048               0x00011800809420C0  RSL         
L2C_COP0_MAP1049               0x00011800809420C8  RSL         
L2C_COP0_MAP1050               0x00011800809420D0  RSL         
L2C_COP0_MAP1051               0x00011800809420D8  RSL         
L2C_COP0_MAP1052               0x00011800809420E0  RSL         
L2C_COP0_MAP1053               0x00011800809420E8  RSL         
L2C_COP0_MAP1054               0x00011800809420F0  RSL         
L2C_COP0_MAP1055               0x00011800809420F8  RSL         
L2C_COP0_MAP1056               0x0001180080942100  RSL         
L2C_COP0_MAP1057               0x0001180080942108  RSL         
L2C_COP0_MAP1058               0x0001180080942110  RSL         
L2C_COP0_MAP1059               0x0001180080942118  RSL         
L2C_COP0_MAP1060               0x0001180080942120  RSL         
L2C_COP0_MAP1061               0x0001180080942128  RSL         
L2C_COP0_MAP1062               0x0001180080942130  RSL         
L2C_COP0_MAP1063               0x0001180080942138  RSL         
L2C_COP0_MAP1064               0x0001180080942140  RSL         
L2C_COP0_MAP1065               0x0001180080942148  RSL         
L2C_COP0_MAP1066               0x0001180080942150  RSL         
L2C_COP0_MAP1067               0x0001180080942158  RSL         
L2C_COP0_MAP1068               0x0001180080942160  RSL         
L2C_COP0_MAP1069               0x0001180080942168  RSL         
L2C_COP0_MAP1070               0x0001180080942170  RSL         
L2C_COP0_MAP1071               0x0001180080942178  RSL         
L2C_COP0_MAP1072               0x0001180080942180  RSL         
L2C_COP0_MAP1073               0x0001180080942188  RSL         
L2C_COP0_MAP1074               0x0001180080942190  RSL         
L2C_COP0_MAP1075               0x0001180080942198  RSL         
L2C_COP0_MAP1076               0x00011800809421A0  RSL         
L2C_COP0_MAP1077               0x00011800809421A8  RSL         
L2C_COP0_MAP1078               0x00011800809421B0  RSL         
L2C_COP0_MAP1079               0x00011800809421B8  RSL         
L2C_COP0_MAP1080               0x00011800809421C0  RSL         
L2C_COP0_MAP1081               0x00011800809421C8  RSL         
L2C_COP0_MAP1082               0x00011800809421D0  RSL         
L2C_COP0_MAP1083               0x00011800809421D8  RSL         
L2C_COP0_MAP1084               0x00011800809421E0  RSL         
L2C_COP0_MAP1085               0x00011800809421E8  RSL         
L2C_COP0_MAP1086               0x00011800809421F0  RSL         
L2C_COP0_MAP1087               0x00011800809421F8  RSL         
L2C_COP0_MAP1088               0x0001180080942200  RSL         
L2C_COP0_MAP1089               0x0001180080942208  RSL         
L2C_COP0_MAP1090               0x0001180080942210  RSL         
L2C_COP0_MAP1091               0x0001180080942218  RSL         
L2C_COP0_MAP1092               0x0001180080942220  RSL         
L2C_COP0_MAP1093               0x0001180080942228  RSL         
L2C_COP0_MAP1094               0x0001180080942230  RSL         
L2C_COP0_MAP1095               0x0001180080942238  RSL         
L2C_COP0_MAP1096               0x0001180080942240  RSL         
L2C_COP0_MAP1097               0x0001180080942248  RSL         
L2C_COP0_MAP1098               0x0001180080942250  RSL         
L2C_COP0_MAP1099               0x0001180080942258  RSL         
L2C_COP0_MAP1100               0x0001180080942260  RSL         
L2C_COP0_MAP1101               0x0001180080942268  RSL         
L2C_COP0_MAP1102               0x0001180080942270  RSL         
L2C_COP0_MAP1103               0x0001180080942278  RSL         
L2C_COP0_MAP1104               0x0001180080942280  RSL         
L2C_COP0_MAP1105               0x0001180080942288  RSL         
L2C_COP0_MAP1106               0x0001180080942290  RSL         
L2C_COP0_MAP1107               0x0001180080942298  RSL         
L2C_COP0_MAP1108               0x00011800809422A0  RSL         
L2C_COP0_MAP1109               0x00011800809422A8  RSL         
L2C_COP0_MAP1110               0x00011800809422B0  RSL         
L2C_COP0_MAP1111               0x00011800809422B8  RSL         
L2C_COP0_MAP1112               0x00011800809422C0  RSL         
L2C_COP0_MAP1113               0x00011800809422C8  RSL         
L2C_COP0_MAP1114               0x00011800809422D0  RSL         
L2C_COP0_MAP1115               0x00011800809422D8  RSL         
L2C_COP0_MAP1116               0x00011800809422E0  RSL         
L2C_COP0_MAP1117               0x00011800809422E8  RSL         
L2C_COP0_MAP1118               0x00011800809422F0  RSL         
L2C_COP0_MAP1119               0x00011800809422F8  RSL         
L2C_COP0_MAP1120               0x0001180080942300  RSL         
L2C_COP0_MAP1121               0x0001180080942308  RSL         
L2C_COP0_MAP1122               0x0001180080942310  RSL         
L2C_COP0_MAP1123               0x0001180080942318  RSL         
L2C_COP0_MAP1124               0x0001180080942320  RSL         
L2C_COP0_MAP1125               0x0001180080942328  RSL         
L2C_COP0_MAP1126               0x0001180080942330  RSL         
L2C_COP0_MAP1127               0x0001180080942338  RSL         
L2C_COP0_MAP1128               0x0001180080942340  RSL         
L2C_COP0_MAP1129               0x0001180080942348  RSL         
L2C_COP0_MAP1130               0x0001180080942350  RSL         
L2C_COP0_MAP1131               0x0001180080942358  RSL         
L2C_COP0_MAP1132               0x0001180080942360  RSL         
L2C_COP0_MAP1133               0x0001180080942368  RSL         
L2C_COP0_MAP1134               0x0001180080942370  RSL         
L2C_COP0_MAP1135               0x0001180080942378  RSL         
L2C_COP0_MAP1136               0x0001180080942380  RSL         
L2C_COP0_MAP1137               0x0001180080942388  RSL         
L2C_COP0_MAP1138               0x0001180080942390  RSL         
L2C_COP0_MAP1139               0x0001180080942398  RSL         
L2C_COP0_MAP1140               0x00011800809423A0  RSL         
L2C_COP0_MAP1141               0x00011800809423A8  RSL         
L2C_COP0_MAP1142               0x00011800809423B0  RSL         
L2C_COP0_MAP1143               0x00011800809423B8  RSL         
L2C_COP0_MAP1144               0x00011800809423C0  RSL         
L2C_COP0_MAP1145               0x00011800809423C8  RSL         
L2C_COP0_MAP1146               0x00011800809423D0  RSL         
L2C_COP0_MAP1147               0x00011800809423D8  RSL         
L2C_COP0_MAP1148               0x00011800809423E0  RSL         
L2C_COP0_MAP1149               0x00011800809423E8  RSL         
L2C_COP0_MAP1150               0x00011800809423F0  RSL         
L2C_COP0_MAP1151               0x00011800809423F8  RSL         
L2C_COP0_MAP1152               0x0001180080942400  RSL         
L2C_COP0_MAP1153               0x0001180080942408  RSL         
L2C_COP0_MAP1154               0x0001180080942410  RSL         
L2C_COP0_MAP1155               0x0001180080942418  RSL         
L2C_COP0_MAP1156               0x0001180080942420  RSL         
L2C_COP0_MAP1157               0x0001180080942428  RSL         
L2C_COP0_MAP1158               0x0001180080942430  RSL         
L2C_COP0_MAP1159               0x0001180080942438  RSL         
L2C_COP0_MAP1160               0x0001180080942440  RSL         
L2C_COP0_MAP1161               0x0001180080942448  RSL         
L2C_COP0_MAP1162               0x0001180080942450  RSL         
L2C_COP0_MAP1163               0x0001180080942458  RSL         
L2C_COP0_MAP1164               0x0001180080942460  RSL         
L2C_COP0_MAP1165               0x0001180080942468  RSL         
L2C_COP0_MAP1166               0x0001180080942470  RSL         
L2C_COP0_MAP1167               0x0001180080942478  RSL         
L2C_COP0_MAP1168               0x0001180080942480  RSL         
L2C_COP0_MAP1169               0x0001180080942488  RSL         
L2C_COP0_MAP1170               0x0001180080942490  RSL         
L2C_COP0_MAP1171               0x0001180080942498  RSL         
L2C_COP0_MAP1172               0x00011800809424A0  RSL         
L2C_COP0_MAP1173               0x00011800809424A8  RSL         
L2C_COP0_MAP1174               0x00011800809424B0  RSL         
L2C_COP0_MAP1175               0x00011800809424B8  RSL         
L2C_COP0_MAP1176               0x00011800809424C0  RSL         
L2C_COP0_MAP1177               0x00011800809424C8  RSL         
L2C_COP0_MAP1178               0x00011800809424D0  RSL         
L2C_COP0_MAP1179               0x00011800809424D8  RSL         
L2C_COP0_MAP1180               0x00011800809424E0  RSL         
L2C_COP0_MAP1181               0x00011800809424E8  RSL         
L2C_COP0_MAP1182               0x00011800809424F0  RSL         
L2C_COP0_MAP1183               0x00011800809424F8  RSL         
L2C_COP0_MAP1184               0x0001180080942500  RSL         
L2C_COP0_MAP1185               0x0001180080942508  RSL         
L2C_COP0_MAP1186               0x0001180080942510  RSL         
L2C_COP0_MAP1187               0x0001180080942518  RSL         
L2C_COP0_MAP1188               0x0001180080942520  RSL         
L2C_COP0_MAP1189               0x0001180080942528  RSL         
L2C_COP0_MAP1190               0x0001180080942530  RSL         
L2C_COP0_MAP1191               0x0001180080942538  RSL         
L2C_COP0_MAP1192               0x0001180080942540  RSL         
L2C_COP0_MAP1193               0x0001180080942548  RSL         
L2C_COP0_MAP1194               0x0001180080942550  RSL         
L2C_COP0_MAP1195               0x0001180080942558  RSL         
L2C_COP0_MAP1196               0x0001180080942560  RSL         
L2C_COP0_MAP1197               0x0001180080942568  RSL         
L2C_COP0_MAP1198               0x0001180080942570  RSL         
L2C_COP0_MAP1199               0x0001180080942578  RSL         
L2C_COP0_MAP1200               0x0001180080942580  RSL         
L2C_COP0_MAP1201               0x0001180080942588  RSL         
L2C_COP0_MAP1202               0x0001180080942590  RSL         
L2C_COP0_MAP1203               0x0001180080942598  RSL         
L2C_COP0_MAP1204               0x00011800809425A0  RSL         
L2C_COP0_MAP1205               0x00011800809425A8  RSL         
L2C_COP0_MAP1206               0x00011800809425B0  RSL         
L2C_COP0_MAP1207               0x00011800809425B8  RSL         
L2C_COP0_MAP1208               0x00011800809425C0  RSL         
L2C_COP0_MAP1209               0x00011800809425C8  RSL         
L2C_COP0_MAP1210               0x00011800809425D0  RSL         
L2C_COP0_MAP1211               0x00011800809425D8  RSL         
L2C_COP0_MAP1212               0x00011800809425E0  RSL         
L2C_COP0_MAP1213               0x00011800809425E8  RSL         
L2C_COP0_MAP1214               0x00011800809425F0  RSL         
L2C_COP0_MAP1215               0x00011800809425F8  RSL         
L2C_COP0_MAP1216               0x0001180080942600  RSL         
L2C_COP0_MAP1217               0x0001180080942608  RSL         
L2C_COP0_MAP1218               0x0001180080942610  RSL         
L2C_COP0_MAP1219               0x0001180080942618  RSL         
L2C_COP0_MAP1220               0x0001180080942620  RSL         
L2C_COP0_MAP1221               0x0001180080942628  RSL         
L2C_COP0_MAP1222               0x0001180080942630  RSL         
L2C_COP0_MAP1223               0x0001180080942638  RSL         
L2C_COP0_MAP1224               0x0001180080942640  RSL         
L2C_COP0_MAP1225               0x0001180080942648  RSL         
L2C_COP0_MAP1226               0x0001180080942650  RSL         
L2C_COP0_MAP1227               0x0001180080942658  RSL         
L2C_COP0_MAP1228               0x0001180080942660  RSL         
L2C_COP0_MAP1229               0x0001180080942668  RSL         
L2C_COP0_MAP1230               0x0001180080942670  RSL         
L2C_COP0_MAP1231               0x0001180080942678  RSL         
L2C_COP0_MAP1232               0x0001180080942680  RSL         
L2C_COP0_MAP1233               0x0001180080942688  RSL         
L2C_COP0_MAP1234               0x0001180080942690  RSL         
L2C_COP0_MAP1235               0x0001180080942698  RSL         
L2C_COP0_MAP1236               0x00011800809426A0  RSL         
L2C_COP0_MAP1237               0x00011800809426A8  RSL         
L2C_COP0_MAP1238               0x00011800809426B0  RSL         
L2C_COP0_MAP1239               0x00011800809426B8  RSL         
L2C_COP0_MAP1240               0x00011800809426C0  RSL         
L2C_COP0_MAP1241               0x00011800809426C8  RSL         
L2C_COP0_MAP1242               0x00011800809426D0  RSL         
L2C_COP0_MAP1243               0x00011800809426D8  RSL         
L2C_COP0_MAP1244               0x00011800809426E0  RSL         
L2C_COP0_MAP1245               0x00011800809426E8  RSL         
L2C_COP0_MAP1246               0x00011800809426F0  RSL         
L2C_COP0_MAP1247               0x00011800809426F8  RSL         
L2C_COP0_MAP1248               0x0001180080942700  RSL         
L2C_COP0_MAP1249               0x0001180080942708  RSL         
L2C_COP0_MAP1250               0x0001180080942710  RSL         
L2C_COP0_MAP1251               0x0001180080942718  RSL         
L2C_COP0_MAP1252               0x0001180080942720  RSL         
L2C_COP0_MAP1253               0x0001180080942728  RSL         
L2C_COP0_MAP1254               0x0001180080942730  RSL         
L2C_COP0_MAP1255               0x0001180080942738  RSL         
L2C_COP0_MAP1256               0x0001180080942740  RSL         
L2C_COP0_MAP1257               0x0001180080942748  RSL         
L2C_COP0_MAP1258               0x0001180080942750  RSL         
L2C_COP0_MAP1259               0x0001180080942758  RSL         
L2C_COP0_MAP1260               0x0001180080942760  RSL         
L2C_COP0_MAP1261               0x0001180080942768  RSL         
L2C_COP0_MAP1262               0x0001180080942770  RSL         
L2C_COP0_MAP1263               0x0001180080942778  RSL         
L2C_COP0_MAP1264               0x0001180080942780  RSL         
L2C_COP0_MAP1265               0x0001180080942788  RSL         
L2C_COP0_MAP1266               0x0001180080942790  RSL         
L2C_COP0_MAP1267               0x0001180080942798  RSL         
L2C_COP0_MAP1268               0x00011800809427A0  RSL         
L2C_COP0_MAP1269               0x00011800809427A8  RSL         
L2C_COP0_MAP1270               0x00011800809427B0  RSL         
L2C_COP0_MAP1271               0x00011800809427B8  RSL         
L2C_COP0_MAP1272               0x00011800809427C0  RSL         
L2C_COP0_MAP1273               0x00011800809427C8  RSL         
L2C_COP0_MAP1274               0x00011800809427D0  RSL         
L2C_COP0_MAP1275               0x00011800809427D8  RSL         
L2C_COP0_MAP1276               0x00011800809427E0  RSL         
L2C_COP0_MAP1277               0x00011800809427E8  RSL         
L2C_COP0_MAP1278               0x00011800809427F0  RSL         
L2C_COP0_MAP1279               0x00011800809427F8  RSL         
L2C_COP0_MAP1280               0x0001180080942800  RSL         
L2C_COP0_MAP1281               0x0001180080942808  RSL         
L2C_COP0_MAP1282               0x0001180080942810  RSL         
L2C_COP0_MAP1283               0x0001180080942818  RSL         
L2C_COP0_MAP1284               0x0001180080942820  RSL         
L2C_COP0_MAP1285               0x0001180080942828  RSL         
L2C_COP0_MAP1286               0x0001180080942830  RSL         
L2C_COP0_MAP1287               0x0001180080942838  RSL         
L2C_COP0_MAP1288               0x0001180080942840  RSL         
L2C_COP0_MAP1289               0x0001180080942848  RSL         
L2C_COP0_MAP1290               0x0001180080942850  RSL         
L2C_COP0_MAP1291               0x0001180080942858  RSL         
L2C_COP0_MAP1292               0x0001180080942860  RSL         
L2C_COP0_MAP1293               0x0001180080942868  RSL         
L2C_COP0_MAP1294               0x0001180080942870  RSL         
L2C_COP0_MAP1295               0x0001180080942878  RSL         
L2C_COP0_MAP1296               0x0001180080942880  RSL         
L2C_COP0_MAP1297               0x0001180080942888  RSL         
L2C_COP0_MAP1298               0x0001180080942890  RSL         
L2C_COP0_MAP1299               0x0001180080942898  RSL         
L2C_COP0_MAP1300               0x00011800809428A0  RSL         
L2C_COP0_MAP1301               0x00011800809428A8  RSL         
L2C_COP0_MAP1302               0x00011800809428B0  RSL         
L2C_COP0_MAP1303               0x00011800809428B8  RSL         
L2C_COP0_MAP1304               0x00011800809428C0  RSL         
L2C_COP0_MAP1305               0x00011800809428C8  RSL         
L2C_COP0_MAP1306               0x00011800809428D0  RSL         
L2C_COP0_MAP1307               0x00011800809428D8  RSL         
L2C_COP0_MAP1308               0x00011800809428E0  RSL         
L2C_COP0_MAP1309               0x00011800809428E8  RSL         
L2C_COP0_MAP1310               0x00011800809428F0  RSL         
L2C_COP0_MAP1311               0x00011800809428F8  RSL         
L2C_COP0_MAP1312               0x0001180080942900  RSL         
L2C_COP0_MAP1313               0x0001180080942908  RSL         
L2C_COP0_MAP1314               0x0001180080942910  RSL         
L2C_COP0_MAP1315               0x0001180080942918  RSL         
L2C_COP0_MAP1316               0x0001180080942920  RSL         
L2C_COP0_MAP1317               0x0001180080942928  RSL         
L2C_COP0_MAP1318               0x0001180080942930  RSL         
L2C_COP0_MAP1319               0x0001180080942938  RSL         
L2C_COP0_MAP1320               0x0001180080942940  RSL         
L2C_COP0_MAP1321               0x0001180080942948  RSL         
L2C_COP0_MAP1322               0x0001180080942950  RSL         
L2C_COP0_MAP1323               0x0001180080942958  RSL         
L2C_COP0_MAP1324               0x0001180080942960  RSL         
L2C_COP0_MAP1325               0x0001180080942968  RSL         
L2C_COP0_MAP1326               0x0001180080942970  RSL         
L2C_COP0_MAP1327               0x0001180080942978  RSL         
L2C_COP0_MAP1328               0x0001180080942980  RSL         
L2C_COP0_MAP1329               0x0001180080942988  RSL         
L2C_COP0_MAP1330               0x0001180080942990  RSL         
L2C_COP0_MAP1331               0x0001180080942998  RSL         
L2C_COP0_MAP1332               0x00011800809429A0  RSL         
L2C_COP0_MAP1333               0x00011800809429A8  RSL         
L2C_COP0_MAP1334               0x00011800809429B0  RSL         
L2C_COP0_MAP1335               0x00011800809429B8  RSL         
L2C_COP0_MAP1336               0x00011800809429C0  RSL         
L2C_COP0_MAP1337               0x00011800809429C8  RSL         
L2C_COP0_MAP1338               0x00011800809429D0  RSL         
L2C_COP0_MAP1339               0x00011800809429D8  RSL         
L2C_COP0_MAP1340               0x00011800809429E0  RSL         
L2C_COP0_MAP1341               0x00011800809429E8  RSL         
L2C_COP0_MAP1342               0x00011800809429F0  RSL         
L2C_COP0_MAP1343               0x00011800809429F8  RSL         
L2C_COP0_MAP1344               0x0001180080942A00  RSL         
L2C_COP0_MAP1345               0x0001180080942A08  RSL         
L2C_COP0_MAP1346               0x0001180080942A10  RSL         
L2C_COP0_MAP1347               0x0001180080942A18  RSL         
L2C_COP0_MAP1348               0x0001180080942A20  RSL         
L2C_COP0_MAP1349               0x0001180080942A28  RSL         
L2C_COP0_MAP1350               0x0001180080942A30  RSL         
L2C_COP0_MAP1351               0x0001180080942A38  RSL         
L2C_COP0_MAP1352               0x0001180080942A40  RSL         
L2C_COP0_MAP1353               0x0001180080942A48  RSL         
L2C_COP0_MAP1354               0x0001180080942A50  RSL         
L2C_COP0_MAP1355               0x0001180080942A58  RSL         
L2C_COP0_MAP1356               0x0001180080942A60  RSL         
L2C_COP0_MAP1357               0x0001180080942A68  RSL         
L2C_COP0_MAP1358               0x0001180080942A70  RSL         
L2C_COP0_MAP1359               0x0001180080942A78  RSL         
L2C_COP0_MAP1360               0x0001180080942A80  RSL         
L2C_COP0_MAP1361               0x0001180080942A88  RSL         
L2C_COP0_MAP1362               0x0001180080942A90  RSL         
L2C_COP0_MAP1363               0x0001180080942A98  RSL         
L2C_COP0_MAP1364               0x0001180080942AA0  RSL         
L2C_COP0_MAP1365               0x0001180080942AA8  RSL         
L2C_COP0_MAP1366               0x0001180080942AB0  RSL         
L2C_COP0_MAP1367               0x0001180080942AB8  RSL         
L2C_COP0_MAP1368               0x0001180080942AC0  RSL         
L2C_COP0_MAP1369               0x0001180080942AC8  RSL         
L2C_COP0_MAP1370               0x0001180080942AD0  RSL         
L2C_COP0_MAP1371               0x0001180080942AD8  RSL         
L2C_COP0_MAP1372               0x0001180080942AE0  RSL         
L2C_COP0_MAP1373               0x0001180080942AE8  RSL         
L2C_COP0_MAP1374               0x0001180080942AF0  RSL         
L2C_COP0_MAP1375               0x0001180080942AF8  RSL         
L2C_COP0_MAP1376               0x0001180080942B00  RSL         
L2C_COP0_MAP1377               0x0001180080942B08  RSL         
L2C_COP0_MAP1378               0x0001180080942B10  RSL         
L2C_COP0_MAP1379               0x0001180080942B18  RSL         
L2C_COP0_MAP1380               0x0001180080942B20  RSL         
L2C_COP0_MAP1381               0x0001180080942B28  RSL         
L2C_COP0_MAP1382               0x0001180080942B30  RSL         
L2C_COP0_MAP1383               0x0001180080942B38  RSL         
L2C_COP0_MAP1384               0x0001180080942B40  RSL         
L2C_COP0_MAP1385               0x0001180080942B48  RSL         
L2C_COP0_MAP1386               0x0001180080942B50  RSL         
L2C_COP0_MAP1387               0x0001180080942B58  RSL         
L2C_COP0_MAP1388               0x0001180080942B60  RSL         
L2C_COP0_MAP1389               0x0001180080942B68  RSL         
L2C_COP0_MAP1390               0x0001180080942B70  RSL         
L2C_COP0_MAP1391               0x0001180080942B78  RSL         
L2C_COP0_MAP1392               0x0001180080942B80  RSL         
L2C_COP0_MAP1393               0x0001180080942B88  RSL         
L2C_COP0_MAP1394               0x0001180080942B90  RSL         
L2C_COP0_MAP1395               0x0001180080942B98  RSL         
L2C_COP0_MAP1396               0x0001180080942BA0  RSL         
L2C_COP0_MAP1397               0x0001180080942BA8  RSL         
L2C_COP0_MAP1398               0x0001180080942BB0  RSL         
L2C_COP0_MAP1399               0x0001180080942BB8  RSL         
L2C_COP0_MAP1400               0x0001180080942BC0  RSL         
L2C_COP0_MAP1401               0x0001180080942BC8  RSL         
L2C_COP0_MAP1402               0x0001180080942BD0  RSL         
L2C_COP0_MAP1403               0x0001180080942BD8  RSL         
L2C_COP0_MAP1404               0x0001180080942BE0  RSL         
L2C_COP0_MAP1405               0x0001180080942BE8  RSL         
L2C_COP0_MAP1406               0x0001180080942BF0  RSL         
L2C_COP0_MAP1407               0x0001180080942BF8  RSL         
L2C_COP0_MAP1408               0x0001180080942C00  RSL         
L2C_COP0_MAP1409               0x0001180080942C08  RSL         
L2C_COP0_MAP1410               0x0001180080942C10  RSL         
L2C_COP0_MAP1411               0x0001180080942C18  RSL         
L2C_COP0_MAP1412               0x0001180080942C20  RSL         
L2C_COP0_MAP1413               0x0001180080942C28  RSL         
L2C_COP0_MAP1414               0x0001180080942C30  RSL         
L2C_COP0_MAP1415               0x0001180080942C38  RSL         
L2C_COP0_MAP1416               0x0001180080942C40  RSL         
L2C_COP0_MAP1417               0x0001180080942C48  RSL         
L2C_COP0_MAP1418               0x0001180080942C50  RSL         
L2C_COP0_MAP1419               0x0001180080942C58  RSL         
L2C_COP0_MAP1420               0x0001180080942C60  RSL         
L2C_COP0_MAP1421               0x0001180080942C68  RSL         
L2C_COP0_MAP1422               0x0001180080942C70  RSL         
L2C_COP0_MAP1423               0x0001180080942C78  RSL         
L2C_COP0_MAP1424               0x0001180080942C80  RSL         
L2C_COP0_MAP1425               0x0001180080942C88  RSL         
L2C_COP0_MAP1426               0x0001180080942C90  RSL         
L2C_COP0_MAP1427               0x0001180080942C98  RSL         
L2C_COP0_MAP1428               0x0001180080942CA0  RSL         
L2C_COP0_MAP1429               0x0001180080942CA8  RSL         
L2C_COP0_MAP1430               0x0001180080942CB0  RSL         
L2C_COP0_MAP1431               0x0001180080942CB8  RSL         
L2C_COP0_MAP1432               0x0001180080942CC0  RSL         
L2C_COP0_MAP1433               0x0001180080942CC8  RSL         
L2C_COP0_MAP1434               0x0001180080942CD0  RSL         
L2C_COP0_MAP1435               0x0001180080942CD8  RSL         
L2C_COP0_MAP1436               0x0001180080942CE0  RSL         
L2C_COP0_MAP1437               0x0001180080942CE8  RSL         
L2C_COP0_MAP1438               0x0001180080942CF0  RSL         
L2C_COP0_MAP1439               0x0001180080942CF8  RSL         
L2C_COP0_MAP1440               0x0001180080942D00  RSL         
L2C_COP0_MAP1441               0x0001180080942D08  RSL         
L2C_COP0_MAP1442               0x0001180080942D10  RSL         
L2C_COP0_MAP1443               0x0001180080942D18  RSL         
L2C_COP0_MAP1444               0x0001180080942D20  RSL         
L2C_COP0_MAP1445               0x0001180080942D28  RSL         
L2C_COP0_MAP1446               0x0001180080942D30  RSL         
L2C_COP0_MAP1447               0x0001180080942D38  RSL         
L2C_COP0_MAP1448               0x0001180080942D40  RSL         
L2C_COP0_MAP1449               0x0001180080942D48  RSL         
L2C_COP0_MAP1450               0x0001180080942D50  RSL         
L2C_COP0_MAP1451               0x0001180080942D58  RSL         
L2C_COP0_MAP1452               0x0001180080942D60  RSL         
L2C_COP0_MAP1453               0x0001180080942D68  RSL         
L2C_COP0_MAP1454               0x0001180080942D70  RSL         
L2C_COP0_MAP1455               0x0001180080942D78  RSL         
L2C_COP0_MAP1456               0x0001180080942D80  RSL         
L2C_COP0_MAP1457               0x0001180080942D88  RSL         
L2C_COP0_MAP1458               0x0001180080942D90  RSL         
L2C_COP0_MAP1459               0x0001180080942D98  RSL         
L2C_COP0_MAP1460               0x0001180080942DA0  RSL         
L2C_COP0_MAP1461               0x0001180080942DA8  RSL         
L2C_COP0_MAP1462               0x0001180080942DB0  RSL         
L2C_COP0_MAP1463               0x0001180080942DB8  RSL         
L2C_COP0_MAP1464               0x0001180080942DC0  RSL         
L2C_COP0_MAP1465               0x0001180080942DC8  RSL         
L2C_COP0_MAP1466               0x0001180080942DD0  RSL         
L2C_COP0_MAP1467               0x0001180080942DD8  RSL         
L2C_COP0_MAP1468               0x0001180080942DE0  RSL         
L2C_COP0_MAP1469               0x0001180080942DE8  RSL         
L2C_COP0_MAP1470               0x0001180080942DF0  RSL         
L2C_COP0_MAP1471               0x0001180080942DF8  RSL         
L2C_COP0_MAP1472               0x0001180080942E00  RSL         
L2C_COP0_MAP1473               0x0001180080942E08  RSL         
L2C_COP0_MAP1474               0x0001180080942E10  RSL         
L2C_COP0_MAP1475               0x0001180080942E18  RSL         
L2C_COP0_MAP1476               0x0001180080942E20  RSL         
L2C_COP0_MAP1477               0x0001180080942E28  RSL         
L2C_COP0_MAP1478               0x0001180080942E30  RSL         
L2C_COP0_MAP1479               0x0001180080942E38  RSL         
L2C_COP0_MAP1480               0x0001180080942E40  RSL         
L2C_COP0_MAP1481               0x0001180080942E48  RSL         
L2C_COP0_MAP1482               0x0001180080942E50  RSL         
L2C_COP0_MAP1483               0x0001180080942E58  RSL         
L2C_COP0_MAP1484               0x0001180080942E60  RSL         
L2C_COP0_MAP1485               0x0001180080942E68  RSL         
L2C_COP0_MAP1486               0x0001180080942E70  RSL         
L2C_COP0_MAP1487               0x0001180080942E78  RSL         
L2C_COP0_MAP1488               0x0001180080942E80  RSL         
L2C_COP0_MAP1489               0x0001180080942E88  RSL         
L2C_COP0_MAP1490               0x0001180080942E90  RSL         
L2C_COP0_MAP1491               0x0001180080942E98  RSL         
L2C_COP0_MAP1492               0x0001180080942EA0  RSL         
L2C_COP0_MAP1493               0x0001180080942EA8  RSL         
L2C_COP0_MAP1494               0x0001180080942EB0  RSL         
L2C_COP0_MAP1495               0x0001180080942EB8  RSL         
L2C_COP0_MAP1496               0x0001180080942EC0  RSL         
L2C_COP0_MAP1497               0x0001180080942EC8  RSL         
L2C_COP0_MAP1498               0x0001180080942ED0  RSL         
L2C_COP0_MAP1499               0x0001180080942ED8  RSL         
L2C_COP0_MAP1500               0x0001180080942EE0  RSL         
L2C_COP0_MAP1501               0x0001180080942EE8  RSL         
L2C_COP0_MAP1502               0x0001180080942EF0  RSL         
L2C_COP0_MAP1503               0x0001180080942EF8  RSL         
L2C_COP0_MAP1504               0x0001180080942F00  RSL         
L2C_COP0_MAP1505               0x0001180080942F08  RSL         
L2C_COP0_MAP1506               0x0001180080942F10  RSL         
L2C_COP0_MAP1507               0x0001180080942F18  RSL         
L2C_COP0_MAP1508               0x0001180080942F20  RSL         
L2C_COP0_MAP1509               0x0001180080942F28  RSL         
L2C_COP0_MAP1510               0x0001180080942F30  RSL         
L2C_COP0_MAP1511               0x0001180080942F38  RSL         
L2C_COP0_MAP1512               0x0001180080942F40  RSL         
L2C_COP0_MAP1513               0x0001180080942F48  RSL         
L2C_COP0_MAP1514               0x0001180080942F50  RSL         
L2C_COP0_MAP1515               0x0001180080942F58  RSL         
L2C_COP0_MAP1516               0x0001180080942F60  RSL         
L2C_COP0_MAP1517               0x0001180080942F68  RSL         
L2C_COP0_MAP1518               0x0001180080942F70  RSL         
L2C_COP0_MAP1519               0x0001180080942F78  RSL         
L2C_COP0_MAP1520               0x0001180080942F80  RSL         
L2C_COP0_MAP1521               0x0001180080942F88  RSL         
L2C_COP0_MAP1522               0x0001180080942F90  RSL         
L2C_COP0_MAP1523               0x0001180080942F98  RSL         
L2C_COP0_MAP1524               0x0001180080942FA0  RSL         
L2C_COP0_MAP1525               0x0001180080942FA8  RSL         
L2C_COP0_MAP1526               0x0001180080942FB0  RSL         
L2C_COP0_MAP1527               0x0001180080942FB8  RSL         
L2C_COP0_MAP1528               0x0001180080942FC0  RSL         
L2C_COP0_MAP1529               0x0001180080942FC8  RSL         
L2C_COP0_MAP1530               0x0001180080942FD0  RSL         
L2C_COP0_MAP1531               0x0001180080942FD8  RSL         
L2C_COP0_MAP1532               0x0001180080942FE0  RSL         
L2C_COP0_MAP1533               0x0001180080942FE8  RSL         
L2C_COP0_MAP1534               0x0001180080942FF0  RSL         
L2C_COP0_MAP1535               0x0001180080942FF8  RSL         
L2C_COP0_MAP16128              0x000118008095F800  RSL         
L2C_COP0_MAP16129              0x000118008095F808  RSL         
L2C_COP0_MAP16130              0x000118008095F810  RSL         
L2C_COP0_MAP16131              0x000118008095F818  RSL         
L2C_COP0_MAP16132              0x000118008095F820  RSL         
L2C_COP0_MAP16133              0x000118008095F828  RSL         
L2C_COP0_MAP16134              0x000118008095F830  RSL         
L2C_COP0_MAP16135              0x000118008095F838  RSL         
L2C_COP0_MAP16136              0x000118008095F840  RSL         
L2C_COP0_MAP16137              0x000118008095F848  RSL         
L2C_COP0_MAP16138              0x000118008095F850  RSL         
L2C_COP0_MAP16139              0x000118008095F858  RSL         
L2C_COP0_MAP16140              0x000118008095F860  RSL         
L2C_COP0_MAP16141              0x000118008095F868  RSL         
L2C_COP0_MAP16142              0x000118008095F870  RSL         
L2C_COP0_MAP16143              0x000118008095F878  RSL         
L2C_COP0_MAP16144              0x000118008095F880  RSL         
L2C_COP0_MAP16145              0x000118008095F888  RSL         
L2C_COP0_MAP16146              0x000118008095F890  RSL         
L2C_COP0_MAP16147              0x000118008095F898  RSL         
L2C_COP0_MAP16148              0x000118008095F8A0  RSL         
L2C_COP0_MAP16149              0x000118008095F8A8  RSL         
L2C_COP0_MAP16150              0x000118008095F8B0  RSL         
L2C_COP0_MAP16151              0x000118008095F8B8  RSL         
L2C_COP0_MAP16152              0x000118008095F8C0  RSL         
L2C_COP0_MAP16153              0x000118008095F8C8  RSL         
L2C_COP0_MAP16154              0x000118008095F8D0  RSL         
L2C_COP0_MAP16155              0x000118008095F8D8  RSL         
L2C_COP0_MAP16156              0x000118008095F8E0  RSL         
L2C_COP0_MAP16157              0x000118008095F8E8  RSL         
L2C_COP0_MAP16158              0x000118008095F8F0  RSL         
L2C_COP0_MAP16159              0x000118008095F8F8  RSL         
L2C_COP0_MAP16160              0x000118008095F900  RSL         
L2C_COP0_MAP16161              0x000118008095F908  RSL         
L2C_COP0_MAP16162              0x000118008095F910  RSL         
L2C_COP0_MAP16163              0x000118008095F918  RSL         
L2C_COP0_MAP16164              0x000118008095F920  RSL         
L2C_COP0_MAP16165              0x000118008095F928  RSL         
L2C_COP0_MAP16166              0x000118008095F930  RSL         
L2C_COP0_MAP16167              0x000118008095F938  RSL         
L2C_COP0_MAP16168              0x000118008095F940  RSL         
L2C_COP0_MAP16169              0x000118008095F948  RSL         
L2C_COP0_MAP16170              0x000118008095F950  RSL         
L2C_COP0_MAP16171              0x000118008095F958  RSL         
L2C_COP0_MAP16172              0x000118008095F960  RSL         
L2C_COP0_MAP16173              0x000118008095F968  RSL         
L2C_COP0_MAP16174              0x000118008095F970  RSL         
L2C_COP0_MAP16175              0x000118008095F978  RSL         
L2C_COP0_MAP16176              0x000118008095F980  RSL         
L2C_COP0_MAP16177              0x000118008095F988  RSL         
L2C_COP0_MAP16178              0x000118008095F990  RSL         
L2C_COP0_MAP16179              0x000118008095F998  RSL         
L2C_COP0_MAP16180              0x000118008095F9A0  RSL         
L2C_COP0_MAP16181              0x000118008095F9A8  RSL         
L2C_COP0_MAP16182              0x000118008095F9B0  RSL         
L2C_COP0_MAP16183              0x000118008095F9B8  RSL         
L2C_COP0_MAP16184              0x000118008095F9C0  RSL         
L2C_COP0_MAP16185              0x000118008095F9C8  RSL         
L2C_COP0_MAP16186              0x000118008095F9D0  RSL         
L2C_COP0_MAP16187              0x000118008095F9D8  RSL         
L2C_COP0_MAP16188              0x000118008095F9E0  RSL         
L2C_COP0_MAP16189              0x000118008095F9E8  RSL         
L2C_COP0_MAP16190              0x000118008095F9F0  RSL         
L2C_COP0_MAP16191              0x000118008095F9F8  RSL         
L2C_COP0_MAP16192              0x000118008095FA00  RSL         
L2C_COP0_MAP16193              0x000118008095FA08  RSL         
L2C_COP0_MAP16194              0x000118008095FA10  RSL         
L2C_COP0_MAP16195              0x000118008095FA18  RSL         
L2C_COP0_MAP16196              0x000118008095FA20  RSL         
L2C_COP0_MAP16197              0x000118008095FA28  RSL         
L2C_COP0_MAP16198              0x000118008095FA30  RSL         
L2C_COP0_MAP16199              0x000118008095FA38  RSL         
L2C_COP0_MAP16200              0x000118008095FA40  RSL         
L2C_COP0_MAP16201              0x000118008095FA48  RSL         
L2C_COP0_MAP16202              0x000118008095FA50  RSL         
L2C_COP0_MAP16203              0x000118008095FA58  RSL         
L2C_COP0_MAP16204              0x000118008095FA60  RSL         
L2C_COP0_MAP16205              0x000118008095FA68  RSL         
L2C_COP0_MAP16206              0x000118008095FA70  RSL         
L2C_COP0_MAP16207              0x000118008095FA78  RSL         
L2C_COP0_MAP16208              0x000118008095FA80  RSL         
L2C_COP0_MAP16209              0x000118008095FA88  RSL         
L2C_COP0_MAP16210              0x000118008095FA90  RSL         
L2C_COP0_MAP16211              0x000118008095FA98  RSL         
L2C_COP0_MAP16212              0x000118008095FAA0  RSL         
L2C_COP0_MAP16213              0x000118008095FAA8  RSL         
L2C_COP0_MAP16214              0x000118008095FAB0  RSL         
L2C_COP0_MAP16215              0x000118008095FAB8  RSL         
L2C_COP0_MAP16216              0x000118008095FAC0  RSL         
L2C_COP0_MAP16217              0x000118008095FAC8  RSL         
L2C_COP0_MAP16218              0x000118008095FAD0  RSL         
L2C_COP0_MAP16219              0x000118008095FAD8  RSL         
L2C_COP0_MAP16220              0x000118008095FAE0  RSL         
L2C_COP0_MAP16221              0x000118008095FAE8  RSL         
L2C_COP0_MAP16222              0x000118008095FAF0  RSL         
L2C_COP0_MAP16223              0x000118008095FAF8  RSL         
L2C_COP0_MAP16224              0x000118008095FB00  RSL         
L2C_COP0_MAP16225              0x000118008095FB08  RSL         
L2C_COP0_MAP16226              0x000118008095FB10  RSL         
L2C_COP0_MAP16227              0x000118008095FB18  RSL         
L2C_COP0_MAP16228              0x000118008095FB20  RSL         
L2C_COP0_MAP16229              0x000118008095FB28  RSL         
L2C_COP0_MAP16230              0x000118008095FB30  RSL         
L2C_COP0_MAP16231              0x000118008095FB38  RSL         
L2C_COP0_MAP16232              0x000118008095FB40  RSL         
L2C_COP0_MAP16233              0x000118008095FB48  RSL         
L2C_COP0_MAP16234              0x000118008095FB50  RSL         
L2C_COP0_MAP16235              0x000118008095FB58  RSL         
L2C_COP0_MAP16236              0x000118008095FB60  RSL         
L2C_COP0_MAP16237              0x000118008095FB68  RSL         
L2C_COP0_MAP16238              0x000118008095FB70  RSL         
L2C_COP0_MAP16239              0x000118008095FB78  RSL         
L2C_COP0_MAP16240              0x000118008095FB80  RSL         
L2C_COP0_MAP16241              0x000118008095FB88  RSL         
L2C_COP0_MAP16242              0x000118008095FB90  RSL         
L2C_COP0_MAP16243              0x000118008095FB98  RSL         
L2C_COP0_MAP16244              0x000118008095FBA0  RSL         
L2C_COP0_MAP16245              0x000118008095FBA8  RSL         
L2C_COP0_MAP16246              0x000118008095FBB0  RSL         
L2C_COP0_MAP16247              0x000118008095FBB8  RSL         
L2C_COP0_MAP16248              0x000118008095FBC0  RSL         
L2C_COP0_MAP16249              0x000118008095FBC8  RSL         
L2C_COP0_MAP16250              0x000118008095FBD0  RSL         
L2C_COP0_MAP16251              0x000118008095FBD8  RSL         
L2C_COP0_MAP16252              0x000118008095FBE0  RSL         
L2C_COP0_MAP16253              0x000118008095FBE8  RSL         
L2C_COP0_MAP16254              0x000118008095FBF0  RSL         
L2C_COP0_MAP16255              0x000118008095FBF8  RSL         
L2C_COP0_MAP16256              0x000118008095FC00  RSL         
L2C_COP0_MAP16257              0x000118008095FC08  RSL         
L2C_COP0_MAP16258              0x000118008095FC10  RSL         
L2C_COP0_MAP16259              0x000118008095FC18  RSL         
L2C_COP0_MAP16260              0x000118008095FC20  RSL         
L2C_COP0_MAP16261              0x000118008095FC28  RSL         
L2C_COP0_MAP16262              0x000118008095FC30  RSL         
L2C_COP0_MAP16263              0x000118008095FC38  RSL         
L2C_COP0_MAP16264              0x000118008095FC40  RSL         
L2C_COP0_MAP16265              0x000118008095FC48  RSL         
L2C_COP0_MAP16266              0x000118008095FC50  RSL         
L2C_COP0_MAP16267              0x000118008095FC58  RSL         
L2C_COP0_MAP16268              0x000118008095FC60  RSL         
L2C_COP0_MAP16269              0x000118008095FC68  RSL         
L2C_COP0_MAP16270              0x000118008095FC70  RSL         
L2C_COP0_MAP16271              0x000118008095FC78  RSL         
L2C_COP0_MAP16272              0x000118008095FC80  RSL         
L2C_COP0_MAP16273              0x000118008095FC88  RSL         
L2C_COP0_MAP16274              0x000118008095FC90  RSL         
L2C_COP0_MAP16275              0x000118008095FC98  RSL         
L2C_COP0_MAP16276              0x000118008095FCA0  RSL         
L2C_COP0_MAP16277              0x000118008095FCA8  RSL         
L2C_COP0_MAP16278              0x000118008095FCB0  RSL         
L2C_COP0_MAP16279              0x000118008095FCB8  RSL         
L2C_COP0_MAP16280              0x000118008095FCC0  RSL         
L2C_COP0_MAP16281              0x000118008095FCC8  RSL         
L2C_COP0_MAP16282              0x000118008095FCD0  RSL         
L2C_COP0_MAP16283              0x000118008095FCD8  RSL         
L2C_COP0_MAP16284              0x000118008095FCE0  RSL         
L2C_COP0_MAP16285              0x000118008095FCE8  RSL         
L2C_COP0_MAP16286              0x000118008095FCF0  RSL         
L2C_COP0_MAP16287              0x000118008095FCF8  RSL         
L2C_COP0_MAP16288              0x000118008095FD00  RSL         
L2C_COP0_MAP16289              0x000118008095FD08  RSL         
L2C_COP0_MAP16290              0x000118008095FD10  RSL         
L2C_COP0_MAP16291              0x000118008095FD18  RSL         
L2C_COP0_MAP16292              0x000118008095FD20  RSL         
L2C_COP0_MAP16293              0x000118008095FD28  RSL         
L2C_COP0_MAP16294              0x000118008095FD30  RSL         
L2C_COP0_MAP16295              0x000118008095FD38  RSL         
L2C_COP0_MAP16296              0x000118008095FD40  RSL         
L2C_COP0_MAP16297              0x000118008095FD48  RSL         
L2C_COP0_MAP16298              0x000118008095FD50  RSL         
L2C_COP0_MAP16299              0x000118008095FD58  RSL         
L2C_COP0_MAP16300              0x000118008095FD60  RSL         
L2C_COP0_MAP16301              0x000118008095FD68  RSL         
L2C_COP0_MAP16302              0x000118008095FD70  RSL         
L2C_COP0_MAP16303              0x000118008095FD78  RSL         
L2C_COP0_MAP16304              0x000118008095FD80  RSL         
L2C_COP0_MAP16305              0x000118008095FD88  RSL         
L2C_COP0_MAP16306              0x000118008095FD90  RSL         
L2C_COP0_MAP16307              0x000118008095FD98  RSL         
L2C_COP0_MAP16308              0x000118008095FDA0  RSL         
L2C_COP0_MAP16309              0x000118008095FDA8  RSL         
L2C_COP0_MAP16310              0x000118008095FDB0  RSL         
L2C_COP0_MAP16311              0x000118008095FDB8  RSL         
L2C_COP0_MAP16312              0x000118008095FDC0  RSL         
L2C_COP0_MAP16313              0x000118008095FDC8  RSL         
L2C_COP0_MAP16314              0x000118008095FDD0  RSL         
L2C_COP0_MAP16315              0x000118008095FDD8  RSL         
L2C_COP0_MAP16316              0x000118008095FDE0  RSL         
L2C_COP0_MAP16317              0x000118008095FDE8  RSL         
L2C_COP0_MAP16318              0x000118008095FDF0  RSL         
L2C_COP0_MAP16319              0x000118008095FDF8  RSL         
L2C_COP0_MAP16320              0x000118008095FE00  RSL         
L2C_COP0_MAP16321              0x000118008095FE08  RSL         
L2C_COP0_MAP16322              0x000118008095FE10  RSL         
L2C_COP0_MAP16323              0x000118008095FE18  RSL         
L2C_COP0_MAP16324              0x000118008095FE20  RSL         
L2C_COP0_MAP16325              0x000118008095FE28  RSL         
L2C_COP0_MAP16326              0x000118008095FE30  RSL         
L2C_COP0_MAP16327              0x000118008095FE38  RSL         
L2C_COP0_MAP16328              0x000118008095FE40  RSL         
L2C_COP0_MAP16329              0x000118008095FE48  RSL         
L2C_COP0_MAP16330              0x000118008095FE50  RSL         
L2C_COP0_MAP16331              0x000118008095FE58  RSL         
L2C_COP0_MAP16332              0x000118008095FE60  RSL         
L2C_COP0_MAP16333              0x000118008095FE68  RSL         
L2C_COP0_MAP16334              0x000118008095FE70  RSL         
L2C_COP0_MAP16335              0x000118008095FE78  RSL         
L2C_COP0_MAP16336              0x000118008095FE80  RSL         
L2C_COP0_MAP16337              0x000118008095FE88  RSL         
L2C_COP0_MAP16338              0x000118008095FE90  RSL         
L2C_COP0_MAP16339              0x000118008095FE98  RSL         
L2C_COP0_MAP16340              0x000118008095FEA0  RSL         
L2C_COP0_MAP16341              0x000118008095FEA8  RSL         
L2C_COP0_MAP16342              0x000118008095FEB0  RSL         
L2C_COP0_MAP16343              0x000118008095FEB8  RSL         
L2C_COP0_MAP16344              0x000118008095FEC0  RSL         
L2C_COP0_MAP16345              0x000118008095FEC8  RSL         
L2C_COP0_MAP16346              0x000118008095FED0  RSL         
L2C_COP0_MAP16347              0x000118008095FED8  RSL         
L2C_COP0_MAP16348              0x000118008095FEE0  RSL         
L2C_COP0_MAP16349              0x000118008095FEE8  RSL         
L2C_COP0_MAP16350              0x000118008095FEF0  RSL         
L2C_COP0_MAP16351              0x000118008095FEF8  RSL         
L2C_COP0_MAP16352              0x000118008095FF00  RSL         
L2C_COP0_MAP16353              0x000118008095FF08  RSL         
L2C_COP0_MAP16354              0x000118008095FF10  RSL         
L2C_COP0_MAP16355              0x000118008095FF18  RSL         
L2C_COP0_MAP16356              0x000118008095FF20  RSL         
L2C_COP0_MAP16357              0x000118008095FF28  RSL         
L2C_COP0_MAP16358              0x000118008095FF30  RSL         
L2C_COP0_MAP16359              0x000118008095FF38  RSL         
L2C_COP0_MAP16360              0x000118008095FF40  RSL         
L2C_COP0_MAP16361              0x000118008095FF48  RSL         
L2C_COP0_MAP16362              0x000118008095FF50  RSL         
L2C_COP0_MAP16363              0x000118008095FF58  RSL         
L2C_COP0_MAP16364              0x000118008095FF60  RSL         
L2C_COP0_MAP16365              0x000118008095FF68  RSL         
L2C_COP0_MAP16366              0x000118008095FF70  RSL         
L2C_COP0_MAP16367              0x000118008095FF78  RSL         
L2C_COP0_MAP16368              0x000118008095FF80  RSL         
L2C_COP0_MAP16369              0x000118008095FF88  RSL         
L2C_COP0_MAP16370              0x000118008095FF90  RSL         
L2C_COP0_MAP16371              0x000118008095FF98  RSL         
L2C_COP0_MAP16372              0x000118008095FFA0  RSL         
L2C_COP0_MAP16373              0x000118008095FFA8  RSL         
L2C_COP0_MAP16374              0x000118008095FFB0  RSL         
L2C_COP0_MAP16375              0x000118008095FFB8  RSL         
L2C_COP0_MAP16376              0x000118008095FFC0  RSL         
L2C_COP0_MAP16377              0x000118008095FFC8  RSL         
L2C_COP0_MAP16378              0x000118008095FFD0  RSL         
L2C_COP0_MAP16379              0x000118008095FFD8  RSL         
L2C_COP0_MAP16380              0x000118008095FFE0  RSL         
L2C_COP0_MAP16381              0x000118008095FFE8  RSL         
L2C_COP0_MAP16382              0x000118008095FFF0  RSL         
L2C_COP0_MAP16383              0x000118008095FFF8  RSL         
L2C_CTL                        0x0001180080800000  RSL         
L2C_DUT_MAP0                   0x0001180080E00000  RSL         
L2C_DUT_MAP1                   0x0001180080E00008  RSL         
L2C_DUT_MAP2                   0x0001180080E00010  RSL         
L2C_DUT_MAP3                   0x0001180080E00018  RSL         
L2C_DUT_MAP4                   0x0001180080E00020  RSL         
L2C_DUT_MAP5                   0x0001180080E00028  RSL         
L2C_DUT_MAP6                   0x0001180080E00030  RSL         
L2C_DUT_MAP7                   0x0001180080E00038  RSL         
L2C_DUT_MAP8                   0x0001180080E00040  RSL         
L2C_DUT_MAP9                   0x0001180080E00048  RSL         
L2C_DUT_MAP10                  0x0001180080E00050  RSL         
L2C_DUT_MAP11                  0x0001180080E00058  RSL         
L2C_DUT_MAP12                  0x0001180080E00060  RSL         
L2C_DUT_MAP13                  0x0001180080E00068  RSL         
L2C_DUT_MAP14                  0x0001180080E00070  RSL         
L2C_DUT_MAP15                  0x0001180080E00078  RSL         
L2C_DUT_MAP16                  0x0001180080E00080  RSL         
L2C_DUT_MAP17                  0x0001180080E00088  RSL         
L2C_DUT_MAP18                  0x0001180080E00090  RSL         
L2C_DUT_MAP19                  0x0001180080E00098  RSL         
L2C_DUT_MAP20                  0x0001180080E000A0  RSL         
L2C_DUT_MAP21                  0x0001180080E000A8  RSL         
L2C_DUT_MAP22                  0x0001180080E000B0  RSL         
L2C_DUT_MAP23                  0x0001180080E000B8  RSL         
L2C_DUT_MAP24                  0x0001180080E000C0  RSL         
L2C_DUT_MAP25                  0x0001180080E000C8  RSL         
L2C_DUT_MAP26                  0x0001180080E000D0  RSL         
L2C_DUT_MAP27                  0x0001180080E000D8  RSL         
L2C_DUT_MAP28                  0x0001180080E000E0  RSL         
L2C_DUT_MAP29                  0x0001180080E000E8  RSL         
L2C_DUT_MAP30                  0x0001180080E000F0  RSL         
L2C_DUT_MAP31                  0x0001180080E000F8  RSL         
L2C_DUT_MAP32                  0x0001180080E00100  RSL         
L2C_DUT_MAP33                  0x0001180080E00108  RSL         
L2C_DUT_MAP34                  0x0001180080E00110  RSL         
L2C_DUT_MAP35                  0x0001180080E00118  RSL         
L2C_DUT_MAP36                  0x0001180080E00120  RSL         
L2C_DUT_MAP37                  0x0001180080E00128  RSL         
L2C_DUT_MAP38                  0x0001180080E00130  RSL         
L2C_DUT_MAP39                  0x0001180080E00138  RSL         
L2C_DUT_MAP40                  0x0001180080E00140  RSL         
L2C_DUT_MAP41                  0x0001180080E00148  RSL         
L2C_DUT_MAP42                  0x0001180080E00150  RSL         
L2C_DUT_MAP43                  0x0001180080E00158  RSL         
L2C_DUT_MAP44                  0x0001180080E00160  RSL         
L2C_DUT_MAP45                  0x0001180080E00168  RSL         
L2C_DUT_MAP46                  0x0001180080E00170  RSL         
L2C_DUT_MAP47                  0x0001180080E00178  RSL         
L2C_DUT_MAP48                  0x0001180080E00180  RSL         
L2C_DUT_MAP49                  0x0001180080E00188  RSL         
L2C_DUT_MAP50                  0x0001180080E00190  RSL         
L2C_DUT_MAP51                  0x0001180080E00198  RSL         
L2C_DUT_MAP52                  0x0001180080E001A0  RSL         
L2C_DUT_MAP53                  0x0001180080E001A8  RSL         
L2C_DUT_MAP54                  0x0001180080E001B0  RSL         
L2C_DUT_MAP55                  0x0001180080E001B8  RSL         
L2C_DUT_MAP56                  0x0001180080E001C0  RSL         
L2C_DUT_MAP57                  0x0001180080E001C8  RSL         
L2C_DUT_MAP58                  0x0001180080E001D0  RSL         
L2C_DUT_MAP59                  0x0001180080E001D8  RSL         
L2C_DUT_MAP60                  0x0001180080E001E0  RSL         
L2C_DUT_MAP61                  0x0001180080E001E8  RSL         
L2C_DUT_MAP62                  0x0001180080E001F0  RSL         
L2C_DUT_MAP63                  0x0001180080E001F8  RSL         
L2C_DUT_MAP64                  0x0001180080E00200  RSL         
L2C_DUT_MAP65                  0x0001180080E00208  RSL         
L2C_DUT_MAP66                  0x0001180080E00210  RSL         
L2C_DUT_MAP67                  0x0001180080E00218  RSL         
L2C_DUT_MAP68                  0x0001180080E00220  RSL         
L2C_DUT_MAP69                  0x0001180080E00228  RSL         
L2C_DUT_MAP70                  0x0001180080E00230  RSL         
L2C_DUT_MAP71                  0x0001180080E00238  RSL         
L2C_DUT_MAP72                  0x0001180080E00240  RSL         
L2C_DUT_MAP73                  0x0001180080E00248  RSL         
L2C_DUT_MAP74                  0x0001180080E00250  RSL         
L2C_DUT_MAP75                  0x0001180080E00258  RSL         
L2C_DUT_MAP76                  0x0001180080E00260  RSL         
L2C_DUT_MAP77                  0x0001180080E00268  RSL         
L2C_DUT_MAP78                  0x0001180080E00270  RSL         
L2C_DUT_MAP79                  0x0001180080E00278  RSL         
L2C_DUT_MAP80                  0x0001180080E00280  RSL         
L2C_DUT_MAP81                  0x0001180080E00288  RSL         
L2C_DUT_MAP82                  0x0001180080E00290  RSL         
L2C_DUT_MAP83                  0x0001180080E00298  RSL         
L2C_DUT_MAP84                  0x0001180080E002A0  RSL         
L2C_DUT_MAP85                  0x0001180080E002A8  RSL         
L2C_DUT_MAP86                  0x0001180080E002B0  RSL         
L2C_DUT_MAP87                  0x0001180080E002B8  RSL         
L2C_DUT_MAP88                  0x0001180080E002C0  RSL         
L2C_DUT_MAP89                  0x0001180080E002C8  RSL         
L2C_DUT_MAP90                  0x0001180080E002D0  RSL         
L2C_DUT_MAP91                  0x0001180080E002D8  RSL         
L2C_DUT_MAP92                  0x0001180080E002E0  RSL         
L2C_DUT_MAP93                  0x0001180080E002E8  RSL         
L2C_DUT_MAP94                  0x0001180080E002F0  RSL         
L2C_DUT_MAP95                  0x0001180080E002F8  RSL         
L2C_DUT_MAP96                  0x0001180080E00300  RSL         
L2C_DUT_MAP97                  0x0001180080E00308  RSL         
L2C_DUT_MAP98                  0x0001180080E00310  RSL         
L2C_DUT_MAP99                  0x0001180080E00318  RSL         
L2C_DUT_MAP100                 0x0001180080E00320  RSL         
L2C_DUT_MAP101                 0x0001180080E00328  RSL         
L2C_DUT_MAP102                 0x0001180080E00330  RSL         
L2C_DUT_MAP103                 0x0001180080E00338  RSL         
L2C_DUT_MAP104                 0x0001180080E00340  RSL         
L2C_DUT_MAP105                 0x0001180080E00348  RSL         
L2C_DUT_MAP106                 0x0001180080E00350  RSL         
L2C_DUT_MAP107                 0x0001180080E00358  RSL         
L2C_DUT_MAP108                 0x0001180080E00360  RSL         
L2C_DUT_MAP109                 0x0001180080E00368  RSL         
L2C_DUT_MAP110                 0x0001180080E00370  RSL         
L2C_DUT_MAP111                 0x0001180080E00378  RSL         
L2C_DUT_MAP112                 0x0001180080E00380  RSL         
L2C_DUT_MAP113                 0x0001180080E00388  RSL         
L2C_DUT_MAP114                 0x0001180080E00390  RSL         
L2C_DUT_MAP115                 0x0001180080E00398  RSL         
L2C_DUT_MAP116                 0x0001180080E003A0  RSL         
L2C_DUT_MAP117                 0x0001180080E003A8  RSL         
L2C_DUT_MAP118                 0x0001180080E003B0  RSL         
L2C_DUT_MAP119                 0x0001180080E003B8  RSL         
L2C_DUT_MAP120                 0x0001180080E003C0  RSL         
L2C_DUT_MAP121                 0x0001180080E003C8  RSL         
L2C_DUT_MAP122                 0x0001180080E003D0  RSL         
L2C_DUT_MAP123                 0x0001180080E003D8  RSL         
L2C_DUT_MAP124                 0x0001180080E003E0  RSL         
L2C_DUT_MAP125                 0x0001180080E003E8  RSL         
L2C_DUT_MAP126                 0x0001180080E003F0  RSL         
L2C_DUT_MAP127                 0x0001180080E003F8  RSL         
L2C_DUT_MAP128                 0x0001180080E00400  RSL         
L2C_DUT_MAP129                 0x0001180080E00408  RSL         
L2C_DUT_MAP130                 0x0001180080E00410  RSL         
L2C_DUT_MAP131                 0x0001180080E00418  RSL         
L2C_DUT_MAP132                 0x0001180080E00420  RSL         
L2C_DUT_MAP133                 0x0001180080E00428  RSL         
L2C_DUT_MAP134                 0x0001180080E00430  RSL         
L2C_DUT_MAP135                 0x0001180080E00438  RSL         
L2C_DUT_MAP136                 0x0001180080E00440  RSL         
L2C_DUT_MAP137                 0x0001180080E00448  RSL         
L2C_DUT_MAP138                 0x0001180080E00450  RSL         
L2C_DUT_MAP139                 0x0001180080E00458  RSL         
L2C_DUT_MAP140                 0x0001180080E00460  RSL         
L2C_DUT_MAP141                 0x0001180080E00468  RSL         
L2C_DUT_MAP142                 0x0001180080E00470  RSL         
L2C_DUT_MAP143                 0x0001180080E00478  RSL         
L2C_DUT_MAP144                 0x0001180080E00480  RSL         
L2C_DUT_MAP145                 0x0001180080E00488  RSL         
L2C_DUT_MAP146                 0x0001180080E00490  RSL         
L2C_DUT_MAP147                 0x0001180080E00498  RSL         
L2C_DUT_MAP148                 0x0001180080E004A0  RSL         
L2C_DUT_MAP149                 0x0001180080E004A8  RSL         
L2C_DUT_MAP150                 0x0001180080E004B0  RSL         
L2C_DUT_MAP151                 0x0001180080E004B8  RSL         
L2C_DUT_MAP152                 0x0001180080E004C0  RSL         
L2C_DUT_MAP153                 0x0001180080E004C8  RSL         
L2C_DUT_MAP154                 0x0001180080E004D0  RSL         
L2C_DUT_MAP155                 0x0001180080E004D8  RSL         
L2C_DUT_MAP156                 0x0001180080E004E0  RSL         
L2C_DUT_MAP157                 0x0001180080E004E8  RSL         
L2C_DUT_MAP158                 0x0001180080E004F0  RSL         
L2C_DUT_MAP159                 0x0001180080E004F8  RSL         
L2C_DUT_MAP160                 0x0001180080E00500  RSL         
L2C_DUT_MAP161                 0x0001180080E00508  RSL         
L2C_DUT_MAP162                 0x0001180080E00510  RSL         
L2C_DUT_MAP163                 0x0001180080E00518  RSL         
L2C_DUT_MAP164                 0x0001180080E00520  RSL         
L2C_DUT_MAP165                 0x0001180080E00528  RSL         
L2C_DUT_MAP166                 0x0001180080E00530  RSL         
L2C_DUT_MAP167                 0x0001180080E00538  RSL         
L2C_DUT_MAP168                 0x0001180080E00540  RSL         
L2C_DUT_MAP169                 0x0001180080E00548  RSL         
L2C_DUT_MAP170                 0x0001180080E00550  RSL         
L2C_DUT_MAP171                 0x0001180080E00558  RSL         
L2C_DUT_MAP172                 0x0001180080E00560  RSL         
L2C_DUT_MAP173                 0x0001180080E00568  RSL         
L2C_DUT_MAP174                 0x0001180080E00570  RSL         
L2C_DUT_MAP175                 0x0001180080E00578  RSL         
L2C_DUT_MAP176                 0x0001180080E00580  RSL         
L2C_DUT_MAP177                 0x0001180080E00588  RSL         
L2C_DUT_MAP178                 0x0001180080E00590  RSL         
L2C_DUT_MAP179                 0x0001180080E00598  RSL         
L2C_DUT_MAP180                 0x0001180080E005A0  RSL         
L2C_DUT_MAP181                 0x0001180080E005A8  RSL         
L2C_DUT_MAP182                 0x0001180080E005B0  RSL         
L2C_DUT_MAP183                 0x0001180080E005B8  RSL         
L2C_DUT_MAP184                 0x0001180080E005C0  RSL         
L2C_DUT_MAP185                 0x0001180080E005C8  RSL         
L2C_DUT_MAP186                 0x0001180080E005D0  RSL         
L2C_DUT_MAP187                 0x0001180080E005D8  RSL         
L2C_DUT_MAP188                 0x0001180080E005E0  RSL         
L2C_DUT_MAP189                 0x0001180080E005E8  RSL         
L2C_DUT_MAP190                 0x0001180080E005F0  RSL         
L2C_DUT_MAP191                 0x0001180080E005F8  RSL         
L2C_DUT_MAP192                 0x0001180080E00600  RSL         
L2C_DUT_MAP193                 0x0001180080E00608  RSL         
L2C_DUT_MAP194                 0x0001180080E00610  RSL         
L2C_DUT_MAP195                 0x0001180080E00618  RSL         
L2C_DUT_MAP196                 0x0001180080E00620  RSL         
L2C_DUT_MAP197                 0x0001180080E00628  RSL         
L2C_DUT_MAP198                 0x0001180080E00630  RSL         
L2C_DUT_MAP199                 0x0001180080E00638  RSL         
L2C_DUT_MAP200                 0x0001180080E00640  RSL         
L2C_DUT_MAP201                 0x0001180080E00648  RSL         
L2C_DUT_MAP202                 0x0001180080E00650  RSL         
L2C_DUT_MAP203                 0x0001180080E00658  RSL         
L2C_DUT_MAP204                 0x0001180080E00660  RSL         
L2C_DUT_MAP205                 0x0001180080E00668  RSL         
L2C_DUT_MAP206                 0x0001180080E00670  RSL         
L2C_DUT_MAP207                 0x0001180080E00678  RSL         
L2C_DUT_MAP208                 0x0001180080E00680  RSL         
L2C_DUT_MAP209                 0x0001180080E00688  RSL         
L2C_DUT_MAP210                 0x0001180080E00690  RSL         
L2C_DUT_MAP211                 0x0001180080E00698  RSL         
L2C_DUT_MAP212                 0x0001180080E006A0  RSL         
L2C_DUT_MAP213                 0x0001180080E006A8  RSL         
L2C_DUT_MAP214                 0x0001180080E006B0  RSL         
L2C_DUT_MAP215                 0x0001180080E006B8  RSL         
L2C_DUT_MAP216                 0x0001180080E006C0  RSL         
L2C_DUT_MAP217                 0x0001180080E006C8  RSL         
L2C_DUT_MAP218                 0x0001180080E006D0  RSL         
L2C_DUT_MAP219                 0x0001180080E006D8  RSL         
L2C_DUT_MAP220                 0x0001180080E006E0  RSL         
L2C_DUT_MAP221                 0x0001180080E006E8  RSL         
L2C_DUT_MAP222                 0x0001180080E006F0  RSL         
L2C_DUT_MAP223                 0x0001180080E006F8  RSL         
L2C_DUT_MAP224                 0x0001180080E00700  RSL         
L2C_DUT_MAP225                 0x0001180080E00708  RSL         
L2C_DUT_MAP226                 0x0001180080E00710  RSL         
L2C_DUT_MAP227                 0x0001180080E00718  RSL         
L2C_DUT_MAP228                 0x0001180080E00720  RSL         
L2C_DUT_MAP229                 0x0001180080E00728  RSL         
L2C_DUT_MAP230                 0x0001180080E00730  RSL         
L2C_DUT_MAP231                 0x0001180080E00738  RSL         
L2C_DUT_MAP232                 0x0001180080E00740  RSL         
L2C_DUT_MAP233                 0x0001180080E00748  RSL         
L2C_DUT_MAP234                 0x0001180080E00750  RSL         
L2C_DUT_MAP235                 0x0001180080E00758  RSL         
L2C_DUT_MAP236                 0x0001180080E00760  RSL         
L2C_DUT_MAP237                 0x0001180080E00768  RSL         
L2C_DUT_MAP238                 0x0001180080E00770  RSL         
L2C_DUT_MAP239                 0x0001180080E00778  RSL         
L2C_DUT_MAP240                 0x0001180080E00780  RSL         
L2C_DUT_MAP241                 0x0001180080E00788  RSL         
L2C_DUT_MAP242                 0x0001180080E00790  RSL         
L2C_DUT_MAP243                 0x0001180080E00798  RSL         
L2C_DUT_MAP244                 0x0001180080E007A0  RSL         
L2C_DUT_MAP245                 0x0001180080E007A8  RSL         
L2C_DUT_MAP246                 0x0001180080E007B0  RSL         
L2C_DUT_MAP247                 0x0001180080E007B8  RSL         
L2C_DUT_MAP248                 0x0001180080E007C0  RSL         
L2C_DUT_MAP249                 0x0001180080E007C8  RSL         
L2C_DUT_MAP250                 0x0001180080E007D0  RSL         
L2C_DUT_MAP251                 0x0001180080E007D8  RSL         
L2C_DUT_MAP252                 0x0001180080E007E0  RSL         
L2C_DUT_MAP253                 0x0001180080E007E8  RSL         
L2C_DUT_MAP254                 0x0001180080E007F0  RSL         
L2C_DUT_MAP255                 0x0001180080E007F8  RSL         
L2C_DUT_MAP256                 0x0001180080E00800  RSL         
L2C_DUT_MAP257                 0x0001180080E00808  RSL         
L2C_DUT_MAP258                 0x0001180080E00810  RSL         
L2C_DUT_MAP259                 0x0001180080E00818  RSL         
L2C_DUT_MAP260                 0x0001180080E00820  RSL         
L2C_DUT_MAP261                 0x0001180080E00828  RSL         
L2C_DUT_MAP262                 0x0001180080E00830  RSL         
L2C_DUT_MAP263                 0x0001180080E00838  RSL         
L2C_DUT_MAP264                 0x0001180080E00840  RSL         
L2C_DUT_MAP265                 0x0001180080E00848  RSL         
L2C_DUT_MAP266                 0x0001180080E00850  RSL         
L2C_DUT_MAP267                 0x0001180080E00858  RSL         
L2C_DUT_MAP268                 0x0001180080E00860  RSL         
L2C_DUT_MAP269                 0x0001180080E00868  RSL         
L2C_DUT_MAP270                 0x0001180080E00870  RSL         
L2C_DUT_MAP271                 0x0001180080E00878  RSL         
L2C_DUT_MAP272                 0x0001180080E00880  RSL         
L2C_DUT_MAP273                 0x0001180080E00888  RSL         
L2C_DUT_MAP274                 0x0001180080E00890  RSL         
L2C_DUT_MAP275                 0x0001180080E00898  RSL         
L2C_DUT_MAP276                 0x0001180080E008A0  RSL         
L2C_DUT_MAP277                 0x0001180080E008A8  RSL         
L2C_DUT_MAP278                 0x0001180080E008B0  RSL         
L2C_DUT_MAP279                 0x0001180080E008B8  RSL         
L2C_DUT_MAP280                 0x0001180080E008C0  RSL         
L2C_DUT_MAP281                 0x0001180080E008C8  RSL         
L2C_DUT_MAP282                 0x0001180080E008D0  RSL         
L2C_DUT_MAP283                 0x0001180080E008D8  RSL         
L2C_DUT_MAP284                 0x0001180080E008E0  RSL         
L2C_DUT_MAP285                 0x0001180080E008E8  RSL         
L2C_DUT_MAP286                 0x0001180080E008F0  RSL         
L2C_DUT_MAP287                 0x0001180080E008F8  RSL         
L2C_DUT_MAP288                 0x0001180080E00900  RSL         
L2C_DUT_MAP289                 0x0001180080E00908  RSL         
L2C_DUT_MAP290                 0x0001180080E00910  RSL         
L2C_DUT_MAP291                 0x0001180080E00918  RSL         
L2C_DUT_MAP292                 0x0001180080E00920  RSL         
L2C_DUT_MAP293                 0x0001180080E00928  RSL         
L2C_DUT_MAP294                 0x0001180080E00930  RSL         
L2C_DUT_MAP295                 0x0001180080E00938  RSL         
L2C_DUT_MAP296                 0x0001180080E00940  RSL         
L2C_DUT_MAP297                 0x0001180080E00948  RSL         
L2C_DUT_MAP298                 0x0001180080E00950  RSL         
L2C_DUT_MAP299                 0x0001180080E00958  RSL         
L2C_DUT_MAP300                 0x0001180080E00960  RSL         
L2C_DUT_MAP301                 0x0001180080E00968  RSL         
L2C_DUT_MAP302                 0x0001180080E00970  RSL         
L2C_DUT_MAP303                 0x0001180080E00978  RSL         
L2C_DUT_MAP304                 0x0001180080E00980  RSL         
L2C_DUT_MAP305                 0x0001180080E00988  RSL         
L2C_DUT_MAP306                 0x0001180080E00990  RSL         
L2C_DUT_MAP307                 0x0001180080E00998  RSL         
L2C_DUT_MAP308                 0x0001180080E009A0  RSL         
L2C_DUT_MAP309                 0x0001180080E009A8  RSL         
L2C_DUT_MAP310                 0x0001180080E009B0  RSL         
L2C_DUT_MAP311                 0x0001180080E009B8  RSL         
L2C_DUT_MAP312                 0x0001180080E009C0  RSL         
L2C_DUT_MAP313                 0x0001180080E009C8  RSL         
L2C_DUT_MAP314                 0x0001180080E009D0  RSL         
L2C_DUT_MAP315                 0x0001180080E009D8  RSL         
L2C_DUT_MAP316                 0x0001180080E009E0  RSL         
L2C_DUT_MAP317                 0x0001180080E009E8  RSL         
L2C_DUT_MAP318                 0x0001180080E009F0  RSL         
L2C_DUT_MAP319                 0x0001180080E009F8  RSL         
L2C_DUT_MAP320                 0x0001180080E00A00  RSL         
L2C_DUT_MAP321                 0x0001180080E00A08  RSL         
L2C_DUT_MAP322                 0x0001180080E00A10  RSL         
L2C_DUT_MAP323                 0x0001180080E00A18  RSL         
L2C_DUT_MAP324                 0x0001180080E00A20  RSL         
L2C_DUT_MAP325                 0x0001180080E00A28  RSL         
L2C_DUT_MAP326                 0x0001180080E00A30  RSL         
L2C_DUT_MAP327                 0x0001180080E00A38  RSL         
L2C_DUT_MAP328                 0x0001180080E00A40  RSL         
L2C_DUT_MAP329                 0x0001180080E00A48  RSL         
L2C_DUT_MAP330                 0x0001180080E00A50  RSL         
L2C_DUT_MAP331                 0x0001180080E00A58  RSL         
L2C_DUT_MAP332                 0x0001180080E00A60  RSL         
L2C_DUT_MAP333                 0x0001180080E00A68  RSL         
L2C_DUT_MAP334                 0x0001180080E00A70  RSL         
L2C_DUT_MAP335                 0x0001180080E00A78  RSL         
L2C_DUT_MAP336                 0x0001180080E00A80  RSL         
L2C_DUT_MAP337                 0x0001180080E00A88  RSL         
L2C_DUT_MAP338                 0x0001180080E00A90  RSL         
L2C_DUT_MAP339                 0x0001180080E00A98  RSL         
L2C_DUT_MAP340                 0x0001180080E00AA0  RSL         
L2C_DUT_MAP341                 0x0001180080E00AA8  RSL         
L2C_DUT_MAP342                 0x0001180080E00AB0  RSL         
L2C_DUT_MAP343                 0x0001180080E00AB8  RSL         
L2C_DUT_MAP344                 0x0001180080E00AC0  RSL         
L2C_DUT_MAP345                 0x0001180080E00AC8  RSL         
L2C_DUT_MAP346                 0x0001180080E00AD0  RSL         
L2C_DUT_MAP347                 0x0001180080E00AD8  RSL         
L2C_DUT_MAP348                 0x0001180080E00AE0  RSL         
L2C_DUT_MAP349                 0x0001180080E00AE8  RSL         
L2C_DUT_MAP350                 0x0001180080E00AF0  RSL         
L2C_DUT_MAP351                 0x0001180080E00AF8  RSL         
L2C_DUT_MAP352                 0x0001180080E00B00  RSL         
L2C_DUT_MAP353                 0x0001180080E00B08  RSL         
L2C_DUT_MAP354                 0x0001180080E00B10  RSL         
L2C_DUT_MAP355                 0x0001180080E00B18  RSL         
L2C_DUT_MAP356                 0x0001180080E00B20  RSL         
L2C_DUT_MAP357                 0x0001180080E00B28  RSL         
L2C_DUT_MAP358                 0x0001180080E00B30  RSL         
L2C_DUT_MAP359                 0x0001180080E00B38  RSL         
L2C_DUT_MAP360                 0x0001180080E00B40  RSL         
L2C_DUT_MAP361                 0x0001180080E00B48  RSL         
L2C_DUT_MAP362                 0x0001180080E00B50  RSL         
L2C_DUT_MAP363                 0x0001180080E00B58  RSL         
L2C_DUT_MAP364                 0x0001180080E00B60  RSL         
L2C_DUT_MAP365                 0x0001180080E00B68  RSL         
L2C_DUT_MAP366                 0x0001180080E00B70  RSL         
L2C_DUT_MAP367                 0x0001180080E00B78  RSL         
L2C_DUT_MAP368                 0x0001180080E00B80  RSL         
L2C_DUT_MAP369                 0x0001180080E00B88  RSL         
L2C_DUT_MAP370                 0x0001180080E00B90  RSL         
L2C_DUT_MAP371                 0x0001180080E00B98  RSL         
L2C_DUT_MAP372                 0x0001180080E00BA0  RSL         
L2C_DUT_MAP373                 0x0001180080E00BA8  RSL         
L2C_DUT_MAP374                 0x0001180080E00BB0  RSL         
L2C_DUT_MAP375                 0x0001180080E00BB8  RSL         
L2C_DUT_MAP376                 0x0001180080E00BC0  RSL         
L2C_DUT_MAP377                 0x0001180080E00BC8  RSL         
L2C_DUT_MAP378                 0x0001180080E00BD0  RSL         
L2C_DUT_MAP379                 0x0001180080E00BD8  RSL         
L2C_DUT_MAP380                 0x0001180080E00BE0  RSL         
L2C_DUT_MAP381                 0x0001180080E00BE8  RSL         
L2C_DUT_MAP382                 0x0001180080E00BF0  RSL         
L2C_DUT_MAP383                 0x0001180080E00BF8  RSL         
L2C_DUT_MAP384                 0x0001180080E00C00  RSL         
L2C_DUT_MAP385                 0x0001180080E00C08  RSL         
L2C_DUT_MAP386                 0x0001180080E00C10  RSL         
L2C_DUT_MAP387                 0x0001180080E00C18  RSL         
L2C_DUT_MAP388                 0x0001180080E00C20  RSL         
L2C_DUT_MAP389                 0x0001180080E00C28  RSL         
L2C_DUT_MAP390                 0x0001180080E00C30  RSL         
L2C_DUT_MAP391                 0x0001180080E00C38  RSL         
L2C_DUT_MAP392                 0x0001180080E00C40  RSL         
L2C_DUT_MAP393                 0x0001180080E00C48  RSL         
L2C_DUT_MAP394                 0x0001180080E00C50  RSL         
L2C_DUT_MAP395                 0x0001180080E00C58  RSL         
L2C_DUT_MAP396                 0x0001180080E00C60  RSL         
L2C_DUT_MAP397                 0x0001180080E00C68  RSL         
L2C_DUT_MAP398                 0x0001180080E00C70  RSL         
L2C_DUT_MAP399                 0x0001180080E00C78  RSL         
L2C_DUT_MAP400                 0x0001180080E00C80  RSL         
L2C_DUT_MAP401                 0x0001180080E00C88  RSL         
L2C_DUT_MAP402                 0x0001180080E00C90  RSL         
L2C_DUT_MAP403                 0x0001180080E00C98  RSL         
L2C_DUT_MAP404                 0x0001180080E00CA0  RSL         
L2C_DUT_MAP405                 0x0001180080E00CA8  RSL         
L2C_DUT_MAP406                 0x0001180080E00CB0  RSL         
L2C_DUT_MAP407                 0x0001180080E00CB8  RSL         
L2C_DUT_MAP408                 0x0001180080E00CC0  RSL         
L2C_DUT_MAP409                 0x0001180080E00CC8  RSL         
L2C_DUT_MAP410                 0x0001180080E00CD0  RSL         
L2C_DUT_MAP411                 0x0001180080E00CD8  RSL         
L2C_DUT_MAP412                 0x0001180080E00CE0  RSL         
L2C_DUT_MAP413                 0x0001180080E00CE8  RSL         
L2C_DUT_MAP414                 0x0001180080E00CF0  RSL         
L2C_DUT_MAP415                 0x0001180080E00CF8  RSL         
L2C_DUT_MAP416                 0x0001180080E00D00  RSL         
L2C_DUT_MAP417                 0x0001180080E00D08  RSL         
L2C_DUT_MAP418                 0x0001180080E00D10  RSL         
L2C_DUT_MAP419                 0x0001180080E00D18  RSL         
L2C_DUT_MAP420                 0x0001180080E00D20  RSL         
L2C_DUT_MAP421                 0x0001180080E00D28  RSL         
L2C_DUT_MAP422                 0x0001180080E00D30  RSL         
L2C_DUT_MAP423                 0x0001180080E00D38  RSL         
L2C_DUT_MAP424                 0x0001180080E00D40  RSL         
L2C_DUT_MAP425                 0x0001180080E00D48  RSL         
L2C_DUT_MAP426                 0x0001180080E00D50  RSL         
L2C_DUT_MAP427                 0x0001180080E00D58  RSL         
L2C_DUT_MAP428                 0x0001180080E00D60  RSL         
L2C_DUT_MAP429                 0x0001180080E00D68  RSL         
L2C_DUT_MAP430                 0x0001180080E00D70  RSL         
L2C_DUT_MAP431                 0x0001180080E00D78  RSL         
L2C_DUT_MAP432                 0x0001180080E00D80  RSL         
L2C_DUT_MAP433                 0x0001180080E00D88  RSL         
L2C_DUT_MAP434                 0x0001180080E00D90  RSL         
L2C_DUT_MAP435                 0x0001180080E00D98  RSL         
L2C_DUT_MAP436                 0x0001180080E00DA0  RSL         
L2C_DUT_MAP437                 0x0001180080E00DA8  RSL         
L2C_DUT_MAP438                 0x0001180080E00DB0  RSL         
L2C_DUT_MAP439                 0x0001180080E00DB8  RSL         
L2C_DUT_MAP440                 0x0001180080E00DC0  RSL         
L2C_DUT_MAP441                 0x0001180080E00DC8  RSL         
L2C_DUT_MAP442                 0x0001180080E00DD0  RSL         
L2C_DUT_MAP443                 0x0001180080E00DD8  RSL         
L2C_DUT_MAP444                 0x0001180080E00DE0  RSL         
L2C_DUT_MAP445                 0x0001180080E00DE8  RSL         
L2C_DUT_MAP446                 0x0001180080E00DF0  RSL         
L2C_DUT_MAP447                 0x0001180080E00DF8  RSL         
L2C_DUT_MAP448                 0x0001180080E00E00  RSL         
L2C_DUT_MAP449                 0x0001180080E00E08  RSL         
L2C_DUT_MAP450                 0x0001180080E00E10  RSL         
L2C_DUT_MAP451                 0x0001180080E00E18  RSL         
L2C_DUT_MAP452                 0x0001180080E00E20  RSL         
L2C_DUT_MAP453                 0x0001180080E00E28  RSL         
L2C_DUT_MAP454                 0x0001180080E00E30  RSL         
L2C_DUT_MAP455                 0x0001180080E00E38  RSL         
L2C_DUT_MAP456                 0x0001180080E00E40  RSL         
L2C_DUT_MAP457                 0x0001180080E00E48  RSL         
L2C_DUT_MAP458                 0x0001180080E00E50  RSL         
L2C_DUT_MAP459                 0x0001180080E00E58  RSL         
L2C_DUT_MAP460                 0x0001180080E00E60  RSL         
L2C_DUT_MAP461                 0x0001180080E00E68  RSL         
L2C_DUT_MAP462                 0x0001180080E00E70  RSL         
L2C_DUT_MAP463                 0x0001180080E00E78  RSL         
L2C_DUT_MAP464                 0x0001180080E00E80  RSL         
L2C_DUT_MAP465                 0x0001180080E00E88  RSL         
L2C_DUT_MAP466                 0x0001180080E00E90  RSL         
L2C_DUT_MAP467                 0x0001180080E00E98  RSL         
L2C_DUT_MAP468                 0x0001180080E00EA0  RSL         
L2C_DUT_MAP469                 0x0001180080E00EA8  RSL         
L2C_DUT_MAP470                 0x0001180080E00EB0  RSL         
L2C_DUT_MAP471                 0x0001180080E00EB8  RSL         
L2C_DUT_MAP472                 0x0001180080E00EC0  RSL         
L2C_DUT_MAP473                 0x0001180080E00EC8  RSL         
L2C_DUT_MAP474                 0x0001180080E00ED0  RSL         
L2C_DUT_MAP475                 0x0001180080E00ED8  RSL         
L2C_DUT_MAP476                 0x0001180080E00EE0  RSL         
L2C_DUT_MAP477                 0x0001180080E00EE8  RSL         
L2C_DUT_MAP478                 0x0001180080E00EF0  RSL         
L2C_DUT_MAP479                 0x0001180080E00EF8  RSL         
L2C_DUT_MAP480                 0x0001180080E00F00  RSL         
L2C_DUT_MAP481                 0x0001180080E00F08  RSL         
L2C_DUT_MAP482                 0x0001180080E00F10  RSL         
L2C_DUT_MAP483                 0x0001180080E00F18  RSL         
L2C_DUT_MAP484                 0x0001180080E00F20  RSL         
L2C_DUT_MAP485                 0x0001180080E00F28  RSL         
L2C_DUT_MAP486                 0x0001180080E00F30  RSL         
L2C_DUT_MAP487                 0x0001180080E00F38  RSL         
L2C_DUT_MAP488                 0x0001180080E00F40  RSL         
L2C_DUT_MAP489                 0x0001180080E00F48  RSL         
L2C_DUT_MAP490                 0x0001180080E00F50  RSL         
L2C_DUT_MAP491                 0x0001180080E00F58  RSL         
L2C_DUT_MAP492                 0x0001180080E00F60  RSL         
L2C_DUT_MAP493                 0x0001180080E00F68  RSL         
L2C_DUT_MAP494                 0x0001180080E00F70  RSL         
L2C_DUT_MAP495                 0x0001180080E00F78  RSL         
L2C_DUT_MAP496                 0x0001180080E00F80  RSL         
L2C_DUT_MAP497                 0x0001180080E00F88  RSL         
L2C_DUT_MAP498                 0x0001180080E00F90  RSL         
L2C_DUT_MAP499                 0x0001180080E00F98  RSL         
L2C_DUT_MAP500                 0x0001180080E00FA0  RSL         
L2C_DUT_MAP501                 0x0001180080E00FA8  RSL         
L2C_DUT_MAP502                 0x0001180080E00FB0  RSL         
L2C_DUT_MAP503                 0x0001180080E00FB8  RSL         
L2C_DUT_MAP504                 0x0001180080E00FC0  RSL         
L2C_DUT_MAP505                 0x0001180080E00FC8  RSL         
L2C_DUT_MAP506                 0x0001180080E00FD0  RSL         
L2C_DUT_MAP507                 0x0001180080E00FD8  RSL         
L2C_DUT_MAP508                 0x0001180080E00FE0  RSL         
L2C_DUT_MAP509                 0x0001180080E00FE8  RSL         
L2C_DUT_MAP510                 0x0001180080E00FF0  RSL         
L2C_DUT_MAP511                 0x0001180080E00FF8  RSL         
L2C_DUT_MAP512                 0x0001180080E01000  RSL         
L2C_DUT_MAP513                 0x0001180080E01008  RSL         
L2C_DUT_MAP514                 0x0001180080E01010  RSL         
L2C_DUT_MAP515                 0x0001180080E01018  RSL         
L2C_DUT_MAP516                 0x0001180080E01020  RSL         
L2C_DUT_MAP517                 0x0001180080E01028  RSL         
L2C_DUT_MAP518                 0x0001180080E01030  RSL         
L2C_DUT_MAP519                 0x0001180080E01038  RSL         
L2C_DUT_MAP520                 0x0001180080E01040  RSL         
L2C_DUT_MAP521                 0x0001180080E01048  RSL         
L2C_DUT_MAP522                 0x0001180080E01050  RSL         
L2C_DUT_MAP523                 0x0001180080E01058  RSL         
L2C_DUT_MAP524                 0x0001180080E01060  RSL         
L2C_DUT_MAP525                 0x0001180080E01068  RSL         
L2C_DUT_MAP526                 0x0001180080E01070  RSL         
L2C_DUT_MAP527                 0x0001180080E01078  RSL         
L2C_DUT_MAP528                 0x0001180080E01080  RSL         
L2C_DUT_MAP529                 0x0001180080E01088  RSL         
L2C_DUT_MAP530                 0x0001180080E01090  RSL         
L2C_DUT_MAP531                 0x0001180080E01098  RSL         
L2C_DUT_MAP532                 0x0001180080E010A0  RSL         
L2C_DUT_MAP533                 0x0001180080E010A8  RSL         
L2C_DUT_MAP534                 0x0001180080E010B0  RSL         
L2C_DUT_MAP535                 0x0001180080E010B8  RSL         
L2C_DUT_MAP536                 0x0001180080E010C0  RSL         
L2C_DUT_MAP537                 0x0001180080E010C8  RSL         
L2C_DUT_MAP538                 0x0001180080E010D0  RSL         
L2C_DUT_MAP539                 0x0001180080E010D8  RSL         
L2C_DUT_MAP540                 0x0001180080E010E0  RSL         
L2C_DUT_MAP541                 0x0001180080E010E8  RSL         
L2C_DUT_MAP542                 0x0001180080E010F0  RSL         
L2C_DUT_MAP543                 0x0001180080E010F8  RSL         
L2C_DUT_MAP544                 0x0001180080E01100  RSL         
L2C_DUT_MAP545                 0x0001180080E01108  RSL         
L2C_DUT_MAP546                 0x0001180080E01110  RSL         
L2C_DUT_MAP547                 0x0001180080E01118  RSL         
L2C_DUT_MAP548                 0x0001180080E01120  RSL         
L2C_DUT_MAP549                 0x0001180080E01128  RSL         
L2C_DUT_MAP550                 0x0001180080E01130  RSL         
L2C_DUT_MAP551                 0x0001180080E01138  RSL         
L2C_DUT_MAP552                 0x0001180080E01140  RSL         
L2C_DUT_MAP553                 0x0001180080E01148  RSL         
L2C_DUT_MAP554                 0x0001180080E01150  RSL         
L2C_DUT_MAP555                 0x0001180080E01158  RSL         
L2C_DUT_MAP556                 0x0001180080E01160  RSL         
L2C_DUT_MAP557                 0x0001180080E01168  RSL         
L2C_DUT_MAP558                 0x0001180080E01170  RSL         
L2C_DUT_MAP559                 0x0001180080E01178  RSL         
L2C_DUT_MAP560                 0x0001180080E01180  RSL         
L2C_DUT_MAP561                 0x0001180080E01188  RSL         
L2C_DUT_MAP562                 0x0001180080E01190  RSL         
L2C_DUT_MAP563                 0x0001180080E01198  RSL         
L2C_DUT_MAP564                 0x0001180080E011A0  RSL         
L2C_DUT_MAP565                 0x0001180080E011A8  RSL         
L2C_DUT_MAP566                 0x0001180080E011B0  RSL         
L2C_DUT_MAP567                 0x0001180080E011B8  RSL         
L2C_DUT_MAP568                 0x0001180080E011C0  RSL         
L2C_DUT_MAP569                 0x0001180080E011C8  RSL         
L2C_DUT_MAP570                 0x0001180080E011D0  RSL         
L2C_DUT_MAP571                 0x0001180080E011D8  RSL         
L2C_DUT_MAP572                 0x0001180080E011E0  RSL         
L2C_DUT_MAP573                 0x0001180080E011E8  RSL         
L2C_DUT_MAP574                 0x0001180080E011F0  RSL         
L2C_DUT_MAP575                 0x0001180080E011F8  RSL         
L2C_DUT_MAP576                 0x0001180080E01200  RSL         
L2C_DUT_MAP577                 0x0001180080E01208  RSL         
L2C_DUT_MAP578                 0x0001180080E01210  RSL         
L2C_DUT_MAP579                 0x0001180080E01218  RSL         
L2C_DUT_MAP580                 0x0001180080E01220  RSL         
L2C_DUT_MAP581                 0x0001180080E01228  RSL         
L2C_DUT_MAP582                 0x0001180080E01230  RSL         
L2C_DUT_MAP583                 0x0001180080E01238  RSL         
L2C_DUT_MAP584                 0x0001180080E01240  RSL         
L2C_DUT_MAP585                 0x0001180080E01248  RSL         
L2C_DUT_MAP586                 0x0001180080E01250  RSL         
L2C_DUT_MAP587                 0x0001180080E01258  RSL         
L2C_DUT_MAP588                 0x0001180080E01260  RSL         
L2C_DUT_MAP589                 0x0001180080E01268  RSL         
L2C_DUT_MAP590                 0x0001180080E01270  RSL         
L2C_DUT_MAP591                 0x0001180080E01278  RSL         
L2C_DUT_MAP592                 0x0001180080E01280  RSL         
L2C_DUT_MAP593                 0x0001180080E01288  RSL         
L2C_DUT_MAP594                 0x0001180080E01290  RSL         
L2C_DUT_MAP595                 0x0001180080E01298  RSL         
L2C_DUT_MAP596                 0x0001180080E012A0  RSL         
L2C_DUT_MAP597                 0x0001180080E012A8  RSL         
L2C_DUT_MAP598                 0x0001180080E012B0  RSL         
L2C_DUT_MAP599                 0x0001180080E012B8  RSL         
L2C_DUT_MAP600                 0x0001180080E012C0  RSL         
L2C_DUT_MAP601                 0x0001180080E012C8  RSL         
L2C_DUT_MAP602                 0x0001180080E012D0  RSL         
L2C_DUT_MAP603                 0x0001180080E012D8  RSL         
L2C_DUT_MAP604                 0x0001180080E012E0  RSL         
L2C_DUT_MAP605                 0x0001180080E012E8  RSL         
L2C_DUT_MAP606                 0x0001180080E012F0  RSL         
L2C_DUT_MAP607                 0x0001180080E012F8  RSL         
L2C_DUT_MAP608                 0x0001180080E01300  RSL         
L2C_DUT_MAP609                 0x0001180080E01308  RSL         
L2C_DUT_MAP610                 0x0001180080E01310  RSL         
L2C_DUT_MAP611                 0x0001180080E01318  RSL         
L2C_DUT_MAP612                 0x0001180080E01320  RSL         
L2C_DUT_MAP613                 0x0001180080E01328  RSL         
L2C_DUT_MAP614                 0x0001180080E01330  RSL         
L2C_DUT_MAP615                 0x0001180080E01338  RSL         
L2C_DUT_MAP616                 0x0001180080E01340  RSL         
L2C_DUT_MAP617                 0x0001180080E01348  RSL         
L2C_DUT_MAP618                 0x0001180080E01350  RSL         
L2C_DUT_MAP619                 0x0001180080E01358  RSL         
L2C_DUT_MAP620                 0x0001180080E01360  RSL         
L2C_DUT_MAP621                 0x0001180080E01368  RSL         
L2C_DUT_MAP622                 0x0001180080E01370  RSL         
L2C_DUT_MAP623                 0x0001180080E01378  RSL         
L2C_DUT_MAP624                 0x0001180080E01380  RSL         
L2C_DUT_MAP625                 0x0001180080E01388  RSL         
L2C_DUT_MAP626                 0x0001180080E01390  RSL         
L2C_DUT_MAP627                 0x0001180080E01398  RSL         
L2C_DUT_MAP628                 0x0001180080E013A0  RSL         
L2C_DUT_MAP629                 0x0001180080E013A8  RSL         
L2C_DUT_MAP630                 0x0001180080E013B0  RSL         
L2C_DUT_MAP631                 0x0001180080E013B8  RSL         
L2C_DUT_MAP632                 0x0001180080E013C0  RSL         
L2C_DUT_MAP633                 0x0001180080E013C8  RSL         
L2C_DUT_MAP634                 0x0001180080E013D0  RSL         
L2C_DUT_MAP635                 0x0001180080E013D8  RSL         
L2C_DUT_MAP636                 0x0001180080E013E0  RSL         
L2C_DUT_MAP637                 0x0001180080E013E8  RSL         
L2C_DUT_MAP638                 0x0001180080E013F0  RSL         
L2C_DUT_MAP639                 0x0001180080E013F8  RSL         
L2C_DUT_MAP640                 0x0001180080E01400  RSL         
L2C_DUT_MAP641                 0x0001180080E01408  RSL         
L2C_DUT_MAP642                 0x0001180080E01410  RSL         
L2C_DUT_MAP643                 0x0001180080E01418  RSL         
L2C_DUT_MAP644                 0x0001180080E01420  RSL         
L2C_DUT_MAP645                 0x0001180080E01428  RSL         
L2C_DUT_MAP646                 0x0001180080E01430  RSL         
L2C_DUT_MAP647                 0x0001180080E01438  RSL         
L2C_DUT_MAP648                 0x0001180080E01440  RSL         
L2C_DUT_MAP649                 0x0001180080E01448  RSL         
L2C_DUT_MAP650                 0x0001180080E01450  RSL         
L2C_DUT_MAP651                 0x0001180080E01458  RSL         
L2C_DUT_MAP652                 0x0001180080E01460  RSL         
L2C_DUT_MAP653                 0x0001180080E01468  RSL         
L2C_DUT_MAP654                 0x0001180080E01470  RSL         
L2C_DUT_MAP655                 0x0001180080E01478  RSL         
L2C_DUT_MAP656                 0x0001180080E01480  RSL         
L2C_DUT_MAP657                 0x0001180080E01488  RSL         
L2C_DUT_MAP658                 0x0001180080E01490  RSL         
L2C_DUT_MAP659                 0x0001180080E01498  RSL         
L2C_DUT_MAP660                 0x0001180080E014A0  RSL         
L2C_DUT_MAP661                 0x0001180080E014A8  RSL         
L2C_DUT_MAP662                 0x0001180080E014B0  RSL         
L2C_DUT_MAP663                 0x0001180080E014B8  RSL         
L2C_DUT_MAP664                 0x0001180080E014C0  RSL         
L2C_DUT_MAP665                 0x0001180080E014C8  RSL         
L2C_DUT_MAP666                 0x0001180080E014D0  RSL         
L2C_DUT_MAP667                 0x0001180080E014D8  RSL         
L2C_DUT_MAP668                 0x0001180080E014E0  RSL         
L2C_DUT_MAP669                 0x0001180080E014E8  RSL         
L2C_DUT_MAP670                 0x0001180080E014F0  RSL         
L2C_DUT_MAP671                 0x0001180080E014F8  RSL         
L2C_DUT_MAP672                 0x0001180080E01500  RSL         
L2C_DUT_MAP673                 0x0001180080E01508  RSL         
L2C_DUT_MAP674                 0x0001180080E01510  RSL         
L2C_DUT_MAP675                 0x0001180080E01518  RSL         
L2C_DUT_MAP676                 0x0001180080E01520  RSL         
L2C_DUT_MAP677                 0x0001180080E01528  RSL         
L2C_DUT_MAP678                 0x0001180080E01530  RSL         
L2C_DUT_MAP679                 0x0001180080E01538  RSL         
L2C_DUT_MAP680                 0x0001180080E01540  RSL         
L2C_DUT_MAP681                 0x0001180080E01548  RSL         
L2C_DUT_MAP682                 0x0001180080E01550  RSL         
L2C_DUT_MAP683                 0x0001180080E01558  RSL         
L2C_DUT_MAP684                 0x0001180080E01560  RSL         
L2C_DUT_MAP685                 0x0001180080E01568  RSL         
L2C_DUT_MAP686                 0x0001180080E01570  RSL         
L2C_DUT_MAP687                 0x0001180080E01578  RSL         
L2C_DUT_MAP688                 0x0001180080E01580  RSL         
L2C_DUT_MAP689                 0x0001180080E01588  RSL         
L2C_DUT_MAP690                 0x0001180080E01590  RSL         
L2C_DUT_MAP691                 0x0001180080E01598  RSL         
L2C_DUT_MAP692                 0x0001180080E015A0  RSL         
L2C_DUT_MAP693                 0x0001180080E015A8  RSL         
L2C_DUT_MAP694                 0x0001180080E015B0  RSL         
L2C_DUT_MAP695                 0x0001180080E015B8  RSL         
L2C_DUT_MAP696                 0x0001180080E015C0  RSL         
L2C_DUT_MAP697                 0x0001180080E015C8  RSL         
L2C_DUT_MAP698                 0x0001180080E015D0  RSL         
L2C_DUT_MAP699                 0x0001180080E015D8  RSL         
L2C_DUT_MAP700                 0x0001180080E015E0  RSL         
L2C_DUT_MAP701                 0x0001180080E015E8  RSL         
L2C_DUT_MAP702                 0x0001180080E015F0  RSL         
L2C_DUT_MAP703                 0x0001180080E015F8  RSL         
L2C_DUT_MAP704                 0x0001180080E01600  RSL         
L2C_DUT_MAP705                 0x0001180080E01608  RSL         
L2C_DUT_MAP706                 0x0001180080E01610  RSL         
L2C_DUT_MAP707                 0x0001180080E01618  RSL         
L2C_DUT_MAP708                 0x0001180080E01620  RSL         
L2C_DUT_MAP709                 0x0001180080E01628  RSL         
L2C_DUT_MAP710                 0x0001180080E01630  RSL         
L2C_DUT_MAP711                 0x0001180080E01638  RSL         
L2C_DUT_MAP712                 0x0001180080E01640  RSL         
L2C_DUT_MAP713                 0x0001180080E01648  RSL         
L2C_DUT_MAP714                 0x0001180080E01650  RSL         
L2C_DUT_MAP715                 0x0001180080E01658  RSL         
L2C_DUT_MAP716                 0x0001180080E01660  RSL         
L2C_DUT_MAP717                 0x0001180080E01668  RSL         
L2C_DUT_MAP718                 0x0001180080E01670  RSL         
L2C_DUT_MAP719                 0x0001180080E01678  RSL         
L2C_DUT_MAP720                 0x0001180080E01680  RSL         
L2C_DUT_MAP721                 0x0001180080E01688  RSL         
L2C_DUT_MAP722                 0x0001180080E01690  RSL         
L2C_DUT_MAP723                 0x0001180080E01698  RSL         
L2C_DUT_MAP724                 0x0001180080E016A0  RSL         
L2C_DUT_MAP725                 0x0001180080E016A8  RSL         
L2C_DUT_MAP726                 0x0001180080E016B0  RSL         
L2C_DUT_MAP727                 0x0001180080E016B8  RSL         
L2C_DUT_MAP728                 0x0001180080E016C0  RSL         
L2C_DUT_MAP729                 0x0001180080E016C8  RSL         
L2C_DUT_MAP730                 0x0001180080E016D0  RSL         
L2C_DUT_MAP731                 0x0001180080E016D8  RSL         
L2C_DUT_MAP732                 0x0001180080E016E0  RSL         
L2C_DUT_MAP733                 0x0001180080E016E8  RSL         
L2C_DUT_MAP734                 0x0001180080E016F0  RSL         
L2C_DUT_MAP735                 0x0001180080E016F8  RSL         
L2C_DUT_MAP736                 0x0001180080E01700  RSL         
L2C_DUT_MAP737                 0x0001180080E01708  RSL         
L2C_DUT_MAP738                 0x0001180080E01710  RSL         
L2C_DUT_MAP739                 0x0001180080E01718  RSL         
L2C_DUT_MAP740                 0x0001180080E01720  RSL         
L2C_DUT_MAP741                 0x0001180080E01728  RSL         
L2C_DUT_MAP742                 0x0001180080E01730  RSL         
L2C_DUT_MAP743                 0x0001180080E01738  RSL         
L2C_DUT_MAP744                 0x0001180080E01740  RSL         
L2C_DUT_MAP745                 0x0001180080E01748  RSL         
L2C_DUT_MAP746                 0x0001180080E01750  RSL         
L2C_DUT_MAP747                 0x0001180080E01758  RSL         
L2C_DUT_MAP748                 0x0001180080E01760  RSL         
L2C_DUT_MAP749                 0x0001180080E01768  RSL         
L2C_DUT_MAP750                 0x0001180080E01770  RSL         
L2C_DUT_MAP751                 0x0001180080E01778  RSL         
L2C_DUT_MAP752                 0x0001180080E01780  RSL         
L2C_DUT_MAP753                 0x0001180080E01788  RSL         
L2C_DUT_MAP754                 0x0001180080E01790  RSL         
L2C_DUT_MAP755                 0x0001180080E01798  RSL         
L2C_DUT_MAP756                 0x0001180080E017A0  RSL         
L2C_DUT_MAP757                 0x0001180080E017A8  RSL         
L2C_DUT_MAP758                 0x0001180080E017B0  RSL         
L2C_DUT_MAP759                 0x0001180080E017B8  RSL         
L2C_DUT_MAP760                 0x0001180080E017C0  RSL         
L2C_DUT_MAP761                 0x0001180080E017C8  RSL         
L2C_DUT_MAP762                 0x0001180080E017D0  RSL         
L2C_DUT_MAP763                 0x0001180080E017D8  RSL         
L2C_DUT_MAP764                 0x0001180080E017E0  RSL         
L2C_DUT_MAP765                 0x0001180080E017E8  RSL         
L2C_DUT_MAP766                 0x0001180080E017F0  RSL         
L2C_DUT_MAP767                 0x0001180080E017F8  RSL         
L2C_DUT_MAP768                 0x0001180080E01800  RSL         
L2C_DUT_MAP769                 0x0001180080E01808  RSL         
L2C_DUT_MAP770                 0x0001180080E01810  RSL         
L2C_DUT_MAP771                 0x0001180080E01818  RSL         
L2C_DUT_MAP772                 0x0001180080E01820  RSL         
L2C_DUT_MAP773                 0x0001180080E01828  RSL         
L2C_DUT_MAP774                 0x0001180080E01830  RSL         
L2C_DUT_MAP775                 0x0001180080E01838  RSL         
L2C_DUT_MAP776                 0x0001180080E01840  RSL         
L2C_DUT_MAP777                 0x0001180080E01848  RSL         
L2C_DUT_MAP778                 0x0001180080E01850  RSL         
L2C_DUT_MAP779                 0x0001180080E01858  RSL         
L2C_DUT_MAP780                 0x0001180080E01860  RSL         
L2C_DUT_MAP781                 0x0001180080E01868  RSL         
L2C_DUT_MAP782                 0x0001180080E01870  RSL         
L2C_DUT_MAP783                 0x0001180080E01878  RSL         
L2C_DUT_MAP784                 0x0001180080E01880  RSL         
L2C_DUT_MAP785                 0x0001180080E01888  RSL         
L2C_DUT_MAP786                 0x0001180080E01890  RSL         
L2C_DUT_MAP787                 0x0001180080E01898  RSL         
L2C_DUT_MAP788                 0x0001180080E018A0  RSL         
L2C_DUT_MAP789                 0x0001180080E018A8  RSL         
L2C_DUT_MAP790                 0x0001180080E018B0  RSL         
L2C_DUT_MAP791                 0x0001180080E018B8  RSL         
L2C_DUT_MAP792                 0x0001180080E018C0  RSL         
L2C_DUT_MAP793                 0x0001180080E018C8  RSL         
L2C_DUT_MAP794                 0x0001180080E018D0  RSL         
L2C_DUT_MAP795                 0x0001180080E018D8  RSL         
L2C_DUT_MAP796                 0x0001180080E018E0  RSL         
L2C_DUT_MAP797                 0x0001180080E018E8  RSL         
L2C_DUT_MAP798                 0x0001180080E018F0  RSL         
L2C_DUT_MAP799                 0x0001180080E018F8  RSL         
L2C_DUT_MAP800                 0x0001180080E01900  RSL         
L2C_DUT_MAP801                 0x0001180080E01908  RSL         
L2C_DUT_MAP802                 0x0001180080E01910  RSL         
L2C_DUT_MAP803                 0x0001180080E01918  RSL         
L2C_DUT_MAP804                 0x0001180080E01920  RSL         
L2C_DUT_MAP805                 0x0001180080E01928  RSL         
L2C_DUT_MAP806                 0x0001180080E01930  RSL         
L2C_DUT_MAP807                 0x0001180080E01938  RSL         
L2C_DUT_MAP808                 0x0001180080E01940  RSL         
L2C_DUT_MAP809                 0x0001180080E01948  RSL         
L2C_DUT_MAP810                 0x0001180080E01950  RSL         
L2C_DUT_MAP811                 0x0001180080E01958  RSL         
L2C_DUT_MAP812                 0x0001180080E01960  RSL         
L2C_DUT_MAP813                 0x0001180080E01968  RSL         
L2C_DUT_MAP814                 0x0001180080E01970  RSL         
L2C_DUT_MAP815                 0x0001180080E01978  RSL         
L2C_DUT_MAP816                 0x0001180080E01980  RSL         
L2C_DUT_MAP817                 0x0001180080E01988  RSL         
L2C_DUT_MAP818                 0x0001180080E01990  RSL         
L2C_DUT_MAP819                 0x0001180080E01998  RSL         
L2C_DUT_MAP820                 0x0001180080E019A0  RSL         
L2C_DUT_MAP821                 0x0001180080E019A8  RSL         
L2C_DUT_MAP822                 0x0001180080E019B0  RSL         
L2C_DUT_MAP823                 0x0001180080E019B8  RSL         
L2C_DUT_MAP824                 0x0001180080E019C0  RSL         
L2C_DUT_MAP825                 0x0001180080E019C8  RSL         
L2C_DUT_MAP826                 0x0001180080E019D0  RSL         
L2C_DUT_MAP827                 0x0001180080E019D8  RSL         
L2C_DUT_MAP828                 0x0001180080E019E0  RSL         
L2C_DUT_MAP829                 0x0001180080E019E8  RSL         
L2C_DUT_MAP830                 0x0001180080E019F0  RSL         
L2C_DUT_MAP831                 0x0001180080E019F8  RSL         
L2C_DUT_MAP832                 0x0001180080E01A00  RSL         
L2C_DUT_MAP833                 0x0001180080E01A08  RSL         
L2C_DUT_MAP834                 0x0001180080E01A10  RSL         
L2C_DUT_MAP835                 0x0001180080E01A18  RSL         
L2C_DUT_MAP836                 0x0001180080E01A20  RSL         
L2C_DUT_MAP837                 0x0001180080E01A28  RSL         
L2C_DUT_MAP838                 0x0001180080E01A30  RSL         
L2C_DUT_MAP839                 0x0001180080E01A38  RSL         
L2C_DUT_MAP840                 0x0001180080E01A40  RSL         
L2C_DUT_MAP841                 0x0001180080E01A48  RSL         
L2C_DUT_MAP842                 0x0001180080E01A50  RSL         
L2C_DUT_MAP843                 0x0001180080E01A58  RSL         
L2C_DUT_MAP844                 0x0001180080E01A60  RSL         
L2C_DUT_MAP845                 0x0001180080E01A68  RSL         
L2C_DUT_MAP846                 0x0001180080E01A70  RSL         
L2C_DUT_MAP847                 0x0001180080E01A78  RSL         
L2C_DUT_MAP848                 0x0001180080E01A80  RSL         
L2C_DUT_MAP849                 0x0001180080E01A88  RSL         
L2C_DUT_MAP850                 0x0001180080E01A90  RSL         
L2C_DUT_MAP851                 0x0001180080E01A98  RSL         
L2C_DUT_MAP852                 0x0001180080E01AA0  RSL         
L2C_DUT_MAP853                 0x0001180080E01AA8  RSL         
L2C_DUT_MAP854                 0x0001180080E01AB0  RSL         
L2C_DUT_MAP855                 0x0001180080E01AB8  RSL         
L2C_DUT_MAP856                 0x0001180080E01AC0  RSL         
L2C_DUT_MAP857                 0x0001180080E01AC8  RSL         
L2C_DUT_MAP858                 0x0001180080E01AD0  RSL         
L2C_DUT_MAP859                 0x0001180080E01AD8  RSL         
L2C_DUT_MAP860                 0x0001180080E01AE0  RSL         
L2C_DUT_MAP861                 0x0001180080E01AE8  RSL         
L2C_DUT_MAP862                 0x0001180080E01AF0  RSL         
L2C_DUT_MAP863                 0x0001180080E01AF8  RSL         
L2C_DUT_MAP864                 0x0001180080E01B00  RSL         
L2C_DUT_MAP865                 0x0001180080E01B08  RSL         
L2C_DUT_MAP866                 0x0001180080E01B10  RSL         
L2C_DUT_MAP867                 0x0001180080E01B18  RSL         
L2C_DUT_MAP868                 0x0001180080E01B20  RSL         
L2C_DUT_MAP869                 0x0001180080E01B28  RSL         
L2C_DUT_MAP870                 0x0001180080E01B30  RSL         
L2C_DUT_MAP871                 0x0001180080E01B38  RSL         
L2C_DUT_MAP872                 0x0001180080E01B40  RSL         
L2C_DUT_MAP873                 0x0001180080E01B48  RSL         
L2C_DUT_MAP874                 0x0001180080E01B50  RSL         
L2C_DUT_MAP875                 0x0001180080E01B58  RSL         
L2C_DUT_MAP876                 0x0001180080E01B60  RSL         
L2C_DUT_MAP877                 0x0001180080E01B68  RSL         
L2C_DUT_MAP878                 0x0001180080E01B70  RSL         
L2C_DUT_MAP879                 0x0001180080E01B78  RSL         
L2C_DUT_MAP880                 0x0001180080E01B80  RSL         
L2C_DUT_MAP881                 0x0001180080E01B88  RSL         
L2C_DUT_MAP882                 0x0001180080E01B90  RSL         
L2C_DUT_MAP883                 0x0001180080E01B98  RSL         
L2C_DUT_MAP884                 0x0001180080E01BA0  RSL         
L2C_DUT_MAP885                 0x0001180080E01BA8  RSL         
L2C_DUT_MAP886                 0x0001180080E01BB0  RSL         
L2C_DUT_MAP887                 0x0001180080E01BB8  RSL         
L2C_DUT_MAP888                 0x0001180080E01BC0  RSL         
L2C_DUT_MAP889                 0x0001180080E01BC8  RSL         
L2C_DUT_MAP890                 0x0001180080E01BD0  RSL         
L2C_DUT_MAP891                 0x0001180080E01BD8  RSL         
L2C_DUT_MAP892                 0x0001180080E01BE0  RSL         
L2C_DUT_MAP893                 0x0001180080E01BE8  RSL         
L2C_DUT_MAP894                 0x0001180080E01BF0  RSL         
L2C_DUT_MAP895                 0x0001180080E01BF8  RSL         
L2C_DUT_MAP896                 0x0001180080E01C00  RSL         
L2C_DUT_MAP897                 0x0001180080E01C08  RSL         
L2C_DUT_MAP898                 0x0001180080E01C10  RSL         
L2C_DUT_MAP899                 0x0001180080E01C18  RSL         
L2C_DUT_MAP900                 0x0001180080E01C20  RSL         
L2C_DUT_MAP901                 0x0001180080E01C28  RSL         
L2C_DUT_MAP902                 0x0001180080E01C30  RSL         
L2C_DUT_MAP903                 0x0001180080E01C38  RSL         
L2C_DUT_MAP904                 0x0001180080E01C40  RSL         
L2C_DUT_MAP905                 0x0001180080E01C48  RSL         
L2C_DUT_MAP906                 0x0001180080E01C50  RSL         
L2C_DUT_MAP907                 0x0001180080E01C58  RSL         
L2C_DUT_MAP908                 0x0001180080E01C60  RSL         
L2C_DUT_MAP909                 0x0001180080E01C68  RSL         
L2C_DUT_MAP910                 0x0001180080E01C70  RSL         
L2C_DUT_MAP911                 0x0001180080E01C78  RSL         
L2C_DUT_MAP912                 0x0001180080E01C80  RSL         
L2C_DUT_MAP913                 0x0001180080E01C88  RSL         
L2C_DUT_MAP914                 0x0001180080E01C90  RSL         
L2C_DUT_MAP915                 0x0001180080E01C98  RSL         
L2C_DUT_MAP916                 0x0001180080E01CA0  RSL         
L2C_DUT_MAP917                 0x0001180080E01CA8  RSL         
L2C_DUT_MAP918                 0x0001180080E01CB0  RSL         
L2C_DUT_MAP919                 0x0001180080E01CB8  RSL         
L2C_DUT_MAP920                 0x0001180080E01CC0  RSL         
L2C_DUT_MAP921                 0x0001180080E01CC8  RSL         
L2C_DUT_MAP922                 0x0001180080E01CD0  RSL         
L2C_DUT_MAP923                 0x0001180080E01CD8  RSL         
L2C_DUT_MAP924                 0x0001180080E01CE0  RSL         
L2C_DUT_MAP925                 0x0001180080E01CE8  RSL         
L2C_DUT_MAP926                 0x0001180080E01CF0  RSL         
L2C_DUT_MAP927                 0x0001180080E01CF8  RSL         
L2C_DUT_MAP928                 0x0001180080E01D00  RSL         
L2C_DUT_MAP929                 0x0001180080E01D08  RSL         
L2C_DUT_MAP930                 0x0001180080E01D10  RSL         
L2C_DUT_MAP931                 0x0001180080E01D18  RSL         
L2C_DUT_MAP932                 0x0001180080E01D20  RSL         
L2C_DUT_MAP933                 0x0001180080E01D28  RSL         
L2C_DUT_MAP934                 0x0001180080E01D30  RSL         
L2C_DUT_MAP935                 0x0001180080E01D38  RSL         
L2C_DUT_MAP936                 0x0001180080E01D40  RSL         
L2C_DUT_MAP937                 0x0001180080E01D48  RSL         
L2C_DUT_MAP938                 0x0001180080E01D50  RSL         
L2C_DUT_MAP939                 0x0001180080E01D58  RSL         
L2C_DUT_MAP940                 0x0001180080E01D60  RSL         
L2C_DUT_MAP941                 0x0001180080E01D68  RSL         
L2C_DUT_MAP942                 0x0001180080E01D70  RSL         
L2C_DUT_MAP943                 0x0001180080E01D78  RSL         
L2C_DUT_MAP944                 0x0001180080E01D80  RSL         
L2C_DUT_MAP945                 0x0001180080E01D88  RSL         
L2C_DUT_MAP946                 0x0001180080E01D90  RSL         
L2C_DUT_MAP947                 0x0001180080E01D98  RSL         
L2C_DUT_MAP948                 0x0001180080E01DA0  RSL         
L2C_DUT_MAP949                 0x0001180080E01DA8  RSL         
L2C_DUT_MAP950                 0x0001180080E01DB0  RSL         
L2C_DUT_MAP951                 0x0001180080E01DB8  RSL         
L2C_DUT_MAP952                 0x0001180080E01DC0  RSL         
L2C_DUT_MAP953                 0x0001180080E01DC8  RSL         
L2C_DUT_MAP954                 0x0001180080E01DD0  RSL         
L2C_DUT_MAP955                 0x0001180080E01DD8  RSL         
L2C_DUT_MAP956                 0x0001180080E01DE0  RSL         
L2C_DUT_MAP957                 0x0001180080E01DE8  RSL         
L2C_DUT_MAP958                 0x0001180080E01DF0  RSL         
L2C_DUT_MAP959                 0x0001180080E01DF8  RSL         
L2C_DUT_MAP960                 0x0001180080E01E00  RSL         
L2C_DUT_MAP961                 0x0001180080E01E08  RSL         
L2C_DUT_MAP962                 0x0001180080E01E10  RSL         
L2C_DUT_MAP963                 0x0001180080E01E18  RSL         
L2C_DUT_MAP964                 0x0001180080E01E20  RSL         
L2C_DUT_MAP965                 0x0001180080E01E28  RSL         
L2C_DUT_MAP966                 0x0001180080E01E30  RSL         
L2C_DUT_MAP967                 0x0001180080E01E38  RSL         
L2C_DUT_MAP968                 0x0001180080E01E40  RSL         
L2C_DUT_MAP969                 0x0001180080E01E48  RSL         
L2C_DUT_MAP970                 0x0001180080E01E50  RSL         
L2C_DUT_MAP971                 0x0001180080E01E58  RSL         
L2C_DUT_MAP972                 0x0001180080E01E60  RSL         
L2C_DUT_MAP973                 0x0001180080E01E68  RSL         
L2C_DUT_MAP974                 0x0001180080E01E70  RSL         
L2C_DUT_MAP975                 0x0001180080E01E78  RSL         
L2C_DUT_MAP976                 0x0001180080E01E80  RSL         
L2C_DUT_MAP977                 0x0001180080E01E88  RSL         
L2C_DUT_MAP978                 0x0001180080E01E90  RSL         
L2C_DUT_MAP979                 0x0001180080E01E98  RSL         
L2C_DUT_MAP980                 0x0001180080E01EA0  RSL         
L2C_DUT_MAP981                 0x0001180080E01EA8  RSL         
L2C_DUT_MAP982                 0x0001180080E01EB0  RSL         
L2C_DUT_MAP983                 0x0001180080E01EB8  RSL         
L2C_DUT_MAP984                 0x0001180080E01EC0  RSL         
L2C_DUT_MAP985                 0x0001180080E01EC8  RSL         
L2C_DUT_MAP986                 0x0001180080E01ED0  RSL         
L2C_DUT_MAP987                 0x0001180080E01ED8  RSL         
L2C_DUT_MAP988                 0x0001180080E01EE0  RSL         
L2C_DUT_MAP989                 0x0001180080E01EE8  RSL         
L2C_DUT_MAP990                 0x0001180080E01EF0  RSL         
L2C_DUT_MAP991                 0x0001180080E01EF8  RSL         
L2C_DUT_MAP992                 0x0001180080E01F00  RSL         
L2C_DUT_MAP993                 0x0001180080E01F08  RSL         
L2C_DUT_MAP994                 0x0001180080E01F10  RSL         
L2C_DUT_MAP995                 0x0001180080E01F18  RSL         
L2C_DUT_MAP996                 0x0001180080E01F20  RSL         
L2C_DUT_MAP997                 0x0001180080E01F28  RSL         
L2C_DUT_MAP998                 0x0001180080E01F30  RSL         
L2C_DUT_MAP999                 0x0001180080E01F38  RSL         
L2C_DUT_MAP1000                0x0001180080E01F40  RSL         
L2C_DUT_MAP1001                0x0001180080E01F48  RSL         
L2C_DUT_MAP1002                0x0001180080E01F50  RSL         
L2C_DUT_MAP1003                0x0001180080E01F58  RSL         
L2C_DUT_MAP1004                0x0001180080E01F60  RSL         
L2C_DUT_MAP1005                0x0001180080E01F68  RSL         
L2C_DUT_MAP1006                0x0001180080E01F70  RSL         
L2C_DUT_MAP1007                0x0001180080E01F78  RSL         
L2C_DUT_MAP1008                0x0001180080E01F80  RSL         
L2C_DUT_MAP1009                0x0001180080E01F88  RSL         
L2C_DUT_MAP1010                0x0001180080E01F90  RSL         
L2C_DUT_MAP1011                0x0001180080E01F98  RSL         
L2C_DUT_MAP1012                0x0001180080E01FA0  RSL         
L2C_DUT_MAP1013                0x0001180080E01FA8  RSL         
L2C_DUT_MAP1014                0x0001180080E01FB0  RSL         
L2C_DUT_MAP1015                0x0001180080E01FB8  RSL         
L2C_DUT_MAP1016                0x0001180080E01FC0  RSL         
L2C_DUT_MAP1017                0x0001180080E01FC8  RSL         
L2C_DUT_MAP1018                0x0001180080E01FD0  RSL         
L2C_DUT_MAP1019                0x0001180080E01FD8  RSL         
L2C_DUT_MAP1020                0x0001180080E01FE0  RSL         
L2C_DUT_MAP1021                0x0001180080E01FE8  RSL         
L2C_DUT_MAP1022                0x0001180080E01FF0  RSL         
L2C_DUT_MAP1023                0x0001180080E01FF8  RSL         
L2C_DUT_MAP1024                0x0001180080E02000  RSL         
L2C_DUT_MAP1025                0x0001180080E02008  RSL         
L2C_DUT_MAP1026                0x0001180080E02010  RSL         
L2C_DUT_MAP1027                0x0001180080E02018  RSL         
L2C_DUT_MAP1028                0x0001180080E02020  RSL         
L2C_DUT_MAP1029                0x0001180080E02028  RSL         
L2C_DUT_MAP1030                0x0001180080E02030  RSL         
L2C_DUT_MAP1031                0x0001180080E02038  RSL         
L2C_DUT_MAP1032                0x0001180080E02040  RSL         
L2C_DUT_MAP1033                0x0001180080E02048  RSL         
L2C_DUT_MAP1034                0x0001180080E02050  RSL         
L2C_DUT_MAP1035                0x0001180080E02058  RSL         
L2C_DUT_MAP1036                0x0001180080E02060  RSL         
L2C_DUT_MAP1037                0x0001180080E02068  RSL         
L2C_DUT_MAP1038                0x0001180080E02070  RSL         
L2C_DUT_MAP1039                0x0001180080E02078  RSL         
L2C_DUT_MAP1040                0x0001180080E02080  RSL         
L2C_DUT_MAP1041                0x0001180080E02088  RSL         
L2C_DUT_MAP1042                0x0001180080E02090  RSL         
L2C_DUT_MAP1043                0x0001180080E02098  RSL         
L2C_DUT_MAP1044                0x0001180080E020A0  RSL         
L2C_DUT_MAP1045                0x0001180080E020A8  RSL         
L2C_DUT_MAP1046                0x0001180080E020B0  RSL         
L2C_DUT_MAP1047                0x0001180080E020B8  RSL         
L2C_DUT_MAP1048                0x0001180080E020C0  RSL         
L2C_DUT_MAP1049                0x0001180080E020C8  RSL         
L2C_DUT_MAP1050                0x0001180080E020D0  RSL         
L2C_DUT_MAP1051                0x0001180080E020D8  RSL         
L2C_DUT_MAP1052                0x0001180080E020E0  RSL         
L2C_DUT_MAP1053                0x0001180080E020E8  RSL         
L2C_DUT_MAP1054                0x0001180080E020F0  RSL         
L2C_DUT_MAP1055                0x0001180080E020F8  RSL         
L2C_DUT_MAP1056                0x0001180080E02100  RSL         
L2C_DUT_MAP1057                0x0001180080E02108  RSL         
L2C_DUT_MAP1058                0x0001180080E02110  RSL         
L2C_DUT_MAP1059                0x0001180080E02118  RSL         
L2C_DUT_MAP1060                0x0001180080E02120  RSL         
L2C_DUT_MAP1061                0x0001180080E02128  RSL         
L2C_DUT_MAP1062                0x0001180080E02130  RSL         
L2C_DUT_MAP1063                0x0001180080E02138  RSL         
L2C_DUT_MAP1064                0x0001180080E02140  RSL         
L2C_DUT_MAP1065                0x0001180080E02148  RSL         
L2C_DUT_MAP1066                0x0001180080E02150  RSL         
L2C_DUT_MAP1067                0x0001180080E02158  RSL         
L2C_DUT_MAP1068                0x0001180080E02160  RSL         
L2C_DUT_MAP1069                0x0001180080E02168  RSL         
L2C_DUT_MAP1070                0x0001180080E02170  RSL         
L2C_DUT_MAP1071                0x0001180080E02178  RSL         
L2C_DUT_MAP1072                0x0001180080E02180  RSL         
L2C_DUT_MAP1073                0x0001180080E02188  RSL         
L2C_DUT_MAP1074                0x0001180080E02190  RSL         
L2C_DUT_MAP1075                0x0001180080E02198  RSL         
L2C_DUT_MAP1076                0x0001180080E021A0  RSL         
L2C_DUT_MAP1077                0x0001180080E021A8  RSL         
L2C_DUT_MAP1078                0x0001180080E021B0  RSL         
L2C_DUT_MAP1079                0x0001180080E021B8  RSL         
L2C_DUT_MAP1080                0x0001180080E021C0  RSL         
L2C_DUT_MAP1081                0x0001180080E021C8  RSL         
L2C_DUT_MAP1082                0x0001180080E021D0  RSL         
L2C_DUT_MAP1083                0x0001180080E021D8  RSL         
L2C_DUT_MAP1084                0x0001180080E021E0  RSL         
L2C_DUT_MAP1085                0x0001180080E021E8  RSL         
L2C_DUT_MAP1086                0x0001180080E021F0  RSL         
L2C_DUT_MAP1087                0x0001180080E021F8  RSL         
L2C_DUT_MAP1088                0x0001180080E02200  RSL         
L2C_DUT_MAP1089                0x0001180080E02208  RSL         
L2C_DUT_MAP1090                0x0001180080E02210  RSL         
L2C_DUT_MAP1091                0x0001180080E02218  RSL         
L2C_DUT_MAP1092                0x0001180080E02220  RSL         
L2C_DUT_MAP1093                0x0001180080E02228  RSL         
L2C_DUT_MAP1094                0x0001180080E02230  RSL         
L2C_DUT_MAP1095                0x0001180080E02238  RSL         
L2C_DUT_MAP1096                0x0001180080E02240  RSL         
L2C_DUT_MAP1097                0x0001180080E02248  RSL         
L2C_DUT_MAP1098                0x0001180080E02250  RSL         
L2C_DUT_MAP1099                0x0001180080E02258  RSL         
L2C_DUT_MAP1100                0x0001180080E02260  RSL         
L2C_DUT_MAP1101                0x0001180080E02268  RSL         
L2C_DUT_MAP1102                0x0001180080E02270  RSL         
L2C_DUT_MAP1103                0x0001180080E02278  RSL         
L2C_DUT_MAP1104                0x0001180080E02280  RSL         
L2C_DUT_MAP1105                0x0001180080E02288  RSL         
L2C_DUT_MAP1106                0x0001180080E02290  RSL         
L2C_DUT_MAP1107                0x0001180080E02298  RSL         
L2C_DUT_MAP1108                0x0001180080E022A0  RSL         
L2C_DUT_MAP1109                0x0001180080E022A8  RSL         
L2C_DUT_MAP1110                0x0001180080E022B0  RSL         
L2C_DUT_MAP1111                0x0001180080E022B8  RSL         
L2C_DUT_MAP1112                0x0001180080E022C0  RSL         
L2C_DUT_MAP1113                0x0001180080E022C8  RSL         
L2C_DUT_MAP1114                0x0001180080E022D0  RSL         
L2C_DUT_MAP1115                0x0001180080E022D8  RSL         
L2C_DUT_MAP1116                0x0001180080E022E0  RSL         
L2C_DUT_MAP1117                0x0001180080E022E8  RSL         
L2C_DUT_MAP1118                0x0001180080E022F0  RSL         
L2C_DUT_MAP1119                0x0001180080E022F8  RSL         
L2C_DUT_MAP1120                0x0001180080E02300  RSL         
L2C_DUT_MAP1121                0x0001180080E02308  RSL         
L2C_DUT_MAP1122                0x0001180080E02310  RSL         
L2C_DUT_MAP1123                0x0001180080E02318  RSL         
L2C_DUT_MAP1124                0x0001180080E02320  RSL         
L2C_DUT_MAP1125                0x0001180080E02328  RSL         
L2C_DUT_MAP1126                0x0001180080E02330  RSL         
L2C_DUT_MAP1127                0x0001180080E02338  RSL         
L2C_DUT_MAP1128                0x0001180080E02340  RSL         
L2C_DUT_MAP1129                0x0001180080E02348  RSL         
L2C_DUT_MAP1130                0x0001180080E02350  RSL         
L2C_DUT_MAP1131                0x0001180080E02358  RSL         
L2C_DUT_MAP1132                0x0001180080E02360  RSL         
L2C_DUT_MAP1133                0x0001180080E02368  RSL         
L2C_DUT_MAP1134                0x0001180080E02370  RSL         
L2C_DUT_MAP1135                0x0001180080E02378  RSL         
L2C_DUT_MAP1136                0x0001180080E02380  RSL         
L2C_DUT_MAP1137                0x0001180080E02388  RSL         
L2C_DUT_MAP1138                0x0001180080E02390  RSL         
L2C_DUT_MAP1139                0x0001180080E02398  RSL         
L2C_DUT_MAP1140                0x0001180080E023A0  RSL         
L2C_DUT_MAP1141                0x0001180080E023A8  RSL         
L2C_DUT_MAP1142                0x0001180080E023B0  RSL         
L2C_DUT_MAP1143                0x0001180080E023B8  RSL         
L2C_DUT_MAP1144                0x0001180080E023C0  RSL         
L2C_DUT_MAP1145                0x0001180080E023C8  RSL         
L2C_DUT_MAP1146                0x0001180080E023D0  RSL         
L2C_DUT_MAP1147                0x0001180080E023D8  RSL         
L2C_DUT_MAP1148                0x0001180080E023E0  RSL         
L2C_DUT_MAP1149                0x0001180080E023E8  RSL         
L2C_DUT_MAP1150                0x0001180080E023F0  RSL         
L2C_DUT_MAP1151                0x0001180080E023F8  RSL         
L2C_DUT_MAP1152                0x0001180080E02400  RSL         
L2C_DUT_MAP1153                0x0001180080E02408  RSL         
L2C_DUT_MAP1154                0x0001180080E02410  RSL         
L2C_DUT_MAP1155                0x0001180080E02418  RSL         
L2C_DUT_MAP1156                0x0001180080E02420  RSL         
L2C_DUT_MAP1157                0x0001180080E02428  RSL         
L2C_DUT_MAP1158                0x0001180080E02430  RSL         
L2C_DUT_MAP1159                0x0001180080E02438  RSL         
L2C_DUT_MAP1160                0x0001180080E02440  RSL         
L2C_DUT_MAP1161                0x0001180080E02448  RSL         
L2C_DUT_MAP1162                0x0001180080E02450  RSL         
L2C_DUT_MAP1163                0x0001180080E02458  RSL         
L2C_DUT_MAP1164                0x0001180080E02460  RSL         
L2C_DUT_MAP1165                0x0001180080E02468  RSL         
L2C_DUT_MAP1166                0x0001180080E02470  RSL         
L2C_DUT_MAP1167                0x0001180080E02478  RSL         
L2C_DUT_MAP1168                0x0001180080E02480  RSL         
L2C_DUT_MAP1169                0x0001180080E02488  RSL         
L2C_DUT_MAP1170                0x0001180080E02490  RSL         
L2C_DUT_MAP1171                0x0001180080E02498  RSL         
L2C_DUT_MAP1172                0x0001180080E024A0  RSL         
L2C_DUT_MAP1173                0x0001180080E024A8  RSL         
L2C_DUT_MAP1174                0x0001180080E024B0  RSL         
L2C_DUT_MAP1175                0x0001180080E024B8  RSL         
L2C_DUT_MAP1176                0x0001180080E024C0  RSL         
L2C_DUT_MAP1177                0x0001180080E024C8  RSL         
L2C_DUT_MAP1178                0x0001180080E024D0  RSL         
L2C_DUT_MAP1179                0x0001180080E024D8  RSL         
L2C_DUT_MAP1180                0x0001180080E024E0  RSL         
L2C_DUT_MAP1181                0x0001180080E024E8  RSL         
L2C_DUT_MAP1182                0x0001180080E024F0  RSL         
L2C_DUT_MAP1183                0x0001180080E024F8  RSL         
L2C_DUT_MAP1184                0x0001180080E02500  RSL         
L2C_DUT_MAP1185                0x0001180080E02508  RSL         
L2C_DUT_MAP1186                0x0001180080E02510  RSL         
L2C_DUT_MAP1187                0x0001180080E02518  RSL         
L2C_DUT_MAP1188                0x0001180080E02520  RSL         
L2C_DUT_MAP1189                0x0001180080E02528  RSL         
L2C_DUT_MAP1190                0x0001180080E02530  RSL         
L2C_DUT_MAP1191                0x0001180080E02538  RSL         
L2C_DUT_MAP1192                0x0001180080E02540  RSL         
L2C_DUT_MAP1193                0x0001180080E02548  RSL         
L2C_DUT_MAP1194                0x0001180080E02550  RSL         
L2C_DUT_MAP1195                0x0001180080E02558  RSL         
L2C_DUT_MAP1196                0x0001180080E02560  RSL         
L2C_DUT_MAP1197                0x0001180080E02568  RSL         
L2C_DUT_MAP1198                0x0001180080E02570  RSL         
L2C_DUT_MAP1199                0x0001180080E02578  RSL         
L2C_DUT_MAP1200                0x0001180080E02580  RSL         
L2C_DUT_MAP1201                0x0001180080E02588  RSL         
L2C_DUT_MAP1202                0x0001180080E02590  RSL         
L2C_DUT_MAP1203                0x0001180080E02598  RSL         
L2C_DUT_MAP1204                0x0001180080E025A0  RSL         
L2C_DUT_MAP1205                0x0001180080E025A8  RSL         
L2C_DUT_MAP1206                0x0001180080E025B0  RSL         
L2C_DUT_MAP1207                0x0001180080E025B8  RSL         
L2C_DUT_MAP1208                0x0001180080E025C0  RSL         
L2C_DUT_MAP1209                0x0001180080E025C8  RSL         
L2C_DUT_MAP1210                0x0001180080E025D0  RSL         
L2C_DUT_MAP1211                0x0001180080E025D8  RSL         
L2C_DUT_MAP1212                0x0001180080E025E0  RSL         
L2C_DUT_MAP1213                0x0001180080E025E8  RSL         
L2C_DUT_MAP1214                0x0001180080E025F0  RSL         
L2C_DUT_MAP1215                0x0001180080E025F8  RSL         
L2C_DUT_MAP1216                0x0001180080E02600  RSL         
L2C_DUT_MAP1217                0x0001180080E02608  RSL         
L2C_DUT_MAP1218                0x0001180080E02610  RSL         
L2C_DUT_MAP1219                0x0001180080E02618  RSL         
L2C_DUT_MAP1220                0x0001180080E02620  RSL         
L2C_DUT_MAP1221                0x0001180080E02628  RSL         
L2C_DUT_MAP1222                0x0001180080E02630  RSL         
L2C_DUT_MAP1223                0x0001180080E02638  RSL         
L2C_DUT_MAP1224                0x0001180080E02640  RSL         
L2C_DUT_MAP1225                0x0001180080E02648  RSL         
L2C_DUT_MAP1226                0x0001180080E02650  RSL         
L2C_DUT_MAP1227                0x0001180080E02658  RSL         
L2C_DUT_MAP1228                0x0001180080E02660  RSL         
L2C_DUT_MAP1229                0x0001180080E02668  RSL         
L2C_DUT_MAP1230                0x0001180080E02670  RSL         
L2C_DUT_MAP1231                0x0001180080E02678  RSL         
L2C_DUT_MAP1232                0x0001180080E02680  RSL         
L2C_DUT_MAP1233                0x0001180080E02688  RSL         
L2C_DUT_MAP1234                0x0001180080E02690  RSL         
L2C_DUT_MAP1235                0x0001180080E02698  RSL         
L2C_DUT_MAP1236                0x0001180080E026A0  RSL         
L2C_DUT_MAP1237                0x0001180080E026A8  RSL         
L2C_DUT_MAP1238                0x0001180080E026B0  RSL         
L2C_DUT_MAP1239                0x0001180080E026B8  RSL         
L2C_DUT_MAP1240                0x0001180080E026C0  RSL         
L2C_DUT_MAP1241                0x0001180080E026C8  RSL         
L2C_DUT_MAP1242                0x0001180080E026D0  RSL         
L2C_DUT_MAP1243                0x0001180080E026D8  RSL         
L2C_DUT_MAP1244                0x0001180080E026E0  RSL         
L2C_DUT_MAP1245                0x0001180080E026E8  RSL         
L2C_DUT_MAP1246                0x0001180080E026F0  RSL         
L2C_DUT_MAP1247                0x0001180080E026F8  RSL         
L2C_DUT_MAP1248                0x0001180080E02700  RSL         
L2C_DUT_MAP1249                0x0001180080E02708  RSL         
L2C_DUT_MAP1250                0x0001180080E02710  RSL         
L2C_DUT_MAP1251                0x0001180080E02718  RSL         
L2C_DUT_MAP1252                0x0001180080E02720  RSL         
L2C_DUT_MAP1253                0x0001180080E02728  RSL         
L2C_DUT_MAP1254                0x0001180080E02730  RSL         
L2C_DUT_MAP1255                0x0001180080E02738  RSL         
L2C_DUT_MAP1256                0x0001180080E02740  RSL         
L2C_DUT_MAP1257                0x0001180080E02748  RSL         
L2C_DUT_MAP1258                0x0001180080E02750  RSL         
L2C_DUT_MAP1259                0x0001180080E02758  RSL         
L2C_DUT_MAP1260                0x0001180080E02760  RSL         
L2C_DUT_MAP1261                0x0001180080E02768  RSL         
L2C_DUT_MAP1262                0x0001180080E02770  RSL         
L2C_DUT_MAP1263                0x0001180080E02778  RSL         
L2C_DUT_MAP1264                0x0001180080E02780  RSL         
L2C_DUT_MAP1265                0x0001180080E02788  RSL         
L2C_DUT_MAP1266                0x0001180080E02790  RSL         
L2C_DUT_MAP1267                0x0001180080E02798  RSL         
L2C_DUT_MAP1268                0x0001180080E027A0  RSL         
L2C_DUT_MAP1269                0x0001180080E027A8  RSL         
L2C_DUT_MAP1270                0x0001180080E027B0  RSL         
L2C_DUT_MAP1271                0x0001180080E027B8  RSL         
L2C_DUT_MAP1272                0x0001180080E027C0  RSL         
L2C_DUT_MAP1273                0x0001180080E027C8  RSL         
L2C_DUT_MAP1274                0x0001180080E027D0  RSL         
L2C_DUT_MAP1275                0x0001180080E027D8  RSL         
L2C_DUT_MAP1276                0x0001180080E027E0  RSL         
L2C_DUT_MAP1277                0x0001180080E027E8  RSL         
L2C_DUT_MAP1278                0x0001180080E027F0  RSL         
L2C_DUT_MAP1279                0x0001180080E027F8  RSL         
L2C_DUT_MAP1280                0x0001180080E02800  RSL         
L2C_DUT_MAP1281                0x0001180080E02808  RSL         
L2C_DUT_MAP1282                0x0001180080E02810  RSL         
L2C_DUT_MAP1283                0x0001180080E02818  RSL         
L2C_DUT_MAP1284                0x0001180080E02820  RSL         
L2C_DUT_MAP1285                0x0001180080E02828  RSL         
L2C_DUT_MAP1286                0x0001180080E02830  RSL         
L2C_DUT_MAP1287                0x0001180080E02838  RSL         
L2C_DUT_MAP1288                0x0001180080E02840  RSL         
L2C_DUT_MAP1289                0x0001180080E02848  RSL         
L2C_DUT_MAP1290                0x0001180080E02850  RSL         
L2C_DUT_MAP1291                0x0001180080E02858  RSL         
L2C_DUT_MAP1292                0x0001180080E02860  RSL         
L2C_DUT_MAP1293                0x0001180080E02868  RSL         
L2C_DUT_MAP1294                0x0001180080E02870  RSL         
L2C_DUT_MAP1295                0x0001180080E02878  RSL         
L2C_DUT_MAP1296                0x0001180080E02880  RSL         
L2C_DUT_MAP1297                0x0001180080E02888  RSL         
L2C_DUT_MAP1298                0x0001180080E02890  RSL         
L2C_DUT_MAP1299                0x0001180080E02898  RSL         
L2C_DUT_MAP1300                0x0001180080E028A0  RSL         
L2C_DUT_MAP1301                0x0001180080E028A8  RSL         
L2C_DUT_MAP1302                0x0001180080E028B0  RSL         
L2C_DUT_MAP1303                0x0001180080E028B8  RSL         
L2C_DUT_MAP1304                0x0001180080E028C0  RSL         
L2C_DUT_MAP1305                0x0001180080E028C8  RSL         
L2C_DUT_MAP1306                0x0001180080E028D0  RSL         
L2C_DUT_MAP1307                0x0001180080E028D8  RSL         
L2C_DUT_MAP1308                0x0001180080E028E0  RSL         
L2C_DUT_MAP1309                0x0001180080E028E8  RSL         
L2C_DUT_MAP1310                0x0001180080E028F0  RSL         
L2C_DUT_MAP1311                0x0001180080E028F8  RSL         
L2C_DUT_MAP1312                0x0001180080E02900  RSL         
L2C_DUT_MAP1313                0x0001180080E02908  RSL         
L2C_DUT_MAP1314                0x0001180080E02910  RSL         
L2C_DUT_MAP1315                0x0001180080E02918  RSL         
L2C_DUT_MAP1316                0x0001180080E02920  RSL         
L2C_DUT_MAP1317                0x0001180080E02928  RSL         
L2C_DUT_MAP1318                0x0001180080E02930  RSL         
L2C_DUT_MAP1319                0x0001180080E02938  RSL         
L2C_DUT_MAP1320                0x0001180080E02940  RSL         
L2C_DUT_MAP1321                0x0001180080E02948  RSL         
L2C_DUT_MAP1322                0x0001180080E02950  RSL         
L2C_DUT_MAP1323                0x0001180080E02958  RSL         
L2C_DUT_MAP1324                0x0001180080E02960  RSL         
L2C_DUT_MAP1325                0x0001180080E02968  RSL         
L2C_DUT_MAP1326                0x0001180080E02970  RSL         
L2C_DUT_MAP1327                0x0001180080E02978  RSL         
L2C_DUT_MAP1328                0x0001180080E02980  RSL         
L2C_DUT_MAP1329                0x0001180080E02988  RSL         
L2C_DUT_MAP1330                0x0001180080E02990  RSL         
L2C_DUT_MAP1331                0x0001180080E02998  RSL         
L2C_DUT_MAP1332                0x0001180080E029A0  RSL         
L2C_DUT_MAP1333                0x0001180080E029A8  RSL         
L2C_DUT_MAP1334                0x0001180080E029B0  RSL         
L2C_DUT_MAP1335                0x0001180080E029B8  RSL         
L2C_DUT_MAP1336                0x0001180080E029C0  RSL         
L2C_DUT_MAP1337                0x0001180080E029C8  RSL         
L2C_DUT_MAP1338                0x0001180080E029D0  RSL         
L2C_DUT_MAP1339                0x0001180080E029D8  RSL         
L2C_DUT_MAP1340                0x0001180080E029E0  RSL         
L2C_DUT_MAP1341                0x0001180080E029E8  RSL         
L2C_DUT_MAP1342                0x0001180080E029F0  RSL         
L2C_DUT_MAP1343                0x0001180080E029F8  RSL         
L2C_DUT_MAP1344                0x0001180080E02A00  RSL         
L2C_DUT_MAP1345                0x0001180080E02A08  RSL         
L2C_DUT_MAP1346                0x0001180080E02A10  RSL         
L2C_DUT_MAP1347                0x0001180080E02A18  RSL         
L2C_DUT_MAP1348                0x0001180080E02A20  RSL         
L2C_DUT_MAP1349                0x0001180080E02A28  RSL         
L2C_DUT_MAP1350                0x0001180080E02A30  RSL         
L2C_DUT_MAP1351                0x0001180080E02A38  RSL         
L2C_DUT_MAP1352                0x0001180080E02A40  RSL         
L2C_DUT_MAP1353                0x0001180080E02A48  RSL         
L2C_DUT_MAP1354                0x0001180080E02A50  RSL         
L2C_DUT_MAP1355                0x0001180080E02A58  RSL         
L2C_DUT_MAP1356                0x0001180080E02A60  RSL         
L2C_DUT_MAP1357                0x0001180080E02A68  RSL         
L2C_DUT_MAP1358                0x0001180080E02A70  RSL         
L2C_DUT_MAP1359                0x0001180080E02A78  RSL         
L2C_DUT_MAP1360                0x0001180080E02A80  RSL         
L2C_DUT_MAP1361                0x0001180080E02A88  RSL         
L2C_DUT_MAP1362                0x0001180080E02A90  RSL         
L2C_DUT_MAP1363                0x0001180080E02A98  RSL         
L2C_DUT_MAP1364                0x0001180080E02AA0  RSL         
L2C_DUT_MAP1365                0x0001180080E02AA8  RSL         
L2C_DUT_MAP1366                0x0001180080E02AB0  RSL         
L2C_DUT_MAP1367                0x0001180080E02AB8  RSL         
L2C_DUT_MAP1368                0x0001180080E02AC0  RSL         
L2C_DUT_MAP1369                0x0001180080E02AC8  RSL         
L2C_DUT_MAP1370                0x0001180080E02AD0  RSL         
L2C_DUT_MAP1371                0x0001180080E02AD8  RSL         
L2C_DUT_MAP1372                0x0001180080E02AE0  RSL         
L2C_DUT_MAP1373                0x0001180080E02AE8  RSL         
L2C_DUT_MAP1374                0x0001180080E02AF0  RSL         
L2C_DUT_MAP1375                0x0001180080E02AF8  RSL         
L2C_DUT_MAP1376                0x0001180080E02B00  RSL         
L2C_DUT_MAP1377                0x0001180080E02B08  RSL         
L2C_DUT_MAP1378                0x0001180080E02B10  RSL         
L2C_DUT_MAP1379                0x0001180080E02B18  RSL         
L2C_DUT_MAP1380                0x0001180080E02B20  RSL         
L2C_DUT_MAP1381                0x0001180080E02B28  RSL         
L2C_DUT_MAP1382                0x0001180080E02B30  RSL         
L2C_DUT_MAP1383                0x0001180080E02B38  RSL         
L2C_DUT_MAP1384                0x0001180080E02B40  RSL         
L2C_DUT_MAP1385                0x0001180080E02B48  RSL         
L2C_DUT_MAP1386                0x0001180080E02B50  RSL         
L2C_DUT_MAP1387                0x0001180080E02B58  RSL         
L2C_DUT_MAP1388                0x0001180080E02B60  RSL         
L2C_DUT_MAP1389                0x0001180080E02B68  RSL         
L2C_DUT_MAP1390                0x0001180080E02B70  RSL         
L2C_DUT_MAP1391                0x0001180080E02B78  RSL         
L2C_DUT_MAP1392                0x0001180080E02B80  RSL         
L2C_DUT_MAP1393                0x0001180080E02B88  RSL         
L2C_DUT_MAP1394                0x0001180080E02B90  RSL         
L2C_DUT_MAP1395                0x0001180080E02B98  RSL         
L2C_DUT_MAP1396                0x0001180080E02BA0  RSL         
L2C_DUT_MAP1397                0x0001180080E02BA8  RSL         
L2C_DUT_MAP1398                0x0001180080E02BB0  RSL         
L2C_DUT_MAP1399                0x0001180080E02BB8  RSL         
L2C_DUT_MAP1400                0x0001180080E02BC0  RSL         
L2C_DUT_MAP1401                0x0001180080E02BC8  RSL         
L2C_DUT_MAP1402                0x0001180080E02BD0  RSL         
L2C_DUT_MAP1403                0x0001180080E02BD8  RSL         
L2C_DUT_MAP1404                0x0001180080E02BE0  RSL         
L2C_DUT_MAP1405                0x0001180080E02BE8  RSL         
L2C_DUT_MAP1406                0x0001180080E02BF0  RSL         
L2C_DUT_MAP1407                0x0001180080E02BF8  RSL         
L2C_DUT_MAP1408                0x0001180080E02C00  RSL         
L2C_DUT_MAP1409                0x0001180080E02C08  RSL         
L2C_DUT_MAP1410                0x0001180080E02C10  RSL         
L2C_DUT_MAP1411                0x0001180080E02C18  RSL         
L2C_DUT_MAP1412                0x0001180080E02C20  RSL         
L2C_DUT_MAP1413                0x0001180080E02C28  RSL         
L2C_DUT_MAP1414                0x0001180080E02C30  RSL         
L2C_DUT_MAP1415                0x0001180080E02C38  RSL         
L2C_DUT_MAP1416                0x0001180080E02C40  RSL         
L2C_DUT_MAP1417                0x0001180080E02C48  RSL         
L2C_DUT_MAP1418                0x0001180080E02C50  RSL         
L2C_DUT_MAP1419                0x0001180080E02C58  RSL         
L2C_DUT_MAP1420                0x0001180080E02C60  RSL         
L2C_DUT_MAP1421                0x0001180080E02C68  RSL         
L2C_DUT_MAP1422                0x0001180080E02C70  RSL         
L2C_DUT_MAP1423                0x0001180080E02C78  RSL         
L2C_DUT_MAP1424                0x0001180080E02C80  RSL         
L2C_DUT_MAP1425                0x0001180080E02C88  RSL         
L2C_DUT_MAP1426                0x0001180080E02C90  RSL         
L2C_DUT_MAP1427                0x0001180080E02C98  RSL         
L2C_DUT_MAP1428                0x0001180080E02CA0  RSL         
L2C_DUT_MAP1429                0x0001180080E02CA8  RSL         
L2C_DUT_MAP1430                0x0001180080E02CB0  RSL         
L2C_DUT_MAP1431                0x0001180080E02CB8  RSL         
L2C_DUT_MAP1432                0x0001180080E02CC0  RSL         
L2C_DUT_MAP1433                0x0001180080E02CC8  RSL         
L2C_DUT_MAP1434                0x0001180080E02CD0  RSL         
L2C_DUT_MAP1435                0x0001180080E02CD8  RSL         
L2C_DUT_MAP1436                0x0001180080E02CE0  RSL         
L2C_DUT_MAP1437                0x0001180080E02CE8  RSL         
L2C_DUT_MAP1438                0x0001180080E02CF0  RSL         
L2C_DUT_MAP1439                0x0001180080E02CF8  RSL         
L2C_DUT_MAP1440                0x0001180080E02D00  RSL         
L2C_DUT_MAP1441                0x0001180080E02D08  RSL         
L2C_DUT_MAP1442                0x0001180080E02D10  RSL         
L2C_DUT_MAP1443                0x0001180080E02D18  RSL         
L2C_DUT_MAP1444                0x0001180080E02D20  RSL         
L2C_DUT_MAP1445                0x0001180080E02D28  RSL         
L2C_DUT_MAP1446                0x0001180080E02D30  RSL         
L2C_DUT_MAP1447                0x0001180080E02D38  RSL         
L2C_DUT_MAP1448                0x0001180080E02D40  RSL         
L2C_DUT_MAP1449                0x0001180080E02D48  RSL         
L2C_DUT_MAP1450                0x0001180080E02D50  RSL         
L2C_DUT_MAP1451                0x0001180080E02D58  RSL         
L2C_DUT_MAP1452                0x0001180080E02D60  RSL         
L2C_DUT_MAP1453                0x0001180080E02D68  RSL         
L2C_DUT_MAP1454                0x0001180080E02D70  RSL         
L2C_DUT_MAP1455                0x0001180080E02D78  RSL         
L2C_DUT_MAP1456                0x0001180080E02D80  RSL         
L2C_DUT_MAP1457                0x0001180080E02D88  RSL         
L2C_DUT_MAP1458                0x0001180080E02D90  RSL         
L2C_DUT_MAP1459                0x0001180080E02D98  RSL         
L2C_DUT_MAP1460                0x0001180080E02DA0  RSL         
L2C_DUT_MAP1461                0x0001180080E02DA8  RSL         
L2C_DUT_MAP1462                0x0001180080E02DB0  RSL         
L2C_DUT_MAP1463                0x0001180080E02DB8  RSL         
L2C_DUT_MAP1464                0x0001180080E02DC0  RSL         
L2C_DUT_MAP1465                0x0001180080E02DC8  RSL         
L2C_DUT_MAP1466                0x0001180080E02DD0  RSL         
L2C_DUT_MAP1467                0x0001180080E02DD8  RSL         
L2C_DUT_MAP1468                0x0001180080E02DE0  RSL         
L2C_DUT_MAP1469                0x0001180080E02DE8  RSL         
L2C_DUT_MAP1470                0x0001180080E02DF0  RSL         
L2C_DUT_MAP1471                0x0001180080E02DF8  RSL         
L2C_DUT_MAP1472                0x0001180080E02E00  RSL         
L2C_DUT_MAP1473                0x0001180080E02E08  RSL         
L2C_DUT_MAP1474                0x0001180080E02E10  RSL         
L2C_DUT_MAP1475                0x0001180080E02E18  RSL         
L2C_DUT_MAP1476                0x0001180080E02E20  RSL         
L2C_DUT_MAP1477                0x0001180080E02E28  RSL         
L2C_DUT_MAP1478                0x0001180080E02E30  RSL         
L2C_DUT_MAP1479                0x0001180080E02E38  RSL         
L2C_DUT_MAP1480                0x0001180080E02E40  RSL         
L2C_DUT_MAP1481                0x0001180080E02E48  RSL         
L2C_DUT_MAP1482                0x0001180080E02E50  RSL         
L2C_DUT_MAP1483                0x0001180080E02E58  RSL         
L2C_DUT_MAP1484                0x0001180080E02E60  RSL         
L2C_DUT_MAP1485                0x0001180080E02E68  RSL         
L2C_DUT_MAP1486                0x0001180080E02E70  RSL         
L2C_DUT_MAP1487                0x0001180080E02E78  RSL         
L2C_DUT_MAP1488                0x0001180080E02E80  RSL         
L2C_DUT_MAP1489                0x0001180080E02E88  RSL         
L2C_DUT_MAP1490                0x0001180080E02E90  RSL         
L2C_DUT_MAP1491                0x0001180080E02E98  RSL         
L2C_DUT_MAP1492                0x0001180080E02EA0  RSL         
L2C_DUT_MAP1493                0x0001180080E02EA8  RSL         
L2C_DUT_MAP1494                0x0001180080E02EB0  RSL         
L2C_DUT_MAP1495                0x0001180080E02EB8  RSL         
L2C_DUT_MAP1496                0x0001180080E02EC0  RSL         
L2C_DUT_MAP1497                0x0001180080E02EC8  RSL         
L2C_DUT_MAP1498                0x0001180080E02ED0  RSL         
L2C_DUT_MAP1499                0x0001180080E02ED8  RSL         
L2C_DUT_MAP1500                0x0001180080E02EE0  RSL         
L2C_DUT_MAP1501                0x0001180080E02EE8  RSL         
L2C_DUT_MAP1502                0x0001180080E02EF0  RSL         
L2C_DUT_MAP1503                0x0001180080E02EF8  RSL         
L2C_DUT_MAP1504                0x0001180080E02F00  RSL         
L2C_DUT_MAP1505                0x0001180080E02F08  RSL         
L2C_DUT_MAP1506                0x0001180080E02F10  RSL         
L2C_DUT_MAP1507                0x0001180080E02F18  RSL         
L2C_DUT_MAP1508                0x0001180080E02F20  RSL         
L2C_DUT_MAP1509                0x0001180080E02F28  RSL         
L2C_DUT_MAP1510                0x0001180080E02F30  RSL         
L2C_DUT_MAP1511                0x0001180080E02F38  RSL         
L2C_DUT_MAP1512                0x0001180080E02F40  RSL         
L2C_DUT_MAP1513                0x0001180080E02F48  RSL         
L2C_DUT_MAP1514                0x0001180080E02F50  RSL         
L2C_DUT_MAP1515                0x0001180080E02F58  RSL         
L2C_DUT_MAP1516                0x0001180080E02F60  RSL         
L2C_DUT_MAP1517                0x0001180080E02F68  RSL         
L2C_DUT_MAP1518                0x0001180080E02F70  RSL         
L2C_DUT_MAP1519                0x0001180080E02F78  RSL         
L2C_DUT_MAP1520                0x0001180080E02F80  RSL         
L2C_DUT_MAP1521                0x0001180080E02F88  RSL         
L2C_DUT_MAP1522                0x0001180080E02F90  RSL         
L2C_DUT_MAP1523                0x0001180080E02F98  RSL         
L2C_DUT_MAP1524                0x0001180080E02FA0  RSL         
L2C_DUT_MAP1525                0x0001180080E02FA8  RSL         
L2C_DUT_MAP1526                0x0001180080E02FB0  RSL         
L2C_DUT_MAP1527                0x0001180080E02FB8  RSL         
L2C_DUT_MAP1528                0x0001180080E02FC0  RSL         
L2C_DUT_MAP1529                0x0001180080E02FC8  RSL         
L2C_DUT_MAP1530                0x0001180080E02FD0  RSL         
L2C_DUT_MAP1531                0x0001180080E02FD8  RSL         
L2C_DUT_MAP1532                0x0001180080E02FE0  RSL         
L2C_DUT_MAP1533                0x0001180080E02FE8  RSL         
L2C_DUT_MAP1534                0x0001180080E02FF0  RSL         
L2C_DUT_MAP1535                0x0001180080E02FF8  RSL         
L2C_ERR_TDT0                   0x0001180080A007E0  RSL         
L2C_ERR_TTG0                   0x0001180080A007E8  RSL         
L2C_ERR_VBF0                   0x0001180080C007F0  RSL         
L2C_ERR_XMC                    0x00011800808007D8  RSL         
L2C_INT_ENA                    0x0001180080800020  RSL         
L2C_INT_REG                    0x0001180080800018  RSL         
L2C_IOC0_PFC                   0x0001180080800420  RSL         
L2C_IOR0_PFC                   0x0001180080800428  RSL         
L2C_QOS_IOB0                   0x0001180080880200  RSL         
L2C_QOS_PP0                    0x0001180080880000  RSL         
L2C_QOS_PP1                    0x0001180080880008  RSL         
L2C_QOS_PP2                    0x0001180080880010  RSL         
L2C_QOS_PP3                    0x0001180080880018  RSL         
L2C_QOS_PP4                    0x0001180080880020  RSL         
L2C_QOS_PP5                    0x0001180080880028  RSL         
L2C_QOS_WGT                    0x0001180080800008  RSL         
L2C_RSC0_PFC                   0x0001180080800410  RSL         
L2C_RSD0_PFC                   0x0001180080800418  RSL         
L2C_TAD0_ECC0                  0x0001180080A00018  RSL         
L2C_TAD0_ECC1                  0x0001180080A00020  RSL         
L2C_TAD0_IEN                   0x0001180080A00000  RSL         
L2C_TAD0_PFC0                  0x0001180080A00400  RSL         
L2C_TAD0_PFC1                  0x0001180080A00408  RSL         
L2C_TAD0_PFC2                  0x0001180080A00410  RSL         
L2C_TAD0_PFC3                  0x0001180080A00418  RSL         
L2C_TAD0_PRF                   0x0001180080A00008  RSL         
L2C_TAD0_TAG                   0x0001180080A00010  RSL         
L2C_VER_ID                     0x00011800808007E0  RSL         
L2C_VER_IOB                    0x00011800808007F0  RSL         
L2C_VER_PP                     0x00011800808007E8  RSL         
L2C_VIRTID_IOB0                0x00011800808C0200  RSL         
L2C_VIRTID_PP0                 0x00011800808C0000  RSL         
L2C_VIRTID_PP1                 0x00011800808C0008  RSL         
L2C_VIRTID_PP2                 0x00011800808C0010  RSL         
L2C_VIRTID_PP3                 0x00011800808C0018  RSL         
L2C_VIRTID_PP4                 0x00011800808C0020  RSL         
L2C_VIRTID_PP5                 0x00011800808C0028  RSL         
L2C_VRT_CTL                    0x0001180080800010  RSL         
L2C_VRT_MEM0                   0x0001180080900000  RSL         
L2C_VRT_MEM1                   0x0001180080900008  RSL         
L2C_VRT_MEM2                   0x0001180080900010  RSL         
L2C_VRT_MEM3                   0x0001180080900018  RSL         
L2C_VRT_MEM4                   0x0001180080900020  RSL         
L2C_VRT_MEM5                   0x0001180080900028  RSL         
L2C_VRT_MEM6                   0x0001180080900030  RSL         
L2C_VRT_MEM7                   0x0001180080900038  RSL         
L2C_VRT_MEM8                   0x0001180080900040  RSL         
L2C_VRT_MEM9                   0x0001180080900048  RSL         
L2C_VRT_MEM10                  0x0001180080900050  RSL         
L2C_VRT_MEM11                  0x0001180080900058  RSL         
L2C_VRT_MEM12                  0x0001180080900060  RSL         
L2C_VRT_MEM13                  0x0001180080900068  RSL         
L2C_VRT_MEM14                  0x0001180080900070  RSL         
L2C_VRT_MEM15                  0x0001180080900078  RSL         
L2C_VRT_MEM16                  0x0001180080900080  RSL         
L2C_VRT_MEM17                  0x0001180080900088  RSL         
L2C_VRT_MEM18                  0x0001180080900090  RSL         
L2C_VRT_MEM19                  0x0001180080900098  RSL         
L2C_VRT_MEM20                  0x00011800809000A0  RSL         
L2C_VRT_MEM21                  0x00011800809000A8  RSL         
L2C_VRT_MEM22                  0x00011800809000B0  RSL         
L2C_VRT_MEM23                  0x00011800809000B8  RSL         
L2C_VRT_MEM24                  0x00011800809000C0  RSL         
L2C_VRT_MEM25                  0x00011800809000C8  RSL         
L2C_VRT_MEM26                  0x00011800809000D0  RSL         
L2C_VRT_MEM27                  0x00011800809000D8  RSL         
L2C_VRT_MEM28                  0x00011800809000E0  RSL         
L2C_VRT_MEM29                  0x00011800809000E8  RSL         
L2C_VRT_MEM30                  0x00011800809000F0  RSL         
L2C_VRT_MEM31                  0x00011800809000F8  RSL         
L2C_VRT_MEM32                  0x0001180080900100  RSL         
L2C_VRT_MEM33                  0x0001180080900108  RSL         
L2C_VRT_MEM34                  0x0001180080900110  RSL         
L2C_VRT_MEM35                  0x0001180080900118  RSL         
L2C_VRT_MEM36                  0x0001180080900120  RSL         
L2C_VRT_MEM37                  0x0001180080900128  RSL         
L2C_VRT_MEM38                  0x0001180080900130  RSL         
L2C_VRT_MEM39                  0x0001180080900138  RSL         
L2C_VRT_MEM40                  0x0001180080900140  RSL         
L2C_VRT_MEM41                  0x0001180080900148  RSL         
L2C_VRT_MEM42                  0x0001180080900150  RSL         
L2C_VRT_MEM43                  0x0001180080900158  RSL         
L2C_VRT_MEM44                  0x0001180080900160  RSL         
L2C_VRT_MEM45                  0x0001180080900168  RSL         
L2C_VRT_MEM46                  0x0001180080900170  RSL         
L2C_VRT_MEM47                  0x0001180080900178  RSL         
L2C_VRT_MEM48                  0x0001180080900180  RSL         
L2C_VRT_MEM49                  0x0001180080900188  RSL         
L2C_VRT_MEM50                  0x0001180080900190  RSL         
L2C_VRT_MEM51                  0x0001180080900198  RSL         
L2C_VRT_MEM52                  0x00011800809001A0  RSL         
L2C_VRT_MEM53                  0x00011800809001A8  RSL         
L2C_VRT_MEM54                  0x00011800809001B0  RSL         
L2C_VRT_MEM55                  0x00011800809001B8  RSL         
L2C_VRT_MEM56                  0x00011800809001C0  RSL         
L2C_VRT_MEM57                  0x00011800809001C8  RSL         
L2C_VRT_MEM58                  0x00011800809001D0  RSL         
L2C_VRT_MEM59                  0x00011800809001D8  RSL         
L2C_VRT_MEM60                  0x00011800809001E0  RSL         
L2C_VRT_MEM61                  0x00011800809001E8  RSL         
L2C_VRT_MEM62                  0x00011800809001F0  RSL         
L2C_VRT_MEM63                  0x00011800809001F8  RSL         
L2C_VRT_MEM64                  0x0001180080900200  RSL         
L2C_VRT_MEM65                  0x0001180080900208  RSL         
L2C_VRT_MEM66                  0x0001180080900210  RSL         
L2C_VRT_MEM67                  0x0001180080900218  RSL         
L2C_VRT_MEM68                  0x0001180080900220  RSL         
L2C_VRT_MEM69                  0x0001180080900228  RSL         
L2C_VRT_MEM70                  0x0001180080900230  RSL         
L2C_VRT_MEM71                  0x0001180080900238  RSL         
L2C_VRT_MEM72                  0x0001180080900240  RSL         
L2C_VRT_MEM73                  0x0001180080900248  RSL         
L2C_VRT_MEM74                  0x0001180080900250  RSL         
L2C_VRT_MEM75                  0x0001180080900258  RSL         
L2C_VRT_MEM76                  0x0001180080900260  RSL         
L2C_VRT_MEM77                  0x0001180080900268  RSL         
L2C_VRT_MEM78                  0x0001180080900270  RSL         
L2C_VRT_MEM79                  0x0001180080900278  RSL         
L2C_VRT_MEM80                  0x0001180080900280  RSL         
L2C_VRT_MEM81                  0x0001180080900288  RSL         
L2C_VRT_MEM82                  0x0001180080900290  RSL         
L2C_VRT_MEM83                  0x0001180080900298  RSL         
L2C_VRT_MEM84                  0x00011800809002A0  RSL         
L2C_VRT_MEM85                  0x00011800809002A8  RSL         
L2C_VRT_MEM86                  0x00011800809002B0  RSL         
L2C_VRT_MEM87                  0x00011800809002B8  RSL         
L2C_VRT_MEM88                  0x00011800809002C0  RSL         
L2C_VRT_MEM89                  0x00011800809002C8  RSL         
L2C_VRT_MEM90                  0x00011800809002D0  RSL         
L2C_VRT_MEM91                  0x00011800809002D8  RSL         
L2C_VRT_MEM92                  0x00011800809002E0  RSL         
L2C_VRT_MEM93                  0x00011800809002E8  RSL         
L2C_VRT_MEM94                  0x00011800809002F0  RSL         
L2C_VRT_MEM95                  0x00011800809002F8  RSL         
L2C_VRT_MEM96                  0x0001180080900300  RSL         
L2C_VRT_MEM97                  0x0001180080900308  RSL         
L2C_VRT_MEM98                  0x0001180080900310  RSL         
L2C_VRT_MEM99                  0x0001180080900318  RSL         
L2C_VRT_MEM100                 0x0001180080900320  RSL         
L2C_VRT_MEM101                 0x0001180080900328  RSL         
L2C_VRT_MEM102                 0x0001180080900330  RSL         
L2C_VRT_MEM103                 0x0001180080900338  RSL         
L2C_VRT_MEM104                 0x0001180080900340  RSL         
L2C_VRT_MEM105                 0x0001180080900348  RSL         
L2C_VRT_MEM106                 0x0001180080900350  RSL         
L2C_VRT_MEM107                 0x0001180080900358  RSL         
L2C_VRT_MEM108                 0x0001180080900360  RSL         
L2C_VRT_MEM109                 0x0001180080900368  RSL         
L2C_VRT_MEM110                 0x0001180080900370  RSL         
L2C_VRT_MEM111                 0x0001180080900378  RSL         
L2C_VRT_MEM112                 0x0001180080900380  RSL         
L2C_VRT_MEM113                 0x0001180080900388  RSL         
L2C_VRT_MEM114                 0x0001180080900390  RSL         
L2C_VRT_MEM115                 0x0001180080900398  RSL         
L2C_VRT_MEM116                 0x00011800809003A0  RSL         
L2C_VRT_MEM117                 0x00011800809003A8  RSL         
L2C_VRT_MEM118                 0x00011800809003B0  RSL         
L2C_VRT_MEM119                 0x00011800809003B8  RSL         
L2C_VRT_MEM120                 0x00011800809003C0  RSL         
L2C_VRT_MEM121                 0x00011800809003C8  RSL         
L2C_VRT_MEM122                 0x00011800809003D0  RSL         
L2C_VRT_MEM123                 0x00011800809003D8  RSL         
L2C_VRT_MEM124                 0x00011800809003E0  RSL         
L2C_VRT_MEM125                 0x00011800809003E8  RSL         
L2C_VRT_MEM126                 0x00011800809003F0  RSL         
L2C_VRT_MEM127                 0x00011800809003F8  RSL         
L2C_VRT_MEM128                 0x0001180080900400  RSL         
L2C_VRT_MEM129                 0x0001180080900408  RSL         
L2C_VRT_MEM130                 0x0001180080900410  RSL         
L2C_VRT_MEM131                 0x0001180080900418  RSL         
L2C_VRT_MEM132                 0x0001180080900420  RSL         
L2C_VRT_MEM133                 0x0001180080900428  RSL         
L2C_VRT_MEM134                 0x0001180080900430  RSL         
L2C_VRT_MEM135                 0x0001180080900438  RSL         
L2C_VRT_MEM136                 0x0001180080900440  RSL         
L2C_VRT_MEM137                 0x0001180080900448  RSL         
L2C_VRT_MEM138                 0x0001180080900450  RSL         
L2C_VRT_MEM139                 0x0001180080900458  RSL         
L2C_VRT_MEM140                 0x0001180080900460  RSL         
L2C_VRT_MEM141                 0x0001180080900468  RSL         
L2C_VRT_MEM142                 0x0001180080900470  RSL         
L2C_VRT_MEM143                 0x0001180080900478  RSL         
L2C_VRT_MEM144                 0x0001180080900480  RSL         
L2C_VRT_MEM145                 0x0001180080900488  RSL         
L2C_VRT_MEM146                 0x0001180080900490  RSL         
L2C_VRT_MEM147                 0x0001180080900498  RSL         
L2C_VRT_MEM148                 0x00011800809004A0  RSL         
L2C_VRT_MEM149                 0x00011800809004A8  RSL         
L2C_VRT_MEM150                 0x00011800809004B0  RSL         
L2C_VRT_MEM151                 0x00011800809004B8  RSL         
L2C_VRT_MEM152                 0x00011800809004C0  RSL         
L2C_VRT_MEM153                 0x00011800809004C8  RSL         
L2C_VRT_MEM154                 0x00011800809004D0  RSL         
L2C_VRT_MEM155                 0x00011800809004D8  RSL         
L2C_VRT_MEM156                 0x00011800809004E0  RSL         
L2C_VRT_MEM157                 0x00011800809004E8  RSL         
L2C_VRT_MEM158                 0x00011800809004F0  RSL         
L2C_VRT_MEM159                 0x00011800809004F8  RSL         
L2C_VRT_MEM160                 0x0001180080900500  RSL         
L2C_VRT_MEM161                 0x0001180080900508  RSL         
L2C_VRT_MEM162                 0x0001180080900510  RSL         
L2C_VRT_MEM163                 0x0001180080900518  RSL         
L2C_VRT_MEM164                 0x0001180080900520  RSL         
L2C_VRT_MEM165                 0x0001180080900528  RSL         
L2C_VRT_MEM166                 0x0001180080900530  RSL         
L2C_VRT_MEM167                 0x0001180080900538  RSL         
L2C_VRT_MEM168                 0x0001180080900540  RSL         
L2C_VRT_MEM169                 0x0001180080900548  RSL         
L2C_VRT_MEM170                 0x0001180080900550  RSL         
L2C_VRT_MEM171                 0x0001180080900558  RSL         
L2C_VRT_MEM172                 0x0001180080900560  RSL         
L2C_VRT_MEM173                 0x0001180080900568  RSL         
L2C_VRT_MEM174                 0x0001180080900570  RSL         
L2C_VRT_MEM175                 0x0001180080900578  RSL         
L2C_VRT_MEM176                 0x0001180080900580  RSL         
L2C_VRT_MEM177                 0x0001180080900588  RSL         
L2C_VRT_MEM178                 0x0001180080900590  RSL         
L2C_VRT_MEM179                 0x0001180080900598  RSL         
L2C_VRT_MEM180                 0x00011800809005A0  RSL         
L2C_VRT_MEM181                 0x00011800809005A8  RSL         
L2C_VRT_MEM182                 0x00011800809005B0  RSL         
L2C_VRT_MEM183                 0x00011800809005B8  RSL         
L2C_VRT_MEM184                 0x00011800809005C0  RSL         
L2C_VRT_MEM185                 0x00011800809005C8  RSL         
L2C_VRT_MEM186                 0x00011800809005D0  RSL         
L2C_VRT_MEM187                 0x00011800809005D8  RSL         
L2C_VRT_MEM188                 0x00011800809005E0  RSL         
L2C_VRT_MEM189                 0x00011800809005E8  RSL         
L2C_VRT_MEM190                 0x00011800809005F0  RSL         
L2C_VRT_MEM191                 0x00011800809005F8  RSL         
L2C_VRT_MEM192                 0x0001180080900600  RSL         
L2C_VRT_MEM193                 0x0001180080900608  RSL         
L2C_VRT_MEM194                 0x0001180080900610  RSL         
L2C_VRT_MEM195                 0x0001180080900618  RSL         
L2C_VRT_MEM196                 0x0001180080900620  RSL         
L2C_VRT_MEM197                 0x0001180080900628  RSL         
L2C_VRT_MEM198                 0x0001180080900630  RSL         
L2C_VRT_MEM199                 0x0001180080900638  RSL         
L2C_VRT_MEM200                 0x0001180080900640  RSL         
L2C_VRT_MEM201                 0x0001180080900648  RSL         
L2C_VRT_MEM202                 0x0001180080900650  RSL         
L2C_VRT_MEM203                 0x0001180080900658  RSL         
L2C_VRT_MEM204                 0x0001180080900660  RSL         
L2C_VRT_MEM205                 0x0001180080900668  RSL         
L2C_VRT_MEM206                 0x0001180080900670  RSL         
L2C_VRT_MEM207                 0x0001180080900678  RSL         
L2C_VRT_MEM208                 0x0001180080900680  RSL         
L2C_VRT_MEM209                 0x0001180080900688  RSL         
L2C_VRT_MEM210                 0x0001180080900690  RSL         
L2C_VRT_MEM211                 0x0001180080900698  RSL         
L2C_VRT_MEM212                 0x00011800809006A0  RSL         
L2C_VRT_MEM213                 0x00011800809006A8  RSL         
L2C_VRT_MEM214                 0x00011800809006B0  RSL         
L2C_VRT_MEM215                 0x00011800809006B8  RSL         
L2C_VRT_MEM216                 0x00011800809006C0  RSL         
L2C_VRT_MEM217                 0x00011800809006C8  RSL         
L2C_VRT_MEM218                 0x00011800809006D0  RSL         
L2C_VRT_MEM219                 0x00011800809006D8  RSL         
L2C_VRT_MEM220                 0x00011800809006E0  RSL         
L2C_VRT_MEM221                 0x00011800809006E8  RSL         
L2C_VRT_MEM222                 0x00011800809006F0  RSL         
L2C_VRT_MEM223                 0x00011800809006F8  RSL         
L2C_VRT_MEM224                 0x0001180080900700  RSL         
L2C_VRT_MEM225                 0x0001180080900708  RSL         
L2C_VRT_MEM226                 0x0001180080900710  RSL         
L2C_VRT_MEM227                 0x0001180080900718  RSL         
L2C_VRT_MEM228                 0x0001180080900720  RSL         
L2C_VRT_MEM229                 0x0001180080900728  RSL         
L2C_VRT_MEM230                 0x0001180080900730  RSL         
L2C_VRT_MEM231                 0x0001180080900738  RSL         
L2C_VRT_MEM232                 0x0001180080900740  RSL         
L2C_VRT_MEM233                 0x0001180080900748  RSL         
L2C_VRT_MEM234                 0x0001180080900750  RSL         
L2C_VRT_MEM235                 0x0001180080900758  RSL         
L2C_VRT_MEM236                 0x0001180080900760  RSL         
L2C_VRT_MEM237                 0x0001180080900768  RSL         
L2C_VRT_MEM238                 0x0001180080900770  RSL         
L2C_VRT_MEM239                 0x0001180080900778  RSL         
L2C_VRT_MEM240                 0x0001180080900780  RSL         
L2C_VRT_MEM241                 0x0001180080900788  RSL         
L2C_VRT_MEM242                 0x0001180080900790  RSL         
L2C_VRT_MEM243                 0x0001180080900798  RSL         
L2C_VRT_MEM244                 0x00011800809007A0  RSL         
L2C_VRT_MEM245                 0x00011800809007A8  RSL         
L2C_VRT_MEM246                 0x00011800809007B0  RSL         
L2C_VRT_MEM247                 0x00011800809007B8  RSL         
L2C_VRT_MEM248                 0x00011800809007C0  RSL         
L2C_VRT_MEM249                 0x00011800809007C8  RSL         
L2C_VRT_MEM250                 0x00011800809007D0  RSL         
L2C_VRT_MEM251                 0x00011800809007D8  RSL         
L2C_VRT_MEM252                 0x00011800809007E0  RSL         
L2C_VRT_MEM253                 0x00011800809007E8  RSL         
L2C_VRT_MEM254                 0x00011800809007F0  RSL         
L2C_VRT_MEM255                 0x00011800809007F8  RSL         
L2C_VRT_MEM256                 0x0001180080900800  RSL         
L2C_VRT_MEM257                 0x0001180080900808  RSL         
L2C_VRT_MEM258                 0x0001180080900810  RSL         
L2C_VRT_MEM259                 0x0001180080900818  RSL         
L2C_VRT_MEM260                 0x0001180080900820  RSL         
L2C_VRT_MEM261                 0x0001180080900828  RSL         
L2C_VRT_MEM262                 0x0001180080900830  RSL         
L2C_VRT_MEM263                 0x0001180080900838  RSL         
L2C_VRT_MEM264                 0x0001180080900840  RSL         
L2C_VRT_MEM265                 0x0001180080900848  RSL         
L2C_VRT_MEM266                 0x0001180080900850  RSL         
L2C_VRT_MEM267                 0x0001180080900858  RSL         
L2C_VRT_MEM268                 0x0001180080900860  RSL         
L2C_VRT_MEM269                 0x0001180080900868  RSL         
L2C_VRT_MEM270                 0x0001180080900870  RSL         
L2C_VRT_MEM271                 0x0001180080900878  RSL         
L2C_VRT_MEM272                 0x0001180080900880  RSL         
L2C_VRT_MEM273                 0x0001180080900888  RSL         
L2C_VRT_MEM274                 0x0001180080900890  RSL         
L2C_VRT_MEM275                 0x0001180080900898  RSL         
L2C_VRT_MEM276                 0x00011800809008A0  RSL         
L2C_VRT_MEM277                 0x00011800809008A8  RSL         
L2C_VRT_MEM278                 0x00011800809008B0  RSL         
L2C_VRT_MEM279                 0x00011800809008B8  RSL         
L2C_VRT_MEM280                 0x00011800809008C0  RSL         
L2C_VRT_MEM281                 0x00011800809008C8  RSL         
L2C_VRT_MEM282                 0x00011800809008D0  RSL         
L2C_VRT_MEM283                 0x00011800809008D8  RSL         
L2C_VRT_MEM284                 0x00011800809008E0  RSL         
L2C_VRT_MEM285                 0x00011800809008E8  RSL         
L2C_VRT_MEM286                 0x00011800809008F0  RSL         
L2C_VRT_MEM287                 0x00011800809008F8  RSL         
L2C_VRT_MEM288                 0x0001180080900900  RSL         
L2C_VRT_MEM289                 0x0001180080900908  RSL         
L2C_VRT_MEM290                 0x0001180080900910  RSL         
L2C_VRT_MEM291                 0x0001180080900918  RSL         
L2C_VRT_MEM292                 0x0001180080900920  RSL         
L2C_VRT_MEM293                 0x0001180080900928  RSL         
L2C_VRT_MEM294                 0x0001180080900930  RSL         
L2C_VRT_MEM295                 0x0001180080900938  RSL         
L2C_VRT_MEM296                 0x0001180080900940  RSL         
L2C_VRT_MEM297                 0x0001180080900948  RSL         
L2C_VRT_MEM298                 0x0001180080900950  RSL         
L2C_VRT_MEM299                 0x0001180080900958  RSL         
L2C_VRT_MEM300                 0x0001180080900960  RSL         
L2C_VRT_MEM301                 0x0001180080900968  RSL         
L2C_VRT_MEM302                 0x0001180080900970  RSL         
L2C_VRT_MEM303                 0x0001180080900978  RSL         
L2C_VRT_MEM304                 0x0001180080900980  RSL         
L2C_VRT_MEM305                 0x0001180080900988  RSL         
L2C_VRT_MEM306                 0x0001180080900990  RSL         
L2C_VRT_MEM307                 0x0001180080900998  RSL         
L2C_VRT_MEM308                 0x00011800809009A0  RSL         
L2C_VRT_MEM309                 0x00011800809009A8  RSL         
L2C_VRT_MEM310                 0x00011800809009B0  RSL         
L2C_VRT_MEM311                 0x00011800809009B8  RSL         
L2C_VRT_MEM312                 0x00011800809009C0  RSL         
L2C_VRT_MEM313                 0x00011800809009C8  RSL         
L2C_VRT_MEM314                 0x00011800809009D0  RSL         
L2C_VRT_MEM315                 0x00011800809009D8  RSL         
L2C_VRT_MEM316                 0x00011800809009E0  RSL         
L2C_VRT_MEM317                 0x00011800809009E8  RSL         
L2C_VRT_MEM318                 0x00011800809009F0  RSL         
L2C_VRT_MEM319                 0x00011800809009F8  RSL         
L2C_VRT_MEM320                 0x0001180080900A00  RSL         
L2C_VRT_MEM321                 0x0001180080900A08  RSL         
L2C_VRT_MEM322                 0x0001180080900A10  RSL         
L2C_VRT_MEM323                 0x0001180080900A18  RSL         
L2C_VRT_MEM324                 0x0001180080900A20  RSL         
L2C_VRT_MEM325                 0x0001180080900A28  RSL         
L2C_VRT_MEM326                 0x0001180080900A30  RSL         
L2C_VRT_MEM327                 0x0001180080900A38  RSL         
L2C_VRT_MEM328                 0x0001180080900A40  RSL         
L2C_VRT_MEM329                 0x0001180080900A48  RSL         
L2C_VRT_MEM330                 0x0001180080900A50  RSL         
L2C_VRT_MEM331                 0x0001180080900A58  RSL         
L2C_VRT_MEM332                 0x0001180080900A60  RSL         
L2C_VRT_MEM333                 0x0001180080900A68  RSL         
L2C_VRT_MEM334                 0x0001180080900A70  RSL         
L2C_VRT_MEM335                 0x0001180080900A78  RSL         
L2C_VRT_MEM336                 0x0001180080900A80  RSL         
L2C_VRT_MEM337                 0x0001180080900A88  RSL         
L2C_VRT_MEM338                 0x0001180080900A90  RSL         
L2C_VRT_MEM339                 0x0001180080900A98  RSL         
L2C_VRT_MEM340                 0x0001180080900AA0  RSL         
L2C_VRT_MEM341                 0x0001180080900AA8  RSL         
L2C_VRT_MEM342                 0x0001180080900AB0  RSL         
L2C_VRT_MEM343                 0x0001180080900AB8  RSL         
L2C_VRT_MEM344                 0x0001180080900AC0  RSL         
L2C_VRT_MEM345                 0x0001180080900AC8  RSL         
L2C_VRT_MEM346                 0x0001180080900AD0  RSL         
L2C_VRT_MEM347                 0x0001180080900AD8  RSL         
L2C_VRT_MEM348                 0x0001180080900AE0  RSL         
L2C_VRT_MEM349                 0x0001180080900AE8  RSL         
L2C_VRT_MEM350                 0x0001180080900AF0  RSL         
L2C_VRT_MEM351                 0x0001180080900AF8  RSL         
L2C_VRT_MEM352                 0x0001180080900B00  RSL         
L2C_VRT_MEM353                 0x0001180080900B08  RSL         
L2C_VRT_MEM354                 0x0001180080900B10  RSL         
L2C_VRT_MEM355                 0x0001180080900B18  RSL         
L2C_VRT_MEM356                 0x0001180080900B20  RSL         
L2C_VRT_MEM357                 0x0001180080900B28  RSL         
L2C_VRT_MEM358                 0x0001180080900B30  RSL         
L2C_VRT_MEM359                 0x0001180080900B38  RSL         
L2C_VRT_MEM360                 0x0001180080900B40  RSL         
L2C_VRT_MEM361                 0x0001180080900B48  RSL         
L2C_VRT_MEM362                 0x0001180080900B50  RSL         
L2C_VRT_MEM363                 0x0001180080900B58  RSL         
L2C_VRT_MEM364                 0x0001180080900B60  RSL         
L2C_VRT_MEM365                 0x0001180080900B68  RSL         
L2C_VRT_MEM366                 0x0001180080900B70  RSL         
L2C_VRT_MEM367                 0x0001180080900B78  RSL         
L2C_VRT_MEM368                 0x0001180080900B80  RSL         
L2C_VRT_MEM369                 0x0001180080900B88  RSL         
L2C_VRT_MEM370                 0x0001180080900B90  RSL         
L2C_VRT_MEM371                 0x0001180080900B98  RSL         
L2C_VRT_MEM372                 0x0001180080900BA0  RSL         
L2C_VRT_MEM373                 0x0001180080900BA8  RSL         
L2C_VRT_MEM374                 0x0001180080900BB0  RSL         
L2C_VRT_MEM375                 0x0001180080900BB8  RSL         
L2C_VRT_MEM376                 0x0001180080900BC0  RSL         
L2C_VRT_MEM377                 0x0001180080900BC8  RSL         
L2C_VRT_MEM378                 0x0001180080900BD0  RSL         
L2C_VRT_MEM379                 0x0001180080900BD8  RSL         
L2C_VRT_MEM380                 0x0001180080900BE0  RSL         
L2C_VRT_MEM381                 0x0001180080900BE8  RSL         
L2C_VRT_MEM382                 0x0001180080900BF0  RSL         
L2C_VRT_MEM383                 0x0001180080900BF8  RSL         
L2C_VRT_MEM384                 0x0001180080900C00  RSL         
L2C_VRT_MEM385                 0x0001180080900C08  RSL         
L2C_VRT_MEM386                 0x0001180080900C10  RSL         
L2C_VRT_MEM387                 0x0001180080900C18  RSL         
L2C_VRT_MEM388                 0x0001180080900C20  RSL         
L2C_VRT_MEM389                 0x0001180080900C28  RSL         
L2C_VRT_MEM390                 0x0001180080900C30  RSL         
L2C_VRT_MEM391                 0x0001180080900C38  RSL         
L2C_VRT_MEM392                 0x0001180080900C40  RSL         
L2C_VRT_MEM393                 0x0001180080900C48  RSL         
L2C_VRT_MEM394                 0x0001180080900C50  RSL         
L2C_VRT_MEM395                 0x0001180080900C58  RSL         
L2C_VRT_MEM396                 0x0001180080900C60  RSL         
L2C_VRT_MEM397                 0x0001180080900C68  RSL         
L2C_VRT_MEM398                 0x0001180080900C70  RSL         
L2C_VRT_MEM399                 0x0001180080900C78  RSL         
L2C_VRT_MEM400                 0x0001180080900C80  RSL         
L2C_VRT_MEM401                 0x0001180080900C88  RSL         
L2C_VRT_MEM402                 0x0001180080900C90  RSL         
L2C_VRT_MEM403                 0x0001180080900C98  RSL         
L2C_VRT_MEM404                 0x0001180080900CA0  RSL         
L2C_VRT_MEM405                 0x0001180080900CA8  RSL         
L2C_VRT_MEM406                 0x0001180080900CB0  RSL         
L2C_VRT_MEM407                 0x0001180080900CB8  RSL         
L2C_VRT_MEM408                 0x0001180080900CC0  RSL         
L2C_VRT_MEM409                 0x0001180080900CC8  RSL         
L2C_VRT_MEM410                 0x0001180080900CD0  RSL         
L2C_VRT_MEM411                 0x0001180080900CD8  RSL         
L2C_VRT_MEM412                 0x0001180080900CE0  RSL         
L2C_VRT_MEM413                 0x0001180080900CE8  RSL         
L2C_VRT_MEM414                 0x0001180080900CF0  RSL         
L2C_VRT_MEM415                 0x0001180080900CF8  RSL         
L2C_VRT_MEM416                 0x0001180080900D00  RSL         
L2C_VRT_MEM417                 0x0001180080900D08  RSL         
L2C_VRT_MEM418                 0x0001180080900D10  RSL         
L2C_VRT_MEM419                 0x0001180080900D18  RSL         
L2C_VRT_MEM420                 0x0001180080900D20  RSL         
L2C_VRT_MEM421                 0x0001180080900D28  RSL         
L2C_VRT_MEM422                 0x0001180080900D30  RSL         
L2C_VRT_MEM423                 0x0001180080900D38  RSL         
L2C_VRT_MEM424                 0x0001180080900D40  RSL         
L2C_VRT_MEM425                 0x0001180080900D48  RSL         
L2C_VRT_MEM426                 0x0001180080900D50  RSL         
L2C_VRT_MEM427                 0x0001180080900D58  RSL         
L2C_VRT_MEM428                 0x0001180080900D60  RSL         
L2C_VRT_MEM429                 0x0001180080900D68  RSL         
L2C_VRT_MEM430                 0x0001180080900D70  RSL         
L2C_VRT_MEM431                 0x0001180080900D78  RSL         
L2C_VRT_MEM432                 0x0001180080900D80  RSL         
L2C_VRT_MEM433                 0x0001180080900D88  RSL         
L2C_VRT_MEM434                 0x0001180080900D90  RSL         
L2C_VRT_MEM435                 0x0001180080900D98  RSL         
L2C_VRT_MEM436                 0x0001180080900DA0  RSL         
L2C_VRT_MEM437                 0x0001180080900DA8  RSL         
L2C_VRT_MEM438                 0x0001180080900DB0  RSL         
L2C_VRT_MEM439                 0x0001180080900DB8  RSL         
L2C_VRT_MEM440                 0x0001180080900DC0  RSL         
L2C_VRT_MEM441                 0x0001180080900DC8  RSL         
L2C_VRT_MEM442                 0x0001180080900DD0  RSL         
L2C_VRT_MEM443                 0x0001180080900DD8  RSL         
L2C_VRT_MEM444                 0x0001180080900DE0  RSL         
L2C_VRT_MEM445                 0x0001180080900DE8  RSL         
L2C_VRT_MEM446                 0x0001180080900DF0  RSL         
L2C_VRT_MEM447                 0x0001180080900DF8  RSL         
L2C_VRT_MEM448                 0x0001180080900E00  RSL         
L2C_VRT_MEM449                 0x0001180080900E08  RSL         
L2C_VRT_MEM450                 0x0001180080900E10  RSL         
L2C_VRT_MEM451                 0x0001180080900E18  RSL         
L2C_VRT_MEM452                 0x0001180080900E20  RSL         
L2C_VRT_MEM453                 0x0001180080900E28  RSL         
L2C_VRT_MEM454                 0x0001180080900E30  RSL         
L2C_VRT_MEM455                 0x0001180080900E38  RSL         
L2C_VRT_MEM456                 0x0001180080900E40  RSL         
L2C_VRT_MEM457                 0x0001180080900E48  RSL         
L2C_VRT_MEM458                 0x0001180080900E50  RSL         
L2C_VRT_MEM459                 0x0001180080900E58  RSL         
L2C_VRT_MEM460                 0x0001180080900E60  RSL         
L2C_VRT_MEM461                 0x0001180080900E68  RSL         
L2C_VRT_MEM462                 0x0001180080900E70  RSL         
L2C_VRT_MEM463                 0x0001180080900E78  RSL         
L2C_VRT_MEM464                 0x0001180080900E80  RSL         
L2C_VRT_MEM465                 0x0001180080900E88  RSL         
L2C_VRT_MEM466                 0x0001180080900E90  RSL         
L2C_VRT_MEM467                 0x0001180080900E98  RSL         
L2C_VRT_MEM468                 0x0001180080900EA0  RSL         
L2C_VRT_MEM469                 0x0001180080900EA8  RSL         
L2C_VRT_MEM470                 0x0001180080900EB0  RSL         
L2C_VRT_MEM471                 0x0001180080900EB8  RSL         
L2C_VRT_MEM472                 0x0001180080900EC0  RSL         
L2C_VRT_MEM473                 0x0001180080900EC8  RSL         
L2C_VRT_MEM474                 0x0001180080900ED0  RSL         
L2C_VRT_MEM475                 0x0001180080900ED8  RSL         
L2C_VRT_MEM476                 0x0001180080900EE0  RSL         
L2C_VRT_MEM477                 0x0001180080900EE8  RSL         
L2C_VRT_MEM478                 0x0001180080900EF0  RSL         
L2C_VRT_MEM479                 0x0001180080900EF8  RSL         
L2C_VRT_MEM480                 0x0001180080900F00  RSL         
L2C_VRT_MEM481                 0x0001180080900F08  RSL         
L2C_VRT_MEM482                 0x0001180080900F10  RSL         
L2C_VRT_MEM483                 0x0001180080900F18  RSL         
L2C_VRT_MEM484                 0x0001180080900F20  RSL         
L2C_VRT_MEM485                 0x0001180080900F28  RSL         
L2C_VRT_MEM486                 0x0001180080900F30  RSL         
L2C_VRT_MEM487                 0x0001180080900F38  RSL         
L2C_VRT_MEM488                 0x0001180080900F40  RSL         
L2C_VRT_MEM489                 0x0001180080900F48  RSL         
L2C_VRT_MEM490                 0x0001180080900F50  RSL         
L2C_VRT_MEM491                 0x0001180080900F58  RSL         
L2C_VRT_MEM492                 0x0001180080900F60  RSL         
L2C_VRT_MEM493                 0x0001180080900F68  RSL         
L2C_VRT_MEM494                 0x0001180080900F70  RSL         
L2C_VRT_MEM495                 0x0001180080900F78  RSL         
L2C_VRT_MEM496                 0x0001180080900F80  RSL         
L2C_VRT_MEM497                 0x0001180080900F88  RSL         
L2C_VRT_MEM498                 0x0001180080900F90  RSL         
L2C_VRT_MEM499                 0x0001180080900F98  RSL         
L2C_VRT_MEM500                 0x0001180080900FA0  RSL         
L2C_VRT_MEM501                 0x0001180080900FA8  RSL         
L2C_VRT_MEM502                 0x0001180080900FB0  RSL         
L2C_VRT_MEM503                 0x0001180080900FB8  RSL         
L2C_VRT_MEM504                 0x0001180080900FC0  RSL         
L2C_VRT_MEM505                 0x0001180080900FC8  RSL         
L2C_VRT_MEM506                 0x0001180080900FD0  RSL         
L2C_VRT_MEM507                 0x0001180080900FD8  RSL         
L2C_VRT_MEM508                 0x0001180080900FE0  RSL         
L2C_VRT_MEM509                 0x0001180080900FE8  RSL         
L2C_VRT_MEM510                 0x0001180080900FF0  RSL         
L2C_VRT_MEM511                 0x0001180080900FF8  RSL         
L2C_VRT_MEM512                 0x0001180080901000  RSL         
L2C_VRT_MEM513                 0x0001180080901008  RSL         
L2C_VRT_MEM514                 0x0001180080901010  RSL         
L2C_VRT_MEM515                 0x0001180080901018  RSL         
L2C_VRT_MEM516                 0x0001180080901020  RSL         
L2C_VRT_MEM517                 0x0001180080901028  RSL         
L2C_VRT_MEM518                 0x0001180080901030  RSL         
L2C_VRT_MEM519                 0x0001180080901038  RSL         
L2C_VRT_MEM520                 0x0001180080901040  RSL         
L2C_VRT_MEM521                 0x0001180080901048  RSL         
L2C_VRT_MEM522                 0x0001180080901050  RSL         
L2C_VRT_MEM523                 0x0001180080901058  RSL         
L2C_VRT_MEM524                 0x0001180080901060  RSL         
L2C_VRT_MEM525                 0x0001180080901068  RSL         
L2C_VRT_MEM526                 0x0001180080901070  RSL         
L2C_VRT_MEM527                 0x0001180080901078  RSL         
L2C_VRT_MEM528                 0x0001180080901080  RSL         
L2C_VRT_MEM529                 0x0001180080901088  RSL         
L2C_VRT_MEM530                 0x0001180080901090  RSL         
L2C_VRT_MEM531                 0x0001180080901098  RSL         
L2C_VRT_MEM532                 0x00011800809010A0  RSL         
L2C_VRT_MEM533                 0x00011800809010A8  RSL         
L2C_VRT_MEM534                 0x00011800809010B0  RSL         
L2C_VRT_MEM535                 0x00011800809010B8  RSL         
L2C_VRT_MEM536                 0x00011800809010C0  RSL         
L2C_VRT_MEM537                 0x00011800809010C8  RSL         
L2C_VRT_MEM538                 0x00011800809010D0  RSL         
L2C_VRT_MEM539                 0x00011800809010D8  RSL         
L2C_VRT_MEM540                 0x00011800809010E0  RSL         
L2C_VRT_MEM541                 0x00011800809010E8  RSL         
L2C_VRT_MEM542                 0x00011800809010F0  RSL         
L2C_VRT_MEM543                 0x00011800809010F8  RSL         
L2C_VRT_MEM544                 0x0001180080901100  RSL         
L2C_VRT_MEM545                 0x0001180080901108  RSL         
L2C_VRT_MEM546                 0x0001180080901110  RSL         
L2C_VRT_MEM547                 0x0001180080901118  RSL         
L2C_VRT_MEM548                 0x0001180080901120  RSL         
L2C_VRT_MEM549                 0x0001180080901128  RSL         
L2C_VRT_MEM550                 0x0001180080901130  RSL         
L2C_VRT_MEM551                 0x0001180080901138  RSL         
L2C_VRT_MEM552                 0x0001180080901140  RSL         
L2C_VRT_MEM553                 0x0001180080901148  RSL         
L2C_VRT_MEM554                 0x0001180080901150  RSL         
L2C_VRT_MEM555                 0x0001180080901158  RSL         
L2C_VRT_MEM556                 0x0001180080901160  RSL         
L2C_VRT_MEM557                 0x0001180080901168  RSL         
L2C_VRT_MEM558                 0x0001180080901170  RSL         
L2C_VRT_MEM559                 0x0001180080901178  RSL         
L2C_VRT_MEM560                 0x0001180080901180  RSL         
L2C_VRT_MEM561                 0x0001180080901188  RSL         
L2C_VRT_MEM562                 0x0001180080901190  RSL         
L2C_VRT_MEM563                 0x0001180080901198  RSL         
L2C_VRT_MEM564                 0x00011800809011A0  RSL         
L2C_VRT_MEM565                 0x00011800809011A8  RSL         
L2C_VRT_MEM566                 0x00011800809011B0  RSL         
L2C_VRT_MEM567                 0x00011800809011B8  RSL         
L2C_VRT_MEM568                 0x00011800809011C0  RSL         
L2C_VRT_MEM569                 0x00011800809011C8  RSL         
L2C_VRT_MEM570                 0x00011800809011D0  RSL         
L2C_VRT_MEM571                 0x00011800809011D8  RSL         
L2C_VRT_MEM572                 0x00011800809011E0  RSL         
L2C_VRT_MEM573                 0x00011800809011E8  RSL         
L2C_VRT_MEM574                 0x00011800809011F0  RSL         
L2C_VRT_MEM575                 0x00011800809011F8  RSL         
L2C_VRT_MEM576                 0x0001180080901200  RSL         
L2C_VRT_MEM577                 0x0001180080901208  RSL         
L2C_VRT_MEM578                 0x0001180080901210  RSL         
L2C_VRT_MEM579                 0x0001180080901218  RSL         
L2C_VRT_MEM580                 0x0001180080901220  RSL         
L2C_VRT_MEM581                 0x0001180080901228  RSL         
L2C_VRT_MEM582                 0x0001180080901230  RSL         
L2C_VRT_MEM583                 0x0001180080901238  RSL         
L2C_VRT_MEM584                 0x0001180080901240  RSL         
L2C_VRT_MEM585                 0x0001180080901248  RSL         
L2C_VRT_MEM586                 0x0001180080901250  RSL         
L2C_VRT_MEM587                 0x0001180080901258  RSL         
L2C_VRT_MEM588                 0x0001180080901260  RSL         
L2C_VRT_MEM589                 0x0001180080901268  RSL         
L2C_VRT_MEM590                 0x0001180080901270  RSL         
L2C_VRT_MEM591                 0x0001180080901278  RSL         
L2C_VRT_MEM592                 0x0001180080901280  RSL         
L2C_VRT_MEM593                 0x0001180080901288  RSL         
L2C_VRT_MEM594                 0x0001180080901290  RSL         
L2C_VRT_MEM595                 0x0001180080901298  RSL         
L2C_VRT_MEM596                 0x00011800809012A0  RSL         
L2C_VRT_MEM597                 0x00011800809012A8  RSL         
L2C_VRT_MEM598                 0x00011800809012B0  RSL         
L2C_VRT_MEM599                 0x00011800809012B8  RSL         
L2C_VRT_MEM600                 0x00011800809012C0  RSL         
L2C_VRT_MEM601                 0x00011800809012C8  RSL         
L2C_VRT_MEM602                 0x00011800809012D0  RSL         
L2C_VRT_MEM603                 0x00011800809012D8  RSL         
L2C_VRT_MEM604                 0x00011800809012E0  RSL         
L2C_VRT_MEM605                 0x00011800809012E8  RSL         
L2C_VRT_MEM606                 0x00011800809012F0  RSL         
L2C_VRT_MEM607                 0x00011800809012F8  RSL         
L2C_VRT_MEM608                 0x0001180080901300  RSL         
L2C_VRT_MEM609                 0x0001180080901308  RSL         
L2C_VRT_MEM610                 0x0001180080901310  RSL         
L2C_VRT_MEM611                 0x0001180080901318  RSL         
L2C_VRT_MEM612                 0x0001180080901320  RSL         
L2C_VRT_MEM613                 0x0001180080901328  RSL         
L2C_VRT_MEM614                 0x0001180080901330  RSL         
L2C_VRT_MEM615                 0x0001180080901338  RSL         
L2C_VRT_MEM616                 0x0001180080901340  RSL         
L2C_VRT_MEM617                 0x0001180080901348  RSL         
L2C_VRT_MEM618                 0x0001180080901350  RSL         
L2C_VRT_MEM619                 0x0001180080901358  RSL         
L2C_VRT_MEM620                 0x0001180080901360  RSL         
L2C_VRT_MEM621                 0x0001180080901368  RSL         
L2C_VRT_MEM622                 0x0001180080901370  RSL         
L2C_VRT_MEM623                 0x0001180080901378  RSL         
L2C_VRT_MEM624                 0x0001180080901380  RSL         
L2C_VRT_MEM625                 0x0001180080901388  RSL         
L2C_VRT_MEM626                 0x0001180080901390  RSL         
L2C_VRT_MEM627                 0x0001180080901398  RSL         
L2C_VRT_MEM628                 0x00011800809013A0  RSL         
L2C_VRT_MEM629                 0x00011800809013A8  RSL         
L2C_VRT_MEM630                 0x00011800809013B0  RSL         
L2C_VRT_MEM631                 0x00011800809013B8  RSL         
L2C_VRT_MEM632                 0x00011800809013C0  RSL         
L2C_VRT_MEM633                 0x00011800809013C8  RSL         
L2C_VRT_MEM634                 0x00011800809013D0  RSL         
L2C_VRT_MEM635                 0x00011800809013D8  RSL         
L2C_VRT_MEM636                 0x00011800809013E0  RSL         
L2C_VRT_MEM637                 0x00011800809013E8  RSL         
L2C_VRT_MEM638                 0x00011800809013F0  RSL         
L2C_VRT_MEM639                 0x00011800809013F8  RSL         
L2C_VRT_MEM640                 0x0001180080901400  RSL         
L2C_VRT_MEM641                 0x0001180080901408  RSL         
L2C_VRT_MEM642                 0x0001180080901410  RSL         
L2C_VRT_MEM643                 0x0001180080901418  RSL         
L2C_VRT_MEM644                 0x0001180080901420  RSL         
L2C_VRT_MEM645                 0x0001180080901428  RSL         
L2C_VRT_MEM646                 0x0001180080901430  RSL         
L2C_VRT_MEM647                 0x0001180080901438  RSL         
L2C_VRT_MEM648                 0x0001180080901440  RSL         
L2C_VRT_MEM649                 0x0001180080901448  RSL         
L2C_VRT_MEM650                 0x0001180080901450  RSL         
L2C_VRT_MEM651                 0x0001180080901458  RSL         
L2C_VRT_MEM652                 0x0001180080901460  RSL         
L2C_VRT_MEM653                 0x0001180080901468  RSL         
L2C_VRT_MEM654                 0x0001180080901470  RSL         
L2C_VRT_MEM655                 0x0001180080901478  RSL         
L2C_VRT_MEM656                 0x0001180080901480  RSL         
L2C_VRT_MEM657                 0x0001180080901488  RSL         
L2C_VRT_MEM658                 0x0001180080901490  RSL         
L2C_VRT_MEM659                 0x0001180080901498  RSL         
L2C_VRT_MEM660                 0x00011800809014A0  RSL         
L2C_VRT_MEM661                 0x00011800809014A8  RSL         
L2C_VRT_MEM662                 0x00011800809014B0  RSL         
L2C_VRT_MEM663                 0x00011800809014B8  RSL         
L2C_VRT_MEM664                 0x00011800809014C0  RSL         
L2C_VRT_MEM665                 0x00011800809014C8  RSL         
L2C_VRT_MEM666                 0x00011800809014D0  RSL         
L2C_VRT_MEM667                 0x00011800809014D8  RSL         
L2C_VRT_MEM668                 0x00011800809014E0  RSL         
L2C_VRT_MEM669                 0x00011800809014E8  RSL         
L2C_VRT_MEM670                 0x00011800809014F0  RSL         
L2C_VRT_MEM671                 0x00011800809014F8  RSL         
L2C_VRT_MEM672                 0x0001180080901500  RSL         
L2C_VRT_MEM673                 0x0001180080901508  RSL         
L2C_VRT_MEM674                 0x0001180080901510  RSL         
L2C_VRT_MEM675                 0x0001180080901518  RSL         
L2C_VRT_MEM676                 0x0001180080901520  RSL         
L2C_VRT_MEM677                 0x0001180080901528  RSL         
L2C_VRT_MEM678                 0x0001180080901530  RSL         
L2C_VRT_MEM679                 0x0001180080901538  RSL         
L2C_VRT_MEM680                 0x0001180080901540  RSL         
L2C_VRT_MEM681                 0x0001180080901548  RSL         
L2C_VRT_MEM682                 0x0001180080901550  RSL         
L2C_VRT_MEM683                 0x0001180080901558  RSL         
L2C_VRT_MEM684                 0x0001180080901560  RSL         
L2C_VRT_MEM685                 0x0001180080901568  RSL         
L2C_VRT_MEM686                 0x0001180080901570  RSL         
L2C_VRT_MEM687                 0x0001180080901578  RSL         
L2C_VRT_MEM688                 0x0001180080901580  RSL         
L2C_VRT_MEM689                 0x0001180080901588  RSL         
L2C_VRT_MEM690                 0x0001180080901590  RSL         
L2C_VRT_MEM691                 0x0001180080901598  RSL         
L2C_VRT_MEM692                 0x00011800809015A0  RSL         
L2C_VRT_MEM693                 0x00011800809015A8  RSL         
L2C_VRT_MEM694                 0x00011800809015B0  RSL         
L2C_VRT_MEM695                 0x00011800809015B8  RSL         
L2C_VRT_MEM696                 0x00011800809015C0  RSL         
L2C_VRT_MEM697                 0x00011800809015C8  RSL         
L2C_VRT_MEM698                 0x00011800809015D0  RSL         
L2C_VRT_MEM699                 0x00011800809015D8  RSL         
L2C_VRT_MEM700                 0x00011800809015E0  RSL         
L2C_VRT_MEM701                 0x00011800809015E8  RSL         
L2C_VRT_MEM702                 0x00011800809015F0  RSL         
L2C_VRT_MEM703                 0x00011800809015F8  RSL         
L2C_VRT_MEM704                 0x0001180080901600  RSL         
L2C_VRT_MEM705                 0x0001180080901608  RSL         
L2C_VRT_MEM706                 0x0001180080901610  RSL         
L2C_VRT_MEM707                 0x0001180080901618  RSL         
L2C_VRT_MEM708                 0x0001180080901620  RSL         
L2C_VRT_MEM709                 0x0001180080901628  RSL         
L2C_VRT_MEM710                 0x0001180080901630  RSL         
L2C_VRT_MEM711                 0x0001180080901638  RSL         
L2C_VRT_MEM712                 0x0001180080901640  RSL         
L2C_VRT_MEM713                 0x0001180080901648  RSL         
L2C_VRT_MEM714                 0x0001180080901650  RSL         
L2C_VRT_MEM715                 0x0001180080901658  RSL         
L2C_VRT_MEM716                 0x0001180080901660  RSL         
L2C_VRT_MEM717                 0x0001180080901668  RSL         
L2C_VRT_MEM718                 0x0001180080901670  RSL         
L2C_VRT_MEM719                 0x0001180080901678  RSL         
L2C_VRT_MEM720                 0x0001180080901680  RSL         
L2C_VRT_MEM721                 0x0001180080901688  RSL         
L2C_VRT_MEM722                 0x0001180080901690  RSL         
L2C_VRT_MEM723                 0x0001180080901698  RSL         
L2C_VRT_MEM724                 0x00011800809016A0  RSL         
L2C_VRT_MEM725                 0x00011800809016A8  RSL         
L2C_VRT_MEM726                 0x00011800809016B0  RSL         
L2C_VRT_MEM727                 0x00011800809016B8  RSL         
L2C_VRT_MEM728                 0x00011800809016C0  RSL         
L2C_VRT_MEM729                 0x00011800809016C8  RSL         
L2C_VRT_MEM730                 0x00011800809016D0  RSL         
L2C_VRT_MEM731                 0x00011800809016D8  RSL         
L2C_VRT_MEM732                 0x00011800809016E0  RSL         
L2C_VRT_MEM733                 0x00011800809016E8  RSL         
L2C_VRT_MEM734                 0x00011800809016F0  RSL         
L2C_VRT_MEM735                 0x00011800809016F8  RSL         
L2C_VRT_MEM736                 0x0001180080901700  RSL         
L2C_VRT_MEM737                 0x0001180080901708  RSL         
L2C_VRT_MEM738                 0x0001180080901710  RSL         
L2C_VRT_MEM739                 0x0001180080901718  RSL         
L2C_VRT_MEM740                 0x0001180080901720  RSL         
L2C_VRT_MEM741                 0x0001180080901728  RSL         
L2C_VRT_MEM742                 0x0001180080901730  RSL         
L2C_VRT_MEM743                 0x0001180080901738  RSL         
L2C_VRT_MEM744                 0x0001180080901740  RSL         
L2C_VRT_MEM745                 0x0001180080901748  RSL         
L2C_VRT_MEM746                 0x0001180080901750  RSL         
L2C_VRT_MEM747                 0x0001180080901758  RSL         
L2C_VRT_MEM748                 0x0001180080901760  RSL         
L2C_VRT_MEM749                 0x0001180080901768  RSL         
L2C_VRT_MEM750                 0x0001180080901770  RSL         
L2C_VRT_MEM751                 0x0001180080901778  RSL         
L2C_VRT_MEM752                 0x0001180080901780  RSL         
L2C_VRT_MEM753                 0x0001180080901788  RSL         
L2C_VRT_MEM754                 0x0001180080901790  RSL         
L2C_VRT_MEM755                 0x0001180080901798  RSL         
L2C_VRT_MEM756                 0x00011800809017A0  RSL         
L2C_VRT_MEM757                 0x00011800809017A8  RSL         
L2C_VRT_MEM758                 0x00011800809017B0  RSL         
L2C_VRT_MEM759                 0x00011800809017B8  RSL         
L2C_VRT_MEM760                 0x00011800809017C0  RSL         
L2C_VRT_MEM761                 0x00011800809017C8  RSL         
L2C_VRT_MEM762                 0x00011800809017D0  RSL         
L2C_VRT_MEM763                 0x00011800809017D8  RSL         
L2C_VRT_MEM764                 0x00011800809017E0  RSL         
L2C_VRT_MEM765                 0x00011800809017E8  RSL         
L2C_VRT_MEM766                 0x00011800809017F0  RSL         
L2C_VRT_MEM767                 0x00011800809017F8  RSL         
L2C_VRT_MEM768                 0x0001180080901800  RSL         
L2C_VRT_MEM769                 0x0001180080901808  RSL         
L2C_VRT_MEM770                 0x0001180080901810  RSL         
L2C_VRT_MEM771                 0x0001180080901818  RSL         
L2C_VRT_MEM772                 0x0001180080901820  RSL         
L2C_VRT_MEM773                 0x0001180080901828  RSL         
L2C_VRT_MEM774                 0x0001180080901830  RSL         
L2C_VRT_MEM775                 0x0001180080901838  RSL         
L2C_VRT_MEM776                 0x0001180080901840  RSL         
L2C_VRT_MEM777                 0x0001180080901848  RSL         
L2C_VRT_MEM778                 0x0001180080901850  RSL         
L2C_VRT_MEM779                 0x0001180080901858  RSL         
L2C_VRT_MEM780                 0x0001180080901860  RSL         
L2C_VRT_MEM781                 0x0001180080901868  RSL         
L2C_VRT_MEM782                 0x0001180080901870  RSL         
L2C_VRT_MEM783                 0x0001180080901878  RSL         
L2C_VRT_MEM784                 0x0001180080901880  RSL         
L2C_VRT_MEM785                 0x0001180080901888  RSL         
L2C_VRT_MEM786                 0x0001180080901890  RSL         
L2C_VRT_MEM787                 0x0001180080901898  RSL         
L2C_VRT_MEM788                 0x00011800809018A0  RSL         
L2C_VRT_MEM789                 0x00011800809018A8  RSL         
L2C_VRT_MEM790                 0x00011800809018B0  RSL         
L2C_VRT_MEM791                 0x00011800809018B8  RSL         
L2C_VRT_MEM792                 0x00011800809018C0  RSL         
L2C_VRT_MEM793                 0x00011800809018C8  RSL         
L2C_VRT_MEM794                 0x00011800809018D0  RSL         
L2C_VRT_MEM795                 0x00011800809018D8  RSL         
L2C_VRT_MEM796                 0x00011800809018E0  RSL         
L2C_VRT_MEM797                 0x00011800809018E8  RSL         
L2C_VRT_MEM798                 0x00011800809018F0  RSL         
L2C_VRT_MEM799                 0x00011800809018F8  RSL         
L2C_VRT_MEM800                 0x0001180080901900  RSL         
L2C_VRT_MEM801                 0x0001180080901908  RSL         
L2C_VRT_MEM802                 0x0001180080901910  RSL         
L2C_VRT_MEM803                 0x0001180080901918  RSL         
L2C_VRT_MEM804                 0x0001180080901920  RSL         
L2C_VRT_MEM805                 0x0001180080901928  RSL         
L2C_VRT_MEM806                 0x0001180080901930  RSL         
L2C_VRT_MEM807                 0x0001180080901938  RSL         
L2C_VRT_MEM808                 0x0001180080901940  RSL         
L2C_VRT_MEM809                 0x0001180080901948  RSL         
L2C_VRT_MEM810                 0x0001180080901950  RSL         
L2C_VRT_MEM811                 0x0001180080901958  RSL         
L2C_VRT_MEM812                 0x0001180080901960  RSL         
L2C_VRT_MEM813                 0x0001180080901968  RSL         
L2C_VRT_MEM814                 0x0001180080901970  RSL         
L2C_VRT_MEM815                 0x0001180080901978  RSL         
L2C_VRT_MEM816                 0x0001180080901980  RSL         
L2C_VRT_MEM817                 0x0001180080901988  RSL         
L2C_VRT_MEM818                 0x0001180080901990  RSL         
L2C_VRT_MEM819                 0x0001180080901998  RSL         
L2C_VRT_MEM820                 0x00011800809019A0  RSL         
L2C_VRT_MEM821                 0x00011800809019A8  RSL         
L2C_VRT_MEM822                 0x00011800809019B0  RSL         
L2C_VRT_MEM823                 0x00011800809019B8  RSL         
L2C_VRT_MEM824                 0x00011800809019C0  RSL         
L2C_VRT_MEM825                 0x00011800809019C8  RSL         
L2C_VRT_MEM826                 0x00011800809019D0  RSL         
L2C_VRT_MEM827                 0x00011800809019D8  RSL         
L2C_VRT_MEM828                 0x00011800809019E0  RSL         
L2C_VRT_MEM829                 0x00011800809019E8  RSL         
L2C_VRT_MEM830                 0x00011800809019F0  RSL         
L2C_VRT_MEM831                 0x00011800809019F8  RSL         
L2C_VRT_MEM832                 0x0001180080901A00  RSL         
L2C_VRT_MEM833                 0x0001180080901A08  RSL         
L2C_VRT_MEM834                 0x0001180080901A10  RSL         
L2C_VRT_MEM835                 0x0001180080901A18  RSL         
L2C_VRT_MEM836                 0x0001180080901A20  RSL         
L2C_VRT_MEM837                 0x0001180080901A28  RSL         
L2C_VRT_MEM838                 0x0001180080901A30  RSL         
L2C_VRT_MEM839                 0x0001180080901A38  RSL         
L2C_VRT_MEM840                 0x0001180080901A40  RSL         
L2C_VRT_MEM841                 0x0001180080901A48  RSL         
L2C_VRT_MEM842                 0x0001180080901A50  RSL         
L2C_VRT_MEM843                 0x0001180080901A58  RSL         
L2C_VRT_MEM844                 0x0001180080901A60  RSL         
L2C_VRT_MEM845                 0x0001180080901A68  RSL         
L2C_VRT_MEM846                 0x0001180080901A70  RSL         
L2C_VRT_MEM847                 0x0001180080901A78  RSL         
L2C_VRT_MEM848                 0x0001180080901A80  RSL         
L2C_VRT_MEM849                 0x0001180080901A88  RSL         
L2C_VRT_MEM850                 0x0001180080901A90  RSL         
L2C_VRT_MEM851                 0x0001180080901A98  RSL         
L2C_VRT_MEM852                 0x0001180080901AA0  RSL         
L2C_VRT_MEM853                 0x0001180080901AA8  RSL         
L2C_VRT_MEM854                 0x0001180080901AB0  RSL         
L2C_VRT_MEM855                 0x0001180080901AB8  RSL         
L2C_VRT_MEM856                 0x0001180080901AC0  RSL         
L2C_VRT_MEM857                 0x0001180080901AC8  RSL         
L2C_VRT_MEM858                 0x0001180080901AD0  RSL         
L2C_VRT_MEM859                 0x0001180080901AD8  RSL         
L2C_VRT_MEM860                 0x0001180080901AE0  RSL         
L2C_VRT_MEM861                 0x0001180080901AE8  RSL         
L2C_VRT_MEM862                 0x0001180080901AF0  RSL         
L2C_VRT_MEM863                 0x0001180080901AF8  RSL         
L2C_VRT_MEM864                 0x0001180080901B00  RSL         
L2C_VRT_MEM865                 0x0001180080901B08  RSL         
L2C_VRT_MEM866                 0x0001180080901B10  RSL         
L2C_VRT_MEM867                 0x0001180080901B18  RSL         
L2C_VRT_MEM868                 0x0001180080901B20  RSL         
L2C_VRT_MEM869                 0x0001180080901B28  RSL         
L2C_VRT_MEM870                 0x0001180080901B30  RSL         
L2C_VRT_MEM871                 0x0001180080901B38  RSL         
L2C_VRT_MEM872                 0x0001180080901B40  RSL         
L2C_VRT_MEM873                 0x0001180080901B48  RSL         
L2C_VRT_MEM874                 0x0001180080901B50  RSL         
L2C_VRT_MEM875                 0x0001180080901B58  RSL         
L2C_VRT_MEM876                 0x0001180080901B60  RSL         
L2C_VRT_MEM877                 0x0001180080901B68  RSL         
L2C_VRT_MEM878                 0x0001180080901B70  RSL         
L2C_VRT_MEM879                 0x0001180080901B78  RSL         
L2C_VRT_MEM880                 0x0001180080901B80  RSL         
L2C_VRT_MEM881                 0x0001180080901B88  RSL         
L2C_VRT_MEM882                 0x0001180080901B90  RSL         
L2C_VRT_MEM883                 0x0001180080901B98  RSL         
L2C_VRT_MEM884                 0x0001180080901BA0  RSL         
L2C_VRT_MEM885                 0x0001180080901BA8  RSL         
L2C_VRT_MEM886                 0x0001180080901BB0  RSL         
L2C_VRT_MEM887                 0x0001180080901BB8  RSL         
L2C_VRT_MEM888                 0x0001180080901BC0  RSL         
L2C_VRT_MEM889                 0x0001180080901BC8  RSL         
L2C_VRT_MEM890                 0x0001180080901BD0  RSL         
L2C_VRT_MEM891                 0x0001180080901BD8  RSL         
L2C_VRT_MEM892                 0x0001180080901BE0  RSL         
L2C_VRT_MEM893                 0x0001180080901BE8  RSL         
L2C_VRT_MEM894                 0x0001180080901BF0  RSL         
L2C_VRT_MEM895                 0x0001180080901BF8  RSL         
L2C_VRT_MEM896                 0x0001180080901C00  RSL         
L2C_VRT_MEM897                 0x0001180080901C08  RSL         
L2C_VRT_MEM898                 0x0001180080901C10  RSL         
L2C_VRT_MEM899                 0x0001180080901C18  RSL         
L2C_VRT_MEM900                 0x0001180080901C20  RSL         
L2C_VRT_MEM901                 0x0001180080901C28  RSL         
L2C_VRT_MEM902                 0x0001180080901C30  RSL         
L2C_VRT_MEM903                 0x0001180080901C38  RSL         
L2C_VRT_MEM904                 0x0001180080901C40  RSL         
L2C_VRT_MEM905                 0x0001180080901C48  RSL         
L2C_VRT_MEM906                 0x0001180080901C50  RSL         
L2C_VRT_MEM907                 0x0001180080901C58  RSL         
L2C_VRT_MEM908                 0x0001180080901C60  RSL         
L2C_VRT_MEM909                 0x0001180080901C68  RSL         
L2C_VRT_MEM910                 0x0001180080901C70  RSL         
L2C_VRT_MEM911                 0x0001180080901C78  RSL         
L2C_VRT_MEM912                 0x0001180080901C80  RSL         
L2C_VRT_MEM913                 0x0001180080901C88  RSL         
L2C_VRT_MEM914                 0x0001180080901C90  RSL         
L2C_VRT_MEM915                 0x0001180080901C98  RSL         
L2C_VRT_MEM916                 0x0001180080901CA0  RSL         
L2C_VRT_MEM917                 0x0001180080901CA8  RSL         
L2C_VRT_MEM918                 0x0001180080901CB0  RSL         
L2C_VRT_MEM919                 0x0001180080901CB8  RSL         
L2C_VRT_MEM920                 0x0001180080901CC0  RSL         
L2C_VRT_MEM921                 0x0001180080901CC8  RSL         
L2C_VRT_MEM922                 0x0001180080901CD0  RSL         
L2C_VRT_MEM923                 0x0001180080901CD8  RSL         
L2C_VRT_MEM924                 0x0001180080901CE0  RSL         
L2C_VRT_MEM925                 0x0001180080901CE8  RSL         
L2C_VRT_MEM926                 0x0001180080901CF0  RSL         
L2C_VRT_MEM927                 0x0001180080901CF8  RSL         
L2C_VRT_MEM928                 0x0001180080901D00  RSL         
L2C_VRT_MEM929                 0x0001180080901D08  RSL         
L2C_VRT_MEM930                 0x0001180080901D10  RSL         
L2C_VRT_MEM931                 0x0001180080901D18  RSL         
L2C_VRT_MEM932                 0x0001180080901D20  RSL         
L2C_VRT_MEM933                 0x0001180080901D28  RSL         
L2C_VRT_MEM934                 0x0001180080901D30  RSL         
L2C_VRT_MEM935                 0x0001180080901D38  RSL         
L2C_VRT_MEM936                 0x0001180080901D40  RSL         
L2C_VRT_MEM937                 0x0001180080901D48  RSL         
L2C_VRT_MEM938                 0x0001180080901D50  RSL         
L2C_VRT_MEM939                 0x0001180080901D58  RSL         
L2C_VRT_MEM940                 0x0001180080901D60  RSL         
L2C_VRT_MEM941                 0x0001180080901D68  RSL         
L2C_VRT_MEM942                 0x0001180080901D70  RSL         
L2C_VRT_MEM943                 0x0001180080901D78  RSL         
L2C_VRT_MEM944                 0x0001180080901D80  RSL         
L2C_VRT_MEM945                 0x0001180080901D88  RSL         
L2C_VRT_MEM946                 0x0001180080901D90  RSL         
L2C_VRT_MEM947                 0x0001180080901D98  RSL         
L2C_VRT_MEM948                 0x0001180080901DA0  RSL         
L2C_VRT_MEM949                 0x0001180080901DA8  RSL         
L2C_VRT_MEM950                 0x0001180080901DB0  RSL         
L2C_VRT_MEM951                 0x0001180080901DB8  RSL         
L2C_VRT_MEM952                 0x0001180080901DC0  RSL         
L2C_VRT_MEM953                 0x0001180080901DC8  RSL         
L2C_VRT_MEM954                 0x0001180080901DD0  RSL         
L2C_VRT_MEM955                 0x0001180080901DD8  RSL         
L2C_VRT_MEM956                 0x0001180080901DE0  RSL         
L2C_VRT_MEM957                 0x0001180080901DE8  RSL         
L2C_VRT_MEM958                 0x0001180080901DF0  RSL         
L2C_VRT_MEM959                 0x0001180080901DF8  RSL         
L2C_VRT_MEM960                 0x0001180080901E00  RSL         
L2C_VRT_MEM961                 0x0001180080901E08  RSL         
L2C_VRT_MEM962                 0x0001180080901E10  RSL         
L2C_VRT_MEM963                 0x0001180080901E18  RSL         
L2C_VRT_MEM964                 0x0001180080901E20  RSL         
L2C_VRT_MEM965                 0x0001180080901E28  RSL         
L2C_VRT_MEM966                 0x0001180080901E30  RSL         
L2C_VRT_MEM967                 0x0001180080901E38  RSL         
L2C_VRT_MEM968                 0x0001180080901E40  RSL         
L2C_VRT_MEM969                 0x0001180080901E48  RSL         
L2C_VRT_MEM970                 0x0001180080901E50  RSL         
L2C_VRT_MEM971                 0x0001180080901E58  RSL         
L2C_VRT_MEM972                 0x0001180080901E60  RSL         
L2C_VRT_MEM973                 0x0001180080901E68  RSL         
L2C_VRT_MEM974                 0x0001180080901E70  RSL         
L2C_VRT_MEM975                 0x0001180080901E78  RSL         
L2C_VRT_MEM976                 0x0001180080901E80  RSL         
L2C_VRT_MEM977                 0x0001180080901E88  RSL         
L2C_VRT_MEM978                 0x0001180080901E90  RSL         
L2C_VRT_MEM979                 0x0001180080901E98  RSL         
L2C_VRT_MEM980                 0x0001180080901EA0  RSL         
L2C_VRT_MEM981                 0x0001180080901EA8  RSL         
L2C_VRT_MEM982                 0x0001180080901EB0  RSL         
L2C_VRT_MEM983                 0x0001180080901EB8  RSL         
L2C_VRT_MEM984                 0x0001180080901EC0  RSL         
L2C_VRT_MEM985                 0x0001180080901EC8  RSL         
L2C_VRT_MEM986                 0x0001180080901ED0  RSL         
L2C_VRT_MEM987                 0x0001180080901ED8  RSL         
L2C_VRT_MEM988                 0x0001180080901EE0  RSL         
L2C_VRT_MEM989                 0x0001180080901EE8  RSL         
L2C_VRT_MEM990                 0x0001180080901EF0  RSL         
L2C_VRT_MEM991                 0x0001180080901EF8  RSL         
L2C_VRT_MEM992                 0x0001180080901F00  RSL         
L2C_VRT_MEM993                 0x0001180080901F08  RSL         
L2C_VRT_MEM994                 0x0001180080901F10  RSL         
L2C_VRT_MEM995                 0x0001180080901F18  RSL         
L2C_VRT_MEM996                 0x0001180080901F20  RSL         
L2C_VRT_MEM997                 0x0001180080901F28  RSL         
L2C_VRT_MEM998                 0x0001180080901F30  RSL         
L2C_VRT_MEM999                 0x0001180080901F38  RSL         
L2C_VRT_MEM1000                0x0001180080901F40  RSL         
L2C_VRT_MEM1001                0x0001180080901F48  RSL         
L2C_VRT_MEM1002                0x0001180080901F50  RSL         
L2C_VRT_MEM1003                0x0001180080901F58  RSL         
L2C_VRT_MEM1004                0x0001180080901F60  RSL         
L2C_VRT_MEM1005                0x0001180080901F68  RSL         
L2C_VRT_MEM1006                0x0001180080901F70  RSL         
L2C_VRT_MEM1007                0x0001180080901F78  RSL         
L2C_VRT_MEM1008                0x0001180080901F80  RSL         
L2C_VRT_MEM1009                0x0001180080901F88  RSL         
L2C_VRT_MEM1010                0x0001180080901F90  RSL         
L2C_VRT_MEM1011                0x0001180080901F98  RSL         
L2C_VRT_MEM1012                0x0001180080901FA0  RSL         
L2C_VRT_MEM1013                0x0001180080901FA8  RSL         
L2C_VRT_MEM1014                0x0001180080901FB0  RSL         
L2C_VRT_MEM1015                0x0001180080901FB8  RSL         
L2C_VRT_MEM1016                0x0001180080901FC0  RSL         
L2C_VRT_MEM1017                0x0001180080901FC8  RSL         
L2C_VRT_MEM1018                0x0001180080901FD0  RSL         
L2C_VRT_MEM1019                0x0001180080901FD8  RSL         
L2C_VRT_MEM1020                0x0001180080901FE0  RSL         
L2C_VRT_MEM1021                0x0001180080901FE8  RSL         
L2C_VRT_MEM1022                0x0001180080901FF0  RSL         
L2C_VRT_MEM1023                0x0001180080901FF8  RSL         
L2C_WPAR_IOB0                  0x0001180080840200  RSL         
L2C_WPAR_PP0                   0x0001180080840000  RSL         
L2C_WPAR_PP1                   0x0001180080840008  RSL         
L2C_WPAR_PP2                   0x0001180080840010  RSL         
L2C_WPAR_PP3                   0x0001180080840018  RSL         
L2C_WPAR_PP4                   0x0001180080840020  RSL         
L2C_WPAR_PP5                   0x0001180080840028  RSL         
L2C_XMC0_PFC                   0x0001180080800400  RSL         
L2C_XMC_CMD                    0x0001180080800028  RSL         
L2C_XMD0_PFC                   0x0001180080800408  RSL         
LMC0_CHAR_CTL                  0x0001180088000220  RSL         
LMC0_CHAR_MASK0                0x0001180088000228  RSL         
LMC0_CHAR_MASK1                0x0001180088000230  RSL         
LMC0_CHAR_MASK2                0x0001180088000238  RSL         
LMC0_CHAR_MASK3                0x0001180088000240  RSL         
LMC0_CHAR_MASK4                0x0001180088000318  RSL         
LMC0_COMP_CTL2                 0x00011800880001B8  RSL         
LMC0_CONFIG                    0x0001180088000188  RSL         
LMC0_CONTROL                   0x0001180088000190  RSL         
LMC0_DCLK_CNT                  0x00011800880001E0  RSL         
LMC0_DDR_PLL_CTL               0x0001180088000258  RSL         
LMC0_DIMM000_PARAMS            0x0001180088000270  RSL         
LMC0_DIMM001_PARAMS            0x0001180088000278  RSL         
LMC0_DIMM_CTL                  0x0001180088000310  RSL         
LMC0_DLL_CTL2                  0x00011800880001C8  RSL         
LMC0_DLL_CTL3                  0x0001180088000218  RSL         
LMC0_DUAL_MEMCFG               0x0001180088000098  RSL         
LMC0_ECC_SYND                  0x0001180088000038  RSL         
LMC0_FADR                      0x0001180088000020  RSL         
LMC0_IFB_CNT                   0x00011800880001D0  RSL         
LMC0_INT                       0x00011800880001F0  RSL         
LMC0_INT_EN                    0x00011800880001E8  RSL         
LMC0_MODEREG_PARAMS0           0x00011800880001A8  RSL         
LMC0_MODEREG_PARAMS1           0x0001180088000260  RSL         
LMC0_NXM                       0x00011800880000C8  RSL         
LMC0_OPS_CNT                   0x00011800880001D8  RSL         
LMC0_PHY_CTL                   0x0001180088000210  RSL         
LMC0_RESET_CTL                 0x0001180088000180  RSL         
LMC0_RLEVEL_CTL                0x00011800880002A0  RSL         
LMC0_RLEVEL_DBG                0x00011800880002A8  RSL         
LMC0_RLEVEL_RANK000            0x0001180088000280  RSL         
LMC0_RLEVEL_RANK001            0x0001180088000288  RSL         
LMC0_RLEVEL_RANK002            0x0001180088000290  RSL         
LMC0_RLEVEL_RANK003            0x0001180088000298  RSL         
LMC0_RODT_MASK                 0x0001180088000268  RSL         
LMC0_SLOT_CTL0                 0x00011800880001F8  RSL         
LMC0_SLOT_CTL1                 0x0001180088000200  RSL         
LMC0_SLOT_CTL2                 0x0001180088000208  RSL         
LMC0_TIMING_PARAMS0            0x0001180088000198  RSL         
LMC0_TIMING_PARAMS1            0x00011800880001A0  RSL         
LMC0_TRO_CTL                   0x0001180088000248  RSL         
LMC0_TRO_STAT                  0x0001180088000250  RSL         
LMC0_WLEVEL_CTL                0x0001180088000300  RSL         
LMC0_WLEVEL_DBG                0x0001180088000308  RSL         
LMC0_WLEVEL_RANK000            0x00011800880002B0  RSL         
LMC0_WLEVEL_RANK001            0x00011800880002B8  RSL         
LMC0_WLEVEL_RANK002            0x00011800880002C0  RSL         
LMC0_WLEVEL_RANK003            0x00011800880002C8  RSL         
LMC0_WODT_MASK                 0x00011800880001B0  RSL         
MIO_BOOT_BIST_STAT             0x00011800000000F8  RSL         
MIO_BOOT_COMP                  0x00011800000000B8  RSL         
MIO_BOOT_DMA_CFG0              0x0001180000000100  RSL         
MIO_BOOT_DMA_CFG1              0x0001180000000108  RSL         
MIO_BOOT_DMA_INT0              0x0001180000000138  RSL         
MIO_BOOT_DMA_INT1              0x0001180000000140  RSL         
MIO_BOOT_DMA_INT_EN0           0x0001180000000150  RSL         
MIO_BOOT_DMA_INT_EN1           0x0001180000000158  RSL         
MIO_BOOT_DMA_TIM0              0x0001180000000120  RSL         
MIO_BOOT_DMA_TIM1              0x0001180000000128  RSL         
MIO_BOOT_ERR                   0x00011800000000A0  RSL         
MIO_BOOT_INT                   0x00011800000000A8  RSL         
MIO_BOOT_LOC_ADR               0x0001180000000090  RSL         
MIO_BOOT_LOC_CFG0              0x0001180000000080  RSL         
MIO_BOOT_LOC_CFG1              0x0001180000000088  RSL         
MIO_BOOT_LOC_DAT               0x0001180000000098  RSL         
MIO_BOOT_PIN_DEFS              0x00011800000000C0  RSL         
MIO_BOOT_REG_CFG0              0x0001180000000000  RSL         
MIO_BOOT_REG_CFG1              0x0001180000000008  RSL         
MIO_BOOT_REG_CFG2              0x0001180000000010  RSL         
MIO_BOOT_REG_CFG3              0x0001180000000018  RSL         
MIO_BOOT_REG_CFG4              0x0001180000000020  RSL         
MIO_BOOT_REG_CFG5              0x0001180000000028  RSL         
MIO_BOOT_REG_CFG6              0x0001180000000030  RSL         
MIO_BOOT_REG_CFG7              0x0001180000000038  RSL         
MIO_BOOT_REG_TIM0              0x0001180000000040  RSL         
MIO_BOOT_REG_TIM1              0x0001180000000048  RSL         
MIO_BOOT_REG_TIM2              0x0001180000000050  RSL         
MIO_BOOT_REG_TIM3              0x0001180000000058  RSL         
MIO_BOOT_REG_TIM4              0x0001180000000060  RSL         
MIO_BOOT_REG_TIM5              0x0001180000000068  RSL         
MIO_BOOT_REG_TIM6              0x0001180000000070  RSL         
MIO_BOOT_REG_TIM7              0x0001180000000078  RSL         
MIO_BOOT_THR                   0x00011800000000B0  RSL         
MIO_FUS_BNK_DAT0               0x0001180000001520  RSL         
MIO_FUS_BNK_DAT1               0x0001180000001528  RSL         
MIO_FUS_DAT0                   0x0001180000001400  RSL         
MIO_FUS_DAT1                   0x0001180000001408  RSL         
MIO_FUS_DAT2                   0x0001180000001410  RSL         
MIO_FUS_DAT3                   0x0001180000001418  RSL         
MIO_FUS_EMA                    0x0001180000001550  RSL         
MIO_FUS_PDF                    0x0001180000001420  RSL         
MIO_FUS_PLL                    0x0001180000001580  RSL         
MIO_FUS_PROG                   0x0001180000001510  RSL         
MIO_FUS_PROG_TIMES             0x0001180000001518  RSL         
MIO_FUS_RCMD                   0x0001180000001500  RSL         
MIO_FUS_READ_TIMES             0x0001180000001570  RSL         
MIO_FUS_REPAIR_RES0            0x0001180000001558  RSL         
MIO_FUS_REPAIR_RES1            0x0001180000001560  RSL         
MIO_FUS_REPAIR_RES2            0x0001180000001568  RSL         
MIO_FUS_SPR_REPAIR_RES         0x0001180000001548  RSL         
MIO_FUS_SPR_REPAIR_SUM         0x0001180000001540  RSL         
MIO_FUS_WADR                   0x0001180000001508  RSL         
MIO_GPIO_COMP                  0x00011800000000C8  RSL         
MIO_NDF_DMA_CFG                0x0001180000000168  RSL         
MIO_NDF_DMA_INT                0x0001180000000170  RSL         
MIO_NDF_DMA_INT_EN             0x0001180000000178  RSL         
MIO_PTP_CLOCK_CFG              0x0001070000000F00  NCB         
MIO_PTP_CLOCK_COMP             0x0001070000000F18  NCB         
MIO_PTP_CLOCK_HI               0x0001070000000F10  NCB         
MIO_PTP_CLOCK_LO               0x0001070000000F08  NCB         
MIO_PTP_EVT_CNT                0x0001070000000F28  NCB         
MIO_PTP_TIMESTAMP              0x0001070000000F20  NCB         
MIO_RST_BOOT                   0x0001180000001600  RSL         
MIO_RST_CFG                    0x0001180000001610  RSL         
MIO_RST_CTL0                   0x0001180000001618  RSL         
MIO_RST_CTL1                   0x0001180000001620  RSL         
MIO_RST_DELAY                  0x0001180000001608  RSL         
MIO_RST_INT                    0x0001180000001628  RSL         
MIO_RST_INT_EN                 0x0001180000001630  RSL         
MIO_TWS0_INT                   0x0001180000001010  RSL         
MIO_TWS0_SW_TWSI               0x0001180000001000  RSL         
MIO_TWS0_SW_TWSI_EXT           0x0001180000001018  RSL         
MIO_TWS0_TWSI_SW               0x0001180000001008  RSL         
MIO_TWS1_INT                   0x0001180000001210  RSL         
MIO_TWS1_SW_TWSI               0x0001180000001200  RSL         
MIO_TWS1_SW_TWSI_EXT           0x0001180000001218  RSL         
MIO_TWS1_TWSI_SW               0x0001180000001208  RSL         
MIO_UART0_DLH                  0x0001180000000888  RSL         
MIO_UART0_DLL                  0x0001180000000880  RSL         
MIO_UART0_FAR                  0x0001180000000920  RSL         
MIO_UART0_FCR                  0x0001180000000850  RSL         
MIO_UART0_HTX                  0x0001180000000B08  RSL         
MIO_UART0_IER                  0x0001180000000808  RSL         
MIO_UART0_IIR                  0x0001180000000810  RSL         
MIO_UART0_LCR                  0x0001180000000818  RSL         
MIO_UART0_LSR                  0x0001180000000828  RSL         
MIO_UART0_MCR                  0x0001180000000820  RSL         
MIO_UART0_MSR                  0x0001180000000830  RSL         
MIO_UART0_RBR                  0x0001180000000800  RSL         
MIO_UART0_RFL                  0x0001180000000A08  RSL         
MIO_UART0_RFW                  0x0001180000000930  RSL         
MIO_UART0_SBCR                 0x0001180000000A20  RSL         
MIO_UART0_SCR                  0x0001180000000838  RSL         
MIO_UART0_SFE                  0x0001180000000A30  RSL         
MIO_UART0_SRR                  0x0001180000000A10  RSL         
MIO_UART0_SRT                  0x0001180000000A38  RSL         
MIO_UART0_SRTS                 0x0001180000000A18  RSL         
MIO_UART0_STT                  0x0001180000000B00  RSL         
MIO_UART0_TFL                  0x0001180000000A00  RSL         
MIO_UART0_TFR                  0x0001180000000928  RSL         
MIO_UART0_THR                  0x0001180000000840  RSL         
MIO_UART0_USR                  0x0001180000000938  RSL         
MIO_UART1_DLH                  0x0001180000000C88  RSL         
MIO_UART1_DLL                  0x0001180000000C80  RSL         
MIO_UART1_FAR                  0x0001180000000D20  RSL         
MIO_UART1_FCR                  0x0001180000000C50  RSL         
MIO_UART1_HTX                  0x0001180000000F08  RSL         
MIO_UART1_IER                  0x0001180000000C08  RSL         
MIO_UART1_IIR                  0x0001180000000C10  RSL         
MIO_UART1_LCR                  0x0001180000000C18  RSL         
MIO_UART1_LSR                  0x0001180000000C28  RSL         
MIO_UART1_MCR                  0x0001180000000C20  RSL         
MIO_UART1_MSR                  0x0001180000000C30  RSL         
MIO_UART1_RBR                  0x0001180000000C00  RSL         
MIO_UART1_RFL                  0x0001180000000E08  RSL         
MIO_UART1_RFW                  0x0001180000000D30  RSL         
MIO_UART1_SBCR                 0x0001180000000E20  RSL         
MIO_UART1_SCR                  0x0001180000000C38  RSL         
MIO_UART1_SFE                  0x0001180000000E30  RSL         
MIO_UART1_SRR                  0x0001180000000E10  RSL         
MIO_UART1_SRT                  0x0001180000000E38  RSL         
MIO_UART1_SRTS                 0x0001180000000E18  RSL         
MIO_UART1_STT                  0x0001180000000F00  RSL         
MIO_UART1_TFL                  0x0001180000000E00  RSL         
MIO_UART1_TFR                  0x0001180000000D28  RSL         
MIO_UART1_THR                  0x0001180000000C40  RSL         
MIO_UART1_USR                  0x0001180000000D38  RSL         
MIX0_BIST                      0x0001070000100078  NCB         
MIX0_CTL                       0x0001070000100020  NCB         
MIX0_INTENA                    0x0001070000100050  NCB         
MIX0_IRCNT                     0x0001070000100030  NCB         
MIX0_IRHWM                     0x0001070000100028  NCB         
MIX0_IRING1                    0x0001070000100010  NCB         
MIX0_IRING2                    0x0001070000100018  NCB         
MIX0_ISR                       0x0001070000100048  NCB         
MIX0_ORCNT                     0x0001070000100040  NCB         
MIX0_ORHWM                     0x0001070000100038  NCB         
MIX0_ORING1                    0x0001070000100000  NCB         
MIX0_ORING2                    0x0001070000100008  NCB         
MIX0_REMCNT                    0x0001070000100058  NCB         
MIX0_TSCTL                     0x0001070000100068  NCB         
MIX0_TSTAMP                    0x0001070000100060  NCB         
MIX1_BIST                      0x0001070000100878  NCB         
MIX1_CTL                       0x0001070000100820  NCB         
MIX1_INTENA                    0x0001070000100850  NCB         
MIX1_IRCNT                     0x0001070000100830  NCB         
MIX1_IRHWM                     0x0001070000100828  NCB         
MIX1_IRING1                    0x0001070000100810  NCB         
MIX1_IRING2                    0x0001070000100818  NCB         
MIX1_ISR                       0x0001070000100848  NCB         
MIX1_ORCNT                     0x0001070000100840  NCB         
MIX1_ORHWM                     0x0001070000100838  NCB         
MIX1_ORING1                    0x0001070000100800  NCB         
MIX1_ORING2                    0x0001070000100808  NCB         
MIX1_REMCNT                    0x0001070000100858  NCB         
MIX1_TSCTL                     0x0001070000100868  NCB         
MIX1_TSTAMP                    0x0001070000100860  NCB         
NDF_BT_PG_INFO                 0x0001070001000018  NCB         
NDF_CMD                        0x0001070001000000  NCB         
NDF_DRBELL                     0x0001070001000030  NCB         
NDF_ECC_CNT                    0x0001070001000010  NCB         
NDF_INT                        0x0001070001000020  NCB         
NDF_INT_EN                     0x0001070001000028  NCB         
NDF_MISC                       0x0001070001000008  NCB         
NDF_ST_REG                     0x0001070001000038  NCB         
PCIEEP0_CFG000                 0x0000000000000000  PCICONFIGEP0
PCIEEP0_CFG001                 0x0000000000000004  PCICONFIGEP0
PCIEEP0_CFG002                 0x0000000000000008  PCICONFIGEP0
PCIEEP0_CFG003                 0x000000000000000C  PCICONFIGEP0
PCIEEP0_CFG004                 0x0000000000000010  PCICONFIGEP0
PCIEEP0_CFG004_MASK            0x0000000080000010  PCICONFIGEP0
PCIEEP0_CFG005                 0x0000000000000014  PCICONFIGEP0
PCIEEP0_CFG005_MASK            0x0000000080000014  PCICONFIGEP0
PCIEEP0_CFG006                 0x0000000000000018  PCICONFIGEP0
PCIEEP0_CFG006_MASK            0x0000000080000018  PCICONFIGEP0
PCIEEP0_CFG007                 0x000000000000001C  PCICONFIGEP0
PCIEEP0_CFG007_MASK            0x000000008000001C  PCICONFIGEP0
PCIEEP0_CFG008                 0x0000000000000020  PCICONFIGEP0
PCIEEP0_CFG008_MASK            0x0000000080000020  PCICONFIGEP0
PCIEEP0_CFG009                 0x0000000000000024  PCICONFIGEP0
PCIEEP0_CFG009_MASK            0x0000000080000024  PCICONFIGEP0
PCIEEP0_CFG010                 0x0000000000000028  PCICONFIGEP0
PCIEEP0_CFG011                 0x000000000000002C  PCICONFIGEP0
PCIEEP0_CFG012                 0x0000000000000030  PCICONFIGEP0
PCIEEP0_CFG012_MASK            0x0000000080000030  PCICONFIGEP0
PCIEEP0_CFG013                 0x0000000000000034  PCICONFIGEP0
PCIEEP0_CFG015                 0x000000000000003C  PCICONFIGEP0
PCIEEP0_CFG016                 0x0000000000000040  PCICONFIGEP0
PCIEEP0_CFG017                 0x0000000000000044  PCICONFIGEP0
PCIEEP0_CFG020                 0x0000000000000050  PCICONFIGEP0
PCIEEP0_CFG021                 0x0000000000000054  PCICONFIGEP0
PCIEEP0_CFG022                 0x0000000000000058  PCICONFIGEP0
PCIEEP0_CFG023                 0x000000000000005C  PCICONFIGEP0
PCIEEP0_CFG028                 0x0000000000000070  PCICONFIGEP0
PCIEEP0_CFG029                 0x0000000000000074  PCICONFIGEP0
PCIEEP0_CFG030                 0x0000000000000078  PCICONFIGEP0
PCIEEP0_CFG031                 0x000000000000007C  PCICONFIGEP0
PCIEEP0_CFG032                 0x0000000000000080  PCICONFIGEP0
PCIEEP0_CFG033                 0x0000000000000084  PCICONFIGEP0
PCIEEP0_CFG034                 0x0000000000000088  PCICONFIGEP0
PCIEEP0_CFG037                 0x0000000000000094  PCICONFIGEP0
PCIEEP0_CFG038                 0x0000000000000098  PCICONFIGEP0
PCIEEP0_CFG039                 0x000000000000009C  PCICONFIGEP0
PCIEEP0_CFG040                 0x00000000000000A0  PCICONFIGEP0
PCIEEP0_CFG041                 0x00000000000000A4  PCICONFIGEP0
PCIEEP0_CFG042                 0x00000000000000A8  PCICONFIGEP0
PCIEEP0_CFG064                 0x0000000000000100  PCICONFIGEP0
PCIEEP0_CFG065                 0x0000000000000104  PCICONFIGEP0
PCIEEP0_CFG066                 0x0000000000000108  PCICONFIGEP0
PCIEEP0_CFG067                 0x000000000000010C  PCICONFIGEP0
PCIEEP0_CFG068                 0x0000000000000110  PCICONFIGEP0
PCIEEP0_CFG069                 0x0000000000000114  PCICONFIGEP0
PCIEEP0_CFG070                 0x0000000000000118  PCICONFIGEP0
PCIEEP0_CFG071                 0x000000000000011C  PCICONFIGEP0
PCIEEP0_CFG072                 0x0000000000000120  PCICONFIGEP0
PCIEEP0_CFG073                 0x0000000000000124  PCICONFIGEP0
PCIEEP0_CFG074                 0x0000000000000128  PCICONFIGEP0
PCIEEP0_CFG448                 0x0000000000000700  PCICONFIGEP0
PCIEEP0_CFG449                 0x0000000000000704  PCICONFIGEP0
PCIEEP0_CFG450                 0x0000000000000708  PCICONFIGEP0
PCIEEP0_CFG451                 0x000000000000070C  PCICONFIGEP0
PCIEEP0_CFG452                 0x0000000000000710  PCICONFIGEP0
PCIEEP0_CFG453                 0x0000000000000714  PCICONFIGEP0
PCIEEP0_CFG454                 0x0000000000000718  PCICONFIGEP0
PCIEEP0_CFG455                 0x000000000000071C  PCICONFIGEP0
PCIEEP0_CFG456                 0x0000000000000720  PCICONFIGEP0
PCIEEP0_CFG458                 0x0000000000000728  PCICONFIGEP0
PCIEEP0_CFG459                 0x000000000000072C  PCICONFIGEP0
PCIEEP0_CFG460                 0x0000000000000730  PCICONFIGEP0
PCIEEP0_CFG461                 0x0000000000000734  PCICONFIGEP0
PCIEEP0_CFG462                 0x0000000000000738  PCICONFIGEP0
PCIEEP0_CFG463                 0x000000000000073C  PCICONFIGEP0
PCIEEP0_CFG464                 0x0000000000000740  PCICONFIGEP0
PCIEEP0_CFG465                 0x0000000000000744  PCICONFIGEP0
PCIEEP0_CFG466                 0x0000000000000748  PCICONFIGEP0
PCIEEP0_CFG467                 0x000000000000074C  PCICONFIGEP0
PCIEEP0_CFG468                 0x0000000000000750  PCICONFIGEP0
PCIEEP0_CFG490                 0x00000000000007A8  PCICONFIGEP0
PCIEEP0_CFG491                 0x00000000000007AC  PCICONFIGEP0
PCIEEP0_CFG492                 0x00000000000007B0  PCICONFIGEP0
PCIEEP0_CFG515                 0x000000000000080C  PCICONFIGEP0
PCIEEP0_CFG516                 0x0000000000000810  PCICONFIGEP0
PCIEEP0_CFG517                 0x0000000000000814  PCICONFIGEP0
PCIEEP1_CFG000                 0x0000000000000000  PCICONFIGEP1
PCIEEP1_CFG001                 0x0000000000000004  PCICONFIGEP1
PCIEEP1_CFG002                 0x0000000000000008  PCICONFIGEP1
PCIEEP1_CFG003                 0x000000000000000C  PCICONFIGEP1
PCIEEP1_CFG004                 0x0000000000000010  PCICONFIGEP1
PCIEEP1_CFG004_MASK            0x0000000080000010  PCICONFIGEP1
PCIEEP1_CFG005                 0x0000000000000014  PCICONFIGEP1
PCIEEP1_CFG005_MASK            0x0000000080000014  PCICONFIGEP1
PCIEEP1_CFG006                 0x0000000000000018  PCICONFIGEP1
PCIEEP1_CFG006_MASK            0x0000000080000018  PCICONFIGEP1
PCIEEP1_CFG007                 0x000000000000001C  PCICONFIGEP1
PCIEEP1_CFG007_MASK            0x000000008000001C  PCICONFIGEP1
PCIEEP1_CFG008                 0x0000000000000020  PCICONFIGEP1
PCIEEP1_CFG008_MASK            0x0000000080000020  PCICONFIGEP1
PCIEEP1_CFG009                 0x0000000000000024  PCICONFIGEP1
PCIEEP1_CFG009_MASK            0x0000000080000024  PCICONFIGEP1
PCIEEP1_CFG010                 0x0000000000000028  PCICONFIGEP1
PCIEEP1_CFG011                 0x000000000000002C  PCICONFIGEP1
PCIEEP1_CFG012                 0x0000000000000030  PCICONFIGEP1
PCIEEP1_CFG012_MASK            0x0000000080000030  PCICONFIGEP1
PCIEEP1_CFG013                 0x0000000000000034  PCICONFIGEP1
PCIEEP1_CFG015                 0x000000000000003C  PCICONFIGEP1
PCIEEP1_CFG016                 0x0000000000000040  PCICONFIGEP1
PCIEEP1_CFG017                 0x0000000000000044  PCICONFIGEP1
PCIEEP1_CFG020                 0x0000000000000050  PCICONFIGEP1
PCIEEP1_CFG021                 0x0000000000000054  PCICONFIGEP1
PCIEEP1_CFG022                 0x0000000000000058  PCICONFIGEP1
PCIEEP1_CFG023                 0x000000000000005C  PCICONFIGEP1
PCIEEP1_CFG028                 0x0000000000000070  PCICONFIGEP1
PCIEEP1_CFG029                 0x0000000000000074  PCICONFIGEP1
PCIEEP1_CFG030                 0x0000000000000078  PCICONFIGEP1
PCIEEP1_CFG031                 0x000000000000007C  PCICONFIGEP1
PCIEEP1_CFG032                 0x0000000000000080  PCICONFIGEP1
PCIEEP1_CFG033                 0x0000000000000084  PCICONFIGEP1
PCIEEP1_CFG034                 0x0000000000000088  PCICONFIGEP1
PCIEEP1_CFG037                 0x0000000000000094  PCICONFIGEP1
PCIEEP1_CFG038                 0x0000000000000098  PCICONFIGEP1
PCIEEP1_CFG039                 0x000000000000009C  PCICONFIGEP1
PCIEEP1_CFG040                 0x00000000000000A0  PCICONFIGEP1
PCIEEP1_CFG041                 0x00000000000000A4  PCICONFIGEP1
PCIEEP1_CFG042                 0x00000000000000A8  PCICONFIGEP1
PCIEEP1_CFG064                 0x0000000000000100  PCICONFIGEP1
PCIEEP1_CFG065                 0x0000000000000104  PCICONFIGEP1
PCIEEP1_CFG066                 0x0000000000000108  PCICONFIGEP1
PCIEEP1_CFG067                 0x000000000000010C  PCICONFIGEP1
PCIEEP1_CFG068                 0x0000000000000110  PCICONFIGEP1
PCIEEP1_CFG069                 0x0000000000000114  PCICONFIGEP1
PCIEEP1_CFG070                 0x0000000000000118  PCICONFIGEP1
PCIEEP1_CFG071                 0x000000000000011C  PCICONFIGEP1
PCIEEP1_CFG072                 0x0000000000000120  PCICONFIGEP1
PCIEEP1_CFG073                 0x0000000000000124  PCICONFIGEP1
PCIEEP1_CFG074                 0x0000000000000128  PCICONFIGEP1
PCIEEP1_CFG448                 0x0000000000000700  PCICONFIGEP1
PCIEEP1_CFG449                 0x0000000000000704  PCICONFIGEP1
PCIEEP1_CFG450                 0x0000000000000708  PCICONFIGEP1
PCIEEP1_CFG451                 0x000000000000070C  PCICONFIGEP1
PCIEEP1_CFG452                 0x0000000000000710  PCICONFIGEP1
PCIEEP1_CFG453                 0x0000000000000714  PCICONFIGEP1
PCIEEP1_CFG454                 0x0000000000000718  PCICONFIGEP1
PCIEEP1_CFG455                 0x000000000000071C  PCICONFIGEP1
PCIEEP1_CFG456                 0x0000000000000720  PCICONFIGEP1
PCIEEP1_CFG458                 0x0000000000000728  PCICONFIGEP1
PCIEEP1_CFG459                 0x000000000000072C  PCICONFIGEP1
PCIEEP1_CFG460                 0x0000000000000730  PCICONFIGEP1
PCIEEP1_CFG461                 0x0000000000000734  PCICONFIGEP1
PCIEEP1_CFG462                 0x0000000000000738  PCICONFIGEP1
PCIEEP1_CFG463                 0x000000000000073C  PCICONFIGEP1
PCIEEP1_CFG464                 0x0000000000000740  PCICONFIGEP1
PCIEEP1_CFG465                 0x0000000000000744  PCICONFIGEP1
PCIEEP1_CFG466                 0x0000000000000748  PCICONFIGEP1
PCIEEP1_CFG467                 0x000000000000074C  PCICONFIGEP1
PCIEEP1_CFG468                 0x0000000000000750  PCICONFIGEP1
PCIEEP1_CFG490                 0x00000000000007A8  PCICONFIGEP1
PCIEEP1_CFG491                 0x00000000000007AC  PCICONFIGEP1
PCIEEP1_CFG492                 0x00000000000007B0  PCICONFIGEP1
PCIEEP1_CFG515                 0x000000000000080C  PCICONFIGEP1
PCIEEP1_CFG516                 0x0000000000000810  PCICONFIGEP1
PCIEEP1_CFG517                 0x0000000000000814  PCICONFIGEP1
PCIERC0_CFG000                 0x0000000000000000  PCICONFIGRC0
PCIERC0_CFG001                 0x0000000000000004  PCICONFIGRC0
PCIERC0_CFG002                 0x0000000000000008  PCICONFIGRC0
PCIERC0_CFG003                 0x000000000000000C  PCICONFIGRC0
PCIERC0_CFG004                 0x0000000000000010  PCICONFIGRC0
PCIERC0_CFG005                 0x0000000000000014  PCICONFIGRC0
PCIERC0_CFG006                 0x0000000000000018  PCICONFIGRC0
PCIERC0_CFG007                 0x000000000000001C  PCICONFIGRC0
PCIERC0_CFG008                 0x0000000000000020  PCICONFIGRC0
PCIERC0_CFG009                 0x0000000000000024  PCICONFIGRC0
PCIERC0_CFG010                 0x0000000000000028  PCICONFIGRC0
PCIERC0_CFG011                 0x000000000000002C  PCICONFIGRC0
PCIERC0_CFG012                 0x0000000000000030  PCICONFIGRC0
PCIERC0_CFG013                 0x0000000000000034  PCICONFIGRC0
PCIERC0_CFG014                 0x0000000000000038  PCICONFIGRC0
PCIERC0_CFG015                 0x000000000000003C  PCICONFIGRC0
PCIERC0_CFG016                 0x0000000000000040  PCICONFIGRC0
PCIERC0_CFG017                 0x0000000000000044  PCICONFIGRC0
PCIERC0_CFG020                 0x0000000000000050  PCICONFIGRC0
PCIERC0_CFG021                 0x0000000000000054  PCICONFIGRC0
PCIERC0_CFG022                 0x0000000000000058  PCICONFIGRC0
PCIERC0_CFG023                 0x000000000000005C  PCICONFIGRC0
PCIERC0_CFG028                 0x0000000000000070  PCICONFIGRC0
PCIERC0_CFG029                 0x0000000000000074  PCICONFIGRC0
PCIERC0_CFG030                 0x0000000000000078  PCICONFIGRC0
PCIERC0_CFG031                 0x000000000000007C  PCICONFIGRC0
PCIERC0_CFG032                 0x0000000000000080  PCICONFIGRC0
PCIERC0_CFG033                 0x0000000000000084  PCICONFIGRC0
PCIERC0_CFG034                 0x0000000000000088  PCICONFIGRC0
PCIERC0_CFG035                 0x000000000000008C  PCICONFIGRC0
PCIERC0_CFG036                 0x0000000000000090  PCICONFIGRC0
PCIERC0_CFG037                 0x0000000000000094  PCICONFIGRC0
PCIERC0_CFG038                 0x0000000000000098  PCICONFIGRC0
PCIERC0_CFG039                 0x000000000000009C  PCICONFIGRC0
PCIERC0_CFG040                 0x00000000000000A0  PCICONFIGRC0
PCIERC0_CFG041                 0x00000000000000A4  PCICONFIGRC0
PCIERC0_CFG042                 0x00000000000000A8  PCICONFIGRC0
PCIERC0_CFG064                 0x0000000000000100  PCICONFIGRC0
PCIERC0_CFG065                 0x0000000000000104  PCICONFIGRC0
PCIERC0_CFG066                 0x0000000000000108  PCICONFIGRC0
PCIERC0_CFG067                 0x000000000000010C  PCICONFIGRC0
PCIERC0_CFG068                 0x0000000000000110  PCICONFIGRC0
PCIERC0_CFG069                 0x0000000000000114  PCICONFIGRC0
PCIERC0_CFG070                 0x0000000000000118  PCICONFIGRC0
PCIERC0_CFG071                 0x000000000000011C  PCICONFIGRC0
PCIERC0_CFG072                 0x0000000000000120  PCICONFIGRC0
PCIERC0_CFG073                 0x0000000000000124  PCICONFIGRC0
PCIERC0_CFG074                 0x0000000000000128  PCICONFIGRC0
PCIERC0_CFG075                 0x000000000000012C  PCICONFIGRC0
PCIERC0_CFG076                 0x0000000000000130  PCICONFIGRC0
PCIERC0_CFG077                 0x0000000000000134  PCICONFIGRC0
PCIERC0_CFG448                 0x0000000000000700  PCICONFIGRC0
PCIERC0_CFG449                 0x0000000000000704  PCICONFIGRC0
PCIERC0_CFG450                 0x0000000000000708  PCICONFIGRC0
PCIERC0_CFG451                 0x000000000000070C  PCICONFIGRC0
PCIERC0_CFG452                 0x0000000000000710  PCICONFIGRC0
PCIERC0_CFG453                 0x0000000000000714  PCICONFIGRC0
PCIERC0_CFG454                 0x0000000000000718  PCICONFIGRC0
PCIERC0_CFG455                 0x000000000000071C  PCICONFIGRC0
PCIERC0_CFG456                 0x0000000000000720  PCICONFIGRC0
PCIERC0_CFG458                 0x0000000000000728  PCICONFIGRC0
PCIERC0_CFG459                 0x000000000000072C  PCICONFIGRC0
PCIERC0_CFG460                 0x0000000000000730  PCICONFIGRC0
PCIERC0_CFG461                 0x0000000000000734  PCICONFIGRC0
PCIERC0_CFG462                 0x0000000000000738  PCICONFIGRC0
PCIERC0_CFG463                 0x000000000000073C  PCICONFIGRC0
PCIERC0_CFG464                 0x0000000000000740  PCICONFIGRC0
PCIERC0_CFG465                 0x0000000000000744  PCICONFIGRC0
PCIERC0_CFG466                 0x0000000000000748  PCICONFIGRC0
PCIERC0_CFG467                 0x000000000000074C  PCICONFIGRC0
PCIERC0_CFG468                 0x0000000000000750  PCICONFIGRC0
PCIERC0_CFG490                 0x00000000000007A8  PCICONFIGRC0
PCIERC0_CFG491                 0x00000000000007AC  PCICONFIGRC0
PCIERC0_CFG492                 0x00000000000007B0  PCICONFIGRC0
PCIERC0_CFG515                 0x000000000000080C  PCICONFIGRC0
PCIERC0_CFG516                 0x0000000000000810  PCICONFIGRC0
PCIERC0_CFG517                 0x0000000000000814  PCICONFIGRC0
PCIERC1_CFG000                 0x0000000000000000  PCICONFIGRC1
PCIERC1_CFG001                 0x0000000000000004  PCICONFIGRC1
PCIERC1_CFG002                 0x0000000000000008  PCICONFIGRC1
PCIERC1_CFG003                 0x000000000000000C  PCICONFIGRC1
PCIERC1_CFG004                 0x0000000000000010  PCICONFIGRC1
PCIERC1_CFG005                 0x0000000000000014  PCICONFIGRC1
PCIERC1_CFG006                 0x0000000000000018  PCICONFIGRC1
PCIERC1_CFG007                 0x000000000000001C  PCICONFIGRC1
PCIERC1_CFG008                 0x0000000000000020  PCICONFIGRC1
PCIERC1_CFG009                 0x0000000000000024  PCICONFIGRC1
PCIERC1_CFG010                 0x0000000000000028  PCICONFIGRC1
PCIERC1_CFG011                 0x000000000000002C  PCICONFIGRC1
PCIERC1_CFG012                 0x0000000000000030  PCICONFIGRC1
PCIERC1_CFG013                 0x0000000000000034  PCICONFIGRC1
PCIERC1_CFG014                 0x0000000000000038  PCICONFIGRC1
PCIERC1_CFG015                 0x000000000000003C  PCICONFIGRC1
PCIERC1_CFG016                 0x0000000000000040  PCICONFIGRC1
PCIERC1_CFG017                 0x0000000000000044  PCICONFIGRC1
PCIERC1_CFG020                 0x0000000000000050  PCICONFIGRC1
PCIERC1_CFG021                 0x0000000000000054  PCICONFIGRC1
PCIERC1_CFG022                 0x0000000000000058  PCICONFIGRC1
PCIERC1_CFG023                 0x000000000000005C  PCICONFIGRC1
PCIERC1_CFG028                 0x0000000000000070  PCICONFIGRC1
PCIERC1_CFG029                 0x0000000000000074  PCICONFIGRC1
PCIERC1_CFG030                 0x0000000000000078  PCICONFIGRC1
PCIERC1_CFG031                 0x000000000000007C  PCICONFIGRC1
PCIERC1_CFG032                 0x0000000000000080  PCICONFIGRC1
PCIERC1_CFG033                 0x0000000000000084  PCICONFIGRC1
PCIERC1_CFG034                 0x0000000000000088  PCICONFIGRC1
PCIERC1_CFG035                 0x000000000000008C  PCICONFIGRC1
PCIERC1_CFG036                 0x0000000000000090  PCICONFIGRC1
PCIERC1_CFG037                 0x0000000000000094  PCICONFIGRC1
PCIERC1_CFG038                 0x0000000000000098  PCICONFIGRC1
PCIERC1_CFG039                 0x000000000000009C  PCICONFIGRC1
PCIERC1_CFG040                 0x00000000000000A0  PCICONFIGRC1
PCIERC1_CFG041                 0x00000000000000A4  PCICONFIGRC1
PCIERC1_CFG042                 0x00000000000000A8  PCICONFIGRC1
PCIERC1_CFG064                 0x0000000000000100  PCICONFIGRC1
PCIERC1_CFG065                 0x0000000000000104  PCICONFIGRC1
PCIERC1_CFG066                 0x0000000000000108  PCICONFIGRC1
PCIERC1_CFG067                 0x000000000000010C  PCICONFIGRC1
PCIERC1_CFG068                 0x0000000000000110  PCICONFIGRC1
PCIERC1_CFG069                 0x0000000000000114  PCICONFIGRC1
PCIERC1_CFG070                 0x0000000000000118  PCICONFIGRC1
PCIERC1_CFG071                 0x000000000000011C  PCICONFIGRC1
PCIERC1_CFG072                 0x0000000000000120  PCICONFIGRC1
PCIERC1_CFG073                 0x0000000000000124  PCICONFIGRC1
PCIERC1_CFG074                 0x0000000000000128  PCICONFIGRC1
PCIERC1_CFG075                 0x000000000000012C  PCICONFIGRC1
PCIERC1_CFG076                 0x0000000000000130  PCICONFIGRC1
PCIERC1_CFG077                 0x0000000000000134  PCICONFIGRC1
PCIERC1_CFG448                 0x0000000000000700  PCICONFIGRC1
PCIERC1_CFG449                 0x0000000000000704  PCICONFIGRC1
PCIERC1_CFG450                 0x0000000000000708  PCICONFIGRC1
PCIERC1_CFG451                 0x000000000000070C  PCICONFIGRC1
PCIERC1_CFG452                 0x0000000000000710  PCICONFIGRC1
PCIERC1_CFG453                 0x0000000000000714  PCICONFIGRC1
PCIERC1_CFG454                 0x0000000000000718  PCICONFIGRC1
PCIERC1_CFG455                 0x000000000000071C  PCICONFIGRC1
PCIERC1_CFG456                 0x0000000000000720  PCICONFIGRC1
PCIERC1_CFG458                 0x0000000000000728  PCICONFIGRC1
PCIERC1_CFG459                 0x000000000000072C  PCICONFIGRC1
PCIERC1_CFG460                 0x0000000000000730  PCICONFIGRC1
PCIERC1_CFG461                 0x0000000000000734  PCICONFIGRC1
PCIERC1_CFG462                 0x0000000000000738  PCICONFIGRC1
PCIERC1_CFG463                 0x000000000000073C  PCICONFIGRC1
PCIERC1_CFG464                 0x0000000000000740  PCICONFIGRC1
PCIERC1_CFG465                 0x0000000000000744  PCICONFIGRC1
PCIERC1_CFG466                 0x0000000000000748  PCICONFIGRC1
PCIERC1_CFG467                 0x000000000000074C  PCICONFIGRC1
PCIERC1_CFG468                 0x0000000000000750  PCICONFIGRC1
PCIERC1_CFG490                 0x00000000000007A8  PCICONFIGRC1
PCIERC1_CFG491                 0x00000000000007AC  PCICONFIGRC1
PCIERC1_CFG492                 0x00000000000007B0  PCICONFIGRC1
PCIERC1_CFG515                 0x000000000000080C  PCICONFIGRC1
PCIERC1_CFG516                 0x0000000000000810  PCICONFIGRC1
PCIERC1_CFG517                 0x0000000000000814  PCICONFIGRC1
PCS0_AN000_ADV_REG             0x00011800B0001010  RSL         
PCS0_AN000_EXT_ST_REG          0x00011800B0001028  RSL         
PCS0_AN000_LP_ABIL_REG         0x00011800B0001018  RSL         
PCS0_AN000_RESULTS_REG         0x00011800B0001020  RSL         
PCS0_AN001_ADV_REG             0x00011800B0001410  RSL         
PCS0_AN001_EXT_ST_REG          0x00011800B0001428  RSL         
PCS0_AN001_LP_ABIL_REG         0x00011800B0001418  RSL         
PCS0_AN001_RESULTS_REG         0x00011800B0001420  RSL         
PCS0_AN002_ADV_REG             0x00011800B0001810  RSL         
PCS0_AN002_EXT_ST_REG          0x00011800B0001828  RSL         
PCS0_AN002_LP_ABIL_REG         0x00011800B0001818  RSL         
PCS0_AN002_RESULTS_REG         0x00011800B0001820  RSL         
PCS0_AN003_ADV_REG             0x00011800B0001C10  RSL         
PCS0_AN003_EXT_ST_REG          0x00011800B0001C28  RSL         
PCS0_AN003_LP_ABIL_REG         0x00011800B0001C18  RSL         
PCS0_AN003_RESULTS_REG         0x00011800B0001C20  RSL         
PCS0_INT000_EN_REG             0x00011800B0001088  RSL         
PCS0_INT000_REG                0x00011800B0001080  RSL         
PCS0_INT001_EN_REG             0x00011800B0001488  RSL         
PCS0_INT001_REG                0x00011800B0001480  RSL         
PCS0_INT002_EN_REG             0x00011800B0001888  RSL         
PCS0_INT002_REG                0x00011800B0001880  RSL         
PCS0_INT003_EN_REG             0x00011800B0001C88  RSL         
PCS0_INT003_REG                0x00011800B0001C80  RSL         
PCS0_LINK000_TIMER_COUNT_REG   0x00011800B0001040  RSL         
PCS0_LINK001_TIMER_COUNT_REG   0x00011800B0001440  RSL         
PCS0_LINK002_TIMER_COUNT_REG   0x00011800B0001840  RSL         
PCS0_LINK003_TIMER_COUNT_REG   0x00011800B0001C40  RSL         
PCS0_LOG_ANL000_REG            0x00011800B0001090  RSL         
PCS0_LOG_ANL001_REG            0x00011800B0001490  RSL         
PCS0_LOG_ANL002_REG            0x00011800B0001890  RSL         
PCS0_LOG_ANL003_REG            0x00011800B0001C90  RSL         
PCS0_MISC000_CTL_REG           0x00011800B0001078  RSL         
PCS0_MISC001_CTL_REG           0x00011800B0001478  RSL         
PCS0_MISC002_CTL_REG           0x00011800B0001878  RSL         
PCS0_MISC003_CTL_REG           0x00011800B0001C78  RSL         
PCS0_MR000_CONTROL_REG         0x00011800B0001000  RSL         
PCS0_MR000_STATUS_REG          0x00011800B0001008  RSL         
PCS0_MR001_CONTROL_REG         0x00011800B0001400  RSL         
PCS0_MR001_STATUS_REG          0x00011800B0001408  RSL         
PCS0_MR002_CONTROL_REG         0x00011800B0001800  RSL         
PCS0_MR002_STATUS_REG          0x00011800B0001808  RSL         
PCS0_MR003_CONTROL_REG         0x00011800B0001C00  RSL         
PCS0_MR003_STATUS_REG          0x00011800B0001C08  RSL         
PCS0_RX000_STATES_REG          0x00011800B0001058  RSL         
PCS0_RX000_SYNC_REG            0x00011800B0001050  RSL         
PCS0_RX001_STATES_REG          0x00011800B0001458  RSL         
PCS0_RX001_SYNC_REG            0x00011800B0001450  RSL         
PCS0_RX002_STATES_REG          0x00011800B0001858  RSL         
PCS0_RX002_SYNC_REG            0x00011800B0001850  RSL         
PCS0_RX003_STATES_REG          0x00011800B0001C58  RSL         
PCS0_RX003_SYNC_REG            0x00011800B0001C50  RSL         
PCS0_SGM000_AN_ADV_REG         0x00011800B0001068  RSL         
PCS0_SGM000_LP_ADV_REG         0x00011800B0001070  RSL         
PCS0_SGM001_AN_ADV_REG         0x00011800B0001468  RSL         
PCS0_SGM001_LP_ADV_REG         0x00011800B0001470  RSL         
PCS0_SGM002_AN_ADV_REG         0x00011800B0001868  RSL         
PCS0_SGM002_LP_ADV_REG         0x00011800B0001870  RSL         
PCS0_SGM003_AN_ADV_REG         0x00011800B0001C68  RSL         
PCS0_SGM003_LP_ADV_REG         0x00011800B0001C70  RSL         
PCS0_TX000_STATES_REG          0x00011800B0001060  RSL         
PCS0_TX001_STATES_REG          0x00011800B0001460  RSL         
PCS0_TX002_STATES_REG          0x00011800B0001860  RSL         
PCS0_TX003_STATES_REG          0x00011800B0001C60  RSL         
PCS0_TX_RX000_POLARITY_REG     0x00011800B0001048  RSL         
PCS0_TX_RX001_POLARITY_REG     0x00011800B0001448  RSL         
PCS0_TX_RX002_POLARITY_REG     0x00011800B0001848  RSL         
PCS0_TX_RX003_POLARITY_REG     0x00011800B0001C48  RSL         
PCSX0_10GBX_STATUS_REG         0x00011800B0000828  RSL         
PCSX0_BIST_STATUS_REG          0x00011800B0000870  RSL         
PCSX0_BIT_LOCK_STATUS_REG      0x00011800B0000850  RSL         
PCSX0_CONTROL1_REG             0x00011800B0000800  RSL         
PCSX0_CONTROL2_REG             0x00011800B0000818  RSL         
PCSX0_INT_EN_REG               0x00011800B0000860  RSL         
PCSX0_INT_REG                  0x00011800B0000858  RSL         
PCSX0_LOG_ANL_REG              0x00011800B0000868  RSL         
PCSX0_MISC_CTL_REG             0x00011800B0000848  RSL         
PCSX0_RX_SYNC_STATES_REG       0x00011800B0000838  RSL         
PCSX0_SPD_ABIL_REG             0x00011800B0000810  RSL         
PCSX0_STATUS1_REG              0x00011800B0000808  RSL         
PCSX0_STATUS2_REG              0x00011800B0000820  RSL         
PCSX0_TX_RX_POLARITY_REG       0x00011800B0000840  RSL         
PCSX0_TX_RX_STATES_REG         0x00011800B0000830  RSL         
PEM0_BAR1_INDEX000             0x00011800C00000A8  RSL         
PEM0_BAR1_INDEX001             0x00011800C00000B0  RSL         
PEM0_BAR1_INDEX002             0x00011800C00000B8  RSL         
PEM0_BAR1_INDEX003             0x00011800C00000C0  RSL         
PEM0_BAR1_INDEX004             0x00011800C00000C8  RSL         
PEM0_BAR1_INDEX005             0x00011800C00000D0  RSL         
PEM0_BAR1_INDEX006             0x00011800C00000D8  RSL         
PEM0_BAR1_INDEX007             0x00011800C00000E0  RSL         
PEM0_BAR1_INDEX008             0x00011800C00000E8  RSL         
PEM0_BAR1_INDEX009             0x00011800C00000F0  RSL         
PEM0_BAR1_INDEX010             0x00011800C00000F8  RSL         
PEM0_BAR1_INDEX011             0x00011800C0000100  RSL         
PEM0_BAR1_INDEX012             0x00011800C0000108  RSL         
PEM0_BAR1_INDEX013             0x00011800C0000110  RSL         
PEM0_BAR1_INDEX014             0x00011800C0000118  RSL         
PEM0_BAR1_INDEX015             0x00011800C0000120  RSL         
PEM0_BAR_CTL                   0x00011800C0000128  RSL         
PEM0_BIST_STATUS               0x00011800C0000018  RSL         
PEM0_BIST_STATUS2              0x00011800C0000420  RSL         
PEM0_CFG_RD                    0x00011800C0000030  RSL         
PEM0_CFG_WR                    0x00011800C0000028  RSL         
PEM0_CPL_LUT_VALID             0x00011800C0000098  RSL         
PEM0_CTL_STATUS                0x00011800C0000000  RSL         
PEM0_DBG_INFO                  0x00011800C0000008  RSL         
PEM0_DBG_INFO_EN               0x00011800C00000A0  RSL         
PEM0_DIAG_STATUS               0x00011800C0000020  RSL         
PEM0_INT_ENB                   0x00011800C0000410  RSL         
PEM0_INT_ENB_INT               0x00011800C0000418  RSL         
PEM0_INT_SUM                   0x00011800C0000408  RSL         
PEM0_P2N_BAR0_START            0x00011800C0000080  RSL         
PEM0_P2N_BAR1_START            0x00011800C0000088  RSL         
PEM0_P2N_BAR2_START            0x00011800C0000090  RSL         
PEM0_P2P_BAR000_END            0x00011800C0000048  RSL         
PEM0_P2P_BAR000_START          0x00011800C0000040  RSL         
PEM0_P2P_BAR001_END            0x00011800C0000058  RSL         
PEM0_P2P_BAR001_START          0x00011800C0000050  RSL         
PEM0_P2P_BAR002_END            0x00011800C0000068  RSL         
PEM0_P2P_BAR002_START          0x00011800C0000060  RSL         
PEM0_P2P_BAR003_END            0x00011800C0000078  RSL         
PEM0_P2P_BAR003_START          0x00011800C0000070  RSL         
PEM0_TLP_CREDITS               0x00011800C0000038  RSL         
PEM1_BAR1_INDEX000             0x00011800C10000A8  RSL         
PEM1_BAR1_INDEX001             0x00011800C10000B0  RSL         
PEM1_BAR1_INDEX002             0x00011800C10000B8  RSL         
PEM1_BAR1_INDEX003             0x00011800C10000C0  RSL         
PEM1_BAR1_INDEX004             0x00011800C10000C8  RSL         
PEM1_BAR1_INDEX005             0x00011800C10000D0  RSL         
PEM1_BAR1_INDEX006             0x00011800C10000D8  RSL         
PEM1_BAR1_INDEX007             0x00011800C10000E0  RSL         
PEM1_BAR1_INDEX008             0x00011800C10000E8  RSL         
PEM1_BAR1_INDEX009             0x00011800C10000F0  RSL         
PEM1_BAR1_INDEX010             0x00011800C10000F8  RSL         
PEM1_BAR1_INDEX011             0x00011800C1000100  RSL         
PEM1_BAR1_INDEX012             0x00011800C1000108  RSL         
PEM1_BAR1_INDEX013             0x00011800C1000110  RSL         
PEM1_BAR1_INDEX014             0x00011800C1000118  RSL         
PEM1_BAR1_INDEX015             0x00011800C1000120  RSL         
PEM1_BAR_CTL                   0x00011800C1000128  RSL         
PEM1_BIST_STATUS               0x00011800C1000018  RSL         
PEM1_BIST_STATUS2              0x00011800C1000420  RSL         
PEM1_CFG_RD                    0x00011800C1000030  RSL         
PEM1_CFG_WR                    0x00011800C1000028  RSL         
PEM1_CPL_LUT_VALID             0x00011800C1000098  RSL         
PEM1_CTL_STATUS                0x00011800C1000000  RSL         
PEM1_DBG_INFO                  0x00011800C1000008  RSL         
PEM1_DBG_INFO_EN               0x00011800C10000A0  RSL         
PEM1_DIAG_STATUS               0x00011800C1000020  RSL         
PEM1_INT_ENB                   0x00011800C1000410  RSL         
PEM1_INT_ENB_INT               0x00011800C1000418  RSL         
PEM1_INT_SUM                   0x00011800C1000408  RSL         
PEM1_P2N_BAR0_START            0x00011800C1000080  RSL         
PEM1_P2N_BAR1_START            0x00011800C1000088  RSL         
PEM1_P2N_BAR2_START            0x00011800C1000090  RSL         
PEM1_P2P_BAR000_END            0x00011800C1000048  RSL         
PEM1_P2P_BAR000_START          0x00011800C1000040  RSL         
PEM1_P2P_BAR001_END            0x00011800C1000058  RSL         
PEM1_P2P_BAR001_START          0x00011800C1000050  RSL         
PEM1_P2P_BAR002_END            0x00011800C1000068  RSL         
PEM1_P2P_BAR002_START          0x00011800C1000060  RSL         
PEM1_P2P_BAR003_END            0x00011800C1000078  RSL         
PEM1_P2P_BAR003_START          0x00011800C1000070  RSL         
PEM1_TLP_CREDITS               0x00011800C1000038  RSL         
PIP_BCK_PRS                    0x00011800A0000038  RSL         
PIP_BIST_STATUS                0x00011800A0000000  RSL         
PIP_CLKEN                      0x00011800A0000040  RSL         
PIP_DEC_IPSEC0                 0x00011800A0000080  RSL         
PIP_DEC_IPSEC1                 0x00011800A0000088  RSL         
PIP_DEC_IPSEC2                 0x00011800A0000090  RSL         
PIP_DEC_IPSEC3                 0x00011800A0000098  RSL         
PIP_DSA_SRC_GRP                0x00011800A0000190  RSL         
PIP_DSA_VID_GRP                0x00011800A0000198  RSL         
PIP_FRM_LEN_CHK0               0x00011800A0000180  RSL         
PIP_GBL_CFG                    0x00011800A0000028  RSL         
PIP_GBL_CTL                    0x00011800A0000020  RSL         
PIP_HG_PRI_QOS                 0x00011800A00001A0  RSL         
PIP_INT_EN                     0x00011800A0000010  RSL         
PIP_INT_REG                    0x00011800A0000008  RSL         
PIP_IP_OFFSET                  0x00011800A0000060  RSL         
PIP_PRT_CFG0                   0x00011800A0000200  RSL         
PIP_PRT_CFG1                   0x00011800A0000208  RSL         
PIP_PRT_CFG2                   0x00011800A0000210  RSL         
PIP_PRT_CFG3                   0x00011800A0000218  RSL         
PIP_PRT_CFG32                  0x00011800A0000300  RSL         
PIP_PRT_CFG33                  0x00011800A0000308  RSL         
PIP_PRT_CFG34                  0x00011800A0000310  RSL         
PIP_PRT_CFG35                  0x00011800A0000318  RSL         
PIP_PRT_CFG36                  0x00011800A0000320  RSL         
PIP_PRT_CFG37                  0x00011800A0000328  RSL         
PIP_PRT_CFG38                  0x00011800A0000330  RSL         
PIP_PRT_CFG39                  0x00011800A0000338  RSL         
PIP_PRT_CFG40                  0x00011800A0000340  RSL         
PIP_PRT_CFG41                  0x00011800A0000348  RSL         
PIP_PRT_CFG42                  0x00011800A0000350  RSL         
PIP_PRT_CFG43                  0x00011800A0000358  RSL         
PIP_PRT_TAG0                   0x00011800A0000400  RSL         
PIP_PRT_TAG1                   0x00011800A0000408  RSL         
PIP_PRT_TAG2                   0x00011800A0000410  RSL         
PIP_PRT_TAG3                   0x00011800A0000418  RSL         
PIP_PRT_TAG32                  0x00011800A0000500  RSL         
PIP_PRT_TAG33                  0x00011800A0000508  RSL         
PIP_PRT_TAG34                  0x00011800A0000510  RSL         
PIP_PRT_TAG35                  0x00011800A0000518  RSL         
PIP_PRT_TAG36                  0x00011800A0000520  RSL         
PIP_PRT_TAG37                  0x00011800A0000528  RSL         
PIP_PRT_TAG38                  0x00011800A0000530  RSL         
PIP_PRT_TAG39                  0x00011800A0000538  RSL         
PIP_PRT_TAG40                  0x00011800A0000540  RSL         
PIP_PRT_TAG41                  0x00011800A0000548  RSL         
PIP_PRT_TAG42                  0x00011800A0000550  RSL         
PIP_PRT_TAG43                  0x00011800A0000558  RSL         
PIP_QOS_DIFF0                  0x00011800A0000600  RSL         
PIP_QOS_DIFF1                  0x00011800A0000608  RSL         
PIP_QOS_DIFF2                  0x00011800A0000610  RSL         
PIP_QOS_DIFF3                  0x00011800A0000618  RSL         
PIP_QOS_DIFF4                  0x00011800A0000620  RSL         
PIP_QOS_DIFF5                  0x00011800A0000628  RSL         
PIP_QOS_DIFF6                  0x00011800A0000630  RSL         
PIP_QOS_DIFF7                  0x00011800A0000638  RSL         
PIP_QOS_DIFF8                  0x00011800A0000640  RSL         
PIP_QOS_DIFF9                  0x00011800A0000648  RSL         
PIP_QOS_DIFF10                 0x00011800A0000650  RSL         
PIP_QOS_DIFF11                 0x00011800A0000658  RSL         
PIP_QOS_DIFF12                 0x00011800A0000660  RSL         
PIP_QOS_DIFF13                 0x00011800A0000668  RSL         
PIP_QOS_DIFF14                 0x00011800A0000670  RSL         
PIP_QOS_DIFF15                 0x00011800A0000678  RSL         
PIP_QOS_DIFF16                 0x00011800A0000680  RSL         
PIP_QOS_DIFF17                 0x00011800A0000688  RSL         
PIP_QOS_DIFF18                 0x00011800A0000690  RSL         
PIP_QOS_DIFF19                 0x00011800A0000698  RSL         
PIP_QOS_DIFF20                 0x00011800A00006A0  RSL         
PIP_QOS_DIFF21                 0x00011800A00006A8  RSL         
PIP_QOS_DIFF22                 0x00011800A00006B0  RSL         
PIP_QOS_DIFF23                 0x00011800A00006B8  RSL         
PIP_QOS_DIFF24                 0x00011800A00006C0  RSL         
PIP_QOS_DIFF25                 0x00011800A00006C8  RSL         
PIP_QOS_DIFF26                 0x00011800A00006D0  RSL         
PIP_QOS_DIFF27                 0x00011800A00006D8  RSL         
PIP_QOS_DIFF28                 0x00011800A00006E0  RSL         
PIP_QOS_DIFF29                 0x00011800A00006E8  RSL         
PIP_QOS_DIFF30                 0x00011800A00006F0  RSL         
PIP_QOS_DIFF31                 0x00011800A00006F8  RSL         
PIP_QOS_DIFF32                 0x00011800A0000700  RSL         
PIP_QOS_DIFF33                 0x00011800A0000708  RSL         
PIP_QOS_DIFF34                 0x00011800A0000710  RSL         
PIP_QOS_DIFF35                 0x00011800A0000718  RSL         
PIP_QOS_DIFF36                 0x00011800A0000720  RSL         
PIP_QOS_DIFF37                 0x00011800A0000728  RSL         
PIP_QOS_DIFF38                 0x00011800A0000730  RSL         
PIP_QOS_DIFF39                 0x00011800A0000738  RSL         
PIP_QOS_DIFF40                 0x00011800A0000740  RSL         
PIP_QOS_DIFF41                 0x00011800A0000748  RSL         
PIP_QOS_DIFF42                 0x00011800A0000750  RSL         
PIP_QOS_DIFF43                 0x00011800A0000758  RSL         
PIP_QOS_DIFF44                 0x00011800A0000760  RSL         
PIP_QOS_DIFF45                 0x00011800A0000768  RSL         
PIP_QOS_DIFF46                 0x00011800A0000770  RSL         
PIP_QOS_DIFF47                 0x00011800A0000778  RSL         
PIP_QOS_DIFF48                 0x00011800A0000780  RSL         
PIP_QOS_DIFF49                 0x00011800A0000788  RSL         
PIP_QOS_DIFF50                 0x00011800A0000790  RSL         
PIP_QOS_DIFF51                 0x00011800A0000798  RSL         
PIP_QOS_DIFF52                 0x00011800A00007A0  RSL         
PIP_QOS_DIFF53                 0x00011800A00007A8  RSL         
PIP_QOS_DIFF54                 0x00011800A00007B0  RSL         
PIP_QOS_DIFF55                 0x00011800A00007B8  RSL         
PIP_QOS_DIFF56                 0x00011800A00007C0  RSL         
PIP_QOS_DIFF57                 0x00011800A00007C8  RSL         
PIP_QOS_DIFF58                 0x00011800A00007D0  RSL         
PIP_QOS_DIFF59                 0x00011800A00007D8  RSL         
PIP_QOS_DIFF60                 0x00011800A00007E0  RSL         
PIP_QOS_DIFF61                 0x00011800A00007E8  RSL         
PIP_QOS_DIFF62                 0x00011800A00007F0  RSL         
PIP_QOS_DIFF63                 0x00011800A00007F8  RSL         
PIP_QOS_VLAN0                  0x00011800A00000C0  RSL         
PIP_QOS_VLAN1                  0x00011800A00000C8  RSL         
PIP_QOS_VLAN2                  0x00011800A00000D0  RSL         
PIP_QOS_VLAN3                  0x00011800A00000D8  RSL         
PIP_QOS_VLAN4                  0x00011800A00000E0  RSL         
PIP_QOS_VLAN5                  0x00011800A00000E8  RSL         
PIP_QOS_VLAN6                  0x00011800A00000F0  RSL         
PIP_QOS_VLAN7                  0x00011800A00000F8  RSL         
PIP_QOS_WATCH0                 0x00011800A0000100  RSL         
PIP_QOS_WATCH1                 0x00011800A0000108  RSL         
PIP_QOS_WATCH2                 0x00011800A0000110  RSL         
PIP_QOS_WATCH3                 0x00011800A0000118  RSL         
PIP_QOS_WATCH4                 0x00011800A0000120  RSL         
PIP_QOS_WATCH5                 0x00011800A0000128  RSL         
PIP_QOS_WATCH6                 0x00011800A0000130  RSL         
PIP_QOS_WATCH7                 0x00011800A0000138  RSL         
PIP_RAW_WORD                   0x00011800A00000B0  RSL         
PIP_SFT_RST                    0x00011800A0000030  RSL         
PIP_STAT0_PRT0                 0x00011800A0000800  RSL         
PIP_STAT0_PRT1                 0x00011800A0000850  RSL         
PIP_STAT0_PRT2                 0x00011800A00008A0  RSL         
PIP_STAT0_PRT3                 0x00011800A00008F0  RSL         
PIP_STAT0_PRT32                0x00011800A0001200  RSL         
PIP_STAT0_PRT33                0x00011800A0001250  RSL         
PIP_STAT0_PRT34                0x00011800A00012A0  RSL         
PIP_STAT0_PRT35                0x00011800A00012F0  RSL         
PIP_STAT0_PRT36                0x00011800A0001340  RSL         
PIP_STAT0_PRT37                0x00011800A0001390  RSL         
PIP_STAT0_PRT38                0x00011800A00013E0  RSL         
PIP_STAT0_PRT39                0x00011800A0001430  RSL         
PIP_STAT1_PRT0                 0x00011800A0000808  RSL         
PIP_STAT1_PRT1                 0x00011800A0000858  RSL         
PIP_STAT1_PRT2                 0x00011800A00008A8  RSL         
PIP_STAT1_PRT3                 0x00011800A00008F8  RSL         
PIP_STAT1_PRT32                0x00011800A0001208  RSL         
PIP_STAT1_PRT33                0x00011800A0001258  RSL         
PIP_STAT1_PRT34                0x00011800A00012A8  RSL         
PIP_STAT1_PRT35                0x00011800A00012F8  RSL         
PIP_STAT1_PRT36                0x00011800A0001348  RSL         
PIP_STAT1_PRT37                0x00011800A0001398  RSL         
PIP_STAT1_PRT38                0x00011800A00013E8  RSL         
PIP_STAT1_PRT39                0x00011800A0001438  RSL         
PIP_STAT2_PRT0                 0x00011800A0000810  RSL         
PIP_STAT2_PRT1                 0x00011800A0000860  RSL         
PIP_STAT2_PRT2                 0x00011800A00008B0  RSL         
PIP_STAT2_PRT3                 0x00011800A0000900  RSL         
PIP_STAT2_PRT32                0x00011800A0001210  RSL         
PIP_STAT2_PRT33                0x00011800A0001260  RSL         
PIP_STAT2_PRT34                0x00011800A00012B0  RSL         
PIP_STAT2_PRT35                0x00011800A0001300  RSL         
PIP_STAT2_PRT36                0x00011800A0001350  RSL         
PIP_STAT2_PRT37                0x00011800A00013A0  RSL         
PIP_STAT2_PRT38                0x00011800A00013F0  RSL         
PIP_STAT2_PRT39                0x00011800A0001440  RSL         
PIP_STAT3_PRT0                 0x00011800A0000818  RSL         
PIP_STAT3_PRT1                 0x00011800A0000868  RSL         
PIP_STAT3_PRT2                 0x00011800A00008B8  RSL         
PIP_STAT3_PRT3                 0x00011800A0000908  RSL         
PIP_STAT3_PRT32                0x00011800A0001218  RSL         
PIP_STAT3_PRT33                0x00011800A0001268  RSL         
PIP_STAT3_PRT34                0x00011800A00012B8  RSL         
PIP_STAT3_PRT35                0x00011800A0001308  RSL         
PIP_STAT3_PRT36                0x00011800A0001358  RSL         
PIP_STAT3_PRT37                0x00011800A00013A8  RSL         
PIP_STAT3_PRT38                0x00011800A00013F8  RSL         
PIP_STAT3_PRT39                0x00011800A0001448  RSL         
PIP_STAT4_PRT0                 0x00011800A0000820  RSL         
PIP_STAT4_PRT1                 0x00011800A0000870  RSL         
PIP_STAT4_PRT2                 0x00011800A00008C0  RSL         
PIP_STAT4_PRT3                 0x00011800A0000910  RSL         
PIP_STAT4_PRT32                0x00011800A0001220  RSL         
PIP_STAT4_PRT33                0x00011800A0001270  RSL         
PIP_STAT4_PRT34                0x00011800A00012C0  RSL         
PIP_STAT4_PRT35                0x00011800A0001310  RSL         
PIP_STAT4_PRT36                0x00011800A0001360  RSL         
PIP_STAT4_PRT37                0x00011800A00013B0  RSL         
PIP_STAT4_PRT38                0x00011800A0001400  RSL         
PIP_STAT4_PRT39                0x00011800A0001450  RSL         
PIP_STAT5_PRT0                 0x00011800A0000828  RSL         
PIP_STAT5_PRT1                 0x00011800A0000878  RSL         
PIP_STAT5_PRT2                 0x00011800A00008C8  RSL         
PIP_STAT5_PRT3                 0x00011800A0000918  RSL         
PIP_STAT5_PRT32                0x00011800A0001228  RSL         
PIP_STAT5_PRT33                0x00011800A0001278  RSL         
PIP_STAT5_PRT34                0x00011800A00012C8  RSL         
PIP_STAT5_PRT35                0x00011800A0001318  RSL         
PIP_STAT5_PRT36                0x00011800A0001368  RSL         
PIP_STAT5_PRT37                0x00011800A00013B8  RSL         
PIP_STAT5_PRT38                0x00011800A0001408  RSL         
PIP_STAT5_PRT39                0x00011800A0001458  RSL         
PIP_STAT6_PRT0                 0x00011800A0000830  RSL         
PIP_STAT6_PRT1                 0x00011800A0000880  RSL         
PIP_STAT6_PRT2                 0x00011800A00008D0  RSL         
PIP_STAT6_PRT3                 0x00011800A0000920  RSL         
PIP_STAT6_PRT32                0x00011800A0001230  RSL         
PIP_STAT6_PRT33                0x00011800A0001280  RSL         
PIP_STAT6_PRT34                0x00011800A00012D0  RSL         
PIP_STAT6_PRT35                0x00011800A0001320  RSL         
PIP_STAT6_PRT36                0x00011800A0001370  RSL         
PIP_STAT6_PRT37                0x00011800A00013C0  RSL         
PIP_STAT6_PRT38                0x00011800A0001410  RSL         
PIP_STAT6_PRT39                0x00011800A0001460  RSL         
PIP_STAT7_PRT0                 0x00011800A0000838  RSL         
PIP_STAT7_PRT1                 0x00011800A0000888  RSL         
PIP_STAT7_PRT2                 0x00011800A00008D8  RSL         
PIP_STAT7_PRT3                 0x00011800A0000928  RSL         
PIP_STAT7_PRT32                0x00011800A0001238  RSL         
PIP_STAT7_PRT33                0x00011800A0001288  RSL         
PIP_STAT7_PRT34                0x00011800A00012D8  RSL         
PIP_STAT7_PRT35                0x00011800A0001328  RSL         
PIP_STAT7_PRT36                0x00011800A0001378  RSL         
PIP_STAT7_PRT37                0x00011800A00013C8  RSL         
PIP_STAT7_PRT38                0x00011800A0001418  RSL         
PIP_STAT7_PRT39                0x00011800A0001468  RSL         
PIP_STAT8_PRT0                 0x00011800A0000840  RSL         
PIP_STAT8_PRT1                 0x00011800A0000890  RSL         
PIP_STAT8_PRT2                 0x00011800A00008E0  RSL         
PIP_STAT8_PRT3                 0x00011800A0000930  RSL         
PIP_STAT8_PRT32                0x00011800A0001240  RSL         
PIP_STAT8_PRT33                0x00011800A0001290  RSL         
PIP_STAT8_PRT34                0x00011800A00012E0  RSL         
PIP_STAT8_PRT35                0x00011800A0001330  RSL         
PIP_STAT8_PRT36                0x00011800A0001380  RSL         
PIP_STAT8_PRT37                0x00011800A00013D0  RSL         
PIP_STAT8_PRT38                0x00011800A0001420  RSL         
PIP_STAT8_PRT39                0x00011800A0001470  RSL         
PIP_STAT9_PRT0                 0x00011800A0000848  RSL         
PIP_STAT9_PRT1                 0x00011800A0000898  RSL         
PIP_STAT9_PRT2                 0x00011800A00008E8  RSL         
PIP_STAT9_PRT3                 0x00011800A0000938  RSL         
PIP_STAT9_PRT32                0x00011800A0001248  RSL         
PIP_STAT9_PRT33                0x00011800A0001298  RSL         
PIP_STAT9_PRT34                0x00011800A00012E8  RSL         
PIP_STAT9_PRT35                0x00011800A0001338  RSL         
PIP_STAT9_PRT36                0x00011800A0001388  RSL         
PIP_STAT9_PRT37                0x00011800A00013D8  RSL         
PIP_STAT9_PRT38                0x00011800A0001428  RSL         
PIP_STAT9_PRT39                0x00011800A0001478  RSL         
PIP_STAT10_PRT0                0x00011800A0001480  RSL         
PIP_STAT10_PRT1                0x00011800A0001490  RSL         
PIP_STAT10_PRT2                0x00011800A00014A0  RSL         
PIP_STAT10_PRT3                0x00011800A00014B0  RSL         
PIP_STAT10_PRT32               0x00011800A0001680  RSL         
PIP_STAT10_PRT33               0x00011800A0001690  RSL         
PIP_STAT10_PRT34               0x00011800A00016A0  RSL         
PIP_STAT10_PRT35               0x00011800A00016B0  RSL         
PIP_STAT10_PRT36               0x00011800A00016C0  RSL         
PIP_STAT10_PRT37               0x00011800A00016D0  RSL         
PIP_STAT10_PRT38               0x00011800A00016E0  RSL         
PIP_STAT10_PRT39               0x00011800A00016F0  RSL         
PIP_STAT11_PRT0                0x00011800A0001488  RSL         
PIP_STAT11_PRT1                0x00011800A0001498  RSL         
PIP_STAT11_PRT2                0x00011800A00014A8  RSL         
PIP_STAT11_PRT3                0x00011800A00014B8  RSL         
PIP_STAT11_PRT32               0x00011800A0001688  RSL         
PIP_STAT11_PRT33               0x00011800A0001698  RSL         
PIP_STAT11_PRT34               0x00011800A00016A8  RSL         
PIP_STAT11_PRT35               0x00011800A00016B8  RSL         
PIP_STAT11_PRT36               0x00011800A00016C8  RSL         
PIP_STAT11_PRT37               0x00011800A00016D8  RSL         
PIP_STAT11_PRT38               0x00011800A00016E8  RSL         
PIP_STAT11_PRT39               0x00011800A00016F8  RSL         
PIP_STAT_CTL                   0x00011800A0000018  RSL         
PIP_STAT_INB_ERRS0             0x00011800A0001A10  RSL         
PIP_STAT_INB_ERRS1             0x00011800A0001A30  RSL         
PIP_STAT_INB_ERRS2             0x00011800A0001A50  RSL         
PIP_STAT_INB_ERRS3             0x00011800A0001A70  RSL         
PIP_STAT_INB_ERRS32            0x00011800A0001E10  RSL         
PIP_STAT_INB_ERRS33            0x00011800A0001E30  RSL         
PIP_STAT_INB_ERRS34            0x00011800A0001E50  RSL         
PIP_STAT_INB_ERRS35            0x00011800A0001E70  RSL         
PIP_STAT_INB_ERRS36            0x00011800A0001E90  RSL         
PIP_STAT_INB_ERRS37            0x00011800A0001EB0  RSL         
PIP_STAT_INB_ERRS38            0x00011800A0001ED0  RSL         
PIP_STAT_INB_ERRS39            0x00011800A0001EF0  RSL         
PIP_STAT_INB_ERRS40            0x00011800A0001F10  RSL         
PIP_STAT_INB_ERRS41            0x00011800A0001F30  RSL         
PIP_STAT_INB_ERRS42            0x00011800A0001F50  RSL         
PIP_STAT_INB_ERRS43            0x00011800A0001F70  RSL         
PIP_STAT_INB_OCTS0             0x00011800A0001A08  RSL         
PIP_STAT_INB_OCTS1             0x00011800A0001A28  RSL         
PIP_STAT_INB_OCTS2             0x00011800A0001A48  RSL         
PIP_STAT_INB_OCTS3             0x00011800A0001A68  RSL         
PIP_STAT_INB_OCTS32            0x00011800A0001E08  RSL         
PIP_STAT_INB_OCTS33            0x00011800A0001E28  RSL         
PIP_STAT_INB_OCTS34            0x00011800A0001E48  RSL         
PIP_STAT_INB_OCTS35            0x00011800A0001E68  RSL         
PIP_STAT_INB_OCTS36            0x00011800A0001E88  RSL         
PIP_STAT_INB_OCTS37            0x00011800A0001EA8  RSL         
PIP_STAT_INB_OCTS38            0x00011800A0001EC8  RSL         
PIP_STAT_INB_OCTS39            0x00011800A0001EE8  RSL         
PIP_STAT_INB_OCTS40            0x00011800A0001F08  RSL         
PIP_STAT_INB_OCTS41            0x00011800A0001F28  RSL         
PIP_STAT_INB_OCTS42            0x00011800A0001F48  RSL         
PIP_STAT_INB_OCTS43            0x00011800A0001F68  RSL         
PIP_STAT_INB_PKTS0             0x00011800A0001A00  RSL         
PIP_STAT_INB_PKTS1             0x00011800A0001A20  RSL         
PIP_STAT_INB_PKTS2             0x00011800A0001A40  RSL         
PIP_STAT_INB_PKTS3             0x00011800A0001A60  RSL         
PIP_STAT_INB_PKTS32            0x00011800A0001E00  RSL         
PIP_STAT_INB_PKTS33            0x00011800A0001E20  RSL         
PIP_STAT_INB_PKTS34            0x00011800A0001E40  RSL         
PIP_STAT_INB_PKTS35            0x00011800A0001E60  RSL         
PIP_STAT_INB_PKTS36            0x00011800A0001E80  RSL         
PIP_STAT_INB_PKTS37            0x00011800A0001EA0  RSL         
PIP_STAT_INB_PKTS38            0x00011800A0001EC0  RSL         
PIP_STAT_INB_PKTS39            0x00011800A0001EE0  RSL         
PIP_STAT_INB_PKTS40            0x00011800A0001F00  RSL         
PIP_STAT_INB_PKTS41            0x00011800A0001F20  RSL         
PIP_STAT_INB_PKTS42            0x00011800A0001F40  RSL         
PIP_STAT_INB_PKTS43            0x00011800A0001F60  RSL         
PIP_TAG_INC0                   0x00011800A0001800  RSL         
PIP_TAG_INC1                   0x00011800A0001808  RSL         
PIP_TAG_INC2                   0x00011800A0001810  RSL         
PIP_TAG_INC3                   0x00011800A0001818  RSL         
PIP_TAG_INC4                   0x00011800A0001820  RSL         
PIP_TAG_INC5                   0x00011800A0001828  RSL         
PIP_TAG_INC6                   0x00011800A0001830  RSL         
PIP_TAG_INC7                   0x00011800A0001838  RSL         
PIP_TAG_INC8                   0x00011800A0001840  RSL         
PIP_TAG_INC9                   0x00011800A0001848  RSL         
PIP_TAG_INC10                  0x00011800A0001850  RSL         
PIP_TAG_INC11                  0x00011800A0001858  RSL         
PIP_TAG_INC12                  0x00011800A0001860  RSL         
PIP_TAG_INC13                  0x00011800A0001868  RSL         
PIP_TAG_INC14                  0x00011800A0001870  RSL         
PIP_TAG_INC15                  0x00011800A0001878  RSL         
PIP_TAG_INC16                  0x00011800A0001880  RSL         
PIP_TAG_INC17                  0x00011800A0001888  RSL         
PIP_TAG_INC18                  0x00011800A0001890  RSL         
PIP_TAG_INC19                  0x00011800A0001898  RSL         
PIP_TAG_INC20                  0x00011800A00018A0  RSL         
PIP_TAG_INC21                  0x00011800A00018A8  RSL         
PIP_TAG_INC22                  0x00011800A00018B0  RSL         
PIP_TAG_INC23                  0x00011800A00018B8  RSL         
PIP_TAG_INC24                  0x00011800A00018C0  RSL         
PIP_TAG_INC25                  0x00011800A00018C8  RSL         
PIP_TAG_INC26                  0x00011800A00018D0  RSL         
PIP_TAG_INC27                  0x00011800A00018D8  RSL         
PIP_TAG_INC28                  0x00011800A00018E0  RSL         
PIP_TAG_INC29                  0x00011800A00018E8  RSL         
PIP_TAG_INC30                  0x00011800A00018F0  RSL         
PIP_TAG_INC31                  0x00011800A00018F8  RSL         
PIP_TAG_INC32                  0x00011800A0001900  RSL         
PIP_TAG_INC33                  0x00011800A0001908  RSL         
PIP_TAG_INC34                  0x00011800A0001910  RSL         
PIP_TAG_INC35                  0x00011800A0001918  RSL         
PIP_TAG_INC36                  0x00011800A0001920  RSL         
PIP_TAG_INC37                  0x00011800A0001928  RSL         
PIP_TAG_INC38                  0x00011800A0001930  RSL         
PIP_TAG_INC39                  0x00011800A0001938  RSL         
PIP_TAG_INC40                  0x00011800A0001940  RSL         
PIP_TAG_INC41                  0x00011800A0001948  RSL         
PIP_TAG_INC42                  0x00011800A0001950  RSL         
PIP_TAG_INC43                  0x00011800A0001958  RSL         
PIP_TAG_INC44                  0x00011800A0001960  RSL         
PIP_TAG_INC45                  0x00011800A0001968  RSL         
PIP_TAG_INC46                  0x00011800A0001970  RSL         
PIP_TAG_INC47                  0x00011800A0001978  RSL         
PIP_TAG_INC48                  0x00011800A0001980  RSL         
PIP_TAG_INC49                  0x00011800A0001988  RSL         
PIP_TAG_INC50                  0x00011800A0001990  RSL         
PIP_TAG_INC51                  0x00011800A0001998  RSL         
PIP_TAG_INC52                  0x00011800A00019A0  RSL         
PIP_TAG_INC53                  0x00011800A00019A8  RSL         
PIP_TAG_INC54                  0x00011800A00019B0  RSL         
PIP_TAG_INC55                  0x00011800A00019B8  RSL         
PIP_TAG_INC56                  0x00011800A00019C0  RSL         
PIP_TAG_INC57                  0x00011800A00019C8  RSL         
PIP_TAG_INC58                  0x00011800A00019D0  RSL         
PIP_TAG_INC59                  0x00011800A00019D8  RSL         
PIP_TAG_INC60                  0x00011800A00019E0  RSL         
PIP_TAG_INC61                  0x00011800A00019E8  RSL         
PIP_TAG_INC62                  0x00011800A00019F0  RSL         
PIP_TAG_INC63                  0x00011800A00019F8  RSL         
PIP_TAG_MASK                   0x00011800A0000070  RSL         
PIP_TAG_SECRET                 0x00011800A0000068  RSL         
PIP_TODO_ENTRY                 0x00011800A0000078  RSL         
PIP_XSTAT0_PRT40               0x00011800A0002000  RSL         
PIP_XSTAT0_PRT41               0x00011800A0002050  RSL         
PIP_XSTAT0_PRT42               0x00011800A00020A0  RSL         
PIP_XSTAT0_PRT43               0x00011800A00020F0  RSL         
PIP_XSTAT1_PRT40               0x00011800A0002008  RSL         
PIP_XSTAT1_PRT41               0x00011800A0002058  RSL         
PIP_XSTAT1_PRT42               0x00011800A00020A8  RSL         
PIP_XSTAT1_PRT43               0x00011800A00020F8  RSL         
PIP_XSTAT2_PRT40               0x00011800A0002010  RSL         
PIP_XSTAT2_PRT41               0x00011800A0002060  RSL         
PIP_XSTAT2_PRT42               0x00011800A00020B0  RSL         
PIP_XSTAT2_PRT43               0x00011800A0002100  RSL         
PIP_XSTAT3_PRT40               0x00011800A0002018  RSL         
PIP_XSTAT3_PRT41               0x00011800A0002068  RSL         
PIP_XSTAT3_PRT42               0x00011800A00020B8  RSL         
PIP_XSTAT3_PRT43               0x00011800A0002108  RSL         
PIP_XSTAT4_PRT40               0x00011800A0002020  RSL         
PIP_XSTAT4_PRT41               0x00011800A0002070  RSL         
PIP_XSTAT4_PRT42               0x00011800A00020C0  RSL         
PIP_XSTAT4_PRT43               0x00011800A0002110  RSL         
PIP_XSTAT5_PRT40               0x00011800A0002028  RSL         
PIP_XSTAT5_PRT41               0x00011800A0002078  RSL         
PIP_XSTAT5_PRT42               0x00011800A00020C8  RSL         
PIP_XSTAT5_PRT43               0x00011800A0002118  RSL         
PIP_XSTAT6_PRT40               0x00011800A0002030  RSL         
PIP_XSTAT6_PRT41               0x00011800A0002080  RSL         
PIP_XSTAT6_PRT42               0x00011800A00020D0  RSL         
PIP_XSTAT6_PRT43               0x00011800A0002120  RSL         
PIP_XSTAT7_PRT40               0x00011800A0002038  RSL         
PIP_XSTAT7_PRT41               0x00011800A0002088  RSL         
PIP_XSTAT7_PRT42               0x00011800A00020D8  RSL         
PIP_XSTAT7_PRT43               0x00011800A0002128  RSL         
PIP_XSTAT8_PRT40               0x00011800A0002040  RSL         
PIP_XSTAT8_PRT41               0x00011800A0002090  RSL         
PIP_XSTAT8_PRT42               0x00011800A00020E0  RSL         
PIP_XSTAT8_PRT43               0x00011800A0002130  RSL         
PIP_XSTAT9_PRT40               0x00011800A0002048  RSL         
PIP_XSTAT9_PRT41               0x00011800A0002098  RSL         
PIP_XSTAT9_PRT42               0x00011800A00020E8  RSL         
PIP_XSTAT9_PRT43               0x00011800A0002138  RSL         
PIP_XSTAT10_PRT40              0x00011800A0001700  RSL         
PIP_XSTAT10_PRT41              0x00011800A0001710  RSL         
PIP_XSTAT10_PRT42              0x00011800A0001720  RSL         
PIP_XSTAT10_PRT43              0x00011800A0001730  RSL         
PIP_XSTAT11_PRT40              0x00011800A0001708  RSL         
PIP_XSTAT11_PRT41              0x00011800A0001718  RSL         
PIP_XSTAT11_PRT42              0x00011800A0001728  RSL         
PIP_XSTAT11_PRT43              0x00011800A0001738  RSL         
PKO_MEM_COUNT0                 0x0001180050001080  RSL         
PKO_MEM_COUNT1                 0x0001180050001088  RSL         
PKO_MEM_DEBUG0                 0x0001180050001100  RSL         
PKO_MEM_DEBUG1                 0x0001180050001108  RSL         
PKO_MEM_DEBUG2                 0x0001180050001110  RSL         
PKO_MEM_DEBUG3                 0x0001180050001118  RSL         
PKO_MEM_DEBUG4                 0x0001180050001120  RSL         
PKO_MEM_DEBUG5                 0x0001180050001128  RSL         
PKO_MEM_DEBUG6                 0x0001180050001130  RSL         
PKO_MEM_DEBUG7                 0x0001180050001138  RSL         
PKO_MEM_DEBUG8                 0x0001180050001140  RSL         
PKO_MEM_DEBUG9                 0x0001180050001148  RSL         
PKO_MEM_DEBUG10                0x0001180050001150  RSL         
PKO_MEM_DEBUG11                0x0001180050001158  RSL         
PKO_MEM_DEBUG12                0x0001180050001160  RSL         
PKO_MEM_DEBUG13                0x0001180050001168  RSL         
PKO_MEM_DEBUG14                0x0001180050001170  RSL         
PKO_MEM_PORT_PTRS              0x0001180050001010  RSL         
PKO_MEM_PORT_QOS               0x0001180050001018  RSL         
PKO_MEM_PORT_RATE0             0x0001180050001020  RSL         
PKO_MEM_PORT_RATE1             0x0001180050001028  RSL         
PKO_MEM_QUEUE_PTRS             0x0001180050001000  RSL         
PKO_MEM_QUEUE_QOS              0x0001180050001008  RSL         
PKO_REG_BIST_RESULT            0x0001180050000080  RSL         
PKO_REG_CMD_BUF                0x0001180050000010  RSL         
PKO_REG_DEBUG0                 0x0001180050000098  RSL         
PKO_REG_DEBUG1                 0x00011800500000A0  RSL         
PKO_REG_DEBUG2                 0x00011800500000A8  RSL         
PKO_REG_DEBUG3                 0x00011800500000B0  RSL         
PKO_REG_ENGINE_INFLIGHT        0x0001180050000050  RSL         
PKO_REG_ENGINE_THRESH          0x0001180050000058  RSL         
PKO_REG_ERROR                  0x0001180050000088  RSL         
PKO_REG_FLAGS                  0x0001180050000000  RSL         
PKO_REG_GMX_PORT_MODE          0x0001180050000018  RSL         
PKO_REG_INT_MASK               0x0001180050000090  RSL         
PKO_REG_PREEMPT                0x0001180050000110  RSL         
PKO_REG_QUEUE_MODE             0x0001180050000048  RSL         
PKO_REG_QUEUE_PREEMPT          0x0001180050000108  RSL         
PKO_REG_QUEUE_PTRS1            0x0001180050000100  RSL         
PKO_REG_READ_IDX               0x0001180050000008  RSL         
PKO_REG_TIMESTAMP              0x0001180050000060  RSL         
POW_BIST_STAT                  0x00016700000003F8  NCB         
POW_DS_PC                      0x0001670000000398  NCB         
POW_ECC_ERR                    0x0001670000000218  NCB         
POW_INT_CTL                    0x0001670000000220  NCB         
POW_IQ_CNT0                    0x0001670000000340  NCB         
POW_IQ_CNT1                    0x0001670000000348  NCB         
POW_IQ_CNT2                    0x0001670000000350  NCB         
POW_IQ_CNT3                    0x0001670000000358  NCB         
POW_IQ_CNT4                    0x0001670000000360  NCB         
POW_IQ_CNT5                    0x0001670000000368  NCB         
POW_IQ_CNT6                    0x0001670000000370  NCB         
POW_IQ_CNT7                    0x0001670000000378  NCB         
POW_IQ_COM_CNT                 0x0001670000000388  NCB         
POW_IQ_INT                     0x0001670000000238  NCB         
POW_IQ_INT_EN                  0x0001670000000240  NCB         
POW_IQ_THR0                    0x00016700000003A0  NCB         
POW_IQ_THR1                    0x00016700000003A8  NCB         
POW_IQ_THR2                    0x00016700000003B0  NCB         
POW_IQ_THR3                    0x00016700000003B8  NCB         
POW_IQ_THR4                    0x00016700000003C0  NCB         
POW_IQ_THR5                    0x00016700000003C8  NCB         
POW_IQ_THR6                    0x00016700000003D0  NCB         
POW_IQ_THR7                    0x00016700000003D8  NCB         
POW_NOS_CNT                    0x0001670000000228  NCB         
POW_NW_TIM                     0x0001670000000210  NCB         
POW_PF_RST_MSK                 0x0001670000000230  NCB         
POW_PP_GRP_MSK0                0x0001670000000000  NCB         
POW_PP_GRP_MSK1                0x0001670000000008  NCB         
POW_PP_GRP_MSK2                0x0001670000000010  NCB         
POW_PP_GRP_MSK3                0x0001670000000018  NCB         
POW_PP_GRP_MSK4                0x0001670000000020  NCB         
POW_PP_GRP_MSK5                0x0001670000000028  NCB         
POW_QOS_RND0                   0x00016700000001C0  NCB         
POW_QOS_RND1                   0x00016700000001C8  NCB         
POW_QOS_RND2                   0x00016700000001D0  NCB         
POW_QOS_RND3                   0x00016700000001D8  NCB         
POW_QOS_RND4                   0x00016700000001E0  NCB         
POW_QOS_RND5                   0x00016700000001E8  NCB         
POW_QOS_RND6                   0x00016700000001F0  NCB         
POW_QOS_RND7                   0x00016700000001F8  NCB         
POW_QOS_THR0                   0x0001670000000180  NCB         
POW_QOS_THR1                   0x0001670000000188  NCB         
POW_QOS_THR2                   0x0001670000000190  NCB         
POW_QOS_THR3                   0x0001670000000198  NCB         
POW_QOS_THR4                   0x00016700000001A0  NCB         
POW_QOS_THR5                   0x00016700000001A8  NCB         
POW_QOS_THR6                   0x00016700000001B0  NCB         
POW_QOS_THR7                   0x00016700000001B8  NCB         
POW_TS_PC                      0x0001670000000390  NCB         
POW_WA_COM_PC                  0x0001670000000380  NCB         
POW_WA_PC0                     0x0001670000000300  NCB         
POW_WA_PC1                     0x0001670000000308  NCB         
POW_WA_PC2                     0x0001670000000310  NCB         
POW_WA_PC3                     0x0001670000000318  NCB         
POW_WA_PC4                     0x0001670000000320  NCB         
POW_WA_PC5                     0x0001670000000328  NCB         
POW_WA_PC6                     0x0001670000000330  NCB         
POW_WA_PC7                     0x0001670000000338  NCB         
POW_WQ_INT                     0x0001670000000200  NCB         
POW_WQ_INT_CNT0                0x0001670000000100  NCB         
POW_WQ_INT_CNT1                0x0001670000000108  NCB         
POW_WQ_INT_CNT2                0x0001670000000110  NCB         
POW_WQ_INT_CNT3                0x0001670000000118  NCB         
POW_WQ_INT_CNT4                0x0001670000000120  NCB         
POW_WQ_INT_CNT5                0x0001670000000128  NCB         
POW_WQ_INT_CNT6                0x0001670000000130  NCB         
POW_WQ_INT_CNT7                0x0001670000000138  NCB         
POW_WQ_INT_CNT8                0x0001670000000140  NCB         
POW_WQ_INT_CNT9                0x0001670000000148  NCB         
POW_WQ_INT_CNT10               0x0001670000000150  NCB         
POW_WQ_INT_CNT11               0x0001670000000158  NCB         
POW_WQ_INT_CNT12               0x0001670000000160  NCB         
POW_WQ_INT_CNT13               0x0001670000000168  NCB         
POW_WQ_INT_CNT14               0x0001670000000170  NCB         
POW_WQ_INT_CNT15               0x0001670000000178  NCB         
POW_WQ_INT_PC                  0x0001670000000208  NCB         
POW_WQ_INT_THR0                0x0001670000000080  NCB         
POW_WQ_INT_THR1                0x0001670000000088  NCB         
POW_WQ_INT_THR2                0x0001670000000090  NCB         
POW_WQ_INT_THR3                0x0001670000000098  NCB         
POW_WQ_INT_THR4                0x00016700000000A0  NCB         
POW_WQ_INT_THR5                0x00016700000000A8  NCB         
POW_WQ_INT_THR6                0x00016700000000B0  NCB         
POW_WQ_INT_THR7                0x00016700000000B8  NCB         
POW_WQ_INT_THR8                0x00016700000000C0  NCB         
POW_WQ_INT_THR9                0x00016700000000C8  NCB         
POW_WQ_INT_THR10               0x00016700000000D0  NCB         
POW_WQ_INT_THR11               0x00016700000000D8  NCB         
POW_WQ_INT_THR12               0x00016700000000E0  NCB         
POW_WQ_INT_THR13               0x00016700000000E8  NCB         
POW_WQ_INT_THR14               0x00016700000000F0  NCB         
POW_WQ_INT_THR15               0x00016700000000F8  NCB         
POW_WS_PC0                     0x0001670000000280  NCB         
POW_WS_PC1                     0x0001670000000288  NCB         
POW_WS_PC2                     0x0001670000000290  NCB         
POW_WS_PC3                     0x0001670000000298  NCB         
POW_WS_PC4                     0x00016700000002A0  NCB         
POW_WS_PC5                     0x00016700000002A8  NCB         
POW_WS_PC6                     0x00016700000002B0  NCB         
POW_WS_PC7                     0x00016700000002B8  NCB         
POW_WS_PC8                     0x00016700000002C0  NCB         
POW_WS_PC9                     0x00016700000002C8  NCB         
POW_WS_PC10                    0x00016700000002D0  NCB         
POW_WS_PC11                    0x00016700000002D8  NCB         
POW_WS_PC12                    0x00016700000002E0  NCB         
POW_WS_PC13                    0x00016700000002E8  NCB         
POW_WS_PC14                    0x00016700000002F0  NCB         
POW_WS_PC15                    0x00016700000002F8  NCB         
RAD_MEM_DEBUG0                 0x0001180070001000  RSL         
RAD_MEM_DEBUG1                 0x0001180070001008  RSL         
RAD_MEM_DEBUG2                 0x0001180070001010  RSL         
RAD_REG_BIST_RESULT            0x0001180070000080  RSL         
RAD_REG_CMD_BUF                0x0001180070000008  RSL         
RAD_REG_CTL                    0x0001180070000000  RSL         
RAD_REG_DEBUG0                 0x0001180070000100  RSL         
RAD_REG_DEBUG1                 0x0001180070000108  RSL         
RAD_REG_DEBUG2                 0x0001180070000110  RSL         
RAD_REG_DEBUG3                 0x0001180070000118  RSL         
RAD_REG_DEBUG4                 0x0001180070000120  RSL         
RAD_REG_DEBUG5                 0x0001180070000128  RSL         
RAD_REG_DEBUG6                 0x0001180070000130  RSL         
RAD_REG_DEBUG7                 0x0001180070000138  RSL         
RAD_REG_DEBUG8                 0x0001180070000140  RSL         
RAD_REG_DEBUG9                 0x0001180070000148  RSL         
RAD_REG_DEBUG10                0x0001180070000150  RSL         
RAD_REG_DEBUG11                0x0001180070000158  RSL         
RAD_REG_DEBUG12                0x0001180070000160  RSL         
RAD_REG_ERROR                  0x0001180070000088  RSL         
RAD_REG_INT_MASK               0x0001180070000090  RSL         
RAD_REG_POLYNOMIAL             0x0001180070000010  RSL         
RAD_REG_READ_IDX               0x0001180070000018  RSL         
RNM_BIST_STATUS                0x0001180040000008  RSL         
RNM_CTL_STATUS                 0x0001180040000000  RSL         
RNM_EER_DBG                    0x0001180040000018  RSL         
RNM_EER_KEY                    0x0001180040000010  RSL         
SLI_BIST_STATUS                0x0000000000000580  PEXP_NCB     0x00011F0000010580  NCB
SLI_CTL_PORT0                  0x0000000000000050  PEXP_NCB     0x00011F0000010050  NCB
SLI_CTL_PORT1                  0x0000000000000060  PEXP_NCB     0x00011F0000010060  NCB
SLI_CTL_STATUS                 0x0000000000000570  PEXP_NCB     0x00011F0000010570  NCB
SLI_DATA_OUT_CNT               0x00000000000005F0  PEXP_NCB     0x00011F00000105F0  NCB
SLI_DBG_DATA                   0x0000000000000310  PEXP_NCB     0x00011F0000010310  NCB
SLI_DBG_SELECT                 0x0000000000000300  PEXP_NCB     0x00011F0000010300  NCB
SLI_DMA0_CNT                   0x0000000000000400  PEXP_NCB     0x00011F0000010400  NCB
SLI_DMA0_INT_LEVEL             0x00000000000003E0  PEXP_NCB     0x00011F00000103E0  NCB
SLI_DMA0_TIM                   0x0000000000000420  PEXP_NCB     0x00011F0000010420  NCB
SLI_DMA1_CNT                   0x0000000000000410  PEXP_NCB     0x00011F0000010410  NCB
SLI_DMA1_INT_LEVEL             0x00000000000003F0  PEXP_NCB     0x00011F00000103F0  NCB
SLI_DMA1_TIM                   0x0000000000000430  PEXP_NCB     0x00011F0000010430  NCB
SLI_INT_ENB_CIU                0x0000000000003CD0  PEXP_NCB     0x00011F0000013CD0  NCB
SLI_INT_ENB_PORT0              0x0000000000000340  PEXP_NCB     0x00011F0000010340  NCB
SLI_INT_ENB_PORT1              0x0000000000000350  PEXP_NCB     0x00011F0000010350  NCB
SLI_INT_SUM                    0x0000000000000330  PEXP_NCB     0x00011F0000010330  NCB
SLI_LAST_WIN_RDATA0            0x0000000000000600  PEXP_NCB     0x00011F0000010600  NCB
SLI_LAST_WIN_RDATA1            0x0000000000000610  PEXP_NCB     0x00011F0000010610  NCB
SLI_MAC_CREDIT_CNT             0x0000000000003D70  PEXP_NCB     0x00011F0000013D70  NCB
SLI_MEM_ACCESS_CTL             0x00000000000002F0  PEXP_NCB     0x00011F00000102F0  NCB
SLI_MEM_ACCESS_SUBID12         0x00000000000000E0  PEXP_NCB     0x00011F00000100E0  NCB
SLI_MEM_ACCESS_SUBID13         0x00000000000000F0  PEXP_NCB     0x00011F00000100F0  NCB
SLI_MEM_ACCESS_SUBID14         0x0000000000000100  PEXP_NCB     0x00011F0000010100  NCB
SLI_MEM_ACCESS_SUBID15         0x0000000000000110  PEXP_NCB     0x00011F0000010110  NCB
SLI_MEM_ACCESS_SUBID16         0x0000000000000120  PEXP_NCB     0x00011F0000010120  NCB
SLI_MEM_ACCESS_SUBID17         0x0000000000000130  PEXP_NCB     0x00011F0000010130  NCB
SLI_MEM_ACCESS_SUBID18         0x0000000000000140  PEXP_NCB     0x00011F0000010140  NCB
SLI_MEM_ACCESS_SUBID19         0x0000000000000150  PEXP_NCB     0x00011F0000010150  NCB
SLI_MEM_ACCESS_SUBID20         0x0000000000000160  PEXP_NCB     0x00011F0000010160  NCB
SLI_MEM_ACCESS_SUBID21         0x0000000000000170  PEXP_NCB     0x00011F0000010170  NCB
SLI_MEM_ACCESS_SUBID22         0x0000000000000180  PEXP_NCB     0x00011F0000010180  NCB
SLI_MEM_ACCESS_SUBID23         0x0000000000000190  PEXP_NCB     0x00011F0000010190  NCB
SLI_MEM_ACCESS_SUBID24         0x00000000000001A0  PEXP_NCB     0x00011F00000101A0  NCB
SLI_MEM_ACCESS_SUBID25         0x00000000000001B0  PEXP_NCB     0x00011F00000101B0  NCB
SLI_MEM_ACCESS_SUBID26         0x00000000000001C0  PEXP_NCB     0x00011F00000101C0  NCB
SLI_MEM_ACCESS_SUBID27         0x00000000000001D0  PEXP_NCB     0x00011F00000101D0  NCB
SLI_MSI_ENB0                   0x0000000000003C50  PEXP_NCB     0x00011F0000013C50  NCB
SLI_MSI_ENB1                   0x0000000000003C60  PEXP_NCB     0x00011F0000013C60  NCB
SLI_MSI_ENB2                   0x0000000000003C70  PEXP_NCB     0x00011F0000013C70  NCB
SLI_MSI_ENB3                   0x0000000000003C80  PEXP_NCB     0x00011F0000013C80  NCB
SLI_MSI_RCV0                   0x0000000000003C10  PEXP_NCB     0x00011F0000013C10  NCB
SLI_MSI_RCV1                   0x0000000000003C20  PEXP_NCB     0x00011F0000013C20  NCB
SLI_MSI_RCV2                   0x0000000000003C30  PEXP_NCB     0x00011F0000013C30  NCB
SLI_MSI_RCV3                   0x0000000000003C40  PEXP_NCB     0x00011F0000013C40  NCB
SLI_MSI_RD_MAP                 0x0000000000003CA0  PEXP_NCB     0x00011F0000013CA0  NCB
SLI_MSI_W1C_ENB0               0x0000000000003CF0  PEXP_NCB     0x00011F0000013CF0  NCB
SLI_MSI_W1C_ENB1               0x0000000000003D00  PEXP_NCB     0x00011F0000013D00  NCB
SLI_MSI_W1C_ENB2               0x0000000000003D10  PEXP_NCB     0x00011F0000013D10  NCB
SLI_MSI_W1C_ENB3               0x0000000000003D20  PEXP_NCB     0x00011F0000013D20  NCB
SLI_MSI_W1S_ENB0               0x0000000000003D30  PEXP_NCB     0x00011F0000013D30  NCB
SLI_MSI_W1S_ENB1               0x0000000000003D40  PEXP_NCB     0x00011F0000013D40  NCB
SLI_MSI_W1S_ENB2               0x0000000000003D50  PEXP_NCB     0x00011F0000013D50  NCB
SLI_MSI_W1S_ENB3               0x0000000000003D60  PEXP_NCB     0x00011F0000013D60  NCB
SLI_MSI_WR_MAP                 0x0000000000003C90  PEXP_NCB     0x00011F0000013C90  NCB
SLI_PCIE_MSI_RCV               0x0000000000003CB0  PEXP_NCB     0x00011F0000013CB0  NCB
SLI_PCIE_MSI_RCV_B1            0x0000000000000650  PEXP_NCB     0x00011F0000010650  NCB
SLI_PCIE_MSI_RCV_B2            0x0000000000000660  PEXP_NCB     0x00011F0000010660  NCB
SLI_PCIE_MSI_RCV_B3            0x0000000000000670  PEXP_NCB     0x00011F0000010670  NCB
SLI_PKT0_CNTS                  0x0000000000002400  PEXP_NCB     0x00011F0000012400  NCB
SLI_PKT0_INSTR_BADDR           0x0000000000002800  PEXP_NCB     0x00011F0000012800  NCB
SLI_PKT0_INSTR_BAOFF_DBELL     0x0000000000002C00  PEXP_NCB     0x00011F0000012C00  NCB
SLI_PKT0_INSTR_FIFO_RSIZE      0x0000000000003000  PEXP_NCB     0x00011F0000013000  NCB
SLI_PKT0_INSTR_HEADER          0x0000000000003400  PEXP_NCB     0x00011F0000013400  NCB
SLI_PKT0_IN_BP                 0x0000000000003800  PEXP_NCB     0x00011F0000013800  NCB
SLI_PKT0_OUT_SIZE              0x0000000000000C00  PEXP_NCB     0x00011F0000010C00  NCB
SLI_PKT0_SLIST_BADDR           0x0000000000001400  PEXP_NCB     0x00011F0000011400  NCB
SLI_PKT0_SLIST_BAOFF_DBELL     0x0000000000001800  PEXP_NCB     0x00011F0000011800  NCB
SLI_PKT0_SLIST_FIFO_RSIZE      0x0000000000001C00  PEXP_NCB     0x00011F0000011C00  NCB
SLI_PKT1_CNTS                  0x0000000000002410  PEXP_NCB     0x00011F0000012410  NCB
SLI_PKT1_INSTR_BADDR           0x0000000000002810  PEXP_NCB     0x00011F0000012810  NCB
SLI_PKT1_INSTR_BAOFF_DBELL     0x0000000000002C10  PEXP_NCB     0x00011F0000012C10  NCB
SLI_PKT1_INSTR_FIFO_RSIZE      0x0000000000003010  PEXP_NCB     0x00011F0000013010  NCB
SLI_PKT1_INSTR_HEADER          0x0000000000003410  PEXP_NCB     0x00011F0000013410  NCB
SLI_PKT1_IN_BP                 0x0000000000003810  PEXP_NCB     0x00011F0000013810  NCB
SLI_PKT1_OUT_SIZE              0x0000000000000C10  PEXP_NCB     0x00011F0000010C10  NCB
SLI_PKT1_SLIST_BADDR           0x0000000000001410  PEXP_NCB     0x00011F0000011410  NCB
SLI_PKT1_SLIST_BAOFF_DBELL     0x0000000000001810  PEXP_NCB     0x00011F0000011810  NCB
SLI_PKT1_SLIST_FIFO_RSIZE      0x0000000000001C10  PEXP_NCB     0x00011F0000011C10  NCB
SLI_PKT2_CNTS                  0x0000000000002420  PEXP_NCB     0x00011F0000012420  NCB
SLI_PKT2_INSTR_BADDR           0x0000000000002820  PEXP_NCB     0x00011F0000012820  NCB
SLI_PKT2_INSTR_BAOFF_DBELL     0x0000000000002C20  PEXP_NCB     0x00011F0000012C20  NCB
SLI_PKT2_INSTR_FIFO_RSIZE      0x0000000000003020  PEXP_NCB     0x00011F0000013020  NCB
SLI_PKT2_INSTR_HEADER          0x0000000000003420  PEXP_NCB     0x00011F0000013420  NCB
SLI_PKT2_IN_BP                 0x0000000000003820  PEXP_NCB     0x00011F0000013820  NCB
SLI_PKT2_OUT_SIZE              0x0000000000000C20  PEXP_NCB     0x00011F0000010C20  NCB
SLI_PKT2_SLIST_BADDR           0x0000000000001420  PEXP_NCB     0x00011F0000011420  NCB
SLI_PKT2_SLIST_BAOFF_DBELL     0x0000000000001820  PEXP_NCB     0x00011F0000011820  NCB
SLI_PKT2_SLIST_FIFO_RSIZE      0x0000000000001C20  PEXP_NCB     0x00011F0000011C20  NCB
SLI_PKT3_CNTS                  0x0000000000002430  PEXP_NCB     0x00011F0000012430  NCB
SLI_PKT3_INSTR_BADDR           0x0000000000002830  PEXP_NCB     0x00011F0000012830  NCB
SLI_PKT3_INSTR_BAOFF_DBELL     0x0000000000002C30  PEXP_NCB     0x00011F0000012C30  NCB
SLI_PKT3_INSTR_FIFO_RSIZE      0x0000000000003030  PEXP_NCB     0x00011F0000013030  NCB
SLI_PKT3_INSTR_HEADER          0x0000000000003430  PEXP_NCB     0x00011F0000013430  NCB
SLI_PKT3_IN_BP                 0x0000000000003830  PEXP_NCB     0x00011F0000013830  NCB
SLI_PKT3_OUT_SIZE              0x0000000000000C30  PEXP_NCB     0x00011F0000010C30  NCB
SLI_PKT3_SLIST_BADDR           0x0000000000001430  PEXP_NCB     0x00011F0000011430  NCB
SLI_PKT3_SLIST_BAOFF_DBELL     0x0000000000001830  PEXP_NCB     0x00011F0000011830  NCB
SLI_PKT3_SLIST_FIFO_RSIZE      0x0000000000001C30  PEXP_NCB     0x00011F0000011C30  NCB
SLI_PKT4_CNTS                  0x0000000000002440  PEXP_NCB     0x00011F0000012440  NCB
SLI_PKT4_INSTR_BADDR           0x0000000000002840  PEXP_NCB     0x00011F0000012840  NCB
SLI_PKT4_INSTR_BAOFF_DBELL     0x0000000000002C40  PEXP_NCB     0x00011F0000012C40  NCB
SLI_PKT4_INSTR_FIFO_RSIZE      0x0000000000003040  PEXP_NCB     0x00011F0000013040  NCB
SLI_PKT4_INSTR_HEADER          0x0000000000003440  PEXP_NCB     0x00011F0000013440  NCB
SLI_PKT4_IN_BP                 0x0000000000003840  PEXP_NCB     0x00011F0000013840  NCB
SLI_PKT4_OUT_SIZE              0x0000000000000C40  PEXP_NCB     0x00011F0000010C40  NCB
SLI_PKT4_SLIST_BADDR           0x0000000000001440  PEXP_NCB     0x00011F0000011440  NCB
SLI_PKT4_SLIST_BAOFF_DBELL     0x0000000000001840  PEXP_NCB     0x00011F0000011840  NCB
SLI_PKT4_SLIST_FIFO_RSIZE      0x0000000000001C40  PEXP_NCB     0x00011F0000011C40  NCB
SLI_PKT5_CNTS                  0x0000000000002450  PEXP_NCB     0x00011F0000012450  NCB
SLI_PKT5_INSTR_BADDR           0x0000000000002850  PEXP_NCB     0x00011F0000012850  NCB
SLI_PKT5_INSTR_BAOFF_DBELL     0x0000000000002C50  PEXP_NCB     0x00011F0000012C50  NCB
SLI_PKT5_INSTR_FIFO_RSIZE      0x0000000000003050  PEXP_NCB     0x00011F0000013050  NCB
SLI_PKT5_INSTR_HEADER          0x0000000000003450  PEXP_NCB     0x00011F0000013450  NCB
SLI_PKT5_IN_BP                 0x0000000000003850  PEXP_NCB     0x00011F0000013850  NCB
SLI_PKT5_OUT_SIZE              0x0000000000000C50  PEXP_NCB     0x00011F0000010C50  NCB
SLI_PKT5_SLIST_BADDR           0x0000000000001450  PEXP_NCB     0x00011F0000011450  NCB
SLI_PKT5_SLIST_BAOFF_DBELL     0x0000000000001850  PEXP_NCB     0x00011F0000011850  NCB
SLI_PKT5_SLIST_FIFO_RSIZE      0x0000000000001C50  PEXP_NCB     0x00011F0000011C50  NCB
SLI_PKT6_CNTS                  0x0000000000002460  PEXP_NCB     0x00011F0000012460  NCB
SLI_PKT6_INSTR_BADDR           0x0000000000002860  PEXP_NCB     0x00011F0000012860  NCB
SLI_PKT6_INSTR_BAOFF_DBELL     0x0000000000002C60  PEXP_NCB     0x00011F0000012C60  NCB
SLI_PKT6_INSTR_FIFO_RSIZE      0x0000000000003060  PEXP_NCB     0x00011F0000013060  NCB
SLI_PKT6_INSTR_HEADER          0x0000000000003460  PEXP_NCB     0x00011F0000013460  NCB
SLI_PKT6_IN_BP                 0x0000000000003860  PEXP_NCB     0x00011F0000013860  NCB
SLI_PKT6_OUT_SIZE              0x0000000000000C60  PEXP_NCB     0x00011F0000010C60  NCB
SLI_PKT6_SLIST_BADDR           0x0000000000001460  PEXP_NCB     0x00011F0000011460  NCB
SLI_PKT6_SLIST_BAOFF_DBELL     0x0000000000001860  PEXP_NCB     0x00011F0000011860  NCB
SLI_PKT6_SLIST_FIFO_RSIZE      0x0000000000001C60  PEXP_NCB     0x00011F0000011C60  NCB
SLI_PKT7_CNTS                  0x0000000000002470  PEXP_NCB     0x00011F0000012470  NCB
SLI_PKT7_INSTR_BADDR           0x0000000000002870  PEXP_NCB     0x00011F0000012870  NCB
SLI_PKT7_INSTR_BAOFF_DBELL     0x0000000000002C70  PEXP_NCB     0x00011F0000012C70  NCB
SLI_PKT7_INSTR_FIFO_RSIZE      0x0000000000003070  PEXP_NCB     0x00011F0000013070  NCB
SLI_PKT7_INSTR_HEADER          0x0000000000003470  PEXP_NCB     0x00011F0000013470  NCB
SLI_PKT7_IN_BP                 0x0000000000003870  PEXP_NCB     0x00011F0000013870  NCB
SLI_PKT7_OUT_SIZE              0x0000000000000C70  PEXP_NCB     0x00011F0000010C70  NCB
SLI_PKT7_SLIST_BADDR           0x0000000000001470  PEXP_NCB     0x00011F0000011470  NCB
SLI_PKT7_SLIST_BAOFF_DBELL     0x0000000000001870  PEXP_NCB     0x00011F0000011870  NCB
SLI_PKT7_SLIST_FIFO_RSIZE      0x0000000000001C70  PEXP_NCB     0x00011F0000011C70  NCB
SLI_PKT8_CNTS                  0x0000000000002480  PEXP_NCB     0x00011F0000012480  NCB
SLI_PKT8_INSTR_BADDR           0x0000000000002880  PEXP_NCB     0x00011F0000012880  NCB
SLI_PKT8_INSTR_BAOFF_DBELL     0x0000000000002C80  PEXP_NCB     0x00011F0000012C80  NCB
SLI_PKT8_INSTR_FIFO_RSIZE      0x0000000000003080  PEXP_NCB     0x00011F0000013080  NCB
SLI_PKT8_INSTR_HEADER          0x0000000000003480  PEXP_NCB     0x00011F0000013480  NCB
SLI_PKT8_IN_BP                 0x0000000000003880  PEXP_NCB     0x00011F0000013880  NCB
SLI_PKT8_OUT_SIZE              0x0000000000000C80  PEXP_NCB     0x00011F0000010C80  NCB
SLI_PKT8_SLIST_BADDR           0x0000000000001480  PEXP_NCB     0x00011F0000011480  NCB
SLI_PKT8_SLIST_BAOFF_DBELL     0x0000000000001880  PEXP_NCB     0x00011F0000011880  NCB
SLI_PKT8_SLIST_FIFO_RSIZE      0x0000000000001C80  PEXP_NCB     0x00011F0000011C80  NCB
SLI_PKT9_CNTS                  0x0000000000002490  PEXP_NCB     0x00011F0000012490  NCB
SLI_PKT9_INSTR_BADDR           0x0000000000002890  PEXP_NCB     0x00011F0000012890  NCB
SLI_PKT9_INSTR_BAOFF_DBELL     0x0000000000002C90  PEXP_NCB     0x00011F0000012C90  NCB
SLI_PKT9_INSTR_FIFO_RSIZE      0x0000000000003090  PEXP_NCB     0x00011F0000013090  NCB
SLI_PKT9_INSTR_HEADER          0x0000000000003490  PEXP_NCB     0x00011F0000013490  NCB
SLI_PKT9_IN_BP                 0x0000000000003890  PEXP_NCB     0x00011F0000013890  NCB
SLI_PKT9_OUT_SIZE              0x0000000000000C90  PEXP_NCB     0x00011F0000010C90  NCB
SLI_PKT9_SLIST_BADDR           0x0000000000001490  PEXP_NCB     0x00011F0000011490  NCB
SLI_PKT9_SLIST_BAOFF_DBELL     0x0000000000001890  PEXP_NCB     0x00011F0000011890  NCB
SLI_PKT9_SLIST_FIFO_RSIZE      0x0000000000001C90  PEXP_NCB     0x00011F0000011C90  NCB
SLI_PKT10_CNTS                 0x00000000000024A0  PEXP_NCB     0x00011F00000124A0  NCB
SLI_PKT10_INSTR_BADDR          0x00000000000028A0  PEXP_NCB     0x00011F00000128A0  NCB
SLI_PKT10_INSTR_BAOFF_DBELL    0x0000000000002CA0  PEXP_NCB     0x00011F0000012CA0  NCB
SLI_PKT10_INSTR_FIFO_RSIZE     0x00000000000030A0  PEXP_NCB     0x00011F00000130A0  NCB
SLI_PKT10_INSTR_HEADER         0x00000000000034A0  PEXP_NCB     0x00011F00000134A0  NCB
SLI_PKT10_IN_BP                0x00000000000038A0  PEXP_NCB     0x00011F00000138A0  NCB
SLI_PKT10_OUT_SIZE             0x0000000000000CA0  PEXP_NCB     0x00011F0000010CA0  NCB
SLI_PKT10_SLIST_BADDR          0x00000000000014A0  PEXP_NCB     0x00011F00000114A0  NCB
SLI_PKT10_SLIST_BAOFF_DBELL    0x00000000000018A0  PEXP_NCB     0x00011F00000118A0  NCB
SLI_PKT10_SLIST_FIFO_RSIZE     0x0000000000001CA0  PEXP_NCB     0x00011F0000011CA0  NCB
SLI_PKT11_CNTS                 0x00000000000024B0  PEXP_NCB     0x00011F00000124B0  NCB
SLI_PKT11_INSTR_BADDR          0x00000000000028B0  PEXP_NCB     0x00011F00000128B0  NCB
SLI_PKT11_INSTR_BAOFF_DBELL    0x0000000000002CB0  PEXP_NCB     0x00011F0000012CB0  NCB
SLI_PKT11_INSTR_FIFO_RSIZE     0x00000000000030B0  PEXP_NCB     0x00011F00000130B0  NCB
SLI_PKT11_INSTR_HEADER         0x00000000000034B0  PEXP_NCB     0x00011F00000134B0  NCB
SLI_PKT11_IN_BP                0x00000000000038B0  PEXP_NCB     0x00011F00000138B0  NCB
SLI_PKT11_OUT_SIZE             0x0000000000000CB0  PEXP_NCB     0x00011F0000010CB0  NCB
SLI_PKT11_SLIST_BADDR          0x00000000000014B0  PEXP_NCB     0x00011F00000114B0  NCB
SLI_PKT11_SLIST_BAOFF_DBELL    0x00000000000018B0  PEXP_NCB     0x00011F00000118B0  NCB
SLI_PKT11_SLIST_FIFO_RSIZE     0x0000000000001CB0  PEXP_NCB     0x00011F0000011CB0  NCB
SLI_PKT12_CNTS                 0x00000000000024C0  PEXP_NCB     0x00011F00000124C0  NCB
SLI_PKT12_INSTR_BADDR          0x00000000000028C0  PEXP_NCB     0x00011F00000128C0  NCB
SLI_PKT12_INSTR_BAOFF_DBELL    0x0000000000002CC0  PEXP_NCB     0x00011F0000012CC0  NCB
SLI_PKT12_INSTR_FIFO_RSIZE     0x00000000000030C0  PEXP_NCB     0x00011F00000130C0  NCB
SLI_PKT12_INSTR_HEADER         0x00000000000034C0  PEXP_NCB     0x00011F00000134C0  NCB
SLI_PKT12_IN_BP                0x00000000000038C0  PEXP_NCB     0x00011F00000138C0  NCB
SLI_PKT12_OUT_SIZE             0x0000000000000CC0  PEXP_NCB     0x00011F0000010CC0  NCB
SLI_PKT12_SLIST_BADDR          0x00000000000014C0  PEXP_NCB     0x00011F00000114C0  NCB
SLI_PKT12_SLIST_BAOFF_DBELL    0x00000000000018C0  PEXP_NCB     0x00011F00000118C0  NCB
SLI_PKT12_SLIST_FIFO_RSIZE     0x0000000000001CC0  PEXP_NCB     0x00011F0000011CC0  NCB
SLI_PKT13_CNTS                 0x00000000000024D0  PEXP_NCB     0x00011F00000124D0  NCB
SLI_PKT13_INSTR_BADDR          0x00000000000028D0  PEXP_NCB     0x00011F00000128D0  NCB
SLI_PKT13_INSTR_BAOFF_DBELL    0x0000000000002CD0  PEXP_NCB     0x00011F0000012CD0  NCB
SLI_PKT13_INSTR_FIFO_RSIZE     0x00000000000030D0  PEXP_NCB     0x00011F00000130D0  NCB
SLI_PKT13_INSTR_HEADER         0x00000000000034D0  PEXP_NCB     0x00011F00000134D0  NCB
SLI_PKT13_IN_BP                0x00000000000038D0  PEXP_NCB     0x00011F00000138D0  NCB
SLI_PKT13_OUT_SIZE             0x0000000000000CD0  PEXP_NCB     0x00011F0000010CD0  NCB
SLI_PKT13_SLIST_BADDR          0x00000000000014D0  PEXP_NCB     0x00011F00000114D0  NCB
SLI_PKT13_SLIST_BAOFF_DBELL    0x00000000000018D0  PEXP_NCB     0x00011F00000118D0  NCB
SLI_PKT13_SLIST_FIFO_RSIZE     0x0000000000001CD0  PEXP_NCB     0x00011F0000011CD0  NCB
SLI_PKT14_CNTS                 0x00000000000024E0  PEXP_NCB     0x00011F00000124E0  NCB
SLI_PKT14_INSTR_BADDR          0x00000000000028E0  PEXP_NCB     0x00011F00000128E0  NCB
SLI_PKT14_INSTR_BAOFF_DBELL    0x0000000000002CE0  PEXP_NCB     0x00011F0000012CE0  NCB
SLI_PKT14_INSTR_FIFO_RSIZE     0x00000000000030E0  PEXP_NCB     0x00011F00000130E0  NCB
SLI_PKT14_INSTR_HEADER         0x00000000000034E0  PEXP_NCB     0x00011F00000134E0  NCB
SLI_PKT14_IN_BP                0x00000000000038E0  PEXP_NCB     0x00011F00000138E0  NCB
SLI_PKT14_OUT_SIZE             0x0000000000000CE0  PEXP_NCB     0x00011F0000010CE0  NCB
SLI_PKT14_SLIST_BADDR          0x00000000000014E0  PEXP_NCB     0x00011F00000114E0  NCB
SLI_PKT14_SLIST_BAOFF_DBELL    0x00000000000018E0  PEXP_NCB     0x00011F00000118E0  NCB
SLI_PKT14_SLIST_FIFO_RSIZE     0x0000000000001CE0  PEXP_NCB     0x00011F0000011CE0  NCB
SLI_PKT15_CNTS                 0x00000000000024F0  PEXP_NCB     0x00011F00000124F0  NCB
SLI_PKT15_INSTR_BADDR          0x00000000000028F0  PEXP_NCB     0x00011F00000128F0  NCB
SLI_PKT15_INSTR_BAOFF_DBELL    0x0000000000002CF0  PEXP_NCB     0x00011F0000012CF0  NCB
SLI_PKT15_INSTR_FIFO_RSIZE     0x00000000000030F0  PEXP_NCB     0x00011F00000130F0  NCB
SLI_PKT15_INSTR_HEADER         0x00000000000034F0  PEXP_NCB     0x00011F00000134F0  NCB
SLI_PKT15_IN_BP                0x00000000000038F0  PEXP_NCB     0x00011F00000138F0  NCB
SLI_PKT15_OUT_SIZE             0x0000000000000CF0  PEXP_NCB     0x00011F0000010CF0  NCB
SLI_PKT15_SLIST_BADDR          0x00000000000014F0  PEXP_NCB     0x00011F00000114F0  NCB
SLI_PKT15_SLIST_BAOFF_DBELL    0x00000000000018F0  PEXP_NCB     0x00011F00000118F0  NCB
SLI_PKT15_SLIST_FIFO_RSIZE     0x0000000000001CF0  PEXP_NCB     0x00011F0000011CF0  NCB
SLI_PKT16_CNTS                 0x0000000000002500  PEXP_NCB     0x00011F0000012500  NCB
SLI_PKT16_INSTR_BADDR          0x0000000000002900  PEXP_NCB     0x00011F0000012900  NCB
SLI_PKT16_INSTR_BAOFF_DBELL    0x0000000000002D00  PEXP_NCB     0x00011F0000012D00  NCB
SLI_PKT16_INSTR_FIFO_RSIZE     0x0000000000003100  PEXP_NCB     0x00011F0000013100  NCB
SLI_PKT16_INSTR_HEADER         0x0000000000003500  PEXP_NCB     0x00011F0000013500  NCB
SLI_PKT16_IN_BP                0x0000000000003900  PEXP_NCB     0x00011F0000013900  NCB
SLI_PKT16_OUT_SIZE             0x0000000000000D00  PEXP_NCB     0x00011F0000010D00  NCB
SLI_PKT16_SLIST_BADDR          0x0000000000001500  PEXP_NCB     0x00011F0000011500  NCB
SLI_PKT16_SLIST_BAOFF_DBELL    0x0000000000001900  PEXP_NCB     0x00011F0000011900  NCB
SLI_PKT16_SLIST_FIFO_RSIZE     0x0000000000001D00  PEXP_NCB     0x00011F0000011D00  NCB
SLI_PKT17_CNTS                 0x0000000000002510  PEXP_NCB     0x00011F0000012510  NCB
SLI_PKT17_INSTR_BADDR          0x0000000000002910  PEXP_NCB     0x00011F0000012910  NCB
SLI_PKT17_INSTR_BAOFF_DBELL    0x0000000000002D10  PEXP_NCB     0x00011F0000012D10  NCB
SLI_PKT17_INSTR_FIFO_RSIZE     0x0000000000003110  PEXP_NCB     0x00011F0000013110  NCB
SLI_PKT17_INSTR_HEADER         0x0000000000003510  PEXP_NCB     0x00011F0000013510  NCB
SLI_PKT17_IN_BP                0x0000000000003910  PEXP_NCB     0x00011F0000013910  NCB
SLI_PKT17_OUT_SIZE             0x0000000000000D10  PEXP_NCB     0x00011F0000010D10  NCB
SLI_PKT17_SLIST_BADDR          0x0000000000001510  PEXP_NCB     0x00011F0000011510  NCB
SLI_PKT17_SLIST_BAOFF_DBELL    0x0000000000001910  PEXP_NCB     0x00011F0000011910  NCB
SLI_PKT17_SLIST_FIFO_RSIZE     0x0000000000001D10  PEXP_NCB     0x00011F0000011D10  NCB
SLI_PKT18_CNTS                 0x0000000000002520  PEXP_NCB     0x00011F0000012520  NCB
SLI_PKT18_INSTR_BADDR          0x0000000000002920  PEXP_NCB     0x00011F0000012920  NCB
SLI_PKT18_INSTR_BAOFF_DBELL    0x0000000000002D20  PEXP_NCB     0x00011F0000012D20  NCB
SLI_PKT18_INSTR_FIFO_RSIZE     0x0000000000003120  PEXP_NCB     0x00011F0000013120  NCB
SLI_PKT18_INSTR_HEADER         0x0000000000003520  PEXP_NCB     0x00011F0000013520  NCB
SLI_PKT18_IN_BP                0x0000000000003920  PEXP_NCB     0x00011F0000013920  NCB
SLI_PKT18_OUT_SIZE             0x0000000000000D20  PEXP_NCB     0x00011F0000010D20  NCB
SLI_PKT18_SLIST_BADDR          0x0000000000001520  PEXP_NCB     0x00011F0000011520  NCB
SLI_PKT18_SLIST_BAOFF_DBELL    0x0000000000001920  PEXP_NCB     0x00011F0000011920  NCB
SLI_PKT18_SLIST_FIFO_RSIZE     0x0000000000001D20  PEXP_NCB     0x00011F0000011D20  NCB
SLI_PKT19_CNTS                 0x0000000000002530  PEXP_NCB     0x00011F0000012530  NCB
SLI_PKT19_INSTR_BADDR          0x0000000000002930  PEXP_NCB     0x00011F0000012930  NCB
SLI_PKT19_INSTR_BAOFF_DBELL    0x0000000000002D30  PEXP_NCB     0x00011F0000012D30  NCB
SLI_PKT19_INSTR_FIFO_RSIZE     0x0000000000003130  PEXP_NCB     0x00011F0000013130  NCB
SLI_PKT19_INSTR_HEADER         0x0000000000003530  PEXP_NCB     0x00011F0000013530  NCB
SLI_PKT19_IN_BP                0x0000000000003930  PEXP_NCB     0x00011F0000013930  NCB
SLI_PKT19_OUT_SIZE             0x0000000000000D30  PEXP_NCB     0x00011F0000010D30  NCB
SLI_PKT19_SLIST_BADDR          0x0000000000001530  PEXP_NCB     0x00011F0000011530  NCB
SLI_PKT19_SLIST_BAOFF_DBELL    0x0000000000001930  PEXP_NCB     0x00011F0000011930  NCB
SLI_PKT19_SLIST_FIFO_RSIZE     0x0000000000001D30  PEXP_NCB     0x00011F0000011D30  NCB
SLI_PKT20_CNTS                 0x0000000000002540  PEXP_NCB     0x00011F0000012540  NCB
SLI_PKT20_INSTR_BADDR          0x0000000000002940  PEXP_NCB     0x00011F0000012940  NCB
SLI_PKT20_INSTR_BAOFF_DBELL    0x0000000000002D40  PEXP_NCB     0x00011F0000012D40  NCB
SLI_PKT20_INSTR_FIFO_RSIZE     0x0000000000003140  PEXP_NCB     0x00011F0000013140  NCB
SLI_PKT20_INSTR_HEADER         0x0000000000003540  PEXP_NCB     0x00011F0000013540  NCB
SLI_PKT20_IN_BP                0x0000000000003940  PEXP_NCB     0x00011F0000013940  NCB
SLI_PKT20_OUT_SIZE             0x0000000000000D40  PEXP_NCB     0x00011F0000010D40  NCB
SLI_PKT20_SLIST_BADDR          0x0000000000001540  PEXP_NCB     0x00011F0000011540  NCB
SLI_PKT20_SLIST_BAOFF_DBELL    0x0000000000001940  PEXP_NCB     0x00011F0000011940  NCB
SLI_PKT20_SLIST_FIFO_RSIZE     0x0000000000001D40  PEXP_NCB     0x00011F0000011D40  NCB
SLI_PKT21_CNTS                 0x0000000000002550  PEXP_NCB     0x00011F0000012550  NCB
SLI_PKT21_INSTR_BADDR          0x0000000000002950  PEXP_NCB     0x00011F0000012950  NCB
SLI_PKT21_INSTR_BAOFF_DBELL    0x0000000000002D50  PEXP_NCB     0x00011F0000012D50  NCB
SLI_PKT21_INSTR_FIFO_RSIZE     0x0000000000003150  PEXP_NCB     0x00011F0000013150  NCB
SLI_PKT21_INSTR_HEADER         0x0000000000003550  PEXP_NCB     0x00011F0000013550  NCB
SLI_PKT21_IN_BP                0x0000000000003950  PEXP_NCB     0x00011F0000013950  NCB
SLI_PKT21_OUT_SIZE             0x0000000000000D50  PEXP_NCB     0x00011F0000010D50  NCB
SLI_PKT21_SLIST_BADDR          0x0000000000001550  PEXP_NCB     0x00011F0000011550  NCB
SLI_PKT21_SLIST_BAOFF_DBELL    0x0000000000001950  PEXP_NCB     0x00011F0000011950  NCB
SLI_PKT21_SLIST_FIFO_RSIZE     0x0000000000001D50  PEXP_NCB     0x00011F0000011D50  NCB
SLI_PKT22_CNTS                 0x0000000000002560  PEXP_NCB     0x00011F0000012560  NCB
SLI_PKT22_INSTR_BADDR          0x0000000000002960  PEXP_NCB     0x00011F0000012960  NCB
SLI_PKT22_INSTR_BAOFF_DBELL    0x0000000000002D60  PEXP_NCB     0x00011F0000012D60  NCB
SLI_PKT22_INSTR_FIFO_RSIZE     0x0000000000003160  PEXP_NCB     0x00011F0000013160  NCB
SLI_PKT22_INSTR_HEADER         0x0000000000003560  PEXP_NCB     0x00011F0000013560  NCB
SLI_PKT22_IN_BP                0x0000000000003960  PEXP_NCB     0x00011F0000013960  NCB
SLI_PKT22_OUT_SIZE             0x0000000000000D60  PEXP_NCB     0x00011F0000010D60  NCB
SLI_PKT22_SLIST_BADDR          0x0000000000001560  PEXP_NCB     0x00011F0000011560  NCB
SLI_PKT22_SLIST_BAOFF_DBELL    0x0000000000001960  PEXP_NCB     0x00011F0000011960  NCB
SLI_PKT22_SLIST_FIFO_RSIZE     0x0000000000001D60  PEXP_NCB     0x00011F0000011D60  NCB
SLI_PKT23_CNTS                 0x0000000000002570  PEXP_NCB     0x00011F0000012570  NCB
SLI_PKT23_INSTR_BADDR          0x0000000000002970  PEXP_NCB     0x00011F0000012970  NCB
SLI_PKT23_INSTR_BAOFF_DBELL    0x0000000000002D70  PEXP_NCB     0x00011F0000012D70  NCB
SLI_PKT23_INSTR_FIFO_RSIZE     0x0000000000003170  PEXP_NCB     0x00011F0000013170  NCB
SLI_PKT23_INSTR_HEADER         0x0000000000003570  PEXP_NCB     0x00011F0000013570  NCB
SLI_PKT23_IN_BP                0x0000000000003970  PEXP_NCB     0x00011F0000013970  NCB
SLI_PKT23_OUT_SIZE             0x0000000000000D70  PEXP_NCB     0x00011F0000010D70  NCB
SLI_PKT23_SLIST_BADDR          0x0000000000001570  PEXP_NCB     0x00011F0000011570  NCB
SLI_PKT23_SLIST_BAOFF_DBELL    0x0000000000001970  PEXP_NCB     0x00011F0000011970  NCB
SLI_PKT23_SLIST_FIFO_RSIZE     0x0000000000001D70  PEXP_NCB     0x00011F0000011D70  NCB
SLI_PKT24_CNTS                 0x0000000000002580  PEXP_NCB     0x00011F0000012580  NCB
SLI_PKT24_INSTR_BADDR          0x0000000000002980  PEXP_NCB     0x00011F0000012980  NCB
SLI_PKT24_INSTR_BAOFF_DBELL    0x0000000000002D80  PEXP_NCB     0x00011F0000012D80  NCB
SLI_PKT24_INSTR_FIFO_RSIZE     0x0000000000003180  PEXP_NCB     0x00011F0000013180  NCB
SLI_PKT24_INSTR_HEADER         0x0000000000003580  PEXP_NCB     0x00011F0000013580  NCB
SLI_PKT24_IN_BP                0x0000000000003980  PEXP_NCB     0x00011F0000013980  NCB
SLI_PKT24_OUT_SIZE             0x0000000000000D80  PEXP_NCB     0x00011F0000010D80  NCB
SLI_PKT24_SLIST_BADDR          0x0000000000001580  PEXP_NCB     0x00011F0000011580  NCB
SLI_PKT24_SLIST_BAOFF_DBELL    0x0000000000001980  PEXP_NCB     0x00011F0000011980  NCB
SLI_PKT24_SLIST_FIFO_RSIZE     0x0000000000001D80  PEXP_NCB     0x00011F0000011D80  NCB
SLI_PKT25_CNTS                 0x0000000000002590  PEXP_NCB     0x00011F0000012590  NCB
SLI_PKT25_INSTR_BADDR          0x0000000000002990  PEXP_NCB     0x00011F0000012990  NCB
SLI_PKT25_INSTR_BAOFF_DBELL    0x0000000000002D90  PEXP_NCB     0x00011F0000012D90  NCB
SLI_PKT25_INSTR_FIFO_RSIZE     0x0000000000003190  PEXP_NCB     0x00011F0000013190  NCB
SLI_PKT25_INSTR_HEADER         0x0000000000003590  PEXP_NCB     0x00011F0000013590  NCB
SLI_PKT25_IN_BP                0x0000000000003990  PEXP_NCB     0x00011F0000013990  NCB
SLI_PKT25_OUT_SIZE             0x0000000000000D90  PEXP_NCB     0x00011F0000010D90  NCB
SLI_PKT25_SLIST_BADDR          0x0000000000001590  PEXP_NCB     0x00011F0000011590  NCB
SLI_PKT25_SLIST_BAOFF_DBELL    0x0000000000001990  PEXP_NCB     0x00011F0000011990  NCB
SLI_PKT25_SLIST_FIFO_RSIZE     0x0000000000001D90  PEXP_NCB     0x00011F0000011D90  NCB
SLI_PKT26_CNTS                 0x00000000000025A0  PEXP_NCB     0x00011F00000125A0  NCB
SLI_PKT26_INSTR_BADDR          0x00000000000029A0  PEXP_NCB     0x00011F00000129A0  NCB
SLI_PKT26_INSTR_BAOFF_DBELL    0x0000000000002DA0  PEXP_NCB     0x00011F0000012DA0  NCB
SLI_PKT26_INSTR_FIFO_RSIZE     0x00000000000031A0  PEXP_NCB     0x00011F00000131A0  NCB
SLI_PKT26_INSTR_HEADER         0x00000000000035A0  PEXP_NCB     0x00011F00000135A0  NCB
SLI_PKT26_IN_BP                0x00000000000039A0  PEXP_NCB     0x00011F00000139A0  NCB
SLI_PKT26_OUT_SIZE             0x0000000000000DA0  PEXP_NCB     0x00011F0000010DA0  NCB
SLI_PKT26_SLIST_BADDR          0x00000000000015A0  PEXP_NCB     0x00011F00000115A0  NCB
SLI_PKT26_SLIST_BAOFF_DBELL    0x00000000000019A0  PEXP_NCB     0x00011F00000119A0  NCB
SLI_PKT26_SLIST_FIFO_RSIZE     0x0000000000001DA0  PEXP_NCB     0x00011F0000011DA0  NCB
SLI_PKT27_CNTS                 0x00000000000025B0  PEXP_NCB     0x00011F00000125B0  NCB
SLI_PKT27_INSTR_BADDR          0x00000000000029B0  PEXP_NCB     0x00011F00000129B0  NCB
SLI_PKT27_INSTR_BAOFF_DBELL    0x0000000000002DB0  PEXP_NCB     0x00011F0000012DB0  NCB
SLI_PKT27_INSTR_FIFO_RSIZE     0x00000000000031B0  PEXP_NCB     0x00011F00000131B0  NCB
SLI_PKT27_INSTR_HEADER         0x00000000000035B0  PEXP_NCB     0x00011F00000135B0  NCB
SLI_PKT27_IN_BP                0x00000000000039B0  PEXP_NCB     0x00011F00000139B0  NCB
SLI_PKT27_OUT_SIZE             0x0000000000000DB0  PEXP_NCB     0x00011F0000010DB0  NCB
SLI_PKT27_SLIST_BADDR          0x00000000000015B0  PEXP_NCB     0x00011F00000115B0  NCB
SLI_PKT27_SLIST_BAOFF_DBELL    0x00000000000019B0  PEXP_NCB     0x00011F00000119B0  NCB
SLI_PKT27_SLIST_FIFO_RSIZE     0x0000000000001DB0  PEXP_NCB     0x00011F0000011DB0  NCB
SLI_PKT28_CNTS                 0x00000000000025C0  PEXP_NCB     0x00011F00000125C0  NCB
SLI_PKT28_INSTR_BADDR          0x00000000000029C0  PEXP_NCB     0x00011F00000129C0  NCB
SLI_PKT28_INSTR_BAOFF_DBELL    0x0000000000002DC0  PEXP_NCB     0x00011F0000012DC0  NCB
SLI_PKT28_INSTR_FIFO_RSIZE     0x00000000000031C0  PEXP_NCB     0x00011F00000131C0  NCB
SLI_PKT28_INSTR_HEADER         0x00000000000035C0  PEXP_NCB     0x00011F00000135C0  NCB
SLI_PKT28_IN_BP                0x00000000000039C0  PEXP_NCB     0x00011F00000139C0  NCB
SLI_PKT28_OUT_SIZE             0x0000000000000DC0  PEXP_NCB     0x00011F0000010DC0  NCB
SLI_PKT28_SLIST_BADDR          0x00000000000015C0  PEXP_NCB     0x00011F00000115C0  NCB
SLI_PKT28_SLIST_BAOFF_DBELL    0x00000000000019C0  PEXP_NCB     0x00011F00000119C0  NCB
SLI_PKT28_SLIST_FIFO_RSIZE     0x0000000000001DC0  PEXP_NCB     0x00011F0000011DC0  NCB
SLI_PKT29_CNTS                 0x00000000000025D0  PEXP_NCB     0x00011F00000125D0  NCB
SLI_PKT29_INSTR_BADDR          0x00000000000029D0  PEXP_NCB     0x00011F00000129D0  NCB
SLI_PKT29_INSTR_BAOFF_DBELL    0x0000000000002DD0  PEXP_NCB     0x00011F0000012DD0  NCB
SLI_PKT29_INSTR_FIFO_RSIZE     0x00000000000031D0  PEXP_NCB     0x00011F00000131D0  NCB
SLI_PKT29_INSTR_HEADER         0x00000000000035D0  PEXP_NCB     0x00011F00000135D0  NCB
SLI_PKT29_IN_BP                0x00000000000039D0  PEXP_NCB     0x00011F00000139D0  NCB
SLI_PKT29_OUT_SIZE             0x0000000000000DD0  PEXP_NCB     0x00011F0000010DD0  NCB
SLI_PKT29_SLIST_BADDR          0x00000000000015D0  PEXP_NCB     0x00011F00000115D0  NCB
SLI_PKT29_SLIST_BAOFF_DBELL    0x00000000000019D0  PEXP_NCB     0x00011F00000119D0  NCB
SLI_PKT29_SLIST_FIFO_RSIZE     0x0000000000001DD0  PEXP_NCB     0x00011F0000011DD0  NCB
SLI_PKT30_CNTS                 0x00000000000025E0  PEXP_NCB     0x00011F00000125E0  NCB
SLI_PKT30_INSTR_BADDR          0x00000000000029E0  PEXP_NCB     0x00011F00000129E0  NCB
SLI_PKT30_INSTR_BAOFF_DBELL    0x0000000000002DE0  PEXP_NCB     0x00011F0000012DE0  NCB
SLI_PKT30_INSTR_FIFO_RSIZE     0x00000000000031E0  PEXP_NCB     0x00011F00000131E0  NCB
SLI_PKT30_INSTR_HEADER         0x00000000000035E0  PEXP_NCB     0x00011F00000135E0  NCB
SLI_PKT30_IN_BP                0x00000000000039E0  PEXP_NCB     0x00011F00000139E0  NCB
SLI_PKT30_OUT_SIZE             0x0000000000000DE0  PEXP_NCB     0x00011F0000010DE0  NCB
SLI_PKT30_SLIST_BADDR          0x00000000000015E0  PEXP_NCB     0x00011F00000115E0  NCB
SLI_PKT30_SLIST_BAOFF_DBELL    0x00000000000019E0  PEXP_NCB     0x00011F00000119E0  NCB
SLI_PKT30_SLIST_FIFO_RSIZE     0x0000000000001DE0  PEXP_NCB     0x00011F0000011DE0  NCB
SLI_PKT31_CNTS                 0x00000000000025F0  PEXP_NCB     0x00011F00000125F0  NCB
SLI_PKT31_INSTR_BADDR          0x00000000000029F0  PEXP_NCB     0x00011F00000129F0  NCB
SLI_PKT31_INSTR_BAOFF_DBELL    0x0000000000002DF0  PEXP_NCB     0x00011F0000012DF0  NCB
SLI_PKT31_INSTR_FIFO_RSIZE     0x00000000000031F0  PEXP_NCB     0x00011F00000131F0  NCB
SLI_PKT31_INSTR_HEADER         0x00000000000035F0  PEXP_NCB     0x00011F00000135F0  NCB
SLI_PKT31_IN_BP                0x00000000000039F0  PEXP_NCB     0x00011F00000139F0  NCB
SLI_PKT31_OUT_SIZE             0x0000000000000DF0  PEXP_NCB     0x00011F0000010DF0  NCB
SLI_PKT31_SLIST_BADDR          0x00000000000015F0  PEXP_NCB     0x00011F00000115F0  NCB
SLI_PKT31_SLIST_BAOFF_DBELL    0x00000000000019F0  PEXP_NCB     0x00011F00000119F0  NCB
SLI_PKT31_SLIST_FIFO_RSIZE     0x0000000000001DF0  PEXP_NCB     0x00011F0000011DF0  NCB
SLI_PKT_CNT_INT                0x0000000000001130  PEXP_NCB     0x00011F0000011130  NCB
SLI_PKT_CNT_INT_ENB            0x0000000000001150  PEXP_NCB     0x00011F0000011150  NCB
SLI_PKT_CTL                    0x0000000000001220  PEXP_NCB     0x00011F0000011220  NCB
SLI_PKT_DATA_OUT_ES            0x00000000000010B0  PEXP_NCB     0x00011F00000110B0  NCB
SLI_PKT_DATA_OUT_NS            0x00000000000010A0  PEXP_NCB     0x00011F00000110A0  NCB
SLI_PKT_DATA_OUT_ROR           0x0000000000001090  PEXP_NCB     0x00011F0000011090  NCB
SLI_PKT_DPADDR                 0x0000000000001080  PEXP_NCB     0x00011F0000011080  NCB
SLI_PKT_INPUT_CONTROL          0x0000000000001170  PEXP_NCB     0x00011F0000011170  NCB
SLI_PKT_INSTR_ENB              0x0000000000001000  PEXP_NCB     0x00011F0000011000  NCB
SLI_PKT_INSTR_RD_SIZE          0x00000000000011A0  PEXP_NCB     0x00011F00000111A0  NCB
SLI_PKT_INSTR_SIZE             0x0000000000001020  PEXP_NCB     0x00011F0000011020  NCB
SLI_PKT_INT_LEVELS             0x0000000000001120  PEXP_NCB     0x00011F0000011120  NCB
SLI_PKT_IN_BP                  0x0000000000001210  PEXP_NCB     0x00011F0000011210  NCB
SLI_PKT_IN_DONE0_CNTS          0x0000000000002000  PEXP_NCB     0x00011F0000012000  NCB
SLI_PKT_IN_DONE1_CNTS          0x0000000000002010  PEXP_NCB     0x00011F0000012010  NCB
SLI_PKT_IN_DONE2_CNTS          0x0000000000002020  PEXP_NCB     0x00011F0000012020  NCB
SLI_PKT_IN_DONE3_CNTS          0x0000000000002030  PEXP_NCB     0x00011F0000012030  NCB
SLI_PKT_IN_DONE4_CNTS          0x0000000000002040  PEXP_NCB     0x00011F0000012040  NCB
SLI_PKT_IN_DONE5_CNTS          0x0000000000002050  PEXP_NCB     0x00011F0000012050  NCB
SLI_PKT_IN_DONE6_CNTS          0x0000000000002060  PEXP_NCB     0x00011F0000012060  NCB
SLI_PKT_IN_DONE7_CNTS          0x0000000000002070  PEXP_NCB     0x00011F0000012070  NCB
SLI_PKT_IN_DONE8_CNTS          0x0000000000002080  PEXP_NCB     0x00011F0000012080  NCB
SLI_PKT_IN_DONE9_CNTS          0x0000000000002090  PEXP_NCB     0x00011F0000012090  NCB
SLI_PKT_IN_DONE10_CNTS         0x00000000000020A0  PEXP_NCB     0x00011F00000120A0  NCB
SLI_PKT_IN_DONE11_CNTS         0x00000000000020B0  PEXP_NCB     0x00011F00000120B0  NCB
SLI_PKT_IN_DONE12_CNTS         0x00000000000020C0  PEXP_NCB     0x00011F00000120C0  NCB
SLI_PKT_IN_DONE13_CNTS         0x00000000000020D0  PEXP_NCB     0x00011F00000120D0  NCB
SLI_PKT_IN_DONE14_CNTS         0x00000000000020E0  PEXP_NCB     0x00011F00000120E0  NCB
SLI_PKT_IN_DONE15_CNTS         0x00000000000020F0  PEXP_NCB     0x00011F00000120F0  NCB
SLI_PKT_IN_DONE16_CNTS         0x0000000000002100  PEXP_NCB     0x00011F0000012100  NCB
SLI_PKT_IN_DONE17_CNTS         0x0000000000002110  PEXP_NCB     0x00011F0000012110  NCB
SLI_PKT_IN_DONE18_CNTS         0x0000000000002120  PEXP_NCB     0x00011F0000012120  NCB
SLI_PKT_IN_DONE19_CNTS         0x0000000000002130  PEXP_NCB     0x00011F0000012130  NCB
SLI_PKT_IN_DONE20_CNTS         0x0000000000002140  PEXP_NCB     0x00011F0000012140  NCB
SLI_PKT_IN_DONE21_CNTS         0x0000000000002150  PEXP_NCB     0x00011F0000012150  NCB
SLI_PKT_IN_DONE22_CNTS         0x0000000000002160  PEXP_NCB     0x00011F0000012160  NCB
SLI_PKT_IN_DONE23_CNTS         0x0000000000002170  PEXP_NCB     0x00011F0000012170  NCB
SLI_PKT_IN_DONE24_CNTS         0x0000000000002180  PEXP_NCB     0x00011F0000012180  NCB
SLI_PKT_IN_DONE25_CNTS         0x0000000000002190  PEXP_NCB     0x00011F0000012190  NCB
SLI_PKT_IN_DONE26_CNTS         0x00000000000021A0  PEXP_NCB     0x00011F00000121A0  NCB
SLI_PKT_IN_DONE27_CNTS         0x00000000000021B0  PEXP_NCB     0x00011F00000121B0  NCB
SLI_PKT_IN_DONE28_CNTS         0x00000000000021C0  PEXP_NCB     0x00011F00000121C0  NCB
SLI_PKT_IN_DONE29_CNTS         0x00000000000021D0  PEXP_NCB     0x00011F00000121D0  NCB
SLI_PKT_IN_DONE30_CNTS         0x00000000000021E0  PEXP_NCB     0x00011F00000121E0  NCB
SLI_PKT_IN_DONE31_CNTS         0x00000000000021F0  PEXP_NCB     0x00011F00000121F0  NCB
SLI_PKT_IN_INSTR_COUNTS        0x0000000000001200  PEXP_NCB     0x00011F0000011200  NCB
SLI_PKT_IN_PCIE_PORT           0x00000000000011B0  PEXP_NCB     0x00011F00000111B0  NCB
SLI_PKT_IPTR                   0x0000000000001070  PEXP_NCB     0x00011F0000011070  NCB
SLI_PKT_OUTPUT_WMARK           0x0000000000001180  PEXP_NCB     0x00011F0000011180  NCB
SLI_PKT_OUT_BMODE              0x00000000000010D0  PEXP_NCB     0x00011F00000110D0  NCB
SLI_PKT_OUT_ENB                0x0000000000001010  PEXP_NCB     0x00011F0000011010  NCB
SLI_PKT_PCIE_PORT              0x00000000000010E0  PEXP_NCB     0x00011F00000110E0  NCB
SLI_PKT_PORT_IN_RST            0x00000000000011F0  PEXP_NCB     0x00011F00000111F0  NCB
SLI_PKT_SLIST_ES               0x0000000000001050  PEXP_NCB     0x00011F0000011050  NCB
SLI_PKT_SLIST_NS               0x0000000000001040  PEXP_NCB     0x00011F0000011040  NCB
SLI_PKT_SLIST_ROR              0x0000000000001030  PEXP_NCB     0x00011F0000011030  NCB
SLI_PKT_TIME_INT               0x0000000000001140  PEXP_NCB     0x00011F0000011140  NCB
SLI_PKT_TIME_INT_ENB           0x0000000000001160  PEXP_NCB     0x00011F0000011160  NCB
SLI_S2M_PORT0_CTL              0x0000000000003D80  PEXP_NCB     0x00011F0000013D80  NCB
SLI_S2M_PORT1_CTL              0x0000000000003D90  PEXP_NCB     0x00011F0000013D90  NCB
SLI_SCRATCH_1                  0x00000000000003C0  PEXP_NCB     0x00011F00000103C0  NCB
SLI_SCRATCH_2                  0x00000000000003D0  PEXP_NCB     0x00011F00000103D0  NCB
SLI_STATE1                     0x0000000000000620  PEXP_NCB     0x00011F0000010620  NCB
SLI_STATE2                     0x0000000000000630  PEXP_NCB     0x00011F0000010630  NCB
SLI_STATE3                     0x0000000000000640  PEXP_NCB     0x00011F0000010640  NCB
SLI_WINDOW_CTL                 0x00000000000002E0  PEXP_NCB     0x00011F00000102E0  NCB
SLI_WIN_RD_ADDR                0x0000000000000010  PEXP        
SLI_WIN_RD_DATA                0x0000000000000040  PEXP        
SLI_WIN_WR_ADDR                0x0000000000000000  PEXP        
SLI_WIN_WR_DATA                0x0000000000000020  PEXP        
SLI_WIN_WR_MASK                0x0000000000000030  PEXP        
SMI0_CLK                       0x0001180000001818  RSL         
SMI0_CMD                       0x0001180000001800  RSL         
SMI0_EN                        0x0001180000001820  RSL         
SMI0_RD_DAT                    0x0001180000001810  RSL         
SMI0_WR_DAT                    0x0001180000001808  RSL         
SMI1_CLK                       0x0001180000001918  RSL         
SMI1_CMD                       0x0001180000001900  RSL         
SMI1_EN                        0x0001180000001920  RSL         
SMI1_RD_DAT                    0x0001180000001910  RSL         
SMI1_WR_DAT                    0x0001180000001908  RSL         
SMI_DRV_CTL                    0x0001180000001828  RSL         
SRIO0_ACC_CTRL                 0x00011800C8000148  RSL         
SRIO0_ASMBLY_ID                0x00011800C8000200  RSL         
SRIO0_ASMBLY_INFO              0x00011800C8000208  RSL         
SRIO0_BELL_RESP_CTRL           0x00011800C8000310  RSL         
SRIO0_BIST_STATUS              0x00011800C8000108  RSL         
SRIO0_IMSG_CTRL                0x00011800C8000508  RSL         
SRIO0_IMSG_INST_HDR000         0x00011800C8000510  RSL         
SRIO0_IMSG_INST_HDR001         0x00011800C8000518  RSL         
SRIO0_IMSG_QOS_GRP000          0x00011800C8000600  RSL         
SRIO0_IMSG_QOS_GRP001          0x00011800C8000608  RSL         
SRIO0_IMSG_QOS_GRP002          0x00011800C8000610  RSL         
SRIO0_IMSG_QOS_GRP003          0x00011800C8000618  RSL         
SRIO0_IMSG_QOS_GRP004          0x00011800C8000620  RSL         
SRIO0_IMSG_QOS_GRP005          0x00011800C8000628  RSL         
SRIO0_IMSG_QOS_GRP006          0x00011800C8000630  RSL         
SRIO0_IMSG_QOS_GRP007          0x00011800C8000638  RSL         
SRIO0_IMSG_QOS_GRP008          0x00011800C8000640  RSL         
SRIO0_IMSG_QOS_GRP009          0x00011800C8000648  RSL         
SRIO0_IMSG_QOS_GRP010          0x00011800C8000650  RSL         
SRIO0_IMSG_QOS_GRP011          0x00011800C8000658  RSL         
SRIO0_IMSG_QOS_GRP012          0x00011800C8000660  RSL         
SRIO0_IMSG_QOS_GRP013          0x00011800C8000668  RSL         
SRIO0_IMSG_QOS_GRP014          0x00011800C8000670  RSL         
SRIO0_IMSG_QOS_GRP015          0x00011800C8000678  RSL         
SRIO0_IMSG_QOS_GRP016          0x00011800C8000680  RSL         
SRIO0_IMSG_QOS_GRP017          0x00011800C8000688  RSL         
SRIO0_IMSG_QOS_GRP018          0x00011800C8000690  RSL         
SRIO0_IMSG_QOS_GRP019          0x00011800C8000698  RSL         
SRIO0_IMSG_QOS_GRP020          0x00011800C80006A0  RSL         
SRIO0_IMSG_QOS_GRP021          0x00011800C80006A8  RSL         
SRIO0_IMSG_QOS_GRP022          0x00011800C80006B0  RSL         
SRIO0_IMSG_QOS_GRP023          0x00011800C80006B8  RSL         
SRIO0_IMSG_QOS_GRP024          0x00011800C80006C0  RSL         
SRIO0_IMSG_QOS_GRP025          0x00011800C80006C8  RSL         
SRIO0_IMSG_QOS_GRP026          0x00011800C80006D0  RSL         
SRIO0_IMSG_QOS_GRP027          0x00011800C80006D8  RSL         
SRIO0_IMSG_QOS_GRP028          0x00011800C80006E0  RSL         
SRIO0_IMSG_QOS_GRP029          0x00011800C80006E8  RSL         
SRIO0_IMSG_QOS_GRP030          0x00011800C80006F0  RSL         
SRIO0_IMSG_QOS_GRP031          0x00011800C80006F8  RSL         
SRIO0_IMSG_STATUS000           0x00011800C8000700  RSL         
SRIO0_IMSG_STATUS001           0x00011800C8000708  RSL         
SRIO0_IMSG_STATUS002           0x00011800C8000710  RSL         
SRIO0_IMSG_STATUS003           0x00011800C8000718  RSL         
SRIO0_IMSG_STATUS004           0x00011800C8000720  RSL         
SRIO0_IMSG_STATUS005           0x00011800C8000728  RSL         
SRIO0_IMSG_STATUS006           0x00011800C8000730  RSL         
SRIO0_IMSG_STATUS007           0x00011800C8000738  RSL         
SRIO0_IMSG_STATUS008           0x00011800C8000740  RSL         
SRIO0_IMSG_STATUS009           0x00011800C8000748  RSL         
SRIO0_IMSG_STATUS010           0x00011800C8000750  RSL         
SRIO0_IMSG_STATUS011           0x00011800C8000758  RSL         
SRIO0_IMSG_STATUS012           0x00011800C8000760  RSL         
SRIO0_IMSG_STATUS013           0x00011800C8000768  RSL         
SRIO0_IMSG_STATUS014           0x00011800C8000770  RSL         
SRIO0_IMSG_STATUS015           0x00011800C8000778  RSL         
SRIO0_IMSG_STATUS016           0x00011800C8000780  RSL         
SRIO0_IMSG_STATUS017           0x00011800C8000788  RSL         
SRIO0_IMSG_STATUS018           0x00011800C8000790  RSL         
SRIO0_IMSG_STATUS019           0x00011800C8000798  RSL         
SRIO0_IMSG_STATUS020           0x00011800C80007A0  RSL         
SRIO0_IMSG_STATUS021           0x00011800C80007A8  RSL         
SRIO0_IMSG_STATUS022           0x00011800C80007B0  RSL         
SRIO0_IMSG_STATUS023           0x00011800C80007B8  RSL         
SRIO0_IMSG_VPORT_THR           0x00011800C8000500  RSL         
SRIO0_INT_ENABLE               0x00011800C8000110  RSL         
SRIO0_INT_INFO0                0x00011800C8000120  RSL         
SRIO0_INT_INFO1                0x00011800C8000128  RSL         
SRIO0_INT_INFO2                0x00011800C8000130  RSL         
SRIO0_INT_INFO3                0x00011800C8000138  RSL         
SRIO0_INT_REG                  0x00011800C8000118  RSL         
SRIO0_IP_FEATURE               0x00011800C80003F8  RSL         
SRIO0_MAINT_OP                 0x00011800C8000158  RSL         
SRIO0_MAINT_RD_DATA            0x00011800C8000160  RSL         
SRIO0_MCE_TX_CTL               0x00011800C8000240  RSL         
SRIO0_MEM_OP_CTRL              0x00011800C8000168  RSL         
SRIO0_OMSG_CTRL000             0x00011800C8000488  RSL         
SRIO0_OMSG_CTRL001             0x00011800C80004C8  RSL         
SRIO0_OMSG_FMP_MR000           0x00011800C8000498  RSL         
SRIO0_OMSG_FMP_MR001           0x00011800C80004D8  RSL         
SRIO0_OMSG_NMP_MR000           0x00011800C80004A0  RSL         
SRIO0_OMSG_NMP_MR001           0x00011800C80004E0  RSL         
SRIO0_OMSG_PORT000             0x00011800C8000480  RSL         
SRIO0_OMSG_PORT001             0x00011800C80004C0  RSL         
SRIO0_OMSG_SP_MR000            0x00011800C8000490  RSL         
SRIO0_OMSG_SP_MR001            0x00011800C80004D0  RSL         
SRIO0_RX_BELL                  0x00011800C8000308  RSL         
SRIO0_RX_BELL_SEQ              0x00011800C8000300  RSL         
SRIO0_RX_STATUS                0x00011800C8000380  RSL         
SRIO0_S2M_TYPE000              0x00011800C8000180  RSL         
SRIO0_S2M_TYPE001              0x00011800C8000188  RSL         
SRIO0_S2M_TYPE002              0x00011800C8000190  RSL         
SRIO0_S2M_TYPE003              0x00011800C8000198  RSL         
SRIO0_S2M_TYPE004              0x00011800C80001A0  RSL         
SRIO0_S2M_TYPE005              0x00011800C80001A8  RSL         
SRIO0_S2M_TYPE006              0x00011800C80001B0  RSL         
SRIO0_S2M_TYPE007              0x00011800C80001B8  RSL         
SRIO0_S2M_TYPE008              0x00011800C80001C0  RSL         
SRIO0_S2M_TYPE009              0x00011800C80001C8  RSL         
SRIO0_S2M_TYPE010              0x00011800C80001D0  RSL         
SRIO0_S2M_TYPE011              0x00011800C80001D8  RSL         
SRIO0_S2M_TYPE012              0x00011800C80001E0  RSL         
SRIO0_S2M_TYPE013              0x00011800C80001E8  RSL         
SRIO0_S2M_TYPE014              0x00011800C80001F0  RSL         
SRIO0_S2M_TYPE015              0x00011800C80001F8  RSL         
SRIO0_SEQ                      0x00011800C8000278  RSL         
SRIO0_STATUS_REG               0x00011800C8000100  RSL         
SRIO0_TAG_CTRL                 0x00011800C8000178  RSL         
SRIO0_TLP_CREDITS              0x00011800C8000150  RSL         
SRIO0_TX_BELL                  0x00011800C8000280  RSL         
SRIO0_TX_BELL_INFO             0x00011800C8000288  RSL         
SRIO0_TX_CTRL                  0x00011800C8000170  RSL         
SRIO0_TX_STATUS                0x00011800C8000388  RSL         
SRIO1_ACC_CTRL                 0x00011800C9000148  RSL         
SRIO1_ASMBLY_ID                0x00011800C9000200  RSL         
SRIO1_ASMBLY_INFO              0x00011800C9000208  RSL         
SRIO1_BELL_RESP_CTRL           0x00011800C9000310  RSL         
SRIO1_BIST_STATUS              0x00011800C9000108  RSL         
SRIO1_IMSG_CTRL                0x00011800C9000508  RSL         
SRIO1_IMSG_INST_HDR000         0x00011800C9000510  RSL         
SRIO1_IMSG_INST_HDR001         0x00011800C9000518  RSL         
SRIO1_IMSG_QOS_GRP000          0x00011800C9000600  RSL         
SRIO1_IMSG_QOS_GRP001          0x00011800C9000608  RSL         
SRIO1_IMSG_QOS_GRP002          0x00011800C9000610  RSL         
SRIO1_IMSG_QOS_GRP003          0x00011800C9000618  RSL         
SRIO1_IMSG_QOS_GRP004          0x00011800C9000620  RSL         
SRIO1_IMSG_QOS_GRP005          0x00011800C9000628  RSL         
SRIO1_IMSG_QOS_GRP006          0x00011800C9000630  RSL         
SRIO1_IMSG_QOS_GRP007          0x00011800C9000638  RSL         
SRIO1_IMSG_QOS_GRP008          0x00011800C9000640  RSL         
SRIO1_IMSG_QOS_GRP009          0x00011800C9000648  RSL         
SRIO1_IMSG_QOS_GRP010          0x00011800C9000650  RSL         
SRIO1_IMSG_QOS_GRP011          0x00011800C9000658  RSL         
SRIO1_IMSG_QOS_GRP012          0x00011800C9000660  RSL         
SRIO1_IMSG_QOS_GRP013          0x00011800C9000668  RSL         
SRIO1_IMSG_QOS_GRP014          0x00011800C9000670  RSL         
SRIO1_IMSG_QOS_GRP015          0x00011800C9000678  RSL         
SRIO1_IMSG_QOS_GRP016          0x00011800C9000680  RSL         
SRIO1_IMSG_QOS_GRP017          0x00011800C9000688  RSL         
SRIO1_IMSG_QOS_GRP018          0x00011800C9000690  RSL         
SRIO1_IMSG_QOS_GRP019          0x00011800C9000698  RSL         
SRIO1_IMSG_QOS_GRP020          0x00011800C90006A0  RSL         
SRIO1_IMSG_QOS_GRP021          0x00011800C90006A8  RSL         
SRIO1_IMSG_QOS_GRP022          0x00011800C90006B0  RSL         
SRIO1_IMSG_QOS_GRP023          0x00011800C90006B8  RSL         
SRIO1_IMSG_QOS_GRP024          0x00011800C90006C0  RSL         
SRIO1_IMSG_QOS_GRP025          0x00011800C90006C8  RSL         
SRIO1_IMSG_QOS_GRP026          0x00011800C90006D0  RSL         
SRIO1_IMSG_QOS_GRP027          0x00011800C90006D8  RSL         
SRIO1_IMSG_QOS_GRP028          0x00011800C90006E0  RSL         
SRIO1_IMSG_QOS_GRP029          0x00011800C90006E8  RSL         
SRIO1_IMSG_QOS_GRP030          0x00011800C90006F0  RSL         
SRIO1_IMSG_QOS_GRP031          0x00011800C90006F8  RSL         
SRIO1_IMSG_STATUS000           0x00011800C9000700  RSL         
SRIO1_IMSG_STATUS001           0x00011800C9000708  RSL         
SRIO1_IMSG_STATUS002           0x00011800C9000710  RSL         
SRIO1_IMSG_STATUS003           0x00011800C9000718  RSL         
SRIO1_IMSG_STATUS004           0x00011800C9000720  RSL         
SRIO1_IMSG_STATUS005           0x00011800C9000728  RSL         
SRIO1_IMSG_STATUS006           0x00011800C9000730  RSL         
SRIO1_IMSG_STATUS007           0x00011800C9000738  RSL         
SRIO1_IMSG_STATUS008           0x00011800C9000740  RSL         
SRIO1_IMSG_STATUS009           0x00011800C9000748  RSL         
SRIO1_IMSG_STATUS010           0x00011800C9000750  RSL         
SRIO1_IMSG_STATUS011           0x00011800C9000758  RSL         
SRIO1_IMSG_STATUS012           0x00011800C9000760  RSL         
SRIO1_IMSG_STATUS013           0x00011800C9000768  RSL         
SRIO1_IMSG_STATUS014           0x00011800C9000770  RSL         
SRIO1_IMSG_STATUS015           0x00011800C9000778  RSL         
SRIO1_IMSG_STATUS016           0x00011800C9000780  RSL         
SRIO1_IMSG_STATUS017           0x00011800C9000788  RSL         
SRIO1_IMSG_STATUS018           0x00011800C9000790  RSL         
SRIO1_IMSG_STATUS019           0x00011800C9000798  RSL         
SRIO1_IMSG_STATUS020           0x00011800C90007A0  RSL         
SRIO1_IMSG_STATUS021           0x00011800C90007A8  RSL         
SRIO1_IMSG_STATUS022           0x00011800C90007B0  RSL         
SRIO1_IMSG_STATUS023           0x00011800C90007B8  RSL         
SRIO1_IMSG_VPORT_THR           0x00011800C9000500  RSL         
SRIO1_INT_ENABLE               0x00011800C9000110  RSL         
SRIO1_INT_INFO0                0x00011800C9000120  RSL         
SRIO1_INT_INFO1                0x00011800C9000128  RSL         
SRIO1_INT_INFO2                0x00011800C9000130  RSL         
SRIO1_INT_INFO3                0x00011800C9000138  RSL         
SRIO1_INT_REG                  0x00011800C9000118  RSL         
SRIO1_IP_FEATURE               0x00011800C90003F8  RSL         
SRIO1_MAINT_OP                 0x00011800C9000158  RSL         
SRIO1_MAINT_RD_DATA            0x00011800C9000160  RSL         
SRIO1_MCE_TX_CTL               0x00011800C9000240  RSL         
SRIO1_MEM_OP_CTRL              0x00011800C9000168  RSL         
SRIO1_OMSG_CTRL000             0x00011800C9000488  RSL         
SRIO1_OMSG_CTRL001             0x00011800C90004C8  RSL         
SRIO1_OMSG_FMP_MR000           0x00011800C9000498  RSL         
SRIO1_OMSG_FMP_MR001           0x00011800C90004D8  RSL         
SRIO1_OMSG_NMP_MR000           0x00011800C90004A0  RSL         
SRIO1_OMSG_NMP_MR001           0x00011800C90004E0  RSL         
SRIO1_OMSG_PORT000             0x00011800C9000480  RSL         
SRIO1_OMSG_PORT001             0x00011800C90004C0  RSL         
SRIO1_OMSG_SP_MR000            0x00011800C9000490  RSL         
SRIO1_OMSG_SP_MR001            0x00011800C90004D0  RSL         
SRIO1_RX_BELL                  0x00011800C9000308  RSL         
SRIO1_RX_BELL_SEQ              0x00011800C9000300  RSL         
SRIO1_RX_STATUS                0x00011800C9000380  RSL         
SRIO1_S2M_TYPE000              0x00011800C9000180  RSL         
SRIO1_S2M_TYPE001              0x00011800C9000188  RSL         
SRIO1_S2M_TYPE002              0x00011800C9000190  RSL         
SRIO1_S2M_TYPE003              0x00011800C9000198  RSL         
SRIO1_S2M_TYPE004              0x00011800C90001A0  RSL         
SRIO1_S2M_TYPE005              0x00011800C90001A8  RSL         
SRIO1_S2M_TYPE006              0x00011800C90001B0  RSL         
SRIO1_S2M_TYPE007              0x00011800C90001B8  RSL         
SRIO1_S2M_TYPE008              0x00011800C90001C0  RSL         
SRIO1_S2M_TYPE009              0x00011800C90001C8  RSL         
SRIO1_S2M_TYPE010              0x00011800C90001D0  RSL         
SRIO1_S2M_TYPE011              0x00011800C90001D8  RSL         
SRIO1_S2M_TYPE012              0x00011800C90001E0  RSL         
SRIO1_S2M_TYPE013              0x00011800C90001E8  RSL         
SRIO1_S2M_TYPE014              0x00011800C90001F0  RSL         
SRIO1_S2M_TYPE015              0x00011800C90001F8  RSL         
SRIO1_SEQ                      0x00011800C9000278  RSL         
SRIO1_STATUS_REG               0x00011800C9000100  RSL         
SRIO1_TAG_CTRL                 0x00011800C9000178  RSL         
SRIO1_TLP_CREDITS              0x00011800C9000150  RSL         
SRIO1_TX_BELL                  0x00011800C9000280  RSL         
SRIO1_TX_BELL_INFO             0x00011800C9000288  RSL         
SRIO1_TX_CTRL                  0x00011800C9000170  RSL         
SRIO1_TX_STATUS                0x00011800C9000388  RSL         
SRIOMAINT0_ASMBLY_ID           0x0000000000000008  SRIOMAINT0  
SRIOMAINT0_ASMBLY_INFO         0x000000000000000C  SRIOMAINT0  
SRIOMAINT0_BAR1_IDX000         0x0000000000200010  SRIOMAINT0  
SRIOMAINT0_BAR1_IDX001         0x0000000000200014  SRIOMAINT0  
SRIOMAINT0_BAR1_IDX002         0x0000000000200018  SRIOMAINT0  
SRIOMAINT0_BAR1_IDX003         0x000000000020001C  SRIOMAINT0  
SRIOMAINT0_BAR1_IDX004         0x0000000000200020  SRIOMAINT0  
SRIOMAINT0_BAR1_IDX005         0x0000000000200024  SRIOMAINT0  
SRIOMAINT0_BAR1_IDX006         0x0000000000200028  SRIOMAINT0  
SRIOMAINT0_BAR1_IDX007         0x000000000020002C  SRIOMAINT0  
SRIOMAINT0_BAR1_IDX008         0x0000000000200030  SRIOMAINT0  
SRIOMAINT0_BAR1_IDX009         0x0000000000200034  SRIOMAINT0  
SRIOMAINT0_BAR1_IDX010         0x0000000000200038  SRIOMAINT0  
SRIOMAINT0_BAR1_IDX011         0x000000000020003C  SRIOMAINT0  
SRIOMAINT0_BAR1_IDX012         0x0000000000200040  SRIOMAINT0  
SRIOMAINT0_BAR1_IDX013         0x0000000000200044  SRIOMAINT0  
SRIOMAINT0_BAR1_IDX014         0x0000000000200048  SRIOMAINT0  
SRIOMAINT0_BAR1_IDX015         0x000000000020004C  SRIOMAINT0  
SRIOMAINT0_BELL_STATUS         0x0000000000200080  SRIOMAINT0  
SRIOMAINT0_COMP_TAG            0x000000000000006C  SRIOMAINT0  
SRIOMAINT0_CORE_ENABLES        0x0000000000200070  SRIOMAINT0  
SRIOMAINT0_DEV_ID              0x0000000000000000  SRIOMAINT0  
SRIOMAINT0_DEV_REV             0x0000000000000004  SRIOMAINT0  
SRIOMAINT0_DST_OPS             0x000000000000001C  SRIOMAINT0  
SRIOMAINT0_ERB_ATTR_CAPT       0x0000000000002048  SRIOMAINT0  
SRIOMAINT0_ERB_ERR_DET         0x0000000000002040  SRIOMAINT0  
SRIOMAINT0_ERB_ERR_RATE        0x0000000000002068  SRIOMAINT0  
SRIOMAINT0_ERB_ERR_RATE_EN     0x0000000000002044  SRIOMAINT0  
SRIOMAINT0_ERB_ERR_RATE_THR    0x000000000000206C  SRIOMAINT0  
SRIOMAINT0_ERB_HDR             0x0000000000002000  SRIOMAINT0  
SRIOMAINT0_ERB_LT_ADDR_CAPT_H  0x0000000000002010  SRIOMAINT0  
SRIOMAINT0_ERB_LT_ADDR_CAPT_L  0x0000000000002014  SRIOMAINT0  
SRIOMAINT0_ERB_LT_CTRL_CAPT    0x000000000000201C  SRIOMAINT0  
SRIOMAINT0_ERB_LT_DEV_ID       0x0000000000002028  SRIOMAINT0  
SRIOMAINT0_ERB_LT_DEV_ID_CAPT  0x0000000000002018  SRIOMAINT0  
SRIOMAINT0_ERB_LT_ERR_DET      0x0000000000002008  SRIOMAINT0  
SRIOMAINT0_ERB_LT_ERR_EN       0x000000000000200C  SRIOMAINT0  
SRIOMAINT0_ERB_PACK_CAPT_1     0x0000000000002050  SRIOMAINT0  
SRIOMAINT0_ERB_PACK_CAPT_2     0x0000000000002054  SRIOMAINT0  
SRIOMAINT0_ERB_PACK_CAPT_3     0x0000000000002058  SRIOMAINT0  
SRIOMAINT0_ERB_PACK_SYM_CAPT   0x000000000000204C  SRIOMAINT0  
SRIOMAINT0_HB_DEV_ID_LOCK      0x0000000000000068  SRIOMAINT0  
SRIOMAINT0_IR_BUFFER_CONFIG    0x0000000000102000  SRIOMAINT0  
SRIOMAINT0_IR_PD_PHY_CTRL      0x0000000000107028  SRIOMAINT0  
SRIOMAINT0_IR_PD_PHY_STAT      0x000000000010702C  SRIOMAINT0  
SRIOMAINT0_IR_PI_PHY_CTRL      0x0000000000107020  SRIOMAINT0  
SRIOMAINT0_IR_PI_PHY_STAT      0x0000000000107024  SRIOMAINT0  
SRIOMAINT0_IR_SP_RX_CTRL       0x000000000010700C  SRIOMAINT0  
SRIOMAINT0_IR_SP_RX_DATA       0x0000000000107014  SRIOMAINT0  
SRIOMAINT0_IR_SP_RX_STAT       0x0000000000107010  SRIOMAINT0  
SRIOMAINT0_IR_SP_TX_CTRL       0x0000000000107000  SRIOMAINT0  
SRIOMAINT0_IR_SP_TX_DATA       0x0000000000107008  SRIOMAINT0  
SRIOMAINT0_IR_SP_TX_STAT       0x0000000000107004  SRIOMAINT0  
SRIOMAINT0_LANE_000_STATUS_0   0x0000000000001010  SRIOMAINT0  
SRIOMAINT0_LANE_001_STATUS_0   0x0000000000001030  SRIOMAINT0  
SRIOMAINT0_LANE_002_STATUS_0   0x0000000000001050  SRIOMAINT0  
SRIOMAINT0_LANE_003_STATUS_0   0x0000000000001070  SRIOMAINT0  
SRIOMAINT0_LCS_BA0             0x0000000000000058  SRIOMAINT0  
SRIOMAINT0_LCS_BA1             0x000000000000005C  SRIOMAINT0  
SRIOMAINT0_M2S_BAR0_START0     0x0000000000200000  SRIOMAINT0  
SRIOMAINT0_M2S_BAR0_START1     0x0000000000200004  SRIOMAINT0  
SRIOMAINT0_M2S_BAR1_START0     0x0000000000200008  SRIOMAINT0  
SRIOMAINT0_M2S_BAR1_START1     0x000000000020000C  SRIOMAINT0  
SRIOMAINT0_M2S_BAR2_START      0x0000000000200050  SRIOMAINT0  
SRIOMAINT0_PE_FEAT             0x0000000000000010  SRIOMAINT0  
SRIOMAINT0_PE_LLC              0x000000000000004C  SRIOMAINT0  
SRIOMAINT0_PORT_0_CTL          0x000000000000015C  SRIOMAINT0  
SRIOMAINT0_PORT_0_CTL2         0x0000000000000154  SRIOMAINT0  
SRIOMAINT0_PORT_0_ERR_STAT     0x0000000000000158  SRIOMAINT0  
SRIOMAINT0_PORT_GEN_CTL        0x000000000000013C  SRIOMAINT0  
SRIOMAINT0_PORT_LT_CTL         0x0000000000000120  SRIOMAINT0  
SRIOMAINT0_PORT_MBH0           0x0000000000000100  SRIOMAINT0  
SRIOMAINT0_PORT_RT_CTL         0x0000000000000124  SRIOMAINT0  
SRIOMAINT0_PRI_DEV_ID          0x0000000000000060  SRIOMAINT0  
SRIOMAINT0_SEC_DEV_CTRL        0x0000000000200064  SRIOMAINT0  
SRIOMAINT0_SEC_DEV_ID          0x0000000000200060  SRIOMAINT0  
SRIOMAINT0_SERIAL_LANE_HDR     0x0000000000001000  SRIOMAINT0  
SRIOMAINT0_SRC_OPS             0x0000000000000018  SRIOMAINT0  
SRIOMAINT1_ASMBLY_ID           0x0000000000000008  SRIOMAINT1  
SRIOMAINT1_ASMBLY_INFO         0x000000000000000C  SRIOMAINT1  
SRIOMAINT1_BAR1_IDX000         0x0000000000200010  SRIOMAINT1  
SRIOMAINT1_BAR1_IDX001         0x0000000000200014  SRIOMAINT1  
SRIOMAINT1_BAR1_IDX002         0x0000000000200018  SRIOMAINT1  
SRIOMAINT1_BAR1_IDX003         0x000000000020001C  SRIOMAINT1  
SRIOMAINT1_BAR1_IDX004         0x0000000000200020  SRIOMAINT1  
SRIOMAINT1_BAR1_IDX005         0x0000000000200024  SRIOMAINT1  
SRIOMAINT1_BAR1_IDX006         0x0000000000200028  SRIOMAINT1  
SRIOMAINT1_BAR1_IDX007         0x000000000020002C  SRIOMAINT1  
SRIOMAINT1_BAR1_IDX008         0x0000000000200030  SRIOMAINT1  
SRIOMAINT1_BAR1_IDX009         0x0000000000200034  SRIOMAINT1  
SRIOMAINT1_BAR1_IDX010         0x0000000000200038  SRIOMAINT1  
SRIOMAINT1_BAR1_IDX011         0x000000000020003C  SRIOMAINT1  
SRIOMAINT1_BAR1_IDX012         0x0000000000200040  SRIOMAINT1  
SRIOMAINT1_BAR1_IDX013         0x0000000000200044  SRIOMAINT1  
SRIOMAINT1_BAR1_IDX014         0x0000000000200048  SRIOMAINT1  
SRIOMAINT1_BAR1_IDX015         0x000000000020004C  SRIOMAINT1  
SRIOMAINT1_BELL_STATUS         0x0000000000200080  SRIOMAINT1  
SRIOMAINT1_COMP_TAG            0x000000000000006C  SRIOMAINT1  
SRIOMAINT1_CORE_ENABLES        0x0000000000200070  SRIOMAINT1  
SRIOMAINT1_DEV_ID              0x0000000000000000  SRIOMAINT1  
SRIOMAINT1_DEV_REV             0x0000000000000004  SRIOMAINT1  
SRIOMAINT1_DST_OPS             0x000000000000001C  SRIOMAINT1  
SRIOMAINT1_ERB_ATTR_CAPT       0x0000000000002048  SRIOMAINT1  
SRIOMAINT1_ERB_ERR_DET         0x0000000000002040  SRIOMAINT1  
SRIOMAINT1_ERB_ERR_RATE        0x0000000000002068  SRIOMAINT1  
SRIOMAINT1_ERB_ERR_RATE_EN     0x0000000000002044  SRIOMAINT1  
SRIOMAINT1_ERB_ERR_RATE_THR    0x000000000000206C  SRIOMAINT1  
SRIOMAINT1_ERB_HDR             0x0000000000002000  SRIOMAINT1  
SRIOMAINT1_ERB_LT_ADDR_CAPT_H  0x0000000000002010  SRIOMAINT1  
SRIOMAINT1_ERB_LT_ADDR_CAPT_L  0x0000000000002014  SRIOMAINT1  
SRIOMAINT1_ERB_LT_CTRL_CAPT    0x000000000000201C  SRIOMAINT1  
SRIOMAINT1_ERB_LT_DEV_ID       0x0000000000002028  SRIOMAINT1  
SRIOMAINT1_ERB_LT_DEV_ID_CAPT  0x0000000000002018  SRIOMAINT1  
SRIOMAINT1_ERB_LT_ERR_DET      0x0000000000002008  SRIOMAINT1  
SRIOMAINT1_ERB_LT_ERR_EN       0x000000000000200C  SRIOMAINT1  
SRIOMAINT1_ERB_PACK_CAPT_1     0x0000000000002050  SRIOMAINT1  
SRIOMAINT1_ERB_PACK_CAPT_2     0x0000000000002054  SRIOMAINT1  
SRIOMAINT1_ERB_PACK_CAPT_3     0x0000000000002058  SRIOMAINT1  
SRIOMAINT1_ERB_PACK_SYM_CAPT   0x000000000000204C  SRIOMAINT1  
SRIOMAINT1_HB_DEV_ID_LOCK      0x0000000000000068  SRIOMAINT1  
SRIOMAINT1_IR_BUFFER_CONFIG    0x0000000000102000  SRIOMAINT1  
SRIOMAINT1_IR_PD_PHY_CTRL      0x0000000000107028  SRIOMAINT1  
SRIOMAINT1_IR_PD_PHY_STAT      0x000000000010702C  SRIOMAINT1  
SRIOMAINT1_IR_PI_PHY_CTRL      0x0000000000107020  SRIOMAINT1  
SRIOMAINT1_IR_PI_PHY_STAT      0x0000000000107024  SRIOMAINT1  
SRIOMAINT1_IR_SP_RX_CTRL       0x000000000010700C  SRIOMAINT1  
SRIOMAINT1_IR_SP_RX_DATA       0x0000000000107014  SRIOMAINT1  
SRIOMAINT1_IR_SP_RX_STAT       0x0000000000107010  SRIOMAINT1  
SRIOMAINT1_IR_SP_TX_CTRL       0x0000000000107000  SRIOMAINT1  
SRIOMAINT1_IR_SP_TX_DATA       0x0000000000107008  SRIOMAINT1  
SRIOMAINT1_IR_SP_TX_STAT       0x0000000000107004  SRIOMAINT1  
SRIOMAINT1_LANE_000_STATUS_0   0x0000000000001010  SRIOMAINT1  
SRIOMAINT1_LANE_001_STATUS_0   0x0000000000001030  SRIOMAINT1  
SRIOMAINT1_LANE_002_STATUS_0   0x0000000000001050  SRIOMAINT1  
SRIOMAINT1_LANE_003_STATUS_0   0x0000000000001070  SRIOMAINT1  
SRIOMAINT1_LCS_BA0             0x0000000000000058  SRIOMAINT1  
SRIOMAINT1_LCS_BA1             0x000000000000005C  SRIOMAINT1  
SRIOMAINT1_M2S_BAR0_START0     0x0000000000200000  SRIOMAINT1  
SRIOMAINT1_M2S_BAR0_START1     0x0000000000200004  SRIOMAINT1  
SRIOMAINT1_M2S_BAR1_START0     0x0000000000200008  SRIOMAINT1  
SRIOMAINT1_M2S_BAR1_START1     0x000000000020000C  SRIOMAINT1  
SRIOMAINT1_M2S_BAR2_START      0x0000000000200050  SRIOMAINT1  
SRIOMAINT1_PE_FEAT             0x0000000000000010  SRIOMAINT1  
SRIOMAINT1_PE_LLC              0x000000000000004C  SRIOMAINT1  
SRIOMAINT1_PORT_0_CTL          0x000000000000015C  SRIOMAINT1  
SRIOMAINT1_PORT_0_CTL2         0x0000000000000154  SRIOMAINT1  
SRIOMAINT1_PORT_0_ERR_STAT     0x0000000000000158  SRIOMAINT1  
SRIOMAINT1_PORT_GEN_CTL        0x000000000000013C  SRIOMAINT1  
SRIOMAINT1_PORT_LT_CTL         0x0000000000000120  SRIOMAINT1  
SRIOMAINT1_PORT_MBH0           0x0000000000000100  SRIOMAINT1  
SRIOMAINT1_PORT_RT_CTL         0x0000000000000124  SRIOMAINT1  
SRIOMAINT1_PRI_DEV_ID          0x0000000000000060  SRIOMAINT1  
SRIOMAINT1_SEC_DEV_CTRL        0x0000000000200064  SRIOMAINT1  
SRIOMAINT1_SEC_DEV_ID          0x0000000000200060  SRIOMAINT1  
SRIOMAINT1_SERIAL_LANE_HDR     0x0000000000001000  SRIOMAINT1  
SRIOMAINT1_SRC_OPS             0x0000000000000018  SRIOMAINT1  
TIM_MEM_DEBUG0                 0x0001180058001100  RSL         
TIM_MEM_DEBUG1                 0x0001180058001108  RSL         
TIM_MEM_DEBUG2                 0x0001180058001110  RSL         
TIM_MEM_RING0                  0x0001180058001000  RSL         
TIM_MEM_RING1                  0x0001180058001008  RSL         
TIM_REG_BIST_RESULT            0x0001180058000080  RSL         
TIM_REG_ERROR                  0x0001180058000088  RSL         
TIM_REG_FLAGS                  0x0001180058000000  RSL         
TIM_REG_INT_MASK               0x0001180058000090  RSL         
TIM_REG_READ_IDX               0x0001180058000008  RSL         
TRA0_BIST_STATUS               0x00011800A8000010  RSL         
TRA0_CTL                       0x00011800A8000000  RSL         
TRA0_CYCLES_SINCE              0x00011800A8000018  RSL         
TRA0_CYCLES_SINCE1             0x00011800A8000028  RSL         
TRA0_FILT_ADR_ADR              0x00011800A8000058  RSL         
TRA0_FILT_ADR_MSK              0x00011800A8000060  RSL         
TRA0_FILT_CMD                  0x00011800A8000040  RSL         
TRA0_FILT_DID                  0x00011800A8000050  RSL         
TRA0_FILT_SID                  0x00011800A8000048  RSL         
TRA0_INT_STATUS                0x00011800A8000008  RSL         
TRA0_READ_DAT                  0x00011800A8000020  RSL         
TRA0_TRIG0_ADR_ADR             0x00011800A8000098  RSL         
TRA0_TRIG0_ADR_MSK             0x00011800A80000A0  RSL         
TRA0_TRIG0_CMD                 0x00011800A8000080  RSL         
TRA0_TRIG0_DID                 0x00011800A8000090  RSL         
TRA0_TRIG0_SID                 0x00011800A8000088  RSL         
TRA0_TRIG1_ADR_ADR             0x00011800A80000D8  RSL         
TRA0_TRIG1_ADR_MSK             0x00011800A80000E0  RSL         
TRA0_TRIG1_CMD                 0x00011800A80000C0  RSL         
TRA0_TRIG1_DID                 0x00011800A80000D0  RSL         
TRA0_TRIG1_SID                 0x00011800A80000C8  RSL         
UAHC0_EHCI_ASYNCLISTADDR       0x00016F0000000028  NCB         
UAHC0_EHCI_CONFIGFLAG          0x00016F0000000050  NCB         
UAHC0_EHCI_CTRLDSSEGMENT       0x00016F0000000020  NCB         
UAHC0_EHCI_FRINDEX             0x00016F000000001C  NCB         
UAHC0_EHCI_HCCAPBASE           0x00016F0000000000  NCB         
UAHC0_EHCI_HCCPARAMS           0x00016F0000000008  NCB         
UAHC0_EHCI_HCSPARAMS           0x00016F0000000004  NCB         
UAHC0_EHCI_INSNREG00           0x00016F0000000090  NCB         
UAHC0_EHCI_INSNREG03           0x00016F000000009C  NCB         
UAHC0_EHCI_INSNREG04           0x00016F00000000A0  NCB         
UAHC0_EHCI_INSNREG06           0x00016F00000000E8  NCB         
UAHC0_EHCI_INSNREG07           0x00016F00000000EC  NCB         
UAHC0_EHCI_PERIODICLISTBASE    0x00016F0000000024  NCB         
UAHC0_EHCI_PORTSC001           0x00016F0000000054  NCB         
UAHC0_EHCI_PORTSC002           0x00016F0000000058  NCB         
UAHC0_EHCI_USBCMD              0x00016F0000000010  NCB         
UAHC0_EHCI_USBINTR             0x00016F0000000018  NCB         
UAHC0_EHCI_USBSTS              0x00016F0000000014  NCB         
UAHC0_OHCI0_HCBULKCURRENTED    0x00016F000000042C  NCB         
UAHC0_OHCI0_HCBULKHEADED       0x00016F0000000428  NCB         
UAHC0_OHCI0_HCCOMMANDSTATUS    0x00016F0000000408  NCB         
UAHC0_OHCI0_HCCONTROL          0x00016F0000000404  NCB         
UAHC0_OHCI0_HCCONTROLCURRENTED 0x00016F0000000424  NCB         
UAHC0_OHCI0_HCCONTROLHEADED    0x00016F0000000420  NCB         
UAHC0_OHCI0_HCDONEHEAD         0x00016F0000000430  NCB         
UAHC0_OHCI0_HCFMINTERVAL       0x00016F0000000434  NCB         
UAHC0_OHCI0_HCFMNUMBER         0x00016F000000043C  NCB         
UAHC0_OHCI0_HCFMREMAINING      0x00016F0000000438  NCB         
UAHC0_OHCI0_HCHCCA             0x00016F0000000418  NCB         
UAHC0_OHCI0_HCINTERRUPTDISABLE 0x00016F0000000414  NCB         
UAHC0_OHCI0_HCINTERRUPTENABLE  0x00016F0000000410  NCB         
UAHC0_OHCI0_HCINTERRUPTSTATUS  0x00016F000000040C  NCB         
UAHC0_OHCI0_HCLSTHRESHOLD      0x00016F0000000444  NCB         
UAHC0_OHCI0_HCPERIODCURRENTED  0x00016F000000041C  NCB         
UAHC0_OHCI0_HCPERIODICSTART    0x00016F0000000440  NCB         
UAHC0_OHCI0_HCREVISION         0x00016F0000000400  NCB         
UAHC0_OHCI0_HCRHDESCRIPTORA    0x00016F0000000448  NCB         
UAHC0_OHCI0_HCRHDESCRIPTORB    0x00016F000000044C  NCB         
UAHC0_OHCI0_HCRHPORTSTATUS001  0x00016F0000000454  NCB         
UAHC0_OHCI0_HCRHPORTSTATUS002  0x00016F0000000458  NCB         
UAHC0_OHCI0_HCRHSTATUS         0x00016F0000000450  NCB         
UAHC0_OHCI0_INSNREG06          0x00016F0000000498  NCB         
UAHC0_OHCI0_INSNREG07          0x00016F000000049C  NCB         
UCTL0_BIST_STATUS              0x000118006F0000A0  RSL         
UCTL0_CLK_RST_CTL              0x000118006F000000  RSL         
UCTL0_EHCI_CTL                 0x000118006F000080  RSL         
UCTL0_EHCI_FLA                 0x000118006F0000A8  RSL         
UCTL0_ERTO_CTL                 0x000118006F000090  RSL         
UCTL0_IF_ENA                   0x000118006F000030  RSL         
UCTL0_INT_ENA                  0x000118006F000028  RSL         
UCTL0_INT_REG                  0x000118006F000020  RSL         
UCTL0_OHCI_CTL                 0x000118006F000088  RSL         
UCTL0_ORTO_CTL                 0x000118006F000098  RSL         
UCTL0_PPAF_WM                  0x000118006F000038  RSL         
UCTL0_UPHY_CTL_STATUS          0x000118006F000008  RSL         
UCTL0_UPHY_PORT000_CTL_STATUS  0x000118006F000010  RSL         
UCTL0_UPHY_PORT001_CTL_STATUS  0x000118006F000018  RSL         
ZIP_CMD_BIST_RESULT            0x0001180038000080  RSL         
ZIP_CMD_BUF                    0x0001180038000008  RSL         
ZIP_CMD_CTL                    0x0001180038000000  RSL         
ZIP_CONSTANTS                  0x00011800380000A0  RSL         
ZIP_DEBUG0                     0x0001180038000098  RSL         
ZIP_ERROR                      0x0001180038000088  RSL         
ZIP_INT_MASK                   0x0001180038000090  RSL         
ZIP_THROTTLE                   0x0001180038000010  RSL         
