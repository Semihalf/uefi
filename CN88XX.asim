
# Load the CN88XX IOs, one node
#@${ASIM}/configs/cn88xx-1s48p.asim
# Load the CN88XX IOs, two nodes
@${ASIM}/configs/cn88xx-2s48p.asim

# Add io memory regions to conver IO block that aren't simulated
device io_memory n0.sli0 config 0x100000000 0x874000000000
device io_memory n0.sli1 config 0x100000000 0x875000000000
device io_memory n1.sli0 config 0x100000000 0x974000000000
device io_memory n1.sli1 config 0x100000000 0x975000000000
device io_memory n0.slir config 0x1000000000 0x880000000000
device io_memory n1.slir config 0x1000000000 0x980000000000
device io_memory n0.usb0 config 0x300000 0x868000000000
device io_memory n0.usb1 config 0x300000 0x869000000000
device io_memory n1.usb0 config 0x300000 0x968000000000
device io_memory n1.usb1 config 0x300000 0x969000000000
device io_memory n0.ocla config 0x1000000 0x87E0A8000000
device io_memory n1.ocla config 0x1000000 0x97E0A8000000
device io_memory n0.tns_bar0 config 0x10000 0x842000000000
device io_memory n0.tns_bar2 config 0x40000000 0x842040000000
device io_memory n0.tns_bar4 config 0x100000 0x842000f00000
device io_memory n1.tns_bar0 config 0x10000 0x942000000000
device io_memory n1.tns_bar2 config 0x40000000 0x942040000000
device io_memory n1.tns_bar4 config 0x100000 0x942000f00000
device io_memory n0.gti config 0x1000000 0x844000000000
device io_memory n1.gti config 0x1000000 0x944000000000

# Make 2nd node remote boot
control n1.gpio0 set strap 0x8

# Listen for uart connections on port 2000, 2001
control n0.uaa0 connect ${UART0PORT}
control n0.uaa1 connect ${UART1PORT}

# Load BOOT ROM
load ${BDK_ROOT}/target-bin/mio_boot_rom $(NODEIOBASE + 0x87d000000000)

# Set GPIO strap pins (boot method)
# 24bit SPI
control n0.gpio0 set strap 0x5
# 32bit SPI
#control n0.gpio0 set strap 0x6
# eMMC
#control n0.gpio0 set strap 0x2

# Load SPI image
control n0.mpi0 connect 0 ${BIN_IMAGE}

# Load eMMC image
control n0.emm0 connect ${BIN_IMAGE}

# Load the BDK symbols
symbols ${SYMBOL_IMAGE}

# Break ROM not booting
#bp fatal_spin

# Break on BDK exceptions
bp 0
bp __bdk_exception_current_el_sync_sp0
bp __bdk_exception_current_el_irq_sp0
bp __bdk_exception_current_el_fiq_sp0
bp __bdk_exception_current_el_serror_sp0
bp __bdk_exception_current_el_sync_spx
bp __bdk_exception_current_el_irq_spx
bp __bdk_exception_current_el_fiq_spx
bp __bdk_exception_current_el_serror_spx
bp __bdk_exception_lower_el_sync_sp0
bp __bdk_exception_lower_el_irq_sp0
bp __bdk_exception_lower_el_fiq_sp0
bp __bdk_exception_lower_el_serror_sp0
bp __bdk_exception_lower_el_sync_spx
bp __bdk_exception_lower_el_irq_spx
bp __bdk_exception_lower_el_fiq_spx
bp __bdk_exception_lower_el_serror_spx

echo
echo
echo "Wait for the uart program to connect to asim, then"
echo "type 'start 0' to start execution"
echo

