BDK Advanced Features - PCIe and Remote Menus
=============================================
:author:    Chad Reese
:backend:   slidy
:max-width: 45em
:data-uri:

BDK PCIe Support
----------------

BDK requires the same environment variables as the SDK for 'octeon-remote'.

.Set the Remote Protocol
[source, sh]
----
export OCTEON_REMOTE_PROTOCOL=pci:0
#lspci -vvv
#export OCTEON_REMOTE_DEBUG=9
----

.Booting
[source, sh]
----
bdk-remote boot target-bin/bdk-full.bin
bdk-remote boot target-bin/bdk-minimal.bin
----

.Accessing the Console
[source, sh]
----
bdk-remote console
----

TIP: Remote operations are support using the Macraigor mpDemon or the
Mentor Graphics Majic.  Remote console performance is abysmal, so it
is useless over EJTAG.  Flash access is slow, but very useful.

BDK Remote Operations
---------------------

.Operations Supported
[source, sh]
----
bdk-remote csr ciu				# Print all CSRs starting with "ciu"
bdk-remote csr "CIU_INTX_SUM0(0)"		# Read and decode a CSR
bdk-remote csr "CIU_INTX_SUM0(0)" 0 		# Write a CSR
bdk-remote csr "CIU_INTX_SUM0(0)" 0x1234 decode # Decode the supplied value as a CSR
bdk-remote boot target-bin/bdk-full.bin 	# Boot the BDK
bdk-remote reset 				# Reset OCTEON and boot from flash
bdk-remote console 				# Interactive remove console
bdk-remote flash info 				# Probe a NOR flash and display information about it.
bdk-remote flash read dump.bin 0 65536 		# Save 64KB from NOR flash address 0 to dump.bin
bdk-remote flash write bdk-full.bin 0 		# Write the BDK to a NOR flash
bdk-remote core 0 				# Dump all CPU registers, COP0, and TLB entries for core 0
bdk-remote reg 0 status 			# Read COP0 status register for core 0
bdk-remote reg 0 cvmctl 0 			# Write COP0 CvmCtl register for core 0
bdk-remote mem 0x10000 				# Read eight bytes from 0x10000
bdk-remote mem 2 0x10000 			# Read 2 bytes from 0x10000
bdk-remote mem 2 0x10000 0x1234 		# Write 0x1234 as 2 bytes to 0x10000
bdk-remote mem load <filename> 0x10000 		# Load <filename> to 0x10000
bdk-remote mem save <filename> 0x10000 256 	# Save 256 bytes at 0x10000 to <filename>.
bdk-remote profile 				# Profile all cores.
bdk-remote profile <coremask> 			# Profile cores in the supplied <coremask>.
----


Split Architecture
------------------

Using a serial port, remote console, or TCP/IP, BDK can run menus on a host to control the target.

Features::
* Customize by editing files under *lua-modules*.
* File I/O works on the host. (DDR config directly loaded/saved to a file).
* Interactive script debugging using *bdk-debug*.
* No compile or downloaded needed to test changes.

.Connection Settings Examples
[source, sh]
----
export OCTEON_REMOTE_CONSOLE=/dev/ttyS0
export OCTEON_REMOTE_CONSOLE=remote
export OCTEON_REMOTE_CONSOLE=192.168.1.100:23
----

.Starting the Menus
[source, sh]
----
bdk-menu
----

.Updating Images
[source, sh]
----
bdk-update-all
----

Demo Remote Menus over PCIe
---------------------------

* Demo system is a PC with a OCTEON CN6XXX NIC card plugged into PCIe.

CN61XX Introduces new Pain
--------------------------

* Only *target-bin/bdk-minimal.bin* will work on CN61XX.
** target-bin/bdk-full.bin will crash with little or no output.
* All menus must run on host due to limited L2.
** Using remote console is mandatory.
* QLM configuration is controlled by software, not hardware!
** MCU no longer involved with QLMs.
** Customer must program QLM mode before attempting to use it.
** BDK has new item under QLM menu for configuration.
** QLMs mode must be programmed after every reboot.


Questions
---------

Releases::

* Support site
* link:http://chad-cube/bdk-releases[]

Latest docs::

* link:http://chad-cube/bdk/bdk.html[]
* link:http://chad-cube/bdk/bdk-release-notes.html[]
* link:http://chad-cube/bdk/bdk-bringup-guide.html[]

OCTEON Bugzilla::

link:http://caswbug/octeon_bugzilla/[]

