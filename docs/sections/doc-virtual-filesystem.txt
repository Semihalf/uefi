= The Virtual File System

The BDK provides standard system calls for filesystem access.  The
file system supports multiple types of files accessed through virtual
name spaces.  All files are accessible from both native C code and Lua
scripts.

== Filesystem Namespaces

/rom/*::

All files located in *bdk/rom* are statically included into BDK
applications.  Each file can be read be prefixing the name of the file
with '/rom/'.  For example, the first Lua script run is located at
'/rom/init.lua'.

/ram/*::

This is an empty filesystem where applications are free to create
temporary files that are stored in dram.  For example, an application
could store temporary data in '/ram/data.tmp'.

/xmodem::

This is a special file that translates file accesses to reads or
writes to file transferred using XMODEM.  When opened for write the
file to be downloaded from THUNDERX.  When opened for read the file will
be uploaded to THUNDERX.  XMODEM, XMODEM-CRC, XMODEM-1K, and
XMODEM-1K-CRC are all supported.

/dev/uart/0::

This is a special device representing THUNDERX's first uart.  This is
the file that stdin, stdout, and stderr are connected to by default.

/dev/uart/1::

This is a special device representing THUNDERX's second uart.

/dev/nor/0::

Read and write access to a NOR flash connected to the bootbus using
chip select 0. If the application configures other bootbus regions to
access NOR flash, these can be accessed through '/dev/nor/*'.

/dev/mem::

Read and write access to DRAM.  The file location is a raw physical
address.

/dev/pcie/0::

Read and write access to memory on PCIe port 0.  The file location is a raw
PCIe bus address.

/dev/pcie/1::

Read and write access to memory on PCIe port 1.  The file location is a raw
PCIe bus address.

