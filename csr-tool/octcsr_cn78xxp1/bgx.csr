# -*- csr3 -*-
# You must run "csr3 rtl" after editing this file!
---
name: BGX
subblocks:
  - BGX_CMR

  - BGX_GMP

  - BGX_SMU

  - BGX_SPU

description: |
  "
  BGX is an Ethernet I/O Interface Block that supports 1 to 4 logical MACs
  (LMACs) with link speeds from 10 Mbps to 40 Gpbs.

  The BGX registers are partitioned into the follow sub-blocks:
  - BGX_CMR: Overall BGX configuration and common resources for all LMAC types
    (TX/RX buffers, statistics, etc.)
  - BGX_SMU: 10G+ MAC layer (40GBASE-R, 10GBASE-R, 10GBASE-X/XAUI, DXAUI,
    RXAUI)
  - BGX_SPU: 10G+ PCS layer
  - BGX_GMP: SGMII/1000BASE-X MAC layer (10/100/1000 Mbps) and
             SGMII/1000BASE-X PCS layer

  Overview of BGX_SPU registers
  =============================
  BGX_SPU has a register set per Logical PCS (LPCS), where each LPCS
  corresponds to a BGX_SMU LMAC. Each register set includes most of the O6x
  AGX PCSX registers, in addition to new registers to support features such as
  BASE-R, Forward Error Correction (FEC), and Clause 73 Auto-negotiation (AN).
  Most of the registers follow IEEE Std 802.3-2008/802.3ba-2010 Clause 45
  (MDIO) as summarized below.

  ================================================================================================
  Summary of BGX_SPU per-LPCS 802.3 Registers
  ================================================================================================
  These are specified in 802.3 subclauses 45.2.3 (PCS), 45.2.1 (BASE-R FEC) and 45.2.7 (AN).

  New?  Register Name      Addr    802.3 Name                              802.3 Addr
  ------------------------------------------------------------------------------------------------
  No    CONTROL1           0x0000  PCS control 1                           3.0
  No    STATUS1            0x0008  PCS status 1                            3.1
  No    SPD_ABIL           0x0010  PCS speed ability                       3.4
  No    CONTROL2           0x0018  PCS control 2                           3.7
  No    STATUS2            0x0020  PCS status 2                            3.8
  No    BX_STATUS          0x0028  10GBASE-X PCS status                    3.24
  Yes   BR_STATUS1         0x0030  BASE-R PCS status 1                     3.32
  Yes   BR_STATUS2         0x0038  BASE-R PCS status 2, BASE-R BER high
                                   order counter, and Errored blocks
                                   high order counter                      3.33,
                                                                           3.44-3.45
  Yes   BR_TP_CONTROL      0x0040  BASE-R PCS test pattern control         3.42
  Yes   BR_TP_ERR_CNT      0x0048  BASE-R PCS test pattern error
                                        counter                            3.43
  Yes   BR_ALGN_STATUS     0x0050  Multi-lane BASE-R PCS alignment
                                        status                             3.50-3.53
  Yes   BR_BIP_ERR_CNT     0x0058  BIP error counters, lanes 0-3           3.200-3.203
  Yes   BR_LANE_MAP        0x0060  PCS lane mapping registers, lanes
                                        0-3                                3.400-3.403
  Yes   BR_PMD_CONTROL     0x0068  BASE-R PMD control                      1.150
  Yes   BR_PMD_STATUS      0x0070  BASE-R PMD status                       1.151
  Yes   BR_PMD_LP_CUP      0x0078  BASE-R PMD link partner coefficient
                                   update                                  1.152/1.1100,
                                                                           1.1101-1.1103
  Yes   BR_PMD_LP_REP      0x0080  BASE-R PMD link partner status report   1.153/1.1200,
                                                                           1.1201-1.1203
  Yes   BR_PMD_LD_CUP      0x0088  BASE-R PMD local device coefficient
                                   update                                  1.153/1.1300,
                                                                           1.1301-1.1303
  Yes   BR_PMD_LD_REP      0x0090  BASE-R PMD local device status report   1.154/1.1400,
                                                                           1.1401-1.1403
  Yes   FEC_ABIL           0x0098  BASE-R FEC ability                      1.170
  Yes   FEC_CONTROL        0x00A0  BASE-R FEC control                      1.171
  Yes   FEC_CORR_BLKS01    0x00A8  BASE-R FEC corrected blocks
                                        counters, lanes 0-1                1.172-1.173,
                                                                           1.300-1.303
  Yes   FEC_CORR_BLKS23    0x00B0  BASE-R FEC corrected blocks
                                        counters, lanes 2-3                1.304-1.307
  Yes   FEC_UNCORR_BLKS01  0x00B8 BASE-R FEC uncorrected blocks
                                        counter, lanes 0-1                 1.174-1.175,
                                                                           1.700-1.703
  Yes   FEC_UNCORR_BLKS23  0x00C0 BASE-R FEC uncorrected blocks
                                        counter, lanes 2-3                 1.704-1.707
  Yes   AN_CONTROL         0x00C8  AN control                              7.0
  Yes   AN_STATUS          0x00D0  AN status                               7.1
  Yes   AN_ADV             0x00D8  AN advertisement                        7.16-7.18
  Yes   AN_LP_BASE         0x00E0  AN LP base page ability                 7.19-7.21
  Yes   AN_XNP_TX          0x00E8  AN XNP transmit                         7.22-7.24
  Yes   AN_LP_XNP          0x00F0  AN LP XNP ability                       7.25-7.27
  Yes   AN_BP_STATUS       0x00F8  Backplane Ethernet & BASE-R copper
                                        status                             7.48

  ================================================================================================
  Summary of BGX_SPU per-LPCS Non-Standard Registers
  ================================================================================================

  New?  Register Name      Addr
  ------------------------------------------------
  Yes   LPCS_STATES        0x0208
  No    MISC_CONTROL       0x0218 (previously called TX_RX_POLARITY)
  No    INT                0x0220

  - The following AGX PCSX registers are not implemented in BGX_SPU:
      PCSX_INT_EN_REG (Interrupt enables are now handled in CIU)
      PCSX_MISC_CTL_REG
      PCSX_BIT_LOCK_STATUS_REG (Bit lock status no longer received from QLM)
      PCSX_LOG_ANL_REG (analyzer functionality moved to debug bus driven from QLM)
      PCSX_RX_SYNC_STATES (replaced with SDS_STATES registers)
      PCSX_TX_RX_STATES (replaced with LPCS_STATES registers)

  ================================================================================================
  Summary of BGX_SPU common Non-Standard Registers (not specific to any LPCS)
  ================================================================================================

  New?  Register Name      Addr
  ------------------------------------------------
  Yes   DBG_CONTROL        0x0300
  Yes   MEM_STATUS         0x0308
  Yes   MEM_INT            0x0310
  No    BIST_STATUS        0x0318
  Yes   SDS_SKEW_STATUS    0x0320 - 0x338
  Yes   SDS_STATES         0x0340 - 0x358

  ================================================================================================
  Notes on BGX_SMU Registers
  ================================================================================================

  - The following GMX/AGX XGMII registers are not implemented in BGX_SMU:
      GMX_RX_INT_EN (Interrupt enables are now handled in CIU)
      GMX_TX_INT_EN (Interrupt enables are now handled in CIU)
  "
attributes:
  rtlgen_clock: "sclk"
  rtlgen_reset_n: "srst_n"
enums:
  - name: BGX_INTSN_E
    attributes:
      meta_block: "True"
      width: "20"
    description: |
      "BGX Interrupt Source Numbers for CIU. 20-bit INTSN consists of:
        - INTSN[19:12] (major block ID) = DID of BGX instance (0xE0 + a)
        - INTSN[11:8]  (minor block ID) = Subblock ID
        - INTSN[7:0]   (interrupt bit index)

        Interrupt register/bit to INTSN mapping is as follows (where i =
        register bit index):
          Register(s)                       Minor ID    Bit Index
          BGX(0..5)_CMR(0..3)_INT           0x0         b*0x40 + i
          BGX(0..5)_CMR_MEM_INT             0x0         0x20 + i
          BGX(0..5)_SPU(0..3)_INT           0x1         b*0x40 + i
          BGX(0..5)_SPU_MEM_INT             0x1         0x20 + i
          BGX(0..5)_SMU(0..3)_RX_INT        0x2         b*0x40 + i
          BGX(0..5)_SMU(0..3)_TX_INT        0x2         b*0x40 + 0x20 + i
          BGX(0..5)_GMP_PCS_INT(0..3)       0x3         b*0x40 + i
          BGX(0..5)_GMP_GMI_RX(0..3)_INT    0x3         b*0x40 + 0x20 + i
          BGX(0..5)_GMP_GMI_TX(0..3)_INT    0x3         b*0x40 + 0x30 + i
        "
    values:
      - name: BGX(0..5)_CMR(0..3)_INT_PKO_PAUSE_DRP
        value: 0xE0000 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_cmr"
        description: See BGX(0..5)_CMR(0..3)_INT[PAUSE_DRP].

      - name: BGX(0..5)_CMR(0..3)_INT_PKO_OVERFLW
        value: 0xE0001 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_cmr"
        description: See BGX(0..5)_CMR(0..3)_INT[OVERFLW].

      - name: BGX(0..5)_CMR(0..3)_INT_PKO_NXC
        value: 0xE0002 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_cmr"
        description: See BGX(0..5)_CMR(0..3)_INT[PKO_NXC].

      - name: BGX(0..5)_CMR_INT_SMU_IN_OVERFL
        value: 0xE0018 + a*0x1000
        attributes:
          cib_rtl_module: "bgx_cmr"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_CMR_MEM_INT[SMU_IN_OVERFL].

      - name: BGX(0..5)_CMR_INT_GMP_IN_OVERFL
        value: 0xE0019 + a*0x1000
        attributes:
          cib_rtl_module: "bgx_cmr"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_CMR_MEM_INT[GMP_IN_OVERFL].

      - name: BGX(0..5)_CMR_INT_RXB_FIF_BK0_DBE0
        value: 0xE0020 + a*0x1000
        attributes:
          cib_rtl_module: "bgx_cmr"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_CMR_MEM_INT[RXB_FIF_BK0_DBE0].

      - name: BGX(0..5)_CMR_INT_RXB_FIF_BK0_SBE0
        value: 0xE0021 + a*0x1000
        attributes:
          cib_rtl_module: "bgx_cmr"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_CMR_MEM_INT[RXB_FIF_BK0_SBE0].

      - name: BGX(0..5)_CMR_INT_RXB_FIF_BK0_DBE1
        value: 0xE0022 + a*0x1000
        attributes:
          cib_rtl_module: "bgx_cmr"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_CMR_MEM_INT[RXB_FIF_BK0_DBE1].

      - name: BGX(0..5)_CMR_INT_RXB_FIF_BK0_SBE1
        value: 0xE0023 + a*0x1000
        attributes:
          cib_rtl_module: "bgx_cmr"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_CMR_MEM_INT[RXB_FIF_BK0_SBE1].

      - name: BGX(0..5)_CMR_INT_RXB_FIF_BK1_DBE0
        value: 0xE0024 + a*0x1000
        attributes:
          cib_rtl_module: "bgx_cmr"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_CMR_MEM_INT[RXB_FIF_BK1_DBE0].

      - name: BGX(0..5)_CMR_INT_RXB_FIF_BK1_SBE0
        value: 0xE0025 + a*0x1000
        attributes:
          cib_rtl_module: "bgx_cmr"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_CMR_MEM_INT[RXB_FIF_BK1_SBE0].

      - name: BGX(0..5)_CMR_INT_RXB_FIF_BK1_DBE1
        value: 0xE0026 + a*0x1000
        attributes:
          cib_rtl_module: "bgx_cmr"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_CMR_MEM_INT[RXB_FIF_BK1_DBE1].

      - name: BGX(0..5)_CMR_INT_RXB_FIF_BK1_SBE1
        value: 0xE0027 + a*0x1000
        attributes:
          cib_rtl_module: "bgx_cmr"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_CMR_MEM_INT[RXB_FIF_BK1_SBE1].

      - name: BGX(0..5)_CMR_INT_RXB_SKID_DBE
        value: 0xE0028 + a*0x1000
        attributes:
          cib_rtl_module: "bgx_cmr"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_CMR_MEM_INT[RXB_SKID_DBE].

      - name: BGX(0..5)_CMR_INT_RXB_SKID_SBE
        value: 0xE0029 + a*0x1000
        attributes:
          cib_rtl_module: "bgx_cmr"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_CMR_MEM_INT[RXB_SKID_SBE].

      - name: BGX(0..5)_CMR_INT_TXB_FIF_BK0_DBE
        value: 0xE002A + a*0x1000
        attributes:
          cib_rtl_module: "bgx_cmr"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_CMR_MEM_INT[TXB_FIF_BK0_DBE].

      - name: BGX(0..5)_CMR_INT_TXB_FIF_BK0_SBE
        value: 0xE002B + a*0x1000
        attributes:
          cib_rtl_module: "bgx_cmr"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_CMR_MEM_INT[TXB_FIF_BK0_SBE].

      - name: BGX(0..5)_CMR_INT_TXB_FIF_BK1_DBE
        value: 0xE002C + a*0x1000
        attributes:
          cib_rtl_module: "bgx_cmr"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_CMR_MEM_INT[TXB_FIF_BK1_DBE].

      - name: BGX(0..5)_CMR_INT_TXB_FIF_BK1_SBE
        value: 0xE002D + a*0x1000
        attributes:
          cib_rtl_module: "bgx_cmr"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_CMR_MEM_INT[TXB_FIF_BK1_SBE].

      - name: BGX(0..5)_CMR_INT_TXB_SKID_DBE
        value: 0xE002E + a*0x1000
        attributes:
          cib_rtl_module: "bgx_cmr"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_CMR_MEM_INT[TXB_SKID_DBE].

      - name: BGX(0..5)_CMR_INT_TXB_SKID_SBE
        value: 0xE002F + a*0x1000
        attributes:
          cib_rtl_module: "bgx_cmr"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_CMR_MEM_INT[TXB_SKID_SBE].

      - name: BGX(0..5)_SPU(0..3)_INT_RX_LINK_UP
        value: 0xE0100 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_spu"
        description: See BGX(0..5)_SPU(0..3)_INT[RX_LINK_UP].

      - name: BGX(0..5)_SPU(0..3)_INT_RX_LINK_DOWN
        value: 0xE0101 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_spu"
        description: See BGX(0..5)_SPU(0..3)_INT[RX_LINK_DOWN].

      - name: BGX(0..5)_SPU(0..3)_INT_ERR_BLK
        value: 0xE0102 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_spu"
        description: See BGX(0..5)_SPU(0..3)_INT[ERR_BLK].

      - name: BGX(0..5)_SPU(0..3)_INT_BITLCKLS
        value: 0xE0103 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_spu"
        description: See BGX(0..5)_SPU(0..3)_INT[BITLCKLS].

      - name: BGX(0..5)_SPU(0..3)_INT_SYNLOS
        value: 0xE0104 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_spu"
        description: See BGX(0..5)_SPU(0..3)_INT[SYNLOS].

      - name: BGX(0..5)_SPU(0..3)_INT_ALGNLOS
        value: 0xE0105 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_spu"
        description: See BGX(0..5)_SPU(0..3)_INT[ALGNLOS].

      - name: BGX(0..5)_SPU(0..3)_INT_DBG_SYNC
        value: 0xE0106 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_spu"
        description: See BGX(0..5)_SPU(0..3)_INT[DBG_SYNC].

      - name: BGX(0..5)_SPU(0..3)_INT_BIP_ERR
        value: 0xE0107 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_spu"
        description: See BGX(0..5)_SPU(0..3)_INT[BIP_ERR].

      - name: BGX(0..5)_SPU(0..3)_INT_FEC_CORR
        value: 0xE0108 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_spu"
        description: See BGX(0..5)_SPU(0..3)_INT[FEC_CORR].

      - name: BGX(0..5)_SPU(0..3)_INT_FEC_UNCORR
        value: 0xE0109 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_spu"
        description: See BGX(0..5)_SPU(0..3)_INT[FEC_UNCORR].

      - name: BGX(0..5)_SPU(0..3)_INT_AN_PAGE_RX
        value: 0xE010A + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_spu"
        description: See BGX(0..5)_SPU(0..3)_INT[AN_PAGE_RX].

      - name: BGX(0..5)_SPU(0..3)_INT_AN_LINK_GOOD
        value: 0xE010B + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_spu"
        description: See BGX(0..5)_SPU(0..3)_INT[AN_LINK_GOOD].

      - name: BGX(0..5)_SPU(0..3)_INT_AN_COMPLETE
        value: 0xE010C + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_spu"
        description: See BGX(0..5)_SPU(0..3)_INT[AN_COMPLETE].

      - name: BGX(0..5)_SPU(0..3)_INT_TRAINING_DONE
        value: 0xE010D + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_spu"
        description: See BGX(0..5)_SPU(0..3)_INT[TRAINING_DONE].

      - name: BGX(0..5)_SPU(0..3)_INT_TRAINING_FAILURE
        value: 0xE010E + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_spu"
        description: See BGX(0..5)_SPU(0..3)_INT[TRAINING_FAILURE].

      - name: BGX(0..5)_SPU_INT_RX_BUF_DBE(0..3)
        value: 0xE0120 + a*0x1000 + b
        attributes:
          cib_rtl_module: "bgx_spu"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_SPU_MEM_INT[RX_BUF_DBE<b>].

      - name: BGX(0..5)_SPU_INT_RX_BUF_SBE(0..3)
        value: 0xE0124 + a*0x1000 + b
        attributes:
          cib_rtl_module: "bgx_spu"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_SPU_MEM_INT[RX_BUF_SBE<b>].

      - name: BGX(0..5)_SMU(0..3)_INT_JABBER
        value: 0xE0200 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_smu"
        description: See BGX(0..5)_SMU(0..3)_RX_INT[JABBER].

      - name: BGX(0..5)_SMU(0..3)_INT_FCSERR
        value: 0xE0201 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_smu"
        description: See BGX(0..5)_SMU(0..3)_RX_INT[FCSERR].

      - name: BGX(0..5)_SMU(0..3)_INT_RCVERR
        value: 0xE0202 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_smu"
        description: See BGX(0..5)_SMU(0..3)_RX_INT[RCVERR].

      - name: BGX(0..5)_SMU(0..3)_INT_SKPERR
        value: 0xE0203 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_smu"
        description: See BGX(0..5)_SMU(0..3)_RX_INT[SKPERR].

      - name: BGX(0..5)_SMU(0..3)_INT_PCTERR
        value: 0xE0204 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_smu"
        description: See BGX(0..5)_SMU(0..3)_RX_INT[PCTERR].

      - name: BGX(0..5)_SMU(0..3)_INT_RSVERR
        value: 0xE0205 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_smu"
        description: See BGX(0..5)_SMU(0..3)_RX_INT[RSVERR].

      - name: BGX(0..5)_SMU(0..3)_INT_LOC_FAULT
        value: 0xE0206 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_smu"
        description: See BGX(0..5)_SMU(0..3)_RX_INT[LOC_FAULT].

      - name: BGX(0..5)_SMU(0..3)_INT_REM_FAULT
        value: 0xE0207 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_smu"
        description: See BGX(0..5)_SMU(0..3)_RX_INT[REM_FAULT].

      - name: BGX(0..5)_SMU(0..3)_INT_BAD_SEQ
        value: 0xE0208 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_smu"
        description: See BGX(0..5)_SMU(0..3)_RX_INT[BAD_SEQ].

      - name: BGX(0..5)_SMU(0..3)_INT_BAD_TERM
        value: 0xE0209 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_smu"
        description: See BGX(0..5)_SMU(0..3)_RX_INT[BAD_TERM].

      - name: BGX(0..5)_SMU(0..3)_INT_HG2FLD
        value: 0xE020A + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_smu"
        description: See BGX(0..5)_SMU(0..3)_RX_INT[HG2FLD].

      - name: BGX(0..5)_SMU(0..3)_INT_HG2CC
        value: 0xE020B + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_smu"
        description: See BGX(0..5)_SMU(0..3)_RX_INT[HG2CC].

      - name: BGX(0..5)_SMU(0..3)_INT_UNDFLW
        value: 0xE0220 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_smu"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_SMU(0..3)_TX_INT[UNDFLW].

      - name: BGX(0..5)_SMU(0..3)_INT_XCHANGE
        value: 0xE0221 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_smu"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_SMU(0..3)_TX_INT[XCHANGE].

      - name: BGX(0..5)_SMU(0..3)_INT_FAKE_COMMIT
        value: 0xE0222 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_smu"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_SMU(0..3)_TX_INT[FAKE_COMMIT].

      - name: BGX(0..5)_SMU(0..3)_INT_LB_UNDFLW
        value: 0xE0223 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_smu"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_SMU(0..3)_TX_INT[LB_UNDFLW].

      - name: BGX(0..5)_SMU(0..3)_INT_LB_OVRFLW
        value: 0xE0224 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_smu"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_SMU(0..3)_TX_INT[LB_OVRFLW].

      - name: BGX(0..5)_GMP(0..3)_INT_LNKSPD
        value: 0xE0300 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_gmp"
        description: See BGX(0..5)_GMP_PCS_INT(0..3)[LNKSPD].

      - name: BGX(0..5)_GMP(0..3)_INT_XMIT
        value: 0xE0301 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_gmp"
        description: See BGX(0..5)_GMP_PCS_INT(0..3)[XMIT].

      - name: BGX(0..5)_GMP(0..3)_INT_AN_ERR
        value: 0xE0302 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_gmp"
        description: See BGX(0..5)_GMP_PCS_INT(0..3)[AN_ERR].

      - name: BGX(0..5)_GMP(0..3)_INT_TXFIFU
        value: 0xE0303 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_gmp"
        description: See BGX(0..5)_GMP_PCS_INT(0..3)[TXFIFU].

      - name: BGX(0..5)_GMP(0..3)_INT_TXFIFO
        value: 0xE0304 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_gmp"
        description: See BGX(0..5)_GMP_PCS_INT(0..3)[TXFIFO].

      - name: BGX(0..5)_GMP(0..3)_INT_TXBAD
        value: 0xE0305 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_gmp"
        description: See BGX(0..5)_GMP_PCS_INT(0..3)[TXBAD].

      - name: BGX(0..5)_GMP(0..3)_INT_RXERR
        value: 0xE0306 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_gmp"
        description: See BGX(0..5)_GMP_PCS_INT(0..3)[RXERR].

      - name: BGX(0..5)_GMP(0..3)_INT_RXBAD
        value: 0xE0307 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_gmp"
        description: See BGX(0..5)_GMP_PCS_INT(0..3)[RXBAD].

      - name: BGX(0..5)_GMP(0..3)_INT_RXLOCK
        value: 0xE0308 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_gmp"
        description: See BGX(0..5)_GMP_PCS_INT(0..3)[RXLOCK].

      - name: BGX(0..5)_GMP(0..3)_INT_AN_BAD
        value: 0xE0309 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_gmp"
        description: See BGX(0..5)_GMP_PCS_INT(0..3)[AN_BAD].

      - name: BGX(0..5)_GMP(0..3)_INT_SYNC_BAD
        value: 0xE030A + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_gmp"
        description: See BGX(0..5)_GMP_PCS_INT(0..3)[SYNC_BAD].

      - name: BGX(0..5)_GMP(0..3)_INT_DUP
        value: 0xE030B + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_gmp"
        description: See BGX(0..5)_GMP_PCS_INT(0..3)[DUP].

      - name: BGX(0..5)_GMP(0..3)_INT_DBG_SYNC
        value: 0xE030C + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_gmp"
        description: See BGX(0..5)_GMP_PCS_INT(0..3)[DBG_SYNC].

      - name: BGX(0..5)_GMP(0..3)_INT_MINERR
        value: 0xE0320 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_gmp"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_GMP_GMI_RX(0..3)_INT[MINERR].

      - name: BGX(0..5)_GMP(0..3)_INT_CAREXT
        value: 0xE0321 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_gmp"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_GMP_GMI_RX(0..3)_INT[CAREXT].

      - name: BGX(0..5)_GMP(0..3)_INT_JABBER
        value: 0xE0322 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_gmp"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_GMP_GMI_RX(0..3)_INT[JABBER].

      - name: BGX(0..5)_GMP(0..3)_INT_FCSERR
        value: 0xE0323 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_gmp"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_GMP_GMI_RX(0..3)_INT[FCSERR].

      - name: BGX(0..5)_GMP(0..3)_INT_RCVERR
        value: 0xE0324 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_gmp"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_GMP_GMI_RX(0..3)_INT[RCVERR].

      - name: BGX(0..5)_GMP(0..3)_INT_SKPERR
        value: 0xE0325 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_gmp"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_GMP_GMI_RX(0..3)_INT[SKPERR].

      - name: BGX(0..5)_GMP(0..3)_INT_OVRERR
        value: 0xE0326 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_gmp"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_GMP_GMI_RX(0..3)_INT[OVRERR].

      - name: BGX(0..5)_GMP(0..3)_INT_PCTERR
        value: 0xE0327 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_gmp"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_GMP_GMI_RX(0..3)_INT[PCTERR].

      - name: BGX(0..5)_GMP(0..3)_INT_RSVERR
        value: 0xE0328 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_gmp"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_GMP_GMI_RX(0..3)_INT[RSVERR].

      - name: BGX(0..5)_GMP(0..3)_INT_FALERR
        value: 0xE0329 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_gmp"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_GMP_GMI_RX(0..3)_INT[FALERR].

      - name: BGX(0..5)_GMP(0..3)_INT_COLDET
        value: 0xE032A + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_gmp"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_GMP_GMI_RX(0..3)_INT[COLDET].

      - name: BGX(0..5)_GMP(0..3)_INT_IFGERR
        value: 0xE032B + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_gmp"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_GMP_GMI_RX(0..3)_INT[IFGERR].

      - name: BGX(0..5)_GMP(0..3)_INT_UNDFLW
        value: 0xE0330 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_gmp"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_GMP_GMI_TX(0..3)_INT[UNDFLW].

      - name: BGX(0..5)_GMP(0..3)_INT_XSCOL
        value: 0xE0331 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_gmp"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_GMP_GMI_TX(0..3)_INT[XSCOL].

      - name: BGX(0..5)_GMP(0..3)_INT_XSDEF
        value: 0xE0332 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_gmp"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_GMP_GMI_TX(0..3)_INT[XSDEF].

      - name: BGX(0..5)_GMP(0..3)_INT_LATE_COL
        value: 0xE0333 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_gmp"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_GMP_GMI_TX(0..3)_INT[LATE_COL].

      - name: BGX(0..5)_GMP(0..3)_INT_PTP_LOST
        value: 0xE0334 + a*0x1000 + b*0x40
        attributes:
          cib_rtl_module: "bgx_gmp"
          intsn_lsb_mismatch: "True"
        description: See BGX(0..5)_GMP_GMI_TX(0..3)_INT[PTP_LOST].


  - name: BGX_SPU_BR_TRAIN_CST_E
    attributes:
      width: "2"
    description: |
      "BASE-R Link Training Coefficient Status: 2-bit status for each
      coefficient as defined in 802.3-2008, Table 72-5."
    values:
      - name: NOT_UPDATED
        value: 0x0
        description: |
          "Ready to accept an increment, decrement, preset or initialize
          request, or an update for a received request is in progress."

      - name: UPDATED
        value: 0x1
        description: |
          "Increment, decrement, preset or initialize request has been
          executed and the updated tap value has not reached the maximum or
          minimum limit."

      - name: MINIMUM
        value: 0x2
        description: |
          "Decrement, preset or initialize request has been executed and the
          tap value has reached its minimum limit or was already at that
          limit."

      - name: MAXIMUM
        value: 0x3
        description: |
          "Increment, preset or initialize request has been executed and the
          tap value has reached its maximum limit or was already at that
          limit."


  - name: BGX_SPU_BR_TRAIN_CUP_E
    attributes:
      width: "2"
    description: |
      "BASE-R Link Training Coefficient Update: 2-bit command for each
      coefficient as defined in 802.3-2008, Table 72-4."
    values:
      - name: HOLD
        value: 0x0
        description: No change coefficient value.

      - name: DECREMENT
        value: 0x1
        description: Decrement coefficient value.

      - name: INCREMENT
        value: 0x2
        description: Increment coefficient value.

      - name: RSV_CMD
        value: 0x3
        description: Reserved.


structs:
  - name: BGX_SPU_BR_LANE_TRAIN_STATUS_S
    description: |
      "BASE-R Link Training Lane Status:
      This is the group of lane status bits for a single lane in the BASE-R
      PMD status register (MDIO address 1.151) as defined in 802.3ba-2010,
      Table 45-55."
    fields:
      - name: RX_TRAINED
        bits: 0
        description: |
          "Receiver trained status:
          1: receiver trained and ready to receive data for the lane
          0: receiver training"

      - name: FRAME_LOCK
        bits: 1
        description: |
          "Frame lock status: set when training frame delineation has been
          detected."

      - name: TRAINING
        bits: 2
        description: |
          "Link training state:
          0: training in progress, 1: training has completed."

      - name: TRAINING_FAILURE
        bits: 3
        description: Link training failure.


  - name: BGX_SPU_BR_TRAIN_CUP_S
    description: |
      "BASE-R Link Training Coefficient Update:
      This is the coefficient update field of the BASE-R link training packet
      as defined in 802.3-2008, Table 72-4."
    fields:
      - name: PRE_CUP
        bits: 1..0
        description: |
          "Pre-cursor (k = -1) Coefficient Update:
          Valid when PRESET = INIT = 0. Enumerated by
          BGX_SPU_BR_TRAIN_CUP_E."

      - name: MAIN_CUP
        bits: 3..2
        description: |
          "Main (k = 0) Coefficient Update:
          Valid when PRESET = INIT = 0. Enumerated by
          BGX_SPU_BR_TRAIN_CUP_E."

      - name: POST_CUP
        bits: 5..4
        description: |
          "Post-cursor (k = +1) Coefficient Update:
          Valid when PRESET = INIT = 0. Enumerated by
          BGX_SPU_BR_TRAIN_CUP_E."

      - name: --
        bits: 11..6
        description: Reserved.

      - name: INIT
        bits: 12
        description: |
          "Initialize: Set to indicate that the TX coefficients should be set
          to meet the conditions defined in 802.3-2008 sub-clause
          72.6.10.4.2."

      - name: PRESET
        bits: 13
        description: |
          "Preset: Set to indicate that all TX coefficients be set to a state
          where equalization is turned off, i.e. the pre-cursor (k = -1) and
          post-cursor (k = +1) coefficients should be set to 0 and the main (k
          = 0) coefficient should be set to its maximum value."

      - name: --
        bits: 15..14
        description: Reserved.


  - name: BGX_SPU_BR_TRAIN_REP_S
    description: |
      "BASE-R Link Training Status Report:
      This is the status report field of the BASE-R link training packet
      as defined in 802.3-2008, Table 72-5."
    fields:
      - name: PRE_CST
        bits: 1..0
        description: |
          "Pre-cursor (k = -1) Coefficient Status:
          Valid when PRESET = INIT = 0. Enumerated by
          BGX_SPU_BR_TRAIN_CST_E."

      - name: MAIN_CST
        bits: 3..2
        description: |
          "Main (k = 0) Coefficient Status:
          Valid when PRESET = INIT = 0. Enumerated by
          BGX_SPU_BR_TRAIN_CST_E."

      - name: POST_CST
        bits: 5..4
        description: |
          "Post-cursor (k = +1) Coefficient Status:
          Valid when PRESET = INIT = 0. Enumerated by
          BGX_SPU_BR_TRAIN_CST_E."

      - name: --
        bits: 14..6
        description: Reserved.

      - name: RX_READY
        bits: 15
        description: |
          "Receiver Ready: Set to indicate that the local receiver has
          determined that training is complete and is prepared to receive
          data."


  - name: BGX_SPU_SDS_CU_S
    description: |
      "BASE-R Link Training Coefficient Update internal data echanged with
      serdes (OLM):
      Similar to BGX_SPU_BR_TRAIN_CUP_S format, but with reserved fields
      removed and RX_READY field added."
    fields:
      - name: PRE_CU
        bits: 1..0
        description: See PRE_CUP field in BGX_SPU_BR_TRAIN_CUP_S.

      - name: MAIN_CU
        bits: 3..2
        description: See MAIN_CUP field in BGX_SPU_BR_TRAIN_CUP_S.

      - name: POST_CU
        bits: 5..4
        description: See POST_CUP field in BGX_SPU_BR_TRAIN_CUP_S.

      - name: INITIALIZE
        bits: 6
        description: See INIT field in BGX_SPU_BR_TRAIN_CUP_S.

      - name: PRESET
        bits: 7
        description: See PRESET field in BGX_SPU_BR_TRAIN_CUP_S.

      - name: RCVR_READY
        bits: 8
        description: See RX_READY field in BGX_SPU_BR_TRAIN_REP_S.


  - name: BGX_SPU_SDS_SKEW_STATUS_S
    description: |
      "Serdes Lane skew status:
      Provides receive skew information detected for a physical serdes lane
      when it is assigned to a multi-lane LMAC/LPCS. Contents are valid when
      RX deskew is done for the associated LMAC/LPCS."
    fields:
      - name: AM_TIMESTAMP
        bits: 11..0
        description: |
          "Alignment Marker PTP timestamp:
          Valid for 40GBASE-R only. Contains the lower 12 bits of the PTP
          timestamp of the alignment marker received on the serdes lane during
          align/skew detection."

      - name: --
        bits: 15..12
        description: Reserved.

      - name: AM_LANE_ID
        bits: 17..16
        description: |
          "Alignment Marker ID:
          Valid for 40GBASE-R only. This is the PCS lane number of the
          alignment marker received on the serdes lane."

      - name: --
        bits: 19..18
        description: Reserved.

      - name: LANE_SKEW
        bits: 24..20
        description: |
          "Lane Skew:
          The serdes lane's receive skew/delay in number of code-groups
          (BASE-X) or blocks (40GBASE-R) relative to the earliest (least
          delayed) lane of the LMAC/LPCS."

      - name: --
        bits: 31..25
        description: Reserved.


  - name: BGX_SPU_SDS_SR_S
    description: |
      "BASE-R Link Training Status Report internal data echanged with serdes
      (OLM):
      Similar to BGX_SPU_BR_TRAIN_REP_S format, but with reserved fields
      and RX_READY fields removed."
    fields:
      - name: PRE_STATUS
        bits: 1..0
        description: See PRE_CST field in BGX_SPU_BR_TRAIN_REP_S.

      - name: MAIN_STATUS
        bits: 3..2
        description: See MAIN_CST field in BGX_SPU_BR_TRAIN_REP_S.

      - name: POST_STATUS
        bits: 5..4
        description: See POST_CST field in BGX_SPU_BR_TRAIN_REP_S.


registers:
  - name: BGX(0..5)_CMR(0..3)_CONFIG
    address: 0x11800E0000000 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      "***************************************************************
      BGX Global per lmac related CSR (may be sent to any of GMP, SMU, SPU)
      ***************************************************************
      Logical PCS and MAC Configuration"
    fields:
      - name: --
        bits: 63..16
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: ENABLE
        bits: 15
        access: R/W
        reset: 0
        typical: 1
        description: |
          Logical MAC/PCS Enable. This is the master enable for the LMAC. When clear, all the
          dedicated BGX context state for the LMAC (state machines, FIFOs, counters, etc.) is reset,
          and LMAC access to shared BGX resources (SMU/SPU data path, serdes lanes) is disabled.
          When set, LMAC operation is enabled, including link bring-up, synchronization, and
          transmit/receive of of idles and fault sequences. Note that configuration registers for an
          LMAC are not reset when this bit is clear, allowing software to program them before
          setting this bit to enable the LMAC.  This bit together with the LMAC_TYPE is also used
          to enable the clocking to the GMP and/or blocks of the Super path(SMU and SPU).
          CMR clocking will be enable when any of the paths are enabled.

      - name: DATA_PKT_RX_EN
        bits: 14
        access: R/W
        reset: 0
        typical: 1
        description: |
          Data Packet Receive Enable When ENABLE=1 and DATA_PKT_RX_EN=1, the reception of data
          packets is enabled in the MAC layer. When ENABLE=1 and DATA_PKT_RX_EN=0, the MAC layer
          drops received data and flow control packets.

      - name: DATA_PKT_TX_EN
        bits: 13
        access: R/W
        reset: 0
        typical: 1
        description: |
          Data Packet Transmit Enable When ENABLE=1 and DATA_PKT_TX_EN=1, the transmission of data
          packets is enabled in the MAC layer. When ENABLE=1 and DATA_PKT_TX_EN=0, the MAC layer
          suppresses the transmission of new data and packets for the LMAC

      - name: INT_BEAT_GEN
        bits: 12
        access: R/W
        reset: 0
        typical: 0
        description: |
          Internal Beat Generation This bit is used for debug/test purposes and should be clear
          during normal operation. When set, the LMAC's PCS layer ignores RXVALID and
          TXREADY/TXCREDIT from the associated serdes lane(s), internally generates fake (idle)
          RXVALID and TXCREDIT pulses, and suppresses transmission to the serdes

      - name: MIX_EN
        bits: 11
        access: R/W
        reset: 0
        typical: 0
        description: |
          Managmenet enable(for 2 LMACs, namely
          0 and 1 only). Setting this will pipe the
          lmac to and from the MIX inteface. For
          these LMACs LMAC_TYPE should be 0(SGMII)

      - name: LMAC_TYPE
        bits: 10..8
        access: R/W
        reset: 0x0
        typical: 0x0
        description: |
          Logical MAC/PCS Type:
          ----------+----------------------------------------------------------
          LMAC_TYPE | Name         Description                NUM_PCS_LANES
          ----------+----------------------------------------------------------
          0         | SGMII      SGMII/1000BASE-X             1
          1         | XAUI       10GBASE-X/XAUI or DXAUI      4
          2         | RXAUI      Reduced XAUI                 2
          3         | 10G_R      10GBASE-R                    1
          4         | 40G_R      40GBASE-R                    4
          Other     | -          Reserved                     -
          ----------+----------------------------------------------------------
          NUM_PCS_LANES specifies the number of of PCS lanes that are valid for
          each type. Each valid PCS lane is mapped to a physical serdes lane
          based on the programming of the LANE_TO_SDS field below.

      - name: LANE_TO_SDS
        bits: 7..0
        access: R/W
        reset: 0xe4
        typical: 0xe4
        description: |
          "PCS Lane to Serdes Mapping
          This is an array of 2-bit values that map each logical PCS Lane to a
          physical serdes lane, as follows:
          ----------+----------------------------------------------------------
          Bits     | Description                     Reset value
          ----------+----------------------------------------------------------
          <7:6>    | PCS Lane 3 Serdes ID            0x3
          <5:4>    | PCS Lane 2 Serdes ID            0x2
          <3:2>    | PCS Lane 1 Serdes ID            0x1
          <1:0>    | PCS Lane 0 Serdes ID            0x0
          ----------+----------------------------------------------------------
          PCS lanes 0 through NUM_PCS_LANES-1 are valid, where NUM_PCS_LANES is
          a function of the logical MAC/PCS type (see definition of
          LMAC_TYPE field in this register). For example, when LMAC_TYPE =
          RXAUI, then NUM_PCS_LANES = 2, PCS lanes 0 and 1 valid and the
          associated physical serdes lanes are selected by bits <1:0> and
          <3:2>, respectively.
          For 40GBASE-R (LMAC_TYPE = 40G_R), all four PCS lanes are valid, and
          the PCS lane IDs determine the block distribution order and
          associated alignment markers on the *transmit* side. This is not
          necessarily the order in which PCS lanes *receive* data because 802.3
          allows multi-lane BASE-R receive lanes to be re-ordered. When a
          lane (called 'service interface' in 802.3ba-2010) has achieved
          alignment marker lock on the receive side (i.e. the associated
          MARKER_LOCK bit is set in BR_ALGN_STATUS), then the actual detected
          RX PCS lane number is recorded in the corresponding LNx_MAPPING
          field in BR_LANE_MAP."


  - name: BGX(0..5)_CMR_GLOBAL_CONFIG
    address: 0x11800E0000008 + a*0x1000000
    bus: RSL
    description: |
      "***************************************************************
      BGX Global related CSR (affects all lmacs and may be sent to any of GMP, SMU, SPU)
      ***************************************************************
      Global CMR, PCS and MAC Configuration"
    fields:
      - name: --
        bits: 63..5
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: CMR_MIX1_RESET
        bits: 4
        access: R/W
        reset: 0
        typical: 0
        description: |
          If the MIX1 block is reset, software also needs to reset the the MIX interface in the BGX
          by setting this bit to 1. It resets the MIX interface state in the BGX (mix FIFO and
          pending requests to MIX) and prevents the RXB FIFOs for all LMACs from pushing data
          to the interface. Setting this bit to 0 will not reset the MIX interface.
          After MIX comes out of reset, software should clear CMR_MIX_RESET.

      - name: CMR_MIX0_RESET
        bits: 3
        access: R/W
        reset: 0
        typical: 0
        description: |
          If the MIX0 block is reset, software also needs to reset the the MIX interface in the BGX
          by setting this bit to 1. It resets the MIX interface state in the BGX (mix FIFO and
          pending requests to MIX) and prevents the RXB FIFOs for all LMACs from pushing data
          to the interface. Setting this bit to 0 will not reset the MIX interface.
          After MIX comes out of reset, software should clear CMR_MIX_RESET.

      - name: CMR_X2P_RESET
        bits: 2
        access: R/W
        reset: 0
        typical: 0
        description: |
          If the PKI block is reset, software also needs to reset the the X2P interface in the BGX
          by setting this bit to 1. It resets the X2P interface state in the BGX (skid FIFO and
          pending requests to PKI) and prevents the RXB FIFOs for all LMACs from pushing data
          to the interface. Setting this bit to 0 will not reset the X2P interface.
          After PKI comes out of reset, software should clear CMR_X2P_RESET.

      - name: BGX_CLK_ENABLE
        bits: 1
        access: R/W
        reset: 1
        typical: 1
        description: |
          The global clock enable for BGX.  Setting this bit will override clock enables set by the
          BGX_CMR_CONFIG[ENABLE] and BGX_CMR_CONFIG[LMAC_TYPE] register bits, essentially
          turning on clocks for the entire BGX.  Setting this bit to 0 will result in
          not overriding clock enables set by BGX_CMR_CONFIG[ENABLE] and
          BGX_CMR_CONFIG[LMAC_TYPE] register bits.

      - name: PMUX_SDS_SEL
        bits: 0
        access: R/W
        reset: 0
        typical: 1
        description: |
          The global serdes output select for BGX.  Setting this bit to 1 will select serdes output
          1 Setting this bit to 1 will select serdes output 0.


  - name: BGX(0..5)_CMR_MEM_INT
    address: 0x11800E0000010 + a*0x1000000
    bus: RSL
    description: |
      "***************************************************************************************
      BGX CMR related CSR starting here with interrupts, then later RX and TX side registers
      ***************************************************************************************
      BGX_CMR_MEM_INT = Memory Interrupt Register"
    attributes:
      rtlgen_cib: "True"
    fields:
      - name: --
        bits: 63..18
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: SMU_IN_OVERFL
        bits: 17
        access: R/W1C/H
        reset: 0
        typical: 0
        description: RX SMU INFIFO Overflow

      - name: GMP_IN_OVERFL
        bits: 16
        access: R/W1C/H
        reset: 0
        typical: 0
        description: RX GMP INFIFO Overflow

      - name: TXB_SKID_SBE
        bits: 15
        access: R/W1C/H
        reset: 0
        typical: 0
        description: TXB SKID FIFO single bit error

      - name: TXB_SKID_DBE
        bits: 14
        access: R/W1C/H
        reset: 0
        typical: 0
        description: TXB SKID FIFO double bit error

      - name: TXB_FIF_BK1_SBE
        bits: 13
        access: R/W1C/H
        reset: 0
        typical: 0
        description: TXB Main FIFO Bank1 single bit error

      - name: TXB_FIF_BK1_DBE
        bits: 12
        access: R/W1C/H
        reset: 0
        typical: 0
        description: TXB Main FIFO Bank1 double bit error

      - name: TXB_FIF_BK0_SBE
        bits: 11
        access: R/W1C/H
        reset: 0
        typical: 0
        description: TXB Main FIFO Bank0 single bit error

      - name: TXB_FIF_BK0_DBE
        bits: 10
        access: R/W1C/H
        reset: 0
        typical: 0
        description: TXB Main FIFO Bank0 double bit error

      - name: RXB_SKID_SBE
        bits: 9
        access: R/W1C/H
        reset: 0
        typical: 0
        description: RXB SKID FIFO single bit error

      - name: RXB_SKID_DBE
        bits: 8
        access: R/W1C/H
        reset: 0
        typical: 0
        description: RXB SKID FIFO double bit error

      - name: RXB_FIF_BK1_SBE1
        bits: 7
        access: R/W1C/H
        reset: 0
        typical: 0
        description: RXB Main FIFO Bank1 srf1 single bit error

      - name: RXB_FIF_BK1_DBE1
        bits: 6
        access: R/W1C/H
        reset: 0
        typical: 0
        description: RXB Main FIFO Bank1 srf1 double bit error

      - name: RXB_FIF_BK1_SBE0
        bits: 5
        access: R/W1C/H
        reset: 0
        typical: 0
        description: RXB Main FIFO Bank1 srf0 single bit error

      - name: RXB_FIF_BK1_DBE0
        bits: 4
        access: R/W1C/H
        reset: 0
        typical: 0
        description: RXB Main FIFO Bank1 srf0 double bit error

      - name: RXB_FIF_BK0_SBE1
        bits: 3
        access: R/W1C/H
        reset: 0
        typical: 0
        description: RXB Main FIFO Bank0 srf1 single bit error

      - name: RXB_FIF_BK0_DBE1
        bits: 2
        access: R/W1C/H
        reset: 0
        typical: 0
        description: RXB Main FIFO Bank0 srf1 double bit error

      - name: RXB_FIF_BK0_SBE0
        bits: 1
        access: R/W1C/H
        reset: 0
        typical: 0
        description: RXB Main FIFO Bank0 srf0 single bit error

      - name: RXB_FIF_BK0_DBE0
        bits: 0
        access: R/W1C/H
        reset: 0
        typical: 0
        description: RXB Main FIFO Bank0 srf0 double bit error


  - name: BGX(0..5)_CMR_MEM_CTRL
    address: 0x11800E0000018 + a*0x1000000
    bus: RSL
    fields:
      - name: --
        bits: 63..24
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: TXB_SKID_SYND
        bits: 23..22
        access: R/W
        reset: 0x0
        typical: 0x0
        description: Syndrom to flip and generate 1-bit/2-bits error for RXB SKID FIFO

      - name: TXB_SKID_COR_DIS
        bits: 21
        access: R/W
        reset: 0
        typical: 0
        description: ECC correction disable for the RXB SKID FIFO

      - name: TXB_FIF_BK1_SYN
        bits: 20..19
        access: R/W
        reset: 0x0
        typical: 0x0
        description: Syndrom to flip and generate 1-bit/2-bits error for TXB main Bank1

      - name: TXB_FIF_BK1_CDIS
        bits: 18
        access: R/W
        reset: 0
        typical: 0
        description: ECC corr disable for the TXB main Bank1

      - name: TXB_FIF_BK0_SYN
        bits: 17..16
        access: R/W
        reset: 0x0
        typical: 0x0
        description: Syndrom to flip and generate 1-bit/2-bits error for TXB main Bank0

      - name: TXB_FIF_BK0_CDIS
        bits: 15
        access: R/W
        reset: 0
        typical: 0
        description: ECC corr disable for the TXB main Bank0

      - name: RXB_SKID_SYND
        bits: 14..13
        access: R/W
        reset: 0x0
        typical: 0x0
        description: Syndrom to flip and generate 1-bit/2-bits error for RXB SKID FIFO

      - name: RXB_SKID_COR_DIS
        bits: 12
        access: R/W
        reset: 0
        typical: 0
        description: ECC correction disable for the RXB SKID FIFO

      - name: RXB_FIF_BK1_SYN1
        bits: 11..10
        access: R/W
        reset: 0x0
        typical: 0x0
        description: Syndrom to flip and generate 1-bit/2-bits error for RXB main Bank1 srf1

      - name: RXB_FIF_BK1_CDIS1
        bits: 9
        access: R/W
        reset: 0
        typical: 0
        description: ECC corr disable for the RXB main Bank1 srf1

      - name: RXB_FIF_BK1_SYN0
        bits: 8..7
        access: R/W
        reset: 0x0
        typical: 0x0
        description: Syndrom to flip and generate 1-bit/2-bits error for RXB main Bank1 srf0

      - name: RXB_FIF_BK1_CDIS0
        bits: 6
        access: R/W
        reset: 0
        typical: 0
        description: ECC corr disable for the RXB main Bank1 srf0

      - name: RXB_FIF_BK0_SYN1
        bits: 5..4
        access: R/W
        reset: 0x0
        typical: 0x0
        description: Syndrom to flip and generate 1-bit/2-bits error for RXB main Bank0 srf1

      - name: RXB_FIF_BK0_CDIS1
        bits: 3
        access: R/W
        reset: 0
        typical: 0
        description: ECC corr disable for the RXB main Bank0 srf1

      - name: RXB_FIF_BK0_SYN0
        bits: 2..1
        access: R/W
        reset: 0x0
        typical: 0x0
        description: Syndrom to flip and generate 1-bit/2-bits error for RXB main Bank0 srf0

      - name: RXB_FIF_BK0_CDIS0
        bits: 0
        access: R/W
        reset: 0
        typical: 0
        description: ECC corr disable for the RXB main Bank0 srf0


  - name: BGX(0..5)_CMR(0..3)_INT
    address: 0x11800E0000020 + a*0x1000000 + b*0x100000
    bus: RSL
    attributes:
      rtlgen_cib: "True"
    fields:
      - name: --
        bits: 63..3
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: PKO_NXC
        bits: 2
        access: R/W1C/H
        reset: 0
        typical: 0
        description: TX channel out-of-range from PKO Interface

      - name: OVERFLW
        bits: 1
        access: R/W1C/H
        reset: 0
        typical: 0
        description: RX Overflow

      - name: PAUSE_DRP
        bits: 0
        access: R/W1C/H
        reset: 0
        typical: 0
        description: RX Pause packet was dropped due to full RXB FIFO


  - name: BGX(0..5)_CMR(0..3)_RX_ID_MAP
    address: 0x11800E0000028 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      "**************************************************************
      BGX CMR RXB related CSR per lmac
      **************************************************************
      BGX_CMR_RX_ID_MAP = RX LMAC ID mapping for X2P/PKI"
    attributes:
      rtlgen_tie_rst_data: "True"
    fields:
      - name: --
        bits: 63..15
        access: ---
        reset: --
        typical: --
        description: Reserved for pknd expansion

      - name: RID
        bits: 14..8
        access: R/W
        reset: --
        typical: --
        description: |
          "Reassembly ID for this LMAC:
          A shared pool of 96 reassembly ids (RIDs) exists for all MACs. See
          description of RIDs in TBD.

          The RID for this LMAC must be constrained such that it does not
          overlap with any other MAC in the system. Its reset value has been
          chosen such that this condition is satisified:
          RID reset value = 4*(BGX_ID + 1) + LMAC_ID

          Changes to RID must only occur when the LMAC is quiescent (i.e. the
          LMAC receive interface is down and the RX fifo is empty)."

      - name: PKND
        bits: 7..0
        access: R/W
        reset: 0x0
        typical: --
        description: Port Kind for this LMAC.


  - name: BGX(0..5)_CMR(0..3)_RX_PAUSE_DROP_TIME
    address: 0x11800E0000030 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..16
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: PAUSE_TIME
        bits: 15..0
        access: R/W1C/H
        reset: 0x0
        typical: --
        description: Time extracted from the PAUSE packet dropped due to RXB fifo full


  - name: BGX(0..5)_CMR(0..3)_RX_STAT0
    address: 0x11800E0000038 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      Count of received packets - packets that are:
      1. not recognized as PAUSE packets
      2. not dropped due the DMAC filtering
      3. not dropped due FIFO full status
      4. not have have any other OPCODE (FCS, Length, etc).
    internal: |
      Counters will wrap.
      Cleared if lmac is disabled with BGX_CMR_CONFIG[ENABLE]=0
    attributes:
      rtlgen_soft_reset: "cmr_soft_reset[b]"
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: CNT
        bits: 47..0
        access: R/W/H
        reset: 0x0
        typical: --
        description: Count of received packets


  - name: BGX(0..5)_CMR(0..3)_RX_STAT1
    address: 0x11800E0000040 + a*0x1000000 + b*0x100000
    bus: RSL
    description: Count of octets of recieved packets
    internal: |
      Counters will wrap.
      Cleared if lmac is disabled with BGX_CMR_CONFIG[ENABLE]=0
    attributes:
      rtlgen_soft_reset: "cmr_soft_reset[b]"
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: CNT
        bits: 47..0
        access: R/W/H
        reset: 0x0
        typical: --
        description: Octet count of received packets


  - name: BGX(0..5)_CMR(0..3)_RX_STAT2
    address: 0x11800E0000048 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      Count of all packets received that were recognized as Flow Control or
      PAUSE packets.  PAUSE packets with any kind of error are counted in
      BGX_CMR_RX_STAT8(error stats register).  Pause packets can be optionally dropped or
      forwarded based on the BGX_SMU_RX_FRM_CTL[CTL_DRP] bit.  This count
      increments regardless of whether the packet is dropped.  Pause packets
      will never be counted in BGX_CMR_RX_STAT0.
    internal: |
      Counters will wrap.
      Cleared if lmac is disabled with BGX_CMR_CONFIG[ENABLE]=0
    attributes:
      rtlgen_soft_reset: "cmr_soft_reset[b]"
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: CNT
        bits: 47..0
        access: R/W/H
        reset: 0x0
        typical: --
        description: Count of received pause packets


  - name: BGX(0..5)_CMR(0..3)_RX_STAT3
    address: 0x11800E0000050 + a*0x1000000 + b*0x100000
    bus: RSL
    description: Count of octets of recieved pause and control packets
    internal: |
      Counters will wrap.
      Cleared if lmac is disabled with BGX_CMR_CONFIG[ENABLE]=0
    attributes:
      rtlgen_soft_reset: "cmr_soft_reset[b]"
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: CNT
        bits: 47..0
        access: R/W/H
        reset: 0x0
        typical: --
        description: Octet count of received pause packets


  - name: BGX(0..5)_CMR(0..3)_RX_STAT4
    address: 0x11800E0000058 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      Count of all packets received that were dropped by the dmac filter.
      Packets that match the DMAC will be dropped and counted here regardless
      of whether they were err packets.  These packets will never be counted in
      BGX_CMR_RX_STAT0.
      8B packets as the result of truncation or other means will not
      be dropped by Octeon and will never appear in this count.
    internal: |
      Counters will wrap.
      Cleared if lmac is disabled with BGX_CMR_CONFIG[ENABLE]=0
    attributes:
      rtlgen_soft_reset: "cmr_soft_reset[b]"
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: CNT
        bits: 47..0
        access: R/W/H
        reset: 0x0
        typical: --
        description: Count of filtered dmac packets


  - name: BGX(0..5)_CMR(0..3)_RX_STAT5
    address: 0x11800E0000060 + a*0x1000000 + b*0x100000
    bus: RSL
    description: Count of octets of filtered dmac packets
    internal: |
      Counters will wrap.
      Cleared if lmac is disabled with BGX_CMR_CONFIG[ENABLE]=0
    attributes:
      rtlgen_soft_reset: "cmr_soft_reset[b]"
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: CNT
        bits: 47..0
        access: R/W/H
        reset: 0x0
        typical: --
        description: Octet count of filtered dmac packets


  - name: BGX(0..5)_CMR(0..3)_RX_STAT6
    address: 0x11800E0000068 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      Count of all packets received that were dropped due to a full receive FIFO.
      It does not count any packet that is truncated at the point at the point of overflow
      and sent on to the PKI.  This counts all entire packets dropped by the FIFO for a
      given lmac regardless of dmac or pause type.
    internal: |
      Counters will wrap.
      Cleared if lmac is disabled with BGX_CMR_CONFIG[ENABLE]=0
    attributes:
      rtlgen_soft_reset: "cmr_soft_reset[b]"
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: CNT
        bits: 47..0
        access: R/W/H
        reset: 0x0
        typical: --
        description: Count of dropped packets


  - name: BGX(0..5)_CMR(0..3)_RX_STAT7
    address: 0x11800E0000070 + a*0x1000000 + b*0x100000
    bus: RSL
    description: Count of octets of packets received that were dropped due to a full receive FIFO.
    internal: |
      Counters will wrap.
      Cleared if lmac is disabled with BGX_CMR_CONFIG[ENABLE]=0
    attributes:
      rtlgen_soft_reset: "cmr_soft_reset[b]"
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: CNT
        bits: 47..0
        access: R/W/H
        reset: 0x0
        typical: --
        description: Octet count of dropped packets


  - name: BGX(0..5)_CMR(0..3)_RX_STAT8
    address: 0x11800E0000078 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      Count of all packets received with some error that were not dropped
      either due to the dmac filter or lack of room in the receive FIFO.
    internal: |
      Counters will wrap.
      Cleared if lmac is disabled with BGX_CMR_CONFIG[ENABLE]=0
    attributes:
      rtlgen_soft_reset: "cmr_soft_reset[b]"
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: CNT
        bits: 47..0
        access: R/W/H
        reset: 0x0
        typical: --
        description: Count of error packets


  - name: BGX(0..5)_CMR(0..3)_RX_BP_DROP
    address: 0x11800E0000080 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: |
      The watermark should be set considering fifo partitioning established by the
      BGX_CMR_RX_LMACS[LMACS]
      register.
    fields:
      - name: --
        bits: 63..7
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: MARK
        bits: 6..0
        access: R/W
        reset: 0x2
        typical: 0x2
        description: |
          Number of 8B cycles to reserve in the RX FIFO.
          When the FIFO exceeds this count, packets will
          be dropped and not buffered.
          MARK should typically be programmed to BGX_CMR_RX_LMACS[LMACS]+1.
          Failure to program correctly can lead to system
          instability.


  - name: BGX(0..5)_CMR(0..3)_RX_BP_ON
    address: 0x11800E0000088 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..12
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: MARK
        bits: 11..0
        access: R/W
        reset: 0x100
        typical: 0x100
        description: |
          Hiwater mark (number of 8B cycles to assert bp)
          Each register is for an individual lmac.
          BGX_CMR_RX_BP_ON(MARK) must satisfy
          BP_OFF <= BP_ON < (FIFO_SIZE - BP_DROP)
          A value of zero will immediately assert back
          pressure.
          Recommended value is 1/4th the size of the per
          lmac RX FIFO_SIZE as determined by BGX_CMR_RX_LMACS[LMACS].
          For example, with 4 lmacs of type SGMII where
          BGX_CMR_RX_LMACS[LMACS]=4, MARK=0x100(reset value)


  - name: BGX(0..5)_CMR(0..3)_RX_BP_OFF
    address: 0x11800E0000090 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..7
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: MARK
        bits: 6..0
        access: R/W
        reset: 0x10
        typical: 0x10
        description: Water mark (8B cycles to deassert backpressure)


  - name: BGX(0..5)_CMR(0..3)_RX_WEIGHT
    address: 0x11800E0000098 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..4
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: WEIGHT
        bits: 3..0
        access: R/W
        reset: 0x1
        typical: 0x1
        description: |
          For the weighted round robin algorithm in CMR RXB.
          Weight to assign for this LMAC relative to other
          LMAC weights. Defaults to round robin(non weighted
          minimum setting of 1). A setting of 0 effectively
          takes the lmac out of eligibility.


  - name: BGX(0..5)_CMR(0..3)_RX_ADR_CTL
    address: 0x11800E00000A0 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: |
      "* ALGORITHM
      Here is some pseudo code that represents the address filter behavior.
      dmac_addr_filter(uint8 prt, uint48 dmac) {
      for (lmac=0, lmac<4, lmac++) {
      if (is_bcst(dmac))                               // broadcast accept
      return (BGX_RX{lmac}_ADR_CTL[BCST_ACCEPT] ? ACCEPT : REJECT);
      if (is_mcst(dmac) & BGX_RX{lmac}_ADR_CTL[MCST_MODE] == 0)   // multicast reject
      return REJECT;
      if (is_mcst(dmac) & BGX_RX{lmac}_ADR_CTL[MCST_MODE] == 1)   // multicast accept
      return ACCEPT;
      else        // DMAC CAM filter
      cam_hit = 0;
      for (i=0; i<32; i++) {
      if (cam_mac_adr == dmac) {
      cam_hit = 1;
      break;
      }
      }
      if (cam_hit) {
      return (BGX_RX{lmac}_ADR_CTL[CAM_ACCEPT] ? ACCEPT : REJECT);
      else
      return (BGX_RX{lmac}_ADR_CTL[CAM_ACCEPT] ? REJECT : ACCEPT);
      }
      }
      }"
    fields:
      - name: --
        bits: 63..4
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: CAM_ACCEPT
        bits: 3
        access: R/W
        reset: 0
        typical: --
        description: |
          Allow or deny DMAC address filter
          0 = reject the packet on DMAC CAM address match
          1 = accept the packet on DMAC CAM address match

      - name: MCST_MODE
        bits: 2..1
        access: R/W
        reset: 0x0
        typical: --
        description: |
          Multicast Mode
          0 = Force reject all multicast packets
          1 = Force accept all multicast packets
          2 = Use the Address Filter CAM
          3 = Reserved.

      - name: BCST_ACCEPT
        bits: 0
        access: R/W
        reset: 1
        typical: --
        description: |
          Allow or deny broadcast Packets
          0 = reject all broadcast Packets
          1 = accept all broadcast Packets


  - name: BGX(0..5)_CMR(0..3)_RX_BP_STATUS
    address: 0x11800E00000A8 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..1
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: BP
        bits: 0
        access: RO/H
        reset: 0
        typical: 0
        description: |
          Per lmac backpressure status
          0=lmac is not backpressued
          1=lmac is backpressured


  - name: BGX(0..5)_CMR(0..3)_RX_LOGL_XOFF
    address: 0x11800E00000B0 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..16
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: XOFF
        bits: 15..0
        access: R/W1S/H
        reset: 0x0
        typical: 0x0
        description: |
          Together with BGX(0..5)_CMR(0..3)_RX_LOGL_XON defines type of channel backpressure to
          apply to the SMU.  Do not write when HiGig2 is enabled.
          Writing 1 sets the same physical register as that which is cleared by XON.
          An XOFF value of 1 will cause a backpressure on SMU.


  - name: BGX(0..5)_CMR(0..3)_RX_LOGL_XON
    address: 0x11800E00000B8 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..16
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: XON
        bits: 15..0
        access: R/W1C/H
        reset: 0x0
        typical: 0x0
        description: |
          Together with BGX(0..5)_CMR(0..3)_RX_LOGL_XOFF defines type of channel backpressure to
          apply.  Do not write when HiGig2 is enabled.
          Writing 1 clears the same physical register as that which is set by XOFF.
          An XON value of 1 means only PKI channel BP can cause a backpressure on SMU.


  - name: BGX(0..5)_CMR(0..3)_RX_FIFO_LEN
    address: 0x11800E00000C0 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..13
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: FIFO_LEN
        bits: 12..0
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: Per lmac fifo length. Useful for determining if fifo is empty when bringing an lmac down.


  - name: BGX(0..5)_CMR_RX_ADR(0..31)_CAM
    address: 0x11800E0000100 + a*0x1000000 + b*0x8
    bus: RSL
    description: |
      "**************************************************************
      Following regs are not per lane but shared in the BGX CMR RXB
      **************************************************************
      BGX_CMR_RX_ADR_CAM = Address Filtering CAM"
    fields:
      - name: --
        bits: 63..54
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: ID
        bits: 53..52
        access: R/W
        reset: 0x0
        typical: --
        description: |
          Logical Mac ID this DMAC CAM address will apply to
          BGX has 32 DMAC CAM entries that can be accessed
          with the BGX_CMR_RX_ADR_CAM[0..31] CSRs.
          These 32 DMAC entries can be used by any of the
          four SGMII MACs or the 10G/40G MACs using the
          these register bits. A typical configuration is to
          provide 8 CAM entries per lmac id which is
          configured using the following settings:
          lmac0 BGX_CMR_RX_ADR_CAM[0..7] ID= 2'b00
          lmac1 BGX_CMR_RX_ADR_CAM[8..15] ID= 2'b01
          lmac2 BGX_CMR_RX_ADR_CAM[16..23] ID= 2'b10
          lmac3 BGX_CMR_RX_ADR_CAM[24..31] ID= 2'b11

      - name: --
        bits: 51..49
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: EN
        bits: 48
        access: R/W
        reset: 1
        typical: --
        description: |
          CAM Entry Enable for this DMAC Address
          A value of 1 means include this address in the
          matching algorithm
          A value of 0 means dont include this address in
          matching algorigthm

      - name: ADR
        bits: 47..0
        access: R/W
        reset: 0x0
        typical: --
        description: |
          DMAC address in the CAM used for matching
          The CAM matches against unicast or multicast DMAC
          addresses.
          ALL BGX_CMR_RX_ADR_CAM[0..31] CSRs may be used
          in any of the LMAC_TYPE combinations such that any BGX
          MAC can use any of the 32 common DMAC entries.


  - name: BGX(0..5)_CMR_CHAN_MSK_AND
    address: 0x11800E0000200 + a*0x1000000
    bus: RSL
    fields:
      - name: MSK_AND
        bits: 63..0
        access: R/W
        reset: 0x0
        typical: 0x0
        description: |
          Assert physical BP when the BP channel vector
          combined with MSK_AND indicates BP as follows.
          phys_bp_msk_and =
          (CHAN_VECTOR<x:y> & MSK_AND<x:y>) == MSK_AND<x:y>
          phys_bp = phys_bp_msk_or || phys_bp_msk_and
          In single LMACS configs, x=63, y=0
          In multi LMAC configs, x/y are set as follows:
          LMAC interface0, x=15, y=0
          LMAC interface1, x=31, y=16
          LMAC interface2, x=47, y=32
          LMAC interface3, x=63, y=48


  - name: BGX(0..5)_CMR_CHAN_MSK_OR
    address: 0x11800E0000208 + a*0x1000000
    bus: RSL
    fields:
      - name: MSK_OR
        bits: 63..0
        access: R/W
        reset: 0x0
        typical: 0x0
        description: |
          Assert physical BP when the BP channel vector
          combined with MSK_OR indicates BP as follows.
          phys_bp_msk_or =
          (CHAN_VECTOR<x:y> & MSK_OR<x:y>) != 0
          phys_bp = phys_bp_msk_or || phys_bp_msk_and
          In single LMAC config, x=63, y=0
          In multi LMAC config, x/y are set as follows:
          LMAC interface0, x=15, y=0
          LMAC interface1, x=31, y=16
          LMAC interface2, x=47, y=32
          LMAC interface3, x=63, y=48


  - name: BGX(0..5)_CMR_BIST_STATUS
    address: 0x11800E0000300 + a*0x1000000
    bus: RSL
    fields:
      - name: --
        bits: 63..25
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: STATUS
        bits: 24..0
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: |
          "BIST Results.
          HW sets a bit in BIST for memory that fails
          0: bgx#.rxb.infif_gmp
          1: bgx#.rxb.infif_smu
          2: bgx#.rxb.fif_bnk00
          3: bgx#.rxb.fif_bnk01
          4: bgx#.rxb.fif_bnk10
          5: bgx#.rxb.fif_bnk11
          6: bgx#.rxb.skd_fif
          7: bgx#.rxb_mix0_fif
          8: bgx#.rxb_mix1_fif
          9: RAZ
          10: bgx#.txb_fif_bnk0
          11: bgx#.txb_fif_bnk1
          12: bgx#.txb_skd_fif
          13: bgx#.txb_mix0_fif
          14: bgx#.txb_mix1_fif
          15: RAZ
          16: RAZ
          17: RAZ
          18: RAZ
          19: RAZ
          20: RAZ
          21: RAZ
          22: RAZ
          23: RAZ
          24: RAZ"


  - name: BGX(0..5)_CMR_RX_LMACS
    address: 0x11800E0000308 + a*0x1000000
    bus: RSL
    fields:
      - name: --
        bits: 63..3
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: LMACS
        bits: 2..0
        access: R/W
        reset: 0x4
        typical: 0x4
        description: |
          "Number of LMACS: Specifies the number of LMACs that can be enabled.
          This determines the logical RX buffer size per LMAC and the maximum
          LMAC ID that can be used:
          ----------+---------------------------------------------------
          LMACS     |   RX buffer           Maximum
                    |   size per LMAC       LMAC ID
          ----------+---------------------------------------------------
          0         |   reserved
          1         |   88KB                0
          2         |   44KB                1
          3         |   22KB                2
          4         |   22KB                3
          5-7       |   reserved
          ----------+---------------------------------------------------
          Note: The maximum LMAC ID is determined by the smaller of
          BGX_CMR_RX_LMACS[LMACS] and BGX_CMR_TX_LMACS[LMACS]. The two fields
          should be set to the same value for normal operation."


  - name: BGX(0..5)_CMR_RX_OVR_BP
    address: 0x11800E0000318 + a*0x1000000
    bus: RSL
    internal: |
      BGX_CMR_RX_OVR_BP[EN<0>] must be set to one and BGX_CMR_RX_OVR_BP[BP<0>] must be
      cleared to zero (to forcibly disable HW-automatic 802.3 pause packet generation)
      with the HiGig2 Protocol when BGX_SMU_HG2_CONTROL[HG2TX_EN]=0. (The HiGig2 protocol
      is indicated by BGX_SMU_TX_CTL[HG_EN]=1 and BGX_SMU_RX_UDD_SKP[LEN]=16) HW can
      only auto-generate backpressure through HiGig2 messages (optionally, when
      BGX_SMU_HG2_CONTROL[HG2TX_EN]=1) with the HiGig2 protocol.
    fields:
      - name: --
        bits: 63..12
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: EN
        bits: 11..8
        access: R/W
        reset: 0x0
        typical: 0x0
        description: Per lmac Enable back pressure override

      - name: BP
        bits: 7..4
        access: R/W
        reset: 0x0
        typical: 0x0
        description: |
          Per lmac BackPressure status to use
          0=lmac is available
          1=lmac should be back pressured

      - name: IGN_FIFO_BP
        bits: 3..0
        access: R/W
        reset: 0x0
        typical: 0x0
        description: |
          Ignore the RX FIFO BP_ON signal when computing BP.
          CMR will not backpressure the mac due to the fifo length passing BP_ON mark.


  - name: BGX(0..5)_CMR(0..3)_TX_CHANNEL
    address: 0x11800E0000400 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      "**************************************************************
      BGX CMR TXB related CSR
      **************************************************************
      BGX_CMR_TX_CHANNEL"
    fields:
      - name: --
        bits: 63..33
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: IGN_CCRED_BP
        bits: 32
        access: R/W
        reset: 0
        typical: --
        description: |
          When set, BGX will not throttle the TX machines
          if the channel credit counters roll over.
          IGN_BP should be clear in normal operation.

      - name: MSK
        bits: 31..16
        access: R/W
        reset: 0x0
        typical: 0x0
        description: |
          BP channel mask
          BGX can completely ignore the channel BP for
          channel specified by the MSK field.  Any channel
          in which MSK == 1, will never send BP information
          to PKO.

      - name: DIS
        bits: 15..0
        access: R/W
        reset: 0x0
        typical: 0x0
        description: |
          Credit Return BP disable
          BGX stops returning channel credits for any channel
          that is backpressured.  These bits can be used to
          override that.  DIS == 1 allows channel credits to
          flow back regardless of the backpressure for that chan


  - name: BGX(0..5)_CMR(0..3)_PRT_CBFC_CTL
    address: 0x11800E0000408 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: See XOFF definition listed under BGX(0..5)_SMU(0..3)_CBFC_CTL
    fields:
      - name: --
        bits: 63..32
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: PHYS_BP
        bits: 31..16
        access: R/W
        reset: 0xffff
        typical: --
        description: |
          When BGX_SMU_CBFC_CTL[RX_EN] is set and the HW is backpressuring any
          lmacs (from either PFC/CBFC pause packets or the
          BGX_CMR_TX_OVR_BP[TX_CHAN_BP] register) and all lmacs
          indiciated by PHYS_BP are backpressured, simulate
          physical backpressure by defering all packets on
          the transmitter.

      - name: --
        bits: 15..0
        access: ---
        reset: --
        typical: --
        description: Reserved.


  - name: BGX(0..5)_CMR(0..3)_TX_HG2_STATUS
    address: 0x11800E0000410 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..32
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: XOF
        bits: 31..16
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: |
          16 bit xof back pressure vector from HiGig2 msg pkt
          or from PFC/CBFC packets.
          Non-zero only when logical back pressure is active
          All bits will be 0 when LGTIM2GO=0

      - name: LGTIM2GO
        bits: 15..0
        access: RO/H
        reset: 0x0
        typical: --
        description: |
          Logical packet flow back pressure time remaining
          Initial value set from xof time field of HiGig2
          message packet received or a function of the
          enabled and current timers for PFC/CBFC packets.
          Non-zero only when logical back pressure is active


  - name: BGX(0..5)_CMR(0..3)_TX_FIFO_LEN
    address: 0x11800E0000418 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..14
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: LMAC_IDLE
        bits: 13
        access: RO/H
        reset: 0
        typical: 0
        description: |
          Idle signal to identify when all credits and other pipeline buffers are also cleared out
          and lmac can be considered IDLE in the BGX CMR TX.

      - name: FIFO_LEN
        bits: 12..0
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: |
          Per lmac TXB main fifo length. Useful for determining if main fifo is empty when bringing
          an lmac down.


  - name: BGX(0..5)_CMR(0..3)_TX_OVR_BP
    address: 0x11800E0000420 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: This register provides per channel back pressure control per lmac
    fields:
      - name: --
        bits: 63..16
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: TX_CHAN_BP
        bits: 15..0
        access: R/W
        reset: 0x0
        typical: 0x0
        description: |
          Per channel BP sent to PKO
          0=Channel is available
          1=Channel should be back pressured


  - name: BGX(0..5)_CMR(0..3)_TX_CTL
    address: 0x11800E0000500 + a*0x1000000 + b*0x100000
    bus: RSL
    description: BGX_CMR_TX_CTL = TX Control register
    fields:
      - name: --
        bits: 63..3
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: CORRUPT
        bits: 2
        access: R/W
        reset: 1
        typical: 1
        description: |
          Packets sent from PKO with the ERR wire asserted will be corrupted by
          the transmitter if CORRUPT[lmac] is set.
          Corruption means that BGX will use /E/ to terminate packet, instead of /T/
          Per lmac error propagation as follows:
           0=Never corrupt packets
           1=Corrupt packets with ERR

      - name: XSDEF_EN
        bits: 1
        access: R/W
        reset: 1
        typical: 1
        description: |
          Enables the excessive deferral check for stats
          and interrupts
          (SGMII/1000Base-X half-duplex only)

      - name: XSCOL_EN
        bits: 0
        access: R/W
        reset: 1
        typical: 1
        description: |
          Enables the excessive collision check for stats
          and interrupts
          (SGMII/1000Base-X half-duplex only)


  - name: BGX(0..5)_CMR(0..3)_TX_STAT0
    address: 0x11800E0000508 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: |
      not cleared on read.  Cleared on a write with 0x0.
      Counters will wrap.
      Cleared if lmac is disabled with BGX_CMR_CONFIG[ENABLE]=0
    attributes:
      rtlgen_soft_reset: "cmr_soft_reset[b]"
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: XSCOL
        bits: 47..0
        access: R/W/H
        reset: 0x0
        typical: --
        description: |
          Number of packets dropped (never successfully
          sent) due to excessive collision.  Defined by
          BGX_GMP_GMI_TX_COL_ATTEMPT[LIMIT].
          (SGMII/1000Base-X half-duplex only)


  - name: BGX(0..5)_CMR(0..3)_TX_STAT1
    address: 0x11800E0000510 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: |
      not cleared on read.  Cleared on a write with 0x0.
      Counters will wrap.
      Cleared if lmac is disabled with BGX_CMR_CONFIG[ENABLE]=0
    attributes:
      rtlgen_soft_reset: "cmr_soft_reset[b]"
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: XSDEF
        bits: 47..0
        access: R/W/H
        reset: 0x0
        typical: --
        description: |
          Number of packets dropped (never successfully
          sent) due to excessive deferal
          (SGMII/1000Base-X half-duplex only)


  - name: BGX(0..5)_CMR(0..3)_TX_STAT2
    address: 0x11800E0000518 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: |
      not cleared on read.  Cleared on a write with 0x0.
      Counters will wrap.
      Cleared if lmac is disabled with BGX_CMR_CONFIG[ENABLE]=0
    attributes:
      rtlgen_soft_reset: "cmr_soft_reset[b]"
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: MCOL
        bits: 47..0
        access: R/W/H
        reset: 0x0
        typical: --
        description: |
          Number of packets sent with multiple collisions
          but < BGX_GMP_GMI_TX_COL_ATTEMPT[LIMIT].
          (SGMII/1000Base-X half-duplex only)


  - name: BGX(0..5)_CMR(0..3)_TX_STAT3
    address: 0x11800E0000520 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: |
      not cleared on read.  Cleared on a write with 0x0.
      Counters will wrap.
      Cleared if lmac is disabled with BGX_CMR_CONFIG[ENABLE]=0
    attributes:
      rtlgen_soft_reset: "cmr_soft_reset[b]"
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: SCOL
        bits: 47..0
        access: R/W/H
        reset: 0x0
        typical: --
        description: |
          Number of packets sent with a single collision
          (SGMII/1000Base-X half-duplex only)


  - name: BGX(0..5)_CMR(0..3)_TX_STAT4
    address: 0x11800E0000528 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: |
      Octect counts are the sum of all data transmitted on the wire including
      packet data, pad bytes, fcs bytes, pause bytes, and jam bytes.  The octect
      counts do not include PREAMBLE byte or EXTEND cycles.
      not cleared on read.  Cleared on a write with 0x0.
      Counters will wrap.
      Cleared if lmac is disabled with BGX_CMR_CONFIG[ENABLE]=0
    attributes:
      rtlgen_soft_reset: "cmr_soft_reset[b]"
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: OCTS
        bits: 47..0
        access: R/W/H
        reset: 0x0
        typical: --
        description: |
          Number of total octets sent on the interface.
          Does not count octets from frames that were
          truncated due to collisions in halfdup mode.


  - name: BGX(0..5)_CMR(0..3)_TX_STAT5
    address: 0x11800E0000530 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: |
      not cleared on read.  Cleared on a write with 0x0.
      Counters will wrap.
      Cleared if lmac is disabled with BGX_CMR_CONFIG[ENABLE]=0
    attributes:
      rtlgen_soft_reset: "cmr_soft_reset[b]"
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: PKTS
        bits: 47..0
        access: R/W/H
        reset: 0x0
        typical: --
        description: |
          Number of total frames sent on the interface.
          Does not count frames that were truncated due to
          collisions in halfdup mode.


  - name: BGX(0..5)_CMR(0..3)_TX_STAT6
    address: 0x11800E0000538 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: |
      Packet length is the sum of all data transmitted on the wire for the given
      packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
      bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
      not cleared on read.  Cleared on a write with 0x0.
      Counters will wrap.
      Cleared if lmac is disabled with BGX_CMR_CONFIG[ENABLE]=0
    attributes:
      rtlgen_soft_reset: "cmr_soft_reset[b]"
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: HIST0
        bits: 47..0
        access: R/W/H
        reset: 0x0
        typical: --
        description: |
          Number of packets sent with an octet count
          of < 64.


  - name: BGX(0..5)_CMR(0..3)_TX_STAT7
    address: 0x11800E0000540 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: |
      Packet length is the sum of all data transmitted on the wire for the given
      packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
      bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
      not cleared on read.  Cleared on a write with 0x0.
      Counters will wrap.
      Cleared if lmac is disabled with BGX_CMR_CONFIG[ENABLE]=0
    attributes:
      rtlgen_soft_reset: "cmr_soft_reset[b]"
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: HIST1
        bits: 47..0
        access: R/W/H
        reset: 0x0
        typical: --
        description: |
          Number of packets sent with an octet count
          of 64.


  - name: BGX(0..5)_CMR(0..3)_TX_STAT8
    address: 0x11800E0000548 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: |
      Packet length is the sum of all data transmitted on the wire for the given
      packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
      bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
      not cleared on read.  Cleared on a write with 0x0.
      Counters will wrap.
      Cleared if lmac is disabled with BGX_CMR_CONFIG[ENABLE]=0
    attributes:
      rtlgen_soft_reset: "cmr_soft_reset[b]"
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: HIST2
        bits: 47..0
        access: R/W/H
        reset: 0x0
        typical: --
        description: |
          Number of packets sent with an octet count
          of > 64 and < 128.


  - name: BGX(0..5)_CMR(0..3)_TX_STAT9
    address: 0x11800E0000550 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: |
      Packet length is the sum of all data transmitted on the wire for the given
      packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
      bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
      not cleared on read.  Cleared on a write with 0x0.
      Counters will wrap.
      Cleared if lmac is disabled with BGX_CMR_CONFIG[ENABLE]=0
    attributes:
      rtlgen_soft_reset: "cmr_soft_reset[b]"
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: HIST3
        bits: 47..0
        access: R/W/H
        reset: 0x0
        typical: --
        description: |
          Number of packets sent with an octet count
          between 128 and 255 inclusive.


  - name: BGX(0..5)_CMR(0..3)_TX_STAT10
    address: 0x11800E0000558 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: |
      Packet length is the sum of all data transmitted on the wire for the given
      packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
      bytes.  The octet counts do not include PREAMBLE byte or EXTEND cycles.
      not cleared on read.  Cleared on a write with 0x0.
      Counters will wrap.
      Cleared if lmac is disabled with BGX_CMR_CONFIG[ENABLE]=0
    attributes:
      rtlgen_soft_reset: "cmr_soft_reset[b]"
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: HIST4
        bits: 47..0
        access: R/W/H
        reset: 0x0
        typical: --
        description: |
          Number of packets sent with an octet count
          between 256 and 511 inclusive.


  - name: BGX(0..5)_CMR(0..3)_TX_STAT11
    address: 0x11800E0000560 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: |
      Packet length is the sum of all data transmitted on the wire for the given
      packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
      bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
      not cleared on read.  Cleared on a write with 0x0.
      Counters will wrap.
      Cleared if lmac is disabled with BGX_CMR_CONFIG[ENABLE]=0
    attributes:
      rtlgen_soft_reset: "cmr_soft_reset[b]"
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: HIST5
        bits: 47..0
        access: R/W/H
        reset: 0x0
        typical: --
        description: |
          Number of packets sent with an octet count
          between 512 and 1023 inclusive.


  - name: BGX(0..5)_CMR(0..3)_TX_STAT12
    address: 0x11800E0000568 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: |
      Packet length is the sum of all data transmitted on the wire for the given
      packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
      bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
      not cleared on read.  Cleared on a write with 0x0.
      Counters will wrap.
      Cleared if lmac is disabled with BGX_CMR_CONFIG[ENABLE]=0
    attributes:
      rtlgen_soft_reset: "cmr_soft_reset[b]"
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: HIST6
        bits: 47..0
        access: R/W/H
        reset: 0x0
        typical: --
        description: |
          Number of packets sent with an octet count
          between 1024 and 1518 inclusive.


  - name: BGX(0..5)_CMR(0..3)_TX_STAT13
    address: 0x11800E0000570 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: |
      Packet length is the sum of all data transmitted on the wire for the given
      packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
      bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
      not cleared on read.  Cleared on a write with 0x0.
      Counters will wrap.
      Cleared if lmac is disabled with BGX_CMR_CONFIG[ENABLE]=0
    attributes:
      rtlgen_soft_reset: "cmr_soft_reset[b]"
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: HIST7
        bits: 47..0
        access: R/W/H
        reset: 0x0
        typical: --
        description: |
          Number of packets sent with an octet count
          of > 1518.


  - name: BGX(0..5)_CMR(0..3)_TX_STAT14
    address: 0x11800E0000578 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: |
      not cleared on read.  Cleared on a write with 0x0.
      Counters will wrap.
      Note, BGX determines if the packet is MCST or BCST from the DMAC of the
      packet.  BGX assumes that the DMAC lies in the first 6 bytes of the packet
      as per the 802.3 frame definition.  If the system requires additional data
      before the L2 header, then the MCST and BCST counters may not reflect
      reality and should be ignored by software.
      Cleared if lmac is disabled with BGX_CMR_CONFIG[ENABLE]=0
    attributes:
      rtlgen_soft_reset: "cmr_soft_reset[b]"
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: BCST
        bits: 47..0
        access: R/W/H
        reset: 0x0
        typical: --
        description: |
          Number of packets sent to broadcast DMAC.
          Does not include MCST packets.


  - name: BGX(0..5)_CMR(0..3)_TX_STAT15
    address: 0x11800E0000580 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: |
      not cleared on read.  Cleared on a write with 0x0.
      Counters will wrap.
      Note, BGX determines if the packet is MCST or BCST from the DMAC of the
      packet.  BGX assumes that the DMAC lies in the first 6 bytes of the packet
      as per the 802.3 frame definition.  If the system requires additional data
      before the L2 header, then the MCST and BCST counters may not reflect
      reality and should be ignored by software.
      Cleared if lmac is disabled with BGX_CMR_CONFIG[ENABLE]=0
    attributes:
      rtlgen_soft_reset: "cmr_soft_reset[b]"
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: MCST
        bits: 47..0
        access: R/W/H
        reset: 0x0
        typical: --
        description: |
          Number of packets sent to multicast DMAC.
          Does not include BCST packets.


  - name: BGX(0..5)_CMR(0..3)_TX_STAT16
    address: 0x11800E0000588 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: |
      not cleared on read.  Cleared on a write with 0x0.
      Counters will wrap.
      Cleared if lmac is disabled with BGX_CMR_CONFIG[ENABLE]=0
    attributes:
      rtlgen_soft_reset: "cmr_soft_reset[b]"
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: UNDFLW
        bits: 47..0
        access: R/W/H
        reset: 0x0
        typical: --
        description: Number of underflow packets


  - name: BGX(0..5)_CMR(0..3)_TX_STAT17
    address: 0x11800E0000590 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: |
      not cleared on read.  Cleared on a write with 0x0.
      Counters will wrap.
      Cleared if lmac is disabled with BGX_CMR_CONFIG[ENABLE]=0
    attributes:
      rtlgen_soft_reset: "cmr_soft_reset[b]"
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: CTL
        bits: 47..0
        access: R/W/H
        reset: 0x0
        typical: --
        description: |
          Number of Control packets (PAUSE flow control)
          generated by BGX.  It does not include control
          packets forwarded or generated by the PP's.
          CTL will count the number of generated PFC frames.
          CTL will not track the number of generated HG2
          messages.


  - name: BGX(0..5)_CMR_TX_LMACS
    address: 0x11800E0001000 + a*0x1000000
    bus: RSL
    description: |
      "**************************************************************
      Following regs are not per lane but shared in the BGX CMR TXB
      **************************************************************
      BGX_CMR_TX_LMACS = Number of TX lmacs"
    internal: |
      Number of lmacs allowed on the TX interface. The value is important for defining the
      partitioning of the transmit fifo
    fields:
      - name: --
        bits: 63..3
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: LMACS
        bits: 2..0
        access: R/W
        reset: 0x4
        typical: 0x4
        description: |
          "Number of LMACS: Specifies the number of LMACs that can be enabled.
          This determines the logical TX buffer size per LMAC and the maximum
          LMAC ID that can be used:
          ----------+---------------------------------------------------
          LMACS     |   TX buffer           Maximum
                    |   size per LMAC       LMAC ID
          ----------+---------------------------------------------------
          0         |   reserved
          1         |   40KB                0
          2         |   20KB                1
          3         |   10KB                2
          4         |   10KB                3
          5-7       |   reserved
          ----------+---------------------------------------------------
          Note: The maximum LMAC ID is determined by the smaller of
          BGX_CMR_RX_LMACS[LMACS] and BGX_CMR_TX_LMACS[LMACS]. The two fields
          should be set to the same value for normal operation."


  - name: BGX(0..5)_CMR_NXC_ADR
    address: 0x11800E0001018 + a*0x1000000
    bus: RSL
    fields:
      - name: --
        bits: 63..14
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: LMAC_ID
        bits: 13..12
        access: RO/H
        reset: 0x0
        typical: --
        description: Logged LMAC_ID associated with NXC exceptions

      - name: CHANNEL
        bits: 11..0
        access: RO/H
        reset: 0x0
        typical: --
        description: Logged channel for NXC exceptions


  - name: BGX(0..5)_CMR_BAD
    address: 0x11800E0001020 + a*0x1000000
    bus: RSL
    fields:
      - name: --
        bits: 63..1
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: RXB_NXL
        bits: 0
        access: R/W1C/H
        reset: 0
        typical: 0
        description: Receive side lmac_id > BGX_CMR_RX_LMACS


  - name: BGX(0..5)_SPU(0..3)_CONTROL1
    address: 0x11800E0010000 + a*0x1000000 + b*0x100000
    bus: RSL
    description: PCS control 1
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: --
        bits: 63..16
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: RESET
        bits: 15
        access: R/W1S/H
        reset: 1
        typical: 0
        description: |
          "Reset:
          Writing a 1 to this bit or to the AN_RESET bit in register
          AN_CONTROL resets the logical PCS (LPCS), sets the 802.3 PCS, FEC
          and AN registers for the LPCS to their default states, and resets
          the associated serdes lanes. It takes up to 32 sclk cycles to reset
          the LPCS, after which this bit is automatically cleared."

      - name: LOOPBCK
        bits: 14
        access: R/W
        reset: 0
        typical: 0
        description: |
          Loopback:
          TX to RX Loopback Enable: When set, transmit data for each serdes
          lane is looped back as receive data.

      - name: SPDSEL1
        bits: 13
        access: RO
        reset: 1
        typical: 1
        description: |
          Speed Select 1: Always 1.

      - name: --
        bits: 12
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: LO_PWR
        bits: 11
        access: R/W
        reset: 1
        typical: 0
        description: |
          "Low Power:
          When set, the Logical PCS is disabled (overriding the ENABLE bit in
          the associated BGX_CMR_CONFIG register in the CMR sub-block), and
          the serdes lanes associated with the LPCS are reset."

      - name: --
        bits: 10..7
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: SPDSEL0
        bits: 6
        access: RO
        reset: 1
        typical: 1
        description: |
          Speed Select 0: Always 1.

      - name: SPD
        bits: 5..2
        access: RO
        reset: 0x0
        typical: 0x0
        description: |
          "Speed selection:
          Note that this is a read-only field rather than read/write as
          specified in 802.3. The Logical PCS speed is actually configured by
          the LMAC_TYPE field in the associated BGX_CMR_CONFIG register in
          the CMR sub-block. The Read values returned by this field are as
          follows:
          ----------+---------------------------------------------------
          LMAC_TYPE |   Speed       SPD Read Value      Comment
          ----------+---------------------------------------------------
          XAUI      |   10G/20G     0x0                 20G if DXAUI
          RXAUI     |   10G         0x0
          10G_R     |   10G         0x0
          40G_R     |   40G         0x3
          Other     |   -           X
          ----------+---------------------------------------------------"

      - name: --
        bits: 1..0
        access: ---
        reset: --
        typical: --
        description: Reserved.


  - name: BGX(0..5)_SPU(0..3)_STATUS1
    address: 0x11800E0010008 + a*0x1000000 + b*0x100000
    bus: RSL
    description: PCS status 1
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: --
        bits: 63..8
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: FLT
        bits: 7
        access: RO/H
        reset: 0
        typical: 0
        description: |
          Fault:
          1 = Fault condition detected, 0 = No fault condition detected. This
          bit is a logical OR of the XMTFLT and RCVFLT bits in STATUS2.

      - name: --
        bits: 6..3
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: RCV_LNK
        bits: 2
        access: R/W1S/H
        reset: 0
        typical: 1
        description: |
          "PCS Receive Link Status:
          1 = Receive Link up, 0 = Receive Link down. Latching Low bit; stays
          clear until a 1 is written by software. For a BASE-X logical PCS type
          (LMAC_TYPE = XAUI or RXAUI in the associated BGX_CMR_CONFIG register
          in the CMR sub-block), this is a latching low version of the ALIGND
          bit in register BX_STATUS. For a BASE-R logical PCS type (LMAC_TYPE =
          10G_R or 40G_R), this is a latching low version of the RCV_LNK bit in
          register BR_STATUS1.
          Note that in order to avoid read side effects, this is implemented as
          a write-1-to-set bit, rather than latching low read-only as specified
          in 802.3."

      - name: LPABLE
        bits: 1
        access: RO
        reset: 1
        typical: 1
        description: |
          Low-power ability:
          Always returns 1 to indicate that the LPCS supports low power mode.

      - name: --
        bits: 0
        access: ---
        reset: --
        typical: --
        description: Reserved.


  - name: BGX(0..5)_SPU(0..3)_SPD_ABIL
    address: 0x11800E0010010 + a*0x1000000 + b*0x100000
    bus: RSL
    description: PCS speed ability
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: --
        bits: 63..4
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: HUNDREDGB
        bits: 3
        access: RO
        reset: 0
        typical: 0
        description: |
          100G capable: Always 0.

      - name: FORTYGB
        bits: 2
        access: RO
        reset: 1
        typical: 1
        description: |
          40G capable: Always 1.

      - name: TENPASST
        bits: 1
        access: RO
        reset: 0
        typical: 0
        description: |
          10PASS-TS/2BASE-TL capable: Always 0.

      - name: TENGB
        bits: 0
        access: RO
        reset: 1
        typical: 1
        description: |
          10G capable: Always 1.


  - name: BGX(0..5)_SPU(0..3)_CONTROL2
    address: 0x11800E0010018 + a*0x1000000 + b*0x100000
    bus: RSL
    description: PCS control 2
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: --
        bits: 63..3
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: PCS_TYPE
        bits: 2..0
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: |
          "PCS type selection:
          Note that this is a read-only field rather than read/write as
          specified in 802.3. The Logical PCS speed is actually configured by
          the LMAC_TYPE field in the associated BGX_CMR_CONFIG register in
          the CMR sub-block. The Read values returned by this field are as
          follows:
          ----------+------------------------------------------
          LMAC_TYPE |   PCS_TYPE          Comment
          |   Read Value
          ----------+------------------------------------------
          XAUI      |   0x1               10GBASE-X PCS type
          RXAUI     |   0x1               10GBASE-X PCS type
          10G_R     |   0x0               10GBASE-R PCS type
          40G_R     |   0x4               40GBASE-R PCS type
          Other     |   Undefined         Reserved
          ----------+------------------------------------------"


  - name: BGX(0..5)_SPU(0..3)_STATUS2
    address: 0x11800E0010020 + a*0x1000000 + b*0x100000
    bus: RSL
    description: PCS status 2
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: --
        bits: 63..16
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: DEV
        bits: 15..14
        access: RO
        reset: 0x2
        typical: 0x2
        description: |
          Device Present:
          Always returns 0x2 to indicate device present at this address.

      - name: --
        bits: 13..12
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: XMTFLT
        bits: 11
        access: RO
        reset: 0
        typical: 0
        description: |
          Transmit Fault: The SPU never sets this bit. Always returns 0.

      - name: RCVFLT
        bits: 10
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          "Receive Fault.
          Latching High bit; stays set until a 1 is written by software.
          Note that in order to avoid read side effects, this is implemented as
          a write-1-to-clear bit, rather than latching high read-only as
          specified in 802.3."

      - name: --
        bits: 9..6
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: HUNDREDGB_R
        bits: 5
        access: RO
        reset: 0
        typical: 0
        description: |
          100GBASE-R capable: Always 0.

      - name: FORTYGB_R
        bits: 4
        access: RO
        reset: 1
        typical: 1
        description: |
          40GBASE-R capable: Always 1.

      - name: TENGB_T
        bits: 3
        access: RO
        reset: 0
        typical: 0
        description: |
          10GBASE-T capable: Always 0.

      - name: TENGB_W
        bits: 2
        access: RO
        reset: 0
        typical: 0
        description: |
          10GBASE-W capable: Always 0.

      - name: TENGB_X
        bits: 1
        access: RO
        reset: 1
        typical: 1
        description: |
          10GBASE-X capable: Always 1.

      - name: TENGB_R
        bits: 0
        access: RO
        reset: 1
        typical: 1
        description: |
          10GBASE-R capable: Always 1.


  - name: BGX(0..5)_SPU(0..3)_BX_STATUS
    address: 0x11800E0010028 + a*0x1000000 + b*0x100000
    bus: RSL
    description: 10GBASE-X PCS status
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: --
        bits: 63..13
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: ALIGND
        bits: 12
        access: RO/H
        reset: 0
        typical: 1
        description: |
          10GBASE-X lane alignment status:
          1=Receive lanes aligned, 0=Receive lanes not aligned.

      - name: PATTST
        bits: 11
        access: RO
        reset: 0
        typical: 0
        description: |
          Pattern testing ability:
          Always 0; 10GBASE-X pattern testing not supported.

      - name: --
        bits: 10..4
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: LSYNC
        bits: 3..0
        access: RO/H
        reset: 0x0
        typical: 0xf
        description: |
          Lane sync:
          BASE-X lane synchronization status for PCS lanes 3-0. Each bit is
          set when the associated lane is code-group synchonized, and clear
          otherwise. If the PCS type is RXAUI (LMAC_TYPE = RXAUI in the
          associated BGX_CMR_CONFIG register in the CMR sub-block), then
          only lanes 1-0 are valid.


  - name: BGX(0..5)_SPU(0..3)_BR_STATUS1
    address: 0x11800E0010030 + a*0x1000000 + b*0x100000
    bus: RSL
    description: BASE-R PCS status 1
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: --
        bits: 63..13
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: RCV_LNK
        bits: 12
        access: RO/H
        reset: 0
        typical: 1
        description: |
          BASE-R receive link status
          1 = BASE-R PCS receive link up 0 = BASE-R PCS receive link down.
          This bit is a reflection of the PCS_status variable defined in 802.3
          sections 49.2.14.1 and 82.3.1.

      - name: --
        bits: 11..4
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: PRBS9
        bits: 3
        access: RO
        reset: 0
        typical: 0
        description: |
          10GBASE-R PRBS9 pattern testing ability. Always 0; PRBS9 pattern
          testing not supported.

      - name: PRBS31
        bits: 2
        access: RO
        reset: 0
        typical: 0
        description: |
          10GBASE-R PRBS31 pattern testing ability. Always 0; PRBS31 pattern
          testing not supported.

      - name: HI_BER
        bits: 1
        access: RO/H
        reset: 0
        typical: 0
        description: |
          BASE-R PCS high Bit Error Rate
          Returns 1 to indicate that the 64B/66B receiver is detecting a BER of
          >= 10.4, and returns 0 otherwise. This bit is a direct reflection of
          the state of the hi_ber variable in the 64B/66B state diagram and is
          defined in 802.3 sections 49.2.13.2.2 and 82.2.18.2.2.

      - name: BLK_LOCK
        bits: 0
        access: RO/H
        reset: 0
        typical: 0
        description: |
          "BASE-R PCS block lock
          Returns 1 to indicate that the 64B/66B receiver for BASE-R has
          achieved block lock, and returns 0 otherwise. This bit is a direct
          reflection of the state of the block_lock variable in the 64B/66B
          state diagram and is defined in 802.3 sections 49.2.13.2.2 and
          82.2.18.2.2.  For a multi-lane logical PCS (i.e. 40GBASE-R), this bit
          indicates that the receiver has both block lock and alignment for all
          lanes and is identical to the ALIGND bit in BR_ALGN_STATUS."


  - name: BGX(0..5)_SPU(0..3)_BR_STATUS2
    address: 0x11800E0010038 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      "BASE-R PCS status 2
      This register implements a combination of the following 802.3 registers: BASE-R PCS
      status 2 (MDIO address 3.33), BASE-R BER high order counter (MDIO address 3.44),
      and Errored blocks high order counter (MDIO address 3.45). The relative locations
      of some fields have been moved from 802.3 in order to make the register layout more
      software friendly: the BER counter high order and low order bits from 3.44 and
      3.33 have been combined into the contiguous 22-bit BER_CNT field; likewise, the
      errored blocks counter high order and low order bits from 3.45 have been combined
      into the contiguous 22-bit ERR_BLKS field."
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: --
        bits: 63..62
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: ERR_BLKS
        bits: 61..40
        access: RC/W/H
        reset: 0x0
        typical: 0x0
        description: |
          Errored blocks counter
          This is the BASE-R errored blocks counter as defined by the
          errored_block_count variable specified in 802.3 sections 49.2.14.2
          and 82.2.18.2.4. It increments by 1 on each block for which the
          BASE-R receive state machine, specified in 802.3 diagrams 49-15 and
          82-15, enters the RX_E state. Back-to-back blocks in the RX_E state
          are counted as transitions from RX_E to RX_E and keep incrementing
          the counter. The counter is reset to all zeros after this register
          is read by software, and is held at all ones in case of overflow.
          The reset operation takes precedence over the increment operation;
          if the register is read on the same clock cycle an increment
          operation, the counter will be reset to all zeros and the increment
          operation will be lost.  This field is writable for test purposes,
          rather than read-only as specified in 802.3.

      - name: --
        bits: 39..38
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: BER_CNT
        bits: 37..16
        access: RC/W/H
        reset: 0x0
        typical: 0x0
        description: |
          Bit Error Rate counter
          This is the BASE-R BER counter as defined by the ber_count variable
          in 802.3 sections 49.2.14.2 and 82.2.18.2.4. The counter is reset to
          all zeros after this register is read by software, and is held at
          all ones in case of overflow. The reset operation takes precedence
          over the increment operation; if the register is read on the same
          clock cycle an increment operation, the counter will be reset to all
          zeros and the increment operation will be lost.
          This field is writable for test purposes, rather than read-only as
          specified in 802.3.

      - name: LATCHED_LOCK
        bits: 15
        access: R/W1S/H
        reset: 0
        typical: 0
        description: |
          "Latched block lock:
          Returns 1 to indicate that the 64B/66B receiver for BASE-R has
          achieved block lock, and returns 0 otherwise. This is a Latching Low
          version of the BLK_LOCK bit in BR_STATUS1; stays clear until a 1 is
          written by software.
          Note that in order to avoid read side effects, this is implemented as
          a write-1-to-set bit, rather than latching low read-only as specified
          in 802.3."

      - name: LATCHED_BER
        bits: 14
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          "Latched high Bit Error Rate:
          Returns 1 to indicate that the 64B/66B receiver is detecting a high
          BER and returns 0 otherwise. This is a Latching High version of the
          HI_BER bit in BR_STATUS1; stays set until a 1 is written by software.
          Note that in order to avoid read side effects, this is implemented as
          a write-1-to-clear bit, rather than latching high read-only as
          specified in 802.3."

      - name: --
        bits: 13..0
        access: ---
        reset: --
        typical: --
        description: Reserved.


  - name: BGX(0..5)_SPU(0..3)_BR_TP_CONTROL
    address: 0x11800E0010040 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      "BASE-R PCS test pattern control:
      Refer to the test pattern methodology described in 802.3 sections 49.2.8 and 82.2.10."
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: --
        bits: 63..8
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: SCRAMBLE_TP
        bits: 7
        access: R/W
        reset: 0
        typical: 0
        description: |
          Select scrambled idle test pattern
          This bit selects the transmit test pattern used when TX_TP_EN is set
          in this register:
          1: Scrambled idle test pattern, 0: Square wave test pattern.

      - name: PRBS9_TX
        bits: 6
        access: RO
        reset: 0
        typical: 0
        description: |
          10GBASE-R PRBS9 TP transmit enable. Always 0; PRBS9 pattern testing
          not supported.

      - name: PRBS31_RX
        bits: 5
        access: RO
        reset: 0
        typical: 0
        description: |
          10GBASE-R PRBS31 TP receive enable. Always 0; PRBS31 pattern testing
          not supported.

      - name: PRBS31_TX
        bits: 4
        access: RO
        reset: 0
        typical: 0
        description: |
          10GBASE-R PRBS31 TP transmit enable. Always 0; PRBS31 pattern
          testing not supported.

      - name: TX_TP_EN
        bits: 3
        access: R/W
        reset: 0
        typical: 0
        description: Transmit test pattern enable

      - name: RX_TP_EN
        bits: 2
        access: R/W
        reset: 0
        typical: 0
        description: |
          Receive test pattern enable
          The only supported receive test pattern is the scrambled idle test
          pattern. Setting this bit enables checking of that receive pattern.

      - name: TP_SEL
        bits: 1
        access: RO
        reset: 1
        typical: 1
        description: |
          Square v/s PRBS test pattern select
          Always 1 to select square wave test pattern; PRBS test patterns are
          not supported.

      - name: DP_SEL
        bits: 0
        access: RO
        reset: 0
        typical: 0
        description: |
          Data pattern select
          Always 0; PRBS test patterns are not supported.


  - name: BGX(0..5)_SPU(0..3)_BR_TP_ERR_CNT
    address: 0x11800E0010048 + a*0x1000000 + b*0x100000
    bus: RSL
    description: BASE-R PCS test pattern error counter
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: --
        bits: 63..16
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: ERR_CNT
        bits: 15..0
        access: RC/W/H
        reset: 0x0
        typical: 0x0
        description: |
          Error Counter
          The test pattern error counter is a sixteen bit counter that contains
          the number of errors received during a pattern test. These bits are
          reset to all zeros when this register is read by software, and they
          are  held at all ones in the case of overflow. The test pattern
          methodology is described in 802.3 sections 49.2.12 and 82.2.10. This
          counter will count either block errors or bit errors dependent on
          the test mode (see 49.2.12). The reset operation takes precedence
          over the increment operation; if the register is read on the same
          clock cycle an increment operation, the counter will be reset to all
          zeros and the increment operation will be lost.
          This field is writable for test purposes, rather than read-only as
          specified in 802.3.


  - name: BGX(0..5)_SPU(0..3)_BR_ALGN_STATUS
    address: 0x11800E0010050 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      "Multi-lane BASE-R PCS alignment status:
      This register implements the 802.3 Multi-lane BASE-R PCS alignment status 1-4
      registers (3.50-3.53). The register is only valid when the logical PCS type is
      40GBASE-R (LMAC_TYPE = 40G_R in the associated BGX_CMR_CONFIG register in the
      CMR sub-block), and always returns 0 for all other LPCS types. 802.3 bits that are
      not applicable to 40GBASE-R (i.e. status bits for PCS lanes 19-4) are not
      implemented and marked as reserved. PCS lanes 3-0 are valid and are mapped to
      physical serdes lanes based on the programming of the LANE_TO_SDS field in
      BGX_CMR_CONFIG."
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: --
        bits: 63..36
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: MARKER_LOCK
        bits: 35..32
        access: RO/H
        reset: 0x0
        typical: 0xf
        description: Marker locked status for PCS lanes 3-0

      - name: --
        bits: 31..13
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: ALIGND
        bits: 12
        access: RO/H
        reset: 0
        typical: 1
        description: |
          All lanes locked & aligned:
          This bit returns 1 when the logical PCS has locked and aligned all
          associated receive lanes, and returns 0 otherwise. For all other PCS
          types, this bit always returns 0.

      - name: --
        bits: 11..4
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: BLOCK_LOCK
        bits: 3..0
        access: RO/H
        reset: 0x0
        typical: 0xf
        description: Block lock status for PCS lanes 3-0


  - name: BGX(0..5)_SPU(0..3)_BR_BIP_ERR_CNT
    address: 0x11800E0010058 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      "40GBASE-R Bit Interleaved Parity error counters
      This register implements the 802.3 BIP error counter registers for PCS
      lanes 0-3 (3.200-3.203). The register is only valid when the logical PCS
      type is 40GBASE-R (LMAC_TYPE = 40G_R in the associated BGX_CMR_CONFIG
      register in the CMR sub-block), and always returns 0 for all other LPCS
      types. The counters are indexed by the RX PCS lane number based on the
      Alignment Marker detected on each lane and captured in the BR_LANE_MAP
      register. Each counter counts the BIP errors for its PCS lane, and is
      held at all ones in case of overflow. The counters are reset to all
      zeros when this register is read by software. The reset operation takes
      precedence over the increment operation; if the register is read on the
      same clock cycle an increment operation, the counter will be reset to
      all zeros and the increment operation will be lost.  The counters are
      writable for test purposes, rather than read-only as specified in
      802.3."
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: BIP_ERR_CNT_LN3
        bits: 63..48
        access: RC/W/H
        reset: 0x0
        typical: 0x0
        description: |
          "BIP error counter for lane on which PCS lane 3 markers are
          received."

      - name: BIP_ERR_CNT_LN2
        bits: 47..32
        access: RC/W/H
        reset: 0x0
        typical: 0x0
        description: |
          "BIP error counter for lane on which PCS lane 2 markers are
          received."

      - name: BIP_ERR_CNT_LN1
        bits: 31..16
        access: RC/W/H
        reset: 0x0
        typical: 0x0
        description: |
          "BIP error counter for lane on which PCS lane 1 markers are
          received."

      - name: BIP_ERR_CNT_LN0
        bits: 15..0
        access: RC/W/H
        reset: 0x0
        typical: 0x0
        description: |
          "BIP error counter for lane on which PCS lane 0 markers are
          received."


  - name: BGX(0..5)_SPU(0..3)_BR_LANE_MAP
    address: 0x11800E0010060 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      "40GBASE-R PCS lane mapping registers:
      This register implements the 802.3 lane 0-3 mapping registers
      (3.400-3.403).  The register is only valid when the logical PCS type is
      40GBASE-R (LMAC_TYPE = 40G_R in the associated BGX_CMR_CONFIG register
      in the CMR sub-block), and always returns 0 for all other LPCS types.
      The LNx_MAPPING field for each programmed PCS lane (called 'service
      interface' in 802.3ba-2010) is valid when that lane has achieved
      alignment marker lock on the receive side (i.e. the associated
      MARKER_LOCK bit is set in BR_ALGN_STATUS), and is invalid otherwise.
      When valid, it returns the actual detected receive PCS lane number based
      on the received alignment marker contents received on that service
      interface. The mapping is flexible because 802.3 allows multi-lane
      BASE-R receive lanes to be re-ordered.
      Note that for the transmit side, each PCS lane is mapped to a physical
      serdes lane based on the programming of the LANE_TO_SDS field in
      BGX_CMR_CONFIG.
      For the receive side, LANE_TO_SDS specifies the service interface to
      physical serdes lane mapping, and this register specifies the PCS lane
      to service interface mapping."
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: --
        bits: 63..54
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: LN3_MAPPING
        bits: 53..48
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: PCS lane number received on service interface 3

      - name: --
        bits: 47..38
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: LN2_MAPPING
        bits: 37..32
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: PCS lane number received on service interface 2

      - name: --
        bits: 31..22
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: LN1_MAPPING
        bits: 21..16
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: PCS lane number received on service interface 1

      - name: --
        bits: 15..6
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: LN0_MAPPING
        bits: 5..0
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: PCS lane number received on service interface 0


  - name: BGX(0..5)_SPU(0..3)_BR_PMD_CONTROL
    address: 0x11800E0010068 + a*0x1000000 + b*0x100000
    bus: RSL
    description: BASE-R PMD control
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: --
        bits: 63..2
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: TRAIN_EN
        bits: 1
        access: R/W
        reset: 0
        typical: 1
        description: BASE-R Training Enable

      - name: TRAIN_RESTART
        bits: 0
        access: R/W1S/H
        reset: 0
        typical: 0
        description: |
          "BASE-R Training Restart:
          Writing a 1 to this bit restarts the training process if the
          TRAIN_EN bit in this register is also set. This is a self-clearing
          bit."


  - name: BGX(0..5)_SPU(0..3)_BR_PMD_STATUS
    address: 0x11800E0010070 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      "BASE-R PMD status:
      The lane fields in this register are indexed by logical PCS lane ID. The
      lane 0 field (LN0_*) is valid for both 10GBASE-R and 40GBASE-R . The
      remaining fields (LN1_*, LN2_*, LN3_*) are only valid for 40GBASE-R."
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: --
        bits: 63..16
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: LN3_TRAIN_STATUS
        bits: 15..12
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: |
          "PCS lane 3 link training status. Format defined by
          BGX_SPU_BR_LANE_TRAIN_STATUS_S. Not valid for 10GBASE-R"

      - name: LN2_TRAIN_STATUS
        bits: 11..8
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: |
          "PCS lane 2 link training status. Format defined by
          BGX_SPU_BR_LANE_TRAIN_STATUS_S. Not valid for 10GBASE-R"

      - name: LN1_TRAIN_STATUS
        bits: 7..4
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: |
          "PCS lane 1 link training status. Format defined by
          BGX_SPU_BR_LANE_TRAIN_STATUS_S. Not valid for 10GBASE-R"

      - name: LN0_TRAIN_STATUS
        bits: 3..0
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: |
          "PCS lane 0 link training status. Format defined by
          BGX_SPU_BR_LANE_TRAIN_STATUS_S."


  - name: BGX(0..5)_SPU(0..3)_BR_PMD_LP_CUP
    address: 0x11800E0010078 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      "BASE-R PMD link partner coefficient update:
      This register implements 802.3 MDIO register 1.152 for 10GBASE-R (when
      LMAC_TYPE = 10G_R in the associated BGX_CMR_CONFIG register) and MDIO
      registers 1.1100-1.1103 for 40GBASE-R (when LMAC_TYPE = 40G_R). It is
      automatically cleared at the start of training. Each field reflects the
      contents of the coefficient update field in the lane's most recently
      received training frame. This register should not be written when link
      training is enabled, i.e. when TRAIN_EN is set BR_PMD_CONTROL.
      The lane fields in this register are indexed by logical PCS lane ID. The
      lane 0 field (LN0_*) is valid for both 10GBASE-R and 40GBASE-R . The
      remaining fields (LN1_*, LN2_*, LN3_*) are only valid for 40GBASE-R."
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: LN3_CUP
        bits: 63..48
        access: R/W/H
        reset: 0x0
        typical: 0x0
        description: |
          "PCS lane 3 Coefficient Update: Format defined by
          BGX_SPU_BR_TRAIN_CUP_S. Not valid for 10GBASE-R"

      - name: LN2_CUP
        bits: 47..32
        access: R/W/H
        reset: 0x0
        typical: 0x0
        description: |
          "PCS lane 2 Coefficient Update: Format defined by
          BGX_SPU_BR_TRAIN_CUP_S. Not valid for 10GBASE-R"

      - name: LN1_CUP
        bits: 31..16
        access: R/W/H
        reset: 0x0
        typical: 0x0
        description: |
          "PCS lane 1 Coefficient Update: Format defined by
          BGX_SPU_BR_TRAIN_CUP_S. Not valid for 10GBASE-R"

      - name: LN0_CUP
        bits: 15..0
        access: R/W/H
        reset: 0x0
        typical: 0x0
        description: |
          "PCS lane 0 Coefficient Update: Format defined by
          BGX_SPU_BR_TRAIN_CUP_S."


  - name: BGX(0..5)_SPU(0..3)_BR_PMD_LP_REP
    address: 0x11800E0010080 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      "BASE-R PMD link partner status report:
      This register implements 802.3 MDIO register 1.153 for 10GBASE-R (when
      LMAC_TYPE = 10G_R in the associated BGX_CMR_CONFIG register) and MDIO
      registers 1.1200-1.1203 for 40GBASE-R (when LMAC_TYPE = 40G_R). It is
      automatically cleared at the start of training. Each field reflects the
      contents of the status report field in the associated lane's most
      recently received training frame.
      The lane fields in this register are indexed by logical PCS lane ID. The
      lane 0 field (LN0_*) is valid for both 10GBASE-R and 40GBASE-R . The
      remaining fields (LN1_*, LN2_*, LN3_*) are only valid for 40GBASE-R."
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: LN3_REP
        bits: 63..48
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: |
          "PCS lane 3 Status Report: Format defined by BGX_SPU_BR_TRAIN_REP_S. Not
          valid for 10GBASE-R"

      - name: LN2_REP
        bits: 47..32
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: |
          "PCS lane 2 Status Report: Format defined by BGX_SPU_BR_TRAIN_REP_S. Not
          valid for 10GBASE-R"

      - name: LN1_REP
        bits: 31..16
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: |
          "PCS lane 1 Status Report: Format defined by BGX_SPU_BR_TRAIN_REP_S. Not
          valid for 10GBASE-R"

      - name: LN0_REP
        bits: 15..0
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: |
          "PCS lane 0 Status Report: Format defined by BGX_SPU_BR_TRAIN_REP_S."


  - name: BGX(0..5)_SPU(0..3)_BR_PMD_LD_CUP
    address: 0x11800E0010088 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      "BASE-R PMD local device coefficient update:
      This register implements 802.3 MDIO register 1.153 for 10GBASE-R (when
      LMAC_TYPE = 10G_R in the associated BGX_CMR_CONFIG register) and MDIO
      registers 1.1300-1.1303 for 40GBASE-R (when LMAC_TYPE = 40G_R). It is
      automatically cleared at the start of training. When link training is in
      progress, each field reflects the contents of the coefficient update
      field in the associated lane's outgoing training frame.
      The fields in this register are read/write even though they are
      specified as read-only in 802.3. If DBG_CONTROL[BR_PMD_TRAIN_SOFT_EN] is
      set, then this register must be updated by software during link training
      and hardware updates are disabled. If DBG_CONTROL[BR_PMD_TRAIN_SOFT_EN]
      is clear, this register is automatically updated by hardware, and it
      should not be written by software.
      The lane fields in this register are indexed by logical PCS lane ID. The
      lane 0 field (LN0_*) is valid for both 10GBASE-R and 40GBASE-R . The
      remaining fields (LN1_*, LN2_*, LN3_*) are only valid for 40GBASE-R."
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: LN3_CUP
        bits: 63..48
        access: R/W/H
        reset: 0x0
        typical: 0x0
        description: |
          "PCS lane 3 Coefficient Update: Format defined by
          BGX_SPU_BR_TRAIN_CUP_S. Not valid for 10GBASE-R"

      - name: LN2_CUP
        bits: 47..32
        access: R/W/H
        reset: 0x0
        typical: 0x0
        description: |
          "PCS lane 2 Coefficient Update: Format defined by
          BGX_SPU_BR_TRAIN_CUP_S. Not valid for 10GBASE-R"

      - name: LN1_CUP
        bits: 31..16
        access: R/W/H
        reset: 0x0
        typical: 0x0
        description: |
          "PCS lane 1 Coefficient Update: Format defined by
          BGX_SPU_BR_TRAIN_CUP_S. Not valid for 10GBASE-R"

      - name: LN0_CUP
        bits: 15..0
        access: R/W/H
        reset: 0x0
        typical: 0x0
        description: |
          "PCS lane 0 Coefficient Update: Format defined by
          BGX_SPU_BR_TRAIN_CUP_S."


  - name: BGX(0..5)_SPU(0..3)_BR_PMD_LD_REP
    address: 0x11800E0010090 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      "BASE-R PMD local device status report:
      This register implements 802.3 MDIO register 1.154 for 10GBASE-R (when
      LMAC_TYPE = 10G_R in the associated BGX_CMR_CONFIG register) and MDIO
      registers 1.1400-1.1403 for 40GBASE-R (when LMAC_TYPE = 40G_R). It is
      automatically cleared at the start of training. Each field reflects the
      contents of the status report field in the associated lane's outgoing
      training frame.
      The fields in this register are read/write even though they are
      specified as read-only in 802.3. If DBG_CONTROL[BR_PMD_TRAIN_SOFT_EN] is
      set, then this register must be updated by software during link training
      and hardware updates are disabled. If DBG_CONTROL[BR_PMD_TRAIN_SOFT_EN]
      is clear, this register is automatically updated by hardware, and it
      should not be written by software.
      The lane fields in this register are indexed by logical PCS lane ID. The
      lane 0 field (LN0_*) is valid for both 10GBASE-R and 40GBASE-R . The
      remaining fields (LN1_*, LN2_*, LN3_*) are only valid for 40GBASE-R."
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: LN3_REP
        bits: 63..48
        access: R/W/H
        reset: 0x0
        typical: 0x0
        description: |
          "PCS lane 3 Status Report: Format defined by BGX_SPU_BR_TRAIN_REP_S. Not
          valid for 10GBASE-R"

      - name: LN2_REP
        bits: 47..32
        access: R/W/H
        reset: 0x0
        typical: 0x0
        description: |
          "PCS lane 2 Status Report: Format defined by BGX_SPU_BR_TRAIN_REP_S. Not
          valid for 10GBASE-R"

      - name: LN1_REP
        bits: 31..16
        access: R/W/H
        reset: 0x0
        typical: 0x0
        description: |
          "PCS lane 1 Status Report: Format defined by BGX_SPU_BR_TRAIN_REP_S. Not
          valid for 10GBASE-R"

      - name: LN0_REP
        bits: 15..0
        access: R/W/H
        reset: 0x0
        typical: 0x0
        description: |
          "PCS lane 0 Status Report: Format defined by BGX_SPU_BR_TRAIN_REP_S."


  - name: BGX(0..5)_SPU(0..3)_FEC_ABIL
    address: 0x11800E0010098 + a*0x1000000 + b*0x100000
    bus: RSL
    description: BASE-R FEC ability
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: --
        bits: 63..2
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: ERR_ABIL
        bits: 1
        access: RO
        reset: 0
        typical: 1
        description: |
          "BASE-R FEC error indication ability:
          Always 1 when the logical PCS type is BASE-R, i.e. LMAC_TYPE = 40G_R
          or 10G_R in the associated BGX_CMR_CONFIG register in the CMR
          sub-block. Always 0 otherwise."

      - name: FEC_ABIL
        bits: 0
        access: RO
        reset: 0
        typical: 1
        description: |
          "BASE-R FEC ability:
          Always 1 when the logical PCS type is BASE-R, i.e. LMAC_TYPE = 40G_R
          or 10G_R in the associated BGX_CMR_CONFIG register in the CMR
          sub-block. Always 0 otherwise."


  - name: BGX(0..5)_SPU(0..3)_FEC_CONTROL
    address: 0x11800E00100A0 + a*0x1000000 + b*0x100000
    bus: RSL
    description: BASE-R FEC control
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: --
        bits: 63..2
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: ERR_EN
        bits: 1
        access: R/W
        reset: 0
        typical: 1
        description: |
          "BASE-R FEC error indication enable:
          This bit corresponds to FEC_Enable_Error_to_PCS variable for BASE-R
          as defined in 802.3 Clause 74. When FEC is enabled (per FEC_EN bit
          in this register) and this bit is set to 1, the FEC decoder on the
          receive side will signal an uncorrectable FEC error to the BASE-R
          decoder by driving a value of 2'b11 on the sync bits for some of the
          32 64B/66B blocks belonging to the uncorrectable FEC block. See
          802.3-2008/802.3ba-2010 section 74.7.4.5.1 for more details."

      - name: FEC_EN
        bits: 0
        access: R/W
        reset: 0
        typical: 1
        description: |
          "BASE-R FEC enable:
          When this bit is set and the logical PCS type is BASE-R (LMAC_TYPE =
          40G_R or 10G_R in the associated BGX_CMR_CONFIG register in the
          CMR sub-block), Forward Error Correction is enabled. FEC is disabled
          otherwise. Forward Error Correction is defined in IEEE Std
          802.3-2008/802.3ba-2010 Clause 74."


  - name: BGX(0..5)_SPU(0..3)_FEC_CORR_BLKS01
    address: 0x11800E00100A8 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      "BASE-R FEC corrected blocks counters, lanes 0-1:
      This register is only valid when the logical PCS type is BASE-R, i.e. LMAC_TYPE =
      40G_R or 10G_R in the associated BGX_CMR_CONFIG register in the CMR sub-block.
      The FEC corrected block counters are defined in 802.3 section 74.8.4.1.
      For 10GBASE-R, LN0_CORR_BLKS corresponds to the 802.3 FEC_corrected_blocks_counter
      variable (registers 1.172-1.173), and LN1_CORR_BLKS is reserved. For 40GBASE-R,
      LN0_CORR_BLKS and LN1_CORR_BLKS correspond to the 802.3
      FEC_corrected_blocks_counter_0 variable (registers 1.300-1.301) and
      FEC_corrected_blocks_counter_1 variable (registers 1.302-1.303), respectively.
      Each corrected blocks counter increments by 1 for a corrected FEC block, i.e. an
      FEC block that has been received with invalid parity on the associated PCS lane,
      and has been corrected by the FEC decoder.  The counter is reset to all
      zeros when the register is read, and held at all ones in case of
      overflow. The reset operation takes precedence over the increment
      operation; if the register is read on the same clock cycle an increment
      operation, the counter will be reset to all zeros and the increment
      operation will be lost.
      The counters are writable for test purposes, rather than read-only as
      specified in 802.3.
      "
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: LN1_CORR_BLKS
        bits: 63..32
        access: RC/W/H
        reset: 0x0
        typical: 0x0
        description: PCS Lane 1 FEC corrected blocks

      - name: LN0_CORR_BLKS
        bits: 31..0
        access: RC/W/H
        reset: 0x0
        typical: 0x0
        description: PCS Lane 0 FEC corrected blocks


  - name: BGX(0..5)_SPU(0..3)_FEC_CORR_BLKS23
    address: 0x11800E00100B0 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      "BASE-R FEC corrected blocks counters, lanes 2-3:
      This register is only valid when the logical PCS type is 40GBASE-R, i.e. LMAC_TYPE
      = 40G_R in the associated BGX_CMR_CONFIG register in the CMR sub-block. The FEC
      corrected block counters are defined in 802.3 section 74.8.4.1.
      LN2_CORR_BLKS and LN3_CORR_BLKS correspond to the 802.3
      FEC_corrected_blocks_counter_2 variable (registers 1.304-1.305) and
      FEC_corrected_blocks_counter_3 variable (registers 1.306-1.307), respectively.
      Each corrected blocks counter increments by 1 for a corrected FEC block, i.e. an
      FEC block that has been received with invalid parity on the associated PCS lane,
      and has been corrected by the FEC decoder.  The counter is reset to all
      zeros when the register is read, and held at all ones in case of
      overflow. The reset operation takes precedence over the increment
      operation; if the register is read on the same clock cycle an increment
      operation, the counter will be reset to all zeros and the increment
      operation will be lost.
      The counters are writable for test purposes, rather than read-only as
      specified in 802.3.
      "
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: LN3_CORR_BLKS
        bits: 63..32
        access: RC/W/H
        reset: 0x0
        typical: 0x0
        description: PCS Lane 3 FEC corrected blocks

      - name: LN2_CORR_BLKS
        bits: 31..0
        access: RC/W/H
        reset: 0x0
        typical: 0x0
        description: PCS Lane 2 FEC corrected blocks


  - name: BGX(0..5)_SPU(0..3)_FEC_UNCORR_BLKS01
    address: 0x11800E00100B8 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      "BASE-R FEC uncorrected blocks counters, lanes 0-1:
      This register is only valid when the logical PCS type is BASE-R, i.e. LMAC_TYPE =
      40G_R or 10G_R in the associated BGX_CMR_CONFIG register in the CMR sub-block.
      The FEC uncorrected block counters are defined in 802.3 section 74.8.4.2.
      For 10GBASE-R, LN0_UNCORR_BLKS corresponds to the 802.3 FEC_uncorrected_blocks_counter
      variable (registers 1.174-1.175), and LN1_UNCORR_BLKS is reserved. For 40GBASE-R,
      LN0_UNCORR_BLKS and LN1_UNCORR_BLKS correspond to the 802.3
      FEC_uncorrected_blocks_counter_0 variable (registers 1.700-1.701) and
      FEC_uncorrected_blocks_counter_1 variable (registers 1.702-1.703), respectively.
      Each uncorrected blocks counter increments by 1 for an uncorrected FEC block, i.e.
      an FEC block that has been received with invalid parity on the associated PCS lane,
      and has not been corrected by the FEC decoder.  The counter is reset to
      all zeros when the register is read, and held at all ones in case of
      overflow. The reset operation takes precedence over the increment
      operation; if the register is read on the same clock cycle an increment
      operation, the counter will be reset to all zeros and the increment
      operation will be lost.
      The counters are writable for test purposes, rather than read-only as
      specified in 802.3.
      "
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: LN1_UNCORR_BLKS
        bits: 63..32
        access: RC/W/H
        reset: 0x0
        typical: 0x0
        description: PCS Lane 1 FEC uncorrected blocks

      - name: LN0_UNCORR_BLKS
        bits: 31..0
        access: RC/W/H
        reset: 0x0
        typical: 0x0
        description: PCS Lane 0 FEC uncorrected blocks


  - name: BGX(0..5)_SPU(0..3)_FEC_UNCORR_BLKS23
    address: 0x11800E00100C0 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      "BASE-R FEC uncorrected blocks counters, lanes 2-3:
      This register is only valid when the logical PCS type is 40GBASE-R, i.e. LMAC_TYPE
      = 40G_R in the associated BGX_CMR_CONFIG register in the CMR sub-block. The FEC
      uncorrected block counters are defined in 802.3 section 74.8.4.2.
      LN2_UNCORR_BLKS and LN3_UNCORR_BLKS correspond to the 802.3
      FEC_uncorrected_blocks_counter_2 variable (registers 1.704-1.705) and
      FEC_uncorrected_blocks_counter_3 variable (registers 1.706-1.707), respectively.
      Each uncorrected blocks counter increments by 1 for an uncorrected FEC block, i.e.
      an FEC block that has been received with invalid parity on the associated PCS lane,
      and has not been corrected by the FEC decoder.  The counter is reset to
      all zeros when the register is read, and held at all ones in case of
      overflow. The reset operation takes precedence over the increment
      operation; if the register is read on the same clock cycle an increment
      operation, the counter will be reset to all zeros and the increment
      operation will be lost.
      The counters are writable for test purposes, rather than read-only as
      specified in 802.3.
      "
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: LN3_UNCORR_BLKS
        bits: 63..32
        access: RC/W/H
        reset: 0x0
        typical: 0x0
        description: PCS Lane 3 FEC uncorrected blocks

      - name: LN2_UNCORR_BLKS
        bits: 31..0
        access: RC/W/H
        reset: 0x0
        typical: 0x0
        description: PCS Lane 2 FEC uncorrected blocks


  - name: BGX(0..5)_SPU(0..3)_AN_CONTROL
    address: 0x11800E00100C8 + a*0x1000000 + b*0x100000
    bus: RSL
    description: Auto Negotiation Control
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: --
        bits: 63..16
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: AN_RESET
        bits: 15
        access: R/W1S/H
        reset: 0
        typical: 0
        description: |
          "Auto-Negotiation Reset:
          Writing a 1 to this bit or to the RESET bit in register CONTROL1
          resets the logical PCS (LPCS), sets the 802.3 PCS, FEC and AN
          registers for the LPCS to their default states, and resets the
          associated serdes lanes. It takes up to 32 sclk cycles to reset the
          LPCS, after which this bit is automatically cleared."

      - name: --
        bits: 14
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: XNP_EN
        bits: 13
        access: R/W
        reset: 1
        typical: 1
        description: Extended Next Page Enable.

      - name: AN_EN
        bits: 12
        access: R/W
        reset: 1
        typical: 1
        description: |
          Auto-Negotiation Enable. This bit should not be set when
          BGX_CMR_CONFIG[LMAC_TYPE] is set to RXAUI; auto-negotiation is not
          supported in RXAUI mode.

      - name: --
        bits: 11..10
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: AN_RESTART
        bits: 9
        access: R/W1S/H
        reset: 0
        typical: 0
        description: |
          "Auto-Negotiation Restart:
          Writing a 1 to this bit restarts the Auto-Negotiation process if the
          AN_EN bit in the register is also set. This is a self-clearing bit."

      - name: --
        bits: 8..0
        access: ---
        reset: --
        typical: --
        description: Reserved.


  - name: BGX(0..5)_SPU(0..3)_AN_STATUS
    address: 0x11800E00100D0 + a*0x1000000 + b*0x100000
    bus: RSL
    description: Auto Negotiation Status
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: --
        bits: 63..10
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: PRL_FLT
        bits: 9
        access: RO
        reset: 0
        typical: 0
        description: |
          "Parallel Detection Fault:
          Always 0; SPU does not support parallel detection as part of the
          Auto-Negotiation protocol."

      - name: --
        bits: 8
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: XNP_STAT
        bits: 7
        access: RO/H
        reset: 0
        typical: 0
        description: Extended Next Page Status.

      - name: PAGE_RX
        bits: 6
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          "Page Received:
          This bit is set when a New Page has been received and stored in the
          AN_LP_BASE or AN_LP_XNP register. Latching High bit; stays set until a
          1 is written by software, Auto-Negotiation is disabled or restarted,
          or Next page exchange is initiated.
          Note that in order to avoid read side effects, this is implemented as
          a write-1-to-clear bit, rather than latching high read-only as
          specified in 802.3."

      - name: AN_COMPLETE
        bits: 5
        access: RO/H
        reset: 0
        typical: 1
        description: |
          "Auto-Negotiation Complete:
          This bit is set when the Auto-Negotiation process has been completed
          and the link is up and running using the negotiated Highest Common
          Denominator (HCD) technology.
            If AN is enabled (AN_EN=1 in register AN_CONTROL) and this bit is
          read as a zero, it indicates that the AN process has not been
          completed, and the contents of the AN_LP_BASE, AN_XNP_TX and
          AN_LP_XNP registers are as defined by the current state of the
          Auto-Negotiation protocol, or as written for manual configuration.
          This bit is always zero when AN is disabled (AN_EN=0)."

      - name: RMT_FLT
        bits: 4
        access: RO
        reset: 0
        typical: 0
        description: |
          Remote Fault: Always 0 .

      - name: AN_ABLE
        bits: 3
        access: RO
        reset: 1
        typical: 1
        description: |
          Auto-Negotiation Ability: Always 1.

      - name: LINK_STATUS
        bits: 2
        access: R/W1S/H
        reset: 0
        typical: 0
        description: |
          Link Status:
          "This bit captures the state of the link_status variable as defined in
          802.3 section 73.9.1.  When set, indicates that a valid link has been
          established.  When clear, indicates that the link has been invalid
          after this bit was last set by software. Latching Low bit; stays clear
          until a 1 is written by software.
          Note that in order to avoid read side effects, this is implemented as
          a write-1-to-set bit, rather than latching low read-only as specified
          in 802.3."

      - name: --
        bits: 1
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: LP_AN_ABLE
        bits: 0
        access: RO/H
        reset: 0
        typical: 0
        description: |
          "Link Partner AN Ability:
          Set to indicate that the link partner is able to participate in the
          Auto-Negotiation function, and cleared otherwise."


  - name: BGX(0..5)_SPU(0..3)_AN_ADV
    address: 0x11800E00100D8 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      "Auto Negotiation Advertisement:
      Software programs the AN_ADV register with the contents of the AN link
      codeword base page to be transmitted during Auto-Negotiation. See section 802.3
      section 73.6 for details.
      Any writes to this register prior to completion of Auto-Negotiation, as indicated
      by the AN_COMPLETE bit in AN_STATUS, should be followed by a
      renegotiation for the new values to take effect. Renegotiation is initiated by
      setting the AN_RESTART bit in AN_CONTROL.
      Once Auto-Negotiation has completed, software may examine this register along with
      the LP base page ability register to determine the highest common denominator
      technology."
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: FEC_REQ
        bits: 47
        access: R/W
        reset: 0
        typical: 0
        description: FEC Requested

      - name: FEC_ABLE
        bits: 46
        access: R/W
        reset: 1
        typical: 1
        description: FEC Ability

      - name: ARSV
        bits: 45..27
        access: R/W
        reset: 0x0
        typical: 0x0
        description: |
          Technology Ability reserved bits
          Should always be 0.

      - name: A100G_CR10
        bits: 26
        access: R/W
        reset: 0
        typical: 0
        description: |
          100GBASE-CR10 Ability
          Should always be 0; 100GBASE-R is not supported.

      - name: A40G_CR4
        bits: 25
        access: R/W
        reset: 1
        typical: 1
        description: 40GBASE-CR4 Ability

      - name: A40G_KR4
        bits: 24
        access: R/W
        reset: 1
        typical: 1
        description: 40GBASE-KR4 Ability

      - name: A10G_KR
        bits: 23
        access: R/W
        reset: 1
        typical: 1
        description: 10GBASE-KR Ability

      - name: A10G_KX4
        bits: 22
        access: R/W
        reset: 1
        typical: 1
        description: 10GBASE-KX4 Ability

      - name: A1G_KX
        bits: 21
        access: R/W
        reset: 0
        typical: 0
        description: 1000BASE-KX Ability

      - name: T
        bits: 20..16
        access: R/W/H
        reset: 0x0
        typical: 0x0
        description: |
          "Transmitted Nonce: This field is automatically updated with a
          pseudo-random value on entry to the AN Ability Detect state."

      - name: NP
        bits: 15
        access: R/W
        reset: 0
        typical: 0
        description: Next Page.

      - name: ACK
        bits: 14
        access: RO
        reset: 0
        typical: 0
        description: |
          Ack: Always 0 in this register.

      - name: RF
        bits: 13
        access: R/W
        reset: 0
        typical: 0
        description: Remote Fault

      - name: XNP_ABLE
        bits: 12
        access: R/W
        reset: 1
        typical: 1
        description: Extended Next Page ability.

      - name: ASM_DIR
        bits: 11
        access: R/W
        reset: 0
        typical: 0
        description: Asymmetric Pause

      - name: PAUSE
        bits: 10
        access: R/W
        reset: 1
        typical: 1
        description: Pause Ability

      - name: E
        bits: 9..5
        access: R/W
        reset: 0x0
        typical: 0x0
        description: |
          Echoed Nonce
          Echoed Nonce value to use when ACK=0 in transmitted DME page. Should
          always be 0.

      - name: S
        bits: 4..0
        access: R/W
        reset: 0x1
        typical: 0x1
        description: |
          Selector
          Should be 0x1 (encoding for IEEE Std 802.3).


  - name: BGX(0..5)_SPU(0..3)_AN_LP_BASE
    address: 0x11800E00100E0 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      "Auto Negotiation Link Partner Base Page Ability:
      The AN_LP_BASE register captures the contents of the latest AN link
      codeword base page received from the link partner during Auto-Negotiation. See
      section 802.3 section 73.6 for details. The PAGE_RX bit in AN_STATUS is
      set when this register is updated by hardware."
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: FEC_REQ
        bits: 47
        access: RO/H
        reset: 0
        typical: 1
        description: FEC Requested

      - name: FEC_ABLE
        bits: 46
        access: RO/H
        reset: 0
        typical: 1
        description: FEC Ability

      - name: ARSV
        bits: 45..27
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: Technology Ability reserved bits

      - name: A100G_CR10
        bits: 26
        access: RO/H
        reset: 0
        typical: 0
        description: 100GBASE-CR10 Ability

      - name: A40G_CR4
        bits: 25
        access: RO/H
        reset: 0
        typical: 1
        description: 40GBASE-CR4 Ability

      - name: A40G_KR4
        bits: 24
        access: RO/H
        reset: 0
        typical: 1
        description: 40GBASE-KR4 Ability

      - name: A10G_KR
        bits: 23
        access: RO/H
        reset: 0
        typical: 1
        description: 10GBASE-KR Ability

      - name: A10G_KX4
        bits: 22
        access: RO/H
        reset: 0
        typical: 1
        description: 10GBASE-KX4 Ability

      - name: A1G_KX
        bits: 21
        access: RO/H
        reset: 0
        typical: 0
        description: 1000BASE-KX Ability

      - name: T
        bits: 20..16
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: Transmitted Nonce

      - name: NP
        bits: 15
        access: RO/H
        reset: 0
        typical: 0
        description: Next Page

      - name: ACK
        bits: 14
        access: RO/H
        reset: 0
        typical: 0
        description: Acknowledge

      - name: RF
        bits: 13
        access: RO/H
        reset: 0
        typical: 0
        description: Remote Fault

      - name: XNP_ABLE
        bits: 12
        access: RO/H
        reset: 0
        typical: 0
        description: Extended Next Page ability.

      - name: ASM_DIR
        bits: 11
        access: RO/H
        reset: 0
        typical: 0
        description: Asymmetric Pause

      - name: PAUSE
        bits: 10
        access: RO/H
        reset: 0
        typical: 1
        description: Pause Ability

      - name: E
        bits: 9..5
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: Echoed Nonce

      - name: S
        bits: 4..0
        access: RO/H
        reset: 0x0
        typical: 0x1
        description: Selector


  - name: BGX(0..5)_SPU(0..3)_AN_XNP_TX
    address: 0x11800E00100E8 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      "Auto Negotiation Extended Next Page (XNP) Transmit:
      Software programs the AN_XNP_TX register with the contents of the AN
      Message next page or Unformatted next page link code word to be
      transmitted during Auto-Negotiation. Next page exchange occurs after the
      base link codewords have been exchanged if either end of the link segment
      sets the NP bit to 1, indicating that it has at least one next page to
      send. Once initiated, Next page exchange continues until both end of the
      link segment set their NP bits to 0. See section 802.3 section 73.7.7 for
      details."
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: U
        bits: 47..16
        access: R/W
        reset: 0x1
        typical: 0x1
        description: |
          "Unformatted Code field: When the MP bit is set, this field contains
          the 32-bit Unformatted Code field of the Message next page. When MP is
          clear, this field contains the upper 32 bits of the 43-bit Unformatted
          Code field of the Unformatted next page."

      - name: NP
        bits: 15
        access: R/W
        reset: 0
        typical: 0
        description: Next Page.

      - name: ACK
        bits: 14
        access: RO
        reset: 0
        typical: 0
        description: |
          Ack: Always 0 in this register.

      - name: MP
        bits: 13
        access: R/W
        reset: 0
        typical: 0
        description: |
          "Message Page: Set to indicate that this register contains a Message
          next page. Clear to indicate that the register contains an Unformatted
          next page."

      - name: ACK2
        bits: 12
        access: R/W
        reset: 0
        typical: 0
        description: |
          "Acknowledge 2: Indicates that the receiver is able to act on the
          information (or perform the task) defined in the message."

      - name: TOGGLE
        bits: 11
        access: R/W
        reset: 0
        typical: 0
        description: |
          "Used to ensure proper synchronization between the local device and
          the link partner. This bit takes the opposite value of the Toggle bit
          in the previously exchanged link codeword."

      - name: M_U
        bits: 10..0
        access: R/W
        reset: 0x1
        typical: 0x1
        description: |
          "Message/Unformatted Code field: When the MP bit is set, this field
          contains the Message Code field (M) of the Message next page. When MP
          is clear, this field contains the lower 11 bits of the 43-bit
          Unformatted Code field of the Unformatted next page."


  - name: BGX(0..5)_SPU(0..3)_AN_LP_XNP
    address: 0x11800E00100F0 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      "Auto Negotiation Link Partner Extended Next Page (XNP) Ability:
      The AN_LP_XNP register captures the contents of the latest Next Page
      codeword received from the link partner during Auto-Negotiation, if any.
      See section 802.3 section 73.7.7 for details."
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: U
        bits: 47..16
        access: RO/H
        reset: 0x1
        typical: 0x1
        description: Unformatted Code field.

      - name: NP
        bits: 15
        access: RO/H
        reset: 0
        typical: 0
        description: Next Page.

      - name: ACK
        bits: 14
        access: RO/H
        reset: 0
        typical: 0
        description: Acknowledge.

      - name: MP
        bits: 13
        access: RO/H
        reset: 0
        typical: 0
        description: Message Page.

      - name: ACK2
        bits: 12
        access: RO/H
        reset: 0
        typical: 0
        description: Acknowledge 2.

      - name: TOGGLE
        bits: 11
        access: RO/H
        reset: 0
        typical: 0
        description: Toggle.

      - name: M_U
        bits: 10..0
        access: RO/H
        reset: 0x1
        typical: 0x1
        description: Message/Unformatted Code field.


  - name: BGX(0..5)_SPU(0..3)_AN_BP_STATUS
    address: 0x11800E00100F8 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      "Backplane Ethernet & BASE-R Copper Status:
      The contents of the AN_BP_STATUS register (with the exception of the
      static BP_AN_ABLE bit) are updated during Auto-Negotiation and are valid
      when the AN_COMPLETE bit is set in AN_STATUS. At that time, one of the
      port type bits (A100G_CR10, A40G_CR4, A40G_KR4, A10G_KR, A10G_KX4, A1G_KX)
      will be set depending on the AN priority resolution. If a BASE-R type is
      negotiated, then the FEC bit will be set to indicate that FEC operation
      has been negotiated, and will be clear otherwise."
    attributes:
      rtlgen_soft_reset: "lpcs_soft_reset[b]"
    fields:
      - name: --
        bits: 63..9
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: N100G_CR10
        bits: 8
        access: RO/H
        reset: 0
        typical: 0
        description: |
          "100GBASE-CR10 negotiated:
          Expected to always be 0; 100GBASE-R is not supported."

      - name: --
        bits: 7
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: N40G_CR4
        bits: 6
        access: RO/H
        reset: 0
        typical: 0
        description: 40GBASE-CR4 negotiated

      - name: N40G_KR4
        bits: 5
        access: RO/H
        reset: 0
        typical: 0
        description: 40GBASE-KR4 negotiated

      - name: FEC
        bits: 4
        access: RO/H
        reset: 0
        typical: 0
        description: BASE-R FEC negotiated

      - name: N10G_KR
        bits: 3
        access: RO/H
        reset: 0
        typical: 0
        description: 10GBASE-KR negotiated

      - name: N10G_KX4
        bits: 2
        access: RO/H
        reset: 0
        typical: 0
        description: 10GBASE-KX4 or CX4 negotiated (XAUI)

      - name: N1G_KX
        bits: 1
        access: RO/H
        reset: 0
        typical: 0
        description: 1000BASE-KX negotiated

      - name: BP_AN_ABLE
        bits: 0
        access: RO
        reset: 1
        typical: 1
        description: |
          "Backplane or BASE-R Copper AN Ability:
          Always 1."


  - name: BGX(0..5)_SPU(0..3)_LPCS_STATES
    address: 0x11800E0010208 + a*0x1000000 + b*0x100000
    bus: RSL
    description: BASE-X Transmit/Receive states
    fields:
      - name: --
        bits: 63..15
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: BR_RX_SM
        bits: 14..12
        access: RO/H
        reset: 0x0
        typical: --
        description: BASE-R Receive State Machine state

      - name: --
        bits: 11..10
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: BX_RX_SM
        bits: 9..8
        access: RO/H
        reset: 0x0
        typical: --
        description: BASE-X Receive State Machine state

      - name: DESKEW_AM_FOUND
        bits: 7..4
        access: RO/H
        reset: 0x0
        typical: --
        description: |
          40GBASE-R deskew state machine alignment marker found flag per
          logical PCS lane ID.

      - name: --
        bits: 3
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: DESKEW_SM
        bits: 2..0
        access: RO/H
        reset: 0x0
        typical: --
        description: BASE-X and 40GBASE-R deskew state machine state


  - name: BGX(0..5)_SPU(0..3)_MISC_CONTROL
    address: 0x11800E0010218 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      "TX_RX polarity:
      RX logical PCS lane polarity vector [3:0] = XOR_RXPLRT[3:0] ^ {4{RXPLRT}}.
      TX logical PCS lane polarity vector [3:0] = XOR_TXPLRT[3:0] ^ {4{TXPLRT}}.
      In short keep RXPLRT and TXPLRT cleared, and use XOR_RXPLRT and
      XOR_TXPLRT fields to define the polarity per logical PCS lane. Only bit
      0 of vector is used for 10GBASE-R, and only bits 1:0 of vector are used
      for RXAUI."
    internal: |
      "SKIP_AFTER_TERM field:
      SKIP_AFTER_TERM can be set to ensure sufficient density of XAUI
      Idle Skip (||R||) columns with a small transmit inter-frame gap (IFG) in
      order to allow the link partner's receiver to delete ||R|| columns as
      needed for clock rate compensation. It is usually set when the LMAC's
      transmit IFG is set to 8 bytes in HiGig/HiGig2 modes (i.e.
      BGX_SMU_TX_IFG[IFG1] + BGX_SMU_TX_IFG[IFG2] = 8), and should be cleared
      when the transmit IFG is greater than 8 bytes.
        When this bit is set, the SPU will send an ||R|| column after a
      ||T0|| column (terminate in lane 0) if no ||R|| was sent in the
      previous IFG. This is a minor deviation from the functionality
      specified in 802.3-2008 Figure 48-6 (PCS transmit source state
      diagram), whereby the state will transition directly from SEND_DATA
      to SEND_RANDOM_R after ||T0|| if no ||R|| was transmitted in the
      previous IFG. Sending ||R|| after ||T0|| only (and not ||T1||,
      ||T2|| or ||T3||) ensures that the check_end function at the
      receiving end, as defined in 802.3-2008 sub-clause 48.2.6.1.4, does
      not detect an error due to this functional change.
        When this bit is clear, the LMAC will fully conform to the
      functionality specified in Figure 48-6."
    fields:
      - name: --
        bits: 63..13
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: RX_PACKET_DIS
        bits: 12
        access: R/W
        reset: 0
        typical: 0
        description: |
          "Receive packet disable:
          This bit can be set or cleared by software at any time to gracefully
          disable or re-enable packet reception by the LPCS. If this bit is
          set while a packet is being received, the packet is completed and
          all subsequent received packets are discarded by the LPCS.
          Similarly, if this bit is cleared while a received packet is being
          discarded, packet reception resumes after the current packet is
          fully discarded.
            When set for a 40GBASE-R or 10GBASE-R LMAC/LPCS type (selected by
          BGX_CMR_CONFIG[LMAC_TYPE]), received errors and faults will be
          ignored while receive packets are disarded; idles will be sent to
          the MAC layer (SMU) and the errored blocks counter
          (BGX_SPU_BR_STATUS2[ERR_BLKS]) will not increment."

      - name: SKIP_AFTER_TERM
        bits: 11
        access: R/W
        reset: 0
        typical: 0
        description: |
          "Enable sending of Idle Skip after Terminate:
          This bit is meaningful when the logical PCS type is XAUI or RXAUI
          (selected by BGX_CMR_CONFIG[LMAC_TYPE]), and has no effect
          otherwise. When set, the LMAC/LPCS transmits more Idle Skip columns
          for clock compensation. Typically set in HiGig/HiGig2 modes.  Clear
          otherwise."

      - name: INTLV_RDISP
        bits: 10
        access: R/W
        reset: 0
        typical: 0
        description: |
          "RXAUI Interleaved Running Disparity:
          This bit is meaningful when the logical PCS type is RXAUI (LMAC_TYPE
          = RXAUI in the associated BGX_CMR_CONFIG register in the CMR
          sub-block), and has no effect otherwise. It selects which disparity
          calculation to use when combining or splitting the RXAUI lanes, as
          follows:
          0 = Common Running Disparity: Common running disparity is
          computed for even and odd code-groups of an RXAUI lane, i.e.
          interleave lanes before PCS layer As described in the Dune
          Networks/Broadcom RXAUI v2.1 specification. This obeys
          6.25GHz serdes disparity.
          1 = Interleaved Running Disparity: Running disparity is computed
          separately for even and odd code-groups of an RXAUI lane,
          i.e. interleave lanes after PCS layer As described in the
          Marvell RXAUI Interface specification. This does NOT obey
          6.25GHz serdes disparity."

      - name: XOR_RXPLRT
        bits: 9..6
        access: R/W
        reset: 0x0
        typical: 0x0
        description: RX polarity control per logical PCS lane

      - name: XOR_TXPLRT
        bits: 5..2
        access: R/W
        reset: 0x0
        typical: 0x0
        description: TX polarity control per logical PCS lane

      - name: RXPLRT
        bits: 1
        access: R/W
        reset: 0
        typical: 0
        description: |
          Receive Polarity
          1=inverted polarity, 0=normal polarity.

      - name: TXPLRT
        bits: 0
        access: R/W
        reset: 0
        typical: 0
        description: |
          Transmit Polarity
          1=inverted polarity, 0=normal polarity.


  - name: BGX(0..5)_SPU(0..3)_INT
    address: 0x11800E0010220 + a*0x1000000 + b*0x100000
    bus: RSL
    description: SPU interrupt
    attributes:
      rtlgen_cib: "True"
    fields:
      - name: --
        bits: 63..15
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: TRAINING_FAILURE
        bits: 14
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          "BASE-R PMD training failure:
          Set when BASE-R PMD link training has failed on the 10GBASE-R lane
          or any 40GBASE-R lane. Valid if the LPCS type selected by
          BGX_CMR_CONFIG[LMAC_TYPE] is 10GBASE-R or 40GBASE-R and
          BGX_SPU_BR_PMD_CONTROL[TRAIN_EN] is 1, and never set otherwise."

      - name: TRAINING_DONE
        bits: 13
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          "BASE-R PMD training done:
          Set when the 10GBASE-R lane or all 40GBASE-R lanes have
          successfully completed BASE-R PMD link training. Valid if the LPCS
          type selected by BGX_CMR_CONFIG[LMAC_TYPE] is 10GBASE-R or 40GBASE-R
          and BGX_SPU_BR_PMD_CONTROL[TRAIN_EN] is 1, and never set otherwise."

      - name: AN_COMPLETE
        bits: 12
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          "Auto-Negotiation Link Good:
          Set when BGX_SPU_AN_STATUS[AN_COMPLETE] is set, indicating that the
          Auto-Negotiation process has been completed and the link is up and
          running using the negotiated Highest Common Denominator (HCD)
          technology."

      - name: AN_LINK_GOOD
        bits: 11
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          "Auto-Negotiation Link Good:
          Set when the an_link_good variable is set as defined in 802.3-2008
          Figure 73-11, indicating that Auto-Negotiation has completed."

      - name: AN_PAGE_RX
        bits: 10
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          "Auto-Negotiation Page Received:
          This bit is set along with the PAGE_RX bit in AN_STATUS when a New
          Page has been received and stored in the AN_LP_BASE or AN_LP_XNP
          register."

      - name: FEC_UNCORR
        bits: 9
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          "Uncorrectable FEC error:
          Set when an FEC block with an uncorrectable error is received on the
          10GBASE-R lane or any 40GBASE-R lane.  Valid if the LPCS type
          selected by BGX_CMR_CONFIG[LMAC_TYPE] is 10GBASE-R or 40GBASE-R, and
          never set otherwise."

      - name: FEC_CORR
        bits: 8
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          "Correctable FEC error:
          Set when an FEC block with a correctable error is received on the
          10GBASE-R lane or any 40GBASE-R lane.  Valid if the LPCS type
          selected by BGX_CMR_CONFIG[LMAC_TYPE] is 10GBASE-R or 40GBASE-R, and
          never set otherwise."

      - name: BIP_ERR
        bits: 7
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          "40GBASE-R Bit Interleaved Parity Error: Set when a BIP error is
          detected on any lane.  Valid if the LPCS type selected by
          BGX_CMR_CONFIG[LMAC_TYPE] is 40GBASE-R, and never set otherwise."

      - name: DBG_SYNC
        bits: 6
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          "Sync failure debug:
          This interrupt is provided for link problem debugging help. It is
          set as follows based on the LPCS type selected by
          BGX_CMR_CONFIG[LMAC_TYPE], and whether FEC is enabled or disabled by
          BGX_SPU_FEC_CONTROL[FEC_EN]:
          * XAUI or RXAUI: Set when any lane's PCS synchronization state
            transitions from SYNC_ACQUIRED_1 to SYNC_ACQUIRED_2 (see
            802.3-2008 Figure 48-7).
          * 10GBASE-R or 40GBASE-R with FEC disabled: Set when sh_invalid_cnt
            increments to 1 while block_lock is 1 (see 802.3-2008 Figure 49-12
            and 802.3ba-2010 Figure 82-20).
          * 10GBASE-R or 40GBASE-R with FEC enabled: Set when
            parity_invalid_cnt increments to 1 while fec_block_lock is 1 (see
            802.3-2008 Figure 74-8)."

      - name: ALGNLOS
        bits: 5
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          "Loss of lane alignment:
          Set when lane-to-lane alignment is lost. This is only valid if the
          logical PCS is a multi-lane type (i.e. XAUI, RXAUI or 40GBASE-R is
          selected by BGX_CMR_CONFIG[LMAC_TYPE]), and is never set otherwise."

      - name: SYNLOS
        bits: 4
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          "Loss of Lane Sync:
          Lane code-group or block synchronization is lost on one or more
          lanes associated with the LMAC/LPCS. Set as follows based on the
          LPCS type selected by BGX_CMR_CONFIG[LMAC_TYPE], and whether FEC is
          enabled or disabled by BGX_SPU_FEC_CONTROL[FEC_EN]:
          * XAUI or RXAUI: Set when any any lane's PCS synchronization state
            transitions to LOSS_OF_SYNC (see 802.3-2008 Figure 48-7)
          * 10GBASE-R or 40GBASE-R with FEC disabled: set when the block_lock
            variable is cleared on the 10G lane or any 40G lane (see
            802.3-2008 Figure 49-12 and 802.3ba-2010 Figure 82-20).
          * 10GBASE-R or 40GBASE-R with FEC enabled: set when the
            fec_block_lock variable is cleared on the 10G lane or any 40G
            lane (see 802.3-2008 Figure 74-8)."

      - name: BITLCKLS
        bits: 3
        access: R/W1C/H
        reset: 0
        typical: 0
        description: Bit lock lost on one or more lanes associated with the LMAC/LPCS.

      - name: ERR_BLK
        bits: 2
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          "Errored Block Received:
          Set when an errored BASE-R block is received as described for
          BGX_SPU_BR_STATUS2[ERR_BLKS].  Valid if the LPCS type selected by
          BGX_CMR_CONFIG[LMAC_TYPE] is 10GBASE-R or 40GBASE-R, and never set
          otherwise."

      - name: RX_LINK_DOWN
        bits: 1
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          Set when the receive link goes down, which is the same condition that
          sets BGX_SPU_STATUS2[RCVFLT].

      - name: RX_LINK_UP
        bits: 0
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          Set when the receive link comes up, which is the same condition that
          allows the setting of BGX_SPU_STATUS1[RCV_LNK].


  - name: BGX(0..5)_SPU_DBG_CONTROL
    address: 0x11800E0010300 + a*0x1000000
    bus: RSL
    description: SPU Debug Control
    fields:
      - name: --
        bits: 63..56
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: MS_CLK_PERIOD
        bits: 55..44
        access: R/W
        reset: 0x3e7
        typical: 0x3e7
        description: |
          "Millisecond Clock Period: Specifies the number of microsecond clock
          ticks per millisecond, minus 1. The default value of 999 (0x3e7)
          should be used during normal operation; other values may be used for
          test/debug purposes."

      - name: US_CLK_PERIOD
        bits: 43..32
        access: R/W
        reset: 0x513
        typical: 0x513
        description: |
          "Microsecond Clock Period: Specifies the number of SCLK cycles per
          microseconds, minus 1. For example, if SCLK runs at 1.3 GHz, the
          number of SCLK cycles per microsecond is 1,300 so the value of this
          field should be 1,299 (0x513). This is used by the BASE-R BER
          monitor timers."

      - name: --
        bits: 31
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: BR_BER_MON_DIS
        bits: 30
        access: R/W
        reset: 0
        typical: 0
        description: |
          "BASE-R Bit Error Rate Monitor Disable:
          This bit should be clear for normal oepration. Setting it disables
          the BASE-R BER monitor state machine defined in 802.3-2008 Figure
          49-13 for 10GBASE-R and 802.3ba-2010 Figure 82-13 for 40GBASE-R."

      - name: AN_NONCE_MATCH_DIS
        bits: 29
        access: R/W
        reset: 0
        typical: 0
        description: |
          "Auto-Negotiation Nonce Match Disable:
          This bit should be clear for normal oepration. Setting it disables
          Nonce Match check by forcing nonce_match variable to 0 in the AN
          arbitration state diagram, as defined in 802.3-2008 Figure 73-11.
          This bit can be set by software for test purposes, e.g. for running
          auto-negotiation in loopback mode."

      - name: TIMESTAMP_NORM_DIS
        bits: 28
        access: R/W
        reset: 0
        typical: 0
        description: |
          "40GBASE-R RX Timestamp Normalization Disable:
          This bit controls the generation of the receive SOP timestamp passed
          to the SMU sub-block for a 40GBASE-R LMAC/LPCS. When this bit is
          clear, SPU normalizes the receive SOP timestamp in order to
          compensate for lane-to-lane skew on a 40GBASE-R link, as described
          below. When this bit is set, timestamp normalization is disabled and
          SPU directly passes the captured SOP timestamp values to SMU.

          In 40GBASE-R mode, a packet's SOP block can be transferred on any of
          the LMAC's lanes. In the presence of lane-to-lane skew, the SOP
          delay from transmit (by the link partner) to receive by SPU varies
          depending on which lane is used by the SOP block. This variation
          reduces the accuracy of the received SOP timestamp relative to when
          it was transmitted by the link partner.

          SPU captures the timestamp of the alignment marker received on each
          serdes lane during align/skew detection; the captured value can be
          read from the serdes lane's BGX_SPU_SDS_SKEW_STATUS[SKEW_STATUS]
          field (AM_TIMESTAMP sub-field). If alignment markers are transmitted
          at about the same time on all lanes by the link partner, then the
          difference between the AM_TIMESTAMP values for a pair of lanes
          represents the approximate skew between those lanes.

          SPU uses the 40GBASE-R LMAC's programmed PCS lane 0 as a reference
          and computes the AM_TIMESTAMP delta of every other lane relative to
          PCS lane 0. When normalization is enabled, SPU adjusts the timestamp
          of a received SOP by subtracting the receiving lane's AM_TIMESTAMP
          delta from the captured timestamp value. The adjusted/normalized
          timestamp value is then passed to SMU along with the SOP.

          Software can determine the actual maximum skew of a 40GBASE-R link
          by examining the AM_TIMESTAMP values in the BGX_SPU_SDS_SKEW_STATUS
          registers, and decide if timestamp normalization should be enabled or
          disabled to improve PTP accuracy. Normalization improves accurary
          for larger skew values but reduces the accuracy (due to timestamp
          measurement errors) for small skew values."

      - name: RX_BUF_FLIP_SYND
        bits: 27..20
        access: R/W
        reset: 0x0
        typical: 0x0
        description: |
          "Flip SPU RX_BUF FIFO ECC bits:
          Two bits per serdes lane; used to inject single-bit and double-bit
          errors into the ECC field on writes to the associated SPU RX_BUF
          lane FIFO, as follows:
              0x0: normal operation
              0x1: SBE on ECC bit 0
              0x2: SBE on ECC bit 1
              0x3: DBE on ECC bits 1:0
          "

      - name: BR_PMD_TRAIN_SOFT_EN
        bits: 19
        access: R/W
        reset: 0
        typical: 0
        description: |
          "Enable BASE-R PMD Software Controlled Link Training:
          This bit configures the operation mode for BASE-R link training for
          all LMACs and lanes. When this bit is set along with
          BR_PMD_CONTROL[TRAIN_EN] for a given LMAC, the BASE-R link training
          protocol for that LMAC is executed under software control, whereby
          the contents the BR_PMD_LD_CUP and BR_PMD_LD_REP registers are
          updated by software. When this bit is clear and
          BR_PMD_CONTROL[TRAIN_EN] is set, the link training protocol is fully
          automated in hardware, whereby the contents BR_PMD_LD_CUP and
          BR_PMD_LD_REP registers are automatically updated by hardware."

      - name: AN_ARB_LINK_CHK_EN
        bits: 18
        access: R/W
        reset: 0
        typical: 0
        description: |
          "Enable link status checking by AN Arbitration State Machine:
          When Auto-Negotiation is enabled (AN_EN is set in AN_CONTROL), this
          bit controls the behavior of the AN arbitration state machine when it
          reaches the AN GOOD CHECK state after DME pages are successfully
          exchanged, as defined in Figure 73-11 in 802.3-2008.

          When this bit is set and the negotiated Highest Common Denominator
          (HCD) technology matches LMAC_TYPE in BGX_CMR_CONFIG, the AN
          arbitration SM performs the actions defined for the AN GOOD CHECK
          state in Figure 73-11, i.e. run the link_fail_inhibit timer and
          eventually transition to the AN GOOD or TRANSMIT DISABLE state.

          When this bit is clear or the HCD technology does not match LMAC_TYPE,
          the AN arbitration SM stay in the AN GOOD CHECK state, with the
          expectation that software will perform the appropriate actions to
          complete the Auto-Negotiation protocol, as follows:
          * If this bit is clear and the HCD technology matches LMAC_TYPE, clear
            AN_EN in AN_CONTROL.
          * Otherwise, disable the LPCS by clearing the ENABLE bit in
            BGX_CMR_CONFIG, clear AN_EN in AN_CONTROL, reconfigure the LPCS with
            the correct LMAC_TYPE, and re-enable the LPCS by setting ENABLE in
            BGX_CMR_CONFIG.
          In both cases, software should implement the link_fail_inhibit timer
          and verify the link status as specified for the AN GOOD CHECK state.
          "

      - name: RX_BUF_COR_DIS
        bits: 17
        access: R/W
        reset: 0
        typical: 0
        description: When set, disables ECC correction on all SPU RX_BUF FIFOs.

      - name: SCRAMBLE_DIS
        bits: 16
        access: R/W
        reset: 0
        typical: 0
        description: |
          BASE-R Scrambler/descrambler Disable:
          Setting this bit to 1 disables the BASE-R scrambler & descrambler
          functions and FEC PN-2112 scrambler & descrambler functions for
          debug purposes.

      - name: --
        bits: 15
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: MARKER_RXP
        bits: 14..0
        access: R/W
        reset: 0x3fff
        typical: 0x3fff
        description: |
          BASE-R Alignment Marker Receive Period:
          For a multi-lane BASE-R logical PCS (i.e. 40GBASE-R), this field
          specifies the expected alignment marker receive period per lane, i.e.
          the expected number of received 66b non-marker blocks between
          consecutive markers on the same lane. The default value corresponds
          to a period of 16363 blocks (exclusive) as specified in 802.3ba-2010.


  - name: BGX(0..5)_SPU_MEM_STATUS
    address: 0x11800E0010308 + a*0x1000000
    bus: RSL
    description: |
      "SPU Memory Status: This register provides memory BIST and ECC status
      from the SPU RX_BUF lane FIFOs"
    fields:
      - name: --
        bits: 63..32
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: RX_BUF_ECC_SYND
        bits: 31..0
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: |
          "SPU RX_BUF ECC Syndromes for lanes 3-0: 8-bit syndrome sub-field
          per serdes lane. Each 8-bit sub-field contains the syndrome of the
          latest single-bit or double-bit ECC error detected by the associated
          RX_BUF lane FIFO, i.e. it is loaded when the corresponding
          RX_BUF_SBE or RX_BUF_DBE bit is set in the SPU MEM_INT register."


  - name: BGX(0..5)_SPU_MEM_INT
    address: 0x11800E0010310 + a*0x1000000
    bus: RSL
    description: SPU Memory Interrupt
    attributes:
      rtlgen_cib: "True"
    fields:
      - name: --
        bits: 63..8
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: RX_BUF_SBE
        bits: 7..4
        access: R/W1C/H
        reset: 0x0
        typical: 0x0
        description: |
          "SPU RX_BUF Single-Bit Error for lanes 3-0: One bit per physical
          serdes lane.  Each bit is set when the associated RX_BUF lane FIFO
          detects a single-bit ECC error"

      - name: RX_BUF_DBE
        bits: 3..0
        access: R/W1C/H
        reset: 0x0
        typical: 0x0
        description: |
          "SPU RX_BUF Double-Bit Error for lanes 3-0: One bit per physical
          serdes lane.  Each bit is set when the associated RX_BUF lane FIFO
          detects a double-bit ECC error."


  - name: BGX(0..5)_SPU_BIST_STATUS
    address: 0x11800E0010318 + a*0x1000000
    bus: RSL
    description: |
      "SPU Memory Status: This register provides memory BIST and ECC status
      from the SPU RX_BUF lane FIFOs"
    fields:
      - name: --
        bits: 63..4
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: RX_BUF_BIST_STATUS
        bits: 3..0
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: |
          "SPU RX_BUF BIST status for lanes 3-0: One bit per serdes lane, set
          to indicate BIST failure for the associated RX_BUF lane FIFO."


  - name: BGX(0..5)_SPU_SDS(0..3)_SKEW_STATUS
    address: 0x11800E0010320 + a*0x1000000 + b*8
    bus: RSL
    description: Serdes lane skew status. One register per physical serdes lane.
    fields:
      - name: --
        bits: 63..32
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: SKEW_STATUS
        bits: 31..0
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: Format defined by BGX_SPU_SDS_SKEW_STATUS_S.


  - name: BGX(0..5)_SPU_SDS(0..3)_STATES
    address: 0x11800E0010340 + a*0x1000000 + b*8
    bus: RSL
    description: Serdes lane states. One register per physical serdes lane.
    fields:
      - name: --
        bits: 63..52
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: AM_LOCK_INVLD_CNT
        bits: 51..50
        access: RO/H
        reset: 0x0
        typical: --
        description: 40GBASE-R Alignment Marker Lock state machine invalid AM counter

      - name: AM_LOCK_SM
        bits: 49..48
        access: RO/H
        reset: 0x0
        typical: --
        description: 40GBASE-R Alignment Marker Lock state machine state

      - name: --
        bits: 47..45
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: TRAIN_SM
        bits: 44..42
        access: RO/H
        reset: 0x0
        typical: --
        description: Link Training state machine state

      - name: TRAIN_CODE_VIOL
        bits: 41
        access: RO/H
        reset: 0
        typical: --
        description: Link Training code violation in received Control Channel

      - name: TRAIN_FRAME_LOCK
        bits: 40
        access: RO/H
        reset: 0
        typical: --
        description: Link Training frame lock status

      - name: TRAIN_LOCK_FOUND_1ST_MARKER
        bits: 39
        access: RO/H
        reset: 0
        typical: --
        description: Link Training Lock State Machine found first marker flag

      - name: TRAIN_LOCK_BAD_MARKERS
        bits: 38..36
        access: RO/H
        reset: 0x0
        typical: --
        description: Link Training Lock State Machine bad markers counter

      - name: --
        bits: 35
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: AN_ARB_SM
        bits: 34..32
        access: RO/H
        reset: 0x0
        typical: --
        description: Auto-Negotiation Arbitration State Machine state

      - name: AN_RX_SM
        bits: 31..30
        access: RO/H
        reset: 0x0
        typical: --
        description: Auto-Negotiation Receive State Machine state

      - name: --
        bits: 29
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: FEC_BLOCK_SYNC
        bits: 28
        access: RO/H
        reset: 0
        typical: --
        description: FEC Block Sync status

      - name: FEC_SYNC_CNT
        bits: 27..24
        access: RO/H
        reset: 0x0
        typical: --
        description: FEC block sync state machine good/bad parity block counter

      - name: --
        bits: 23
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: BR_SH_INVLD_CNT
        bits: 22..16
        access: RO/H
        reset: 0x0
        typical: --
        description: BASE-R Lock State Machine Invalid Sync Header Counter

      - name: BR_BLOCK_LOCK
        bits: 15
        access: RO/H
        reset: 0
        typical: --
        description: BASE-R Block Lock status

      - name: BR_SH_CNT
        bits: 14..4
        access: RO/H
        reset: 0x0
        typical: --
        description: BASE-R Lock State Machine Sync Header Counter

      - name: BX_SYNC_SM
        bits: 3..0
        access: RO/H
        reset: 0x0
        typical: --
        description: BASE-X PCS Syncronization state machine state


  - name: BGX(0..5)_SMU(0..3)_RX_INT
    address: 0x11800E0020000 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      "**************************************************************
       BGX RX per LMAC registers                                    *
       **************************************************************
       BGX_SMU_RX_INT = Interrupt Register"
    internal: |
      "(1) exception conditions 9 and 4:0 can also set the rcv/opcode in the received
           packet's workQ entry.  The BGX_RX_FRM_CHK register provides a bit mask
         for configuring which conditions set the error.
       (2) JABBER An RX Jabber error indicates that a packet was received which
           is longer than the maximum allowed packet as defined by the
           system.  BGX will terminate the packet with an EOP on the beat on which JABBER
           was exceeded. The beat on which JABBER was exceeded is left unchanged and all
           subsequent data beats are dropped.
           Failure to truncate could lead to system instabilty.
       (3) PCTERR checks that the frame begins with a valid PREAMBLE sequence.
           Does not check the number of PREAMBLE cycles."
    attributes:
      rtlgen_cib: "True"
    fields:
      - name: --
        bits: 63..12
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: HG2CC
        bits: 11
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          HiGig2 received message CRC or Control char  error
          Set when either CRC8 error detected or when
          a Control Character is found in the message
          bytes after the K.SOM
          NOTE: HG2CC has higher priority than HG2FLD
          i.e. a HiGig2 message that results in HG2CC
          getting set, will never set HG2FLD.

      - name: HG2FLD
        bits: 10
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          HiGig2 received message field error, as below
          1) MSG_TYPE field not 6'b00_0000
          i.e. it is not a FLOW CONTROL message, which
          is the only defined type for HiGig2
          2) FWD_TYPE field not 2'b00 i.e. Link Level msg
          which is the only defined type for HiGig2
          3) FC_OBJECT field is neither 4'b0000 for
          Physical Link nor 4'b0010 for Logical Link.
          Those are the only two defined types in HiGig2

      - name: BAD_TERM
        bits: 9
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          Frame is terminated by control character other
          than /T/.  The error propagation control
          character /E/ will be included as part of the
          frame and does not cause a frame termination.

      - name: BAD_SEQ
        bits: 8
        access: R/W1C/H
        reset: 0
        typical: 0
        description: Reserved Sequence Deteted

      - name: REM_FAULT
        bits: 7
        access: R/W1C/H
        reset: 0
        typical: 0
        description: Remote Fault Sequence Deteted

      - name: LOC_FAULT
        bits: 6
        access: R/W1C/H
        reset: 0
        typical: 0
        description: Local Fault Sequence Deteted

      - name: RSVERR
        bits: 5
        access: R/W1C/H
        reset: 0
        typical: 0
        description: Reserved opcodes

      - name: PCTERR
        bits: 4
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          Bad Preamble / Protocol
          The column of data that was
          bad will be logged in BGX_RX_BAD_COL

      - name: SKPERR
        bits: 3
        access: R/W1C/H
        reset: 0
        typical: 0
        description: Skipper error

      - name: RCVERR
        bits: 2
        access: R/W1C/H
        reset: 0
        typical: 0
        description: Frame was received with Data reception error

      - name: FCSERR
        bits: 1
        access: R/W1C/H
        reset: 0
        typical: 0
        description: Frame was received with FCS/CRC error

      - name: JABBER
        bits: 0
        access: R/W1C/H
        reset: 0
        typical: 0
        description: Frame was received with length > sys_length


  - name: BGX(0..5)_SMU(0..3)_RX_FRM_CTL
    address: 0x11800E0020008 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: |
      "* PRE_STRP
      When PRE_CHK is set (indicating that the PREAMBLE will be sent), PRE_STRP
      determines if the PREAMBLE+SFD bytes are thrown away or sent to the Octane
      core as part of the packet.
      In either mode, the PREAMBLE+SFD bytes are not counted toward the packet
      size when checking against the MIN and MAX bounds.  Furthermore, the bytes
      are skipped when locating the start of the L2 header for DMAC and Control
      frame recognition.
      * CTL_BCK/CTL_DRP
      These bits control how the HW handles incoming PAUSE packets.  Here are
      the most common modes of operation:
      CTL_BCK=1,CTL_DRP=1   HW does it all
      CTL_BCK=0,CTL_DRP=0   SW sees all pause frames
      CTL_BCK=0,CTL_DRP=1   all pause frames are completely ignored
      PAUSE packets should not be forwarded."
    fields:
      - name: --
        bits: 63..13
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: PTP_MODE
        bits: 12
        access: R/W
        reset: 0
        typical: 0
        description: |
          Timestamp mode
          When PTP_MODE is set, a 64-bit timestamp will be
          prepended to every incoming packet. The timestamp
          bytes are added to the packet in such a way as to
          not modify the packet's receive byte count.
          This implies that the BGX_RX_JABBER,
          BGX_RX_DECISION, and BGX_RX_UDD_SKP do not require
          any adjustment as
          they operate on the received packet size.
          When the packet reaches PKI, its size will
          reflect the additional bytes and is subject to
          the restrictions below.
          If PTP_MODE=1 and PRE_CHK=1, PRE_STRP must be 1.
          If PTP_MODE=1,
          PIP_PRT_CFGx[SKIP] should be increased by 8.
          PIP_PRT_CFGx[HIGIG_EN] should be 0.
          PIP_FRM_CHKx[MAXLEN] should be increased by 8.
          PIP_FRM_CHKx[MINLEN] should be increased by 8.
          PIP_TAG_INCx[EN] should be adjusted.
          PIP_PRT_CFGBx[ALT_SKP_EN] should be 0.

      - name: --
        bits: 11..6
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: CTL_SMAC
        bits: 5
        access: R/W
        reset: 0
        typical: 0
        description: Control Pause Frames can match station SMAC

      - name: CTL_MCST
        bits: 4
        access: R/W
        reset: 1
        typical: 1
        description: |
          Control Pause Frames can match globally assign
          Multicast address

      - name: CTL_BCK
        bits: 3
        access: R/W
        reset: 1
        typical: 1
        description: Forward pause information to TX block

      - name: CTL_DRP
        bits: 2
        access: R/W
        reset: 1
        typical: 1
        description: Drop Control Pause Frames

      - name: PRE_STRP
        bits: 1
        access: R/W
        reset: 1
        typical: 1
        description: |
          Strip off the preamble (when present)
          0=PREAMBLE+SFD is sent to core as part of frame
          1=PREAMBLE+SFD is dropped
          PRE_CHK must be set to enable this and all
          PREAMBLE features.
          If PTP_MODE=1 and PRE_CHK=1, PRE_STRP must be 1.

      - name: PRE_CHK
        bits: 0
        access: R/W
        reset: 1
        typical: 1
        description: |
          This port is configured to send a valid 802.3
          PREAMBLE to begin every frame. BGX checks that a
          valid PREAMBLE is received (based on PRE_FREE).
          When a problem does occur within the PREAMBLE
          seqeunce, the frame is marked as bad and not sent
          into the core.  The BGX_RX_INT[PCTERR]
          interrupt is also raised.
          When BGX_TX_CTL[HG_EN] is set, PRE_CHK
          must be zero.
          If PTP_MODE=1 and PRE_CHK=1, PRE_STRP must be 1.


  - name: BGX(0..5)_SMU(0..3)_RX_FRM_CHK
    address: 0x11800E0020010 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: Enable bits for subset of errors passed to CMR encoded
    fields:
      - name: --
        bits: 63..9
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: SKPERR
        bits: 8
        access: R/W
        reset: 1
        typical: 1
        description: Skipper error

      - name: RCVERR
        bits: 7
        access: R/W
        reset: 1
        typical: 1
        description: Frame was received with Data reception error

      - name: --
        bits: 6
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: FCSERR_C
        bits: 5
        access: R/W
        reset: 1
        typical: 1
        description: Control Frame was received with FCS/CRC error

      - name: FCSERR_D
        bits: 4
        access: R/W
        reset: 1
        typical: 1
        description: Data Frame was received with FCS/CRC error

      - name: JABBER
        bits: 3
        access: R/W
        reset: 1
        typical: 1
        description: Frame was received with length > sys_length

      - name: --
        bits: 2..0
        access: ---
        reset: --
        typical: --
        description: Reserved.


  - name: BGX(0..5)_SMU(0..3)_RX_JABBER
    address: 0x11800E0020018 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: |
      CNT must be 8-byte aligned such that CNT[2:0] == 0
      The packet that will be sent to the packet input logic will have an
      additionl 8 bytes if BGX_RX_FRM_CTL[PRE_CHK] is set and
      BGX_RX_FRM_CTL[PRE_STRP] is clear.  The max packet that will be sent is
      defined as...
      max_sized_packet = BGX_RX_JABBER[CNT]+((BGX_RX_FRM_CTL[PRE_CHK] &
      !BGX_RX_FRM_CTL[PRE_STRP])*8)
    fields:
      - name: --
        bits: 63..16
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: CNT
        bits: 15..0
        access: R/W
        reset: 0x2800
        typical: 0x2800
        description: |
          Byte count for jabber check
          Failing packets set the JABBER interrupt and are
          optionally sent with opcode==JABBER
          BGX will truncate the packet to CNT+1 to CNT+8 bytes


  - name: BGX(0..5)_SMU(0..3)_RX_DECISION
    address: 0x11800E0020020 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: |
      As each byte in a packet is received by BGX, the L2 byte count is compared
      against the BGX_RX_DECISION[CNT].  The L2 byte count is the number of bytes
      from the beginning of the L2 header (DMAC).  In normal operation, the L2
      header begins after the PREAMBLE+SFD (BGX_RX_FRM_CTL[PRE_CHK]=1) and any
      optional UDD skip data (BGX_RX_UDD_SKP[LEN]).
      When BGX_RX_FRM_CTL[PRE_CHK] is clear, PREAMBLE+SFD are prepended to the
      packet and would require UDD skip length to account for them.
    fields:
      - name: --
        bits: 63..5
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: CNT
        bits: 4..0
        access: R/W
        reset: 0x18
        typical: 0x18
        description: |
          The byte count to decide when to accept or filter
          a packet.


  - name: BGX(0..5)_SMU(0..3)_RX_UDD_SKP
    address: 0x11800E0020028 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: |
      (1) The skip bytes are part of the packet and will be sent down the NCB
      packet interface and will be handled by PKI.
      (2) The system can determine if the UDD bytes are included in the FCS check
      by using the FCSSEL field if the FCS check is enabled.
      (3) Assume that the preamble/sfd is always at the start of the frame even
      before UDD bytes.  In most cases, there will be no preamble in these
      cases since it will be packet interface in direct communication to
      another packet interface (MAC to MAC) without a PHY involved.
      (4) We can still do address filtering and control packet filtering if the
      user desires.
      (6) In all cases, the UDD bytes will be sent down the packet interface as
      part of the packet.  The UDD bytes are never stripped from the actual
      packet.
    fields:
      - name: --
        bits: 63..9
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: FCSSEL
        bits: 8
        access: R/W
        reset: 0
        typical: 0
        description: |
          Include the skip bytes in the FCS calculation
          0 = all skip bytes are included in FCS
          1 = the skip bytes are not included in FCS
          When BGX_TX_CTL[HG_EN] is set, FCSSEL must
          be zero.

      - name: --
        bits: 7
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: LEN
        bits: 6..0
        access: R/W
        reset: 0x0
        typical: 0x0
        description: |
          Amount of User-defined data before the start of
          the L2 data.  Zero means L2 comes first.
          Max value is 64.
          When BGX_TX_CTL[HG_EN] is set, LEN must be
          set to 12 or 16 (depending on HiGig header size)
          to account for the HiGig header. LEN=12 selects
          HiGig/HiGig+, and LEN=16 selects HiGig2.


  - name: BGX(0..5)_SMU(0..3)_RX_CTL
    address: 0x11800E0020030 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..2
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: STATUS
        bits: 1..0
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: |
          Link Status
          0=Link OK
          1=Local Fault
          2=Remote Fault
          3=Reserved


  - name: BGX(0..5)_SMU(0..3)_RX_BAD_COL_LO
    address: 0x11800E0020038 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: LANE_RXD
        bits: 63..0
        access: RO/H
        reset: 0x0
        typical: --
        description: |
          When BGX_RX_INT[PCTERR] is set, LANE_RXD will
          contain the column at the time of the error.


  - name: BGX(0..5)_SMU(0..3)_RX_BAD_COL_HI
    address: 0x11800E0020040 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..19
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: VAL
        bits: 18
        access: R/W1C/H
        reset: 0
        typical: --
        description: Set when BGX_RX_INT[PCTERR] is set.

      - name: STATE
        bits: 17..8
        access: RO/H
        reset: 0x0
        typical: --
        description: |
          When BGX_RX_INT[PCTERR] is set, STATE will
          contain the receive state and the LMAC ID at the time of the
          error.

      - name: LANE_RXC
        bits: 7..0
        access: RO/H
        reset: 0x0
        typical: --
        description: |
          When BGX_RX_INT[PCTERR] is set, LANE_RXC will
          contain the column at the time of the error.


  - name: BGX(0..5)_SMU(0..3)_TX_APPEND
    address: 0x11800E0020100 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: |
      For more details on the interactions between
      FCS and PAD, see also the description of
      BGX_TX_MIN_PKT[MIN_SIZE]
    fields:
      - name: --
        bits: 63..4
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: FCS_C
        bits: 3
        access: R/W
        reset: 1
        typical: 1
        description: |
          Append the Ethernet FCS on each pause packet
          Pause packets are normally padded to 60 bytes.

      - name: FCS_D
        bits: 2
        access: R/W
        reset: 1
        typical: 1
        description: Append the Ethernet FCS on each data packet

      - name: PAD
        bits: 1
        access: R/W
        reset: 1
        typical: 1
        description: Append PAD bytes such that min sized

      - name: PREAMBLE
        bits: 0
        access: R/W
        reset: 1
        typical: 1
        description: |
          Prepend the Ethernet preamble on each transfer
          When BGX_TX_CTL[HG_EN] is set, PREAMBLE
          must be zero.


  - name: BGX(0..5)_SMU(0..3)_SMAC
    address: 0x11800E0020108 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: SMAC
        bits: 47..0
        access: R/W
        reset: 0x0
        typical: --
        description: |
          The SMAC field is used for generating and
          accepting Control Pause packets


  - name: BGX(0..5)_SMU(0..3)_TX_PAUSE_PKT_TIME
    address: 0x11800E0020110 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: |
      Choosing proper values of BGX_TX_PAUSE_PKT_TIME[P_TIME] and
      BGX_TX_PAUSE_PKT_INTERVAL[INTERVAL] can be challenging to the system
      designer.  It is suggested that P_TIME be much greater than INTERVAL and
      BGX_TX_PAUSE_ZERO[SEND] be set.  This allows a periodic refresh of the PAUSE
      count and then when the backpressure condition is lifted, a PAUSE packet
      with P_TIME==0 will be sent indicating that Octane is ready for additional
      data.
      If the system chooses to not set BGX_TX_PAUSE_ZERO[SEND], then it is
      suggested that P_TIME and INTERVAL are programmed such that they satisify the
      following rule...
      INTERVAL <= P_TIME (largest_pkt_size + IFG + pause_pkt_size)
      where largest_pkt_size is that largest packet that the system can send
      (normally 1518B), IFG is the interframe gap and pause_pkt_size is the size
      of the PAUSE packet (normally 64B).
    fields:
      - name: --
        bits: 63..16
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: P_TIME
        bits: 15..0
        access: R/W
        reset: 0x60
        typical: --
        description: |
          The pause_time field placed in outbnd 802.3 pause
          packets, HiGig2 messages, or PFC/CBFC pause
          packets.
          pause_time is in 512 bit-times
          Normally, P_TIME > BGX_TX_PAUSE_PKT_INTERVAL


  - name: BGX(0..5)_SMU(0..3)_TX_MIN_PKT
    address: 0x11800E0020118 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..8
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: MIN_SIZE
        bits: 7..0
        access: R/W
        reset: 0x40
        typical: 0x40
        description: |
          Min frame in bytes inclusive of FCS, if applied.
          Padding is only appended when BGX_TX_APPEND[PAD]
          for the coresponding port is set.
          When FCS is added to a packet which was padded,
          the FCS will always appear in the 4 octets
          preceding /T/ or /E/


  - name: BGX(0..5)_SMU(0..3)_TX_PAUSE_PKT_INTERVAL
    address: 0x11800E0020120 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: |
      Choosing proper values of BGX_TX_PAUSE_PKT_TIME[P_TIME] and
      BGX_TX_PAUSE_PKT_INTERVAL[INTERVAL] can be challenging to the system
      designer.  It is suggested that P_TIME be much greater than INTERVAL and
      BGX_TX_PAUSE_ZERO[SEND] be set.  This allows a periodic refresh of the PAUSE
      count and then when the backpressure condition is lifted, a PAUSE packet
      with P_TIME==0 will be sent indicating that Octane is ready for additional
      data.
      If the system chooses to not set BGX_TX_PAUSE_ZERO[SEND], then it is
      suggested that P_TIME and INTERVAL are programmed such that they satisify the
      following rule...
      INTERVAL <= P_TIME (largest_pkt_size + IFG + pause_pkt_size)
      where largest_pkt_size is that largest packet that the system can send
      (normally 1518B), IFG is the interframe gap and pause_pkt_size is the size
      of the PAUSE packet (normally 64B).
    fields:
      - name: --
        bits: 63..33
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: HG2_INTRA_EN
        bits: 32
        access: R/W
        reset: 0
        typical: --
        description: |
          Allow intrapacket HiGig2 message generation
          Relevant only if HiGig2 message generation is enabled

      - name: HG2_INTRA_INTERVAL
        bits: 31..16
        access: R/W
        reset: 0x10
        typical: --
        description: |
          Arbitrate for a HiGig2 message, every (INTERVAL*512)
          bit-times whilst sending regular packet data
          Relevant only if HiGig2 message generation and HG2_INTRA_EN
          are both set.
          Normally, 0 < INTERVAL < BGX_TX_PAUSE_PKT_TIME
          INTERVAL=0, will only send a single PAUSE packet
          for each backpressure event

      - name: INTERVAL
        bits: 15..0
        access: R/W
        reset: 0x10
        typical: --
        description: |
          Arbitrate for a 802.3 pause packet, HiGig2 message,
          or PFC/CBFC pause packet every (INTERVAL*512)
          bit-times.
          Normally, 0 < INTERVAL < BGX_TX_PAUSE_PKT_TIME
          INTERVAL=0, will only send a single PAUSE packet
          for each backpressure event


  - name: BGX(0..5)_SMU(0..3)_TX_SOFT_PAUSE
    address: 0x11800E0020128 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..16
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: P_TIME
        bits: 15..0
        access: R/W
        reset: 0x0
        typical: --
        description: Back off the TX bus for (P_TIME*512) bit-times


  - name: BGX(0..5)_SMU(0..3)_TX_PAUSE_TOGO
    address: 0x11800E0020130 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..32
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: MSG_TIME
        bits: 31..16
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: |
          Amount of time remaining to backpressure
          From the higig2 physical message pause timer
          (only valid on port0)

      - name: P_TIME
        bits: 15..0
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: |
          Amount of time remaining to backpressure
          From the standard 802.3 pause timer


  - name: BGX(0..5)_SMU(0..3)_TX_PAUSE_ZERO
    address: 0x11800E0020138 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..1
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: SEND
        bits: 0
        access: R/W
        reset: 1
        typical: 1
        description: |
          When backpressure condition clear, send PAUSE
          packet with pause_time of zero to enable the
          channel


  - name: BGX(0..5)_SMU(0..3)_TX_INT
    address: 0x11800E0020140 + a*0x1000000 + b*0x100000
    bus: RSL
    attributes:
      rtlgen_cib: "True"
    fields:
      - name: --
        bits: 63..5
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: LB_OVRFLW
        bits: 4
        access: R/W1C/H
        reset: 0
        typical: 0
        description: TX Loopback Overflow

      - name: LB_UNDFLW
        bits: 3
        access: R/W1C/H
        reset: 0
        typical: 0
        description: TX Loopback Underflow

      - name: FAKE_COMMIT
        bits: 2
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          TX SMU started a packet with PTP on SOP and has not seen a commit for it
          from TX SPU after 2^SMU_TX_PTP_TIMEOUT_WIDTH (2^8) cycles so it faked a
          commit to CMR

      - name: XCHANGE
        bits: 1
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          link status changed - this denotes a
          change to BGX_RX_CTL[STATUS]

      - name: UNDFLW
        bits: 0
        access: R/W1C/H
        reset: 0
        typical: 0
        description: TX Underflow


  - name: BGX(0..5)_SMU(0..3)_TX_IFG
    address: 0x11800E0020148 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: |
      "'"* Programming IFG1 and IFG2.
      For XAUI/RXAUI/10Gbs/40Gbs systems that require IEEE 802.3 compatibility, the
      IFG1+IFG2 sum must be 12.'
      In loop-back mode the IFG1+IFG2 of local and remote parties MUST MATCH EXACTLY
      otherwise one of the two side's loop-back FIFO will overrun:
      BGX(0..5)_SMU(0..3)_TX_INT.LB_OVRFLW"
    fields:
      - name: --
        bits: 63..8
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: IFG2
        bits: 7..4
        access: R/W
        reset: 0x4
        typical: --
        description: 1/2 of the interframe gap timing (in IFG2*8 bits)

      - name: IFG1
        bits: 3..0
        access: R/W
        reset: 0x8
        typical: --
        description: 1/2 of the interframe gap timing (in IFG1*8 bits)


  - name: BGX(0..5)_SMU(0..3)_TX_PAUSE_PKT_DMAC
    address: 0x11800E0020150 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: DMAC
        bits: 47..0
        access: R/W
        reset: 0x180c2000001
        typical: 0x180c2000001
        description: The DMAC field placed is outbnd pause pkts


  - name: BGX(0..5)_SMU(0..3)_TX_PAUSE_PKT_TYPE
    address: 0x11800E0020158 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..16
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: P_TYPE
        bits: 15..0
        access: R/W
        reset: 0x8808
        typical: 0x8808
        description: The P_TYPE field placed is outbnd pause pkts


  - name: BGX(0..5)_SMU(0..3)_TX_CTL
    address: 0x11800E0020160 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..31
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: SPU_MRK_CNT
        bits: 30..11
        access: R/W
        reset: 0xffff
        typical: 0xffff
        description: |
          Marker counter for SPU. Initialize counter to
          this value and decrement on SPU heartbeat. Insert
          data-free markers on last 4 (3, 2, 1, 0). Send SPU
          2 LSB of this counter.

      - name: HG_PAUSE_HGI
        bits: 10..9
        access: R/W
        reset: 0x2
        typical: 0x2
        description: HGI Field for HW generated HiGig pause packets

      - name: HG_EN
        bits: 8
        access: R/W
        reset: 0
        typical: 0
        description: |
          Enable HiGig Mode
          When HG_EN is set and BGX_RX_UDD_SKP[SKIP]=12
          the interface is in HiGig/HiGig+ mode and the
          following must be set:
          BGX_RX_FRM_CTL[PRE_CHK] == 0
          BGX_RX_UDD_SKP[FCSSEL] == 0
          BGX_RX_UDD_SKP[SKIP] == 12
          BGX_TX_APPEND[PREAMBLE] == 0
          When HG_EN is set and BGX_RX_UDD_SKP[SKIP]=16
          the interface is in HiGig2 mode and the
          following must be set:
          BGX_RX_FRM_CTL[PRE_CHK] == 0
          BGX_RX_UDD_SKP[FCSSEL] == 0
          BGX_RX_UDD_SKP[SKIP] == 16
          BGX_TX_APPEND[PREAMBLE] == 0
          BGX_SMU@_CBFC_CTL[RX_EN] == 0
          BGX_SMU@_CBFC_CTL[TX_EN] == 0

      - name: --
        bits: 7
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: LS_BYP
        bits: 6
        access: R/W
        reset: 0
        typical: 0
        description: |
          Bypass the link status as determined by the XGMII
          receiver and set the link status of the
          transmitter to LS.

      - name: LS
        bits: 5..4
        access: R/W
        reset: 0x0
        typical: 0x0
        description: |
          Link Status
          0 = Link Ok
          Link runs normally. RS passes MAC data to PCS
          1 = Local Fault
          RS layer sends continuous remote fault
          sequences.
          2 = Remote Fault
          RS layer sends continuous idles sequences
          3 = Link Drain
          RS layer drops full packets to allow BGX and
          PKO to drain their FIFOs

      - name: --
        bits: 3..2
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: UNI_EN
        bits: 1
        access: R/W
        reset: 0
        typical: 0
        description: Enable Unidirectional Mode (IEEE Clause 66)

      - name: DIC_EN
        bits: 0
        access: R/W
        reset: 0
        typical: 1
        description: Enable the deficit idle counter for IFG averaging


  - name: BGX(0..5)_SMU(0..3)_TX_THRESH
    address: 0x11800E0020168 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..11
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: CNT
        bits: 10..0
        access: R/W
        reset: 0x20
        typical: 0x20
        description: |
          Number of 128b words to accumulate in the TX FIFO
          before sending on the packet interface
          This register should be large enough to prevent
          underflow on the packet interface and must never
          be set to zero.
          10G/40G Mode, CNT == 0x100
          In all modes, this register cannot exceed the
          the TX FIFO depth which is...
          BGX_CMR_TX_LMACS==0,1:  CNT MAX = 0x7FF
          BGX_CMR_TX_LMACS==2  :  CNT MAX = 0x3FF
          BGX_CMR_TX_LMACS==3  :  CNT MAX = 0x1FF


  - name: BGX(0..5)_SMU(0..3)_CTRL
    address: 0x11800E0020200 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      "**************************************************************
       BGX TX common (to all LMACs) registers                       *
       **************************************************************
       **************************************************************
       BGX TX/RX registers                                          *
       **************************************************************
       BGX_SMU_CTRL = SMU Control Register"
    fields:
      - name: --
        bits: 63..2
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: TX_IDLE
        bits: 1
        access: RO/H
        reset: 1
        typical: --
        description: TX Machine is idle

      - name: RX_IDLE
        bits: 0
        access: RO/H
        reset: 1
        typical: --
        description: RX Machine is idle


  - name: BGX(0..5)_SMU(0..3)_EXT_LOOPBACK
    address: 0x11800E0020208 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: |
      In loop-back mode the IFG1+IFG2 of local and remote parties MUST MATCH EXACTLY
      otherwise one of the two side's loop-back FIFO will overrun:
      BGX(0..5)_SMU(0..3)_TX_INT.LB_OVRFLW
    fields:
      - name: --
        bits: 63..5
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: EN
        bits: 4
        access: R/W
        reset: 0
        typical: 0
        description: |
          Loopback enable
          Puts the packet interface in external loopback
          mode where the RX lines are reflected on the TX lines.

      - name: THRESH
        bits: 3..0
        access: R/W
        reset: 0x2
        typical: 0x2
        description: |
          Threshhold on the TX FIFO
          SW must only write the typical value.  Any other
          value will cause loopback mode not to function
          correctly.


  - name: BGX(0..5)_SMU(0..3)_HG2_CONTROL
    address: 0x11800E0020210 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: |
      The HiGig2 TX and RX enable would normally be both set together for HiGig2 messaging. However
      setting just the TX or RX bit will result in only the HG2 message transmit or the receive
      capability.
      PHYS_EN and LOGL_EN bits when 1, allow link pause or back pressure to PKO as per received
      HiGig2 message. When 0, link pause and back pressure to PKO in response to received messages
      are disabled.
      BGX*_TX_CTL[HG_EN] must be set to one(to enable HiGig) whenever either HG2TX_EN or HG2RX_EN
      are set.
      BGX*_RX0_UDD_SKP[LEN] must be set to 16 (to select HiGig2) whenever either HG2TX_EN or
      HG2RX_EN
      are set.
      BGX*_RX_OVR_BP[EN<0>] must be set to one and BGX*_RX_OVR_BP[BP<0>] must be cleared to zero
      (to forcibly disable HW-automatic 802.3 pause packet generation) with the HiGig2 Protocol when
      BGX*_HG2_CONTROL[HG2TX_EN]=0. (The HiGig2 protocol is indicated by BGX*_TX_CTL[HG_EN]=1
      and BGX*_RX0_UDD_SKP[LEN]=16.) The HW can only auto-generate backpressure via HiGig2 messages
      (optionally, when HG2TX_EN=1) with the HiGig2 protocol.
    fields:
      - name: --
        bits: 63..19
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: HG2TX_EN
        bits: 18
        access: R/W
        reset: 0
        typical: 0
        description: |
          Enable Transmission of HG2 phys and logl messages
          When set, also disables HW auto-generated (802.3
          and PFC/CBFC) pause frames. (OCTEON cannot generate
          proper 802.3 or PFC/CBFC pause frames in HiGig2
          mode.)

      - name: HG2RX_EN
        bits: 17
        access: R/W
        reset: 0
        typical: 0
        description: |
          Enable extraction and processing of HG2 message
          packet from RX flow. Physical logical pause info
          is used to pause physical link, back pressure PKO
          HG2RX_EN must be set when HiGig2 messages are
          present in the receive stream.

      - name: PHYS_EN
        bits: 16
        access: R/W
        reset: 1
        typical: --
        description: |
          1 bit physical link pause enable for recevied
          HiGig2 physical pause message

      - name: LOGL_EN
        bits: 15..0
        access: R/W
        reset: 0xffff
        typical: --
        description: |
          16 bit xof enables for recevied HiGig2 messages
          or PFC/CBFC packets


  - name: BGX(0..5)_SMU(0..3)_CBFC_CTL
    address: 0x11800E0020218 + a*0x1000000 + b*0x100000
    bus: RSL
    internal: |
      XOFF for a specific port is XOFF<lmac> = (PHYS_EN<lmac> & PHYS_BP) | (LOGL_EN<lmac> &
      LOGL_BP<lmac>)
    fields:
      - name: PHYS_EN
        bits: 63..48
        access: R/W
        reset: 0xff
        typical: 0xff
        description: |
          Determines which ports will have physical
          backpressure pause packets.
          The value placed in the Class Enable Vector
          field of the PFC/CBFC pause packet will be
          PHYS_EN | LOGL_EN

      - name: LOGL_EN
        bits: 47..32
        access: R/W
        reset: 0xff
        typical: 0xff
        description: |
          Determines which ports will have logical
          backpressure pause packets.
          The value placed in the Class Enable Vector
          field of the PFC/CBFC pause packet will be
          PHYS_EN | LOGL_EN

      - name: --
        bits: 31..4
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: BCK_EN
        bits: 3
        access: R/W
        reset: 0
        typical: 0
        description: Forward PFC/CBFC Pause information to BP block

      - name: DRP_EN
        bits: 2
        access: R/W
        reset: 0
        typical: 0
        description: Drop Control PFC/CBFC Pause Frames

      - name: TX_EN
        bits: 1
        access: R/W
        reset: 0
        typical: 0
        description: |
          When set, allow for PFC/CBFC Pause Packets
          Must be clear in HiGig2 mode i.e. when
          BGX_TX_CTL[HG_EN]=1 and
          BGX_RX_UDD_SKP[SKIP]=16.

      - name: RX_EN
        bits: 0
        access: R/W
        reset: 0
        typical: 0
        description: |
          When set, allow for PFC/CBFC Pause Packets
          Must be clear in HiGig2 mode i.e. when
          BGX_TX_CTL[HG_EN]=1 and
          BGX_RX_UDD_SKP[SKIP]=16.


  - name: BGX(0..5)_GMP_PCS_MR(0..3)_CONTROL
    address: 0x11800E0030000 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      NOTE:
      Whenever AN_EN bit[12] is set, Auto negotiation is allowed to happen. The results
      of the auto negotiation process set the fields in the AN_RESULTS reg. When AN_EN is not set,
      AN_RESULTS reg is don't care. The effective SPD, DUP etc.. get their values
      from the pcs_mr_ctrl reg.
    fields:
      - name: --
        bits: 63..16
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: RESET
        bits: 15
        access: R/W/H
        reset: 0
        typical: 0
        description: |
          1=SW Reset, the bit will return to 0 after pcs has
          been reset. Takes 32 sclk cycles to reset pcs

      - name: LOOPBCK1
        bits: 14
        access: R/W
        reset: 0
        typical: 0
        description: |
          0=normal operation, 1=loopback. The loopback mode
          will return(loopback) tx data from GMII tx back to
          GMII rx interface. The loopback happens in the pcs
          module. Auto Negotiation will be disabled even if
          the AN_EN bit is set, during loopback

      - name: SPDLSB
        bits: 13
        access: R/W
        reset: 0
        typical: 0
        description: See bit 6 description

      - name: AN_EN
        bits: 12
        access: R/W
        reset: 0
        typical: 0
        description: 1=AN Enable, 0=AN Disable

      - name: PWR_DN
        bits: 11
        access: R/W
        reset: 1
        typical: 0
        description: 1=Power Down(HW reset), 0=Normal operation

      - name: --
        bits: 10
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: RST_AN
        bits: 9
        access: R/W/H
        reset: 0
        typical: 0
        description: |
          If bit 12 is set and bit 3 of status reg is 1
          Auto Negotiation begins. Else,SW writes are ignored
          and this bit remians at 0. This bit clears itself
          to 0, when AN starts.

      - name: DUP
        bits: 8
        access: R/W
        reset: 1
        typical: 1
        description: |
          1=full duplex, 0=half duplex; effective only if AN
          disabled. If status register bits [15:9] and and
          extended status reg bits [15:12] allow only one
          duplex mode|, this bit will correspond to that
          value and any attempt to write will be ignored.

      - name: COLTST
        bits: 7
        access: R/W
        reset: 0
        typical: 0
        description: |
          1=enable COL signal test, 0=disable test
          During COL test, the COL signal will reflect the
          GMII TX_EN signal with less than 16BT delay

      - name: SPDMSB
        bits: 6
        access: R/W
        reset: 1
        typical: 1
        description: |
          {<6>, <13>}Link Speed effective only if AN disabled
          0    0  10Mb/s
          0    1  100Mb/s
          1    0  1000Mb/s
          1    1  NS

      - name: UNI
        bits: 5
        access: R/W
        reset: 0
        typical: 0
        description: |
          Unidirectional (Std 802.3-2005, Clause 66.2)
          This bit will override the AN_EN bit and disable
          auto-negotiation variable mr_an_enable, when set
          Used in both 1000Base-X and SGMII modes

      - name: --
        bits: 4..0
        access: ---
        reset: --
        typical: --
        description: Reserved.


  - name: BGX(0..5)_GMP_PCS_MR(0..3)_STATUS
    address: 0x11800E0030008 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      Bits [15:9] in the Status Register indicate ability to operate as per those signalling
      specification,
      when misc ctl reg MAC_PHY bit is set to MAC mode. Bits [15:9] will all, always read 0,
      indicating
      that the chip cannot operate in the corresponding modes.
      Bit [4] RM_FLT is a don't care when the selected mode is SGMII.
      BGX_GMP_PCS_MR_STATUS = Status Register1
    fields:
      - name: --
        bits: 63..16
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: HUN_T4
        bits: 15
        access: RO
        reset: 0
        typical: 0
        description: 1 means 100Base-T4 capable

      - name: HUN_XFD
        bits: 14
        access: RO
        reset: 0
        typical: 0
        description: 1 means 100Base-X Full Duplex

      - name: HUN_XHD
        bits: 13
        access: RO
        reset: 0
        typical: 0
        description: 1 means 100Base-X Half Duplex

      - name: TEN_FD
        bits: 12
        access: RO
        reset: 0
        typical: 0
        description: 1 means 10Mb/s Full Duplex

      - name: TEN_HD
        bits: 11
        access: RO
        reset: 0
        typical: 0
        description: 1 means 10Mb/s Half Duplex

      - name: HUN_T2FD
        bits: 10
        access: RO
        reset: 0
        typical: 0
        description: 1 means 100Base-T2 Full Duplex

      - name: HUN_T2HD
        bits: 9
        access: RO
        reset: 0
        typical: 0
        description: 1 means 100Base-T2 Half Duplex

      - name: EXT_ST
        bits: 8
        access: RO
        reset: 1
        typical: 1
        description: 1 means extended status info in reg15

      - name: --
        bits: 7
        access: ---
        reset: 0
        typical: 0
        description: Reserved.

      - name: PRB_SUP
        bits: 6
        access: RO
        reset: 1
        typical: 1
        description: |
          1 means able to work without preamble bytes at the
          beginning of frames. 0 means not able to accept
          frames without preamble bytes preceding them.

      - name: AN_CPT
        bits: 5
        access: RO
        reset: 0
        typical: 0
        description: |
          1 means Auto Negotiation is complete and the
          contents of the an_results_reg are valid.

      - name: RM_FLT
        bits: 4
        access: RO
        reset: 0
        typical: 0
        description: |
          Set to 1 when remote flt condition occurs. This bit
          implements a latching Hi behavior. It is cleared by
          SW read of this reg or when reset bit [15] in
          Control Reg is asserted.
          See an adv reg[13:12] for flt conditions

      - name: AN_ABIL
        bits: 3
        access: RO
        reset: 1
        typical: 1
        description: 1 means Auto Negotiation capable

      - name: LNK_ST
        bits: 2
        access: RO
        reset: 0
        typical: 1
        description: |
          1=link up, 0=link down. Set during AN process
          Set whenever XMIT=DATA. Latching Lo behavior when
          link goes down. Link down value of the bit stays
          low until SW reads the reg.

      - name: --
        bits: 1
        access: ---
        reset: 0
        typical: 0
        description: Reserved.

      - name: EXTND
        bits: 0
        access: RO
        reset: 0
        typical: 0
        description: Always 0, no extended capability regs present


  - name: BGX(0..5)_GMP_PCS_AN(0..3)_ADV
    address: 0x11800E0030010 + a*0x1000000 + b*0x100000
    bus: RSL
    description: BGX_GMP_PCS_AN_ADV = AN Advertisement Register4
    fields:
      - name: --
        bits: 63..16
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: NP
        bits: 15
        access: RO
        reset: 0
        typical: 0
        description: Always 0, no next page capability supported

      - name: --
        bits: 14
        access: ---
        reset: 0
        typical: 0
        description: Reserved.

      - name: REM_FLT
        bits: 13..12
        access: R/W/H
        reset: 0x0
        typical: 0x0
        description: |
          {<13>,<12>}
          0    0  Link OK  XMIT=DATA
          0    1  Link failure (loss of sync, XMIT!= DATA)
          1    0  local device Offline
          1    1  AN Error failure to complete AN
          AN Error is set if resolution function
          precludes operation with link partner

      - name: --
        bits: 11..9
        access: ---
        reset: 0x0
        typical: 0x0
        description: reserved

      - name: PAUSE
        bits: 8..7
        access: R/W
        reset: 0x0
        typical: 0x0
        description: |
          {<8>, <7>} Pause frame flow capability across link
          Exchanged during Auto Negotiation
          0    0  No Pause
          0    1  Symmetric pause
          1    0  Asymmetric Pause
          1    1  Both symm and asymm pause to local device

      - name: HFD
        bits: 6
        access: R/W
        reset: 1
        typical: 1
        description: 1 means local device Half Duplex capable

      - name: FD
        bits: 5
        access: R/W
        reset: 1
        typical: 1
        description: 1 means local device Full Duplex capable

      - name: --
        bits: 4..0
        access: ---
        reset: 0x0
        typical: 0x0
        description: reserved


  - name: BGX(0..5)_GMP_PCS_AN(0..3)_LP_ABIL
    address: 0x11800E0030018 + a*0x1000000 + b*0x100000
    bus: RSL
    description: as per IEEE802.3 Clause 37
    fields:
      - name: --
        bits: 63..16
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: NP
        bits: 15
        access: RO
        reset: 0
        typical: 0
        description: 1=lp next page capable, 0=lp not next page capable

      - name: ACK
        bits: 14
        access: RO
        reset: 0
        typical: --
        description: 1=Acknowledgement received

      - name: REM_FLT
        bits: 13..12
        access: RO
        reset: 0x0
        typical: 0x0
        description: |
          {<13>,<12>} Link Partner's link status
          0    0  Link OK
          0    1  Offline
          1    0  Link failure
          1    1  AN Error

      - name: --
        bits: 11..9
        access: ---
        reset: 0x0
        typical: 0x0
        description: Reserved.

      - name: PAUSE
        bits: 8..7
        access: RO
        reset: 0x0
        typical: 0x0
        description: |
          {<8>, <7>} Link Partner Pause setting
          0    0  No Pause
          0    1  Symmetric pause
          1    0  Asymmetric Pause
          1    1  Both symm and asymm pause to local device

      - name: HFD
        bits: 6
        access: RO
        reset: 0
        typical: 0
        description: 1 means link partner Half Duplex capable

      - name: FD
        bits: 5
        access: RO
        reset: 0
        typical: 0
        description: 1 means link partner Full Duplex capable

      - name: --
        bits: 4..0
        access: ---
        reset: 0x0
        typical: 0x0
        description: reserved


  - name: BGX(0..5)_GMP_PCS_AN(0..3)_RESULTS
    address: 0x11800E0030020 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      NOTE:
      an_results_reg is don't care when AN_OVRD is set to 1. If AN_OVRD=0 and AN_CPT=1
      the an_results_reg is valid.
    fields:
      - name: --
        bits: 63..7
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: PAUSE
        bits: 6..5
        access: RO
        reset: 0x0
        typical: 0x0
        description: |
          {<6>, <5>} PAUSE Selection (Don't care for SGMII)
          0    0  Disable Pause, TX and RX
          0    1  Enable pause frames RX only
          1    0  Enable Pause frames TX only
          1    1  Enable pause frames TX and RX

      - name: SPD
        bits: 4..3
        access: RO
        reset: 0x0
        typical: 0x0
        description: |
          {<4>, <3>} Link Speed Selection
          0    0  10Mb/s
          0    1  100Mb/s
          1    0  1000Mb/s
          1    1  NS

      - name: AN_CPT
        bits: 2
        access: RO
        reset: 0
        typical: 1
        description: 1=AN Completed, 0=AN not completed or failed

      - name: DUP
        bits: 1
        access: RO
        reset: 0
        typical: 0
        description: 1=Full Duplex, 0=Half Duplex

      - name: LINK_OK
        bits: 0
        access: RO
        reset: 0
        typical: 0
        description: 1=Link up(OK), 0=Link down


  - name: BGX(0..5)_GMP_PCS_AN(0..3)_EXT_ST
    address: 0x11800E0030028 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      BGX_GMP_PCS_AN_EXT_ST = AN Extended Status Register15
      as per IEEE802.3 Clause 22
    fields:
      - name: --
        bits: 63..16
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: THOU_XFD
        bits: 15
        access: RO/H
        reset: 1
        typical: 1
        description: 1 means PHY is 1000BASE-X Full Dup capable

      - name: THOU_XHD
        bits: 14
        access: RO/H
        reset: 1
        typical: 1
        description: 1 means PHY is 1000BASE-X Half Dup capable

      - name: THOU_TFD
        bits: 13
        access: RO/H
        reset: 0
        typical: 0
        description: 1 means PHY is 1000BASE-T Full Dup capable

      - name: THOU_THD
        bits: 12
        access: RO/H
        reset: 0
        typical: 0
        description: 1 means PHY is 1000BASE-T Half Dup capable

      - name: --
        bits: 11..0
        access: ---
        reset: 0x0
        typical: 0x0
        description: Reserved.


  - name: BGX(0..5)_GMP_PCS_LINK(0..3)_TIMER
    address: 0x11800E0030040 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..16
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: COUNT
        bits: 15..0
        access: R/W
        reset: 0x446
        typical: --
        description: |
          (core clock period times 1024) times "COUNT" should
          be 1.6ms(SGMII)/10ms(otherwise) which is the link
          timer used in auto negotiation.
          Reset assums a 700MHz sclk for 1.6ms link timer


  - name: BGX(0..5)_GMP_PCS_TX_RX(0..3)_POLARITY
    address: 0x11800E0030048 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      Note:
      r_tx_rx_polarity_reg bit [2] will show correct polarity needed on the link receive path after
      code grp synchronization is achieved.
      BGX_GMP_PCS_POLARITY = TX_RX polarity reg
    fields:
      - name: --
        bits: 63..4
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: RXOVRD
        bits: 3
        access: R/W
        reset: 0
        typical: 0
        description: |
          When 0, <2> determines polarity
          when 1, <1> determines polarity

      - name: AUTORXPL
        bits: 2
        access: RO/H
        reset: 0
        typical: 0
        description: |
          Auto RX polarity detected. 1=inverted, 0=normal
          This bit always represents the correct rx polarity
          setting needed for successful rx path operartion,
          once a successful code group sync is obtained

      - name: RXPLRT
        bits: 1
        access: R/W
        reset: 0
        typical: 0
        description: 1 is inverted polarity, 0 is normal polarity

      - name: TXPLRT
        bits: 0
        access: R/W
        reset: 0
        typical: 0
        description: 1 is inverted polarity, 0 is normal polarity


  - name: BGX(0..5)_GMP_PCS_RX(0..3)_SYNC
    address: 0x11800E0030050 + a*0x1000000 + b*0x100000
    bus: RSL
    description: BGX_GMP_PCS_RX_SYNC = Code Group synchronization reg
    fields:
      - name: --
        bits: 63..2
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: SYNC
        bits: 1
        access: RO
        reset: 0
        typical: 0
        description: 1 means code group synchronization achieved

      - name: BIT_LOCK
        bits: 0
        access: RO
        reset: 0
        typical: 0
        description: 1 means bit lock achieved


  - name: BGX(0..5)_GMP_PCS_RX(0..3)_STATES
    address: 0x11800E0030058 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..16
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: RX_BAD
        bits: 15
        access: RO
        reset: 0
        typical: 0
        description: Receive state machine in an illegal state

      - name: RX_ST
        bits: 14..10
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: Receive state machine state

      - name: SYNC_BAD
        bits: 9
        access: RO
        reset: 0
        typical: 0
        description: Receive synchronization SM in an illegal state

      - name: SYNC
        bits: 8..5
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: Receive synchronization SM state

      - name: AN_BAD
        bits: 4
        access: RO
        reset: 0
        typical: 0
        description: Auto Negotiation state machine in an illegal state

      - name: AN_ST
        bits: 3..0
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: Auto Negotiation state machine state


  - name: BGX(0..5)_GMP_PCS_TX(0..3)_STATES
    address: 0x11800E0030060 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..7
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: XMIT
        bits: 6..5
        access: RO/H
        reset: 0x0
        typical: --
        description: 0=undefined, 1=config, 2=idle, 3=data

      - name: TX_BAD
        bits: 4
        access: RO
        reset: 0
        typical: 0
        description: Xmit state machine in a bad state

      - name: ORD_ST
        bits: 3..0
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: Xmit ordered set state machine state


  - name: BGX(0..5)_GMP_PCS_SGM(0..3)_AN_ADV
    address: 0x11800E0030068 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      NOTE: The SGMII AN Advertisement Register will be sent during Auto Negotiation if the
      MAC_PHY mode bit in misc_ctl_reg
      is set (1=PHY mode). If the bit is not set (0=MAC mode), the tx_config_reg[14] becomes ACK bit
      and [0] is always 1.
      All other bits in tx_config_reg sent will be 0. The PHY dictates the Auto Negotiation results.
      SGMII AN Advertisement Register (sent out as tx_config_reg)
    fields:
      - name: --
        bits: 63..16
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: LINK
        bits: 15
        access: R/W
        reset: 0
        typical: 1
        description: Link status 1 Link Up, 0 Link Down

      - name: ACK
        bits: 14
        access: RO
        reset: 0
        typical: 0
        description: Auto negotiation ack

      - name: --
        bits: 13
        access: ---
        reset: 0
        typical: --
        description: Reserved for future use

      - name: DUP
        bits: 12
        access: R/W
        reset: 1
        typical: 1
        description: Duplex mode 1=full duplex, 0=half duplex

      - name: SPEED
        bits: 11..10
        access: R/W
        reset: 0x2
        typical: 0x2
        description: |
          Link Speed
          0    0  10Mb/s
          0    1  100Mb/s
          1    0  1000Mb/s
          1    1  NS

      - name: --
        bits: 9..1
        access: ---
        reset: 0x0
        typical: --
        description: Reserved for future use

      - name: ONE
        bits: 0
        access: RO
        reset: 1
        typical: 1
        description: Always set to match tx_config_reg<0>


  - name: BGX(0..5)_GMP_PCS_SGM(0..3)_LP_ADV
    address: 0x11800E0030070 + a*0x1000000 + b*0x100000
    bus: RSL
    description: SGMII LP Advertisement Register (received as rx_config_reg)
    fields:
      - name: --
        bits: 63..16
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: LINK
        bits: 15
        access: RO
        reset: 0
        typical: 1
        description: Link status 1 Link Up, 0 Link Down

      - name: --
        bits: 14
        access: ---
        reset: 0
        typical: --
        description: Reserved for auto negotiation ack

      - name: --
        bits: 13
        access: ---
        reset: 0
        typical: --
        description: Reserved for future use

      - name: DUP
        bits: 12
        access: RO
        reset: 0
        typical: 1
        description: Duplex mode 1=full duplex, 0=half duplex

      - name: SPEED
        bits: 11..10
        access: RO
        reset: 0x0
        typical: 0x2
        description: |
          Link Speed
          0    0  10Mb/s
          0    1  100Mb/s
          1    0  1000Mb/s
          1    1  NS

      - name: --
        bits: 9..1
        access: ---
        reset: 0x0
        typical: --
        description: Reserved for future use

      - name: ONE
        bits: 0
        access: RO
        reset: 1
        typical: 1
        description: Always set to match tx_config_reg<0>


  - name: BGX(0..5)_GMP_PCS_MISC(0..3)_CTL
    address: 0x11800E0030078 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      SGMII bit [12] is really a misnomer, it is a decode  of pi_qlm_cfg pins to indicate SGMII or
      1000Base-X modes.
      Note: MODE bit
      When MODE=1,  1000Base-X mode is selected. Auto negotiation will follow IEEE 802.3 clause 37.
      When MODE=0,  SGMII mode is selected and the following note will apply.
      Repeat note from SGM_AN_ADV register
      NOTE: The SGMII AN Advertisement Register above will be sent during Auto Negotiation if the
      MAC_PHY mode bit in misc_ctl_reg
      is set (1=PHY mode). If the bit is not set (0=MAC mode), the tx_config_reg[14] becomes ACK bit
      and [0] is always 1.
      All other bits in tx_config_reg sent will be 0. The PHY dictates the Auto Negotiation results.
      SGMII Misc Control Register
    fields:
      - name: --
        bits: 63..13
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: SGMII
        bits: 12
        access: RO
        reset: --
        typical: --
        description: |
          1=SGMII or 1000Base-X mode selected.
          0=XAUI or PCIE mode selected.
          See GSERx_LANE_MODE[LMODE].

      - name: GMXENO
        bits: 11
        access: R/W
        reset: 0
        typical: 0
        description: |
          GMX Enable override. When set to 1, forces GMX to
          appear disabled. The enable/disable status of GMX
          is checked only at SOP of every packet.

      - name: LOOPBCK2
        bits: 10
        access: R/W
        reset: 0
        typical: 0
        description: |
          Sets external loopback mode to return rx data back
          out via tx data path. 0=no loopback, 1=loopback

      - name: MAC_PHY
        bits: 9
        access: R/W
        reset: 0
        typical: 0
        description: |
          0=MAC, 1=PHY decides the tx_config_reg value to be
          sent during auto negotiation.
          See SGMII spec ENG-46158 from CISCO

      - name: MODE
        bits: 8
        access: R/W
        reset: 0
        typical: 0
        description: 0=SGMII or 1= 1000 Base X

      - name: AN_OVRD
        bits: 7
        access: R/W
        reset: 0
        typical: 0
        description: |
          0=disable, 1= enable over ride AN results
          Auto negotiation is allowed to happen but the
          results are ignored when set. Duplex and Link speed
          values are set from the pcs_mr_ctrl reg

      - name: SAMP_PT
        bits: 6..0
        access: R/W
        reset: 0x1
        typical: --
        description: |
          "Byte# in elongated frames for 10/100Mb/s operation
          for data sampling on RX side in PCS.
          Recommended values are 0x5 for 100Mb/s operation
          and 0x32 for 10Mb/s operation.
          For 10Mb/s operaton this field should be set to a
          value less than 99 and greater than 0. If set out
          of this range a value of 50 will be used for actual
          sampling internally without affecting the CSR field
          For 100Mb/s operation this field should be set to a
          value less than 9 and greater than 0. If set out of
          this range a value of 5 will be used for actual
          sampling internally without affecting the CSR field"


  - name: BGX(0..5)_GMP_PCS_INT(0..3)
    address: 0x11800E0030080 + a*0x1000000 + b*0x100000
    bus: RSL
    description: PCS Interrupt Register
    attributes:
      rtlgen_cib: "True"
    fields:
      - name: --
        bits: 63..13
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: DBG_SYNC
        bits: 12
        access: R/W1C/H
        reset: 0
        typical: 0
        description: Code Group sync failure debug help

      - name: DUP
        bits: 11
        access: R/W1C/H
        reset: 0
        typical: 0
        description: Set whenever Duplex mode changes on the link

      - name: SYNC_BAD
        bits: 10
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          Set by HW whenever rx sync st machine reaches a bad
          state. Should never be set during normal operation

      - name: AN_BAD
        bits: 9
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          Set by HW whenever AN st machine reaches a bad
          state. Should never be set during normal operation

      - name: RXLOCK
        bits: 8
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          Set by HW whenever code group Sync or bit lock
          failure occurs
          Cannot fire in loopback1 mode

      - name: RXBAD
        bits: 7
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          Set by HW whenever rx st machine reaches a  bad
          state. Should never be set during normal operation

      - name: RXERR
        bits: 6
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          Set whenever RX receives a code group error in
          10 bit to 8 bit decode logic
          Cannot fire in loopback1 mode

      - name: TXBAD
        bits: 5
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          Set by HW whenever tx st machine reaches a bad
          state. Should never be set during normal operation

      - name: TXFIFO
        bits: 4
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          Set whenever HW detects a TX fifo overflow
          condition

      - name: TXFIFU
        bits: 3
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          Set whenever HW detects a TX fifo underflowflow
          condition

      - name: AN_ERR
        bits: 2
        access: R/W1C/H
        reset: 0
        typical: 0
        description: AN Error, AN resolution function failed

      - name: XMIT
        bits: 1
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          Set whenever HW detects a change in the XMIT
          variable. XMIT variable states are IDLE, CONFIG and
          DATA

      - name: LNKSPD
        bits: 0
        access: R/W1C/H
        reset: 0
        typical: 0
        description: Set by HW whenever Link Speed has changed


  - name: BGX(0..5)_GMP_GMI_RX(0..3)_INT
    address: 0x11800E0038000 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      "Notes:
      (2) exception conditions 10:0 can also set the rcv/opcode in the received
      packet's workQ entry.  The BGX_GMP_GMI_RX_FRM_CHK register provides a bit mask
      for configuring which conditions set the error.
      (3) in half duplex operation, the expectation is that collisions will appear
      as either MINERR o r CAREXT errors.
      (4) JABBER An RX Jabber error indicates that a packet was received which
      is longer than the maximum allowed packet as defined by the
      system.  GMX will truncate the packet at the JABBER count.
      Failure to do so could lead to system instabilty.
      (5) NIBERR This error is illegal at 1000Mbs speeds
      (BGX_GMP_GMI_RX_PRT_CFG[SPEED]==0) and will never assert.
      (6) MAXERR for untagged frames, the total frame DA+SA+TL+DATA+PAD+FCS >
      BGX_GMP_GMI_RX_FRM_MAX.  For tagged frames, DA+SA+VLAN+TL+DATA+PAD+FCS
      > BGX_GMP_GMI_RX_FRM_MAX + 4*VLAN_VAL + 4*VLAN_STACKED.
      (7) MINERR total frame DA+SA+TL+DATA+PAD+FCS < 64
      (8) ALNERR Indicates that the packet received was not an integer number of
      bytes.  If FCS checking is enabled, ALNERR will only assert if
      the FCS is bad.  If FCS checking is disabled, ALNERR will
      assert in all non-integer frame cases.
      (9) Collisions Collisions can only occur in half-duplex mode.  A collision
      is assumed by the receiver when the slottime
      (BGX_GMP_GMI_PRT_CFG[SLOTTIME]) is not satisfied.  In 10/100 mode,
      this will result in a frame < SLOTTIME.  In 1000 mode, it
      could result either in frame < SLOTTIME or a carrier extend
      error with the SLOTTIME.  These conditions are visible by...
      . transfer ended before slottime COLDET
      . carrier extend error           CAREXT
      (A) LENERR Length errors occur when the received packet does not match the
      length field.  LENERR is only checked for packets between 64
      and 1500 bytes.  For untagged frames, the length must exact
      match.  For tagged frames the length or length+4 must match.
      (B) PCTERR checks that the frame begins with a valid PREAMBLE sequence.
      Does not check the number of PREAMBLE cycles.
      (C) OVRERR *DON'T PUT IN HRM*
      OVRERR is an architectural assertion check internal to GMX to
      make sure no assumption was violated.  In a correctly operating
      system, this interrupt can never fire.
      GMX has an internal arbiter which selects which of 4 ports to
      buffer in the main RX FIFO.  If we normally buffer 8 bytes,
      then each port will typically push a tick every 8 cycles if
      the packet interface is going as fast as possible.  If there
      are four ports, they push every two cycles.  So that's the
      assumption.  That the inbound module will always be able to
      consume the tick before another is produced.  If that doesn't
      happen that's when OVRERR will assert."
    attributes:
      rtlgen_cib: "True"
    fields:
      - name: --
        bits: 63..12
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: IFGERR
        bits: 11
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          Interframe Gap Violation
          Does not necessarily indicate a failure
          (SGMII/1000Base-X only)

      - name: COLDET
        bits: 10
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          Collision Detection
          (SGMII/1000Base-X half-duplex only)

      - name: FALERR
        bits: 9
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          False carrier error or extend error after slottime
          (SGMII/1000Base-X only)

      - name: RSVERR
        bits: 8
        access: R/W1C/H
        reset: 0
        typical: 0
        description: Reserved opcodes

      - name: PCTERR
        bits: 7
        access: R/W1C/H
        reset: 0
        typical: 0
        description: Bad Preamble / Protocol

      - name: OVRERR
        bits: 6
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          Internal Data Aggregation Overflow ??
          This interrupt should never assert
          (SGMII/1000Base-X only)

      - name: SKPERR
        bits: 5
        access: R/W1C/H
        reset: 0
        typical: 0
        description: Skipper error

      - name: RCVERR
        bits: 4
        access: R/W1C/H
        reset: 0
        typical: 0
        description: Frame was received with Data reception error

      - name: FCSERR
        bits: 3
        access: R/W1C/H
        reset: 0
        typical: 0
        description: Frame was received with FCS/CRC error

      - name: JABBER
        bits: 2
        access: R/W1C/H
        reset: 0
        typical: 0
        description: Frame was received with length > sys_length

      - name: CAREXT
        bits: 1
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          Carrier extend error
          (SGMII/1000Base-X only)

      - name: MINERR
        bits: 0
        access: R/W1C/H
        reset: 0
        typical: --
        description: |
          Pause Frame was received with length<minFrameSize
          Frame length checks are typically handled in PIP
          (PIP_INT[MINERR]), but pause frames are
          normally discarded before being inspected by PIP.


  - name: BGX(0..5)_GMP_GMI_PRT(0..3)_CFG
    address: 0x11800E0038010 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..14
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: TX_IDLE
        bits: 13
        access: RO/H
        reset: 1
        typical: --
        description: TX Machine is idle

      - name: RX_IDLE
        bits: 12
        access: RO/H
        reset: 1
        typical: --
        description: RX Machine is idle

      - name: --
        bits: 11..9
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: SPEED_MSB
        bits: 8
        access: R/W
        reset: 0
        typical: --
        description: |
          Link Speed MSB [SPEED_MSB:SPEED]
          10 = 10Mbs operation
          00 = 100Mbs operation
          01 = 1000Mbs operation
          11 = Reserved
          (SGMII/1000Base-X only)

      - name: --
        bits: 7..4
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: SLOTTIME
        bits: 3
        access: R/W
        reset: 1
        typical: --
        description: |
          Slot Time for Half-Duplex operation
          0 = 512 bitimes (10/100Mbs operation)
          1 = 4096 bitimes (1000Mbs operation)
          (SGMII/1000Base-X only)

      - name: DUPLEX
        bits: 2
        access: R/W
        reset: 1
        typical: --
        description: |
          Duplex
          0 = Half Duplex (collisions/extentions/bursts)
          1 = Full Duplex
          (SGMII/1000Base-X only)

      - name: SPEED
        bits: 1
        access: R/W
        reset: 1
        typical: --
        description: |
          Link Speed LSB [SPEED_MSB:SPEED]
          10 = 10Mbs operation
          00 = 100Mbs operation
          01 = 1000Mbs operation
          11 = Reserved
          (SGMII/1000Base-X only)

      - name: --
        bits: 0
        access: ---
        reset: --
        typical: --
        description: Reserved.


  - name: BGX(0..5)_GMP_GMI_RX(0..3)_FRM_CTL
    address: 0x11800E0038018 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      Notes:
      PRE_STRP
      When PRE_CHK is set (indicating that the PREAMBLE will be sent), PRE_STRP
      determines if the PREAMBLE+SFD bytes are thrown away or sent to the Octane
      core as part of the packet.
      In either mode, the PREAMBLE+SFD bytes are not counted toward the packet
      size when checking against the MIN and MAX bounds.  Furthermore, the bytes
      are skipped when locating the start of the L2 header for DMAC and Control
      frame recognition.
      CTL_BCK/CTL_DRP
      These bits control how the HW handles incoming PAUSE packets.  Here are
      the most common modes of operation:
      CTL_BCK=1,CTL_DRP=1   - HW does it all
      CTL_BCK=0,CTL_DRP=0   - SW sees all pause frames
      CTL_BCK=0,CTL_DRP=1   - all pause frames are completely ignored
      These control bits should be set to CTL_BCK=0,CTL_DRP=0 in halfdup mode.
      Since PAUSE packets only apply to fulldup operation, any PAUSE packet
      would constitute an exception which should be handled by the processing
      cores.  PAUSE packets should not be forwarded.
    fields:
      - name: --
        bits: 63..13
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: PTP_MODE
        bits: 12
        access: R/W
        reset: 0
        typical: 0
        description: |
          Timestamp mode
          When PTP_MODE is set, a 64-bit timestamp will be
          prepended to every incoming packet. The timestamp
          bytes are added to the packet in such a way as to
          not modify the packet's receive byte count.  This
          implies that the BGX_GMP_GMI_RX_JABBER, MINERR,
          BGX_GMP_GMI_RX_DECISION, BGX_GMP_GMI_RX_UDD_SKP, and the
          BGX_GMP_GMI_RX_STATS_* do not require any adjustment
          as they operate on the received packet size.
          When the packet reaches PKI, its size will
          reflect the additional bytes and is subject to
          the restrictions below.
          If PTP_MODE=1 and PRE_CHK=1, PRE_STRP must be 1.
          If PTP_MODE=1,
          PIP_PRT_CFGx[SKIP] should be increased by 8.
          PIP_PRT_CFGx[HIGIG_EN] should be 0.
          PIP_FRM_CHKx[MAXLEN] should be increased by 8.
          PIP_FRM_CHKx[MINLEN] should be increased by 8.
          PIP_TAG_INCx[EN] should be adjusted.
          PIP_PRT_CFGBx[ALT_SKP_EN] should be 0.

      - name: --
        bits: 11
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: NULL_DIS
        bits: 10
        access: R/W
        reset: 0
        typical: 0
        description: |
          When set, do not modify the MOD bits on NULL ticks
          due to PARITAL packets

      - name: PRE_ALIGN
        bits: 9
        access: R/W
        reset: 0
        typical: 0
        description: |
          When set, PREAMBLE parser aligns the the SFD byte
          regardless of the number of previous PREAMBLE
          nibbles.  In this mode, PRE_STRP should be set to
          account for the variable nature of the PREAMBLE.
          PRE_CHK must be set to enable this and all
          PREAMBLE features.
          (SGMII at 10/100Mbs only)

      - name: --
        bits: 8
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: --
        bits: 7
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: PRE_FREE
        bits: 6
        access: RO
        reset: 1
        typical: 1
        description: |
          When set, PREAMBLE checking is  less strict.
          GMX will begin the frame at the first SFD.
          PRE_CHK must be set to enable this and all
          PREAMBLE features.
          (SGMII/1000Base-X only)

      - name: CTL_SMAC
        bits: 5
        access: R/W
        reset: 0
        typical: 0
        description: Control Pause Frames can match station SMAC

      - name: CTL_MCST
        bits: 4
        access: R/W
        reset: 1
        typical: 1
        description: |
          Control Pause Frames can match globally assign
          Multicast address

      - name: CTL_BCK
        bits: 3
        access: R/W
        reset: 1
        typical: 1
        description: Forward pause information to TX block

      - name: CTL_DRP
        bits: 2
        access: R/W
        reset: 1
        typical: 1
        description: Drop Control Pause Frames

      - name: PRE_STRP
        bits: 1
        access: R/W
        reset: 1
        typical: 1
        description: |
          Strip off the preamble (when present)
          0=PREAMBLE+SFD is sent to core as part of frame
          1=PREAMBLE+SFD is dropped
          PRE_CHK must be set to enable this and all
          PREAMBLE features.
          If PTP_MODE=1 and PRE_CHK=1, PRE_STRP must be 1.

      - name: PRE_CHK
        bits: 0
        access: R/W
        reset: 1
        typical: 1
        description: |
          This port is configured to send a valid 802.3
          PREAMBLE to begin every frame. GMX checks that a
          valid PREAMBLE is received (based on PRE_FREE).
          When a problem does occur within the PREAMBLE
          seqeunce, the frame is marked as bad and not sent
          into the core.  The BGX_GMP_GMI_RX_INT[PCTERR]
          interrupt is also raised.
          If PTP_MODE=1 and PRE_CHK=1, PRE_STRP must be 1.


  - name: BGX(0..5)_GMP_GMI_RX(0..3)_FRM_CHK
    address: 0x11800E0038020 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      Notes:
      If BGX_GMP_GMI_RX_UDD_SKP[LEN] != 0, then LENERR will be forced to zero in HW.
      BGX_GMP_GMI_RX_FRM_CHK = Which frame errors will set the ERR bit of the frame
    fields:
      - name: --
        bits: 63..9
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: SKPERR
        bits: 8
        access: R/W
        reset: 1
        typical: 1
        description: Skipper error

      - name: RCVERR
        bits: 7
        access: R/W
        reset: 1
        typical: 1
        description: Frame was received with Data reception error

      - name: --
        bits: 6..5
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: FCSERR
        bits: 4
        access: R/W
        reset: 1
        typical: 1
        description: Frame was received with FCS/CRC error

      - name: JABBER
        bits: 3
        access: R/W
        reset: 1
        typical: 1
        description: Frame was received with length > sys_length

      - name: --
        bits: 2
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: CAREXT
        bits: 1
        access: R/W
        reset: 1
        typical: 1
        description: |
          Carrier extend error
          (SGMII/1000Base-X only)

      - name: MINERR
        bits: 0
        access: R/W
        reset: 1
        typical: 1
        description: Pause Frame was received with length<minFrameSize


  - name: BGX(0..5)_GMP_GMI_RX(0..3)_JABBER
    address: 0x11800E0038038 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      Notes:
      CNT must be 8-byte aligned such that CNT[2:0] == 0
      The packet that will be sent to the packet input logic will have an
      additionl 8 bytes if BGX_GMP_GMI_RX_FRM_CTL[PRE_CHK] is set and
      BGX_GMP_GMI_RX_FRM_CTL[PRE_STRP] is clear.  The max packet that will be sent is
      defined as...
      max_sized_packet = BGX_GMP_GMI_RX_JABBER[CNT]+((BGX_GMP_GMI_RX_FRM_CTL[PRE_CHK] &
      !BGX_GMP_GMI_RX_FRM_CTL[PRE_STRP])*8)
      BGX_GMP_GMI_RX_JABBER = The max size packet after which GMX will truncate
    fields:
      - name: --
        bits: 63..16
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: CNT
        bits: 15..0
        access: R/W
        reset: 0x2800
        typical: 0x2800
        description: |
          Byte count for jabber check
          Failing packets set the JABBER interrupt and are
          optionally sent with opcode==JABBER
          GMX will truncate the packet to CNT bytes


  - name: BGX(0..5)_GMP_GMI_RX(0..3)_DECISION
    address: 0x11800E0038040 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      Notes:
      As each byte in a packet is received by GMX, the L2 byte count is compared
      against the BGX_GMP_GMI_RX_DECISION[CNT].  The L2 byte count is the number of bytes
      from the beginning of the L2 header (DMAC).  In normal operation, the L2
      header begins after the PREAMBLE+SFD (BGX_GMP_GMI_RX_FRM_CTL[PRE_CHK]=1) and any
      optional UDD skip data (BGX_GMP_GMI_RX_UDD_SKP[LEN]).
      When BGX_GMP_GMI_RX_FRM_CTL[PRE_CHK] is clear, PREAMBLE+SFD are prepended to the
      packet and would require UDD skip length to account for them.
      Port Mode
      - Full Duplex
          L2 Size <  BGX_RX_DECISION - Accept packet. No filtering is applied
          L2 Size >= BGX_RX_DECISION - Apply filter. Accept packet based on PAUSE packet filter
      - Half Duplex
          L2 Size <  BGX_RX_DECISION - Drop packet. Packet is unconditionally dropped.
          L2 Size >= BGX_RX_DECISION - Accept packet.
      where L2_size = MAX(0, total_packet_size - BGX_GMP_GMI_RX_UDD_SKP[LEN] -
                             ((BGX_GMP_GMI_RX_FRM_CTL[PRE_CHK]==1)*8))
      BGX_GMP_GMI_RX_DECISION = The byte count to decide when to accept or filter a packet
    fields:
      - name: --
        bits: 63..5
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: CNT
        bits: 4..0
        access: R/W
        reset: 0x18
        typical: 0x18
        description: |
          The byte count to decide when to accept or filter
          a packet.


  - name: BGX(0..5)_GMP_GMI_RX(0..3)_UDD_SKP
    address: 0x11800E0038048 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      Notes:
      (1) The skip bytes are part of the packet and will be sent down the NCB
      packet interface and will be handled by PKI.
      (2) The system can determine if the UDD bytes are included in the FCS check
      by using the FCSSEL field - if the FCS check is enabled.
      (3) Assume that the preamble/sfd is always at the start of the frame - even
      before UDD bytes.  In most cases, there will be no preamble in these
      cases since it will be packet interface in direct communication to
      another packet interface (MAC to MAC) without a PHY involved.
      (4) We can still do address filtering and control packet filtering is the
      user desires.
      (5) UDD_SKP must be 0 in half-duplex operation unless
      BGX_GMP_GMI_RX_FRM_CTL[PRE_CHK] is clear.  If BGX_GMP_GMI_RX_FRM_CTL[PRE_CHK] is clear,
      then UDD_SKP will normally be 8.
      (6) In all cases, the UDD bytes will be sent down the packet interface as
      part of the packet.  The UDD bytes are never stripped from the actual
      packet.
      (7) If LEN != 0, then BGX_GMP_GMI_RX_FRM_CHK[LENERR] will be disabled and
      BGX_GMP_GMI_RX_INT[LENERR] will be zero
      BGX_GMP_GMI_RX_UDD_SKP = Amount of User-defined data before the start of the L2 data
    fields:
      - name: --
        bits: 63..9
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: FCSSEL
        bits: 8
        access: R/W
        reset: 0
        typical: 0
        description: |
          Include the skip bytes in the FCS calculation
          0 = all skip bytes are included in FCS
          1 = the skip bytes are not included in FCS

      - name: --
        bits: 7
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: LEN
        bits: 6..0
        access: R/W
        reset: 0x0
        typical: 0x0
        description: |
          Amount of User-defined data before the start of
          the L2 data.  Zero means L2 comes first.
          Max value is 64.


  - name: BGX(0..5)_GMP_GMI_RX(0..3)_IFG
    address: 0x11800E0038058 + a*0x1000000 + b*0x100000
    bus: RSL
    description: BGX_GMP_GMI_RX_IFG = RX Min IFG
    fields:
      - name: --
        bits: 63..4
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: IFG
        bits: 3..0
        access: R/W
        reset: 0x8
        typical: 0x8
        description: |
          Min IFG (in IFG*8 bits) between packets used to
          determine IFGERR. Normally IFG is 96 bits.
          Note in some operating modes, IFG cycles can be
          inserted or removed in order to achieve clock rate
          adaptation. For these reasons, the default value
          is slightly conservative and does not check upto
          the full 96 bits of IFG.
          (SGMII/1000Base-X only)


  - name: BGX(0..5)_GMP_GMI_TX(0..3)_THRESH
    address: 0x11800E0038210 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      Per Port
      BGX_GMP_GMI_TX_THRESH = Packet TX Threshold
    fields:
      - name: --
        bits: 63..9
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: CNT
        bits: 8..0
        access: R/W
        reset: 0x20
        typical: 0x20
        description: |
          Number of 128b words to accumulate in the TX FIFO
          before sending on the packet interface
          This register should be large enough to prevent
          underflow on the packet interface and must never
          be set to zero.
          10G/40G Mode, CNT == 0x100
          In all modes, this register cannot exceed the
          the TX FIFO depth which is...
          BGX_CMR_TX_LMACS==0,1:  CNT MAX = 0x7FF
          BGX_CMR_TX_LMACS==2  :  CNT MAX = 0x3FF
          BGX_CMR_TX_LMACS==3  :  CNT MAX = 0x1FF


  - name: BGX(0..5)_GMP_GMI_TX(0..3)_APPEND
    address: 0x11800E0038218 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..4
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: FORCE_FCS
        bits: 3
        access: R/W
        reset: 1
        typical: 1
        description: |
          Append the Ethernet FCS on each pause packet
          when FCS is clear. Pause packets are normally
          padded to 60 bytes.
          If BGX_GMP_GMI_TX_MIN_PKT[MIN_SIZE]
          exceeds 59, then FORCE_FCS will not be used.

      - name: FCS
        bits: 2
        access: R/W
        reset: 1
        typical: 1
        description: Append the Ethernet FCS on each packet

      - name: PAD
        bits: 1
        access: R/W
        reset: 1
        typical: 1
        description: Append PAD bytes such that min sized

      - name: PREAMBLE
        bits: 0
        access: R/W
        reset: 1
        typical: 1
        description: Prepend the Ethernet preamble on each transfer


  - name: BGX(0..5)_GMP_GMI_TX(0..3)_SLOT
    address: 0x11800E0038220 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..10
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: SLOT
        bits: 9..0
        access: R/W
        reset: 0x200
        typical: 0x200
        description: |
          Slottime (refer to 802.3 to set correctly)
          10/100Mbs: 0x40
          1000Mbs:   0x200
          (SGMII/1000Base-X only)


  - name: BGX(0..5)_GMP_GMI_TX(0..3)_BURST
    address: 0x11800E0038228 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..16
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: BURST
        bits: 15..0
        access: R/W
        reset: 0x2000
        typical: 0x2000
        description: |
          Burst (refer to 802.3 to set correctly)
          Only valid for 1000Mbs half-duplex operation
          halfdup / 1000Mbs: 0x2000
          all other modes:   0x0
          (SGMII/1000Base-X only)


  - name: BGX(0..5)_GMP_GMI_SMAC(0..3)
    address: 0x11800E0038230 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: SMAC
        bits: 47..0
        access: R/W
        reset: 0x0
        typical: --
        description: |
          The SMAC field is used for generating and
          accepting Control Pause packets


  - name: BGX(0..5)_GMP_GMI_TX(0..3)_PAUSE_PKT_TIME
    address: 0x11800E0038238 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      Notes:
      Choosing proper values of BGX_GMP_GMI_TX_PAUSE_PKT_TIME[TIME] and
      BGX_GMP_GMI_TX_PAUSE_PKT_INTERVAL[INTERVAL] can be challenging to the system
      designer.  It is suggested that TIME be much greater than INTERVAL and
      BGX_GMP_GMI_TX_PAUSE_ZERO[SEND] be set.  This allows a periodic refresh of the PAUSE
      count and then when the backpressure condition is lifted, a PAUSE packet
      with TIME==0 will be sent indicating that Octane is ready for additional
      data.
      If the system chooses to not set BGX_GMP_GMI_TX_PAUSE_ZERO[SEND], then it is
      suggested that TIME and INTERVAL are programmed such that they satisify the
      following rule...
      INTERVAL <= TIME - (largest_pkt_size + IFG + pause_pkt_size)
      where largest_pkt_size is that largest packet that the system can send
      (normally 1518B), IFG is the interframe gap and pause_pkt_size is the size
      of the PAUSE packet (normally 64B).
    fields:
      - name: --
        bits: 63..16
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: PTIME
        bits: 15..0
        access: R/W
        reset: 0x60
        typical: --
        description: |
          The pause_time field placed in outbnd 802.3 pause
          packets, or CBFC pause packets.
          pause_time is in 512 bit-times
          Normally, TIME > BGX_GMP_GMI_TX_PAUSE_PKT_INTERVAL


  - name: BGX(0..5)_GMP_GMI_TX(0..3)_MIN_PKT
    address: 0x11800E0038240 + a*0x1000000 + b*0x100000
    bus: RSL
    description: BGX_GMP_GMI_TX_MIN_PKT = Packet TX Min Size Packet (PAD upto min size)
    fields:
      - name: --
        bits: 63..8
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: MIN_SIZE
        bits: 7..0
        access: R/W
        reset: 0x3b
        typical: 0x3b
        description: |
          Min frame in bytes before the FCS is applied
          Padding is only appened when
          BGX_GMP_GMI_TX_APPEND[PAD] for the coresponding port
          is set.
          In SGMII mode, packets will be padded to
          MIN_SIZE+1. The reset value will pad to 60 bytes.


  - name: BGX(0..5)_GMP_GMI_TX(0..3)_PAUSE_PKT_INTERVAL
    address: 0x11800E0038248 + a*0x1000000 + b*0x100000
    bus: RSL
    description: |
      Notes:
      Choosing proper values of BGX_GMP_GMI_TX_PAUSE_PKT_TIME[TIME] and
      BGX_GMP_GMI_TX_PAUSE_PKT_INTERVAL[INTERVAL] can be challenging to the system
      designer.  It is suggested that TIME be much greater than INTERVAL and
      BGX_GMP_GMI_TX_PAUSE_ZERO[SEND] be set.  This allows a periodic refresh of the PAUSE
      count and then when the backpressure condition is lifted, a PAUSE packet
      with TIME==0 will be sent indicating that Octane is ready for additional
      data.
      If the system chooses to not set BGX_GMP_GMI_TX_PAUSE_ZERO[SEND], then it is
      suggested that TIME and INTERVAL are programmed such that they satisify the
      following rule...
      INTERVAL <= TIME - (largest_pkt_size + IFG + pause_pkt_size)
      where largest_pkt_size is that largest packet that the system can send
      (normally 1518B), IFG is the interframe gap and pause_pkt_size is the size
      of the PAUSE packet (normally 64B).
    fields:
      - name: --
        bits: 63..16
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: INTERVAL
        bits: 15..0
        access: R/W
        reset: 0x10
        typical: --
        description: |
          Arbitrate for a 802.3 pause packet,
          or CBFC pause packet every (INTERVAL*512)
          bit-times.
          Normally, 0 < INTERVAL < BGX_GMP_GMI_TX_PAUSE_PKT_TIME
          INTERVAL=0, will only send a single PAUSE packet
          for each backpressure event


  - name: BGX(0..5)_GMP_GMI_TX(0..3)_SOFT_PAUSE
    address: 0x11800E0038250 + a*0x1000000 + b*0x100000
    bus: RSL
    description: BGX_GMP_GMI_TX_SOFT_PAUSE = Packet TX Software Pause
    fields:
      - name: --
        bits: 63..16
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: PTIME
        bits: 15..0
        access: R/W
        reset: 0x0
        typical: --
        description: Back off the TX bus for (TIME*512) bit-times


  - name: BGX(0..5)_GMP_GMI_TX(0..3)_PAUSE_TOGO
    address: 0x11800E0038258 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..16
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: PTIME
        bits: 15..0
        access: RO/H
        reset: --
        typical: --
        description: |
          Amount of time remaining to backpressure
          From the standard 802.3 pause timer


  - name: BGX(0..5)_GMP_GMI_TX(0..3)_PAUSE_ZERO
    address: 0x11800E0038260 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..1
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: SEND
        bits: 0
        access: R/W
        reset: 1
        typical: 1
        description: |
          When backpressure condition clear, send PAUSE
          packet with pause_time of zero to enable the
          channel


  - name: BGX(0..5)_GMP_GMI_TX(0..3)_CTL
    address: 0x11800E0038270 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..2
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: XSDEF_EN
        bits: 1
        access: R/W
        reset: 1
        typical: 1
        description: |
          Enables the excessive deferral check for stats
          and interrupts
          (SGMII/1000Base-X half-duplex only)

      - name: XSCOL_EN
        bits: 0
        access: R/W
        reset: 1
        typical: 1
        description: |
          Enables the excessive collision check for stats
          and interrupts
          (SGMII/1000Base-X half-duplex only)


  - name: BGX(0..5)_GMP_GMI_TX(0..3)_SGMII_CTL
    address: 0x11800E0038300 + a*0x1000000 + b*0x100000
    bus: RSL
    fields:
      - name: --
        bits: 63..1
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: ALIGN
        bits: 0
        access: R/W
        reset: 1
        typical: 0
        description: |
          Align the transmission to even cycles
          Recommended value is:
          ALIGN = !BGX_GMP_GMI_TX_APPEND[PREAMBLE]
          (See the Transmit Conversion to Code groups
          section in the SGMII Interface chapter of the
          HRM for a complete discussion)
          0 = Data can be sent on any cycle
          In this mode, the interface will function at
          maximum bandwidth. It is possible to for the
          TX PCS machine to drop first byte of the TX
          frame.  When BGX_GMP_GMI_TX_APPEND[PREAMBLE] is
          set, the first byte will be a preamble byte
          which can be dropped to compensate for an
          extended IPG.
          1 = Data will only be sent on even cycles.
          In this mode, there can be bandwidth
          implications when sending odd-byte packets as
          the IPG can extend an extra cycle.
          There will be no loss of data.
          (SGMII/1000Base-X only)


  - name: BGX(0..5)_GMP_GMI_TX(0..3)_INT
    address: 0x11800E0038500 + a*0x1000000 + b*0x100000
    bus: RSL
    attributes:
      rtlgen_cib: "True"
    fields:
      - name: --
        bits: 63..5
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: PTP_LOST
        bits: 4
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          A packet with a PTP request was not able to be
          sent due to XSCOL

      - name: LATE_COL
        bits: 3
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          TX Late Collision
          (SGMII/1000Base-X half-duplex only)

      - name: XSDEF
        bits: 2
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          TX Excessive deferral
          (SGMII/1000Base-X half-duplex only)

      - name: XSCOL
        bits: 1
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          TX Excessive collisions
          (SGMII/1000Base-X half-duplex only)

      - name: UNDFLW
        bits: 0
        access: R/W1C/H
        reset: 0
        typical: 0
        description: TX Underflow


  - name: BGX(0..5)_GMP_GMI_TX_IFG
    address: 0x11800E0039000 + a*0x1000000
    bus: RSL
    description: |
      Notes:
      * Programming IFG1 and IFG2.
      For 10/100/1000Mbs half-duplex systems that require IEEE 802.3
      compatibility, IFG1 must be in the range of 1-8, IFG2 must be in the range
      of 4-12, and the IFG1+IFG2 sum must be 12.
      For 10/100/1000Mbs full-duplex systems that require IEEE 802.3
      compatibility, IFG1 must be in the range of 1-11, IFG2 must be in the range
      of 1-11, and the IFG1+IFG2 sum must be 12.
      For all other systems, IFG1 and IFG2 can be any value in the range of
      1-15.  Allowing for a total possible IFG sum of 2-30.
      Common BGX_GMP_GMI_TX_IFG = Packet TX Interframe Gap
    fields:
      - name: --
        bits: 63..8
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: IFG2
        bits: 7..4
        access: R/W
        reset: 0x4
        typical: --
        description: |
          1/3 of the interframe gap timing (in IFG2*8 bits)
          If CRS is detected during IFG2, then the
          interFrameSpacing timer is not reset and a frame
          is transmited once the timer expires.

      - name: IFG1
        bits: 3..0
        access: R/W
        reset: 0x8
        typical: --
        description: |
          2/3 of the interframe gap timing (in IFG1*8 bits)
          If CRS is detected during IFG1, then the
          interFrameSpacing timer is reset and a frame is
          not transmited.


  - name: BGX(0..5)_GMP_GMI_TX_JAM
    address: 0x11800E0039008 + a*0x1000000
    bus: RSL
    description: BGX_GMP_GMI_TX_JAM = Packet TX Jam Pattern
    fields:
      - name: --
        bits: 63..8
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: JAM
        bits: 7..0
        access: R/W
        reset: 0xee
        typical: --
        description: |
          Jam pattern
          (SGMII/1000Base-X half-duplex only)


  - name: BGX(0..5)_GMP_GMI_TX_COL_ATTEMPT
    address: 0x11800E0039010 + a*0x1000000
    bus: RSL
    fields:
      - name: --
        bits: 63..5
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: LIMIT
        bits: 4..0
        access: R/W
        reset: 0x10
        typical: 0x10
        description: |
          Collision Attempts
          (SGMII/1000Base-X half-duplex only)


  - name: BGX(0..5)_GMP_GMI_TX_PAUSE_PKT_DMAC
    address: 0x11800E0039018 + a*0x1000000
    bus: RSL
    fields:
      - name: --
        bits: 63..48
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: DMAC
        bits: 47..0
        access: R/W
        reset: 0x180c2000001
        typical: 0x180c2000001
        description: The DMAC field placed is outbnd pause pkts


  - name: BGX(0..5)_GMP_GMI_TX_PAUSE_PKT_TYPE
    address: 0x11800E0039020 + a*0x1000000
    bus: RSL
    fields:
      - name: --
        bits: 63..16
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: PTYPE
        bits: 15..0
        access: R/W
        reset: 0x8808
        typical: 0x8808
        description: The TYPE field placed is outbnd pause pkts


  - name: BGX(0..5)_GMP_GMI_TX_LFSR
    address: 0x11800E0039028 + a*0x1000000
    bus: RSL
    fields:
      - name: --
        bits: 63..16
        access: ---
        reset: --
        typical: --
        description: Reserved.

      - name: LFSR
        bits: 15..0
        access: R/W/H
        reset: 0xffff
        typical: --
        description: |
          The current state of the LFSR used to feed random
          numbers to compute truncated binary exponential
          backoff.
          (SGMII/1000Base-X half-duplex only)



