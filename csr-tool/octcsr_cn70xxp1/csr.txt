// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the agl.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

 * 
 * AGL_GMX_RX_INT_REG = Interrupt Register
 * 
 *  
 * 
$AGL_GMX_RX(0..0)_INT_REG   Address=(0x11800E0000000+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:30> NS        RAZ     NS         NS         Reserved.                                         
 <29>    WOL       R/W1C/H 0x0        0x0        A Wake-on-LAN event has occurred                  
 <28:20> NS        RAZ     NS         NS         Reserved.                                         
 <19>    PAUSE_DRP R/W1C/H 0x0        0x0        Pause packet was dropped due to full GMX RX FIFO  
 <18>    PHY_DUPX  R/W1C/H 0x0        0x0        Change in the RGMII inbound LinkDuplex            
 <17>    PHY_SPD   R/W1C/H 0x0        0x0        Change in the RGMII inbound LinkSpeed             
 <16>    PHY_LINK  R/W1C/H 0x0        0x0        Change in the RGMII inbound LinkStatus            
 <15>    IFGERR    R/W1C/H 0x0        0x0        Interframe Gap Violation                          
                                                 Does not necessarily indicate a failure
 <14>    COLDET    R/W1C/H 0x0        0x0        Collision Detection                               
 <13>    FALERR    R/W1C/H 0x0        0x0        False carrier error or extend error after slottime
 <12>    RSVERR    R/W1C/H 0x0        0x0        Packet reserved opcodes                           
 <11>    PCTERR    R/W1C/H 0x0        0x0        Bad Preamble / Protocol                           
 <10>    OVRERR    R/W1C/H 0x0        0x0        Internal Data Aggregation Overflow                
                                                 This interrupt should never assert
 <9>     NIBERR    R/W1C/H 0x0        0x0        Nibble error (hi_nibble != lo_nibble)             
 <8>     SKPERR    R/W1C/H 0x0        0x0        Skipper error                                     
 <7>     RCVERR    R/W1C/H 0x0        0x0        Frame was received with Packet Data reception error
 <6>     LENERR    R/W1C/H 0x0        0x0        Frame was received with length error              
 <5>     ALNERR    R/W1C/H 0x0        0x0        Frame was received with an alignment error        
 <4>     FCSERR    R/W1C/H 0x0        0x0        Frame was received with FCS/CRC error             
 <3>     JABBER    R/W1C/H 0x0        0x0        Frame was received with length > sys_length       
 <2>     MAXERR    R/W1C/H 0x0        0x0        Frame was received with length > max_length       
 <1>     CAREXT    R/W1C/H 0x0        0x0        Carrier extend error                              
 <0>     MINERR    R/W1C/H 0x0        0x0        Frame was received with length < min_length       

Notes:
(1) exceptions will only be raised to the control processor if the
corresponding bit in the AGL_GMX_RX_INT_EN register is set.
(2) exception conditions 10:0 can also set the rcv/opcode in the received
packet's workQ entry.  The AGL_GMX_RX_FRM_CHK register provides a bit mask
for configuring which conditions set the error.
(3) in half duplex operation, the expectation is that collisions will appear
as MINERRs.
(4) JABBER An RX Jabber error indicates that a packet was received which
is longer than the maximum allowed packet as defined by the
system.  GMX will truncate the packet at the JABBER count.
Failure to do so could lead to system instabilty.
(6) MAXERR for untagged frames, the total frame DA+SA+TL+DATA+PAD+FCS >
AGL_GMX_RX_FRM_MAX.  For tagged frames, DA+SA+VLAN+TL+DATA+PAD+FCS
> AGL_GMX_RX_FRM_MAX + 4*VLAN_VAL + 4*VLAN_STACKED.
(7) MINERR total frame DA+SA+TL+DATA+PAD+FCS < AGL_GMX_RX_FRM_MIN.
(8) ALNERR Indicates that the packet received was not an integer number of
bytes.  If FCS checking is enabled, ALNERR will only assert if
the FCS is bad.  If FCS checking is disabled, ALNERR will
assert in all non-integer frame cases.
(9) Collisions Collisions can only occur in half-duplex mode.  A collision
is assumed by the receiver when the received
frame < AGL_GMX_RX_FRM_MIN this is normally a MINERR
(A) LENERR Length errors occur when the received packet does not match the
length field.  LENERR is only checked for packets between 64
and 1500 bytes.  For untagged frames, the length must exact
match.  For tagged frames the length or length+4 must match.
(B) PCTERR checks that the frame begins with a valid PREAMBLE sequence.
Does not check the number of PREAMBLE cycles.
(C) OVRERR INTERNAL: *DON'T PUT IN HRM*
OVRERR is an architectural assertion check internal to GMX to
make sure no assumption was violated.  In a correctly operating
system, this interrupt can never fire.
GMX has an internal arbiter which selects which of 4 ports to
buffer in the main RX FIFO.  If we normally buffer 8 bytes,
then each port will typically push a tick every 8 cycles if
the packet interface is going as fast as possible.  If there
are four ports, they push every two cycles.  So that's the
assumption.  That the inbound module will always be able to
consume the tick before another is produced.  If that doesn't
happen that's when OVRERR will assert.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_INT_EN = Interrupt Enable
 * 
 *  
 *  Attribute: -dv_fc_scratch=ALL.
 * 
$AGL_GMX_RX(0..0)_INT_EN   Address=(0x11800E0000008+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:30> NS        RAZ     NS         NS         Reserved.                                         
 <29>    WOL       R/W/H   0x0        0x0        A Wake-on-LAN event has occurred                  
 <28:20> NS        RAZ     NS         NS         Reserved.                                         
 <19>    PAUSE_DRP R/W/H   0x0        0x0        Pause packet was dropped due to full GMX RX FIFO  
 <18>    PHY_DUPX  R/W     0x0        0x0        Change in the RMGII inbound LinkDuplex            
 <17>    PHY_SPD   R/W     0x0        0x0        Change in the RMGII inbound LinkSpeed             
 <16>    PHY_LINK  R/W     0x0        0x0        Change in the RMGII inbound LinkStatus            
 <15>    IFGERR    R/W     0x0        0x0        Interframe Gap Violation                          
 <14>    COLDET    R/W     0x0        0x0        Collision Detection                               
 <13>    FALERR    R/W     0x0        0x0        False carrier error or extend error after slottime
 <12>    RSVERR    R/W     0x0        0x0        Packet reserved opcodes                           
 <11>    PCTERR    R/W     0x0        0x0        Bad Preamble / Protocol                           
 <10>    OVRERR    R/W     0x0        0x0        Internal Data Aggregation Overflow                
 <9>     NIBERR    R/W     0x0        0x0        Nibble error (hi_nibble != lo_nibble)             
 <8>     SKPERR    R/W     0x0        0x0        Skipper error                                     
 <7>     RCVERR    R/W     0x0        0x0        Frame was received with RMGII Data reception error
 <6>     LENERR    R/W     0x0        0x0        Frame was received with length error              
 <5>     ALNERR    R/W     0x0        0x0        Frame was received with an alignment error        
 <4>     FCSERR    R/W     0x0        0x0        Frame was received with FCS/CRC error             
 <3>     JABBER    R/W     0x0        0x0        Frame was received with length > sys_length       
 <2>     MAXERR    R/W     0x0        0x0        Frame was received with length > max_length       
 <1>     CAREXT    R/W     0x0        0x0        Carrier extend error                              
 <0>     MINERR    R/W     0x0        0x0        Frame was received with length < min_length       
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_PRT_CFG = Port description
 * 
 *  
 * 
$AGL_GMX_PRT(0..0)_CFG   Address=(0x11800E0000010+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:14> NS        RAZ     NS         NS         Reserved.                                         
 <13>    TX_IDLE   RO/H    0x1        NS         TX Machine is idle                                
 <12>    RX_IDLE   RO/H    0x1        NS         RX Machine is idle                                
 <11:9>  NS        RAZ     NS         NS         Reserved.                                         
 <8>     SPEED_MSB R/W     0x0        NS         Link Speed MSB [SPEED_MSB:SPEED]                  
                                                 10 = 10Mbs operation
                                                 00 = 100Mbs operation
                                                 01 = 1000Mbs operation
                                                 11 = Reserved
 <7>     NS        RAZ     NS         NS         Reserved.                                         
 <6>     BURST     R/W     0x0        NS         Half-Duplex Burst Enable                          
                                                 Only valid for 1000Mbs half-duplex operation
                                                 0 = burst length of 0x2000 (halfdup / 1000Mbs)
                                                 1 = burst length of 0x0    (all other modes)
 <5>     TX_EN     R/W     0x0        NS         Port enable.  Must be set for Octane to send      
                                                 RMGII traffic.   When this bit clear on a given
                                                 port, then all packet cycles will appear as
                                                 inter-frame cycles.
 <4>     RX_EN     R/W     0x0        NS         Port enable.  Must be set for Octane to receive   
                                                 RMGII traffic.  When this bit clear on a given
                                                 port, then the all packet cycles will appear as
                                                 inter-frame cycles.
 <3>     SLOTTIME  R/W     0x1        NS         Slot Time for Half-Duplex operation               
                                                 0 = 512 bitimes (10/100Mbs operation)
                                                 1 = 4096 bitimes (1000Mbs operation)
 <2>     DUPLEX    R/W     0x1        NS         Duplex                                            
                                                 0 = Half Duplex (collisions/extentions/bursts)
                                                 1 = Full Duplex
 <1>     SPEED     R/W     0x1        NS         Link Speed LSB [SPEED_MSB:SPEED]                  
                                                 10 = 10Mbs operation
                                                 00 = 100Mbs operation
                                                 01 = 1000Mbs operation
                                                 11 = Reserved
 <0>     EN        R/W     0x0        NS         Link Enable                                       
                                                 When EN is clear, packets will not be received
                                                 or transmitted (including PAUSE and JAM packets).
                                                 If EN is cleared while a packet is currently
                                                 being received or transmitted, the packet will
                                                 be allowed to complete before the bus is idled.
                                                 On the RX side, subsequent packets in a burst
                                                 will be ignored.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_FRM_CTL = Frame Control
 * 
 *  
 * 
$AGL_GMX_RX(0..0)_FRM_CTL   Address=(0x11800E0000018+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:13> NS        RAZ     NS         NS         Reserved.                                         
 <12>    PTP_MODE  R/W     0x0        0x0        Timestamp mode                                    
                                                 When PTP_MODE is set, a 64-bit timestamp will be
                                                 prepended to every incoming packet. The timestamp
                                                 bytes are added to the packet in such a way as to
                                                 not modify the packet's receive byte count.  This
                                                 implies that the AGL_GMX_RX_JABBER,
                                                 AGL_GMX_RX_FRM_MIN, AGL_GMX_RX_FRM_MAX,
                                                 AGL_GMX_RX_DECISION, AGL_GMX_RX_UDD_SKP, and the
                                                 AGL_GMX_RX_STATS_* do not require any adjustment
                                                 as they operate on the received packet size.
                                                 If PTP_MODE=1 and PRE_CHK=1, PRE_STRP must be 1.
 <11>    NS        RAZ     NS         NS         Reserved.                                         
 <10>    NULL_DIS  R/W     0x0        0x0        When set, do not modify the MOD bits on NULL ticks
                                                 due to PARITAL packets
 <9>     PRE_ALIGN R/W     0x1        0x1        When set, PREAMBLE parser aligns the the SFD byte 
                                                 regardless of the number of previous PREAMBLE
                                                 nibbles.  In this mode, PRE_STRP should be set to
                                                 account for the variable nature of the PREAMBLE.
                                                 PRE_CHK must be set to enable this and all
                                                 PREAMBLE features.
 <8>     PAD_LEN   R/W     0x0        0x0        When set, disables the length check for non-min   
                                                 sized pkts with padding in the client data
 <7>     VLAN_LEN  R/W     0x0        0x0        When set, disables the length check for VLAN pkts 
 <6>     PRE_FREE  RO      0x1        0x1        When set, PREAMBLE checking is less strict.       
                                                 AGL will begin the frame at the first SFD.
                                                 PRE_FREE must be set if PRE_ALIGN is set.
                                                 PRE_CHK must be set to enable this and all
                                                 PREAMBLE features.
 <5>     CTL_SMAC  R/W     0x0        0x0        Control Pause Frames can match station SMAC       
 <4>     CTL_MCST  R/W     0x1        0x1        Control Pause Frames can match globally assign    
                                                 Multicast address
 <3>     CTL_BCK   R/W     0x1        0x1        Forward pause information to TX block             
 <2>     CTL_DRP   R/W     0x1        0x1        Drop Control Pause Frames                         
 <1>     PRE_STRP  R/W     0x1        0x1        Strip off the preamble (when present)             
                                                 0=PREAMBLE+SFD is sent to core as part of frame
                                                 1=PREAMBLE+SFD is dropped
                                                 PRE_STRP must be set if PRE_ALIGN is set.
                                                 PRE_CHK must be set to enable this and all
                                                 PREAMBLE features.
 <0>     PRE_CHK   R/W     0x1        0x1        This port is configured to send a valid 802.3     
                                                 PREAMBLE to begin every frame. AGL checks that a
                                                 valid PREAMBLE is received (based on PRE_FREE).
                                                 When a problem does occur within the PREAMBLE
                                                 seqeunce, the frame is marked as bad and not sent
                                                 into the core.  The AGL_GMX_RX_INT_REG[PCTERR]
                                                 interrupt is also raised.

Notes:
"* PRE_STRP
When PRE_CHK is set (indicating that the PREAMBLE will be sent), PRE_STRP
determines if the PREAMBLE+SFD bytes are thrown away or sent to the Octane
core as part of the packet.
In either mode, the PREAMBLE+SFD bytes are not counted toward the packet
size when checking against the MIN and MAX bounds.  Furthermore, the bytes
are skipped when locating the start of the L2 header for DMAC and Control
frame recognition.
* CTL_BCK/CTL_DRP
These bits control how the HW handles incoming PAUSE packets.  Here are
the most common modes of operation:
CTL_BCK=1,CTL_DRP=1   HW does it all
CTL_BCK=0,CTL_DRP=0   SW sees all pause frames
CTL_BCK=0,CTL_DRP=1   all pause frames are completely ignored
These control bits should be set to CTL_BCK=0,CTL_DRP=0 in halfdup mode.
Since PAUSE packets only apply to fulldup operation, any PAUSE packet
would constitute an exception which should be handled by the processing
cores.  PAUSE packets should not be forwarded."

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_FRM_CHK = Which frame errors will set the ERR bit of the frame
 * 
 *  
 * 
$AGL_GMX_RX(0..0)_FRM_CHK   Address=(0x11800E0000020+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:10> NS     RAZ     NS         NS         Reserved.                                         
 <9>     NIBERR R/W     0x1        0x1        Nibble error                                      
 <8>     SKPERR R/W     0x1        0x1        Skipper error                                     
 <7>     RCVERR R/W     0x1        0x1        Frame was received with packet data reception error
 <6>     LENERR R/W     0x0        0x0        Frame was received with length error              
                                              Most systems should use the checking in PKI/PIP
                                              for checking the L2 length field.
 <5>     ALNERR R/W     0x1        0x1        Frame was received with an alignment error        
 <4>     FCSERR R/W     0x1        0x1        Frame was received with FCS/CRC error             
 <3>     JABBER R/W     0x1        0x1        Frame was received with length > sys_length       
 <2>     MAXERR R/W     0x1        0x1        Frame was received with length > max_length       
 <1>     CAREXT R/W     0x1        0x1        Carrier extend error                              
 <0>     MINERR R/W     0x1        0x1        Frame was received with length < min_length       

Notes:
If AGL_GMX_RX_UDD_SKP[LEN] != 0, then LENERR will be forced to zero in HW.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_FRM_MIN = Frame Min length
 * 
 *  
 * 
$AGL_GMX_RX(0..0)_FRM_MIN   Address=(0x11800E0000028+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:0>  LEN   R/W     0x40       0x40       Byte count for Min-sized frame check              
                                             AGL_GMX_RXn_FRM_CHK[MINERR] enables the check
                                             for port n.
                                             If enabled, failing packets set the MINERR
                                             interrupt and the WQE opcode is set to UNDER_FCS
                                             (0x6, if packet has bad FCS) or UNDER_ERR (0x8,
                                             if packet has good FCS).
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_FRM_MAX = Frame Max length
 * 
 *  
 * 
$AGL_GMX_RX(0..0)_FRM_MAX   Address=(0x11800E0000030+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:0>  LEN   R/W     0x600      0x600      Byte count for Max-sized frame check              
                                             AGL_GMX_RXn_FRM_CHK[MAXERR] enables the check
                                             for port n.
                                             If enabled, failing packets set the MAXERR
                                             interrupt and the WQE opcode is set to OVER_FCS
                                             (0x3, if packet has bad FCS) or OVER_ERR (0x4, if
                                             packet has good FCS).
                                             LEN <= AGL_GMX_RX_JABBER[CNT]

Notes:
When changing the LEN field, be sure that LEN does not exceed
AGL_GMX_RX_JABBER[CNT]. Failure to meet this constraint will cause packets that
are within the maximum length parameter to be rejected because they exceed
the AGL_GMX_RX_JABBER[CNT] limit.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_JABBER = The max size packet after which GMX will truncate
 * 
 *  
 * 
$AGL_GMX_RX(0..0)_JABBER   Address=(0x11800E0000038+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:0>  CNT   R/W     0x2800     0x2800     Byte count for jabber check                       
                                             Failing packets set the JABBER interrupt and are
                                             optionally sent with opcode==JABBER
                                             GMX will truncate the packet to CNT bytes
                                             CNT >= AGL_GMX_RX_FRM_MAX[LEN]

Notes:
CNT must be 8-byte aligned such that CNT[2:0] == 0
The packet that will be sent to the packet input logic will have an
additionl 8 bytes if AGL_GMX_RX_FRM_CTL[PRE_CHK] is set and
AGL_GMX_RX_FRM_CTL[PRE_STRP] is clear.  The max packet that will be sent is
defined as...
max_sized_packet = AGL_GMX_RX_JABBER[CNT]+((AGL_GMX_RX_FRM_CTL[PRE_CHK] &
!AGL_GMX_RX_FRM_CTL[PRE_STRP])*8)
Be sure the CNT field value is at least as large as the
AGL_GMX_RX_FRM_MAX[LEN] value. Failure to meet this constraint will cause
packets that are within the AGL_GMX_RX_FRM_MAX[LEN] length to be rejected
because they exceed the CNT limit.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_DECISION = The byte count to decide when to accept or filter a packet
 * 
 *  
 * 
$AGL_GMX_RX(0..0)_DECISION   Address=(0x11800E0000040+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:5>  NS    RAZ     NS         NS         Reserved.                                         
 <4:0>   CNT   R/W     0x18       0x18       The byte count to decide when to accept or filter 
                                             a packet.

Notes:
As each byte in a packet is received by GMX, the L2 byte count is compared
against the AGL_GMX_RX_DECISION[CNT].  The L2 byte count is the number of bytes
from the beginning of the L2 header (DMAC).  In normal operation, the L2
header begins after the PREAMBLE+SFD (AGL_GMX_RX_FRM_CTL[PRE_CHK]=1) and any
optional UDD skip data (AGL_GMX_RX_UDD_SKP[LEN]).
When AGL_GMX_RX_FRM_CTL[PRE_CHK] is clear, PREAMBLE+SFD are prepended to the
packet and would require UDD skip length to account for them.
L2 Size
Port Mode              <=AGL_GMX_RX_DECISION bytes (default=24)        >AGL_GMX_RX_DECISION
bytes (default=24)
RGMII/Full Duplex     accept packet                                apply filters
no filtering is applied                        accept packet based on DMAC and PAUSE packet
filters
RGMII/Half Duplex     drop packet                                apply filters
packet is unconditionally dropped                accept packet based on DMAC
where l2_size = MAX(0, total_packet_size AGL_GMX_RX_UDD_SKP[LEN]
((AGL_GMX_RX_FRM_CTL[PRE_CHK]==1)*8)

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_UDD_SKP = Amount of User-defined data before the start of the L2 data
 * 
 *  
 * 
$AGL_GMX_RX(0..0)_UDD_SKP   Address=(0x11800E0000048+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:9>  NS     RAZ     NS         NS         Reserved.                                         
 <8>     FCSSEL R/W     0x0        0x0        Include the skip bytes in the FCS calculation     
                                              0 = all skip bytes are included in FCS
                                              1 = the skip bytes are not included in FCS
 <7>     NS     RAZ     NS         NS         Reserved.                                         
 <6:0>   LEN    R/W     0x0        0x0        Amount of User-defined data before the start of   
                                              the L2 data.  Zero means L2 comes first.
                                              Max value is 64.

Notes:
(1) The skip bytes are part of the packet and will be sent down the NCB
packet interface and will be handled by PKI.
(2) The system can determine if the UDD bytes are included in the FCS check
by using the FCSSEL field if the FCS check is enabled.
(3) Assume that the preamble/sfd is always at the start of the frame even
before UDD bytes.  In most cases, there will be no preamble in these
cases since it will be MAC to MAC communication without a PHY
involved.
(4) We can still do address filtering and control packet filtering is the
user desires.
(5) UDD_SKP must be 0 in half-duplex operation unless
AGL_GMX_RX_FRM_CTL[PRE_CHK] is clear.  If AGL_GMX_RX_FRM_CTL[PRE_CHK] is set,
then UDD_SKP will normally be 8.
(6) In all cases, the UDD bytes will be sent down the packet interface as
part of the packet.  The UDD bytes are never stripped from the actual
packet.
(7) If LEN != 0, then AGL_GMX_RX_FRM_CHK[LENERR] will be disabled and
AGL_GMX_RX_INT_REG[LENERR] will be zero

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_STATS_CTL = RX Stats Control register
 * 
 *  
 * 
$AGL_GMX_RX(0..0)_STATS_CTL   Address=(0x11800E0000050+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS     RAZ     NS         NS         Reserved.                                         
 <0>     RD_CLR R/W     0x0        0x0        RX Stats registers will clear on reads            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_IFG = RX Min IFG
 * 
 *  
 * 
$AGL_GMX_RX(0..0)_IFG   Address=(0x11800E0000058+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS    RAZ     NS         NS         Reserved.                                         
 <3:0>   IFG   R/W     0x8        0x8        Min IFG (in IFG*8 bits) between packets used to   
                                             determine IFGERR. Normally IFG is 96 bits.
                                             Note in some operating modes, IFG cycles can be
                                             inserted or removed in order to achieve clock rate
                                             adaptation. For these reasons, the default value
                                             is slightly conservative and does not check upto
                                             the full 96 bits of IFG.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_RX_INBND
 * 
 *  AGL_GMX_RX_INBND = RGMII InBand Link Status
 * 
$AGL_GMX_RX(0..0)_RX_INBND   Address=(0x11800E0000060+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS     RAZ     NS         NS         Reserved.                                         
 <3>     DUPLEX RO      0x0        NS         RGMII Inbound LinkDuplex                          
                                              0=half-duplex
                                              1=full-duplex
 <2:1>   SPEED  RO      0x0        NS         RGMII Inbound LinkSpeed                           
                                              00=2.5MHz
                                              01=25MHz
                                              10=125MHz
                                              11=Reserved
 <0>     STATUS RO      0x0        NS         RGMII Inbound LinkStatus                          
                                              0=down
                                              1=up

Notes:
These fields are only valid if the attached PHY is operating in RGMII mode
and supports the optional in-band status (see section 3.4.1 of the RGMII
specification, version 1.3 for more information).

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_PAUSE_DROP_TIME = The TIME field in a PAUSE Packet which was dropped due to GMX RX FIFO full condition
 * 
 *  
 * 
$AGL_GMX_RX(0..0)_PAUSE_DROP_TIME   Address=(0x11800E0000068+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS     RAZ     NS         NS         Reserved.                                         
 <15:0>  STATUS R/W1C/H 0x0        NS         Time extracted from the dropped PAUSE packet      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_STATS_PKTS
 * 
 *  Count of good received packets - packets that are not recognized as PAUSE
 *  packets, dropped due the DMAC filter, dropped due FIFO full status, or
 *  have any other OPCODE (FCS, Length, etc).
 * 
$AGL_GMX_RX(0..0)_STATS_PKTS   Address=(0x11800E0000080+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  CNT   RC/W/H  0x0        NS         Count of received good packets                    

Notes:
Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
Counters will wrap

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_STATS_OCTS
 * 
 *  
 * 
$AGL_GMX_RX(0..0)_STATS_OCTS   Address=(0x11800E0000088+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS    RAZ     NS         NS         Reserved.                                         
 <47:0>  CNT   RC/W/H  0x0        NS         Octet count of received good packets              
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_STATS_PKTS_CTL
 * 
 *  Count of all packets received that were recognized as Flow Control or
 *  PAUSE packets.  PAUSE packets with any kind of error are counted in
 *  AGL_GMX_RX_STATS_PKTS_BAD.  Pause packets can be optionally dropped or
 *  forwarded based on the AGL_GMX_RX_FRM_CTL[CTL_DRP] bit.  This count
 *  increments regardless of whether the packet is dropped.  Pause packets
 *  will never be counted in AGL_GMX_RX_STATS_PKTS.  Packets dropped due the dmac
 *  filter will be counted in AGL_GMX_RX_STATS_PKTS_DMAC and not here.
 * 
$AGL_GMX_RX(0..0)_STATS_PKTS_CTL   Address=(0x11800E0000090+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  CNT   RC/W/H  0x0        NS         Count of received pause packets                   

Notes:
Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
Counters will wrap

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_STATS_OCTS_CTL
 * 
 *  
 * 
$AGL_GMX_RX(0..0)_STATS_OCTS_CTL   Address=(0x11800E0000098+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS    RAZ     NS         NS         Reserved.                                         
 <47:0>  CNT   RC/W/H  0x0        NS         Octet count of received pause packets             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_STATS_PKTS_DMAC
 * 
 *  Count of all packets received that were dropped by the dmac filter.
 *  Packets that match the DMAC will be dropped and counted here regardless
 *  of if they were bad packets.  These packets will never be counted in
 *  AGL_GMX_RX_STATS_PKTS.
 *  Some packets that were not able to satisify the DECISION_CNT may not
 *  actually be dropped by Octeon, but they will be counted here as if they
 *  were dropped.
 * 
$AGL_GMX_RX(0..0)_STATS_PKTS_DMAC   Address=(0x11800E00000A0+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  CNT   RC/W/H  0x0        NS         Count of filtered dmac packets                    

Notes:
Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
Counters will wrap

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_STATS_OCTS_DMAC
 * 
 *  
 * 
$AGL_GMX_RX(0..0)_STATS_OCTS_DMAC   Address=(0x11800E00000A8+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS    RAZ     NS         NS         Reserved.                                         
 <47:0>  CNT   RC/W/H  0x0        NS         Octet count of filtered dmac packets              
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_STATS_PKTS_DRP
 * 
 *  Count of all packets received that were dropped due to a full receive
 *  FIFO.  This counts good and bad packets received - all packets dropped by
 *  the FIFO.  It does not count packets dropped by the dmac or pause packet
 *  filters.
 * 
$AGL_GMX_RX(0..0)_STATS_PKTS_DRP   Address=(0x11800E00000B0+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  CNT   RC/W/H  0x0        NS         Count of dropped packets                          

Notes:
Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
Counters will wrap

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_STATS_OCTS_DRP
 * 
 *  
 * 
$AGL_GMX_RX(0..0)_STATS_OCTS_DRP   Address=(0x11800E00000B8+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS    RAZ     NS         NS         Reserved.                                         
 <47:0>  CNT   RC/W/H  0x0        NS         Octet count of dropped packets                    
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_STATS_PKTS_BAD
 * 
 *  Count of all packets received with some error that were not dropped
 *  either due to the dmac filter or lack of room in the receive FIFO.
 * 
$AGL_GMX_RX(0..0)_STATS_PKTS_BAD   Address=(0x11800E00000C0+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  CNT   RC/W/H  0x0        NS         Count of bad packets                              

Notes:
Cleared either by a write (of any value) or a read when AGL_GMX_RX_STATS_CTL[RD_CLR] is set
Counters will wrap

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_ADR_CTL = Address Filtering Control
 * 
 *  
 * 
$AGL_GMX_RX(0..0)_ADR_CTL   Address=(0x11800E0000100+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ     NS         NS         Reserved.                                         
 <3>     CAM_MODE R/W     0x0        NS         Allow or deny DMAC address filter                 
                                                0 = reject the packet on DMAC address match
                                                1 = accept the packet on DMAC address match
 <2:1>   MCST     R/W     0x0        NS         Multicast Mode                                    
                                                0 = Use the Address Filter CAM
                                                1 = Force reject all multicast packets
                                                2 = Force accept all multicast packets
                                                3 = Reserved
 <0>     BCST     R/W     0x1        NS         Accept All Broadcast Packets                      

Notes:
"* ALGORITHM
Here is some pseudo code that represents the address filter behavior.
@verbatim
bool dmac_addr_filter(uint8 prt, uint48 dmac) {
ASSERT(prt >= 0 && prt <= 3);
if (is_bcst(dmac))                               // broadcast accept
return (AGL_GMX_RX{prt}_ADR_CTL[BCST] ? ACCEPT : REJECT);
if (is_mcst(dmac) & AGL_GMX_RX{prt}_ADR_CTL[MCST] == 1)   // multicast reject
return REJECT;
if (is_mcst(dmac) & AGL_GMX_RX{prt}_ADR_CTL[MCST] == 2)   // multicast accept
return ACCEPT;
cam_hit = 0;
for (i=0; i<8; i++) {
if (AGL_GMX_RX{prt}_ADR_CAM_EN[EN<i>] == 0)
continue;
uint48 unswizzled_mac_adr = 0x0;
for (j=5; j>=0; j--) {
unswizzled_mac_adr = (unswizzled_mac_adr << 8) | AGL_GMX_RX{prt}_ADR_CAM{j}[ADR<i*8+7:i*8>];
}
if (unswizzled_mac_adr == dmac) {
cam_hit = 1;
break;
}
}
if (cam_hit)
return (AGL_GMX_RX{prt}_ADR_CTL[CAM_MODE] ? ACCEPT : REJECT);
else
return (AGL_GMX_RX{prt}_ADR_CTL[CAM_MODE] ? REJECT : ACCEPT);
}
@endverbatim"

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_ADR_CAM_EN = Address Filtering Control Enable
 * 
 *  
 * 
$AGL_GMX_RX(0..0)_ADR_CAM_EN   Address=(0x11800E0000108+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:0>   EN    R/W     0x0        NS         CAM Entry Enables                                 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_ADR_CAM0
 * 
 *  AGL_GMX_RX_ADR_CAM = Address Filtering Control
 * 
$AGL_GMX_RX(0..0)_ADR_CAM0   Address=(0x11800E0000180+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  ADR R/W     0x0        NS         The DMAC address to match on                      
                                           Each entry contributes 8bits to one of 8 matchers.
                                           The CAM matches against unicst or multicst DMAC
                                           addresses.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_ADR_CAM1
 * 
 *  AGL_GMX_RX_ADR_CAM = Address Filtering Control
 * 
$AGL_GMX_RX(0..0)_ADR_CAM1   Address=(0x11800E0000188+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  ADR R/W     0x0        NS         The DMAC address to match on                      
                                           Each entry contributes 8bits to one of 8 matchers.
                                           The CAM matches against unicst or multicst DMAC
                                           addresses.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_ADR_CAM2
 * 
 *  AGL_GMX_RX_ADR_CAM = Address Filtering Control
 * 
$AGL_GMX_RX(0..0)_ADR_CAM2   Address=(0x11800E0000190+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  ADR R/W     0x0        NS         The DMAC address to match on                      
                                           Each entry contributes 8bits to one of 8 matchers.
                                           The CAM matches against unicst or multicst DMAC
                                           addresses.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_ADR_CAM3
 * 
 *  AGL_GMX_RX_ADR_CAM = Address Filtering Control
 * 
$AGL_GMX_RX(0..0)_ADR_CAM3   Address=(0x11800E0000198+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  ADR R/W     0x0        NS         The DMAC address to match on                      
                                           Each entry contributes 8bits to one of 8 matchers.
                                           The CAM matches against unicst or multicst DMAC
                                           addresses.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_ADR_CAM4
 * 
 *  AGL_GMX_RX_ADR_CAM = Address Filtering Control
 * 
$AGL_GMX_RX(0..0)_ADR_CAM4   Address=(0x11800E00001A0+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  ADR R/W     0x0        NS         The DMAC address to match on                      
                                           Each entry contributes 8bits to one of 8 matchers.
                                           The CAM matches against unicst or multicst DMAC
                                           addresses.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_ADR_CAM5
 * 
 *  AGL_GMX_RX_ADR_CAM = Address Filtering Control
 * 
$AGL_GMX_RX(0..0)_ADR_CAM5   Address=(0x11800E00001A8+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  ADR R/W     0x0        NS         The DMAC address to match on                      
                                           Each entry contributes 8bits to one of 8 matchers.
                                           The CAM matches against unicst or multicst DMAC
                                           addresses.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_TX_CLK = RGMII TX Clock Generation Register
 * 
 *  
 * 
$AGL_GMX_TX(0..0)_CLK   Address=(0x11800E0000208+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  NS      RAZ     NS         NS         Reserved.                                         
 <5:0>   CLK_CNT R/W     0x1        0x1        Controls the RGMII TXC frequency                  
                                               TXC(period) =
                                               rgm_ref_clk(period)*CLK_CNT

Notes:
Normal Programming Values:
(1) RGMII, 1000Mbs   (AGL_GMX_PRT_CFG[SPEED]==1), CLK_CNT == 1
(2) RGMII, 10/100Mbs (AGL_GMX_PRT_CFG[SPEED]==0), CLK_CNT == 50/5
RGMII Example:
Given a 125MHz PLL reference clock...
CLK_CNT ==  1 ==> 125.0MHz TXC clock period (8ns* 1)
CLK_CNT ==  5 ==>  25.0MHz TXC clock period (8ns* 5)
CLK_CNT == 50 ==>   2.5MHz TXC clock period (8ns*50)

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_TX_THRESH = Packet TX Threshold
 * 
 *  
 * 
$AGL_GMX_TX(0..0)_THRESH   Address=(0x11800E0000210+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  NS    RAZ     NS         NS         Reserved.                                         
 <5:0>   CNT   R/W     0x20       0x20       Number of 16B ticks to accumulate in the TX FIFO  
                                             before sending on the packet interface
                                             This register should be large enough to prevent
                                             underflow on the packet interface and must never
                                             be set below 4.  This register cannot exceed the
                                             the TX FIFO depth which is 128, 8B entries.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_TX_APPEND = Packet TX Append Control
 * 
 *  
 * 
$AGL_GMX_TX(0..0)_APPEND   Address=(0x11800E0000218+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS        RAZ     NS         NS         Reserved.                                         
 <3>     FORCE_FCS R/W     0x1        0x1        Append the Ethernet FCS on each pause packet      
                                                 when FCS is clear.  Pause packets are normally
                                                 padded to 60 bytes.  If
                                                 AGL_GMX_TX_MIN_PKT[MIN_SIZE] exceeds 59, then
                                                 FORCE_FCS will not be used.
 <2>     FCS       R/W     0x1        0x1        Append the Ethernet FCS on each packet            
 <1>     PAD       R/W     0x1        0x1        Append PAD bytes such that min sized              
 <0>     PREAMBLE  R/W     0x1        0x1        Prepend the Ethernet preamble on each transfer    
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_SMAC = Packet SMAC
 * 
 *  
 * 
$AGL_GMX_SMAC(0..0)   Address=(0x11800E0000230+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS    RAZ     NS         NS         Reserved.                                         
 <47:0>  SMAC  R/W     0x0        NS         The SMAC field is used for generating and         
                                             accepting Control Pause packets
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_TX_PAUSE_PKT_TIME = Packet TX Pause Packet pause_time field
 * 
 *  
 * 
$AGL_GMX_TX(0..0)_PAUSE_PKT_TIME   Address=(0x11800E0000238+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:0>  TIME  R/W     0x60       NS         The pause_time field placed is outbnd pause pkts  
                                             pause_time is in 512 bit-times
                                             Normally, TIME > AGL_GMX_TX_PAUSE_PKT_INTERVAL
                                             Attribute: -exempt_keyword=True.

Notes:
Choosing proper values of AGL_GMX_TX_PAUSE_PKT_TIME[TIME] and
AGL_GMX_TX_PAUSE_PKT_INTERVAL[INTERVAL] can be challenging to the system
designer.  It is suggested that TIME be much greater than INTERVAL and
AGL_GMX_TX_PAUSE_ZERO[SEND] be set.  This allows a periodic refresh of the PAUSE
count and then when the backpressure condition is lifted, a PAUSE packet
with TIME==0 will be sent indicating that Octane is ready for additional
data.
If the system chooses to not set AGL_GMX_TX_PAUSE_ZERO[SEND], then it is
suggested that TIME and INTERVAL are programmed such that they satisify the
following rule...
INTERVAL <= TIME (largest_pkt_size + IFG + pause_pkt_size)
where largest_pkt_size is that largest packet that the system can send
(normally 1518B), IFG is the interframe gap and pause_pkt_size is the size
of the PAUSE packet (normally 64B).

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_TX_MIN_PKT = Packet TX Min Size Packet (PAD upto min size)
 * 
 *  
 * 
$AGL_GMX_TX(0..0)_MIN_PKT   Address=(0x11800E0000240+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ     NS         NS         Reserved.                                         
 <7:0>   MIN_SIZE R/W     0x3b       0x3b       Min frame in bytes before the FCS is applied      
                                                Padding is only appened when
                                                AGL_GMX_TX_APPEND[PAD] for the coresponding packet
                                                port is set. Packets will be padded to
                                                MIN_SIZE+1 The reset value will pad to 60 bytes.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_TX_PAUSE_PKT_INTERVAL = Packet TX Pause Packet transmission interval - how often PAUSE packets will be sent
 * 
 *  
 *  Attribute: -exempt_name_length=True.
 * 
$AGL_GMX_TX(0..0)_PAUSE_PKT_INTERVAL   Address=(0x11800E0000248+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ     NS         NS         Reserved.                                         
 <15:0>  INTERVAL R/W     0x10       NS         Arbitrate for a pause packet every (INTERVAL*512) 
                                                bit-times.
                                                Normally, 0 < INTERVAL < AGL_GMX_TX_PAUSE_PKT_TIME
                                                INTERVAL=0, will only send a single PAUSE packet
                                                for each backpressure event

Notes:
Choosing proper values of AGL_GMX_TX_PAUSE_PKT_TIME[TIME] and
AGL_GMX_TX_PAUSE_PKT_INTERVAL[INTERVAL] can be challenging to the system
designer.  It is suggested that TIME be much greater than INTERVAL and
AGL_GMX_TX_PAUSE_ZERO[SEND] be set.  This allows a periodic refresh of the PAUSE
count and then when the backpressure condition is lifted, a PAUSE packet
with TIME==0 will be sent indicating that Octane is ready for additional
data.
If the system chooses to not set AGL_GMX_TX_PAUSE_ZERO[SEND], then it is
suggested that TIME and INTERVAL are programmed such that they satisify the
following rule...
INTERVAL <= TIME (largest_pkt_size + IFG + pause_pkt_size)
where largest_pkt_size is that largest packet that the system can send
(normally 1518B), IFG is the interframe gap and pause_pkt_size is the size
of the PAUSE packet (normally 64B).

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_TX_SOFT_PAUSE = Packet TX Software Pause
 * 
 *  
 * 
$AGL_GMX_TX(0..0)_SOFT_PAUSE   Address=(0x11800E0000250+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:0>  TIME  R/W     0x0        NS         Back off the TX bus for (TIME*512) bit-times      
                                             for full-duplex operation only
                                             Attribute: -exempt_keyword=True.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_TX_PAUSE_TOGO = Packet TX Amount of time remaining to backpressure
 * 
 *  
 * 
$AGL_GMX_TX(0..0)_PAUSE_TOGO   Address=(0x11800E0000258+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:0>  TIME  RO/H    NS         NS         Amount of time remaining to backpressure          
                                             Attribute: -exempt_keyword=True.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_TX_PAUSE_ZERO = Packet TX Amount of time remaining to backpressure
 * 
 *  
 * 
$AGL_GMX_TX(0..0)_PAUSE_ZERO   Address=(0x11800E0000260+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS    RAZ     NS         NS         Reserved.                                         
 <0>     SEND  R/W     0x1        0x1        When backpressure condition clear, send PAUSE     
                                             packet with pause_time of zero to enable the
                                             channel
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_TX_STATS_CTL = TX Stats Control register
 * 
 *  
 * 
$AGL_GMX_TX(0..0)_STATS_CTL   Address=(0x11800E0000268+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS     RAZ     NS         NS         Reserved.                                         
 <0>     RD_CLR R/W     0x0        0x0        Stats registers will clear on reads               
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_TX_CTL = TX Control register
 * 
 *  
 * 
$AGL_GMX_TX(0..0)_CTL   Address=(0x11800E0000270+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ     NS         NS         Reserved.                                         
 <1>     XSDEF_EN R/W     0x1        0x1        Enables the excessive deferral check for stats    
                                                and interrupts
 <0>     XSCOL_EN R/W     0x1        0x1        Enables the excessive collision check for stats   
                                                and interrupts
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_TX_STAT0 = AGL_GMX_TX_STATS_XSDEF / AGL_GMX_TX_STATS_XSCOL
 * 
 *  
 * 
$AGL_GMX_TX(0..0)_STAT0   Address=(0x11800E0000280+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> XSDEF RC/W/H  0x0        NS         Number of packets dropped (never successfully     
                                             sent) due to excessive deferal
 <31:0>  XSCOL RC/W/H  0x0        NS         Number of packets dropped (never successfully     
                                             sent) due to excessive collision.  Defined by
                                             AGL_GMX_TX_COL_ATTEMPT[LIMIT].

Notes:
Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
Counters will wrap

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_TX_STAT1 = AGL_GMX_TX_STATS_SCOL  / AGL_GMX_TX_STATS_MCOL
 * 
 *  
 * 
$AGL_GMX_TX(0..0)_STAT1   Address=(0x11800E0000288+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> SCOL RC/W/H  0x0        NS         Number of packets sent with a single collision    
 <31:0>  MCOL RC/W/H  0x0        NS         Number of packets sent with multiple collisions   
                                            but < AGL_GMX_TX_COL_ATTEMPT[LIMIT].

Notes:
Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
Counters will wrap

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_TX_STAT2 = AGL_GMX_TX_STATS_OCTS
 * 
 *  
 * 
$AGL_GMX_TX(0..0)_STAT2   Address=(0x11800E0000290+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS    RAZ     NS         NS         Reserved.                                         
 <47:0>  OCTS  RC/W/H  0x0        NS         Number of total octets sent on the interface.     
                                             Does not count octets from frames that were
                                             truncated due to collisions in halfdup mode.

Notes:
Octect counts are the sum of all data transmitted on the wire including
packet data, pad bytes, fcs bytes, pause bytes, and jam bytes.  The octect
counts do not include PREAMBLE byte or EXTEND cycles.
Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
Counters will wrap

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_TX_STAT3 = AGL_GMX_TX_STATS_PKTS
 * 
 *  
 * 
$AGL_GMX_TX(0..0)_STAT3   Address=(0x11800E0000298+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  PKTS  RC/W/H  0x0        NS         Number of total frames sent on the interface.     
                                             Does not count frames that were truncated due to
                                             collisions in halfdup mode.

Notes:
Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
Counters will wrap

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_TX_STAT4 = AGL_GMX_TX_STATS_HIST1 (64) / AGL_GMX_TX_STATS_HIST0 (<64)
 * 
 *  
 * 
$AGL_GMX_TX(0..0)_STAT4   Address=(0x11800E00002A0+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> HIST1 RC/W/H  0x0        NS         Number of packets sent with an octet count of 64. 
 <31:0>  HIST0 RC/W/H  0x0        NS         Number of packets sent with an octet count        
                                             of < 64.

Notes:
Packet length is the sum of all data transmitted on the wire for the given
packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
Counters will wrap

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_TX_STAT5 = AGL_GMX_TX_STATS_HIST3 (128- 255) / AGL_GMX_TX_STATS_HIST2 (65- 127)
 * 
 *  
 * 
$AGL_GMX_TX(0..0)_STAT5   Address=(0x11800E00002A8+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> HIST3 RC/W/H  0x0        NS         Number of packets sent with an octet count of     
                                             128 - 255.
 <31:0>  HIST2 RC/W/H  0x0        NS         Number of packets sent with an octet count of     
                                             65 - 127.

Notes:
Packet length is the sum of all data transmitted on the wire for the given
packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
Counters will wrap

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_TX_STAT6 = AGL_GMX_TX_STATS_HIST5 (512-1023) / AGL_GMX_TX_STATS_HIST4 (256-511)
 * 
 *  
 * 
$AGL_GMX_TX(0..0)_STAT6   Address=(0x11800E00002B0+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> HIST5 RC/W/H  0x0        NS         Number of packets sent with an octet count of     
                                             512 - 1023.
 <31:0>  HIST4 RC/W/H  0x0        NS         Number of packets sent with an octet count of     
                                             256 - 511.

Notes:
Packet length is the sum of all data transmitted on the wire for the given
packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
Counters will wrap

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_TX_STAT7 = AGL_GMX_TX_STATS_HIST7 (1024-1518) / AGL_GMX_TX_STATS_HIST6 (>1518)
 * 
 *  
 * 
$AGL_GMX_TX(0..0)_STAT7   Address=(0x11800E00002B8+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> HIST7 RC/W/H  0x0        NS         Number of packets sent with an octet count        
                                             of > 1518.
 <31:0>  HIST6 RC/W/H  0x0        NS         Number of packets sent with an octet count of     
                                             1024 - 1518.

Notes:
Packet length is the sum of all data transmitted on the wire for the given
packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
Counters will wrap

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_TX_STAT8 = AGL_GMX_TX_STATS_MCST  / AGL_GMX_TX_STATS_BCST
 * 
 *  
 * 
$AGL_GMX_TX(0..0)_STAT8   Address=(0x11800E00002C0+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> MCST RC/W/H  0x0        NS         Number of packets sent to multicast DMAC.         
                                            Does not include BCST packets.
 <31:0>  BCST RC/W/H  0x0        NS         Number of packets sent to broadcast DMAC.         
                                            Does not include MCST packets.

Notes:
Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
Counters will wrap
Note, GMX determines if the packet is MCST or BCST from the DMAC of the
packet.  GMX assumes that the DMAC lies in the first 6 bytes of the packet
as per the 802.3 frame definition.  If the system requires additional data
before the L2 header, then the MCST and BCST counters may not reflect
reality and should be ignored by software.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_TX_STAT9 = AGL_GMX_TX_STATS_UNDFLW / AGL_GMX_TX_STATS_CTL
 * 
 *  
 * 
$AGL_GMX_TX(0..0)_STAT9   Address=(0x11800E00002C8+a*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> UNDFLW RC/W/H  0x0        NS         Number of underflow packets                       
 <31:0>  CTL    RC/W/H  0x0        NS         Number of Control packets (PAUSE flow control)    
                                              generated by GMX.  It does not include control
                                              packets forwarded or generated by the PP's.

Notes:
Cleared either by a write (of any value) or a read when AGL_GMX_TX_STATS_CTL[RD_CLR] is set
Counters will wrap

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_BIST = GMX BIST Results
 * 
 *  
 * 
$AGL_GMX_BIST   Address=(0x11800E0000400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:25> NS     RAZ     NS         NS         Reserved.                                         
 <24:0>  STATUS RO      0x0        0x0        "BIST Results.                                    
                                              HW sets a bit in BIST for for memory that fails
                                              0: gmx#.inb.fif_bnk0
                                              1: gmx#.inb.fif_bnk1
                                              2: gmx#.inb.fif_bnk2
                                              3: gmx#.inb.fif_bnk3
                                              4: gmx#.inb.fif_bnk_ext0
                                              5: gmx#.inb.fif_bnk_ext1
                                              6: gmx#.inb.fif_bnk_ext2
                                              7: gmx#.inb.fif_bnk_ext3
                                              8: gmx#.outb.fif.fif_bnk0
                                              9: gmx#.outb.fif.fif_bnk1
                                              10: RAZ
                                              11: RAZ
                                              12: gmx#.outb.fif.fif_bnk_ext0
                                              13: gmx#.outb.fif.fif_bnk_ext1
                                              14: RAZ
                                              15: RAZ
                                              16: RAZ
                                              17: RAZ
                                              18: RAZ
                                              19: RAZ
                                              20: gmx#.csr.drf20x32m2_bist
                                              21: gmx#.csr.drf20x48m2_bist
                                              22: gmx#.outb.stat.drf16x27m1_bist
                                              23: gmx#.outb.stat.drf40x64m1_bist
                                              24: RAZ"
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_BP_DROP = FIFO mark for packet drop
 * 
 *  
 * 
$AGL_GMX_RX_BP_DROP(0..0)   Address=(0x11800E0000420+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  NS    RAZ     NS         NS         Reserved.                                         
 <5:0>   MARK  R/W     0x2        0x2        Number of 8B ticks to reserve in the RX FIFO.     
                                             When the FIFO exceeds this count, packets will
                                             be dropped and not buffered.
                                             MARK should typically be programmed to 2.
                                             Failure to program correctly can lead to system
                                             instability.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_BP_ON = Hiwater mark for port/interface backpressure
 * 
 *  
 * 
$AGL_GMX_RX_BP_ON(0..0)   Address=(0x11800E0000440+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:9>  NS    RAZ     NS         NS         Reserved.                                         
 <8:0>   MARK  R/W     0x40       0x40       Hiwater mark (8B ticks) for backpressure.         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_BP_OFF = Lowater mark for packet drop
 * 
 *  
 * 
$AGL_GMX_RX_BP_OFF(0..0)   Address=(0x11800E0000460+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  NS    RAZ     NS         NS         Reserved.                                         
 <5:0>   MARK  R/W     0x10       0x10       Water mark (8B ticks) to deassert backpressure    
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_TX_IFG
 * 
 *  Common
 *  AGL_GMX_TX_IFG = Packet TX Interframe Gap
 * 
$AGL_GMX_TX_IFG   Address=(0x11800E0000488)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:4>   IFG2  R/W     0x4        NS         1/3 of the interframe gap timing                  
                                             If CRS is detected during IFG2, then the
                                             interFrameSpacing timer is not reset and a frame
                                             is transmited once the timer expires.
                                             1000Mbs   = 4
                                             10/100Mbs = 10
                                             (In 10/100Mbs mode, total IFG doubled to 24 with
                                             IFG2 increase to 10 for bug16930.)
                                             (Bug16930 only applies to 6xxx series)
 <3:0>   IFG1  R/W     0x8        NS         2/3 of the interframe gap timing                  
                                             If CRS is detected during IFG1, then the
                                             interFrameSpacing timer is reset and a frame is
                                             not transmited.
                                             1000Mbs   = 8
                                             10/100Mbs = 14
                                             (In 10/100Mbs mode, total IFG doubled to 24 with
                                             IFG1 increase to 14 for bug16930.)
                                             (Bug16930 only applies to 6xxx series)

Notes:
"* Programming IFG1 and IFG2.
For half-duplex systems that require IEEE 802.3 compatibility, IFG1 must
be in the range of 1-8, IFG2 must be in the range of 4-12, and the
IFG1+IFG2 sum must be 12.
For full-duplex systems that require IEEE 802.3 compatibility, IFG1 must
be in the range of 1-11, IFG2 must be in the range of 1-11, and the
IFG1+IFG2 sum must be 12.
For all other systems, IFG1 and IFG2 can be any value in the range of
1-15.  Allowing for a total possible IFG sum of 2-30."

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_TX_JAM = Packet TX Jam Pattern
 * 
 *  
 * 
$AGL_GMX_TX_JAM   Address=(0x11800E0000490)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:0>   JAM   R/W     0xee       NS         Jam pattern                                       
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_TX_COL_ATTEMPT = Packet TX collision attempts before dropping frame
 * 
 *  
 * 
$AGL_GMX_TX_COL_ATTEMPT   Address=(0x11800E0000498)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:5>  NS    RAZ     NS         NS         Reserved.                                         
 <4:0>   LIMIT R/W     0x10       0x10       Collision Attempts                                
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_TX_PAUSE_PKT_DMAC = Packet TX Pause Packet DMAC field
 * 
 *  
 * 
$AGL_GMX_TX_PAUSE_PKT_DMAC   Address=(0x11800E00004A0)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS    RAZ     NS         NS         Reserved.                                         
 <47:0>  DMAC  R/W     0x180c2000001 0x180c2000001 The DMAC field placed is outbnd pause pkts        
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_TX_PAUSE_PKT_TYPE = Packet TX Pause Packet TYPE field
 * 
 *  
 * 
$AGL_GMX_TX_PAUSE_PKT_TYPE   Address=(0x11800E00004A8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:0>  TYPE  R/W     0x8808     0x8808     The TYPE field placed is outbnd pause pkts        
                                             Attribute: -exempt_keyword=True.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_TX_OVR_BP = Packet TX Override BackPressure
 * 
 *  
 * 
$AGL_GMX_TX_OVR_BP   Address=(0x11800E00004C8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:9>  NS       RAZ     NS         NS         Reserved.                                         
 <8>     EN       R/W     0x0        0x0        Per port Enable back pressure override            
 <7:5>   NS       RAZ     NS         NS         Reserved.                                         
 <4>     BP       R/W     0x0        0x0        Port BackPressure status to use                   
                                                0=Port is available
                                                1=Port should be back pressured
 <3:1>   NS       RAZ     NS         NS         Reserved.                                         
 <0>     IGN_FULL R/W     0x0        0x0        Ignore the RX FIFO full when computing BP         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_TX_BP = Packet TX BackPressure Register
 * 
 *  
 * 
$AGL_GMX_TX_BP   Address=(0x11800E00004D0)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS    RAZ     NS         NS         Reserved.                                         
 <0>     BP    RO      0x0        0x0        Port BackPressure status                          
                                             0=Port is available
                                             1=Port should be back pressured
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_PRT_INFO = state information for the ports
 * 
 *  
 * 
$AGL_GMX_RX_PRT_INFO   Address=(0x11800E00004E8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:17> NS     RAZ     NS         NS         Reserved.                                         
 <16>    DROP   RO/H    0x0        0x0        Port indication that data was dropped             
 <15:1>  NS     RAZ     NS         NS         Reserved.                                         
 <0>     COMMIT RO/H    0x0        0x0        Port indication that SOP was accepted             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_TX_LFSR = LFSR used to implement truncated binary exponential backoff
 * 
 *  
 * 
$AGL_GMX_TX_LFSR   Address=(0x11800E00004F8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:0>  LFSR  R/W/H   0xffff     NS         The current state of the LFSR used to feed random 
                                             numbers to compute truncated binary exponential
                                             backoff.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_TX_INT_REG = Interrupt Register
 * 
 *  
 * 
$AGL_GMX_TX_INT_REG   Address=(0x11800E0000500)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:21> NS       RAZ     NS         NS         Reserved.                                         
 <20>    PTP_LOST R/W1C/H 0x0        0x0        A packet with a PTP request was not able to be    
                                                sent due to XSCOL
 <19:17> NS       RAZ     NS         NS         Reserved.                                         
 <16>    LATE_COL R/W1C/H 0x0        0x0        TX Late Collision                                 
 <15:13> NS       RAZ     NS         NS         Reserved.                                         
 <12>    XSDEF    R/W1C/H 0x0        0x0        TX Excessive deferral (halfdup mode only)         
 <11:9>  NS       RAZ     NS         NS         Reserved.                                         
 <8>     XSCOL    R/W1C/H 0x0        0x0        TX Excessive collisions (halfdup mode only)       
 <7:3>   NS       RAZ     NS         NS         Reserved.                                         
 <2>     UNDFLW   R/W1C/H 0x0        0x0        TX Underflow                                      
 <1>     NS       RAZ     NS         NS         Reserved.                                         
 <0>     PKO_NXA  R/W1C/H 0x0        0x0        Port address out-of-range from PKO Interface      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_TX_INT_EN = Interrupt Enable
 * 
 *  
 * 
$AGL_GMX_TX_INT_EN   Address=(0x11800E0000508)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:24> NS       RAZ     NS         NS         Reserved.                                         
 <23:21> NS       RAZ     NS         NS         Reserved.                                         
 <20>    PTP_LOST R/W     0x0        0x0        A packet with a PTP request was not able to be    
                                                sent due to XSCOL
 <19:17> NS       RAZ     NS         NS         Reserved.                                         
 <16>    LATE_COL R/W     0x0        0x0        TX Late Collision                                 
 <15:13> NS       RAZ     NS         NS         Reserved.                                         
 <12>    XSDEF    R/W     0x0        0x0        TX Excessive deferral (halfdup mode only)         
 <11:9>  NS       RAZ     NS         NS         Reserved.                                         
 <8>     XSCOL    R/W     0x0        0x0        TX Excessive collisions (halfdup mode only)       
 <7:3>   NS       RAZ     NS         NS         Reserved.                                         
 <2>     UNDFLW   R/W     0x0        0x0        TX Underflow                                      
 <1>     NS       RAZ     NS         NS         Reserved.                                         
 <0>     PKO_NXA  R/W     0x0        0x0        Port address out-of-range from PKO Interface      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_BAD_REG = A collection of things that have gone very, very wrong
 * 
 *  
 * 
$AGL_GMX_BAD_REG   Address=(0x11800E0000518)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:35> NS       RAZ     NS         NS         Reserved.                                         
 <34>    TXPSH    R/W1C   0x0        0x0        TX FIFO overflow (RGMII0)                         
 <33>    TXPOP    R/W1C   0x0        0x0        TX FIFO underflow (RGMII0)                        
 <32>    OVRFLW   R/W1C   0x0        0x0        RX FIFO overflow (RGMII0)                         
 <31:27> NS       RAZ     NS         NS         Reserved.                                         
 <26>    STATOVR  R/W1C/H 0x0        0x0        TX Statistics overflow                            
 <25:23> NS       RAZ     NS         NS         Reserved.                                         
 <22>    LOSTSTAT R/W1C/H 0x0        0x0        TX Statistics data was over-written               
                                                In RGMII, one bit per port
                                                TX Stats are corrupted
 <21:3>  NS       RAZ     0x0        0x0        Reserved.                                         
 <2>     OUT_OVR  R/W1C/H 0x0        0x0        Outbound data FIFO overflow                       
 <1:0>   NS       RAZ     0x0        0x0        Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_STAT_BP = Number of cycles that the TX/Stats block has help up operation
 * 
 *  
 * 
$AGL_GMX_STAT_BP   Address=(0x11800E0000520)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:17> NS    RAZ     NS         NS         Reserved.                                         
 <16>    BP    RO/H    0x0        0x0        Current TX stats BP state                         
                                             When the TX stats machine cannot update the stats
                                             registers quickly enough, the machine has the
                                             ability to BP TX datapath.  This is a rare event
                                             and will not occur in normal operation.
                                             0 = no backpressure is applied
                                             1 = backpressure is applied to TX datapath to
                                             allow stat update operations to complete
 <15:0>  CNT   R/W1C/H 0x0        0x0        Number of cycles that BP has been asserted        
                                             Saturating counter

Notes:
INTERNAL: *DON'T PUT IN HRM*
It has no relationship with the TX FIFO per se.  The TX engine sends packets
from PKO and upon completion, sends a command to the TX stats block for an
update based on the packet size.  The stats operation can take a few cycles -
normally not enough to be visible considering the 64B min packet size that is
ethernet convention.
In the rare case in which SW attempted to schedule really, really, small packets
or the sclk (6xxx) is running ass-slow, then the stats updates may not happen in
real time and can back up the TX engine.
This counter is the number of cycles in which the TX engine was stalled.  In
normal operation, it should always be zeros.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_WOL_CTL
 * 
 *  
 * 
$AGL_GMX_WOL_CTL   Address=(0x11800E0000780)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS        RAZ     NS         NS         Reserved.                                         
 <47:36> NS        RAZ     NS         NS         Reserved.                                         
 <35:33> NS        RAZ     NS         NS         Reserved.                                         
 <32>    MAGIC_EN  R/W     0x0        NS         Port enable for magic pkt WOL event detection.    
 <31:20> NS        RAZ     NS         NS         Reserved.                                         
 <19:17> NS        RAZ     NS         NS         Reserved.                                         
 <16>    DIRECT_EN R/W     0x0        NS         Port enable for directed pkt WOL event detection. 
 <15:1>  NS        RAZ     NS         NS         Reserved.                                         
 <0>     EN        R/W     0x0        NS         Enter WOL mode.                                   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_GMX_RX_TX_STATUS = GMX RX/TX Status
 * 
 *  
 * 
$AGL_GMX_RX_TX_STATUS   Address=(0x11800E00007E8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:5>  NS    RAZ     NS         NS         Reserved.                                         
 <4>     TX    RC/H    0x0        0x0        Transmit data since last read                     
 <3:1>   NS    RAZ     NS         NS         Reserved.                                         
 <0>     RX    RC/H    0x0        0x0        Receive data since last read                      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * AGL_PRT_CTL = AGL Port Control
 * 
 *  
 * 
$AGL_PRT(0..0)_CTL   Address=(0x11800E0002000+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    DRV_BYP    R/W     0x0        0x0        Bypass the compensation controller and use        
                                                  DRV_NCTL and DRV_PCTL
 <62:61> NS         RAZ     NS         NS         Reserved.                                         
 <60:56> CMP_PCTL   RO/H    NS         NS         PCTL drive strength from the compensation ctl     
 <55:53> NS         RAZ     NS         NS         Reserved.                                         
 <52:48> CMP_NCTL   RO/H    NS         NS         NCTL drive strength from the compensation ctl     
 <47:45> NS         RAZ     NS         NS         Reserved.                                         
 <44:40> DRV_PCTL   R/W     0xd        NS         PCTL drive strength to use in bypass mode         
                                                  Reset value of 19 is for 50 ohm termination
 <39:37> NS         RAZ     NS         NS         Reserved.                                         
 <36:32> DRV_NCTL   R/W     0xc        NS         NCTL drive strength to use in bypass mode         
                                                  Reset value of 15 is for 50 ohm termination
 <31>    NS         RAZ     NS         NS         Reserved.                                         
 <30:24> CLK_SET    RO/H    NS         NS         The clock delay as determined by the DLL          
 <23>    CLKRX_BYP  R/W     0x0        NS         Bypass the RX clock delay setting                 
                                                  Skews RXC from RXD,RXCTL
                                                  By default, HW internally shifts the RXC clock
                                                  to sample RXD,RXCTL assuming clock and data and
                                                  sourced synchronously from the link partner.
 <22:16> CLKRX_SET  R/W     0x0        NS         RX clock delay setting to use in bypass mode      
                                                  Skews RXC from RXD
 <15>    CLKTX_BYP  R/W     0x1        NS         Bypass the TX clock delay setting                 
                                                  Skews TXC from TXD,TXCTL
                                                  By default, clock and data and sourced
                                                  synchronously.
 <14:8>  CLKTX_SET  R/W     0x0        NS         TX clock delay setting to use in bypass mode      
                                                  Skews TXC from TXD
 <7:6>   REFCLK_SEL R/W     0x0        NS         Select the refclk to use.  Normal RGMII specification requires a 125MHz oscillator.  In
                                                  order to save some system cost, a 500MHz coprocessor clock can be divided down and remove
                                                  the requirements for the external oscillator.  Additionally, in some well defined systems,
                                                  the link partner may be able to source the RXC.  The RGMII would operate correctly in
                                                  1000Mbs mode only.  (INTERNAL: Some programming magic could allow for 10/100
                                                  operation if critical).
                                                  0 = RGMII REFCLK
                                                  1 = RGMII RXC (1000Mbs only) (INTERNAL: some programming restrictions apply for 10/100)
                                                  2 = divided coprocessor clk
                                                  3 = reserved
 <5>     NS         RAZ     NS         NS         Reserved.                                         
 <4>     DLLRST     R/W     0x1        0x0        DLL Reset                                         
 <3>     COMP       R/W     0x0        0x1        Compensation Enable                               
 <2>     ENABLE     R/W     0x0        0x1        Port Enable                                       
 <1>     CLKRST     R/W     0x0        0x1        DLL CLK Reset                                     
 <0>     MODE       RO      0x0        0x0        Port Mode                                         
                                                  0=RGMII

Notes:
The RGMII timing specification requires that devices transmit clock and
data synchronously. The specification requires external sources (namely
the PC board trace routes) to introduce the appropriate 1.5 to 2.0 ns of
delay.
To eliminate the need for the PC board delays, the RGMII interface has optional
onboard DLL's for both transmit and receive. For correct operation, at most one
of the transmitter, board, or receiver involved in an RGMII link should
introduce delay. By default/reset, the RGMII receivers delay the received clock,
and the RGMII transmitters do not delay the transmitted clock. Whether this
default works as-is with a given link partner depends on the behavior of the
link partner and the PC board.
These are the possible modes of RGMII receive operation:
o AGL_PRTx_CTL[CLKRX_BYP] = 0 (reset value) The OCTEON RGMII
receive interface introduces clock delay using its internal DLL.
This mode is appropriate if neither the remote
transmitter nor the PC board delays the clock.
o AGL_PRTx_CTL[CLKRX_BYP] = 1, [CLKRX_SET] = 0x0 The OCTEON
RGMII receive interface introduces no clock delay. This mode
is appropriate if either the remote transmitter or the PC board
delays the clock.
These are the possible modes of RGMII transmit operation:
o AGL_PRTx_CTL[CLKTX_BYP] = 1, [CLKTX_SET] = 0x0 (reset value) -
The OCTEON RGMII transmit interface introduces no clock
delay. This mode is appropriate is either the remote receiver
or the PC board delays the clock.
o AGL_PRTx_CTL[CLKTX_BYP] = 0 The OCTEON RGMII transmit
interface introduces clock delay using its internal DLL.
This mode is appropriate if neither the remote receiver
nor the PC board delays the clock.

-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the bch.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

 * 
 * BCH_CTL = BCH Control Register
 * 
 *  
 * 
$BCH_CTL   Address=(0x1180071000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field         Field   Reset      Typical    Field                                             
 Pos     Name          Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:23> NS            RAZ     0x0        0x0        Reserved.                                         
 <22>    FREE_ENA      R/W     0x0        0x0        Enable freeing of command buffers.                
 <21:18> EARLY_TERM    R/W     0x5        0x5        Threshold of zero delta interations before declaring early termination.
                                                     0 will force all iterations to run.  Diagnostic only.
 <17>    ONE_CMD       RAZ     0x0        0x0        Execute a single operation at a time.  Diagnostic only.
 <16>    ERASE_DISABLE R/W     0x0        0x0        When ERASE_DISABLE=0, erased blocks bypass the BCH correction.   The 16B result word
                                                     contains an erased block indication.
                                                     
                                                     A block is considered erased if the number of zeros found in the block (data+ECC) is
                                                     less than half the ECC level.   For instance, a 2KB block using ECC32 is considered
                                                     erased if few than 16 zeroes are found in the 2048+60 bytes.
 <15:6>  NS            RAZ     0x0        0x0        Reserved.                                         
 <5:2>   MAX_READ      R/W     0x8        0x8        Maximum number of outstanding data read commands. MAX_READ is a throttle to control IOB
                                                     usage. Values greater than 0x8 are illegal.
 <1>     STORE_LE      R/W     0x0        0x0        Force STORE0 byte write address to little endian. 
 <0>     RESET         R/W1    0x0        0x0        Reset oneshot pulse (lasts for 4 cycles).         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * BCH_CMD_BUF = Command Buffer Register
 * 
 *  This register sets the command-buffer parameters.
 *  Attribute: -dv_fc_scratch=ALL.
 * 
$BCH_CMD_BUF   Address=(0x1180071000008)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:58> NS    RAZ     0x0        0x0        Reserved.                                         
 <57:49> DWB   R/W     0x0        NS         Number of DontWriteBacks.                         
 <48:46> POOL  R/W     0x0        NS         Free list used to free command buffer segments.   
 <45:33> SIZE  R/W     0x0        NS         Number of uint64s per command buffer segment.     
 <32:0>  PTR   R/W     0x0        NS         Initial command buffer pointer[39:7] (128B-aligned).
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * BCH_ERR_CFG = BCH Error Configuration Register
 * 
 *  
 * 
$BCH_ERR_CFG   Address=(0x1180071000010)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:18> NS          RAZ     NS         NS         Reserved.                                         
 <17:16> DAT_FLIP    R/W     0x0        0x0        Testing feature. Flip syndrome bits <1:0> on writes to the DAT ram to test single-bit or
                                                   double-bit errors.
 <15:1>  NS          RAZ     NS         NS         Reserved.                                         
 <0>     DAT_COR_DIS R/W     0x0        0x0        Disable ECC corrector on DAT RAM.                 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * BCH_BIST_RESULT = BCH BIST Result Register
 * 
 *  This register provides access to internal BIST results. Each bit is the BIST result of an
 *  individual memory (per bit, 0 = pass, 1 = fail).
 * 
$BCH_BIST_RESULT   Address=(0x1180071000080)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  NS      RAZ     NS         NS         Reserved.                                         
 <5>     NCB_OUB RO      NS         0x0        BIST result of the NCB_OUB memories.              
 <4>     NCB_INB RO      NS         0x0        BIST result of the NCB_INB memories.              
 <3:0>   DAT     RO      NS         0x0        BIST result of the DAT memories.                  
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * BCH_GEN_INT = BCH General Interrupt Register
 * 
 *  
 * 
$BCH_GEN_INT   Address=(0x1180071000088)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:3>  NS       RAZ     NS         NS         Reserved.                                         
 <2>     DAT_DBE  R/W1C/H 0x0        0x0        An ECC uncorrectable error has occurred in the DAT RAM.
 <1>     DAT_SBE  R/W1C/H 0x0        0x0        An ECC correctable error has occurred in the DAT RAM.
 <0>     DOORBELL R/W1C/H 0x0        0x0        Error bit indicating a doorbell count has overflowed.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * BCH_GEN_INT_EN = BCH Interrupt Mask Register
 * 
 *  When a mask bit is set, the corresponding interrupt is enabled.
 * 
$BCH_GEN_INT_EN   Address=(0x1180071000090)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:3>  NS       RAZ     NS         NS         Reserved.                                         
 <2>     DAT_DBE  R/W     0x0        0x0        Interrupt-enable bit mask corresponding to the error mask in BCH_GEN_INT.
 <1>     DAT_SBE  R/W     0x0        0x0        Interrupt-enable bit mask corresponding to the error mask in BCH_GEN_INT.
 <0>     DOORBELL R/W     0x0        0x0        Interrupt-enable bit mask corresponding to the error mask in BCH_GEN_INT.
-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the ciu3.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

 * 
 * CIU_INTSN_E
 * 
 *  Enumerates the different interrupts from CIU itself; see Interrupt Source Numbers.
 *  Attribute: -width=20.
 * 
$CIU_INTSN_E
-----------------------------------------------------------------------------------------------------------------------------------
 Value                  Name       Description    
-----------------------------------------------------------------------------------------------------------------------------------
 0x0                    CIB_NONE   INTERNAL: No interrupt.
                                   Attribute: -cib_rtl_module=none.
                                   Attribute: -intsn_complex=1.
 0x1                    CIB_CANCEL INTERNAL: Request not needed as interrupt already cleared.
                                   Attribute: -cib_rtl_module=none.
                                   Attribute: -intsn_complex=1.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_INTSN_MAJOR_E
 * 
 *  INTERNAL: Where possible, these numbers match the RSLDID assignments in chip_defines.vh.
 *  Enumerates the upper 8 bits of interrupt source numbers; see Interrupt Source Numbers.
 *
 *  Attribute: -cib_rtl_ciu1_style=1.
 *  Attribute: -width=8.
 * 
$CIU_INTSN_MAJOR_E
-----------------------------------------------------------------------------------------------------------------------------------
 Value                  Name         Description    
-----------------------------------------------------------------------------------------------------------------------------------
 0x0                    CIU          CIU            
                                     Attribute: -see_enumeration=CIU_INTSN_E on CIU_INTSN_E.
 0x6                    RST          Reset interrupts
                                     Attribute: -see_enumeration=RST_INTSN_E on TBD-TECHDOC.
 0x68+a                 USBDRD(0..1) USB controller interrupts; see .
                                     Attribute: -see_enumeration=USBDRD_UCTL_INTSN_E on TBD-TECHDOC.
 0x6C                   SATA         SATA controller interrupts; see .
                                     Attribute: -see_enumeration=SATA_UCTL_INTSN_E on TBD-TECHDOC.
 0x80                   L2C          L2C interrupts; see .
                                     Attribute: -see_enumeration=L2C_INTSN_E on TBD-TECHDOC-link.
 0x88+a                 LMC(0)       LMC interrupts; see .
                                     Attribute: -see_enumeration=LMC_INTSN_E on TBD-TECHDOC-link.
 0xA8+a                 OCLA(0)      OCLA interrupts; see .
                                     Attribute: -see_enumeration=OCLA_INTSN_E on.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_PP_INT_S
 * 
 *  This structure specifies the layout of RTL interrupt delivery. It is not visible to software.
 * 
$CIU_PP_INT_S
-----------------------------------------------------------------------------------------------------------------------------------
 Bit       Field  Field          
 Pos       Name   Description    
-----------------------------------------------------------------------------------------------------------------------------------
 w0<13>    VALID  Data transmitted on interface is valid..
 w0<12>    PWRDWN Core does not require power.
 w0<11:6>  PPVID  Virtual core number.
 w0<5:3>   IRQ    Interrupt IRQ2,3,4 for the core specified by PPVID.
                  Attribute: -verilog_struct_row_offset=2.
 w0<2>     NMI    NMI pulse to core specified by PPVID.
 w0<1>     DINT   DINT pulse to core specified by PPVID.
 w0<0>     RST    Reset control for the core specified by PPVID.
-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the dfa.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

 * 
 * DFA_CONFIG
 * 
 *  Specify the RSL base addresses for the block
 *  DFA_CONFIG = DFA Configuration Register
 *  Description:
 * 
$DFA_CONFIG   Address=(0x1180037000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field         Field   Reset      Typical    Field                                             
 Pos     Name          Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:11> NS            RAZ     NS         NS         RESERVED                                          
 <10>    DLCCLEAR_BIST R/W     0x0        0x0        When DLCSTART_BIST is written 0->1, if DLCCLEAR_BIST=1, all
                                                     previous DLC BiST state is cleared.
                                                     NOTES:
                                                     1) DLCCLEAR_BIST must be written to 1 before DLCSTART_BIST
                                                     is written to 1 udsing a separate CSR write.
                                                     2) DLCCLEAR_BIST must not be changed after writing DLCSTART_BIST
                                                     0->1 until the BIST operation completes.
 <9>     DLCSTART_BIST R/W     0x0        0x0        When software writes DLCSTART_BIST=0->1, a BiST is executed
                                                     for the DLC sub-block RAMs which contains DCLK domain
                                                     asynchronous RAMs.
                                                     NOTES:
                                                     1) This bit should only be written after DCLK has been enabled
                                                     by software and is stable.
                                                     (see LMC initialization routine for details on how to enable
                                                     the DDR3 memory (DCLK) - which requires LMC PLL init, clock
                                                     divider and proper DLL initialization sequence).
 <8>     REPL_ENA      R/W     0x0        0x0        Replication Mode Enable                           
                                                     *** o63-P2 NEW ***
                                                     When set, enables replication mode performance enhancement
                                                     feature. This enables the DFA to communicate address
                                                     replication information during memory references to the
                                                     memory controller.
                                                     For o63-P2:        This is used by the memory controller
                                                     to support graph data in multiple banks (or bank sets), so that
                                                     the least full bank can be selected to minimize the effects of
                                                     DDR3 bank conflicts (ie: tRC=row cycle time).
                                                     For o68: This is used by the memory controller to support graph
                                                     data in multiple ports (or port sets), so that the least full
                                                     port can be selected to minimize latency effects.
                                                     For o61: This bit MUST BE ZERO for proper operation, since there
                                                     is only a single LMC port, port replication is not supported by HW.
                                                     SWNOTE: Using this mode requires the DFA SW compiler and DFA
                                                     driver to be aware of the address replication changes.
                                                     This involves changes to the MLOAD/GWALK DFA instruction format
                                                     (see: IWORD2.SREPL), as well as changes to node arc and metadata
                                                     definitions which now support an additional REPL field.
                                                     When clear, replication mode is disabled, and DFA will interpret
                                                     DFA instructions and node-arc formats which DO NOT have
                                                     address replication information.
 <7:4>   CLMSKCRIP     R/W/H   0x0        0x0        Cluster Cripple Mask                              
                                                     A one in each bit of the mask represents which DTE cluster to
                                                     cripple.
                                                     NOTE: o63/o61 have only a single Cluster (therefore CLMSKCRIP[0]
                                                     is the only bit used.
                                                     o68 has 3 clusters, where CLMSKCRIP[2:0] mask bits are used.
                                                     SWNOTE: The MIO_FUS___DFA_CLMASK_CRIPPLE[2:0] fuse bits will
                                                     be forced into this register at reset. Any fuse bits that
                                                     contain '1' will be disallowed during a write and will always
                                                     be read as '1'.
 <3:1>   CLDTECRIP     R/W/H   0x0        0x0        "Encoding which represents #of DTEs to cripple for each
                                                     cluster. Typically DTE_CLCRIP=0 which enables all DTEs
                                                     within each cluster. However, when the DFA performance
                                                     counters are used, SW may want to limit the #of DTEs
                                                     per cluster available, as there are only 4 parallel
                                                     performance counters.
                                                     DTE_CLCRIP | #DTEs crippled(per cluster)
                                                     ------------+-----------------------------
                                                     0    |  0      DTE[15:0]:ON
                                                     1    |  1/2    DTE[15:8]:OFF  /DTE[7:0]:ON
                                                     2    |  1/4    DTE[15:12]:OFF /DTE[11:0]:ON
                                                     3    |  3/4    DTE[15:4]:OFF  /DTE[3:0]:ON
                                                     4    |  1/8    DTE[15:14]:OFF /DTE[13:0]:ON
                                                     5    |  5/8    DTE[15:6]:OFF  /DTE[5:0]:ON
                                                     6    |  3/8    DTE[15:10]:OFF /DTE[9:0]:ON
                                                     7    |  7/8    DTE[15:2]:OFF  /DTE[1:0]:ON
                                                     NOTE: Higher numbered DTEs are crippled first. For instance,
                                                     on o63/o61 (with 16 DTEs/cluster), if DTE_CLCRIP=1(1/2), then
                                                     DTE#s [15:8] within the cluster are crippled and only
                                                     DTE#s [7:0] are available.
                                                     IMPNOTE: The encodings are done in such a way as to later
                                                     be used with fuses (for future OCTEON revisions which will disable
                                                     some #of DTEs). Blowing a fuse has the effect that there will
                                                     always be fewer DTEs available. [ie: we never want a customer
                                                     to blow additional fuses to get more DTEs].
                                                     SWNOTE: The MIO_FUS___DFA_NUMDTE_CRIPPLE[2:0] fuse bits will
                                                     be forced into this register at reset. Any fuse bits that
                                                     contain '1' will be disallowed during a write and will always
                                                     be read as '1'."
 <0>     DTECLKDIS     R/W     0x1        0x0        DFA Clock Disable Source                          
                                                     When SET, the DFA clocks for DTE(thread engine)
                                                     operation are disabled (to conserve overall chip clocking
                                                     power when the DFA function is not used).
                                                     NOTE: When SET, SW MUST NEVER issue NCB-Direct CSR
                                                     operations to the DFA (will result in NCB Bus Timeout
                                                     errors).
                                                     NOTE: This should only be written to a different value
                                                     during power-on SW initialization.
                                                     SWNOTE: The MIO_FUS___DFA_DTE_DISABLE fuse bit will
                                                     be forced into this register at reset. If the fuse bit
                                                     contains '1', writes to DTECLKDIS are disallowed and
                                                     will always be read as '1'.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DFA_CONTROL = DFA Control Register
 * 
 *  Description:
 * 
$DFA_CONTROL   Address=(0x1180037000020)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:10> NS     RAZ     NS         NS         RESERVED                                          
 <9:6>   SBDNUM R/W     0x0        0x0        "SBD Debug Entry#                                 
                                              *FOR INTERNAL USE ONLY*
                                              DFA Scoreboard debug control
                                              Selects which one of 16 DFA Scoreboard entries is
                                              latched into the DFA_SBD_DBG[0-3] registers."
 <5>     SBDLCK R/W     0x0        0x0        DFA Scoreboard LOCK Strobe                        
                                              *FOR INTERNAL USE ONLY*
                                              DFA Scoreboard debug control
                                              When written with a '1', the DFA Scoreboard Debug
                                              registers (DFA_SBD_DBG[0-3]) are all locked down.
                                              This allows SW to lock down the contents of the entire
                                              SBD for a single instant in time. All subsequent reads
                                              of the DFA scoreboard registers will return the data
                                              from that instant in time.
 <4:3>   NS     RAZ     NS         NS         RESERVED                                          
 <2>     PMODE  R/W     0x1        0x1        NCB-NRP Arbiter Mode                              
                                              (0=Fixed Priority {LP=WQF,DFF,HP=RGF}/1=RR
                                              NOTE: This should only be written to a different value
                                              during power-on SW initialization.
 <1>     QMODE  R/W     0x1        0x1        NCB-NRQ Arbiter Mode                              
                                              (0=Fixed Priority {LP=IRF,RWF,PRF,HP=GRF}/1=RR
                                              NOTE: This should only be written to a different value
                                              during power-on SW initialization.
 <0>     IMODE  R/W     0x1        0x1        NCB-Inbound Arbiter                               
                                              (0=FP {LP=NRQ,HP=NRP}, 1=RR)
                                              NOTE: This should only be written to a different value
                                              during power-on SW initialization.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DFA_ERROR = DFA ERROR Register
 * 
 *  Description:
 * 
$DFA_ERROR   Address=(0x1180037000028)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:19> NS          RAZ     NS         NS         RESERVED                                          
 <18>    REPLERR     R/W1C/H 0x0        0x0        DFA Illegal Replication Factor Error              
                                                   For o68: DFA only supports 1x, 2x, and 4x port replication.
                                                   Legal configurations for memory are to support 2 port or
                                                   4 port configurations.
                                                   The REPLERR interrupt will be set in the following illegal
                                                   configuration cases:
                                                   1) An 8x replication factor is detected for any memory reference.
                                                   2) A 4x replication factor is detected for any memory reference
                                                   when only 2 memory ports are enabled.
                                                   
                                                   NOTE: If REPLERR is set during a DFA Graph Walk operation,
                                                   then the walk will prematurely terminate with RWORD0[REA]=ERR.
                                                   If REPLERR is set during a NCB-Direct CSR read access to DFA
                                                   Memory REGION, then the CSR read response data is UNPREDICTABLE.
 <17>    DFANXM      R/W1C/H 0x0        0x0        DFA Non-existent Memory Access                    
                                                   For o68/o61: DTEs (and backdoor CSR DFA Memory REGION reads)
                                                   have access to the following 38bit L2/DRAM address space
                                                   which maps to a 37bit physical DDR3 SDRAM address space.
                                                   see:
                                                   DR0: 0x0 0000 0000 0000 to 0x0 0000 0FFF FFFF
                                                   maps to lower 256MB of physical DDR3 SDRAM
                                                   DR1: 0x0 0000 2000 0000 to 0x0 0020 0FFF FFFF
                                                   maps to upper 127.75GB of DDR3 SDRAM
                                                   L2/DRAM address space                     Physical DDR3 SDRAM Address space
                                                   (38bit address)                           (37bit address)
                                                   +-----------+ 0x0020.0FFF.FFFF
                                                   
                                                   ===   DR1   ===                          +-----------+ 0x001F.FFFF.FFFF
                                                   (128GB-256MB)
                                                   |           |                     =>    |           |  (128GB-256MB)
                                                   +-----------+ 0x0000.1FFF.FFFF          |   DR1
                                                   256MB   |   HOLE    |   (DO NOT USE)
                                                   +-----------+ 0x0000.0FFF.FFFF          +-----------+ 0x0000.0FFF.FFFF
                                                   256MB   |    DR0    |                           |   DR0     |   (256MB)
                                                   +-----------+ 0x0000.0000.0000          +-----------+ 0x0000.0000.0000
                                                   In the event the DFA generates a reference to the L2/DRAM
                                                   address hole (0x0000.0FFF.FFFF - 0x0000.1FFF.FFFF) or to
                                                   an address above 0x0020.0FFF.FFFF, the DFANXM programmable
                                                   interrupt bit will be set.
                                                   SWNOTE: Both the 1) SW DFA Graph compiler and the 2) SW NCB-Direct CSR
                                                   accesses to DFA Memory REGION MUST avoid making references
                                                   to these non-existent memory regions.
                                                   
                                                   NOTE: If DFANXM is set during a DFA Graph Walk operation,
                                                   then the walk will prematurely terminate with RWORD0[REA]=ERR.
                                                   If DFANXM is set during a NCB-Direct CSR read access to DFA
                                                   Memory REGION, then the CSR read response data is forced to
                                                   128'hBADE_FEED_DEAD_BEEF_FACE_CAFE_BEAD_C0DE. (NOTE: the QW
                                                   being accessed, either the upper or lower QW will be returned).
 <16>    CNDRD       RO/H    0x0        0x0        If any of the cluster's detected a Parity error on RAM1
                                                   this additional bit further specifies that the
                                                   RAM1 parity error was detected during a CND-RD
                                                   (Cache Node Metadata Read).
                                                   *DON'T PUT IN HRM*
                                                   For CNDRD Parity Error, the previous CNA arc fetch
                                                   information is written to RWORD1+ as follows:
                                                   RWORD1+[NTYPE]=MNODE
                                                   RWORD1+[NDNID]=cna.ndnid
                                                   RWORD1+[NHMSK]=cna.hmsk
                                                   RWORD1+[NNPTR]=cna.nnptr[13:0]
                                                   NOTE: This bit is set if ANY node cluster's RAM1 accesses
                                                   detect a CNDRD error.
 <15>    NS          RAZ     NS         NS         RESERVED                                          
 <14>    NS          RAZ     NS         NS         RESERVED                                          
 <13>    DLC0_OVFERR R/W1C/H 0x0        0x0        DLC0 Fifo Overflow Error Detected                 
                                                   This condition should NEVER architecturally occur, and
                                                   is here in case HW credit/debit scheme is not working.
 <12:4>  NS          RAZ     NS         NS         RESERVED                                          
 <3:1>   DC0PERR     R/W1C/H 0x0        0x0        "Cluster#0 RAM[3:1] Parity Error Detected         
                                                   See also DFA_DTCFADR register which contains the
                                                   failing addresses for the internal node cache RAMs."
 <0>     DBLOVF      R/W1C/H 0x0        0x0        Doorbell Overflow detected - Status bit           
                                                   When set, the 20b accumulated doorbell register
                                                   had overflowed (SW wrote too many doorbell requests).
                                                   If the DBLINA had previously been enabled(set),
                                                   an interrupt will be posted. Software can clear
                                                   the interrupt by writing a 1 to this register bit.
                                                   NOTE: Detection of a Doorbell Register overflow
                                                   is a catastrophic error which may leave the DFA
                                                   HW in an unrecoverable state.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DFA_INTMSK = DFA ERROR Interrupt Mask Register
 * 
 *  Description:
 * 
$DFA_INTMSK   Address=(0x1180037000030)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:19> NS          RAZ     NS         NS         RESERVED                                          
 <18>    REPLERRENA  R/W     0x0        0x0        DFA Illegal Replication Factor Interrupt Enable   
 <17>    DFANXMENA   R/W     0x0        0x0        DFA Non-existent Memory Access Interrupt Enable   
 <16:15> NS          RAZ     NS         NS         RESERVED                                          
 <14>    NS          RAZ     NS         NS         RESERVED                                          
 <13>    DLC0_OVFENA R/W     0x0        0x0        DLC0 Fifo Overflow Error Interrupt Enable         
 <12:4>  NS          RAZ     NS         NS         RESERVED                                          
 <3:1>   DC0PENA     R/W     0x0        0x0        "RAM[3:1] Parity Error Enabled Node Cluster #0"   
 <0>     DBLINA      R/W     0x0        0x0        Doorbell Overflow Interrupt Enable bit.           
                                                   When set, doorbell overflow conditions are reported.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DFA_DEBUG0 = DFA Scoreboard Debug #0 Register
 * 
 *  "*FOR INTERNAL USE ONLY*
 *  Description: When the DFA_CONTROL[SBDLCK] bit is written '1', the contents of this register
 *  are locked down.
 *  Otherwise, the contents of this register are the 'active' contents of the DFA Scoreboard at
 *  the time of the
 *  CSR read.
 *  VERIFICATION NOTE: Read data is unsafe. X's(undefined data) can propagate (in the behavioral
 *  model)
 *  on the reads unless the DTE Engine specified by DFA_CONTROL[SBDNUM] has previously been
 *  assigned an
 *  instruction."
 * 
$DFA_DEBUG0   Address=(0x1180037000040)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  SBD0 RO/H    NS         NS         "DFA ScoreBoard #0 Data                           
                                            (DFA Scoreboard Debug)
                                            [63:38]   (26) rptr[28:3]: Result Base Pointer (QW-aligned)
                                            [37:22]   (16) Cumulative Result Write Counter (for HDR write)
                                            [21]       (1) Waiting for GRdRsp EOT
                                            [20]       (1) Waiting for GRdReq Issue (to NRQ)
                                            [19]       (1) GLPTR/GLCNT Valid
                                            [18]       (1) Completion Mark Detected
                                            [17:15]    (3) Completion Code [0=PDGONE/1=PERR/2=RFULL/3=TERM]
                                            [14]       (1) Completion Detected
                                            [13]       (1) Waiting for HDR RWrCmtRsp
                                            [12]       (1) Waiting for LAST RESULT RWrCmtRsp
                                            [11]       (1) Waiting for HDR RWrReq
                                            [10]        (1) Waiting for RWrReq
                                            [9]        (1) Waiting for WQWrReq issue
                                            [8]        (1) Waiting for PRdRsp EOT
                                            [7]        (1) Waiting for PRdReq Issue (to NRQ)
                                            [6]        (1) Packet Data Valid
                                            [5]        (1) WQVLD
                                            [4]        (1) WQ Done Point (either WQWrReq issued (for WQPTR<>0) OR HDR RWrCmtRsp)
                                            [3]        (1) Resultant write STF/P Mode
                                            [2]        (1) Packet Data LDT mode
                                            [1]        (1) Gather Mode
                                            [0]        (1) Valid"
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DFA_DEBUG1 = DFA Scoreboard Debug #1 Register
 * 
 *  "*FOR INTERNAL USE ONLY*
 *  Description: When the DFA_CONTROL[SBDLCK] bit is written '1', the contents of this register
 *  are locked down.
 *  Otherwise, the contents of this register are the 'active' contents of the DFA Scoreboard at
 *  the time of the
 *  CSR read.
 *  VERIFICATION NOTE: Read data is unsafe. X's(undefined data) can propagate (in the behavioral
 *  model)
 *  on the reads unless the DTE Engine specified by DFA_CONTROL[SBDNUM] has previously been
 *  assigned an
 *  instruction."
 * 
$DFA_DEBUG1   Address=(0x1180037000048)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  SBD1 RO/H    NS         NS         "DFA ScoreBoard #1 Data                           
                                            DFA Scoreboard Debug Data
                                            [63:56]   (8) UNUSED
                                            [55:16]  (40) Packet Data Pointer
                                            [15:0]   (16) Packet Data Counter"
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DFA_DEBUG2 = DFA Scoreboard Debug #2 Register
 * 
 *  Description: When the DFA_CONTROL[SBDLCK] bit is written '1', the contents of this register
 *  are locked down.
 *  Otherwise, the contents of this register are the 'active' contents of the DFA Scoreboard at
 *  the time of the
 *  CSR read.
 *  VERIFICATION NOTE: Read data is unsafe. X's(undefined data) can propagate (in the behavioral
 *  model)
 *  on the reads unless the DTE Engine specified by DFA_CONTROL[SBDNUM] has previously been
 *  assigned an
 *  instruction.
 * 
$DFA_DEBUG2   Address=(0x1180037000050)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  SBD2 RO/H    NS         NS         "DFA ScoreBoard #2 Data                           
                                            [63:45] (19) UNUSED
                                            [44:42]  (3) Instruction Type
                                            [41:5]  (37) rwptr[39:3]: Result Write Pointer
                                            [4:0]    (5) prwcnt[4:0]: Pending Result Write Counter"
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DFA_DEBUG3 = DFA Scoreboard Debug #3 Register
 * 
 *  Description: When the DFA_CONTROL[SBDLCK] bit is written '1', the contents of this register
 *  are locked down.
 *  Otherwise, the contents of this register are the 'active' contents of the DFA Scoreboard at
 *  the time of the
 *  CSR read.
 *  VERIFICATION NOTE: Read data is unsafe. X's(undefined data) can propagate (in the behavioral
 *  model)
 *  on the reads unless the DTE Engine specified by DFA_CONTROL[SBDNUM] has previously been
 *  assigned an
 *  instruction.
 * 
$DFA_DEBUG3   Address=(0x1180037000058)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  SBD3 RO/H    NS         NS         "DFA ScoreBoard #3 Data                           
                                            [63:52] (11) rptr[39:29]: Result Base Pointer (QW-aligned)
                                            [52:16] (37) glptr[39:3]: Gather List Pointer
                                            [15:0]  (16) glcnt Gather List Counter"
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DFA_DTCFADR = DFA DTC Failing Address Register
 * 
 *  "Description: DFA Node Cache Failing Address/Control Error Capture information
 *  This register contains useful information to help in isolating a Node Cache RAM failure.
 *  NOTE: The first detected PERR failure is captured in DFA_DTCFADR (locked down), until the
 *  corresponding PERR Interrupt is cleared by writing one (W1C). (see: DFA_ERR[DC0PERR[2:0]]).
 *  NOTE: In the rare event that multiple parity errors are detected in the same cycle from
 *  multiple
 *  clusters, the FADR register will be locked down for the least signicant cluster # (0->3)."
 * 
$DFA_DTCFADR   Address=(0x1180037000060)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:44> NS       RAZ     NS         NS         RESERVED                                          
 <43:32> RAM3FADR RO      NS         NS         DFA RAM3 Failing Address                          
                                                If DFA_ERR[DC0PERR<2>]=1, this field indicates the
                                                failing RAM3 Address. The failing address is locked
                                                down until the DC0PERR<2> W1C occurs.
                                                For o68: If multiple DC0PERR<0>=1 errors are detected,
                                                then the lsb cluster error information is captured.
 <31:25> NS       RAZ     NS         NS         RESERVED                                          
 <24:16> RAM2FADR RO      NS         NS         DFA RAM2 Failing Address                          
                                                If DFA_ERR[DC0PERR<1>]=1, this field indicates the
                                                failing RAM2 Address. The failing address is locked
                                                down until the DC0PERR<1> W1C occurs.
                                                For o68: If multiple DC0PERR<0>=1 errors are detected,
                                                then the lsb cluster error information is captured.
 <15:14> NS       RAZ     NS         NS         RESERVED                                          
 <13:0>  RAM1FADR RO      NS         NS         DFA RAM1 Failing Address                          
                                                If DFA_ERR[DC0PERR<0>]=1, this field indicates the
                                                failing RAM1 Address. The failing address is locked
                                                down until the DC0PERR<0> W1C occurs.
                                                For o68: If multiple DC0PERR<0>=1 errors are detected,
                                                then the lsb cluster error information is captured.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DFA_PFC_GCTL = DFA Performance Counter Global Control
 * 
 *  "*FOR INTERNAL USE ONLY*
 *  Description:"
 * 
$DFA_PFC_GCTL   Address=(0x1180037000080)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:29> NS       RAZ     NS         NS         RESERVED                                          
 <28:21> VGID     R/W     0x0        0x0        "Virtual Graph Id#                                
                                                When PMODE=1(per-graph selector), this field is used
                                                to select/monitor only those events which are
                                                associated with this selected VGID(virtual graph ID).
                                                This field is used globally across all four performance
                                                counters.
                                                IMPNOTE: I implemented a global VGID across all 4 performance
                                                counters to save wires/area."
 <20>    PMODE    R/W     0x0        0x0        "Select Mode                                      
                                                0: Events are selected on a per-cluster DTE# (CLNUM/CLDTE)
                                                DFA_PFCx_CTL[CLNUM,CLDTE] specifies the cluster-DTE for
                                                each 1(of 4) performance counters.
                                                1: Events are selected on a per-graph basis (VGID=virtual Graph ID).
                                                NOTE: Only EVSEL=[0...31] can be used in conjunction with PMODE=1.
                                                DFA_PFC_GCTL[VGID] specifies the Virtual graph ID used across
                                                all four performance counters."
 <19:18> EDNODE   R/W     0x0        0x0        Ending DNODE Selector                             
                                                When ENODE=0/1(*DNODE), this field is used to further
                                                specify the Ending DNODE transition sub-type:
                                                0: ALL DNODE sub-types
                                                1: ->D2e (explicit DNODE transition node-arc alone transitions to DNODE)
                                                2: ->D2i (implicit DNODE transition:arc-present triggers transition)
                                                3: ->D1r (rescan DNODE transition)
 <17:15> ENODE    R/W     0x0        0x0        Ending Node Selector                              
                                                When DFA_PFCx_CTL[EVSEL]=Node Transition(31), the ENODE
                                                field is used to select Ending Node, and the SNODE
                                                field is used to select the Starting Node.
                                                0: LDNODE
                                                1: SDNODE
                                                2: LCNODE
                                                3: SCNODE
                                                4: LMNODE
                                                5: SMNODE
                                                6: MONODE
                                                7: RESERVED
 <14:12> SNODE    R/W     0x0        0x0        Starting Node Selector                            
                                                When DFA_PFCx_CTL[EVSEL]=Node Transition(31), the SNODE
                                                field is used to select Starting Node, and the ENODE
                                                field is used to select the Ending Node.
                                                0: LDNODE
                                                1: SDNODE
                                                2: LCNODE
                                                3: SCNODE
                                                4: LMNODE
                                                5: SMNODE
                                                6: MONODE
                                                7: RESERVED
 <11>    CNT3RCLR R/W     0x0        0x0        "Performance Counter #3 Read Clear                
                                                If this bit is set, CSR reads to the DFA_PFC3_CNT
                                                will clear the count value. This allows SW to maintain
                                                'cumulative' counters to avoid HW wraparound."
 <10>    CNT2RCLR R/W     0x0        0x0        "Performance Counter #2 Read Clear                
                                                If this bit is set, CSR reads to the DFA_PFC2_CNT
                                                will clear the count value. This allows SW to maintain
                                                'cumulative' counters to avoid HW wraparound."
 <9>     CNT1RCLR R/W     0x0        0x0        "Performance Counter #1 Read Clear                
                                                If this bit is set, CSR reads to the DFA_PFC1_CNT
                                                will clear the count value. This allows SW to maintain
                                                'cumulative' counters to avoid HW wraparound."
 <8>     CNT0RCLR R/W     0x0        0x0        "Performance Counter #0 Read Clear                
                                                If this bit is set, CSR reads to the DFA_PFC0_CNT
                                                will clear the count value. This allows SW to maintain
                                                'cumulative' counters to avoid HW wraparound."
 <7>     CNT3WCLR R/W     0x0        0x0        "Performance Counter #3 Write Clear               
                                                If this bit is set, CSR writes to the DFA_PFC3_CNT
                                                will clear the count value.
                                                If this bit is clear, CSR writes to the DFA_PFC3_CNT
                                                will continue the count from the written value."
 <6>     CNT2WCLR R/W     0x0        0x0        "Performance Counter #2 Write Clear               
                                                If this bit is set, CSR writes to the DFA_PFC2_CNT
                                                will clear the count value.
                                                If this bit is clear, CSR writes to the DFA_PFC2_CNT
                                                will continue the count from the written value."
 <5>     CNT1WCLR R/W     0x0        0x0        "Performance Counter #1 Write Clear               
                                                If this bit is set, CSR writes to the DFA_PFC1_CNT
                                                will clear the count value.
                                                If this bit is clear, CSR writes to the DFA_PFC1_CNT
                                                will continue the count from the written value."
 <4>     CNT0WCLR R/W     0x0        0x0        "Performance Counter #0 Write Clear               
                                                If this bit is set, CSR writes to the DFA_PFC0_CNT
                                                will clear the count value.
                                                If this bit is clear, CSR writes to the DFA_PFC0_CNT
                                                will continue the count from the written value."
 <3>     CNT3ENA  R/W     0x0        0x0        "Performance Counter 3 Enable                     
                                                When this bit is set, the performance counter #3
                                                is enabled."
 <2>     CNT2ENA  R/W     0x0        0x0        "Performance Counter 2 Enable                     
                                                When this bit is set, the performance counter #2
                                                is enabled."
 <1>     CNT1ENA  R/W     0x0        0x0        "Performance Counter 1 Enable                     
                                                When this bit is set, the performance counter #1
                                                is enabled."
 <0>     CNT0ENA  R/W     0x0        0x0        "Performance Counter 0 Enable                     
                                                When this bit is set, the performance counter #0
                                                is enabled."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DFA_PFC0_CTL = DFA Performance Counter#0 Control
 * 
 *  "*FOR INTERNAL USE ONLY*
 *  Description:"
 * 
$DFA_PFC0_CTL   Address=(0x1180037000088)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:14> NS    RAZ     NS         NS         RESERVED                                          
 <13:8>  EVSEL R/W     NS         NS         "Performance Counter#0 Event Selector             
                                             // Events [0-31] are based on PMODE(0:per cluster-DTE 1:per graph)
                                             0:  #Total Cycles
                                             1:  #LDNODE visits
                                             2:  #SDNODE visits
                                             3:  #DNODE visits (LD/SD)
                                             4:  #LCNODE visits
                                             5:  #SCNODE visits
                                             6:  #CNODE visits (LC/SC)
                                             7:  #LMNODE visits
                                             8:  #SMNODE visits
                                             9:  #MNODE visits (LM/SM)
                                             10: #MONODE visits
                                             11: #CACHE visits (DNODE,CNODE) exc: CNDRD,MPHIDX
                                             12: #CACHE visits (DNODE,CNODE)+(CNDRD,MPHIDX)
                                             13: #MEMORY visits (MNODE+MONODE)
                                             14: #CNDRDs detected (occur for SCNODE->*MNODE transitions)
                                             15: #MPHIDX detected (occur for ->LMNODE transitions)
                                             16: #RESCANs detected (occur when HASH collision is detected)
                                             17: #GWALK iterations STALLED - Packet data/Result Buffer
                                             18: #GWALK iterations NON-STALLED
                                             19: #CLOAD iterations
                                             20: #MLOAD iterations
                                             [NOTE: If PMODE=1(per-graph) the MLOAD IWORD0.VGID will be used to discern graph#].
                                             21: #RWORD1+ writes
                                             22: #cycles Cluster is busy
                                             23: #GWALK Instructions
                                             24: #CLOAD Instructions
                                             25: #MLOAD Instructions
                                             [NOTE: If PMODE=1(per-graph) the MLOAD IWORD0.VGID will be used to discern graph#].
                                             26: #GFREE Instructions
                                             27-30: RESERVED
                                             31: # Node Transitions detected (see DFA_PFC_GCTL[SNODE,ENODE,EDNODE] registers
                                             //=============================================================
                                             // Events [32-63] are used ONLY FOR PMODE=0(per-cluster DTE mode):
                                             32: #cycles a specific cluster-DTE remains active(valid state)
                                             33: #cycles a specific cluster-DTE waits for Memory Response Data
                                             34: #cycles a specific cluster-DTE waits in resource stall state
                                             (waiting for packet data or result buffer space)
                                             35: #cycles a specific cluster-DTE waits in resource pending state
                                             36-63: RESERVED
                                             //============================================================="
 <7:6>   NS    RAZ     NS         NS         RESERVED                                          
 <5:2>   CLDTE R/W     0x0        0x0        "Performance Counter#0 Cluster DTE Selector       
                                             When DFA_PFC_GCTL[PMODE]=0 (per-cluster DTE), this field
                                             is used to select/monitor the cluster's DTE# for all events
                                             associated with Performance Counter#0."
 <1:0>   CLNUM R/W     0x0        0x0        "Performance Counter#0 Cluster Selector           
                                             When DFA_PFC_GCTL[PMODE]=0 (per-cluster DTE), this field
                                             is used to select/monitor the cluster# for all events
                                             associated with Performance Counter#0."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DFA_PFC0_CNT = DFA Performance Counter #0
 * 
 *  "*FOR INTERNAL USE ONLY*
 *  Description:"
 * 
$DFA_PFC0_CNT   Address=(0x1180037000090)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  PFCNT0 R/W/H   0x0        NS         "Performance Counter #0                           
                                              When DFA_PFC_GCTL[CNT0ENA]=1, the event selected
                                              by DFA_PFC0_CTL[EVSEL] is counted.
                                              See also DFA_PFC_GCTL[CNT0WCLR] and DFA_PFC_GCTL
                                              [CNT0RCLR] for special clear count cases available
                                              for SW data collection."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DFA_PFC1_CTL = DFA Performance Counter#1 Control
 * 
 *  "*FOR INTERNAL USE ONLY*
 *  Description:"
 * 
$DFA_PFC1_CTL   Address=(0x1180037000098)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:14> NS    RAZ     NS         NS         RESERVED                                          
 <13:8>  EVSEL R/W     NS         NS         "Performance Counter#1 Event Selector             
                                             0:  #Cycles
                                             1:  #LDNODE visits
                                             2:  #SDNODE visits
                                             3:  #DNODE visits (LD/SD)
                                             4:  #LCNODE visits
                                             5:  #SCNODE visits
                                             6:  #CNODE visits (LC/SC)
                                             7:  #LMNODE visits
                                             8:  #SMNODE visits
                                             9:  #MNODE visits (LM/SM)
                                             10: #MONODE visits
                                             11: #CACHE visits (DNODE,CNODE) exc: CNDRD,MPHIDX
                                             12: #CACHE visits (DNODE,CNODE)+(CNDRD,MPHIDX)
                                             13: #MEMORY visits (MNODE+MONODE)
                                             14: #CNDRDs detected (occur for SCNODE->*MNODE transitions)
                                             15: #MPHIDX detected (occur for ->LMNODE transitions)
                                             16: #RESCANs detected (occur when HASH collision is detected)
                                             17: #GWALK STALLs detected - Packet data/Result Buffer
                                             18: #GWALK DTE cycles (all DTE-GNT[3a])
                                             19: #CLOAD DTE cycles
                                             20: #MLOAD DTE cycles
                                             21: #cycles waiting for Memory Response Data
                                             22: #cycles waiting in resource stall state (waiting for packet data or result buffer
                                             space)
                                             23: #cycles waiting in resource pending state
                                             24: #RWORD1+ writes
                                             25: #DTE-VLD cycles
                                             26: #DTE Transitions detected (see DFA_PFC_GCTL[SNODE,ENODE] registers
                                             27: #GWALK Instructions
                                             28: #CLOAD Instructions
                                             29: #MLOAD Instructions
                                             30: #GFREE Instructions (== #GFREE DTE cycles)
                                             31: RESERVED
                                             32: #DTE-Busy cycles (ALL DTE-GNT strobes)"
 <7:6>   NS    RAZ     NS         NS         RESERVED                                          
 <5:2>   CLDTE R/W     0x0        0x0        "Performance Counter#1 Cluster DTE Selector       
                                             When DFA_PFC_GCTL[PMODE]=0 (per-cluster DTE), this field
                                             is used to select/monitor the cluster's DTE# for all events
                                             associated with Performance Counter#1."
 <1:0>   CLNUM R/W     0x0        0x0        "Performance Counter#1 Cluster Selector           
                                             When DFA_PFC_GCTL[PMODE]=0 (per-cluster DTE), this field
                                             is used to select/monitor the cluster# for all events
                                             associated with Performance Counter#1."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DFA_PFC1_CNT = DFA Performance Counter #1
 * 
 *  "*FOR INTERNAL USE ONLY*
 *  Description:"
 * 
$DFA_PFC1_CNT   Address=(0x11800370000A0)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  PFCNT1 R/W/H   0x0        NS         "Performance Counter #1                           
                                              When DFA_PFC_GCTL[CNT1ENA]=1, the event selected
                                              by DFA_PFC1_CTL[EVSEL] is counted.
                                              See also DFA_PFC_GCTL[CNT1WCLR] and DFA_PFC_GCTL
                                              [CNT1RCLR] for special clear count cases available
                                              for SW data collection."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DFA_PFC2_CTL = DFA Performance Counter#2 Control
 * 
 *  "*FOR INTERNAL USE ONLY*
 *  Description:"
 * 
$DFA_PFC2_CTL   Address=(0x11800370000A8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:14> NS    RAZ     NS         NS         RESERVED                                          
 <13:8>  EVSEL R/W     NS         NS         "Performance Counter#2 Event Selector             
                                             0:  #Cycles
                                             1:  #LDNODE visits
                                             2:  #SDNODE visits
                                             3:  #DNODE visits (LD/SD)
                                             4:  #LCNODE visits
                                             5:  #SCNODE visits
                                             6:  #CNODE visits (LC/SC)
                                             7:  #LMNODE visits
                                             8:  #SMNODE visits
                                             9:  #MNODE visits (LM/SM)
                                             10: #MONODE visits
                                             11: #CACHE visits (DNODE,CNODE) exc: CNDRD,MPHIDX
                                             12: #CACHE visits (DNODE,CNODE)+(CNDRD,MPHIDX)
                                             13: #MEMORY visits (MNODE+MONODE)
                                             14: #CNDRDs detected (occur for SCNODE->*MNODE transitions)
                                             15: #MPHIDX detected (occur for ->LMNODE transitions)
                                             16: #RESCANs detected (occur when HASH collision is detected)
                                             17: #GWALK STALLs detected - Packet data/Result Buffer
                                             18: #GWALK DTE cycles (all DTE-GNT[3a])
                                             19: #CLOAD DTE cycles
                                             20: #MLOAD DTE cycles
                                             21: #cycles waiting for Memory Response Data
                                             22: #cycles waiting in resource stall state (waiting for packet data or result buffer
                                             space)
                                             23: #cycles waiting in resource pending state
                                             24: #RWORD1+ writes
                                             25: #DTE-VLD cycles
                                             26: #DTE Transitions detected (see DFA_PFC_GCTL[SNODE,ENODE] registers
                                             27: #GWALK Instructions
                                             28: #CLOAD Instructions
                                             29: #MLOAD Instructions
                                             30: #GFREE Instructions (== #GFREE DTE cycles)
                                             31: RESERVED
                                             32: #DTE-Busy cycles (ALL DTE-GNT strobes)"
 <7:6>   NS    RAZ     NS         NS         RESERVED                                          
 <5:2>   CLDTE R/W     0x0        0x0        "Performance Counter#2 Cluster DTE Selector       
                                             When DFA_PFC_GCTL[PMODE]=0 (per-cluster DTE), this field
                                             is used to select/monitor the cluster's DTE# for all events
                                             associated with Performance Counter#2."
 <1:0>   CLNUM R/W     0x0        0x0        "Performance Counter#2 Cluster Selector           
                                             When DFA_PFC_GCTL[PMODE]=0 (per-cluster DTE), this field
                                             is used to select/monitor the cluster# for all events
                                             associated with Performance Counter#2."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DFA_PFC2_CNT = DFA Performance Counter #2
 * 
 *  "*FOR INTERNAL USE ONLY*
 *  Description:"
 * 
$DFA_PFC2_CNT   Address=(0x11800370000B0)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  PFCNT2 R/W/H   0x0        NS         "Performance Counter #2                           
                                              When DFA_PFC_GCTL[CNT2ENA]=1, the event selected
                                              by DFA_PFC2_CTL[EVSEL] is counted.
                                              See also DFA_PFC_GCTL[CNT2WCLR] and DFA_PFC_GCTL
                                              [CNT2RCLR] for special clear count cases available
                                              for SW data collection."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DFA_PFC3_CTL = DFA Performance Counter#3 Control
 * 
 *  "*FOR INTERNAL USE ONLY*
 *  Description:"
 * 
$DFA_PFC3_CTL   Address=(0x11800370000B8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:14> NS    RAZ     NS         NS         RESERVED                                          
 <13:8>  EVSEL R/W     NS         NS         "Performance Counter#3 Event Selector             
                                             0:  #Cycles
                                             1:  #LDNODE visits
                                             2:  #SDNODE visits
                                             3:  #DNODE visits (LD/SD)
                                             4:  #LCNODE visits
                                             5:  #SCNODE visits
                                             6:  #CNODE visits (LC/SC)
                                             7:  #LMNODE visits
                                             8:  #SMNODE visits
                                             9:  #MNODE visits (LM/SM)
                                             10: #MONODE visits
                                             11: #CACHE visits (DNODE,CNODE) exc: CNDRD,MPHIDX
                                             12: #CACHE visits (DNODE,CNODE)+(CNDRD,MPHIDX)
                                             13: #MEMORY visits (MNODE+MONODE)
                                             14: #CNDRDs detected (occur for SCNODE->*MNODE transitions)
                                             15: #MPHIDX detected (occur for ->LMNODE transitions)
                                             16: #RESCANs detected (occur when HASH collision is detected)
                                             17: #GWALK STALLs detected - Packet data/Result Buffer
                                             18: #GWALK DTE cycles (all DTE-GNT[3a])
                                             19: #CLOAD DTE cycles
                                             20: #MLOAD DTE cycles
                                             21: #cycles waiting for Memory Response Data
                                             22: #cycles waiting in resource stall state (waiting for packet data or result buffer
                                             space)
                                             23: #cycles waiting in resource pending state
                                             24: #RWORD1+ writes
                                             25: #DTE-VLD cycles
                                             26: #DTE Transitions detected (see DFA_PFC_GCTL[SNODE,ENODE] registers
                                             27: #GWALK Instructions
                                             28: #CLOAD Instructions
                                             29: #MLOAD Instructions
                                             30: #GFREE Instructions (== #GFREE DTE cycles)
                                             31: RESERVED
                                             32: #DTE-Busy cycles (ALL DTE-GNT strobes)"
 <7:6>   NS    RAZ     NS         NS         RESERVED                                          
 <5:2>   CLDTE R/W     0x0        0x0        "Performance Counter#3 Cluster DTE Selector       
                                             When DFA_PFC_GCTL[PMODE]=0 (per-cluster DTE), this field
                                             is used to select/monitor the cluster's DTE# for all events
                                             associated with Performance Counter#3."
 <1:0>   CLNUM R/W     0x0        0x0        "Performance Counter#3 Cluster Selector           
                                             When DFA_PFC_GCTL[PMODE]=0 (per-cluster DTE), this field
                                             is used to select/monitor the cluster# for all events
                                             associated with Performance Counter#3."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DFA_PFC3_CNT = DFA Performance Counter #3
 * 
 *  "*FOR INTERNAL USE ONLY*
 *  Description:"
 * 
$DFA_PFC3_CNT   Address=(0x11800370000C0)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  PFCNT3 R/W/H   0x0        NS         "Performance Counter #3                           
                                              When DFA_PFC_GCTL[CNT3ENA]=1, the event selected
                                              by DFA_PFC3_CTL[EVSEL] is counted.
                                              See also DFA_PFC_GCTL[CNT3WCLR] and DFA_PFC_GCTL
                                              [CNT3RCLR] for special clear count cases available
                                              for SW data collection."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DFA_BIST0 = DFA Bist Status (per-DTC)
 * 
 *  Description:
 * 
$DFA_BIST0   Address=(0x11800370007F0)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     0x0        0x0        RESERVED                                          
 <31:30> NS    RAZ     0x0        0x0        RESERVED                                          
 <29:28> NS    RAZ     0x0        0x0        RESERVED                                          
 <27:25> NS    RAZ     0x0        0x0        RESERVED                                          
 <24>    GFB   RO/H    0x0        0x0        Bist Results for GFB RAM(s) (per-cluster)         
                                             0: GOOD (or bist in progress/never run)
                                             1: BAD
 <23:18> NS    RAZ     0x0        0x0        RESERVED                                          
 <17:16> STX   RO/H    0x0        0x0        Bist Results for STX0 RAM(s)                      
                                             0: GOOD (or bist in progress/never run)
                                             1: BAD
 <15:10> NS    RAZ     0x0        0x0        RESERVED                                          
 <9:8>   DTX   RO/H    0x0        0x0        Bist Results for DTX0 RAM(s)                      
                                             0: GOOD (or bist in progress/never run)
                                             1: BAD
 <7:5>   NS    RAZ     0x0        0x0        RESERVED                                          
 <4>     RDF   RO/H    0x0        0x0        Bist Results for RWB RAM(s) (per-cluster)         
                                             0: GOOD (or bist in progress/never run)
                                             1: BAD
 <3:1>   NS    RAZ     0x0        0x0        RESERVED                                          
 <0>     PDB   RO/H    0x0        0x0        Bist Results for PDB RAM(s) (per-cluster)         
                                             0: GOOD (or bist in progress/never run)
                                             1: BAD
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DFA_BIST1 = DFA Bist Status (Globals)
 * 
 *  Description:
 * 
$DFA_BIST1   Address=(0x11800370007F8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:21> NS      RAZ     0x0        0x0        RESERVED                                          
 <20>    NS      RAZ     0x0        0x0        RESERVED                                          
 <19>    DLC0RAM RO/H    0x0        0x0        DLC0 Bist Results                                 
                                               0: GOOD (or bist in progress/never run)
                                               1: BAD
 <18:13> NS      RAZ     0x0        0x0        RESERVED                                          
 <12>    RAM3    RO/H    0x0        0x0        "Cluster#0 Bist Results for RAM3 RAM              
                                               0: GOOD (or bist in progress/never run)
                                               1: BAD"
 <11>    RAM2    RO/H    0x0        0x0        "Cluster#0 Bist Results for RAM2 RAM              
                                               0: GOOD (or bist in progress/never run)
                                               1: BAD"
 <10>    RAM1    RO/H    0x0        0x0        "Cluster#0 Bist Results for RAM1 RAM              
                                               0: GOOD (or bist in progress/never run)
                                               1: BAD"
 <9>     CRQ     RO/H    0x0        0x0        Bist Results for CRQ RAM                          
                                               0: GOOD (or bist in progress/never run)
                                               1: BAD
 <8>     GUTV    RO/H    0x0        0x0        Bist Results for GUTV RAM                         
                                               0: GOOD (or bist in progress/never run)
                                               1: BAD
 <7:5>   NS      RAZ     0x0        0x0        RESERVED                                          
 <4>     GUTP    RO/H    0x0        0x0        Bist Results for GUTP RAMs                        
                                               0: GOOD (or bist in progress/never run)
                                               1: BAD
 <3>     NCD     RO/H    0x0        0x0        Bist Results for NCD RAM                          
                                               0: GOOD (or bist in progress/never run)
                                               1: BAD
 <2>     GIF     RO/H    0x0        0x0        Bist Results for GIF RAM                          
                                               0: GOOD (or bist in progress/never run)
                                               1: BAD
 <1>     GIB     RO/H    0x0        0x0        Bist Results for GIB RAM                          
                                               0: GOOD (or bist in progress/never run)
                                               1: BAD
 <0>     GFU     RO/H    0x0        0x0        Bist Results for GFU RAM                          
                                               0: GOOD (or bist in progress/never run)
                                               1: BAD
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DFA_DBELL = DFA Doorbell Register
 * 
 *  Description:
 *  NOTE: To write to the DFA_DBELL register, a device would issue an IOBST directed at the DFA
 *  with addr[34:33]=2'b00.
 *  To read the DFA_DBELL register, a device would issue an IOBLD64 directed at the DFA with
 *  addr[34:33]=2'b00.
 *  NOTE: If DFA_CONFIG[DTECLKDIS]=1 (DFA-DTE clocks disabled), reads/writes to the DFA_DBELL
 *  register do not take effect.
 *  NOTE: If FUSE[TBD]="DFA DTE disable" is blown, reads/writes to the DFA_DBELL register do not
 *  take effect.
 * 
$DFA_DBELL   Address=(0x1370000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:20> NS    RAZ     NS         NS         RESERVED                                          
 <19:0>  DBELL R/W/H   0x0        NS         Represents the cumulative total of pending        
                                             DFA instructions which SW has previously written
                                             into the DFA Instruction FIFO (DIF) in main memory.
                                             Each DFA instruction contains a fixed size 32B
                                             instruction word which is executed by the DFA HW.
                                             The DBL register can hold up to 1M-1 (2^20-1)
                                             pending DFA instruction requests.
                                             During a read (by SW), the 'most recent' contents
                                             of the DFA_DBELL register are returned at the time
                                             the NCB-INB bus is driven.
                                             NOTE: Since DFA HW updates this register, its
                                             contents are unpredictable in SW.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DFA_DIFRDPTR = DFA Instruction FIFO (DIF) RDPTR Register
 * 
 *  Description:
 *  NOTE: To write to the DFA_DIFRDPTR register, a device would issue an IOBST directed at the DFA
 *  with addr[34:33]=2'b01.
 *  To read the DFA_DIFRDPTR register, a device would issue an IOBLD64 directed at the DFA with
 *  addr[34:33]=2'b01.
 *  NOTE: If DFA_CONFIG[DTECLKDIS]=1 (DFA-DTE clocks disabled), reads/writes to the DFA_DIFRDPTR
 *  register do not take effect.
 *  NOTE: If FUSE[TBD]="DFA DTE disable" is blown, reads/writes to the DFA_DIFRDPTR register do
 *  not take effect.
 * 
$DFA_DIFRDPTR   Address=(0x1370200000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:40> NS    RAZ     NS         NS         RESERVED                                          
 <39:5>  RDPTR R/W/H   0x0        NS         Represents the 32B-aligned address of the current 
                                             instruction in the DFA Instruction FIFO in main
                                             memory. The RDPTR must be seeded by software at
                                             boot time, and is then maintained thereafter
                                             by DFA HW.
                                             During the seed write (by SW), RDPTR[6:5]=0,
                                             since DFA instruction chunks must be 128B aligned.
                                             During a read (by SW), the 'most recent' contents
                                             of the RDPTR register are returned at the time
                                             the NCB-INB bus is driven.
                                             NOTE: Since DFA HW updates this register, its
                                             contents are unpredictable in SW (unless
                                             its guaranteed that no new DoorBell register
                                             writes have occurred and the DoorBell register is
                                             read as zero).
 <4:0>   NS    RAZ     NS         NS         RESERVED                                          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DFA_DIFCTL = DFA Instruction FIFO (DIF) Control Register
 * 
 *  Description:
 *  NOTE: To write to the DFA_DIFCTL register, a device would issue an IOBST directed at the DFA
 *  with addr[34:32]=3'b110.
 *  To read the DFA_DIFCTL register, a device would issue an IOBLD64 directed at the DFA with
 *  addr[34:32]=3'b110.
 *  NOTE: This register is intended to ONLY be written once (at power-up). Any future writes could
 *  cause the DFA and FPA HW to become unpredictable.
 *  NOTE: If DFA_CONFIG[DTECLKDIS]=1 (DFA-DTE clocks disabled), reads/writes to the DFA_DIFCTL
 *  register do not take effect.
 *  NOTE: If FUSE[TBD]="DFA DTE disable" is blown, reads/writes to the DFA_DIFCTL register do not
 *  take effect.
 *  Attribute: -dv_fc_scratch=ALL.
 * 
$DFA_DIFCTL   Address=(0x1370600000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:26> NS       RAZ     NS         NS         RESERVED                                          
 <25:20> MSEGBASE R/W     0x0        NS         Memory Segmentation Base Address                  
                                                For debug purposes, backdoor accesses to the DFA
                                                memory are supported via NCB-Direct CSR accesses to
                                                the DFA Memory REGION(if addr[34:32]=5. However due
                                                to the existing NCB address decoding scheme, the
                                                address only offers a 4GB extent into the DFA memory
                                                REGION. Therefore, the MSEGBASE CSR field provides
                                                the additional upper memory address bits to allow access
                                                to the full extent of memory (128GB MAX).
                                                For DFA Memory REGION read NCB-Direct CSR accesses, the
                                                38bit L2/DRAM memory byte address is generated as follows:
                                                memaddr[37:0] = {DFA_DIFCTL[MSEGBASE],ncb_addr[31:3],3'b0}
                                                
                                                NOTE: See the upper 6bits of the memory address are sourced
                                                from DFA_DIFCTL[MSEGBASE] CSR field. The lower 4GB address
                                                offset is directly referenced using the NCB address bits during
                                                the reference itself.
                                                NOTE: The DFA_DIFCTL[MSEGBASE] is shared amongst all references.
                                                As such, if multiple PPs are accessing different segments in memory,
                                                their must be a SW mutual exclusive lock during each DFA Memory
                                                REGION access to avoid collisions between PPs using the same MSEGBASE
                                                CSR field.
                                                
                                                NOTE: See also DFA_ERROR[DFANXM] programmable interrupt which is
                                                flagged if SW tries to access non-existent memory space (address hole
                                                or upper unused region of 38bit address space).
 <19:12> DWBCNT   R/W     0x1        NS         "Represents the # of cache lines in the instruction
                                                buffer that may be dirty and should not be
                                                written-back to memory when the instruction
                                                chunk is returned to the Free Page list.
                                                NOTE: Typically SW will want to mark all DFA
                                                Instruction memory returned to the Free Page list
                                                as DWB (Don't WriteBack), therefore SW should
                                                seed this register as:
                                                DFA_DIFCTL[DWBCNT] = (DFA_DIFCTL[SIZE] + 4)/4"
 <11:9>  POOL     R/W     0x0        NS         Represents the 3bit buffer pool-id  used by DFA HW
                                                when the DFA instruction chunk is recycled back
                                                to the Free Page List maintained by the FPA HW
                                                (once the DFA instruction has been issued).
 <8:0>   SIZE     R/W     0x3        NS         "Represents the # of 32B instructions contained   
                                                within each DFA instruction chunk. At Power-on,
                                                SW will seed the SIZE register with a fixed
                                                chunk-size. (Must be at least 3)
                                                DFA HW uses this field to determine the size
                                                of each DFA instruction chunk, in order to:
                                                a) determine when to read the next DFA
                                                instruction chunk pointer which is
                                                written by SW at the end of the current
                                                DFA instruction chunk (see DFA description
                                                of next chunk buffer Ptr for format).
                                                b) determine when a DFA instruction chunk
                                                can be returned to the Free Page List
                                                maintained by the FPA HW."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DFA_MEMHIDAT = DFA NCB-Direct CSR access to DFM Memory Space (High QW)
 * 
 *  Description:
 *  DFA supports NCB-Direct CSR acccesses to DFM Memory space for debug purposes. Unfortunately,
 *  NCB-Direct accesses
 *  are limited to QW-size(64bits), whereas the minimum access granularity for DFM Memory space is
 *  OW(128bits). To
 *  support writes to DFM Memory space, the Hi-QW of data is sourced from the DFA_MEMHIDAT
 *  register. Recall, the
 *  OW(128b) in DDR3 memory space is fixed format:
 *  OWDATA[127:118]: OWECC[9:0] 10bits of in-band OWECC SEC/DED codeword
 *  This can be precomputed/written by SW OR
 *  if DFM_FNTCTL[ECC_WENA]=1, DFM hardware will auto-compute the 10b OWECC and place in the
 *  OWDATA[127:118] before being written to memory.
 *  OWDATA[117:0]:   Memory Data (contains fixed MNODE/MONODE arc formats for use by DTEs(thread
 *  engines).
 *  Or, a user may choose to treat DFM Memory Space as 'scratch pad' in which case the
 *  OWDATA[117:0] may contain user-specified information accessible via NCB-Direct CSR mode
 *  accesses to DFA Memory Space.
 *  NOTE: To write to the DFA_MEMHIDAT register, a device would issue an IOBST directed at the DFA
 *  with addr[34:32]=3'b111.
 *  To read the DFA_MEMHIDAT register, a device would issue an IOBLD64 directed at the DFA with
 *  addr[34:32]=3'b111.
 *  NOTE: If DFA_CONFIG[DTECLKDIS]=1 (DFA-DTE clocks disabled), reads/writes to the DFA_MEMHIDAT
 *  register do not take effect.
 *  NOTE: If FUSE[TBD]="DFA DTE disable" is blown, reads/writes to the DFA_MEMHIDAT register do
 *  not take effect.
 *  NOTE: PLEASE REMOVE DEFINITION FROM o68/o61 HRM
 * 
$DFA_MEMHIDAT   Address=(0x1370700000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  HIDAT R/W     NS         NS         DFA Hi-QW of Write data during NCB-Direct DFM DDR3
                                             Memory accesses.
                                             All DFM DDR3 memory accesses are OW(128b) references,
                                             and since NCB-Direct Mode writes only support QW(64b),
                                             the Hi QW of data must be sourced from a CSR register.
                                             NOTE: This single register is 'shared' for ALL DFM
                                             DDR3 Memory writes.
                                             For o68/o61: This register is UNUSED. Treat as spare bits.
                                             NOTE: PLEASE REMOVE DEFINITION FROM o68/o61 HRM
-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the dpi.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

CSR MAP

+----------------------------+
| DPI_BIST_STATUS            | 0x000 -- 0
+----------------------------+
| DPI_INT_REG                | 0x001 -- 1
+----------------------------+
| DPI_INT_EN                 | 0x002 -- 2
+----------------------------+
| Spare                      | 0x003 -- 3
+----------------------------+
| Spare                      | 0x004 -- 4
|  was DPI_INT_PRTx_EN       |
|  (4 regs)                  | 0x007 -- 7
+----------------------------+
| DPI_CTL                    | 0x008 -- 8
+----------------------------+
| DPI_DMA_CONTROL            | 0x009 -- 9
+----------------------------+
| DPI_REQ_GBL_EN             | 0x00a -- 10
| DPI_REQ_ERR_RSP            | 0x00b -- 10
| DPI_REQ_ERR_RST            | 0x00c -- 10
| DPI_REQ_ERR_RSP_EN         | 0x00d -- 10
| DPI_REQ_ERR_RST_EN         | 0x00e -- 10
+----------------------------+
| DPI_PKT_ERR_RSP            | 0x00f -- 15
+----------------------------+
| DPI_DMA_ENG*_EN            | 0x010 -- 16
|  (6 regs)                  | 0x015 -- 21
+----------------------------+
| Reserved for Expansion     | 0x016 -- 22
|  to 8 DMA Engines          |
|  (2 regs)                  | 0x017 -- 23
+----------------------------+
| Spare                      | 0x018 -- 24
|  (40 regs)                 | 0x03f -- 63
+----------------------------+-------------------------vvvvvvvvvvv
| DPI_DMA*_DBELL             | 0x040 -- 64      mapped to req unit
|  (8 regs)                  | 0x047 -- 71
+----------------------------+
| Reserved for Expansion     | 0x048 -- 72
|  to 16 Req Queues          |
|  (8 regs)                  | 0x04f -- 79
+----------------------------+
| DPI_DMA*_IBUFF_SADDR       | 0x050 -- 80
|  (8 regs)                  | 0x057 -- 87
+----------------------------+
| Reserved for Expansion     | 0x058 -- 88
|  to 16 Req Queues          |
|  (8 regs)                  | 0x05f -- 95
+----------------------------+
| DPI_DMA*_COUNTS            | 0x060 -- 96
|  (8 regs)                  | 0x067 -- 103
+----------------------------+
| Reserved for Expansion     | 0x068 -- 104
|  to 16 Req Queues          |
|  (8 regs)                  | 0x06f -- 111
+----------------------------+
| DPI_DMA*_NADDR             | 0x070 -- 112
|  (8 regs)                  | 0x077 -- 119
+----------------------------+
| Reserved for Expansion     | 0x078 -- 120
|  to 16 Req Queues          |
|  (8 regs)                  | 0x07f -- 127
+----------------------------+
| DPI_DMA*_REQBNK0           | 0x080 -- 128
|  (8 regs)                  | 0x087 -- 135
+----------------------------+
| Reserved for Expansion     | 0x088 -- 136
|  to 16 Req Queues          |
|  (8 regs)                  | 0x08f -- 143
+----------------------------+
| DPI_DMA*_REQBNK1           | 0x090 -- 144
|  (8 regs)                  | 0x097 -- 151
+----------------------------+
| Reserved for Expansion     | 0x098 -- 152
|  to 16 Req Queues          |
|  (8 regs)                  | 0x09f -- 159     mapped to req unit
+----------------------------+-------------------------^^^^^^^^^^^
| Spare                      | 0x0a0 -- 160
|  (96 regs)                 | 0x0ff -- 255
+----------------------------+
| DPI_NCB@_CFG               | 0x100 -- 256
+----------------------------+
| Reserved for Expansion     | 0x101 -- 257
|  to 2 NCB interfaces  |
|  (1 reg)                   |
+----------------------------+
| Spare                      | 0x102 -- 258
|  (4 regs)                  | 0x105 -- 261
+----------------------------+
| DPI_PINT_INFO              | 0x106 -- 262
+----------------------------+
| DPI_REQ_ERR_SKIP_COMP      | 0x107 -- 263
+----------------------------+
| Spare                      | 0x108 -- 264
|  (8 regs)                  | 0x10f -- 271
+----------------------------+
| DPI_ENG*_BUF               | 0x110 -- 272
|  (6 regs)                  | 0x115 -- 277
+----------------------------+
| Reserved for Expansion     | 0x116 -- 278
|  to 8 DMA Engines          |
|  (2 regs)                  | 0x117 -- 279
+----------------------------+
| Spare                      | 0x118 -- 280
|  (8 regs)                  | 0x11f -- 287
+----------------------------+
| DPI_SLI_PRT@_CFG           | 0x120 -- 288
|  (2 regs)                  | 0x121 -- 289
+----------------------------+
| DPI_SLI_PRT@_CFG           | 0x122 -- 290
|  to 4 SLI Ports            |
|  (2 regs)                  | 0x123 -- 291
+----------------------------+
| DPI_SLI_PRT@_ERR           | 0x124 -- 292
|  (2 regs)                  | 0x125 -- 293
+----------------------------+
| DPI_SLI_PRT@_ERR           | 0x126 -- 294
|  to 4 SLI Ports            |
|  (2 regs)                  | 0x127 -- 295
+----------------------------+
| DPI_SLI_PRT@_ERR_INFO      | 0x128 -- 296
|  (2 regs)                  | 0x129 -- 297
+----------------------------+
| DPI_SLI_PRT@_ERR_INFO      | 0x12a -- 298
|  to 4 SLI Ports            |
|  (2 regs)                  | 0x12b -- 299
+----------------------------+
| Spare                      | 0x12c -- 300
|  (4 regs)                  | 0x12f -- 303
+----------------------------+
| DPI_INFO_REG               | 0x130 -- 304
+----------------------------+
| Spare                      | 0x131 -- 305
|  (15 regs)                 | 0x13f -- 319
+----------------------------+
| DPI_DMA*_IFLIGHT           | 0x140 -- 320
|  (8 regs)                  | 0x147 -- 327
+----------------------------+
| Reserved for Expansion     | 0x148 -- 328
|  to 16 Req Queues          |
|  (8 regs)                  | 0x14f -- 335
+----------------------------+
| DPI_DMA*_ERR_RSP_STATUS    | 0x150 -- 336
|  (8 regs)                  | 0x157 -- 343
+----------------------------+
| Reserved for Expansion     | 0x158 -- 344
|  to 16 Req Queues          |
|  (8 regs)                  | 0x15f -- 351
+----------------------------+
| $DPI_DMA_PP*_CNT           | 0x160 -- 352
|  (4 regs)                  | 0x163 -- 355
+----------------------------+
| Reserved for Expansion     | 0x164 -- 356
|  to 64 Req PP's            |
|  (60 regs)                 | 0x19F -- 415
+----------------------------+

Registers higher then 0x10000 are ncb access to MAC functionality
+----------------------------+
| Reserved for Expansion     |
| $DPI__SRIO_FWD_PATH        | 0x10000 -- 4096 + 0
+----------------------------+
| Reserved for Expansion     | 0x10001 -- 4096 + 1
|  for single regs           |
|  (63 regs)                 | 0x1003F -- 4096 + 63
+----------------------------+
| Reserved for Expansion     |
| $DPI_SRIO_RX_BELL          | 0x10040 -- 4096 + 64
|  (64 regs)                 | 0x1007F -- 4096 + 127
+----------------------------+
| Reserved for Expansion     |
| $DPI_SRIO_RX_BELL_SEQ      | 0x10080 -- 4096 + 128
|  (64 regs)                 | 0x100BF -- 4096 + 191
+----------------------------+
 * 
 * DPI_BIST_STATUS
 * 
 *  
 * 
$DPI_BIST_STATUS   Address=(0x1DF0000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:47> NS    RAZ     NS         NS         Reserved.                                         
 <46:0>  BIST  RO      0x0        0x0        BIST Results.                                     
                                             HW sets a bit in BIST for for memory that fails
                                             BIST.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DPI_INT_REG
 * 
 *  
 * 
$DPI_INT_REG   Address=(0x1DF0000000008)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:28> NS         RAZ     NS         NS         Reserved.                                         
 <27>    SPRT3_RST  R/W1C/H 0x0        0x0        DMA instruction was dropped because the source or 
                                                  destination port was in reset.
                                                  this bit is set.
 <26>    SPRT2_RST  R/W1C/H 0x0        0x0        DMA instruction was dropped because the source or 
                                                  destination port was in reset.
                                                  this bit is set.
 <25>    SPRT1_RST  R/W1C/H 0x0        0x0        DMA instruction was dropped because the source or 
                                                  destination port was in reset.
                                                  this bit is set.
 <24>    SPRT0_RST  R/W1C/H 0x0        0x0        DMA instruction was dropped because the source or 
                                                  destination port was in reset.
                                                  this bit is set.
 <23>    NS         RAZ     NS         NS         Reserved.                                         
 <22>    REQ_BADFIL R/W1C/H 0x0        0x0        DMA instruction unexpected fill                   
                                                  Instruction fill when none outstanding.
 <21>    REQ_INULL  R/W1C/H 0x0        0x0        DMA instruction filled with NULL pointer          
                                                  Next pointer was NULL.
 <20>    REQ_ANULL  R/W1C/H 0x0        0x0        DMA instruction filled with bad instruction       
                                                  Fetched instruction word was 0.
 <19>    REQ_UNDFLW R/W1C/H 0x0        0x0        DMA instruction FIFO underflow                    
                                                  DPI tracks outstanding instructions fetches.
                                                  Interrupt will fire when FIFO underflows.
 <18>    REQ_OVRFLW R/W1C/H 0x0        0x0        DMA instruction FIFO overflow                     
                                                  DPI tracks outstanding instructions fetches.
                                                  Interrupt will fire when FIFO overflows.
 <17>    REQ_BADLEN R/W1C/H 0x0        0x0        DMA instruction fetch with length                 
                                                  Interrupt will fire if DPI forms an instruction
                                                  fetch with length of zero.
 <16>    REQ_BADADR R/W1C/H 0x0        0x0        DMA instruction fetch with bad pointer            
                                                  Interrupt will fire if DPI forms an instruction
                                                  fetch to the NULL pointer.
 <15:8>  DMADBO     R/W1C/H 0x0        0x0        DMAx doorbell overflow.                           
                                                  DPI has a 32-bit counter for each request's queue
                                                  outstanding doorbell counts. Interrupt will fire
                                                  if the count overflows.
 <7:2>   NS         RAZ     NS         NS         Reserved.                                         
 <1>     NFOVR      R/W1C/H 0x0        0x0        CSR Fifo Overflow                                 
                                                  DPI can store upto 16 CSR request.  The FIFO will
                                                  overflow if that number is exceeded.
 <0>     NDERR      R/W1C/H 0x0        0x0        NCB Decode Error                                  
                                                  DPI received a NCB transaction on the outbound
                                                  bus to the DPI deviceID, but the command was not
                                                  recognized.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DPI_INT_EN
 * 
 *  
 *  Attribute: -dv_fc_scratch=ALL.
 * 
$DPI_INT_EN   Address=(0x1DF0000000010)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:28> NS         RAZ     NS         NS         Reserved.                                         
 <27>    SPRT3_RST  R/W/H   0x0        0x0        DMA instruction was dropped because the source or 
                                                  destination port was in reset.
                                                  this bit is set.
 <26>    SPRT2_RST  R/W/H   0x0        0x0        DMA instruction was dropped because the source or 
                                                  destination port was in reset.
                                                  this bit is set.
 <25>    SPRT1_RST  R/W/H   0x0        0x0        DMA instruction was dropped because the source or 
                                                  destination port was in reset.
                                                  this bit is set.
 <24>    SPRT0_RST  R/W/H   0x0        0x0        DMA instruction was dropped because the source or 
                                                  destination port was in reset.
                                                  this bit is set.
 <23>    NS         R/W     NS         NS         Reserved.                                         
 <22>    REQ_BADFIL R/W/H   0x0        0x0        DMA instruction unexpected fill                   
 <21>    REQ_INULL  R/W/H   0x0        0x0        DMA instruction filled with NULL pointer          
 <20>    REQ_ANULL  R/W/H   0x0        0x0        DMA instruction filled with bad instruction       
 <19>    REQ_UNDFLW R/W/H   0x0        0x0        DMA instruction FIFO underflow                    
 <18>    REQ_OVRFLW R/W/H   0x0        0x0        DMA instruction FIFO overflow                     
 <17>    REQ_BADLEN R/W/H   0x0        0x0        DMA instruction fetch with length                 
 <16>    REQ_BADADR R/W/H   0x0        0x0        DMA instruction fetch with bad pointer            
 <15:8>  DMADBO     R/W/H   0x0        0x0        DMAx doorbell overflow.                           
 <7:2>   NS         R/W     0x0        0x0        Reserved.                                         
 <1>     NFOVR      R/W     0x0        0x0        CSR Fifo Overflow                                 
 <0>     NDERR      R/W     0x0        0x0        NCB Decode Error                                  
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DPI_CTL
 * 
 *  
 * 
$DPI_CTL   Address=(0x1DF0000000040)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS    RAZ     NS         NS         Reserved.                                         
 <0>     EN    R/W     0x0        0x1        Turns on the DMA and Packet state machines        
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DPI_DMA_CONTROL = DMA Control Register
 * 
 *  Controls operation of the DMA IN/OUT.
 * 
$DPI_DMA_CONTROL   Address=(0x1DF0000000048)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:62> NS          RAZ     NS         NS         Reserved.                                         
 <61>    DICI_MODE   R/W     0x0        NS         DMA Instruction Completion Interrupt Mode         
                                                   turns on mode to increment DPI_DMA_PPx_CNT
                                                   counters.
 <60>    PKT_EN1     R/W     0x0        NS         Enables the 2nd packet interface.                 
                                                   When the packet interface is enabled, engine 4
                                                   is used for packets and is not available for DMA.
                                                   The packet interfaces must be enabled in order.
                                                   When PKT_EN1=1, then PKT_EN=1.
                                                   When PKT_EN1=1, then DMA_ENB<4>=0.
 <59>    FFP_DIS     R/W     0x0        0x0        Force forward progress disable                    
                                                   The DMA engines will compete for shared resources.
                                                   If the HW detects that particular engines are not
                                                   able to make requests to an interface, the HW
                                                   will periodically trade-off throughput for
                                                   fairness.
 <58>    COMMIT_MODE R/W     0x0        0x1        DMA Engine Commit Mode                            
                                                   
                                                   When COMMIT_MODE=0, DPI considers an instruction
                                                   complete when the HW internally generates the
                                                   final write for the current instruction.
                                                   
                                                   When COMMIT_MODE=1, DPI additionally waits for
                                                   the final write to reach the interface coherency
                                                   point to declare the instructions complete.
                                                   
                                                   Please note: when COMMIT_MODE == 0, DPI may not
                                                   follow the HRM ordering rules.
                                                   
                                                   DPI hardware performance may be better with
                                                   COMMIT_MODE == 0 than with COMMIT_MODE == 1 due
                                                   to the relaxed ordering rules.
                                                   
                                                   If the HRM ordering rules are required, set
                                                   COMMIT_MODE == 1.
 <57>    PKT_HP      RO      0x0        0x0        High-Priority Mode for Packet Interface.          
                                                   This mode has been deprecated.
 <56>    PKT_EN      R/W     0x0        NS         Enables 1st the packet interface.                 
                                                   When the packet interface is enabled, engine 5
                                                   is used for packets and is not available for DMA.
                                                   When PKT_EN=1, then DMA_ENB<5>=0.
                                                   When PKT_EN1=1, then PKT_EN=1.
 <55:54> NS          RAZ     NS         NS         Reserved.                                         
 <53:48> DMA_ENB     R/W     0x0        0x3f       DMA engine enable. Enables the operation of the   
                                                   DMA engine. After being enabled an engine should
                                                   not be disabled while processing instructions.
                                                   When PKT_EN=1,  then DMA_ENB<5>=0.
                                                   When PKT_EN1=1, then DMA_ENB<4>=0.
 <47:34> NS          RAZ     NS         NS         Reserved.                                         
 <33>    B0_LEND     R/W     0x0        0x0        When set '1' and the DPI is in the mode to write  
                                                   0 to L2C memory when a DMA is done, the address
                                                   to be written to will be treated as a Little
                                                   Endian address.
 <32>    DWB_DENB    R/W     0x0        0x1        When set '1', DPI will send a value in the DWB    
                                                   field for a free page operation for the memory
                                                   that contained the data.
 <31:23> DWB_ICHK    R/W     0x0        NS         When Instruction Chunks for DMA operations are    
                                                   freed this value is used for the DWB field of the
                                                   operation.
 <22:20> FPA_QUE     R/W     0x0        NS         The FPA queue that the instruction-chunk page will
                                                   be returned to when used.
 <19>    O_ADD1      R/W     0x0        0x1        When set '1' 1 will be added to the SLI_DMA@_CNT  
                                                   DMA counters, if '0' then the number of bytes
                                                   in the dma transfer will be added to the
                                                   SLI_DMA@_CNT count register.
 <18>    O_RO        R/W     0x0        NS         Relaxed Ordering Mode for DMA.                    
 <17>    O_NS        R/W     0x0        NS         Nosnoop For DMA.                                  
 <16:15> O_ES        R/W     0x0        NS         Endian Swap Mode for DMA.                         
 <14>    O_MODE      R/W     0x0        0x1        Select PCI_POINTER MODE to be used.               
                                                   0=DPTR format 1 is used
                                                   use register values for address and pointer
                                                   values for ES, NS, RO
                                                   1=DPTR format 0 is used
                                                   use pointer values for address and register
                                                   values for ES, NS, RO
 <13:0>  NS          RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DPI_REQ_GBL_EN
 * 
 *  
 * 
$DPI_REQ_GBL_EN   Address=(0x1DF0000000050)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:0>   QEN   R/W     0xff       0xff       Indicates which instruction queues are enabled and
                                             can dispatch instructions to a requesting engine.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DPI_REQ_ERR_RSP
 * 
 *  
 * 
$DPI_REQ_ERR_RSP   Address=(0x1DF0000000058)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:0>   QERR  R/W1C/H 0x0        0x0        Indicates which instruction queue received an     
                                             ErrorResponse from the I/O subsystem.
                                             SW must clear the bit before the the cooresponding
                                             instruction queue will continue processing
                                             instructions if DPI_REQ_ERR_RSP_EN[EN] is set.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DPI_REQ_ERR_RST
 * 
 *  
 * 
$DPI_REQ_ERR_RST   Address=(0x1DF0000000060)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:0>   QERR  R/W1C/H 0x0        0x0        Indicates which instruction queue dropped an      
                                             instruction because the source or destination
                                             was in reset.
                                             SW must clear the bit before the the cooresponding
                                             instruction queue will continue processing
                                             instructions if DPI_REQ_ERR_RST_EN[EN] is set.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DPI_REQ_ERR_RSP_EN
 * 
 *  
 * 
$DPI_REQ_ERR_RSP_EN   Address=(0x1DF0000000068)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:0>   EN    R/W     0xff       0xff       Indicates which instruction queues should stop    
                                             dispatching instructions when an  ErrorResponse
                                             is received from the I/O subsystem.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DPI_REQ_ERR_RST_EN
 * 
 *  
 * 
$DPI_REQ_ERR_RST_EN   Address=(0x1DF0000000070)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:0>   EN    R/W     0xff       0xff       Indicates which instruction queues should stop    
                                             dispatching instructions when an instruction
                                             is dropped because the source or destination port
                                             is in reset.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DPI_PKT_ERR_RSP
 * 
 *  
 * 
$DPI_PKT_ERR_RSP   Address=(0x1DF0000000078)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS     RAZ     NS         NS         Reserved.                                         
 <0>     PKTERR R/W1C/H 0x0        0x0        Indicates that an ErrorResponse was received from 
                                              the I/O subsystem.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DPI_DMA_ENG_EN
 * 
 *  
 * 
$DPI_DMA_ENG(0..5)_EN   Address=(0x1DF0000000080+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:0>   QEN   R/W     0xff       0xff       Controls which logical instruction queues can be  
                                             serviced by the DMA engine. Setting QEN==0
                                             effectively disables the engine.
                                             When DPI_DMA_CONTROL[PKT_EN] = 1, then
                                             DPI_DMA_ENG5_EN[QEN] must be zero.
                                             When DPI_DMA_CONTROL[PKT_EN1] = 1, then
                                             DPI_DMA_ENG4_EN[QEN] must be zero.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DPI_DMA_DBELL
 * 
 *  The door bell register for DMA[0..7] queue.
 * 
$DPI_DMA(0..7)_DBELL   Address=(0x1DF0000000200+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:0>  DBELL WO/H    0x0        NS         The value written to this register is added to the
                                             number of 8byte words to be read and processes for
                                             the low priority dma queue.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DPI_DMA_IBUFF_SADDR
 * 
 *  DPI_DMA[0..7]_IBUFF_SADDR = DMA Instruction Buffer Starting Address
 *  The address to start reading Instructions from for DMA[0..7].
 * 
$DPI_DMA(0..7)_IBUFF_SADDR   Address=(0x1DF0000000280+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:62> NS    RAZ     NS         NS         Reserved.                                         
 <61:48> CSIZE R/W     0x40       NS         The size in 8B words of the DMA Instruction Chunk.
                                             This value should only be written at known times
                                             in order to prevent corruption of the instruction
                                             queue.  The minimum CSIZE is 16 (one cacheblock).
 <47:41> NS    RAZ     NS         NS         Reserved.                                         
 <40>    IDLE  RO/H    0x1        NS         DMA Request Queue is IDLE                         
 <39:36> NS    RAZ     NS         NS         Reserved.                                         
 <35:7>  SADDR R/W/H   0x0        NS         The 128 byte aligned starting or chunk address.   
                                             SADDR is address bit 35:7 of the starting
                                             instructions address. When new chunks are fetched
                                             by the HW, SADDR will be updated to reflect the
                                             address of the current chunk.
                                             A write to SADDR resets both the queue's doorbell
                                             (DPI_DMAx_COUNTS[DBELL) and its tail pointer
                                             (DPI_DMAx_NADDR[ADDR]).
 <6:0>   NS    RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DPI_DMA_COUNTS
 * 
 *  DPI_DMA[0..7]_COUNTS = DMA Instruction Counts
 *  Values for determing the number of instructions for DMA[0..7] in the DPI.
 * 
$DPI_DMA(0..7)_COUNTS   Address=(0x1DF0000000300+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:39> NS    RAZ     NS         NS         Reserved.                                         
 <38:32> FCNT  RO/H    0x0        0x0        Number of words in the Instruction FIFO locally   
                                             cached within DPI.
 <31:0>  DBELL RO/H    0x0        0x0        Number of available words of Instructions to read.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DPI_DMA_NADDR
 * 
 *  DPI_DMA[0..7]_NADDR = DMA Next Ichunk Address
 *  Place DPI will read the next Ichunk data from.
 * 
$DPI_DMA(0..7)_NADDR   Address=(0x1DF0000000380+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:36> NS    RAZ     NS         NS         Reserved.                                         
 <35:0>  ADDR  RO/H    0x0        NS         "The next L2C address to read DMA# instructions   
                                             from."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DPI_DMA_REQBNK0
 * 
 *  DPI_DMA[0..7]_REQBNK0 = DMA Request State Bank0
 *  Current contents of the request state machine - bank0
 * 
$DPI_DMA(0..7)_REQBNK0   Address=(0x1DF0000000400+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  STATE RO/H    0x0        NS         State                                             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DPI_DMA_REQBNK1
 * 
 *  DPI_DMA[0..7]_REQBNK1 = DMA Request State Bank1
 *  Current contents of the request state machine - bank1
 * 
$DPI_DMA(0..7)_REQBNK1   Address=(0x1DF0000000480+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  STATE RO/H    0x0        NS         State                                             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DPI_NCB_CFG
 * 
 *  
 * 
$DPI_NCB(0..0)_CFG   Address=(0x1DF0000000800+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  NS    RAZ     NS         NS         Reserved.                                         
 <5:0>   MOLR  R/W     0x20       0x20       Max Outstanding Load Requests                     
                                             Limits the number of oustanding load requests on
                                             the NCB interface.  This value can range from 1
                                             to 32. Setting a value of 0 will halt all read
                                             traffic to the NCB interface.  There are no
                                             restrictions on when this value can be changed.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DPI_PINT_INFO = DPI Packet Interrupt Info
 * 
 *  DPI Packet Interrupt Info.
 * 
$DPI_PINT_INFO   Address=(0x1DF0000000830)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:14> NS    RAZ     NS         NS         Reserved.                                         
 <13:8>  IINFO RO/H    0x0        NS         Packet Instruction Doorbell count overflow info   
 <7:6>   NS    RAZ     NS         NS         Reserved.                                         
 <5:0>   SINFO RO/H    0x0        NS         Packet Scatterlist Doorbell count overflow info   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DPI_REQ_ERR_SKIP_COMP
 * 
 *  
 * 
$DPI_REQ_ERR_SKIP_COMP   Address=(0x1DF0000000838)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:24> NS     RAZ     NS         NS         Reserved.                                         
 <23:16> EN_RST R/W/H   0x0        0x0        Indicates which instruction queue should skip the 
                                              completion  phase once an port reset is
                                              detected as indicated by DPI_REQ_ERR_RST.  All
                                              completions to the effected instruction queue
                                              will be skipped as long as
                                              DPI_REQ_ERR_RSP[QERR<ique>] & EN_RSP<ique> or
                                              DPI_REQ_ERR_RST[QERR<ique>] & EN_RST<ique> are
                                              set.
 <15:8>  NS     RAZ     NS         NS         Reserved.                                         
 <7:0>   EN_RSP R/W/H   0x0        0x0        Indicates which instruction queue should skip the 
                                              completion  phase once an ErrorResponse is
                                              detected as indicated by DPI_REQ_ERR_RSP.  All
                                              completions to the effected instruction queue
                                              will be skipped as long as
                                              DPI_REQ_ERR_RSP[QERR<ique>] & EN_RSP<ique> or
                                              DPI_REQ_ERR_RST[QERR<ique>] & EN_RST<ique> are
                                              set.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DPI_ENG_BUF
 * 
 *  
 * 
$DPI_ENG(0..5)_BUF   Address=(0x1DF0000000880+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:37> NS       RAZ     NS         NS         Reserved.                                         
 <36:32> COMPBLKS RO/H    NS         NS         Computed engine block size                        
 <31:9>  NS       RAZ     NS         NS         Reserved.                                         
 <8:4>   BASE     RO/H    NS         NS         The base address in 512B blocks of the engine fifo
 <3:0>   BLKS     R/W     0x2        NS         The size of the engine fifo                       
                                                Legal values are 0-10.
                                                0  = Engine is disabled
                                                1  = 0.5KB buffer
                                                2  = 1.0KB buffer
                                                3  = 1.5KB buffer
                                                4  = 2.0KB buffer
                                                5  = 2.5KB buffer
                                                6  = 3.0KB buffer
                                                7  = 3.5KB buffer
                                                8  = 4.0KB buffer
                                                9  = 6.0KB buffer
                                                10 = 8.0KB buffer

Notes:
The total amount of storage allocated to the 6 DPI DMA engines (via DPI_ENG*_BUF[BLKS]) must
not exceed 8KB.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DPI_SLI_PRT_CFG
 * 
 *  DPI_SLI_PRTx_CFG = DPI SLI Port Configuration
 *  Configures the Max Read Request Size, Max Paylod Size, and Max Number of SLI Tags in use
 * 
$DPI_SLI_PRT(0..2)_CFG   Address=(0x1DF0000000900+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:25> NS       RAZ     NS         NS         Reserved.                                         
 <24>    HALT     RO/H    0x0        0x0        When set, HALT indicates that the MAC has detected
                                                a reset condition. No further instructions that
                                                reference the MAC from any instruction Q will be
                                                issued until the MAC comes out of reset and HALT
                                                is cleared in SLI_CTL_PORTx[DIS_PORT].
 <23:20> NS       RAZ     NS         NS         Reserved.                                         
 <19:17> NS       RAZ     NS         NS         Reserved.                                         
 <16>    RD_MODE  R/W     0x0        0x0        Read Mode                                         
                                                0=Exact Read Mode
                                                If the port is a PCIe port, the HW reads on a
                                                4B granularity.  In this mode, the HW may break
                                                a given read into 3 operations to satisify
                                                PCIe rules.
                                                If the port is a SRIO port, the HW follows the
                                                SRIO read rules from the SRIO specification and
                                                only issues 32*n, 16, and 8 byte  operations
                                                on the SRIO bus.
                                                1=Block Mode
                                                The HW will read more data than requested in
                                                order to minimize the number of operations
                                                necessary to complete the operation.
                                                The memory region must be memory like.
 <15:14> NS       RAZ     NS         NS         Reserved.                                         
 <13:8>  MOLR     R/W/H   NS         NS         Max Outstanding Load Requests                     
                                                Limits the number of oustanding load requests on
                                                the port by restricting the number of tags
                                                used by the SLI to track load responses.  This
                                                value can range from 1 to 32 depending on the MAC
                                                type and number of lanes.
                                                MAC == PCIe / 4 lanes: Max is 32
                                                MAC == PCIe / 2 lanes: Max is 16
                                                MAC == PCIe / 1 lane:  Max is  8
                                                Reset value is computed based on the MAC config.
                                                Setting MOLR to a value of 0 will halt all read
                                                traffic to the port.  There are no restrictions
                                                on when this value can be changed.
 <7>     MPS_LIM  R/W     0x0        0x0        MAC memory space write requests cannot cross the  
                                                (naturally-aligned) MPS boundary.
                                                When clear, DPI is allowed to issue a MAC memory
                                                space read that crosses the naturally-aligned
                                                boundary of size defined by MPS. (DPI will still
                                                only cross the boundary when it would eliminate a
                                                write by doing so.)
                                                When set, DPI will never issue a MAC memory space
                                                write that crosses the naturally-aligned boundary
                                                of size defined by MPS.
 <6:5>   NS       RAZ     NS         NS         Reserved.                                         
 <4>     MPS      R/W     0x0        0x0        Max Payload Size                                  
                                                0 = 128B
                                                1 = 256B
                                                For PCIe MACs, this MPS size must not exceed
                                                the size selected by PCIE*_CFG030[MPS].
                                                For sRIO MACs, all MPS values are allowed.
 <3>     MRRS_LIM R/W     0x0        0x0        MAC memory space read requests cannot cross the   
                                                (naturally-aligned) MRRS boundary.
                                                When clear, DPI is allowed to issue a MAC memory
                                                space read that crosses the naturally-aligned
                                                boundary of size defined by MRRS. (DPI will still
                                                only cross the boundary when it would eliminate a
                                                read by doing so.)
                                                When set, DPI will never issue a MAC memory space
                                                read that crosses the naturally-aligned boundary
                                                of size defined by MRRS.
 <2>     NS       RAZ     NS         NS         Reserved.                                         
 <1:0>   MRRS     R/W     0x0        0x0        Max Read Request Size                             
                                                0 = 128B
                                                1 = 256B
                                                2 = 512B
                                                3 = 1024B
                                                For PCIe MACs, this MRRS size must not exceed
                                                the size selected by PCIE*_CFG030[MRRS].
                                                For sRIO MACs, this MRRS size must be <= 256B.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DPI_SLI_PRT_ERR
 * 
 *  DPI_SLI_PRTx_ERR = DPI SLI Port Error Info
 *  Logs the Address and Request Queue associated with the reported SLI error response
 * 
$DPI_SLI_PRT(0..2)_ERR   Address=(0x1DF0000000920+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:3>  ADDR  RO/H    0x0        NS         Address of the failed load request.               
                                             Address is locked along with the
                                             DPI_SLI_PRTx_ERR_INFO register.
                                             See the DPI_SLI_PRTx_ERR_INFO[LOCK] description
                                             for further information.
 <2:0>   NS    RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DPI_SLI_PRT_ERR_INFO
 * 
 *  DPI_SLI_PRTx_ERR_INFO = DPI SLI Port Error Info
 *  Logs the Address and Request Queue associated with the reported SLI error response
 * 
$DPI_SLI_PRT(0..2)_ERR_INFO   Address=(0x1DF0000000940+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:9>  NS    RAZ     NS         NS         Reserved.                                         
 <8>     LOCK  RO/H    0x0        NS         DPI_SLI_PRTx_ERR and DPI_SLI_PRTx_ERR_INFO have   
                                             captured and locked contents.
                                             When Octeon first detects an ErrorResponse, the
                                             TYPE, REQQ, and ADDR of the error is saved and an
                                             internal lock state is set so the data associated
                                             with the initial error is perserved.
                                             Subsequent ErrorResponses will optionally raise
                                             an interrupt, but will not modify the TYPE, REQQ,
                                             or ADDR fields until the internal lock state is
                                             cleared.
                                             SW can clear the internal lock state by writting
                                             a '1' to the appropriate bit in either
                                             DPI_REQ_ERR_RSP or DPI_PKT_ERR_RSP depending on
                                             the TYPE field.
                                             Once the internal lock state is cleared,
                                             the next ErrorResponse will set the TYPE, REQQ,
                                             and ADDR for the new transaction.
 <7:5>   NS    RAZ     NS         NS         Reserved.                                         
 <4>     TYPE  RO/H    0x0        NS         Type of transaction that caused the ErrorResponse.
                                             0=DMA Instruction
                                             1=PKT Instruction
                                             Attribute: -exempt_keyword=True.
 <3>     NS    RAZ     NS         NS         Reserved.                                         
 <2:0>   REQQ  RO/H    0x0        NS         Request queue that made the failed load request.  
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DPI_INFO_REG
 * 
 *  
 * 
$DPI_INFO_REG   Address=(0x1DF0000000980)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:4>   FFP   R/W1C/H 0x0        0x0        Force Forward Progress Indicator                  
 <3:2>   NS    RAZ     NS         NS         Reserved.                                         
 <1>     NCB   R/W1C/H 0x0        0x0        NCB Register Access                               
                                             This interrupt will fire in normal operation
                                             when SW reads a DPI register through the NCB
                                             interface.
 <0>     RSL   R/W1C/H 0x0        0x0        RSL Register Access                               
                                             This interrupt will fire in normal operation
                                             when SW reads a DPI register through the RSL
                                             interface.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DPI_DMA_IFLIGHT
 * 
 *  
 * 
$DPI_DMA(0..7)_IFLIGHT   Address=(0x1DF0000000A00+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:3>  NS    RAZ     NS         NS         Reserved.                                         
 <2:0>   CNT   R/W/H   0x6        0x6        The number of instructions from a given queue that
                                             can be inflight to the DMA engines at a time.
                                             Reset value matches the number of DMA engines.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DPI_DMA_ERR_RSP_STATUS
 * 
 *  
 * 
$DPI_DMA(0..7)_ERR_RSP_STATUS   Address=(0x1DF0000000A80+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  NS     RAZ     NS         NS         Reserved.                                         
 <5:0>   STATUS R/W1C/H 0x0        0x0        QUE captures the ErrorResponse status of the last 
                                              6 instructions for each instruction queue.
                                              STATUS<5> represents the status for first
                                              instruction in instruction order while STATUS<0>
                                              represents the last or most recent instruction.
                                              If STATUS<n> is set, then the nth instruction in
                                              the given queue experienced an ErrorResponse.
                                              Otherwise, it completed normally.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DPI_DMA_PP_CNT
 * 
 *  DPI_DMA_PP[0..3]_CNT  = DMA per PP Instr Done Counter
 *  When DMA Instruction Completion Interrupt Mode DPI_DMA_CONTROL.DICI_MODE is enabled, every dma
 *  instruction
 *  that has the WQP=0 and a PTR value of 1..4 will incremrement DPI_DMA_PPx_CNT value-1 counter.
 *  Instructions with WQP=0 and PTR values higher then 0x3F will still send a zero byte write.
 *  Hardware reserves that values 5..63 for future use and will treat them as a PTR of 0 and do
 *  nothing.
 * 
$DPI_DMA_PP(0..3)_CNT   Address=(0x1DF0000000B00+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:0>  CNT   R/W/H   0x0        NS         Counter incremented according to conditions       
                                             described above and decremented by values written
                                             to this field.  A CNT of non zero, will cause
                                             an interrupt in the CIU_SUM1_PP@_IPX register
-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the dtx.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

 * 
 * DTX_MIO_SEL = DTX MIO Select Register
 * 
 *  
 * 
$DTX_MIO_SEL(0..1)   Address=(0x11800FE000000|((0) << 15)|a<<3)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:24> NS    --      0x0        0x0        Reserved.                                         
 <23:0>  VALUE R/W     0x0        0x0        Debug select.  Selects which signals to drive onto low/high 36-bit debug buses.
                                             Attribute: -dv_uvm_cov_val_disable=True.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DTX_MIO_ENA = DTX MIO Data Enable Register
 * 
 *  
 * 
$DTX_MIO_ENA(0..1)   Address=(0x11800FE000020|((0) << 15)|a<<3)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:36> NS    --      0x0        0x0        Reserved.                                         
 <35:0>  ENA   R/W     0x0        0x0        Output enable vector of which bits to drive onto the low/high 36-bit debug buses. Normally
                                             only one block will drive each bit.
                                             Attribute: -dv_uvm_cov_val_disable=True.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DTX_MIO_DAT = DTX MIO Raw Data Register
 * 
 *  
 * 
$DTX_MIO_DAT(0..1)   Address=(0x11800FE000040|((0) << 15)|a<<3)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:36> NS    --      0x0        0x0        Reserved.                                         
 <35:0>  RAW   RO/H    0x0        0x0        Raw debug data captured by the DTX before the ENA is applied. This gives the ability to
                                             peek into blocks during an OCLA capture without OCLA reconfiguration.
                                             Attribute: -dv_uvm_cov_val_disable=True.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DTX_MIO_CTL = DTX MIO Control Register
 * 
 *  
 * 
$DTX_MIO_CTL   Address=(0x11800FE000060)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:5>  NS     --      0x0        0x0        Reserved.                                         
 <4>     ACTIVE R/W     0x0        0x0        Force block's gated clocks on, so that the state of idle signals may be captured.
 <3:2>   NS     --      0x0        0x0        Reserved.                                         
 <1>     ECHOEN R/W     0x0        0x0        Drive debug bus with the value in ENA(0..1) instead of normal block debug data. For
                                              diagnostic use only.
 <0>     SWAP   R/W     0x0        0x0        Swap the high and low 36-bit debug bus outputs.   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DTX_MIO_BCST_RSP = DTX MIO Control Register
 * 
 *  
 * 
$DTX_MIO_BCST_RSP   Address=(0x11800FE000080)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS    --      0x0        0x0        Reserved.                                         
 <0>     ENA   R/W     0x0        0x0        Enable this DTX instance as the responder to DTX Broadcast reads/writes.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DTX_RST_SEL = DTX RST Select Register
 *  This register has the same bit fields as DTX_MIO_SEL(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_SEL(0..1).
 * 
$DTX_RST_SEL(0..1)   Address=(0x11800FE000000|((6) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_RST_ENA = DTX RST Data Enable Register
 *  This register has the same bit fields as DTX_MIO_ENA(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_ENA(0..1).
 * 
$DTX_RST_ENA(0..1)   Address=(0x11800FE000020|((6) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_RST_DAT = DTX RST Raw Data Register
 *  This register has the same bit fields as DTX_MIO_DAT(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_DAT(0..1).
 * 
$DTX_RST_DAT(0..1)   Address=(0x11800FE000040|((6) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_RST_CTL = DTX RST Control Register
 *  This register has the same bit fields as DTX_MIO_CTL.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_CTL.
 * 
$DTX_RST_CTL   Address=(0x11800FE030060)   Bus=(RSL)


 * 
 * DTX_RST_BCST_RSP = DTX RST Control Register
 *  This register has the same bit fields as DTX_MIO_BCST_RSP.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_BCST_RSP.
 * 
$DTX_RST_BCST_RSP   Address=(0x11800FE030080)   Bus=(RSL)


 * 
 * DTX_GMX_SEL = DTX GMX(0..1) Select Register
 *  This register has the same bit fields as DTX_MIO_SEL(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_SEL(0..1).
 * 
$DTX_GMX(0..1)_SEL(0..1)   Address=(0x11800FE000000+((0x08 + (a)*8) << 15)+(b*8))   Bus=(RSL)


 * 
 * DTX_GMX_ENA = DTX GMX(0..1) Data Enable Register
 *  This register has the same bit fields as DTX_MIO_ENA(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_ENA(0..1).
 * 
$DTX_GMX(0..1)_ENA(0..1)   Address=(0x11800FE000020+((0x08 + (a)*8) << 15)+(b*8))   Bus=(RSL)


 * 
 * DTX_GMX_DAT = DTX GMX(0..1) Raw Data Register
 *  This register has the same bit fields as DTX_MIO_DAT(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_DAT(0..1).
 * 
$DTX_GMX(0..1)_DAT(0..1)   Address=(0x11800FE000040+((0x08 + (a)*8) << 15)+(b*8))   Bus=(RSL)


 * 
 * DTX_GMX_CTL = DTX GMX(0..1) Control Register
 *  This register has the same bit fields as DTX_MIO_CTL.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_CTL.
 * 
$DTX_GMX(0..1)_CTL   Address=(0x11800FE000060+((0x08 + (a)*8) << 15))   Bus=(RSL)


 * 
 * DTX_GMX_BCST_RSP = DTX GMX(0..1) Control Register
 *  This register has the same bit fields as DTX_MIO_BCST_RSP.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_BCST_RSP.
 * 
$DTX_GMX(0..1)_BCST_RSP   Address=(0x11800FE000080+((0x08 + (a)*8) << 15))   Bus=(RSL)


 * 
 * DTX_FPA_SEL = DTX FPA Select Register
 *  This register has the same bit fields as DTX_MIO_SEL(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_SEL(0..1).
 * 
$DTX_FPA_SEL(0..1)   Address=(0x11800FE000000|((40) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_FPA_ENA = DTX FPA Data Enable Register
 *  This register has the same bit fields as DTX_MIO_ENA(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_ENA(0..1).
 * 
$DTX_FPA_ENA(0..1)   Address=(0x11800FE000020|((40) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_FPA_DAT = DTX FPA Raw Data Register
 *  This register has the same bit fields as DTX_MIO_DAT(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_DAT(0..1).
 * 
$DTX_FPA_DAT(0..1)   Address=(0x11800FE000040|((40) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_FPA_CTL = DTX FPA Control Register
 *  This register has the same bit fields as DTX_MIO_CTL.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_CTL.
 * 
$DTX_FPA_CTL   Address=(0x11800FE140060)   Bus=(RSL)


 * 
 * DTX_FPA_BCST_RSP = DTX FPA Control Register
 *  This register has the same bit fields as DTX_MIO_BCST_RSP.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_BCST_RSP.
 * 
$DTX_FPA_BCST_RSP   Address=(0x11800FE140080)   Bus=(RSL)


 * 
 * DTX_DFA_SEL = DTX DFA Select Register
 *  This register has the same bit fields as DTX_MIO_SEL(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_SEL(0..1).
 * 
$DTX_DFA_SEL(0..1)   Address=(0x11800FE000000|((55) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_DFA_ENA = DTX DFA Data Enable Register
 *  This register has the same bit fields as DTX_MIO_ENA(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_ENA(0..1).
 * 
$DTX_DFA_ENA(0..1)   Address=(0x11800FE000020|((55) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_DFA_DAT = DTX DFA Raw Data Register
 *  This register has the same bit fields as DTX_MIO_DAT(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_DAT(0..1).
 * 
$DTX_DFA_DAT(0..1)   Address=(0x11800FE000040|((55) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_DFA_CTL = DTX DFA Control Register
 *  This register has the same bit fields as DTX_MIO_CTL.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_CTL.
 * 
$DTX_DFA_CTL   Address=(0x11800FE1B8060)   Bus=(RSL)


 * 
 * DTX_DFA_BCST_RSP = DTX DFA Control Register
 *  This register has the same bit fields as DTX_MIO_BCST_RSP.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_BCST_RSP.
 * 
$DTX_DFA_BCST_RSP   Address=(0x11800FE1B8080)   Bus=(RSL)


 * 
 * DTX_L2C_TAD_SEL = DTX L2C_TAD(0..0) Select Register
 *  This register has the same bit fields as DTX_MIO_SEL(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_SEL(0..1).
 * 
$DTX_L2C_TAD(0..0)_SEL(0..1)   Address=(0x11800FE000000+((0x48 + (a)) << 15)+(b*8))   Bus=(RSL)


 * 
 * DTX_L2C_TAD_ENA = DTX L2C_TAD(0..0) Data Enable Register
 *  This register has the same bit fields as DTX_MIO_ENA(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_ENA(0..1).
 * 
$DTX_L2C_TAD(0..0)_ENA(0..1)   Address=(0x11800FE000020+((0x48 + (a)) << 15)+(b*8))   Bus=(RSL)


 * 
 * DTX_L2C_TAD_DAT = DTX L2C_TAD(0..0) Raw Data Register
 *  This register has the same bit fields as DTX_MIO_DAT(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_DAT(0..1).
 * 
$DTX_L2C_TAD(0..0)_DAT(0..1)   Address=(0x11800FE000040+((0x48 + (a)) << 15)+(b*8))   Bus=(RSL)


 * 
 * DTX_L2C_TAD_CTL = DTX L2C_TAD(0..0) Control Register
 *  This register has the same bit fields as DTX_MIO_CTL.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_CTL.
 * 
$DTX_L2C_TAD(0..0)_CTL   Address=(0x11800FE000060+((0x48 + (a)) << 15))   Bus=(RSL)


 * 
 * DTX_L2C_TAD_BCST_RSP = DTX L2C_TAD(0..0) Control Register
 *  This register has the same bit fields as DTX_MIO_BCST_RSP.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_BCST_RSP.
 * 
$DTX_L2C_TAD(0..0)_BCST_RSP   Address=(0x11800FE000080+((0x48 + (a)) << 15))   Bus=(RSL)


 * 
 * DTX_IPD_SEL = DTX IPD Select Register
 *  This register has the same bit fields as DTX_MIO_SEL(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_SEL(0..1).
 * 
$DTX_IPD_SEL(0..1)   Address=(0x11800FE000000|((79) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_IPD_ENA = DTX IPD Data Enable Register
 *  This register has the same bit fields as DTX_MIO_ENA(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_ENA(0..1).
 * 
$DTX_IPD_ENA(0..1)   Address=(0x11800FE000020|((79) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_IPD_DAT = DTX IPD Raw Data Register
 *  This register has the same bit fields as DTX_MIO_DAT(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_DAT(0..1).
 * 
$DTX_IPD_DAT(0..1)   Address=(0x11800FE000040|((79) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_IPD_CTL = DTX IPD Control Register
 *  This register has the same bit fields as DTX_MIO_CTL.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_CTL.
 * 
$DTX_IPD_CTL   Address=(0x11800FE278060)   Bus=(RSL)


 * 
 * DTX_IPD_BCST_RSP = DTX IPD Control Register
 *  This register has the same bit fields as DTX_MIO_BCST_RSP.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_BCST_RSP.
 * 
$DTX_IPD_BCST_RSP   Address=(0x11800FE278080)   Bus=(RSL)


 * 
 * DTX_PKO_SEL = DTX PKO Select Register
 *  This register has the same bit fields as DTX_MIO_SEL(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_SEL(0..1).
 * 
$DTX_PKO_SEL(0..1)   Address=(0x11800FE000000|((80) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_PKO_ENA = DTX PKO Data Enable Register
 *  This register has the same bit fields as DTX_MIO_ENA(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_ENA(0..1).
 * 
$DTX_PKO_ENA(0..1)   Address=(0x11800FE000020|((80) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_PKO_DAT = DTX PKO Raw Data Register
 *  This register has the same bit fields as DTX_MIO_DAT(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_DAT(0..1).
 * 
$DTX_PKO_DAT(0..1)   Address=(0x11800FE000040|((80) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_PKO_CTL = DTX PKO Control Register
 *  This register has the same bit fields as DTX_MIO_CTL.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_CTL.
 * 
$DTX_PKO_CTL   Address=(0x11800FE280060)   Bus=(RSL)


 * 
 * DTX_PKO_BCST_RSP = DTX PKO Control Register
 *  This register has the same bit fields as DTX_MIO_BCST_RSP.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_BCST_RSP.
 * 
$DTX_PKO_BCST_RSP   Address=(0x11800FE280080)   Bus=(RSL)


 * 
 * DTX_TIM_SEL = DTX TIM Select Register
 *  This register has the same bit fields as DTX_MIO_SEL(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_SEL(0..1).
 * 
$DTX_TIM_SEL(0..1)   Address=(0x11800FE000000|((88) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_TIM_ENA = DTX TIM Data Enable Register
 *  This register has the same bit fields as DTX_MIO_ENA(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_ENA(0..1).
 * 
$DTX_TIM_ENA(0..1)   Address=(0x11800FE000020|((88) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_TIM_DAT = DTX TIM Raw Data Register
 *  This register has the same bit fields as DTX_MIO_DAT(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_DAT(0..1).
 * 
$DTX_TIM_DAT(0..1)   Address=(0x11800FE000040|((88) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_TIM_CTL = DTX TIM Control Register
 *  This register has the same bit fields as DTX_MIO_CTL.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_CTL.
 * 
$DTX_TIM_CTL   Address=(0x11800FE2C0060)   Bus=(RSL)


 * 
 * DTX_TIM_BCST_RSP = DTX TIM Control Register
 *  This register has the same bit fields as DTX_MIO_BCST_RSP.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_BCST_RSP.
 * 
$DTX_TIM_BCST_RSP   Address=(0x11800FE2C0080)   Bus=(RSL)


 * 
 * DTX_L2C_MCI_SEL = DTX L2C_MCI(0..0) Select Register
 *  This register has the same bit fields as DTX_MIO_SEL(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_SEL(0..1).
 * 
$DTX_L2C_MCI(0..0)_SEL(0..1)   Address=(0x11800FE000000+((0x5c + (a)) << 15)+(b*8))   Bus=(RSL)


 * 
 * DTX_L2C_MCI_ENA = DTX L2C_MCI(0..0) Data Enable Register
 *  This register has the same bit fields as DTX_MIO_ENA(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_ENA(0..1).
 * 
$DTX_L2C_MCI(0..0)_ENA(0..1)   Address=(0x11800FE000020+((0x5c + (a)) << 15)+(b*8))   Bus=(RSL)


 * 
 * DTX_L2C_MCI_DAT = DTX L2C_MCI(0..0) Raw Data Register
 *  This register has the same bit fields as DTX_MIO_DAT(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_DAT(0..1).
 * 
$DTX_L2C_MCI(0..0)_DAT(0..1)   Address=(0x11800FE000040+((0x5c + (a)) << 15)+(b*8))   Bus=(RSL)


 * 
 * DTX_L2C_MCI_CTL = DTX L2C_MCI(0..0) Control Register
 *  This register has the same bit fields as DTX_MIO_CTL.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_CTL.
 * 
$DTX_L2C_MCI(0..0)_CTL   Address=(0x11800FE000060+((0x5c + (a)) << 15))   Bus=(RSL)


 * 
 * DTX_L2C_MCI_BCST_RSP = DTX L2C_MCI(0..0) Control Register
 *  This register has the same bit fields as DTX_MIO_BCST_RSP.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_BCST_RSP.
 * 
$DTX_L2C_MCI(0..0)_BCST_RSP   Address=(0x11800FE000080+((0x5c + (a)) << 15))   Bus=(RSL)


 * 
 * DTX_POW_SEL = DTX POW Select Register
 *  This register has the same bit fields as DTX_MIO_SEL(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_SEL(0..1).
 * 
$DTX_POW_SEL(0..1)   Address=(0x11800FE000000|((103) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_POW_ENA = DTX POW Data Enable Register
 *  This register has the same bit fields as DTX_MIO_ENA(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_ENA(0..1).
 * 
$DTX_POW_ENA(0..1)   Address=(0x11800FE000020|((103) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_POW_DAT = DTX POW Raw Data Register
 *  This register has the same bit fields as DTX_MIO_DAT(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_DAT(0..1).
 * 
$DTX_POW_DAT(0..1)   Address=(0x11800FE000040|((103) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_POW_CTL = DTX POW Control Register
 *  This register has the same bit fields as DTX_MIO_CTL.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_CTL.
 * 
$DTX_POW_CTL   Address=(0x11800FE338060)   Bus=(RSL)


 * 
 * DTX_POW_BCST_RSP = DTX POW Control Register
 *  This register has the same bit fields as DTX_MIO_BCST_RSP.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_BCST_RSP.
 * 
$DTX_POW_BCST_RSP   Address=(0x11800FE338080)   Bus=(RSL)


 * 
 * DTX_USBDRD_SEL = DTX USBDRD(0..1) Select Register
 *  This register has the same bit fields as DTX_MIO_SEL(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_SEL(0..1).
 * 
$DTX_USBDRD(0..1)_SEL(0..1)   Address=(0x11800FE000000+((0x68 + (a)) << 15)+(b*8))   Bus=(RSL)


 * 
 * DTX_USBDRD_ENA = DTX USBDRD(0..1) Data Enable Register
 *  This register has the same bit fields as DTX_MIO_ENA(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_ENA(0..1).
 * 
$DTX_USBDRD(0..1)_ENA(0..1)   Address=(0x11800FE000020+((0x68 + (a)) << 15)+(b*8))   Bus=(RSL)


 * 
 * DTX_USBDRD_DAT = DTX USBDRD(0..1) Raw Data Register
 *  This register has the same bit fields as DTX_MIO_DAT(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_DAT(0..1).
 * 
$DTX_USBDRD(0..1)_DAT(0..1)   Address=(0x11800FE000040+((0x68 + (a)) << 15)+(b*8))   Bus=(RSL)


 * 
 * DTX_USBDRD_CTL = DTX USBDRD(0..1) Control Register
 *  This register has the same bit fields as DTX_MIO_CTL.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_CTL.
 * 
$DTX_USBDRD(0..1)_CTL   Address=(0x11800FE000060+((0x68 + (a)) << 15))   Bus=(RSL)


 * 
 * DTX_USBDRD_BCST_RSP = DTX USBDRD(0..1) Control Register
 *  This register has the same bit fields as DTX_MIO_BCST_RSP.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_BCST_RSP.
 * 
$DTX_USBDRD(0..1)_BCST_RSP   Address=(0x11800FE000080+((0x68 + (a)) << 15))   Bus=(RSL)


 * 
 * DTX_SATA_SEL = DTX SATA Select Register
 *  This register has the same bit fields as DTX_MIO_SEL(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_SEL(0..1).
 * 
$DTX_SATA_SEL(0..1)   Address=(0x11800FE000000|((108) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_SATA_ENA = DTX SATA Data Enable Register
 *  This register has the same bit fields as DTX_MIO_ENA(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_ENA(0..1).
 * 
$DTX_SATA_ENA(0..1)   Address=(0x11800FE000020|((108) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_SATA_DAT = DTX SATA Raw Data Register
 *  This register has the same bit fields as DTX_MIO_DAT(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_DAT(0..1).
 * 
$DTX_SATA_DAT(0..1)   Address=(0x11800FE000040|((108) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_SATA_CTL = DTX SATA Control Register
 *  This register has the same bit fields as DTX_MIO_CTL.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_CTL.
 * 
$DTX_SATA_CTL   Address=(0x11800FE360060)   Bus=(RSL)


 * 
 * DTX_SATA_BCST_RSP = DTX SATA Control Register
 *  This register has the same bit fields as DTX_MIO_BCST_RSP.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_BCST_RSP.
 * 
$DTX_SATA_BCST_RSP   Address=(0x11800FE360080)   Bus=(RSL)


 * 
 * DTX_L2C_CBC_SEL = DTX L2C_CBC(0..0) Select Register
 *  This register has the same bit fields as DTX_MIO_SEL(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_SEL(0..1).
 * 
$DTX_L2C_CBC(0..0)_SEL(0..1)   Address=(0x11800FE000000+((0x84 + (a)) << 15)+(b*8))   Bus=(RSL)


 * 
 * DTX_L2C_CBC_ENA = DTX L2C_CBC(0..0) Data Enable Register
 *  This register has the same bit fields as DTX_MIO_ENA(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_ENA(0..1).
 * 
$DTX_L2C_CBC(0..0)_ENA(0..1)   Address=(0x11800FE000020+((0x84 + (a)) << 15)+(b*8))   Bus=(RSL)


 * 
 * DTX_L2C_CBC_DAT = DTX L2C_CBC(0..0) Raw Data Register
 *  This register has the same bit fields as DTX_MIO_DAT(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_DAT(0..1).
 * 
$DTX_L2C_CBC(0..0)_DAT(0..1)   Address=(0x11800FE000040+((0x84 + (a)) << 15)+(b*8))   Bus=(RSL)


 * 
 * DTX_L2C_CBC_CTL = DTX L2C_CBC(0..0) Control Register
 *  This register has the same bit fields as DTX_MIO_CTL.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_CTL.
 * 
$DTX_L2C_CBC(0..0)_CTL   Address=(0x11800FE000060+((0x84 + (a)) << 15))   Bus=(RSL)


 * 
 * DTX_L2C_CBC_BCST_RSP = DTX L2C_CBC(0..0) Control Register
 *  This register has the same bit fields as DTX_MIO_BCST_RSP.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_BCST_RSP.
 * 
$DTX_L2C_CBC(0..0)_BCST_RSP   Address=(0x11800FE000080+((0x84 + (a)) << 15))   Bus=(RSL)


 * 
 * DTX_LMC_SEL = DTX LMC(0..0) Select Register
 *  This register has the same bit fields as DTX_MIO_SEL(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_SEL(0..1).
 * 
$DTX_LMC(0..0)_SEL(0..1)   Address=(0x11800FE000000+((0x88 + (a)) << 15)+(b*8))   Bus=(RSL)


 * 
 * DTX_LMC_ENA = DTX LMC(0..0) Data Enable Register
 *  This register has the same bit fields as DTX_MIO_ENA(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_ENA(0..1).
 * 
$DTX_LMC(0..0)_ENA(0..1)   Address=(0x11800FE000020+((0x88 + (a)) << 15)+(b*8))   Bus=(RSL)


 * 
 * DTX_LMC_DAT = DTX LMC(0..0) Raw Data Register
 *  This register has the same bit fields as DTX_MIO_DAT(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_DAT(0..1).
 * 
$DTX_LMC(0..0)_DAT(0..1)   Address=(0x11800FE000040+((0x88 + (a)) << 15)+(b*8))   Bus=(RSL)


 * 
 * DTX_LMC_CTL = DTX LMC(0..0) Control Register
 *  This register has the same bit fields as DTX_MIO_CTL.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_CTL.
 * 
$DTX_LMC(0..0)_CTL   Address=(0x11800FE000060+((0x88 + (a)) << 15))   Bus=(RSL)


 * 
 * DTX_LMC_BCST_RSP = DTX LMC(0..0) Control Register
 *  This register has the same bit fields as DTX_MIO_BCST_RSP.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_BCST_RSP.
 * 
$DTX_LMC(0..0)_BCST_RSP   Address=(0x11800FE000080+((0x88 + (a)) << 15))   Bus=(RSL)


 * 
 * DTX_PIP_SEL = DTX PIP Select Register
 *  This register has the same bit fields as DTX_MIO_SEL(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_SEL(0..1).
 * 
$DTX_PIP_SEL(0..1)   Address=(0x11800FE000000|((160) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_PIP_ENA = DTX PIP Data Enable Register
 *  This register has the same bit fields as DTX_MIO_ENA(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_ENA(0..1).
 * 
$DTX_PIP_ENA(0..1)   Address=(0x11800FE000020|((160) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_PIP_DAT = DTX PIP Raw Data Register
 *  This register has the same bit fields as DTX_MIO_DAT(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_DAT(0..1).
 * 
$DTX_PIP_DAT(0..1)   Address=(0x11800FE000040|((160) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_PIP_CTL = DTX PIP Control Register
 *  This register has the same bit fields as DTX_MIO_CTL.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_CTL.
 * 
$DTX_PIP_CTL   Address=(0x11800FE500060)   Bus=(RSL)


 * 
 * DTX_PIP_BCST_RSP = DTX PIP Control Register
 *  This register has the same bit fields as DTX_MIO_BCST_RSP.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_BCST_RSP.
 * 
$DTX_PIP_BCST_RSP   Address=(0x11800FE500080)   Bus=(RSL)


 * 
 * DTX_PCS_SEL = DTX PCS(0..1) Select Register
 *  This register has the same bit fields as DTX_MIO_SEL(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_SEL(0..1).
 * 
$DTX_PCS(0..1)_SEL(0..1)   Address=(0x11800FE000000+((0xB0 + (a)*8) << 15)+(b*8))   Bus=(RSL)


 * 
 * DTX_PCS_ENA = DTX PCS(0..1) Data Enable Register
 *  This register has the same bit fields as DTX_MIO_ENA(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_ENA(0..1).
 * 
$DTX_PCS(0..1)_ENA(0..1)   Address=(0x11800FE000020+((0xB0 + (a)*8) << 15)+(b*8))   Bus=(RSL)


 * 
 * DTX_PCS_DAT = DTX PCS(0..1) Raw Data Register
 *  This register has the same bit fields as DTX_MIO_DAT(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_DAT(0..1).
 * 
$DTX_PCS(0..1)_DAT(0..1)   Address=(0x11800FE000040+((0xB0 + (a)*8) << 15)+(b*8))   Bus=(RSL)


 * 
 * DTX_PCS_CTL = DTX PCS(0..1) Control Register
 *  This register has the same bit fields as DTX_MIO_CTL.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_CTL.
 * 
$DTX_PCS(0..1)_CTL   Address=(0x11800FE000060+((0xB0 + (a)*8) << 15))   Bus=(RSL)


 * 
 * DTX_PCS_BCST_RSP = DTX PCS(0..1) Control Register
 *  This register has the same bit fields as DTX_MIO_BCST_RSP.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_BCST_RSP.
 * 
$DTX_PCS(0..1)_BCST_RSP   Address=(0x11800FE000080+((0xB0 + (a)*8) << 15))   Bus=(RSL)


 * 
 * DTX_PEM_SEL = DTX PEM(0..2) Select Register
 *  This register has the same bit fields as DTX_MIO_SEL(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_SEL(0..1).
 * 
$DTX_PEM(0..2)_SEL(0..1)   Address=(0x11800FE000000+((0xC0 + (a)) << 15)+(b*8))   Bus=(RSL)


 * 
 * DTX_PEM_ENA = DTX PEM(0..2) Data Enable Register
 *  This register has the same bit fields as DTX_MIO_ENA(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_ENA(0..1).
 * 
$DTX_PEM(0..2)_ENA(0..1)   Address=(0x11800FE000020+((0xC0 + (a)) << 15)+(b*8))   Bus=(RSL)


 * 
 * DTX_PEM_DAT = DTX PEM(0..2) Raw Data Register
 *  This register has the same bit fields as DTX_MIO_DAT(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_DAT(0..1).
 * 
$DTX_PEM(0..2)_DAT(0..1)   Address=(0x11800FE000040+((0xC0 + (a)) << 15)+(b*8))   Bus=(RSL)


 * 
 * DTX_PEM_CTL = DTX PEM(0..2) Control Register
 *  This register has the same bit fields as DTX_MIO_CTL.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_CTL.
 * 
$DTX_PEM(0..2)_CTL   Address=(0x11800FE000060+((0xC0 + (a)) << 15))   Bus=(RSL)


 * 
 * DTX_PEM_BCST_RSP = DTX PEM(0..2) Control Register
 *  This register has the same bit fields as DTX_MIO_BCST_RSP.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_BCST_RSP.
 * 
$DTX_PEM(0..2)_BCST_RSP   Address=(0x11800FE000080+((0xC0 + (a)) << 15))   Bus=(RSL)


 * 
 * DTX_AGL_SEL = DTX AGL Select Register
 *  This register has the same bit fields as DTX_MIO_SEL(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_SEL(0..1).
 * 
$DTX_AGL_SEL(0..1)   Address=(0x11800FE000000|((224) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_AGL_ENA = DTX AGL Data Enable Register
 *  This register has the same bit fields as DTX_MIO_ENA(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_ENA(0..1).
 * 
$DTX_AGL_ENA(0..1)   Address=(0x11800FE000020|((224) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_AGL_DAT = DTX AGL Raw Data Register
 *  This register has the same bit fields as DTX_MIO_DAT(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_DAT(0..1).
 * 
$DTX_AGL_DAT(0..1)   Address=(0x11800FE000040|((224) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_AGL_CTL = DTX AGL Control Register
 *  This register has the same bit fields as DTX_MIO_CTL.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_CTL.
 * 
$DTX_AGL_CTL   Address=(0x11800FE700060)   Bus=(RSL)


 * 
 * DTX_AGL_BCST_RSP = DTX AGL Control Register
 *  This register has the same bit fields as DTX_MIO_BCST_RSP.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_BCST_RSP.
 * 
$DTX_AGL_BCST_RSP   Address=(0x11800FE700080)   Bus=(RSL)


 * 
 * DTX_IOB_SEL = DTX IOB Select Register
 *  This register has the same bit fields as DTX_MIO_SEL(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_SEL(0..1).
 * 
$DTX_IOB_SEL(0..1)   Address=(0x11800FE000000|((240) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_IOB_ENA = DTX IOB Data Enable Register
 *  This register has the same bit fields as DTX_MIO_ENA(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_ENA(0..1).
 * 
$DTX_IOB_ENA(0..1)   Address=(0x11800FE000020|((240) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_IOB_DAT = DTX IOB Raw Data Register
 *  This register has the same bit fields as DTX_MIO_DAT(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_DAT(0..1).
 * 
$DTX_IOB_DAT(0..1)   Address=(0x11800FE000040|((240) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_IOB_CTL = DTX IOB Control Register
 *  This register has the same bit fields as DTX_MIO_CTL.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_CTL.
 * 
$DTX_IOB_CTL   Address=(0x11800FE780060)   Bus=(RSL)


 * 
 * DTX_IOB_BCST_RSP = DTX IOB Control Register
 *  This register has the same bit fields as DTX_MIO_BCST_RSP.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_BCST_RSP.
 * 
$DTX_IOB_BCST_RSP   Address=(0x11800FE780080)   Bus=(RSL)


 * 
 * DTX_BROADCAST_SEL = DTX BROADCAST Select Register
 * 
 *  
 * 
$DTX_BROADCAST_SEL(0..1)   Address=(0x11800FE7F0000|a<<3)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:24> NS    --      0x0        0x0        Reserved.                                         
 <23:0>  VALUE R/W     0x0        0x0        Debug select.  Selects which signals to drive onto low/high 36-bit debug buses.
                                             Attribute: -dv_uvm_cov_val_disable=True.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DTX_BROADCAST_ENA = DTX BROADCAST Data Enable Register
 * 
 *  
 * 
$DTX_BROADCAST_ENA(0..1)   Address=(0x11800FE7F0020|a<<3)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:36> NS    --      0x0        0x0        Reserved.                                         
 <35:0>  ENA   R/W     0x0        0x0        Output enable vector of which bits to drive onto the low/high 36-bit debug buses. Normally
                                             only one block will drive each bit.
                                             Attribute: -dv_uvm_cov_val_disable=True.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DTX_BROADCAST_CTL = DTX BROADCAST Control Register
 * 
 *  
 * 
$DTX_BROADCAST_CTL   Address=(0x11800FE7F0060)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:5>  NS     --      0x0        0x0        Reserved.                                         
 <4>     ACTIVE R/W     0x0        0x0        Force block's gated clocks on, so that the state of idle signals may be captured.
 <3:2>   NS     --      0x0        0x0        Reserved.                                         
 <1>     ECHOEN R/W     0x0        0x0        Drive debug bus with the value in ENA(0..1) instead of normal block debug data. For
                                              diagnostic use only.
 <0>     SWAP   R/W     0x0        0x0        Swap the high and low 36-bit debug bus outputs.   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * DTX_SLI_SEL = DTX SLI Select Register
 *  This register has the same bit fields as DTX_MIO_SEL(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_SEL(0..1).
 * 
$DTX_SLI_SEL(0..1)   Address=(0x11800FE000000|((287) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_SLI_ENA = DTX SLI Data Enable Register
 *  This register has the same bit fields as DTX_MIO_ENA(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_ENA(0..1).
 * 
$DTX_SLI_ENA(0..1)   Address=(0x11800FE000020|((287) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_SLI_DAT = DTX SLI Raw Data Register
 *  This register has the same bit fields as DTX_MIO_DAT(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_DAT(0..1).
 * 
$DTX_SLI_DAT(0..1)   Address=(0x11800FE000040|((287) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_SLI_CTL = DTX SLI Control Register
 *  This register has the same bit fields as DTX_MIO_CTL.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_CTL.
 * 
$DTX_SLI_CTL   Address=(0x11800FE8F8060)   Bus=(RSL)


 * 
 * DTX_SLI_BCST_RSP = DTX SLI Control Register
 *  This register has the same bit fields as DTX_MIO_BCST_RSP.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_BCST_RSP.
 * 
$DTX_SLI_BCST_RSP   Address=(0x11800FE8F8080)   Bus=(RSL)


 * 
 * DTX_DPI_SEL = DTX DPI Select Register
 *  This register has the same bit fields as DTX_MIO_SEL(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_SEL(0..1).
 * 
$DTX_DPI_SEL(0..1)   Address=(0x11800FE000000|((479) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_DPI_ENA = DTX DPI Data Enable Register
 *  This register has the same bit fields as DTX_MIO_ENA(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_ENA(0..1).
 * 
$DTX_DPI_ENA(0..1)   Address=(0x11800FE000020|((479) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_DPI_DAT = DTX DPI Raw Data Register
 *  This register has the same bit fields as DTX_MIO_DAT(0..1).
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_DAT(0..1).
 * 
$DTX_DPI_DAT(0..1)   Address=(0x11800FE000040|((479) << 15)|a<<3)   Bus=(RSL)


 * 
 * DTX_DPI_CTL = DTX DPI Control Register
 *  This register has the same bit fields as DTX_MIO_CTL.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_CTL.
 * 
$DTX_DPI_CTL   Address=(0x11800FEEF8060)   Bus=(RSL)


 * 
 * DTX_DPI_BCST_RSP = DTX DPI Control Register
 *  This register has the same bit fields as DTX_MIO_BCST_RSP.
 * 
 *  
 *  Attribute: -inherits=DTX_MIO_BCST_RSP.
 * 
$DTX_DPI_BCST_RSP   Address=(0x11800FEEF8080)   Bus=(RSL)


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the fpa.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

 * 
 * FPA_FPF0_MARKS = FPA's Queue 0 Free Page FIFO Read Write Marks
 * 
 *  "The high and low watermark register that determines when we write and read free pages from
 *  L2C
 *  for Queue 0. The value of FPF_RD and FPF_WR should have at least a 33 difference. Recommend
 *  value
 *  is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75)"
 *  Attribute: -dv_fc_scratch=ALL.
 * 
$FPA_FPF0_MARKS   Address=(0x1180028000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:24> NS     RAZ     NS         NS         Reserved.                                         
 <23:12> FPF_WR R/W     0xc4       0x0        When the number of free-page-pointers in a        
                                              queue exceeds this value the FPA will write
                                              32-page-pointers of that queue to DRAM.
                                              The MAX value for this field should be
                                              FPA_FPF0_SIZE[FPF_SIZ]-2.
 <11:0>  FPF_RD R/W     0x40       0x0        When the number of free-page-pointers in a        
                                              queue drops below this value and there are
                                              free-page-pointers in DRAM, the FPA will
                                              read one page (32 pointers) from DRAM.
                                              This maximum value for this field should be
                                              FPA_FPF0_SIZE[FPF_SIZ]-34. The min number
                                              for this would be 16.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * FPA_FPF1_MARKS = FPA's Queue 1 Free Page FIFO Read Write Marks
 * 
 *  "The high and low watermark register that determines when we write and read free pages from
 *  L2C
 *  for Queue 1. The value of FPF_RD and FPF_WR should have at least a 33 difference. Recommend
 *  value
 *  is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75)"
 * 
$FPA_FPF1_MARKS   Address=(0x1180028000008)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:22> NS     RAZ     NS         NS         Reserved.                                         
 <21:11> FPF_WR R/W     0xc4       0x0        When the number of free-page-pointers in a        
                                              queue exceeds this value the FPA will write
                                              32-page-pointers of that queue to DRAM.
                                              The MAX value for this field should be
                                              FPA_FPF1_SIZE[FPF_SIZ]-2.
 <10:0>  FPF_RD R/W     0x40       0x0        When the number of free-page-pointers in a        
                                              queue drops below this value and there are
                                              free-page-pointers in DRAM, the FPA will
                                              read one page (32 pointers) from DRAM.
                                              This maximum value for this field should be
                                              FPA_FPF1_SIZE[FPF_SIZ]-34. The min number
                                              for this would be 16.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * FPA_FPF2_MARKS = FPA's Queue 2 Free Page FIFO Read Write Marks
 * 
 *  "The high and low watermark register that determines when we write and read free pages from
 *  L2C
 *  for Queue 2. The value of FPF_RD and FPF_WR should have at least a 33 difference. Recommend
 *  value
 *  is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75)"
 * 
$FPA_FPF2_MARKS   Address=(0x1180028000010)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:22> NS     RAZ     NS         NS         Reserved.                                         
 <21:11> FPF_WR R/W     0xc4       0x0        When the number of free-page-pointers in a        
                                              queue exceeds this value the FPA will write
                                              32-page-pointers of that queue to DRAM.
                                              The MAX value for this field should be
                                              FPA_FPF2_SIZE[FPF_SIZ]-2.
 <10:0>  FPF_RD R/W     0x40       0x0        When the number of free-page-pointers in a        
                                              queue drops below this value and there are
                                              free-page-pointers in DRAM, the FPA will
                                              read one page (32 pointers) from DRAM.
                                              This maximum value for this field should be
                                              FPA_FPF2_SIZE[FPF_SIZ]-34. The min number
                                              for this would be 16.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * FPA_FPF3_MARKS = FPA's Queue 3 Free Page FIFO Read Write Marks
 * 
 *  "The high and low watermark register that determines when we write and read free pages from
 *  L2C
 *  for Queue 3. The value of FPF_RD and FPF_WR should have at least a 33 difference. Recommend
 *  value
 *  is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75)"
 * 
$FPA_FPF3_MARKS   Address=(0x1180028000018)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:22> NS     RAZ     NS         NS         Reserved.                                         
 <21:11> FPF_WR R/W     0xc4       0x0        When the number of free-page-pointers in a        
                                              queue exceeds this value the FPA will write
                                              32-page-pointers of that queue to DRAM.
                                              The MAX value for this field should be
                                              FPA_FPF3_SIZE[FPF_SIZ]-2.
 <10:0>  FPF_RD R/W     0x40       0x0        When the number of free-page-pointers in a        
                                              queue drops below this value and there are
                                              free-page-pointers in DRAM, the FPA will
                                              read one page (32 pointers) from DRAM.
                                              This maximum value for this field should be
                                              FPA_FPF3_SIZE[FPF_SIZ]-34. The min number
                                              for this would be 16.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * FPA_FPF4_MARKS = FPA's Queue 4 Free Page FIFO Read Write Marks
 * 
 *  "The high and low watermark register that determines when we write and read free pages from
 *  L2C
 *  for Queue 4. The value of FPF_RD and FPF_WR should have at least a 33 difference. Recommend
 *  value
 *  is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75)"
 * 
$FPA_FPF4_MARKS   Address=(0x1180028000020)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:22> NS     RAZ     NS         NS         Reserved.                                         
 <21:11> FPF_WR R/W     0xc4       0x0        When the number of free-page-pointers in a        
                                              queue exceeds this value the FPA will write
                                              32-page-pointers of that queue to DRAM.
                                              The MAX value for this field should be
                                              FPA_FPF4_SIZE[FPF_SIZ]-2.
 <10:0>  FPF_RD R/W     0x40       0x0        When the number of free-page-pointers in a        
                                              queue drops below this value and there are
                                              free-page-pointers in DRAM, the FPA will
                                              read one page (32 pointers) from DRAM.
                                              This maximum value for this field should be
                                              FPA_FPF4_SIZE[FPF_SIZ]-34. The min number
                                              for this would be 16.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * FPA_FPF5_MARKS = FPA's Queue 5 Free Page FIFO Read Write Marks
 * 
 *  "The high and low watermark register that determines when we write and read free pages from
 *  L2C
 *  for Queue 5. The value of FPF_RD and FPF_WR should have at least a 33 difference. Recommend
 *  value
 *  is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75)"
 * 
$FPA_FPF5_MARKS   Address=(0x1180028000028)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:22> NS     RAZ     NS         NS         Reserved.                                         
 <21:11> FPF_WR R/W     0xc4       0x0        When the number of free-page-pointers in a        
                                              queue exceeds this value the FPA will write
                                              32-page-pointers of that queue to DRAM.
                                              The MAX value for this field should be
                                              FPA_FPF5_SIZE[FPF_SIZ]-2.
 <10:0>  FPF_RD R/W     0x40       0x0        When the number of free-page-pointers in a        
                                              queue drops below this value and there are
                                              free-page-pointers in DRAM, the FPA will
                                              read one page (32 pointers) from DRAM.
                                              This maximum value for this field should be
                                              FPA_FPF5_SIZE[FPF_SIZ]-34. The min number
                                              for this would be 16.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * FPA_FPF6_MARKS = FPA's Queue 6 Free Page FIFO Read Write Marks
 * 
 *  "The high and low watermark register that determines when we write and read free pages from
 *  L2C
 *  for Queue 6. The value of FPF_RD and FPF_WR should have at least a 33 difference. Recommend
 *  value
 *  is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75)"
 * 
$FPA_FPF6_MARKS   Address=(0x1180028000030)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:22> NS     RAZ     NS         NS         Reserved.                                         
 <21:11> FPF_WR R/W     0xc4       0x0        When the number of free-page-pointers in a        
                                              queue exceeds this value the FPA will write
                                              32-page-pointers of that queue to DRAM.
                                              The MAX value for this field should be
                                              FPA_FPF6_SIZE[FPF_SIZ]-2.
 <10:0>  FPF_RD R/W     0x40       0x0        When the number of free-page-pointers in a        
                                              queue drops below this value and there are
                                              free-page-pointers in DRAM, the FPA will
                                              read one page (32 pointers) from DRAM.
                                              This maximum value for this field should be
                                              FPA_FPF6_SIZE[FPF_SIZ]-34. The min number
                                              for this would be 16.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * FPA_FPF7_MARKS = FPA's Queue 7 Free Page FIFO Read Write Marks
 * 
 *  "The high and low watermark register that determines when we write and read free pages from
 *  L2C
 *  for Queue 7. The value of FPF_RD and FPF_WR should have at least a 33 difference. Recommend
 *  value
 *  is FPF_RD == (FPA_FPF#_SIZE[FPF_SIZ] * .25) and FPF_WR == (FPA_FPF#_SIZE[FPF_SIZ] * .75)"
 * 
$FPA_FPF7_MARKS   Address=(0x1180028000038)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:22> NS     RAZ     NS         NS         Reserved.                                         
 <21:11> FPF_WR R/W     0xc4       0x0        When the number of free-page-pointers in a        
                                              queue exceeds this value the FPA will write
                                              32-page-pointers of that queue to DRAM.
                                              The MAX value for this field should be
                                              FPA_FPF7_SIZE[FPF_SIZ]-2.
 <10:0>  FPF_RD R/W     0x40       0x0        When the number of free-page-pointers in a        
                                              queue drops below this value and there are
                                              free-page-pointers in DRAM, the FPA will
                                              read one page (32 pointers) from DRAM.
                                              This maximum value for this field should be
                                              FPA_FPF7_SIZE[FPF_SIZ]-34. The min number
                                              for this would be 16.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * FPA_INT_SUM = FPA's Interrupt Summary Register
 * 
 *  Contains the different interrupt summary bits of the FPA.
 * 
$FPA_INT_SUM   Address=(0x1180028000040)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:50> NS       RAZ     NS         NS         Reserved.                                         
 <49>    PADDR_E  R/W1C/H 0x0        0x0        Set when a pointer address does not fall in the   
                                                address range for a pool specified by
                                                FPA_POOL@_START_ADDR and FPA_POOL@_END_ADDR.
 <48:44> NS       RAZ     NS         NS         Reserved.                                         
 <43>    FREE7    R/W1C/H 0x0        0x0        When a pointer for POOL7 is freed bit is set.     
 <42>    FREE6    R/W1C/H 0x0        0x0        When a pointer for POOL6 is freed bit is set.     
 <41>    FREE5    R/W1C/H 0x0        0x0        When a pointer for POOL5 is freed bit is set.     
 <40>    FREE4    R/W1C/H 0x0        0x0        When a pointer for POOL4 is freed bit is set.     
 <39>    FREE3    R/W1C/H 0x0        0x0        When a pointer for POOL3 is freed bit is set.     
 <38>    FREE2    R/W1C/H 0x0        0x0        When a pointer for POOL2 is freed bit is set.     
 <37>    FREE1    R/W1C/H 0x0        0x0        When a pointer for POOL1 is freed bit is set.     
 <36>    FREE0    R/W1C/H 0x0        0x0        When a pointer for POOL0 is freed bit is set.     
 <35>    POOL7TH  R/W1C/H 0x0        0x0        Set when FPA_QUE7_AVAILABLE is equal to           
                                                FPA_POOL7_THRESHOLD[THRESH] and a pointer is
                                                allocated or de-allocated.
 <34>    POOL6TH  R/W1C/H 0x0        0x0        Set when FPA_QUE6_AVAILABLE is equal to           
                                                FPA_POOL6_THRESHOLD[THRESH] and a pointer is
                                                allocated or de-allocated.
 <33>    POOL5TH  R/W1C/H 0x0        0x0        Set when FPA_QUE5_AVAILABLE is equal to           
                                                FPA_POOL5_THRESHOLD[THRESH] and a pointer is
                                                allocated or de-allocated.
 <32>    POOL4TH  R/W1C/H 0x0        0x0        Set when FPA_QUE4_AVAILABLE is equal to           
                                                FPA_POOL4_THRESHOLD[THRESH] and a pointer is
                                                allocated or de-allocated.
 <31>    POOL3TH  R/W1C/H 0x0        0x0        Set when FPA_QUE3_AVAILABLE is equal to           
                                                FPA_POOL3_THRESHOLD[THRESH] and a pointer is
                                                allocated or de-allocated.
 <30>    POOL2TH  R/W1C/H 0x0        0x0        Set when FPA_QUE2_AVAILABLE is equal to           
                                                FPA_POOL2_THRESHOLD[THRESH] and a pointer is
                                                allocated or de-allocated.
 <29>    POOL1TH  R/W1C/H 0x0        0x0        Set when FPA_QUE1_AVAILABLE is equal to           
                                                FPA_POOL1_THRESHOLD[THRESH] and a pointer is
                                                allocated or de-allocated.
 <28>    POOL0TH  R/W1C/H 0x0        0x0        Set when FPA_QUE0_AVAILABLE is equal to           
                                                FPA_POOL`_THRESHOLD[THRESH] and a pointer is
                                                allocated or de-allocated.
 <27>    Q7_PERR  R/W1C/H 0x0        0x0        Set when a Queue0 pointer read from the stack in  
                                                the L2C does not have the FPA owner ship bit set.
 <26>    Q7_COFF  R/W1C/H 0x0        0x0        Set when a Queue0 stack end tag is present and    
                                                the count available is greater than than pointers
                                                present in the FPA.
 <25>    Q7_UND   R/W1C/H 0x0        0x0        Set when a Queue0 page count available goes       
                                                negative.
 <24>    Q6_PERR  R/W1C/H 0x0        0x0        Set when a Queue0 pointer read from the stack in  
                                                the L2C does not have the FPA owner ship bit set.
 <23>    Q6_COFF  R/W1C/H 0x0        0x0        Set when a Queue0 stack end tag is present and    
                                                the count available is greater than than pointers
                                                present in the FPA.
 <22>    Q6_UND   R/W1C/H 0x0        0x0        Set when a Queue0 page count available goes       
                                                negative.
 <21>    Q5_PERR  R/W1C/H 0x0        0x0        Set when a Queue0 pointer read from the stack in  
                                                the L2C does not have the FPA owner ship bit set.
 <20>    Q5_COFF  R/W1C/H 0x0        0x0        Set when a Queue0 stack end tag is present and    
                                                the count available is greater than than pointers
                                                present in the FPA.
 <19>    Q5_UND   R/W1C/H 0x0        0x0        Set when a Queue0 page count available goes       
                                                negative.
 <18>    Q4_PERR  R/W1C/H 0x0        0x0        Set when a Queue0 pointer read from the stack in  
                                                the L2C does not have the FPA owner ship bit set.
 <17>    Q4_COFF  R/W1C/H 0x0        0x0        Set when a Queue0 stack end tag is present and    
                                                the count available is greater than than pointers
                                                present in the FPA.
 <16>    Q4_UND   R/W1C/H 0x0        0x0        Set when a Queue0 page count available goes       
                                                negative.
 <15>    Q3_PERR  R/W1C/H 0x0        0x0        Set when a Queue0 pointer read from the stack in  
                                                the L2C does not have the FPA owner ship bit set.
 <14>    Q3_COFF  R/W1C/H 0x0        0x0        Set when a Queue0 stack end tag is present and    
                                                the count available is greater than than pointers
                                                present in the FPA.
 <13>    Q3_UND   R/W1C/H 0x0        0x0        Set when a Queue0 page count available goes       
                                                negative.
 <12>    Q2_PERR  R/W1C/H 0x0        0x0        Set when a Queue0 pointer read from the stack in  
                                                the L2C does not have the FPA owner ship bit set.
 <11>    Q2_COFF  R/W1C/H 0x0        0x0        Set when a Queue0 stack end tag is present and    
                                                the count available is greater than than pointers
                                                present in the FPA.
 <10>    Q2_UND   R/W1C/H 0x0        0x0        Set when a Queue0 page count available goes       
                                                negative.
 <9>     Q1_PERR  R/W1C/H 0x0        0x0        Set when a Queue0 pointer read from the stack in  
                                                the L2C does not have the FPA owner ship bit set.
 <8>     Q1_COFF  R/W1C/H 0x0        0x0        Set when a Queue0 stack end tag is present and    
                                                the count available is greater than pointers
                                                present in the FPA.
 <7>     Q1_UND   R/W1C/H 0x0        0x0        Set when a Queue0 page count available goes       
                                                negative.
 <6>     Q0_PERR  R/W1C/H 0x0        0x0        Set when a Queue0 pointer read from the stack in  
                                                the L2C does not have the FPA owner ship bit set.
 <5>     Q0_COFF  R/W1C/H 0x0        0x0        Set when a Queue0 stack end tag is present and    
                                                the count available is greater than pointers
                                                present in the FPA.
 <4>     Q0_UND   R/W1C/H 0x0        0x0        Set when a Queue0 page count available goes       
                                                negative.
 <3>     FED1_DBE R/W1C/H 0x0        0x0        Set when a Double Bit Error is detected in FPF1.  
 <2>     FED1_SBE R/W1C/H 0x0        0x0        Set when a Single Bit Error is detected in FPF1.  
 <1>     FED0_DBE R/W1C/H 0x0        0x0        Set when a Double Bit Error is detected in FPF0.  
 <0>     FED0_SBE R/W1C/H 0x0        0x0        Set when a Single Bit Error is detected in FPF0.  
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * FPA_INT_ENB = FPA's Interrupt Enable
 * 
 *  The FPA's interrupt enable register.
 * 
$FPA_INT_ENB   Address=(0x1180028000048)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:50> NS       RAZ     NS         NS         Reserved.                                         
 <49>    PADDR_E  R/W     0x0        0x0        When set (1) and bit 49 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <48:44> RES_44   R/W     0x0        0x0        Reserved.                                         
 <43>    FREE7    R/W     0x0        0x0        When set (1) and bit 43 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <42>    FREE6    R/W     0x0        0x0        When set (1) and bit 42 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <41>    FREE5    R/W     0x0        0x0        When set (1) and bit 41 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <40>    FREE4    R/W     0x0        0x0        When set (1) and bit 40 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <39>    FREE3    R/W     0x0        0x0        When set (1) and bit 39 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <38>    FREE2    R/W     0x0        0x0        When set (1) and bit 38 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <37>    FREE1    R/W     0x0        0x0        When set (1) and bit 37 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <36>    FREE0    R/W     0x0        0x0        When set (1) and bit 36 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <35>    POOL7TH  R/W     0x0        0x0        When set (1) and bit 35 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <34>    POOL6TH  R/W     0x0        0x0        When set (1) and bit 34 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <33>    POOL5TH  R/W     0x0        0x0        When set (1) and bit 33 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <32>    POOL4TH  R/W     0x0        0x0        When set (1) and bit 32 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <31>    POOL3TH  R/W     0x0        0x0        When set (1) and bit 31 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <30>    POOL2TH  R/W     0x0        0x0        When set (1) and bit 30 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <29>    POOL1TH  R/W     0x0        0x0        When set (1) and bit 29 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <28>    POOL0TH  R/W     0x0        0x0        When set (1) and bit 28 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <27>    Q7_PERR  R/W     0x0        0x0        When set (1) and bit 27 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <26>    Q7_COFF  R/W     0x0        0x0        When set (1) and bit 26 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <25>    Q7_UND   R/W     0x0        0x0        When set (1) and bit 25 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <24>    Q6_PERR  R/W     0x0        0x0        When set (1) and bit 24 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <23>    Q6_COFF  R/W     0x0        0x0        When set (1) and bit 23 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <22>    Q6_UND   R/W     0x0        0x0        When set (1) and bit 22 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <21>    Q5_PERR  R/W     0x0        0x0        When set (1) and bit 21 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <20>    Q5_COFF  R/W     0x0        0x0        When set (1) and bit 20 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <19>    Q5_UND   R/W     0x0        0x0        When set (1) and bit 19 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <18>    Q4_PERR  R/W     0x0        0x0        When set (1) and bit 18 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <17>    Q4_COFF  R/W     0x0        0x0        When set (1) and bit 17 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <16>    Q4_UND   R/W     0x0        0x0        When set (1) and bit 16 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <15>    Q3_PERR  R/W     0x0        0x0        When set (1) and bit 15 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <14>    Q3_COFF  R/W     0x0        0x0        When set (1) and bit 14 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <13>    Q3_UND   R/W     0x0        0x0        When set (1) and bit 13 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <12>    Q2_PERR  R/W     0x0        0x0        When set (1) and bit 12 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <11>    Q2_COFF  R/W     0x0        0x0        When set (1) and bit 11 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <10>    Q2_UND   R/W     0x0        0x0        When set (1) and bit 10 of the FPA_INT_SUM        
                                                register is asserted the FPA will assert an
                                                interrupt.
 <9>     Q1_PERR  R/W     0x0        0x0        When set (1) and bit 9 of the FPA_INT_SUM         
                                                register is asserted the FPA will assert an
                                                interrupt.
 <8>     Q1_COFF  R/W     0x0        0x0        When set (1) and bit 8 of the FPA_INT_SUM         
                                                register is asserted the FPA will assert an
                                                interrupt.
 <7>     Q1_UND   R/W     0x0        0x0        When set (1) and bit 7 of the FPA_INT_SUM         
                                                register is asserted the FPA will assert an
                                                interrupt.
 <6>     Q0_PERR  R/W     0x0        0x0        When set (1) and bit 6 of the FPA_INT_SUM         
                                                register is asserted the FPA will assert an
                                                interrupt.
 <5>     Q0_COFF  R/W     0x0        0x0        When set (1) and bit 5 of the FPA_INT_SUM         
                                                register is asserted the FPA will assert an
                                                interrupt.
 <4>     Q0_UND   R/W     0x0        0x0        When set (1) and bit 4 of the FPA_INT_SUM         
                                                register is asserted the FPA will assert an
                                                interrupt.
 <3>     FED1_DBE R/W     0x0        0x0        When set (1) and bit 3 of the FPA_INT_SUM         
                                                register is asserted the FPA will assert an
                                                interrupt.
 <2>     FED1_SBE R/W     0x0        0x0        When set (1) and bit 2 of the FPA_INT_SUM         
                                                register is asserted the FPA will assert an
                                                interrupt.
 <1>     FED0_DBE R/W     0x0        0x0        When set (1) and bit 1 of the FPA_INT_SUM         
                                                register is asserted the FPA will assert an
                                                interrupt.
 <0>     FED0_SBE R/W     0x0        0x0        When set (1) and bit 0 of the FPA_INT_SUM         
                                                register is asserted the FPA will assert an
                                                interrupt.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * FPA_CTL_STATUS = FPA's Control/Status Register
 * 
 *  The FPA's interrupt enable register.
 * 
$FPA_CTL_STATUS   Address=(0x1180028000050)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:21> NS       RAZ     NS         NS         Reserved.                                         
 <20>    FREE_EN  R/W     0x0        0x0        Enables the setting of the INT_SUM_[FREE*] bits.  
 <19>    RET_OFF  R/W     0x0        0x0        When set NCB devices returning pointer will be    
                                                stalled.
 <18>    REQ_OFF  R/W     0x0        0x0        When set NCB devices requesting pointers will be  
                                                stalled.
 <17>    RESET    R/W     0x0        0x0        When set causes a reset of the FPA with the       
 <16>    USE_LDT  R/W     0x0        0x0        When clear '0' the FPA will use LDT to load       
                                                pointers from the L2C.
 <15>    USE_STT  R/W     0x0        0x0        When clear '0' the FPA will use STT to store      
                                                pointers to the L2C.
 <14>    ENB      R/W     0x0        0x0        Must be set to 1 AFTER writing all config registers
                                                and 10 cycles have past. If any of the config
                                                register are written after writing this bit the
                                                FPA may begin to operate incorrectly.
 <13:7>  MEM1_ERR R/W     0x0        0x0        Causes a flip of the ECC bit associated 38:32     
                                                respective to bit 6:0 of this field, for FPF
                                                FIFO 1.
 <6:0>   MEM0_ERR R/W     0x0        0x0        Causes a flip of the ECC bit associated 38:32     
                                                respective to bit 6:0 of this field, for FPF
                                                FIFO 0.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * FPA_FPF0_SIZE = FPA's Queue 0 Free Page FIFO Size
 * 
 *  "The number of page pointers that will be kept local to the FPA for this Queue. FPA Queues are
 *  assigned in order from Queue 0 to Queue 7, though only Queue 0 through Queue x can be used.
 *  The sum of the 8 (0-7) FPA_FPF#_SIZE registers must be limited to 2048."
 * 
$FPA_FPF0_SIZE   Address=(0x1180028000058)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:12> NS      RAZ     NS         NS         Reserved.                                         
 <11:0>  FPF_SIZ R/W/H   0x100      0x0        "The number of entries assigned in the FPA FIFO   
                                               (used to hold page-pointers) for this Queue.
                                               The value of this register must divisable by 2,
                                               and the FPA will ignore bit [0] of this register.
                                               The total of the FPF_SIZ field of the 8 (0-7)
                                               FPA_FPF#_SIZE registers must not exceed 2048.
                                               After writing this field the FPA will need 10
                                               core clock cycles to be ready for operation. The
                                               assignment of location in the FPA FIFO must
                                               start with Queue 0, then 1, 2, etc.
                                               The number of useable entries will be FPF_SIZ-2."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * FPA_FPF_SIZE
 * 
 *  "FPA_FPF@_SIZE = FPA's Queue 1-7 Free Page FIFO Size
 *  The number of page pointers that will be kept local to the FPA for this Queue. FPA Queues are
 *  assigned in order from Queue 0 to Queue 7, though only Queue 0 through Queue x can be used.
 *  The sum of the 8 (0-7) FPA_FPF#_SIZE registers must be limited to 2048."
 *  Attribute: -exempt_natural_alignment=a.
 * 
$FPA_FPF(1..7)_SIZE   Address=(0x1180028000058+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:11> NS      RAZ     NS         NS         Reserved.                                         
 <10:0>  FPF_SIZ R/W/H   0x100      0x0        "The number of entries assigned in the FPA FIFO   
                                               (used to hold page-pointers) for this Queue.
                                               The value of this register must divisable by 2,
                                               and the FPA will ignore bit [0] of this register.
                                               The total of the FPF_SIZ field of the 8 (0-7)
                                               FPA_FPF#_SIZE registers must not exceed 2048.
                                               After writing this field the FPA will need 10
                                               core clock cycles to be ready for operation. The
                                               assignment of location in the FPA FIFO must
                                               start with Queue 0, then 1, 2, etc.
                                               The number of useable entries will be FPF_SIZ-2."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * FPA_QUE_AVAILABLE
 * 
 *  FPA_QUE@_PAGES_AVAILABLE = FPA's Queue 0-7 Free Page Available Register
 *  The number of page pointers that are available in the FPA and local DRAM.
 *  Attribute: -exempt_natural_alignment=a.
 * 
$FPA_QUE(0..7)_AVAILABLE   Address=(0x1180028000098+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:29> NS      RAZ     NS         NS         Reserved.                                         
 <28:0>  QUE_SIZ RO/H    0x0        0x0        The number of free pages available in this Queue. 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * FPA_BIST_STATUS = BIST Status of FPA Memories
 * 
 *  The result of the BIST run on the FPA memories.
 * 
$FPA_BIST_STATUS   Address=(0x11800280000E8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:5>  NS    RAZ     NS         NS         Reserved.                                         
 <4>     FRD   RO      0x0        0x0        fpa_frd  memory bist status.                      
 <3>     FPF0  RO      0x0        0x0        fpa_fpf0 memory bist status.                      
 <2>     FPF1  RO      0x0        0x0        fpa_fpf1 memory bist status.                      
 <1>     FFR   RO      0x0        0x0        fpa_ffr  memory bist status.                      
 <0>     FDR   RO      0x0        0x0        fpa_fdr  memory bist status.                      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * FPA_QUE0_PAGE_INDEX = FPA's Queue0 Page Index
 * 
 *  The present index page for queue 0 of the FPA.
 *  This number reflects the number of pages of pointers that have been written to memory
 *  for this queue.
 * 
$FPA_QUE0_PAGE_INDEX   Address=(0x11800280000F0)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:25> NS     RAZ     NS         NS         Reserved.                                         
 <24:0>  PG_NUM RO/H    0x0        NS         Page number.                                      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * FPA_QUE1_PAGE_INDEX = FPA's Queue1 Page Index
 * 
 *  The present index page for queue 1 of the FPA.
 *  This number reflects the number of pages of pointers that have been written to memory
 *  for this queue.
 * 
$FPA_QUE1_PAGE_INDEX   Address=(0x11800280000F8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:25> NS     RAZ     NS         NS         Reserved.                                         
 <24:0>  PG_NUM RO/H    0x0        NS         Page number.                                      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * FPA_QUE2_PAGE_INDEX = FPA's Queue2 Page Index
 * 
 *  The present index page for queue 2 of the FPA.
 *  This number reflects the number of pages of pointers that have been written to memory
 *  for this queue.
 * 
$FPA_QUE2_PAGE_INDEX   Address=(0x1180028000100)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:25> NS     RAZ     NS         NS         Reserved.                                         
 <24:0>  PG_NUM RO/H    0x0        NS         Page number.                                      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * FPA_QUE3_PAGE_INDEX = FPA's Queue3 Page Index
 * 
 *  The present index page for queue 3 of the FPA.
 *  This number reflects the number of pages of pointers that have been written to memory
 *  for this queue.
 * 
$FPA_QUE3_PAGE_INDEX   Address=(0x1180028000108)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:25> NS     RAZ     NS         NS         Reserved.                                         
 <24:0>  PG_NUM RO/H    0x0        NS         Page number.                                      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * FPA_QUE4_PAGE_INDEX = FPA's Queue4 Page Index
 * 
 *  The present index page for queue 4 of the FPA.
 *  This number reflects the number of pages of pointers that have been written to memory
 *  for this queue.
 * 
$FPA_QUE4_PAGE_INDEX   Address=(0x1180028000110)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:25> NS     RAZ     NS         NS         Reserved.                                         
 <24:0>  PG_NUM RO/H    0x0        NS         Page number.                                      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * FPA_QUE5_PAGE_INDEX = FPA's Queue5 Page Index
 * 
 *  The present index page for queue 5 of the FPA.
 *  This number reflects the number of pages of pointers that have been written to memory
 *  for this queue.
 * 
$FPA_QUE5_PAGE_INDEX   Address=(0x1180028000118)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:25> NS     RAZ     NS         NS         Reserved.                                         
 <24:0>  PG_NUM RO/H    0x0        NS         Page number.                                      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * FPA_QUE6_PAGE_INDEX = FPA's Queue6 Page Index
 * 
 *  The present index page for queue 6 of the FPA.
 *  This number reflects the number of pages of pointers that have been written to memory
 *  for this queue.
 * 
$FPA_QUE6_PAGE_INDEX   Address=(0x1180028000120)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:25> NS     RAZ     NS         NS         Reserved.                                         
 <24:0>  PG_NUM RO/H    0x0        NS         Page number.                                      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * FPA_QUE7_PAGE_INDEX = FPA's Queue7 Page Index
 * 
 *  The present index page for queue 7 of the FPA.
 *  This number reflects the number of pages of pointers that have been written to memory
 *  for this queue.
 * 
$FPA_QUE7_PAGE_INDEX   Address=(0x1180028000128)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:25> NS     RAZ     NS         NS         Reserved.                                         
 <24:0>  PG_NUM RO/H    0x0        NS         Page number.                                      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * FPA_QUE_EXP = FPA's Queue# Expected Page Index
 * 
 *  "When a INT_SUM[PERR#] occurs this will be latched with the expected value.
 *  This is latched on the first error and will not latch again unitl all errors are cleared."
 * 
$FPA_QUE_EXP   Address=(0x1180028000130)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ     NS         NS         Reserved.                                         
 <31:29> NS       RO/H    0x0        0x7        Resered.                                          
 <28:26> EXP_QUE  RO/H    0x0        NS         Expected fpa-queue-number read from memory.       
 <25:0>  EXP_INDX RO/H    0x0        NS         Expected page number read from memory.            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * FPA_QUE_ACT = FPA's Queue# Actual Page Index
 * 
 *  "When a INT_SUM[PERR#] occurs this will be latched with the value read from L2C.
 *  This is latched on the first error and will not latch again unitl all errors are cleared."
 * 
$FPA_QUE_ACT   Address=(0x1180028000138)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ     NS         NS         Reserved.                                         
 <31:29> NS       RO/H    0x0        0x7        Resered.                                          
 <28:26> ACT_QUE  RO/H    0x0        NS         FPA-queue-number read from memory.                
 <25:0>  ACT_INDX RO/H    0x0        NS         Page number read from memory.                     
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * FPA_POOL_THRESHOLD
 * 
 *  FPA_POOL@_THRESHOLD = FPA's Pool 0-7 Threshold
 *  When the value of FPA_QUE@_AVAILABLE is equal to FPA_POOL@_THRESHOLD[THRESH] when a pointer is
 *  allocated
 *  or deallocated, set interrupt FPA_INT_SUM[POOL@TH].
 * 
$FPA_POOL(0..7)_THRESHOLD   Address=(0x1180028000140+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:29> NS     RAZ     NS         NS         Reserved.                                         
 <28:0>  THRESH R/W/H   0x1fffffff 0x0        The Threshold.                                    
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * FPA_POOL_START_ADDR
 * 
 *  FPA_POOL@_START_ADDR = FPA's Pool-@ Starting Addres
 *  Pointers sent to this pool must be equal to or greater than this address.
 *  Attribute: -exempt_natural_alignment=a.
 * 
$FPA_POOL(0..7)_START_ADDR   Address=(0x1180028000258+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:33> NS    RAZ     NS         NS         Reserved.                                         
 <32:0>  ADDR  R/W     0x0        NS         Address<39:7>.                                    
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * FPA_POOL_END_ADDR
 * 
 *  FPA_POOL@_END_ADDR = FPA's Pool-@ Ending Addres
 *  Pointers sent to this pool must be equal to or less than this address.
 *  Attribute: -exempt_natural_alignment=a.
 * 
$FPA_POOL(0..7)_END_ADDR   Address=(0x1180028000358+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:33> NS    RAZ     NS         NS         Reserved.                                         
 <32:0>  ADDR  R/W     0x1ffffffff NS         Address<39:7>.                                    
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * FPA_ADDR_RANGE_ERROR = FPA's Pool Address Range Error Information
 * 
 *  When an address is sent to a pool that does not fall in the start and end address spcified by
 *  FPA_POOL@_START_ADDR and FPA_POOL@_END_ADDR the information related to the failure is captured
 *  here.
 *  In addition FPA_INT_SUM[PADDR_E] will be set and this register will not be updated again till
 *  FPA_INT_SUM[PADDR_E] is cleared.
 * 
$FPA_ADDR_RANGE_ERROR   Address=(0x1180028000458)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:38> NS    RAZ     NS         NS         Reserved.                                         
 <37:33> POOL  RO/H    0x0        NS         Pool address sent to.                             
 <32:0>  ADDR  RO/H    0x0        NS         Failing address.                                  
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * FPA_PACKET_THRESHOLD = FPA's Packet Threshold
 * 
 *  When the value of FPA_QUE0_AVAILABLE[QUE_SIZ] is Less than the value of this register a low
 *  pool count signal is sent to the
 *  PCIe packet instruction engine (to make it stop reading instructions) and to the Packet-
 *  Arbiter informing it to not give grants
 *  to packets MAC with the exception of the PCIe MAC.
 * 
$FPA_PACKET_THRESHOLD   Address=(0x1180028000460)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS     RAZ     NS         NS         Reserved.                                         
 <31:0>  THRESH R/W/H   0x0        0x0        Packet Threshold.                                 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * FPA_WQE_THRESHOLD = FPA's WQE Threshold
 * 
 *  "When the value of FPA_QUE#_AVAILABLE[QUE_SIZ] (# is determined by the value of
 *  IPD_WQE_FPA_QUEUE) is Less than the value of this
 *  register a low pool count signal is sent to the PCIe packet instruction engine (to make it
 *  stop reading instructions) and to the
 *  Packet-Arbiter informing it to not give grants to packets MAC with the exception of the PCIe
 *  MAC."
 * 
$FPA_WQE_THRESHOLD   Address=(0x1180028000468)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS     RAZ     NS         NS         Reserved.                                         
 <31:0>  THRESH R/W/H   0x0        0x0        WQE Threshold.                                    
-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the gmx.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

 * 
 * GMX_INF_MODE_E
 * 
 *  Enumerates the values for GMX(0..1)_INF_MODE[MODE]
 *  Attribute: -width=2.
 * 
$GMX_INF_MODE_E
-----------------------------------------------------------------------------------------------------------------------------------
 Value                  Name     Description    
-----------------------------------------------------------------------------------------------------------------------------------
 0x0                    DISABLED The interface is disabled.
                                 When GMX0 is configured for RXAUI mode, GMX1 must be disabled.
 0x1                    SGMII    The interface is in SGMII mode
 0x2                    QSGMII   The interface is in QSGMII mode
 0x3                    RXAUI    The interface is in RXAUI mode.
                                 When GMX0 is configured for RXAUI mode, GMX1 must be disabled.
                                 This mode is not a valid operating mode for GMX1.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_INT_REG = Interrupt Register
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX(0..3)_INT_REG   Address=(0x1180008000000+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:30> NS        RAZ     NS         NS         Reserved.                                         
 <29>    WOL       R/W1C/H 0x0        0x0        A Wake-on-LAN event has occurred                  
 <28>    HG2CC     R/W1C/H 0x0        0x0        HiGig2 received message CRC or Control char  error
                                                 Set when either CRC8 error detected or when
                                                 a Control Character is found in the message
                                                 bytes after the K.SOM
                                                 NOTE: HG2CC has higher priority than HG2FLD
                                                 i.e. a HiGig2 message that results in HG2CC
                                                 getting set, will never set HG2FLD.
 <27>    HG2FLD    R/W1C/H 0x0        0x0        HiGig2 received message field error, as below     
                                                 1) MSG_TYPE field not 6'b00_0000
                                                 i.e. it is not a FLOW CONTROL message, which
                                                 is the only defined type for HiGig2
                                                 2) FWD_TYPE field not 2'b00 i.e. Link Level msg
                                                 which is the only defined type for HiGig2
                                                 3) FC_OBJECT field is neither 4'b0000 for
                                                 Physical Link nor 4'b0010 for Logical Link.
                                                 Those are the only two defined types in HiGig2
 <26>    UNDAT     R/W1C/H 0x0        0x0        Unexpected Data                                   
                                                 (XAUI Mode only)
 <25>    UNEOP     R/W1C/H 0x0        0x0        Unexpected EOP                                    
                                                 (XAUI Mode only)
 <24>    UNSOP     R/W1C/H 0x0        0x0        Unexpected SOP                                    
                                                 (XAUI Mode only)
 <23>    BAD_TERM  R/W1C/H 0x0        0x0        Frame is terminated by control character other    
                                                 than /T/.  The error propagation control
                                                 character /E/ will be included as part of the
                                                 frame and does not cause a frame termination.
                                                 (XAUI Mode only)
 <22>    BAD_SEQ   R/W1C/H 0x0        0x0        Reserved Sequence Deteted                         
                                                 (XAUI Mode only)
 <21>    REM_FAULT R/W1C/H 0x0        0x0        Remote Fault Sequence Deteted                     
                                                 (XAUI Mode only)
 <20>    LOC_FAULT R/W1C/H 0x0        0x0        Local Fault Sequence Deteted                      
                                                 (XAUI Mode only)
 <19>    PAUSE_DRP R/W1C/H 0x0        0x0        Pause packet was dropped due to full GMX RX FIFO  
 <18:16> NS        RAZ     NS         NS         Reserved.                                         
 <15>    IFGERR    R/W1C/H 0x0        0x0        Interframe Gap Violation                          
                                                 Does not necessarily indicate a failure
                                                 (SGMII/1000Base-X only)
 <14>    COLDET    R/W1C/H 0x0        0x0        Collision Detection                               
                                                 (SGMII/1000Base-X half-duplex only)
 <13>    FALERR    R/W1C/H 0x0        0x0        False carrier error or extend error after slottime
                                                 (SGMII/1000Base-X only)
 <12>    RSVERR    R/W1C/H 0x0        0x0        Reserved opcodes                                  
 <11>    PCTERR    R/W1C/H 0x0        0x0        Bad Preamble / Protocol                           
                                                 In XAUI mode, the column of data that was bad
                                                 will be logged in GMX_RX_XAUI_BAD_COL
 <10>    OVRERR    R/W1C/H 0x0        0x0        Internal Data Aggregation Overflow                
                                                 This interrupt should never assert
                                                 (SGMII/1000Base-X only)
 <9>     NS        RAZ     NS         NS         Reserved.                                         
 <8>     SKPERR    R/W1C/H 0x0        0x0        Skipper error                                     
 <7>     RCVERR    R/W1C/H 0x0        0x0        Frame was received with Data reception error      
 <6:5>   NS        RAZ     NS         NS         Reserved.                                         
 <4>     FCSERR    R/W1C/H 0x0        0x0        Frame was received with FCS/CRC error             
 <3>     JABBER    R/W1C/H 0x0        0x0        Frame was received with length > sys_length       
 <2>     NS        RAZ     NS         NS         Reserved.                                         
 <1>     CAREXT    R/W1C/H 0x0        0x0        Carrier extend error                              
                                                 (SGMII/1000Base-X only)
 <0>     MINERR    R/W1C   0x0        NS         Pause Frame was received with length<minFrameSize 
                                                 Frame length checks are typically handled in PIP
                                                 (PIP_INT_REG[MINERR]), but pause frames are
                                                 normally discarded before being inspected by PIP.

Notes:
(1) exceptions will only be raised to the control processor if the
corresponding bit in the GMX_RX_INT_EN register is set.
(2) exception conditions 10:0 can also set the rcv/opcode in the received
packet's workQ entry.  The GMX_RX_FRM_CHK register provides a bit mask
for configuring which conditions set the error.
(3) in half duplex operation, the expectation is that collisions will appear
as either MINERR o r CAREXT errors.
(4) JABBER An RX Jabber error indicates that a packet was received which
is longer than the maximum allowed packet as defined by the
system.  GMX will truncate the packet at the JABBER count.
Failure to do so could lead to system instabilty.
(5) NIBERR This error is illegal at 1000Mbs speeds
(GMX_RX_PRT_CFG[SPEED]==0) and will never assert.
(6) MAXERR for untagged frames, the total frame DA+SA+TL+DATA+PAD+FCS >
GMX_RX_FRM_MAX.  For tagged frames, DA+SA+VLAN+TL+DATA+PAD+FCS
> GMX_RX_FRM_MAX + 4*VLAN_VAL + 4*VLAN_STACKED.
(7) MINERR total frame DA+SA+TL+DATA+PAD+FCS < 64
(8) ALNERR Indicates that the packet received was not an integer number of
bytes.  If FCS checking is enabled, ALNERR will only assert if
the FCS is bad.  If FCS checking is disabled, ALNERR will
assert in all non-integer frame cases.
(9) Collisions Collisions can only occur in half-duplex mode.  A collision
is assumed by the receiver when the slottime
(GMX_PRT_CFG[SLOTTIME]) is not satisfied.  In 10/100 mode,
this will result in a frame < SLOTTIME.  In 1000 mode, it
could result either in frame < SLOTTIME or a carrier extend
error with the SLOTTIME.  These conditions are visible by...
. transfer ended before slottime COLDET
. carrier extend error           CAREXT
(A) LENERR Length errors occur when the received packet does not match the
length field.  LENERR is only checked for packets between 64
and 1500 bytes.  For untagged frames, the length must exact
match.  For tagged frames the length or length+4 must match.
(B) PCTERR checks that the frame begins with a valid PREAMBLE sequence.
Does not check the number of PREAMBLE cycles.
(C) OVRERR *DON'T PUT IN HRM*
OVRERR is an architectural assertion check internal to GMX to
make sure no assumption was violated.  In a correctly operating
system, this interrupt can never fire.
GMX has an internal arbiter which selects which of 4 ports to
buffer in the main RX FIFO.  If we normally buffer 8 bytes,
then each port will typically push a tick every 8 cycles if
the packet interface is going as fast as possible.  If there
are four ports, they push every two cycles.  So that's the
assumption.  That the inbound module will always be able to
consume the tick before another is produced.  If that doesn't
happen that's when OVRERR will assert.
(D) In XAUI mode prt0 is used for interrupt logging.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_INT_EN = Interrupt Enable
 * 
 *  
 *  Attribute: -dv_fc_scratch=a.
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX(0..3)_INT_EN   Address=(0x1180008000008+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:30> NS        RAZ     NS         NS         Reserved.                                         
 <29>    WOL       R/W/H   0x0        0x0        A Wake-on-LAN event has occurred                  
 <28>    HG2CC     R/W     0x0        0x0        HiGig2 CRC8 or Control char error interrupt enable
 <27>    HG2FLD    R/W     0x0        0x0        HiGig2 Bad field error interrupt enable           
 <26>    UNDAT     R/W     0x0        0x0        Unexpected Data                                   
                                                 (XAUI Mode only)
 <25>    UNEOP     R/W     0x0        0x0        Unexpected EOP                                    
                                                 (XAUI Mode only)
 <24>    UNSOP     R/W     0x0        0x0        Unexpected SOP                                    
                                                 (XAUI Mode only)
 <23>    BAD_TERM  R/W/H   0x0        0x0        Frame is terminated by control character other    
                                                 than /T/.  The error propagation control
                                                 character /E/ will be included as part of the
                                                 frame and does not cause a frame termination.
                                                 (XAUI Mode only)
 <22>    BAD_SEQ   R/W     0x0        0x0        Reserved Sequence Deteted                         
                                                 (XAUI Mode only)
 <21>    REM_FAULT R/W     0x0        0x0        Remote Fault Sequence Deteted                     
                                                 (XAUI Mode only)
 <20>    LOC_FAULT R/W     0x0        0x0        Local Fault Sequence Deteted                      
                                                 (XAUI Mode only)
 <19>    PAUSE_DRP R/W     0x0        0x0        Pause packet was dropped due to full GMX RX FIFO  
 <18:16> NS        RAZ     NS         NS         Reserved.                                         
 <15>    IFGERR    R/W     0x0        0x0        Interframe Gap Violation                          
                                                 (SGMII/1000Base-X only)
 <14>    COLDET    R/W     0x0        0x0        Collision Detection                               
                                                 (SGMII/1000Base-X half-duplex only)
 <13>    FALERR    R/W     0x0        0x0        False carrier error or extend error after slottime
                                                 (SGMII/1000Base-X only)
 <12>    RSVERR    R/W     0x0        0x0        Reserved opcodes                                  
 <11>    PCTERR    R/W     0x0        0x0        Bad Preamble / Protocol                           
 <10>    OVRERR    R/W     0x0        0x0        Internal Data Aggregation Overflow                
                                                 (SGMII/1000Base-X only)
 <9>     NS        RAZ     NS         NS         Reserved.                                         
 <8>     SKPERR    R/W     0x0        0x0        Skipper error                                     
 <7>     RCVERR    R/W     0x0        0x0        Frame was received with Data reception error      
 <6:5>   NS        RAZ     NS         NS         Reserved.                                         
 <4>     FCSERR    R/W     0x0        0x0        Frame was received with FCS/CRC error             
 <3>     JABBER    R/W     0x0        0x0        Frame was received with length > sys_length       
 <2>     NS        RAZ     NS         NS         Reserved.                                         
 <1>     CAREXT    R/W     0x0        0x0        Carrier extend error                              
                                                 (SGMII/1000Base-X only)
 <0>     MINERR    R/W     0x0        0x0        Pause Frame was received with length<minFrameSize 

Notes:
In XAUI mode prt0 is used for checking.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_PRT_CFG = Port description
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_PRT(0..3)_CFG   Address=(0x1180008000010+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:14> NS        RAZ     NS         NS         Reserved.                                         
 <13>    TX_IDLE   RO/H    0x1        NS         TX Machine is idle                                
 <12>    RX_IDLE   RO/H    0x1        NS         RX Machine is idle                                
 <11:9>  NS        RAZ     NS         NS         Reserved.                                         
 <8>     SPEED_MSB R/W     0x0        NS         Link Speed MSB [SPEED_MSB:SPEED]                  
                                                 10 = 10Mbs operation
                                                 00 = 100Mbs operation
                                                 01 = 1000Mbs operation
                                                 11 = Reserved
                                                 (SGMII/1000Base-X only)
 <7:4>   NS        RAZ     NS         NS         Reserved.                                         
 <3>     SLOTTIME  R/W     0x1        NS         Slot Time for Half-Duplex operation               
                                                 0 = 512 bitimes (10/100Mbs operation)
                                                 1 = 4096 bitimes (1000Mbs operation)
                                                 (SGMII/1000Base-X only)
 <2>     DUPLEX    R/W     0x1        NS         Duplex                                            
                                                 0 = Half Duplex (collisions/extentions/bursts)
                                                 1 = Full Duplex
                                                 (SGMII/1000Base-X only)
 <1>     SPEED     R/W     0x1        NS         Link Speed LSB [SPEED_MSB:SPEED]                  
                                                 10 = 10Mbs operation
                                                 00 = 100Mbs operation
                                                 01 = 1000Mbs operation
                                                 11 = Reserved
                                                 (SGMII/1000Base-X only)
 <0>     EN        R/W     0x0        NS         Link Enable                                       
                                                 When EN is clear, packets will not be received
                                                 or transmitted (including PAUSE and JAM packets).
                                                 If EN is cleared while a packet is currently
                                                 being received or transmitted, the packet will
                                                 be allowed to complete before the bus is idled.
                                                 On the RX side, subsequent packets in a burst
                                                 will be ignored.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_FRM_CTL = Frame Control
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX(0..3)_FRM_CTL   Address=(0x1180008000018+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:13> NS        RAZ     NS         NS         Reserved.                                         
 <12>    PTP_MODE  R/W     0x0        0x0        Timestamp mode                                    
                                                 When PTP_MODE is set, a 64-bit timestamp will be
                                                 prepended to every incoming packet. The timestamp
                                                 bytes are added to the packet in such a way as to
                                                 not modify the packet's receive byte count.  This
                                                 implies that the GMX_RX_JABBER, MINERR,
                                                 GMX_RX_DECISION, GMX_RX_UDD_SKP, and the
                                                 GMX_RX_STATS_* do not require any adjustment as
                                                 they operate on the received packet size.
                                                 When the packet reaches PKI, its size will
                                                 reflect the additional bytes and is subject to
                                                 the restrictions below.
                                                 If PTP_MODE=1 and PRE_CHK=1, PRE_STRP must be 1.
                                                 If PTP_MODE=1,
                                                 PIP_PRT_CFGx[SKIP] should be increased by 8.
                                                 PIP_PRT_CFGx[HIGIG_EN] should be 0.
                                                 PIP_FRM_CHKx[MAXLEN] should be increased by 8.
                                                 PIP_FRM_CHKx[MINLEN] should be increased by 8.
                                                 PIP_TAG_INCx[EN] should be adjusted.
                                                 PIP_PRT_CFGBx[ALT_SKP_EN] should be 0.
 <11>    NS        RAZ     NS         NS         Reserved.                                         
 <10>    NULL_DIS  R/W     0x0        0x0        When set, do not modify the MOD bits on NULL ticks
                                                 due to PARITAL packets
 <9>     PRE_ALIGN R/W     0x0        0x0        When set, PREAMBLE parser aligns the the SFD byte 
                                                 regardless of the number of previous PREAMBLE
                                                 nibbles.  In this mode, PRE_STRP should be set to
                                                 account for the variable nature of the PREAMBLE.
                                                 PRE_CHK must be set to enable this and all
                                                 PREAMBLE features.
                                                 (SGMII at 10/100Mbs only)
 <8>     NS        RAZ     NS         NS         Reserved.                                         
 <7>     NS        RAZ     NS         NS         Reserved.                                         
 <6>     PRE_FREE  RO      0x1        0x1        When set, PREAMBLE checking is  less strict.      
                                                 GMX will begin the frame at the first SFD.
                                                 PRE_CHK must be set to enable this and all
                                                 PREAMBLE features.
                                                 (SGMII/1000Base-X only)
 <5>     CTL_SMAC  R/W     0x0        0x0        Control Pause Frames can match station SMAC       
 <4>     CTL_MCST  R/W     0x1        0x1        Control Pause Frames can match globally assign    
                                                 Multicast address
 <3>     CTL_BCK   R/W     0x1        0x1        Forward pause information to TX block             
 <2>     CTL_DRP   R/W     0x1        0x1        Drop Control Pause Frames                         
 <1>     PRE_STRP  R/W     0x1        0x1        Strip off the preamble (when present)             
                                                 0=PREAMBLE+SFD is sent to core as part of frame
                                                 1=PREAMBLE+SFD is dropped
                                                 PRE_CHK must be set to enable this and all
                                                 PREAMBLE features.
                                                 If PTP_MODE=1 and PRE_CHK=1, PRE_STRP must be 1.
 <0>     PRE_CHK   R/W     0x1        0x1        This port is configured to send a valid 802.3     
                                                 PREAMBLE to begin every frame. GMX checks that a
                                                 valid PREAMBLE is received (based on PRE_FREE).
                                                 When a problem does occur within the PREAMBLE
                                                 seqeunce, the frame is marked as bad and not sent
                                                 into the core.  The GMX_GMX_RX_INT_REG[PCTERR]
                                                 interrupt is also raised.
                                                 When GMX_TX_XAUI_CTL[HG_EN] is set, PRE_CHK
                                                 must be zero.
                                                 If PTP_MODE=1 and PRE_CHK=1, PRE_STRP must be 1.

Notes:
"* PRE_STRP
When PRE_CHK is set (indicating that the PREAMBLE will be sent), PRE_STRP
determines if the PREAMBLE+SFD bytes are thrown away or sent to the Octane
core as part of the packet.
In either mode, the PREAMBLE+SFD bytes are not counted toward the packet
size when checking against the MIN and MAX bounds.  Furthermore, the bytes
are skipped when locating the start of the L2 header for DMAC and Control
frame recognition.
* CTL_BCK/CTL_DRP
These bits control how the HW handles incoming PAUSE packets.  Here are
the most common modes of operation:
CTL_BCK=1,CTL_DRP=1   HW does it all
CTL_BCK=0,CTL_DRP=0   SW sees all pause frames
CTL_BCK=0,CTL_DRP=1   all pause frames are completely ignored
These control bits should be set to CTL_BCK=0,CTL_DRP=0 in halfdup mode.
Since PAUSE packets only apply to fulldup operation, any PAUSE packet
would constitute an exception which should be handled by the processing
cores.  PAUSE packets should not be forwarded."

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_FRM_CHK = Which frame errors will set the ERR bit of the frame
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX(0..3)_FRM_CHK   Address=(0x1180008000020+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:9>  NS     RAZ     NS         NS         Reserved.                                         
 <8>     SKPERR R/W     0x1        0x1        Skipper error                                     
 <7>     RCVERR R/W     0x1        0x1        Frame was received with Data reception error      
 <6:5>   NS     RAZ     NS         NS         Reserved.                                         
 <4>     FCSERR R/W     0x1        0x1        Frame was received with FCS/CRC error             
 <3>     JABBER R/W     0x1        0x1        Frame was received with length > sys_length       
 <2>     NS     RAZ     NS         NS         Reserved.                                         
 <1>     CAREXT R/W     0x1        0x1        Carrier extend error                              
                                              (SGMII/1000Base-X only)
 <0>     MINERR R/W     0x1        0x1        Pause Frame was received with length<minFrameSize 

Notes:
If GMX_RX_UDD_SKP[LEN] != 0, then LENERR will be forced to zero in HW.
In XAUI mode prt0 is used for checking.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_JABBER = The max size packet after which GMX will truncate
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX(0..3)_JABBER   Address=(0x1180008000038+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:0>  CNT   R/W     0x2800     0x2800     Byte count for jabber check                       
                                             Failing packets set the JABBER interrupt and are
                                             optionally sent with opcode==JABBER
                                             GMX will truncate the packet to CNT bytes

Notes:
CNT must be 8-byte aligned such that CNT[2:0] == 0
The packet that will be sent to the packet input logic will have an
additionl 8 bytes if GMX_RX_FRM_CTL[PRE_CHK] is set and
GMX_RX_FRM_CTL[PRE_STRP] is clear.  The max packet that will be sent is
defined as...
max_sized_packet = GMX_RX_JABBER[CNT]+((GMX_RX_FRM_CTL[PRE_CHK] &
!GMX_RX_FRM_CTL[PRE_STRP])*8)
In XAUI mode prt0 is used for checking.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_DECISION = The byte count to decide when to accept or filter a packet
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX(0..3)_DECISION   Address=(0x1180008000040+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:5>  NS    RAZ     NS         NS         Reserved.                                         
 <4:0>   CNT   R/W     0x18       0x18       The byte count to decide when to accept or filter 
                                             a packet.

Notes:
As each byte in a packet is received by GMX, the L2 byte count is compared
against the GMX_RX_DECISION[CNT].  The L2 byte count is the number of bytes
from the beginning of the L2 header (DMAC).  In normal operation, the L2
header begins after the PREAMBLE+SFD (GMX_RX_FRM_CTL[PRE_CHK]=1) and any
optional UDD skip data (GMX_RX_UDD_SKP[LEN]).
When GMX_RX_FRM_CTL[PRE_CHK] is clear, PREAMBLE+SFD are prepended to the
packet and would require UDD skip length to account for them.
L2 Size
Port Mode              <GMX_RX_DECISION bytes (default=24)        >=GMX_RX_DECISION bytes
(default=24)
Full Duplex           accept packet                                apply filters
no filtering is applied                        accept packet based on DMAC and PAUSE packet
filters
Half Duplex           drop packet                                apply filters
packet is unconditionally dropped                accept packet based on DMAC
where l2_size = MAX(0, total_packet_size GMX_RX_UDD_SKP[LEN] ((GMX_RX_FRM_CTL[PRE_CHK]==1)*8)

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_UDD_SKP = Amount of User-defined data before the start of the L2 data
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX(0..3)_UDD_SKP   Address=(0x1180008000048+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:9>  NS     RAZ     NS         NS         Reserved.                                         
 <8>     FCSSEL R/W     0x0        0x0        Include the skip bytes in the FCS calculation     
                                              0 = all skip bytes are included in FCS
                                              1 = the skip bytes are not included in FCS
                                              When GMX_TX_XAUI_CTL[HG_EN] is set, FCSSEL must
                                              be zero.
 <7>     NS     RAZ     NS         NS         Reserved.                                         
 <6:0>   LEN    R/W     0x0        0x0        Amount of User-defined data before the start of   
                                              the L2 data.  Zero means L2 comes first.
                                              Max value is 64.
                                              When GMX_TX_XAUI_CTL[HG_EN] is set, LEN must be
                                              set to 12 or 16 (depending on HiGig header size)
                                              to account for the HiGig header. LEN=12 selects
                                              HiGig/HiGig+, and LEN=16 selects HiGig2.

Notes:
(1) The skip bytes are part of the packet and will be sent down the NCB
packet interface and will be handled by PKI.
(2) The system can determine if the UDD bytes are included in the FCS check
by using the FCSSEL field if the FCS check is enabled.
(3) Assume that the preamble/sfd is always at the start of the frame even
before UDD bytes.  In most cases, there will be no preamble in these
cases since it will be packet interface in direct communication to
another packet interface (MAC to MAC) without a PHY involved.
(4) We can still do address filtering and control packet filtering is the
user desires.
(5) UDD_SKP must be 0 in half-duplex operation unless
GMX_RX_FRM_CTL[PRE_CHK] is clear.  If GMX_RX_FRM_CTL[PRE_CHK] is clear,
then UDD_SKP will normally be 8.
(6) In all cases, the UDD bytes will be sent down the packet interface as
part of the packet.  The UDD bytes are never stripped from the actual
packet.
(7) If LEN != 0, then GMX_RX_FRM_CHK[LENERR] will be disabled and GMX_RX_INT_REG[LENERR] will
be zero

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_STATS_CTL = RX Stats Control register
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX(0..3)_STATS_CTL   Address=(0x1180008000050+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS     RAZ     NS         NS         Reserved.                                         
 <0>     RD_CLR R/W     0x0        0x0        RX Stats registers will clear on reads            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_IFG = RX Min IFG
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX(0..3)_IFG   Address=(0x1180008000058+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS    RAZ     NS         NS         Reserved.                                         
 <3:0>   IFG   R/W     0x8        0x8        Min IFG (in IFG*8 bits) between packets used to   
                                             determine IFGERR. Normally IFG is 96 bits.
                                             Note in some operating modes, IFG cycles can be
                                             inserted or removed in order to achieve clock rate
                                             adaptation. For these reasons, the default value
                                             is slightly conservative and does not check upto
                                             the full 96 bits of IFG.
                                             (SGMII/1000Base-X only)
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_PAUSE_DROP_TIME = The TIME field in a PAUSE Packet which was dropped due to GMX RX FIFO full condition
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX(0..3)_PAUSE_DROP_TIME   Address=(0x1180008000068+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS     RAZ     NS         NS         Reserved.                                         
 <15:0>  STATUS R/W1C/H 0x0        NS         Time extracted from the dropped PAUSE packet      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_STATS_PKTS
 * 
 *  Count of good received packets - packets that are not recognized as PAUSE
 *  packets, dropped due the DMAC filter, dropped due FIFO full status, or
 *  have any other OPCODE (FCS, Length, etc).
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX(0..3)_STATS_PKTS   Address=(0x1180008000080+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  CNT   RC/W/H  0x0        NS         Count of received good packets                    

Notes:
Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
Counters will wrap

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_STATS_OCTS
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX(0..3)_STATS_OCTS   Address=(0x1180008000088+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS    RAZ     NS         NS         Reserved.                                         
 <47:0>  CNT   RC/W/H  0x0        NS         Octet count of received good packets              
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_STATS_PKTS_CTL
 * 
 *  Count of all packets received that were recognized as Flow Control or
 *  PAUSE packets.  PAUSE packets with any kind of error are counted in
 *  GMX_RX_STATS_PKTS_BAD.  Pause packets can be optionally dropped or
 *  forwarded based on the GMX_RX_FRM_CTL[CTL_DRP] bit.  This count
 *  increments regardless of whether the packet is dropped.  Pause packets
 *  will never be counted in GMX_RX_STATS_PKTS.  Packets dropped due the dmac
 *  filter will be counted in GMX_RX_STATS_PKTS_DMAC and not here.
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX(0..3)_STATS_PKTS_CTL   Address=(0x1180008000090+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  CNT   RC/W/H  0x0        NS         Count of received pause packets                   

Notes:
Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
Counters will wrap

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_STATS_OCTS_CTL
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX(0..3)_STATS_OCTS_CTL   Address=(0x1180008000098+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS    RAZ     NS         NS         Reserved.                                         
 <47:0>  CNT   RC/W/H  0x0        NS         Octet count of received pause packets             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_STATS_PKTS_DMAC
 * 
 *  Count of all packets received that were dropped by the dmac filter.
 *  Packets that match the DMAC will be dropped and counted here regardless
 *  of if they were bad packets.  These packets will never be counted in
 *  GMX_RX_STATS_PKTS.
 *  Some packets that were not able to satisify the DECISION_CNT may not
 *  actually be dropped by Octeon, but they will be counted here as if they
 *  were dropped.
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX(0..3)_STATS_PKTS_DMAC   Address=(0x11800080000A0+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  CNT   RC/W/H  0x0        NS         Count of filtered dmac packets                    

Notes:
Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
Counters will wrap

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_STATS_OCTS_DMAC
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX(0..3)_STATS_OCTS_DMAC   Address=(0x11800080000A8+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS    RAZ     NS         NS         Reserved.                                         
 <47:0>  CNT   RC/W/H  0x0        NS         Octet count of filtered dmac packets              
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_STATS_PKTS_DRP
 * 
 *  Count of all packets received that were dropped due to a full receive FIFO.
 *  This counts both partial packets in which there was enough space in the RX
 *  FIFO to begin to buffer and the packet and total drops in which no packet was
 *  sent to PKI.  This counts good and bad packets received - all packets dropped
 *  by the FIFO.  It does not count packets dropped by the dmac or pause packet
 *  filters.
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX(0..3)_STATS_PKTS_DRP   Address=(0x11800080000B0+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  CNT   RC/W/H  0x0        NS         Count of dropped packets                          

Notes:
Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
Counters will wrap

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_STATS_OCTS_DRP
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX(0..3)_STATS_OCTS_DRP   Address=(0x11800080000B8+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS    RAZ     NS         NS         Reserved.                                         
 <47:0>  CNT   RC/W/H  0x0        NS         Octet count of dropped packets                    
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_STATS_PKTS_BAD
 * 
 *  Count of all packets received with some error that were not dropped
 *  either due to the dmac filter or lack of room in the receive FIFO.
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX(0..3)_STATS_PKTS_BAD   Address=(0x11800080000C0+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  CNT   RC/W/H  0x0        NS         Count of bad packets                              

Notes:
Cleared either by a write (of any value) or a read when GMX_RX_STATS_CTL[RD_CLR] is set
Counters will wrap

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_ADR_CTL = Address Filtering Control
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX(0..3)_ADR_CTL   Address=(0x1180008000100+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ     NS         NS         Reserved.                                         
 <3>     CAM_MODE R/W     0x0        NS         Allow or deny DMAC address filter                 
                                                0 = reject the packet on DMAC address match
                                                1 = accept the packet on DMAC address match
 <2:1>   MCST     R/W     0x0        NS         Multicast Mode                                    
                                                0 = Use the Address Filter CAM
                                                1 = Force reject all multicast packets
                                                2 = Force accept all multicast packets
                                                3 = Reserved
 <0>     BCST     R/W     0x1        NS         Accept All Broadcast Packets                      

Notes:
"* ALGORITHM
Here is some pseudo code that represents the address filter behavior.
@verbatim
bool dmac_addr_filter(uint8 prt, uint48 dmac) {
ASSERT(prt >= 0 && prt <= 3);
if (is_bcst(dmac))                               // broadcast accept
return (GMX_RX{prt}_ADR_CTL[BCST] ? ACCEPT : REJECT);
if (is_mcst(dmac) & GMX_RX{prt}_ADR_CTL[MCST] == 1)   // multicast reject
return REJECT;
if (is_mcst(dmac) & GMX_RX{prt}_ADR_CTL[MCST] == 2)   // multicast accept
return ACCEPT;
cam_hit = 0;
for (i=0; i<32; i++) {
if (GMX_RX{prt}_ADR_CAM_ALL_EN[EN<i>] == 0)
continue;
uint48 unswizzled_mac_adr = 0x0;
for (j=5; j>=0; j--) {
unswizzled_mac_adr = (unswizzled_mac_adr << 8) |
GMX_RX{i>>3}_ADR_CAM{j}[ADR<(i&7)*8+7:(i&7)*8>];
}
if (unswizzled_mac_adr == dmac) {
cam_hit = 1;
break;
}
}
if (cam_hit)
return (GMX_RX{prt}_ADR_CTL[CAM_MODE] ? ACCEPT : REJECT);
else
return (GMX_RX{prt}_ADR_CTL[CAM_MODE] ? REJECT : ACCEPT);
}
@endverbatim
* XAUI Mode
In XAUI mode, only GMX_RX0_ADR_CTL is used.  GMX_RX[1,2,3]_ADR_CTL should not be used."

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_ADR_CAM_EN = Address Filtering Control Enable
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX(0..3)_ADR_CAM_EN   Address=(0x1180008000108+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:0>   EN    R/W     0x0        NS         CAM Entry Enables                                 
                                             
                                             GMX has 32 DMAC entries that can be accessed with
                                             the GMX_RX[0..3]_ADR_CAM[0..5] CSRs.
                                             These 32 DMAC entries can be used by any of the
                                             four SGMII MACs or the XAUI MAC.
                                             
                                             Each port interface has independent control of
                                             which of the 32 DMAC entries to include in the
                                             CAM lookup.
                                             
                                             Legacy GMX implementations were able to CAM
                                             against eight DMAC entries while current
                                             implementations use 32 common entries.
                                             This register is intended for legacy applications
                                             that only require eight DMAC CAM entries per MAC.
                                             New applications may choose to ignore
                                             GMX_RXx_ADR_CAM_EN using GMX_RXx_ADR_CAM_ALL_EN
                                             instead.
                                             
                                             EN controls the enables for the eight legacy CAM
                                             entries as follows:
                                             port0, EN = GMX_RX0_ADR_CAM_ALL_EN[EN<7:0>]
                                             port1, EN = GMX_RX1_ADR_CAM_ALL_EN[EN<15:8>]
                                             port2, EN = GMX_RX2_ADR_CAM_ALL_EN[EN<23:16>]
                                             port3, EN = GMX_RX3_ADR_CAM_ALL_EN[EN<31:24>]
                                             
                                             The full 32 indepedent per MAC enables are in
                                             GMX_RX_ADR_CAM_ALL_EN.
                                             
                                             Therefore, writes to GMX_RXX_ADR_CAM_ALL_EN[EN]
                                             will be reflected in EN and writes to EN will be
                                             reflected in GMX_RXX_ADR_CAM_ALL_EN[EN].
                                             
                                             In XAUI mode, only GMX_RX0_ADR_CAM_EN is used and
                                             GMX_RX[1,2,3]_ADR_CAM_EN should not be used.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_ADR_CAM_ALL_EN = Address Filtering Control Enable
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX(0..3)_ADR_CAM_ALL_EN   Address=(0x1180008000110+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  EN    R/W     0x0        NS         CAM Entry Enables                                 
                                             
                                             GMX has 32 DMAC entries that can be accessed with
                                             the GMX_RX[0..3]_ADR_CAM[0..5] CSRs.
                                             These 32 DMAC entries can be used by any of the
                                             four SGMII MACs or the XAUI MAC.
                                             
                                             Each port interface has independent control of
                                             which of the 32 DMAC entries to include in the
                                             CAM lookup.
                                             
                                             GMX_RXx_ADR_CAM_ALL_EN was not present in legacy
                                             GMX implemenations which had only eight DMAC CAM
                                             entries. New applications may choose to ignore
                                             GMX_RXx_ADR_CAM_EN using GMX_RX_ADR_CAM_ALL_EN
                                             instead.
                                             
                                             EN represents the full 32 indepedent per MAC
                                             enables.
                                             
                                             Writes to EN will be reflected in
                                             GMX_RXx_ADR_CAM_EN[EN] and writes to
                                             GMX_RXx_ADR_CAM_EN[EN] will be reflected in EN.
                                             Refer to GMX_RXx_ADR_CAM_EN for the CSR mapping.
                                             
                                             In XAUI mode, only GMX_RX0_ADR_CAM_ALL_EN is used
                                             and GMX_RX[1,2,3]_ADR_CAM_ALL_EN should not be
                                             used.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_ADR_CAM0
 * 
 *  GMX_RX_ADR_CAM = Address Filtering Control
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX(0..3)_ADR_CAM0   Address=(0x1180008000180+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  ADR R/W     0x0        NS         The DMAC address to match on                      
                                           
                                           Each entry contributes 8bits to one of 8 matchers.
                                           The CAM matches against unicst or multicst DMAC
                                           addresses.
                                           
                                           ALL GMX_RX[0..3]_ADR_CAM[0..5] CSRs may be used
                                           in either SGMII or XAUI mode such that any GMX
                                           MAC can use any of the 32 common DMAC entries.
                                           
                                           GMX_RX[1..3]_ADR_CAM[0..5] are the only non-port0
                                           registers used in XAUI mode.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_ADR_CAM1
 * 
 *  GMX_RX_ADR_CAM = Address Filtering Control
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX(0..3)_ADR_CAM1   Address=(0x1180008000188+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  ADR R/W     0x0        NS         The DMAC address to match on                      
                                           
                                           Each entry contributes 8bits to one of 8 matchers.
                                           The CAM matches against unicst or multicst DMAC
                                           addresses.
                                           
                                           ALL GMX_RX[0..3]_ADR_CAM[0..5] CSRs may be used
                                           in either SGMII or XAUI mode such that any GMX
                                           MAC can use any of the 32 common DMAC entries.
                                           
                                           GMX_RX[1..3]_ADR_CAM[0..5] are the only non-port0
                                           registers used in XAUI mode.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_ADR_CAM2
 * 
 *  GMX_RX_ADR_CAM = Address Filtering Control
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX(0..3)_ADR_CAM2   Address=(0x1180008000190+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  ADR R/W     0x0        NS         The DMAC address to match on                      
                                           
                                           Each entry contributes 8bits to one of 8 matchers.
                                           The CAM matches against unicst or multicst DMAC
                                           addresses.
                                           
                                           ALL GMX_RX[0..3]_ADR_CAM[0..5] CSRs may be used
                                           in either SGMII or XAUI mode such that any GMX
                                           MAC can use any of the 32 common DMAC entries.
                                           
                                           GMX_RX[1..3]_ADR_CAM[0..5] are the only non-port0
                                           registers used in XAUI mode.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_ADR_CAM3
 * 
 *  GMX_RX_ADR_CAM = Address Filtering Control
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX(0..3)_ADR_CAM3   Address=(0x1180008000198+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  ADR R/W     0x0        NS         The DMAC address to match on                      
                                           
                                           Each entry contributes 8bits to one of 8 matchers.
                                           The CAM matches against unicst or multicst DMAC
                                           addresses.
                                           
                                           ALL GMX_RX[0..3]_ADR_CAM[0..5] CSRs may be used
                                           in either SGMII or XAUI mode such that any GMX
                                           MAC can use any of the 32 common DMAC entries.
                                           
                                           GMX_RX[1..3]_ADR_CAM[0..5] are the only non-port0
                                           registers used in XAUI mode.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_ADR_CAM4
 * 
 *  GMX_RX_ADR_CAM = Address Filtering Control
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX(0..3)_ADR_CAM4   Address=(0x11800080001A0+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  ADR R/W     0x0        NS         The DMAC address to match on                      
                                           
                                           Each entry contributes 8bits to one of 8 matchers.
                                           The CAM matches against unicst or multicst DMAC
                                           addresses.
                                           
                                           ALL GMX_RX[0..3]_ADR_CAM[0..5] CSRs may be used
                                           in either SGMII or XAUI mode such that any GMX
                                           MAC can use any of the 32 common DMAC entries.
                                           
                                           GMX_RX[1..3]_ADR_CAM[0..5] are the only non-port0
                                           registers used in XAUI mode.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_ADR_CAM5
 * 
 *  GMX_RX_ADR_CAM = Address Filtering Control
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX(0..3)_ADR_CAM5   Address=(0x11800080001A8+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  ADR R/W     0x0        NS         The DMAC address to match on                      
                                           
                                           Each entry contributes 8bits to one of 8 matchers.
                                           The CAM matches against unicst or multicst DMAC
                                           addresses.
                                           
                                           ALL GMX_RX[0..3]_ADR_CAM[0..5] CSRs may be used
                                           in either SGMII or XAUI mode such that any GMX
                                           MAC can use any of the 32 common DMAC entries.
                                           
                                           GMX_RX[1..3]_ADR_CAM[0..5] are the only non-port0
                                           registers used in XAUI mode.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_THRESH
 * 
 *  Per Port
 *  GMX_TX_THRESH = Packet TX Threshold
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX(0..3)_THRESH   Address=(0x1180008000210+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:9>  NS    RAZ     NS         NS         Reserved.                                         
 <8:0>   CNT   R/W     0x20       0x20       Number of 16B ticks to accumulate in the TX FIFO  
                                             before sending on the packet interface
                                             This register should be large enough to prevent
                                             underflow on the packet interface and must never
                                             be set to zero.  This register cannot exceed the
                                             the TX FIFO depth which is...
                                             GMX_TX_PRTS==0,1:  CNT MAX = 0x100
                                             GMX_TX_PRTS==2  :  CNT MAX = 0x080
                                             GMX_TX_PRTS==3,4:  CNT MAX = 0x040

Notes:
In XAUI mode, prt0 is used for checking.  Since XAUI mode uses a single TX FIFO and is higher
data rate, recommended value is 0x100.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_APPEND = Packet TX Append Control
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX(0..3)_APPEND   Address=(0x1180008000218+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS        RAZ     NS         NS         Reserved.                                         
 <3>     FORCE_FCS R/W     0x1        0x1        Append the Ethernet FCS on each pause packet      
                                                 when FCS is clear.  Pause packets are normally
                                                 padded to 60 bytes.  If GMX_TX_MIN_PKT[MIN_SIZE]
                                                 exceeds 59, then FORCE_FCS will not be used.
 <2>     FCS       R/W     0x1        0x1        Append the Ethernet FCS on each packet            
 <1>     PAD       R/W     0x1        0x1        Append PAD bytes such that min sized              
 <0>     PREAMBLE  R/W     0x1        0x1        Prepend the Ethernet preamble on each transfer    
                                                 When GMX_TX_XAUI_CTL[HG_EN] is set, PREAMBLE
                                                 must be zero.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_SLOT = Packet TX Slottime Counter
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX(0..3)_SLOT   Address=(0x1180008000220+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:10> NS    RAZ     NS         NS         Reserved.                                         
 <9:0>   SLOT  R/W     0x200      0x200      Slottime (refer to 802.3 to set correctly)        
                                             10/100Mbs: 0x40  (corresponds to  512 bitimes)
                                             1000Mbs:   0x200 (corresponds to 4096 bitimes)
                                             (SGMII/1000Base-X only)
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_BURST = Packet TX Burst Counter
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX(0..3)_BURST   Address=(0x1180008000228+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:0>  BURST R/W     0x2000     0x2000     Burst (refer to 802.3 to set correctly)           
                                             Only valid for 1000Mbs half-duplex operation
                                             halfdup / 1000Mbs: 0x2000
                                             all other modes:   0x0
                                             (SGMII/1000Base-X only)
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_SMAC = Packet SMAC
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_SMAC(0..3)   Address=(0x1180008000230+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS    RAZ     NS         NS         Reserved.                                         
 <47:0>  SMAC  R/W     0x0        NS         The SMAC field is used for generating and         
                                             accepting Control Pause packets
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_PAUSE_PKT_TIME = Packet TX Pause Packet pause_time field
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX(0..3)_PAUSE_PKT_TIME   Address=(0x1180008000238+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:0>  TIME  R/W     0x60       NS         The pause_time field placed in outbnd 802.3 pause 
                                             packets, HiGig2 messages, or CBFC pause packets.
                                             pause_time is in 512 bit-times
                                             Normally, TIME > GMX_TX_PAUSE_PKT_INTERVAL
                                             Attribute: -exempt_keyword=True.

Notes:
Choosing proper values of GMX_TX_PAUSE_PKT_TIME[TIME] and
GMX_TX_PAUSE_PKT_INTERVAL[INTERVAL] can be challenging to the system
designer.  It is suggested that TIME be much greater than INTERVAL and
GMX_TX_PAUSE_ZERO[SEND] be set.  This allows a periodic refresh of the PAUSE
count and then when the backpressure condition is lifted, a PAUSE packet
with TIME==0 will be sent indicating that Octane is ready for additional
data.
If the system chooses to not set GMX_TX_PAUSE_ZERO[SEND], then it is
suggested that TIME and INTERVAL are programmed such that they satisify the
following rule...
INTERVAL <= TIME (largest_pkt_size + IFG + pause_pkt_size)
where largest_pkt_size is that largest packet that the system can send
(normally 1518B), IFG is the interframe gap and pause_pkt_size is the size
of the PAUSE packet (normally 64B).

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_MIN_PKT = Packet TX Min Size Packet (PAD upto min size)
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX(0..3)_MIN_PKT   Address=(0x1180008000240+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ     NS         NS         Reserved.                                         
 <7:0>   MIN_SIZE R/W     0x3b       0x3b       Min frame in bytes before the FCS is applied      
                                                Padding is only appened when GMX_TX_APPEND[PAD]
                                                for the coresponding port is set.
                                                In SGMII mode, packets will be padded to
                                                MIN_SIZE+1. The reset value will pad to 60 bytes.
                                                In XAUI mode, packets will be padded to
                                                MIN(252,(MIN_SIZE+1 & ~0x3))
                                                When GMX_TX_XAUI_CTL[HG_EN] is set, the HiGig
                                                header (12B or 16B) is normally added to the
                                                packet, so MIN_SIZE should be 59+12=71B for
                                                HiGig or 59+16=75B for HiGig2.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_PAUSE_PKT_INTERVAL = Packet TX Pause Packet transmission interval - how often PAUSE packets will be sent
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX(0..3)_PAUSE_PKT_INTERVAL   Address=(0x1180008000248+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ     NS         NS         Reserved.                                         
 <15:0>  INTERVAL R/W     0x10       NS         Arbitrate for a 802.3 pause packet, HiGig2 message,
                                                or CBFC pause packet every (INTERVAL*512)
                                                bit-times.
                                                Normally, 0 < INTERVAL < GMX_TX_PAUSE_PKT_TIME
                                                INTERVAL=0, will only send a single PAUSE packet
                                                for each backpressure event

Notes:
Choosing proper values of GMX_TX_PAUSE_PKT_TIME[TIME] and
GMX_TX_PAUSE_PKT_INTERVAL[INTERVAL] can be challenging to the system
designer.  It is suggested that TIME be much greater than INTERVAL and
GMX_TX_PAUSE_ZERO[SEND] be set.  This allows a periodic refresh of the PAUSE
count and then when the backpressure condition is lifted, a PAUSE packet
with TIME==0 will be sent indicating that Octane is ready for additional
data.
If the system chooses to not set GMX_TX_PAUSE_ZERO[SEND], then it is
suggested that TIME and INTERVAL are programmed such that they satisify the
following rule...
INTERVAL <= TIME (largest_pkt_size + IFG + pause_pkt_size)
where largest_pkt_size is that largest packet that the system can send
(normally 1518B), IFG is the interframe gap and pause_pkt_size is the size
of the PAUSE packet (normally 64B).

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_SOFT_PAUSE = Packet TX Software Pause
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX(0..3)_SOFT_PAUSE   Address=(0x1180008000250+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:0>  TIME  R/W     0x0        NS         Back off the TX bus for (TIME*512) bit-times      
                                             Attribute: -exempt_keyword=True.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_PAUSE_TOGO = Packet TX Amount of time remaining to backpressure
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX(0..3)_PAUSE_TOGO   Address=(0x1180008000258+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ     NS         NS         Reserved.                                         
 <31:16> MSG_TIME RO/H    NS         NS         Amount of time remaining to backpressure          
                                                From the higig2 physical message pause timer
                                                (only valid on port0)
 <15:0>  TIME     RO/H    NS         NS         Amount of time remaining to backpressure          
                                                From the standard 802.3 pause timer
                                                Attribute: -exempt_keyword=True.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_PAUSE_ZERO = Packet TX Amount of time remaining to backpressure
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX(0..3)_PAUSE_ZERO   Address=(0x1180008000260+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS    RAZ     NS         NS         Reserved.                                         
 <0>     SEND  R/W     0x1        0x1        When backpressure condition clear, send PAUSE     
                                             packet with pause_time of zero to enable the
                                             channel
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_STATS_CTL = TX Stats Control register
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX(0..3)_STATS_CTL   Address=(0x1180008000268+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS     RAZ     NS         NS         Reserved.                                         
 <0>     RD_CLR R/W     0x0        0x0        Stats registers will clear on reads               
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_CTL = TX Control register
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX(0..3)_CTL   Address=(0x1180008000270+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ     NS         NS         Reserved.                                         
 <1>     XSDEF_EN R/W     0x1        0x1        Enables the excessive deferral check for stats    
                                                and interrupts
                                                (SGMII/1000Base-X half-duplex only)
 <0>     XSCOL_EN R/W     0x1        0x1        Enables the excessive collision check for stats   
                                                and interrupts
                                                (SGMII/1000Base-X half-duplex only)
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_STAT0 = GMX_TX_STATS_XSDEF / GMX_TX_STATS_XSCOL
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX(0..3)_STAT0   Address=(0x1180008000280+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> XSDEF RC/W/H  0x0        NS         Number of packets dropped (never successfully     
                                             sent) due to excessive deferal
                                             (SGMII/1000Base-X half-duplex only)
 <31:0>  XSCOL RC/W/H  0x0        NS         Number of packets dropped (never successfully     
                                             sent) due to excessive collision.  Defined by
                                             GMX_TX_COL_ATTEMPT[LIMIT].
                                             (SGMII/1000Base-X half-duplex only)

Notes:
Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
Counters will wrap

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_STAT1 = GMX_TX_STATS_SCOL  / GMX_TX_STATS_MCOL
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX(0..3)_STAT1   Address=(0x1180008000288+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> SCOL RC/W/H  0x0        NS         Number of packets sent with a single collision    
                                            (SGMII/1000Base-X half-duplex only)
 <31:0>  MCOL RC/W/H  0x0        NS         Number of packets sent with multiple collisions   
                                            but < GMX_TX_COL_ATTEMPT[LIMIT].
                                            (SGMII/1000Base-X half-duplex only)

Notes:
Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
Counters will wrap

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_STAT2 = GMX_TX_STATS_OCTS
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX(0..3)_STAT2   Address=(0x1180008000290+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS    RAZ     NS         NS         Reserved.                                         
 <47:0>  OCTS  RC/W/H  0x0        NS         Number of total octets sent on the interface.     
                                             Does not count octets from frames that were
                                             truncated due to collisions in halfdup mode.

Notes:
Octect counts are the sum of all data transmitted on the wire including
packet data, pad bytes, fcs bytes, pause bytes, and jam bytes.  The octect
counts do not include PREAMBLE byte or EXTEND cycles.
Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
Counters will wrap

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_STAT3 = GMX_TX_STATS_PKTS
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX(0..3)_STAT3   Address=(0x1180008000298+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  PKTS  RC/W/H  0x0        NS         Number of total frames sent on the interface.     
                                             Does not count frames that were truncated due to
                                             collisions in halfdup mode.

Notes:
Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
Counters will wrap

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_STAT4 = GMX_TX_STATS_HIST1 (64) / GMX_TX_STATS_HIST0 (<64)
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX(0..3)_STAT4   Address=(0x11800080002A0+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> HIST1 RC/W/H  0x0        NS         Number of packets sent with an octet count of 64. 
 <31:0>  HIST0 RC/W/H  0x0        NS         Number of packets sent with an octet count        
                                             of < 64.

Notes:
Packet length is the sum of all data transmitted on the wire for the given
packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
Counters will wrap

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_STAT5 = GMX_TX_STATS_HIST3 (128- 255) / GMX_TX_STATS_HIST2 (65- 127)
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX(0..3)_STAT5   Address=(0x11800080002A8+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> HIST3 RC/W/H  0x0        NS         Number of packets sent with an octet count of     
                                             128 - 255.
 <31:0>  HIST2 RC/W/H  0x0        NS         Number of packets sent with an octet count of     
                                             65 - 127.

Notes:
Packet length is the sum of all data transmitted on the wire for the given
packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
Counters will wrap

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_STAT6 = GMX_TX_STATS_HIST5 (512-1023) / GMX_TX_STATS_HIST4 (256-511)
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX(0..3)_STAT6   Address=(0x11800080002B0+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> HIST5 RC/W/H  0x0        NS         Number of packets sent with an octet count of     
                                             512 - 1023.
 <31:0>  HIST4 RC/W/H  0x0        NS         Number of packets sent with an octet count of     
                                             256 - 511.

Notes:
Packet length is the sum of all data transmitted on the wire for the given
packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
Counters will wrap

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_STAT7 = GMX_TX_STATS_HIST7 (1024-1518) / GMX_TX_STATS_HIST6 (>1518)
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX(0..3)_STAT7   Address=(0x11800080002B8+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> HIST7 RC/W/H  0x0        NS         Number of packets sent with an octet count        
                                             of > 1518.
 <31:0>  HIST6 RC/W/H  0x0        NS         Number of packets sent with an octet count of     
                                             1024 - 1518.

Notes:
Packet length is the sum of all data transmitted on the wire for the given
packet including packet data, pad bytes, fcs bytes, pause bytes, and jam
bytes.  The octect counts do not include PREAMBLE byte or EXTEND cycles.
Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
Counters will wrap

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_STAT8 = GMX_TX_STATS_MCST  / GMX_TX_STATS_BCST
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX(0..3)_STAT8   Address=(0x11800080002C0+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> MCST RC/W/H  0x0        NS         Number of packets sent to multicast DMAC.         
                                            Does not include BCST packets.
 <31:0>  BCST RC/W/H  0x0        NS         Number of packets sent to broadcast DMAC.         
                                            Does not include MCST packets.

Notes:
Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
Counters will wrap
Note, GMX determines if the packet is MCST or BCST from the DMAC of the
packet.  GMX assumes that the DMAC lies in the first 6 bytes of the packet
as per the 802.3 frame definition.  If the system requires additional data
before the L2 header, then the MCST and BCST counters may not reflect
reality and should be ignored by software.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_STAT9 = GMX_TX_STATS_UNDFLW / GMX_TX_STATS_CTL
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX(0..3)_STAT9   Address=(0x11800080002C8+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> UNDFLW RC/W/H  0x0        NS         Number of underflow packets                       
 <31:0>  CTL    RC/W/H  0x0        NS         Number of Control packets (PAUSE flow control)    
                                              generated by GMX.  It does not include control
                                              packets forwarded or generated by the PP's.
                                              CTL will count the number of generated PFC frames.
                                              CTL will not track the number of generated HG2
                                              messages.

Notes:
Cleared either by a write (of any value) or a read when GMX_TX_STATS_CTL[RD_CLR] is set
Counters will wrap

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_SGMII_CTL
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX(0..3)_SGMII_CTL   Address=(0x1180008000300+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS    RAZ     NS         NS         Reserved.                                         
 <0>     ALIGN R/W     0x1        0x0        Align the transmission to even cycles             
                                             
                                             Recommended value is:
                                             ALIGN = !GMX_TX_APPEND[PREAMBLE]
                                             
                                             (See the Transmit Conversion to Code groups
                                             section in the SGMII Interface chapter of the
                                             HRM for a complete discussion)
                                             
                                             0 = Data can be sent on any cycle
                                             In this mode, the interface will function at
                                             maximum bandwidth. It is possible to for the
                                             TX PCS machine to drop first byte of the TX
                                             frame.  When GMX_TX_APPEND[PREAMBLE] is set,
                                             the first byte will be a preamble byte which
                                             can be dropped to compensate for an extended
                                             IPG.
                                             
                                             1 = Data will only be sent on even cycles.
                                             In this mode, there can be bandwidth
                                             implications when sending odd-byte packets as
                                             the IPG can extend an extra cycle.
                                             There will be no loss of data.
                                             
                                             (SGMII/1000Base-X only)
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_JAM_MODE
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX(0..3)_JAM_MODE   Address=(0x1180008000380+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS    RAZ     NS         NS         Reserved.                                         
 <0>     MODE  R/W     0x0        0x0        When forming halfdup JAM packets use either the incoming SOP or CRS event to begin packet
                                             creation.
                                             0 = SOP
                                             1 = CRS
                                             (SGMII/1000Base-X halfdup only)
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_BCK_CRDT
 * 
 *  gmi_tx_bck to gmi_tx_out credit count register
 *  INTERNAL: Do not add this register to the HRM
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX(0..3)_BCK_CRDT   Address=(0x1180008000388+a*0x8000000+b*0x800)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS    RAZ     NS         NS         Reserved.                                         
 <3:0>   CNT   R/W     0x6        0x6        Transmit BCK to OUT credit count                  
                                             Valid range is 1-8
                                             Recommended value is 6 (reset value) for all full-duplex operations; 4 for half-duplex
                                             operation.
                                             Value  of zero  will disable TX packet flow on the port
                                             Other values are reserved.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_BIST = GMX BIST Results
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_BIST   Address=(0x1180008000400+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:25> NS     RAZ     NS         NS         Reserved.                                         
 <24:0>  STATUS RO      0x0        0x0        "BIST Results.                                    
                                              HW sets a bit in BIST for for memory that fails
                                              0: gmx#.inb.fif_bnk0
                                              1: gmx#.inb.fif_bnk1
                                              2: gmx#.inb.fif_bnk2
                                              3: gmx#.inb.fif_bnk3
                                              4: gmx#.inb.fif_bnk_ext0
                                              5: gmx#.inb.fif_bnk_ext1
                                              6: gmx#.inb.fif_bnk_ext2
                                              7: gmx#.inb.fif_bnk_ext3
                                              8: gmx#.outb.fif.fif_bnk0
                                              9: gmx#.outb.fif.fif_bnk1
                                              10: gmx#.outb.fif.fif_bnk2
                                              11: gmx#.outb.fif.fif_bnk3
                                              12: gmx#.outb.fif.fif_bnk_ext0
                                              13: gmx#.outb.fif.fif_bnk_ext1
                                              14: gmx#.outb.fif.fif_bnk_ext2
                                              15: gmx#.outb.fif.fif_bnk_ext3
                                              16: gmx#.csr.gmi0.srf8x64m1_bist
                                              17: gmx#.csr.gmi1.srf8x64m1_bist
                                              18: gmx#.csr.gmi2.srf8x64m1_bist
                                              19: gmx#.csr.gmi3.srf8x64m1_bist
                                              20: gmx#.csr.drf20x32m2_bist
                                              21: gmx#.csr.drf20x48m2_bist
                                              22: gmx#.outb.stat.drf16x27m1_bist
                                              23: gmx#.outb.stat.drf40x64m1_bist
                                              24: xgmii.tx.drf16x38m1_async_bist"
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_PRTS = Number of FIFOs to carve the RX buffer into
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX_PRTS   Address=(0x1180008000410+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:3>  NS    RAZ     NS         NS         Reserved.                                         
 <2:0>   PRTS  R/W     0x4        0x4        In SGMII/1000Base-X mode, the RX buffer can be    
                                             carved into several logical buffers depending on
                                             the number or implemented ports.
                                             0 or 1 port  = 512ticks / 4096bytes
                                             2 ports      = 256ticks / 2048bytes
                                             3 or 4 ports = 128ticks / 1024bytes

Notes:
GMX_RX_PRTS[PRTS] must be set to '1' in XAUI mode.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_BP_DROP = FIFO mark for packet drop
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX_BP_DROP(0..3)   Address=(0x1180008000420+a*0x8000000+b*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  NS    RAZ     NS         NS         Reserved.                                         
 <5:0>   MARK  R/W     0x2        0x2        Number of 8B ticks to reserve in the RX FIFO.     
                                             When the FIFO exceeds this count, packets will
                                             be dropped and not buffered.
                                             MARK should typically be programmed to ports+1.
                                             Failure to program correctly can lead to system
                                             instability.

Notes:
The actual watermark is dynamic with respect to the GMX_RX_PRTS
register.  The GMX_RX_PRTS controls the depth of the port's
FIFO so as ports are added or removed, the drop point may change.
In XAUI mode prt0 is used for checking.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_BP_ON = Hiwater mark for port/interface backpressure
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX_BP_ON(0..3)   Address=(0x1180008000440+a*0x8000000+b*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:9>  NS    RAZ     NS         NS         Reserved.                                         
 <8:0>   MARK  R/W     0x40       0x40       Hiwater mark (8B ticks) for backpressure.         
                                             Each register is for an individual port.  In XAUI
                                             mode, prt0 is used for the unified RX FIFO
                                             GMX_RX_BP_ON must satisfy
                                             BP_OFF <= BP_ON < (FIFO_SIZE - BP_DROP)
                                             A value of zero will immediately assert back
                                             pressure.

Notes:
In XAUI mode, prt0 is used for checking.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_BP_OFF = Lowater mark for packet drop
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX_BP_OFF(0..3)   Address=(0x1180008000460+a*0x8000000+b*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  NS    RAZ     NS         NS         Reserved.                                         
 <5:0>   MARK  R/W     0x10       0x10       Water mark (8B ticks) to deassert backpressure    

Notes:
In XAUI mode, prt0 is used for checking.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_PRTS
 * 
 *  Common
 *  GMX_TX_PRTS = TX Ports
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX_PRTS   Address=(0x1180008000480+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:5>  NS    RAZ     NS         NS         Reserved.                                         
 <4:0>   PRTS  R/W     0x4        NS         Number of ports allowed on the interface          
                                             (SGMII/1000Base-X only)

Notes:
"* The value programmed for PRTS is the number of the highest architected
port number on the interface, plus 1.  For example, if port 2 is the
highest architected port, then the programmed value should be 3 since
there are 3 ports in the system 0, 1, and 2."

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_IFG = Packet TX Interframe Gap
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX_IFG   Address=(0x1180008000488+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:4>   IFG2  R/W     0x4        NS         1/3 of the interframe gap timing (in IFG2*8 bits) 
                                             If CRS is detected during IFG2, then the
                                             interFrameSpacing timer is not reset and a frame
                                             is transmited once the timer expires.
 <3:0>   IFG1  R/W     0x8        NS         2/3 of the interframe gap timing (in IFG1*8 bits) 
                                             If CRS is detected during IFG1, then the
                                             interFrameSpacing timer is reset and a frame is
                                             not transmited.

Notes:
"* Programming IFG1 and IFG2.
For 10/100/1000Mbs half-duplex systems that require IEEE 802.3
compatibility, IFG1 must be in the range of 1-8, IFG2 must be in the range
of 4-12, and the IFG1+IFG2 sum must be 12.
For 10/100/1000Mbs full-duplex systems that require IEEE 802.3
compatibility, IFG1 must be in the range of 1-11, IFG2 must be in the range
of 1-11, and the IFG1+IFG2 sum must be 12.
For XAUI/10Gbs systems that require IEEE 802.3 compatibility, the
IFG1+IFG2 sum must be 12.  IFG1[1:0] and IFG2[1:0] must be zero.
For all other systems, IFG1 and IFG2 can be any value in the range of
1-15.  Allowing for a total possible IFG sum of 2-30."

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_JAM = Packet TX Jam Pattern
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX_JAM   Address=(0x1180008000490+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:0>   JAM   R/W     0xee       NS         Jam pattern                                       
                                             (SGMII/1000Base-X half-duplex only)
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_COL_ATTEMPT = Packet TX collision attempts before dropping frame
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX_COL_ATTEMPT   Address=(0x1180008000498+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:5>  NS    RAZ     NS         NS         Reserved.                                         
 <4:0>   LIMIT R/W     0x10       0x10       Collision Attempts                                
                                             (SGMII/1000Base-X half-duplex only)
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_PAUSE_PKT_DMAC = Packet TX Pause Packet DMAC field
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX_PAUSE_PKT_DMAC   Address=(0x11800080004A0+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS    RAZ     NS         NS         Reserved.                                         
 <47:0>  DMAC  R/W     0x180c2000001 0x180c2000001 The DMAC field placed is outbnd pause pkts        
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_PAUSE_PKT_TYPE = Packet Interface TX Pause Packet TYPE field
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX_PAUSE_PKT_TYPE   Address=(0x11800080004A8+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:0>  TYPE  R/W     0x8808     0x8808     The TYPE field placed is outbnd pause pkts        
                                             Attribute: -exempt_keyword=True.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_OVR_BP = Packet Interface TX Override BackPressure
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX_OVR_BP   Address=(0x11800080004C8+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS        RAZ     NS         NS         Reserved.                                         
 <47:32> TX_PRT_BP R/W     0x0        0x0        Per port BP sent to PKO                           
                                                 0=Port is available
                                                 1=Port should be back pressured
                                                 TX_PRT_BP should not be set until
                                                 GMX_INF_MODE[EN] has been enabled
 <31:12> NS        RAZ     NS         NS         Reserved.                                         
 <11:8>  EN        R/W     0x0        0x0        Per port Enable back pressure override            
 <7:4>   BP        R/W     0x0        0x0        Per port BackPressure status to use               
                                                 0=Port is available
                                                 1=Port should be back pressured
 <3:0>   IGN_FULL  R/W     0x0        0x0        Ignore the RX FIFO full when computing BP         

Notes:
In XAUI mode, only the lsb (corresponding to port0) of EN, BP, and IGN_FULL are used.
GMX*_TX_OVR_BP[EN<0>] must be set to one and GMX*_TX_OVR_BP[BP<0>] must be cleared to zero
(to forcibly disable HW-automatic 802.3 pause packet generation) with the HiGig2 Protocol
when GMX*_HG2_CONTROL[HG2TX_EN]=0. (The HiGig2 protocol is indicated by
GMX*_TX_XAUI_CTL[HG_EN]=1 and GMX*_RX0_UDD_SKP[LEN]=16.) HW can only auto-generate
backpressure
through HiGig2 messages (optionally, when GMX*_HG2_CONTROL[HG2TX_EN]=1) with the HiGig2
protocol.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_BP = Packet Interface TX BackPressure Register
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX_BP   Address=(0x11800080004D0+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS    RAZ     NS         NS         Reserved.                                         
 <3:0>   BP    RO      0x0        0x0        Per port BackPressure status                      
                                             0=Port is available
                                             1=Port should be back pressured

Notes:
In XAUI mode, only the lsb (corresponding to port0) of BP is used.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_CORRUPT = TX - Corrupt TX packets with the ERR bit set
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX_CORRUPT   Address=(0x11800080004D8+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS      RAZ     NS         NS         Reserved.                                         
 <3:0>   CORRUPT R/W     0xf        0xf        Per port error propagation                        
                                               0=Never corrupt packets
                                               1=Corrupt packets with ERR

Notes:
Packets sent from PKO with the ERR wire asserted will be corrupted by
the transmitter if CORRUPT[prt] is set (XAUI uses prt==0).
Corruption means that GMX will send a bad FCS value.  If GMX_TX_APPEND[FCS]
is clear then no FCS is sent and the GMX cannot corrupt it.  The corrupt FCS
value is 0xeeeeeeee for SGMII/1000Base-X and 4 bytes of the error
propagation code in XAUI mode.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_PRT_INFO = Report the RX status for port
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX_PRT_INFO   Address=(0x11800080004E8+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:20> NS     RAZ     NS         NS         Reserved.                                         
 <19:16> DROP   RO/H    0x0        0x0        Per port indication that data was dropped         
 <15:4>  NS     RAZ     NS         NS         Reserved.                                         
 <3:0>   COMMIT RO/H    0x0        0x0        Per port indication that SOP was accepted         

Notes:
In XAUI mode, only the lsb (corresponding to port0) of DROP and COMMIT are used.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_LFSR = LFSR used to implement truncated binary exponential backoff
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX_LFSR   Address=(0x11800080004F8+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:0>  LFSR  R/W/H   0xffff     NS         The current state of the LFSR used to feed random 
                                             numbers to compute truncated binary exponential
                                             backoff.
                                             (SGMII/1000Base-X half-duplex only)
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_INT_REG = Interrupt Register
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX_INT_REG   Address=(0x1180008000500+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:25> NS       RAZ     NS         NS         Reserved.                                         
 <24>    XCHANGE  R/W1C/H 0x0        0x0        XAUI link status changed - this denotes a change  
                                                to GMX_RX_XAUI_CTL[STATUS]
                                                (XAUI mode only)
 <23:20> PTP_LOST R/W1C/H 0x0        0x0        A packet with a PTP request was not able to be    
                                                sent due to XSCOL
 <19:16> LATE_COL R/W1C/H 0x0        0x0        TX Late Collision                                 
                                                (SGMII/1000Base-X half-duplex only)
 <15:12> XSDEF    R/W1C/H 0x0        0x0        TX Excessive deferral                             
                                                (SGMII/1000Base-X half-duplex only)
 <11:8>  XSCOL    R/W1C/H 0x0        0x0        TX Excessive collisions                           
                                                (SGMII/1000Base-X half-duplex only)
 <7:6>   SPARE    R/W1C/H 0x0        0x0        Spare                                             
 <5:2>   UNDFLW   R/W1C/H 0x0        0x0        TX Underflow                                      
 <1>     NS       RAZ     0x0        0x0        Reserved.                                         
 <0>     PKO_NXA  R/W1C/H 0x0        0x0        Port address out-of-range from PKO Interface      

Notes:
In XAUI mode, only the lsb (corresponding to port0) of UNDFLW is used.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_INT_EN = Interrupt Enable
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX_INT_EN   Address=(0x1180008000508+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:25> NS       RAZ     NS         NS         Reserved.                                         
 <24>    XCHANGE  R/W/H   0x0        0x0        XAUI link status changed - this denotes a change  
                                                to GMX_RX_XAUI_CTL[STATUS]
                                                (XAUI mode only)
 <23:20> PTP_LOST R/W     0x0        0x0        A packet with a PTP request was not able to be    
                                                sent due to XSCOL
 <19:16> LATE_COL R/W     0x0        0x0        TX Late Collision                                 
                                                (SGMII/1000Base-X half-duplex only)
 <15:12> XSDEF    R/W     0x0        0x0        TX Excessive deferral                             
                                                (SGMII/1000Base-X half-duplex only)
 <11:8>  XSCOL    R/W     0x0        0x0        TX Excessive collisions                           
                                                (SGMII/1000Base-X half-duplex only)
 <7:6>   SPARE    R/W     0x0        0x0        Spare                                             
 <5:2>   UNDFLW   R/W     0x0        0x0        TX Underflow                                      
 <1>     NS       RAZ     0x0        0x0        Reserved.                                         
 <0>     PKO_NXA  R/W     0x0        0x0        Port address out-of-range from PKO Interface      

Notes:
In XAUI mode, only the lsb (corresponding to port0) of UNDFLW is used.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_NXA_ADR = NXA Port Address
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_NXA_ADR   Address=(0x1180008000510+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  NS    RAZ     NS         NS         Reserved.                                         
 <5:0>   PRT   RO/H    0x0        NS         Logged address for NXA exceptions                 
                                             The logged address will be from the first
                                             exception that caused the problem.  NCB has
                                             higher priority than PKO and will win.
                                             (only PRT[3:0])
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_BAD_REG = A collection of things that have gone very, very wrong
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_BAD_REG   Address=(0x1180008000518+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:31> NS       RAZ     NS         NS         Reserved.                                         
 <30:27> INB_NXA  R/W1C/H 0x0        0x0        Inbound port > GMX_RX_PRTS                        
 <26>    STATOVR  R/W1C/H 0x0        0x0        TX Statistics overflow                            
                                                The common FIFO to SGMII and XAUI had an overflow
                                                TX Stats are corrupted
 <25:22> LOSTSTAT R/W1C/H 0x0        0x0        TX Statistics data was over-written               
                                                In SGMII, one bit per port
                                                In XAUI, only port0 is used
                                                TX Stats are corrupted
 <21:6>  NS       RAZ     NS         NS         Reserved.                                         
 <5:2>   OUT_OVR  R/W1C/H 0x0        0x0        Outbound data FIFO overflow (per port)            
 <1:0>   NS       RAZ     NS         NS         Reserved.                                         

Notes:
In XAUI mode, only the lsb (corresponding to port0) of INB_NXA, LOSTSTAT, OUT_OVR, are used.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_STAT_BP = Number of cycles that the TX/Stats block has help up operation
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_STAT_BP   Address=(0x1180008000520+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:17> NS    RAZ     NS         NS         Reserved.                                         
 <16>    BP    RO/H    0x0        0x0        Current TX stats BP state                         
                                             When the TX stats machine cannot update the stats
                                             registers quickly enough, the machine has the
                                             ability to BP TX datapath.  This is a rare event
                                             and will not occur in normal operation.
                                             0 = no backpressure is applied
                                             1 = backpressure is applied to TX datapath to
                                             allow stat update operations to complete
 <15:0>  CNT   R/W1C/H 0x0        0x0        Number of cycles that BP has been asserted        
                                             Saturating counter

Notes:
"*DON'T PUT IN HRM*
It has no relationship with the TX FIFO per se.  The TX engine sends packets
from PKO and upon completion, sends a command to the TX stats block for an
update based on the packet size.  The stats operation can take a few cycles -
normally not enough to be visible considering the 64B min packet size that is
ethernet convention.
In the rare case in which SW attempted to schedule really, really, small packets
or the sclk (6xxx) is running ass-slow, then the stats updates may not happen in
real time and can back up the TX engine.
This counter is the number of cycles in which the TX engine was stalled.  In
normal operation, it should always be zeros."

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_XAUI_CTL
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX_XAUI_CTL   Address=(0x1180008000528+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field        Field   Reset      Typical    Field                                             
 Pos     Name         Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:11> NS           RAZ     NS         NS         Reserved.                                         
 <10:9>  HG_PAUSE_HGI R/W     0x2        0x2        HGI Field for HW generated HiGig pause packets    
                                                    (XAUI mode only)
 <8>     HG_EN        R/W     0x0        0x0        Enable HiGig Mode                                 
                                                    When HG_EN is set and GMX_RX_UDD_SKP[LEN]=12
                                                    the interface is in HiGig/HiGig+ mode and the
                                                    following must be set:
                                                    GMX_RX_FRM_CTL[PRE_CHK] == 0
                                                    GMX_RX_UDD_SKP[FCSSEL] == 0
                                                    GMX_RX_UDD_SKP[LEN] == 12
                                                    GMX_TX_APPEND[PREAMBLE] == 0
                                                    When HG_EN is set and GMX_RX_UDD_SKP[LEN]=16
                                                    the interface is in HiGig2 mode and the
                                                    following must be set:
                                                    GMX_RX_FRM_CTL[PRE_CHK] == 0
                                                    GMX_RX_UDD_SKP[FCSSEL] == 0
                                                    GMX_RX_UDD_SKP[LEN] == 16
                                                    GMX_TX_APPEND[PREAMBLE] == 0
                                                    GMX_PRT0_CBFC_CTL[RX_EN] == 0
                                                    GMX_PRT0_CBFC_CTL[TX_EN] == 0
                                                    (XAUI mode only)
 <7>     NS           RAZ     NS         NS         Reserved.                                         
 <6>     LS_BYP       R/W     0x0        0x0        Bypass the link status as determined by the XGMII 
                                                    receiver and set the link status of the
                                                    transmitter to LS.
                                                    (XAUI mode only)
 <5:4>   LS           R/W     0x0        0x0        Link Status                                       
                                                    0 = Link Ok
                                                    Link runs normally. RS passes MAC data to PCS
                                                    1 = Local Fault
                                                    RS layer sends continuous remote fault
                                                    sequences.
                                                    2 = Remote Fault
                                                    RS layer sends continuous idles sequences
                                                    3 = Link Drain
                                                    RS layer drops full packets to allow GMX and
                                                    PKO to drain their FIFOs
                                                    (XAUI mode only)
 <3:2>   NS           RAZ     NS         NS         Reserved.                                         
 <1>     UNI_EN       R/W     0x0        0x0        Enable Unidirectional Mode (IEEE Clause 66)       
                                                    (XAUI mode only)
 <0>     DIC_EN       R/W     0x0        0x1        Enable the deficit idle counter for IFG averaging 
                                                    (XAUI mode only)

Notes:
o70 supports a single RXAUI interface.  The GMX1 version is not supported and should not be
documented.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_XAUI_CTL
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX_XAUI_CTL   Address=(0x1180008000530+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:2>  NS     RAZ     NS         NS         Reserved.                                         
 <1:0>   STATUS RO/H    0x0        0x0        Link Status                                       
                                              0=Link OK
                                              1=Local Fault
                                              2=Remote Fault
                                              3=Reserved
                                              (XAUI mode only)

Notes:
o70 supports a single RXAUI interface.  The GMX1 version is not supported and should not be
documented.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_XAUI_BAD_COL
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX_XAUI_BAD_COL   Address=(0x1180008000538+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:40> NS       RAZ     NS         NS         Reserved.                                         
 <39>    VAL      R/W1C/H 0x0        NS         Set when GMX_RX_INT_REG[PCTERR] is set.           
                                                (XAUI mode only)
 <38:36> STATE    RO/H    0x0        NS         When GMX_RX_INT_REG[PCTERR] is set, STATE will    
                                                conatin the receive state at the time of the
                                                error.
                                                (XAUI mode only)
 <35:32> LANE_RXC RO/H    0x0        NS         When GMX_RX_INT_REG[PCTERR] is set, LANE_RXC will 
                                                conatin the XAUI column at the time of the error.
                                                (XAUI mode only)
 <31:0>  LANE_RXD RO/H    0x0        NS         When GMX_RX_INT_REG[PCTERR] is set, LANE_RXD will 
                                                conatin the XAUI column at the time of the error.
                                                (XAUI mode only)

Notes:
o70 supports a single RXAUI interface.  The GMX1 version is not supported and should not be
documented.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_XAUI_EXT_LOOPBACK
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_XAUI_EXT_LOOPBACK   Address=(0x1180008000540+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:5>  NS     RAZ     NS         NS         Reserved.                                         
 <4>     EN     R/W     0x0        0x0        Loopback enable                                   
                                              Puts the packet interface in external loopback
                                              mode on the XAUI bus in which the RX lines are
                                              reflected on the TX lines.
                                              (XAUI mode only)
 <3:0>   THRESH R/W     0x6        0x6        Threshhold on the TX FIFO                         
                                              SW must only write the typical value.  Any other
                                              value will cause loopback mode not to function
                                              correctly.
                                              (XAUI mode only)

Notes:
o70 supports a single RXAUI interface.  The GMX1 version is not supported and should not be
documented.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RX_HG2_STATUS
 * 
 *  ** HG2 message CSRs
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RX_HG2_STATUS   Address=(0x1180008000548+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ     NS         NS         Reserved.                                         
 <47:32> PHTIM2GO RO/H    0x0        NS         Physical time to go for removal of physical link  
                                                pause. Initial value from received HiGig2 msg pkt
                                                Non-zero only when physical back pressure active
 <31:16> XOF      RO/H    0x0        0x0        16 bit xof back pressure vector from HiGig2 msg pkt
                                                or from CBFC packets.
                                                Non-zero only when logical back pressure is active
                                                All bits will be 0 when LGTIM2GO=0
 <15:0>  LGTIM2GO RO/H    0x0        NS         Logical packet flow back pressure time remaining  
                                                Initial value set from xof time field of HiGig2
                                                message packet received or a function of the
                                                enabled and current timers for CBFC packets.
                                                Non-zero only when logical back pressure is active

Notes:
o70 supports a single RXAUI interface.  The GMX1 version is not supported and should not be
documented.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_HG2_CONTROL
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_HG2_CONTROL   Address=(0x1180008000550+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:19> NS       RAZ     NS         NS         Reserved.                                         
 <18>    HG2TX_EN R/W     0x0        0x0        Enable Transmission of HG2 phys and logl messages 
                                                When set, also disables HW auto-generated (802.3
                                                and CBFC) pause frames. (OCTEON cannot generate
                                                proper 802.3 or CBFC pause frames in HiGig2 mode.)
 <17>    HG2RX_EN R/W     0x0        0x0        Enable extraction and processing of HG2 message   
                                                packet from RX flow. Physical logical pause info
                                                is used to pause physical link, back pressure PKO
                                                HG2RX_EN must be set when HiGig2 messages are
                                                present in the receive stream.
 <16>    PHYS_EN  R/W     0x1        NS         1 bit physical link pause enable for recevied     
                                                HiGig2 physical pause message
 <15:0>  LOGL_EN  R/W     0xffff     NS         16 bit xof enables for recevied HiGig2 messages   
                                                or CBFC packets

Notes:
o70 supports a single RXAUI interface.  The GMX1 version is not supported and should not be
documented.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_HG2_REG1
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX_HG2_REG1   Address=(0x1180008000558+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS     RAZ     NS         NS         Reserved.                                         
 <15:0>  TX_XOF R/W1S   0x0        NS         TX HiGig2 message for logical link pause when any 
                                              bit value changes
                                              Only write in HiGig2 mode i.e. when
                                              GMX_TX_XAUI_CTL[HG_EN]=1 and
                                              GMX_RX_UDD_SKP[LEN]=16.

Notes:
o70 supports a single RXAUI interface.  The GMX1 version is not supported and should not be
documented.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_HG2_REG2
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX_HG2_REG2   Address=(0x1180008000560+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS     RAZ     NS         NS         Reserved.                                         
 <15:0>  TX_XON R/W1C   0x0        NS         TX HiGig2 message for logical link pause when any 
                                              bit value changes
                                              Only write in HiGig2 mode i.e. when
                                              GMX_TX_XAUI_CTL[HG_EN]=1 and
                                              GMX_RX_UDD_SKP[LEN]=16.

Notes:
o70 supports a single RXAUI interface.  The GMX1 version is not supported and should not be
documented.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_PRT_CBFC_CTL
 * 
 *  ** HG2 message CSRs end
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_PRT(0..0)_CBFC_CTL   Address=(0x1180008000580+a*0x8000000+b*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> PHYS_EN R/W     0xff       0xff       Determines which ports will have physical         
                                               backpressure pause packets.
                                               The value pplaced in the Class Enable Vector
                                               field of the CBFC pause packet will be
                                               PHYS_EN | LOGL_EN
 <47:32> LOGL_EN R/W     0xff       0xff       Determines which ports will have logical          
                                               backpressure pause packets.
                                               The value pplaced in the Class Enable Vector
                                               field of the CBFC pause packet will be
                                               PHYS_EN | LOGL_EN
 <31:16> PHYS_BP R/W     0xffff     NS         When RX_EN is set and the HW is backpressuring any
                                               ports (from either CBFC pause packets or the
                                               GMX_TX_OVR_BP[TX_PRT_BP] register) and all ports
                                               indiciated by PHYS_BP are backpressured, simulate
                                               physical backpressure by defering all packets on
                                               the transmitter.
 <15:4>  NS      RAZ     NS         NS         Reserved.                                         
 <3>     BCK_EN  R/W     0x0        0x0        Forward CBFC Pause information to BP block        
 <2>     DRP_EN  R/W     0x0        0x0        Drop Control CBFC Pause Frames                    
 <1>     TX_EN   R/W     0x0        0x0        When set, allow for CBFC Pause Packets            
                                               Must be clear in HiGig2 mode i.e. when
                                               GMX_TX_XAUI_CTL[HG_EN]=1 and
                                               GMX_RX_UDD_SKP[LEN]=16.
 <0>     RX_EN   R/W     0x0        0x0        When set, allow for CBFC Pause Packets            
                                               Must be clear in HiGig2 mode i.e. when
                                               GMX_TX_XAUI_CTL[HG_EN]=1 and
                                               GMX_RX_UDD_SKP[LEN]=16.

Notes:
o70 supports a single RXAUI interface.  The GMX1 version is not supported and should not be
documented.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_CBFC_XOFF
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX(0..0)_CBFC_XOFF   Address=(0x11800080005A0+a*0x8000000+b*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:0>  XOFF  R/W1S/H 0x0        0x0        Which ports to backpressure                       
                                             Do not write in HiGig2 mode i.e. when
                                             GMX_TX_XAUI_CTL[HG_EN]=1 and
                                             GMX_RX_UDD_SKP[LEN]=16.

Notes:
o70 supports a single RXAUI interface.  The GMX1 version is not supported and should not be
documented.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TX_CBFC_XON
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TX(0..0)_CBFC_XON   Address=(0x11800080005C0+a*0x8000000+b*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:0>  XON   R/W1C/H 0x0        0x0        Which ports to stop backpressure                  
                                             Do not write in HiGig2 mode i.e. when
                                             GMX_TX_XAUI_CTL[HG_EN]=1 and
                                             GMX_RX_UDD_SKP[LEN]=16.

Notes:
o70 supports a single RXAUI interface.  The GMX1 version is not supported and should not be
documented.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_RXAUI_CTL
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_RXAUI_CTL   Address=(0x1180008000740+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS        RAZ     NS         NS         Reserved.                                         
 <0>     DISPARITY R/W     0x0        NS         Selects which disparity calculation to use when   
                                                 combining or splitting the RXAUI lanes.
                                                 0=Interleave lanes before PCS layer
                                                 As described in the Dune Networks/Broadcom
                                                 RXAUI v2.1 specification.
                                                 (obeys 6.25GHz SERDES disparity)
                                                 1=Interleave lanes after PCS layer
                                                 As described in the Marvell RXAUI Interface
                                                 specification.
                                                 (does not obey 6.25GHz SERDES disparity)
                                                 (RXAUI mode only)

Notes:
o70 supports a single RXAUI interface.  The GMX1 version is not supported and should not be
documented.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_QSGMII_CTL
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_QSGMII_CTL   Address=(0x1180008000760+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS        RAZ     NS         NS         Reserved.                                         
 <0>     DISPARITY R/W     0x0        NS         When set, enables enables the running disparity check at the receiver.  Due to the nature
                                                 of QSGMII, bit errors on the link may cause a running disparity error to propogate across
                                                 ports. Disabling running disparity checking at the receiver prevents error propogation to
                                                 other ports.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_WOL_CTL
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_WOL_CTL   Address=(0x1180008000780+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS        RAZ     NS         NS         Reserved.                                         
 <47:36> NS        RAZ     NS         NS         Reserved.                                         
 <35:32> MAGIC_EN  R/W     0x0        NS         Port enable for magic pkt WOL event detection.    
 <31:20> NS        RAZ     NS         NS         Reserved.                                         
 <19:16> DIRECT_EN R/W     0x0        NS         Port enable for directed pkt WOL event detection. 
 <15:1>  NS        RAZ     NS         NS         Reserved.                                         
 <0>     EN        R/W     0x0        NS         Enter WOL mode.                                   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_TB_REG
 * 
 *  DON'T PUT IN HRM*
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_TB_REG   Address=(0x11800080007E0+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ     NS         NS         Reserved.                                         
 <0>     WR_MAGIC R/W     0x0        0x0        Enter stats model magic mode                      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_CLK_EN
 * 
 *  DON'T PUT IN HRM*
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_CLK_EN   Address=(0x11800080007F0+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS     RAZ     NS         NS         Reserved.                                         
 <0>     CLK_EN R/W/H   0x0        0x0        Force the clock enables on                        
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GMX_INF_MODE = Interface Mode
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$GMX(0..1)_INF_MODE   Address=(0x11800080007F8+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:20> NS    RAZ     NS         NS         Reserved.                                         
 <19:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:12> NS    RAZ     NS         NS         Reserved.                                         
 <11:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:6>   NS    RAZ     NS         NS         Reserved.                                         
 <5:4>   MODE  R/W     0x0        NS         Interface Operating Mode.  Enumerated by GMX_INF_MODE_E.
                                             MODE should be written before any of the DLM registers are written and the EN is asserted.
 <3:2>   NS    RAZ     NS         NS         Reserved.                                         
 <1>     EN    R/W     0x0        NS         Interface Enable                                  
                                             Must be set to enable the packet interface.
                                             Should be enabled before any other requests to
                                             GMX including enabling port back pressure with
                                             IPD_CTL_STATUS[PBP_EN]
 <0>     NS    RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the gser.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

 * 
 * GSER_DLM_MISC_STATUS = GSER DLM Miscellaneous Status Register
 * 
 *  DLM0 Miscellaneous Status.
 * 
$GSER(0)_DLM(0)_MISC_STATUS   Address=(0x1180090000000+a+b*0x80000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:9>  NS        RAZ     NS         NS         Reserved.                                         
 <8>     TX1_UFLOW R/W1C/H 0x0        NS         When set, indicates transmit FIFO underflow       
                                                 has occured on lane 1.
 <7:1>   NS        RAZ     NS         NS         Reserved.                                         
 <0>     TX0_UFLOW R/W1C/H 0x0        NS         When set, indicates transmit FIFO underflow       
                                                 has occured on lane 0.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_DLM_REFCLK_SEL = GSER DLM Reference Clock Select Register
 * 
 *  DLM Reference Clock Select.
 * 
$GSER(0)_DLM(0..2)_REFCLK_SEL   Address=(0x1180090000008+a+b*0x80000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS         RAZ     NS         NS         Reserved.                                         
 <0>     REFCLK_SEL R/W     0x0        NS         When clear, selects common reference clock 0.     
                                                  When set, selects common reference clock 1.
                                                  GSER0_DLMn_REF_USE_PAD[REF_USE_PAD] must be clear
                                                  to select either common reference clock.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_DLM_MPLL_STATUS = GSER DLM MPLL Status Register
 * 
 *  DLM PLL Lock Status.
 * 
$GSER(0)_DLM(0..2)_MPLL_STATUS   Address=(0x1180090001000+a+b*0x80000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS          RAZ     NS         NS         Reserved.                                         
 <0>     MPLL_STATUS RO/H    0x0        NS         This is the lock status of the PHY PLL.  When asserted,
                                                   it indicates the PHY's MPLL has reached a stable, running
                                                   state.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_DLM_LOOPBK_EN = GSER DLM Loopback Enable Register
 * 
 *  DLM0 Tx-to-Rx Loopback Enable.
 * 
$GSER(0)_DLM(0)_LOOPBK_EN   Address=(0x1180090001008+a+b)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field           Field   Reset      Typical    Field                                             
 Pos     Name            Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:9>  NS              RAZ     NS         NS         Reserved.                                         
 <8>     LANE1_LOOPBK_EN R/W     0x0        NS         Lane 1 Tx-to-Rx Loopback Enable.  When this signal is
                                                       asserted, data from the transmit predriver is looped back
                                                       to the receive slivers.  LOS is bypassed and based on the
                                                       txN_en input so that rxN_los = !txN_data_en.
 <7:1>   NS              RAZ     NS         NS         Reserved.                                         
 <0>     LANE0_LOOPBK_EN R/W     0x0        NS         Lane 0 Tx-to-Rx Loopback Enable.  When this signal is
                                                       asserted, data from the transmit predriver is looped back
                                                       to the receive slivers.  LOS is bypassed and based on the
                                                       txN_en input so that rxN_los = !txN_data_en.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_DLM_LOS_BIAS = GSER DLM LOS Bias Register
 * 
 *  DLM Loss-of-Signal Detector Threshold Level Control.
 * 
$GSER(0)_DLM(0..2)_LOS_BIAS   Address=(0x1180090001010+a+b*0x80000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:3>  NS       RAZ     NS         NS         Reserved.                                         
 <2:0>   LOS_BIAS R/W/H   0x2        NS         A positive, binary bit setting change results in a
                                                +15mVp incremental change in the LOS threshold.  A negative
                                                bit setting change results in a -15-mVp incremental change
                                                in the LOS threshold.  The 3'b000 setting is reserved and
                                                must not be used.
                                                0x0: Reserved
                                                0x1: 120 mV (default CEI)
                                                0x2: 135 mV (default PCIe/SATA)
                                                0x3: 150 mV
                                                0x4:  45 mV
                                                0x5:  60 mV
                                                0x6:  75 mV
                                                0x7:  90 mV
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_DLM_LOS_LEVEL = GSER DLM LOS Level Register
 * 
 *  DLM Loss-of-Signal Sensitivity Level Contol.
 * 
$GSER(0)_DLM(0..2)_LOS_LEVEL   Address=(0x1180090001018+a+b*0x80000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:5>  NS        RAZ     NS         NS         Reserved.                                         
 <4:0>   LOS_LEVEL R/W     0x9        NS         Sets the sesitivity level for the Loss-of-Signal  
                                                 detector.  This signal must be set to 5'b01001.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_DLM_MPLL_EN = GSER DLM MPLL Enable Register
 * 
 *  DLM0 PHY PLL Enable.
 * 
$GSER(0)_DLM(0)_MPLL_EN   Address=(0x1180090001020+a+b)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS      RAZ     NS         NS         Reserved.                                         
 <0>     MPLL_EN R/W     0x0        NS         When deasserted, the MPLL is off and the PHY is in P2 state.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_DLM_MPLL_HALF_RATE = GSER DLM MPLL Half Rate Register
 * 
 *  DLM MPLL Low-Power Mode Enable.
 * 
$GSER(0)_DLM(0..2)_MPLL_HALF_RATE   Address=(0x1180090001028+a+b*0x80000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field          Field   Reset      Typical    Field                                             
 Pos     Name           Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS             RAZ     NS         NS         Reserved.                                         
 <0>     MPLL_HALF_RATE R/W     0x0        NS         Enables a low-power mode feature for the MPLL block.  This signal
                                                      should be asserted only when the MPLL is operating at a clock rate
                                                      less than or equal to 1.5626 GHz.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_DLM_MPLL_MULTIPLIER = GSER DLM MPLL Multiplier Register
 * 
 *  DLM MPLL Frequency Multiplier Control.
 * 
$GSER(0)_DLM(0..2)_MPLL_MULTIPLIER   Address=(0x1180090001030+a+b*0x80000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field           Field   Reset      Typical    Field                                             
 Pos     Name            Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:7>  NS              RAZ     NS         NS         Reserved.                                         
 <6:0>   MPLL_MULTIPLIER R/W/H   0x0        NS         Multiples the reference clock to a frequency suitable for
                                                       intended operating speed.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_DLM_PHY_RESET = GSER DLM Phy Reset Register
 * 
 *  DLM Core and State Machine Reset.
 * 
$GSER(0)_DLM(0..2)_PHY_RESET   Address=(0x1180090001038+a+b*0x80000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS        RAZ     NS         NS         Reserved.                                         
 <0>     PHY_RESET R/W     0x1        NS         Resets the core and all state machines with the exception of the
                                                 reference clock buffer and JTAG interface.  Asserting PHY_RESET
                                                 triggers the assertion of teh Tx and Rx reset signals.  Power
                                                 and clocks are required before deasserting PHY_RESET.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_DLM_REF_CLKDIV2 = GSER DLM Reference CLKDIV2 Register
 * 
 *  DLM Input Reference Clock Divider Control.
 * 
$GSER(0)_DLM(0..2)_REF_CLKDIV2   Address=(0x1180090001040+a+b*0x80000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS          RAZ     NS         NS         Reserved.                                         
 <0>     REF_CLKDIV2 R/W     0x0        NS         If the input reference clock is greater than 100Mhz, this signal must
                                                   be asserted.  The reference clock frequency is then divided by 2 to
                                                   keep it in the range required by the MPLL.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_DLM_REF_SSP_EN = GSER DLM REF_SSP Enable Register
 * 
 *  DLM0 Reference Clock Enable for the PHY.
 * 
$GSER(0)_DLM(0)_REF_SSP_EN   Address=(0x1180090001048+a+b)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS         RAZ     NS         NS         Reserved.                                         
 <0>     REF_SSP_EN R/W     0x0        NS         Enables the PHY's internal reference clock.       
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_DLM_REF_USE_PAD = GSER DLM Reference USE PAD Register
 * 
 *  DLM Select Reference Clock.
 * 
$GSER(0)_DLM(0..2)_REF_USE_PAD   Address=(0x1180090001050+a+b*0x80000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS          RAZ     NS         NS         Reserved.                                         
 <0>     REF_USE_PAD R/W     0x0        NS         When asserted, selects the external ref_pad_clk_{p,m}
                                                   inputs as the reference clock sourse.  When deasserted,
                                                   ref_alt_clk_{p,m} are selected from an on-chip
                                                   source of the reference clock.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_DLM_TEST_BYPASS = GSER DLM Test Bypass Register
 * 
 *  DLM Test Bypass.
 * 
$GSER(0)_DLM(0..2)_TEST_BYPASS   Address=(0x1180090001058+a+b*0x80000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS          RAZ     NS         NS         Reserved.                                         
 <0>     TEST_BYPASS R/W     0x0        NS         When asserted, all circuits Power-Down but leave Reference Clock
                                                   Active.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_DLM_TEST_POWERDOWN = GSER DLM Test Power Down Register
 * 
 *  DLM Test Powerdown.
 * 
$GSER(0)_DLM(0..2)_TEST_POWERDOWN   Address=(0x1180090001060+a+b*0x80000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field          Field   Reset      Typical    Field                                             
 Pos     Name           Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS             RAZ     NS         NS         Reserved.                                         
 <0>     TEST_POWERDOWN R/W     0x1        NS         When asserted, Powers down all circuitry in the PHY for IDDQ testing.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_DLM_RX_STATUS = GSER DLM Receive Status Register
 * 
 *  DLM Receive DPLL State Indicator.
 * 
$GSER(0)_DLM(0..2)_RX_STATUS   Address=(0x1180090002000+a+b*0x80000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:9>  NS         RAZ     NS         NS         Reserved.                                         
 <8>     RX1_STATUS RO/H    0x0        NS         Indicates the current state of the Lane 1 receiver DPLL and clock.
                                                  When cleared, rxN_clk can be disabled or not running at its
                                                  target rate.
 <7:1>   NS         RAZ     NS         NS         Reserved.                                         
 <0>     RX0_STATUS RO/H    0x0        NS         Indicates the current state of the Lane 0 receiver DPLL and clock.
                                                  When cleared, rxN_clk can be disabled or not running at its
                                                  target rate.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_DLM_RX_DATA_EN = GSER DLM Receive Data Enable Register
 * 
 *  DLM Receiver Enable.
 * 
$GSER(0)_DLM(0)_RX_DATA_EN   Address=(0x1180090002008+a+b)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:9>  NS          RAZ     NS         NS         Reserved.                                         
 <8>     RX1_DATA_EN R/W     0x0        NS         Enables the clock and data recovery logic fir Lane 1.
 <7:1>   NS          RAZ     NS         NS         Reserved.                                         
 <0>     RX0_DATA_EN R/W     0x0        NS         Enables the clock and data recovery logic for Lane 0.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_DLM_RX_EQ = GSER DLM Receive EQ Register
 * 
 *  DLM Receiver Equalization Setting.
 * 
$GSER(0)_DLM(0..2)_RX_EQ   Address=(0x1180090002010+a+b*0x80000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:11> NS     RAZ     NS         NS         Reserved.                                         
 <10:8>  RX1_EQ R/W     0x0        NS         Selects the amount of equalization in the Lane 1 receiver.
 <7:3>   NS     RAZ     NS         NS         Reserved.                                         
 <2:0>   RX0_EQ R/W     0x0        NS         Selects the amount of equalization in the Lane 0 receiver.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_DLM_RX_LOS_EN = GSER DLM Receive LOS Enable Register
 * 
 *  DLM Loss of Signal Detector Enable.
 * 
$GSER(0)_DLM(0)_RX_LOS_EN   Address=(0x1180090002018+a+b)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:9>  NS         RAZ     NS         NS         Reserved.                                         
 <8>     RX1_LOS_EN R/W     0x0        NS         Lane 1 Loss of Signal Detector Enable.            
 <7:1>   NS         RAZ     NS         NS         Reserved.                                         
 <0>     RX0_LOS_EN R/W     0x0        NS         Lane 0 Loss of Signal Detector Enable.            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_DLM_RX_PLL_EN = GSER DLM Receive PLL Enable Register
 * 
 *  DLM0 DPLL Enable.
 * 
$GSER(0)_DLM(0)_RX_PLL_EN   Address=(0x1180090002020+a+b)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:9>  NS         RAZ     NS         NS         Reserved.                                         
 <8>     RX1_PLL_EN R/W     0x0        NS         Lane 1 Receiver DPLL Enable.                      
 <7:1>   NS         RAZ     NS         NS         Reserved.                                         
 <0>     RX0_PLL_EN R/W     0x0        NS         Lane 0 Receiver DPLL Enable.                      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_DLM_RX_RATE = GSER DLM Receive Rate Register
 * 
 *  DLM0 Rx Data Rate.
 * 
$GSER(0)_DLM(0)_RX_RATE   Address=(0x1180090002028+a+b)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:10> NS       RAZ     NS         NS         Reserved.                                         
 <9:8>   RX1_RATE R/W     0x0        NS         Lane 1 Rx Data Rate                               
                                                00: mpll_baud_clk
                                                01: mpll_baud_clk / 2
                                                10: mpll_baud_clk / 4
                                                11: Not Supported
 <7:2>   NS       RAZ     NS         NS         Reserved.                                         
 <1:0>   RX0_RATE R/W     0x0        NS         Lane 0 Rx Data Rate                               
                                                00: mpll_baud_clk
                                                01: mpll_baud_clk / 2
                                                10: mpll_baud_clk / 4
                                                11: Not Supported
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_DLM_RX_RESET = GSER DLM Receive Reset Register
 * 
 *  DLM0 Receiver Reset.
 * 
$GSER(0)_DLM(0)_RX_RESET   Address=(0x1180090002030+a+b)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:9>  NS        RAZ     NS         NS         Reserved.                                         
 <8>     RX1_RESET R/W     0x1        NS         Lane 1 Receiver Reset.                            
 <7:1>   NS        RAZ     NS         NS         Reserved.                                         
 <0>     RX0_RESET R/W     0x1        NS         Lane 0 Receiver Reset.                            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_DLM_RX_TERM_EN = GSER DLM Receive TERM Enable Register
 * 
 *  DLM0 PMA Receiver Termination.
 * 
$GSER(0)_DLM(0)_RX_TERM_EN   Address=(0x1180090002038+a+b)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:9>  NS          RAZ     NS         NS         Reserved.                                         
 <8>     RX1_TERM_EN R/W     0x0        NS         Lane 1 PMA Receiver Termination.                  
                                                   0: Terminations removed
                                                   1: Terminations present
 <7:1>   NS          RAZ     NS         NS         Reserved.                                         
 <0>     RX0_TERM_EN R/W     0x0        NS         Lane 0 PMA Receiver Termination.                  
                                                   0: Terminations removed
                                                   1: Terminations present
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_DLM_TX_STATUS = GSER DLM Transmit Status Register
 * 
 *  DLM Transmit Common Mode Control Status.
 * 
$GSER(0)_DLM(0..2)_TX_STATUS   Address=(0x1180090003000+a+b*0x80000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field         Field   Reset      Typical    Field                                             
 Pos     Name          Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:10> NS            RAZ     NS         NS         Reserved.                                         
 <9>     TX1_CM_STATUS RO/H    0x0        NS         When asserted, the Lane 1 transmitter differential pair is held to half
                                                     of vptxN durring an electrical IDLE.  Otherwise, weakly held to
                                                     ground through a high impedance connection.
 <8>     TX1_STATUS    RO/H    0x0        NS         Signals when the Lane 1 transmitter is ready to properly sample the
                                                     incoming data for transmission.
 <7:2>   NS            RAZ     NS         NS         Reserved.                                         
 <1>     TX0_CM_STATUS RO/H    0x0        NS         When asserted, the Lane 0 transmitter differential pair is held to half
                                                     of vptxN durring an electrical IDLE.  Otherwise, weakly held to
                                                     ground through a high impedance connection.
 <0>     TX0_STATUS    RO/H    0x0        NS         Signals when the Lane 0 transmitter is ready to properly sample the
                                                     incoming data for transmission.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_DLM_TX_AMPLITUDE = GSER DLM Transmit Amplitude Register
 * 
 *  DLM0 Tx Amplitude (Full Swing Mode).
 * 
$GSER(0)_DLM(0)_TX_AMPLITUDE   Address=(0x1180090003008+a+b)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field         Field   Reset      Typical    Field                                             
 Pos     Name          Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:15> NS            RAZ     NS         NS         Reserved.                                         
 <14:8>  TX1_AMPLITUDE R/W     0x0        NS         This static value sets the lanuch amplitude of the Lane 1 transmitter
                                                     when pipeP_tx_swing is set to 0x7f (default state).
 <7>     NS            RAZ     NS         NS         Reserved.                                         
 <6:0>   TX0_AMPLITUDE R/W     0x0        NS         This static value sets the lanuch amplitude of the Lane 0 transmitter
                                                     when pipeP_tx_swing is set to 0x7f (default state).
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_DLM_TX_CM_EN = GSER DLM Transmit CM Enable Register
 * 
 *  DLM0 Transmit Common-Mode Control Enable.
 * 
$GSER(0)_DLM(0)_TX_CM_EN   Address=(0x1180090003010+a+b)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:9>  NS        RAZ     NS         NS         Reserved.                                         
 <8>     TX1_CM_EN R/W     0x0        NS         Enables the Lane 1 transmitter's common mode hold circuitry.
 <7:1>   NS        RAZ     NS         NS         Reserved.                                         
 <0>     TX0_CM_EN R/W     0x0        NS         Enables the lane 0 transmitter's common mode hold circuitry.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_DLM_TX_DATA_EN = GSER DLM Transmit Data Enable Register
 * 
 *  DLM0 Transmit Driver Enable.
 * 
$GSER(0)_DLM(0)_TX_DATA_EN   Address=(0x1180090003018+a+b)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:9>  NS          RAZ     NS         NS         Reserved.                                         
 <8>     TX1_DATA_EN R/W     0x0        NS         Enables the Lane 1 primary transmitter driver for serial data.
 <7:1>   NS          RAZ     NS         NS         Reserved.                                         
 <0>     TX0_DATA_EN R/W     0x0        NS         Enables the Lane 0 primary transmitter driver for serial data.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_DLM_TX_EN = GSER DLM Transmit Enable Register
 * 
 *  DLM Transmit Clocking and Data Sampling Enable.
 * 
$GSER(0)_DLM(0)_TX_EN   Address=(0x1180090003020+a+b)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:9>  NS     RAZ     NS         NS         Reserved.                                         
 <8>     TX1_EN R/W     0x0        NS         Enables the Lane 1 transmit clock path and Tx word alignment.
 <7:1>   NS     RAZ     NS         NS         Reserved.                                         
 <0>     TX0_EN R/W     0x0        NS         Enables the Lane 0 transmit clock path and Tx word alignment.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_DLM_TX_PREEMPH = GSER DLM Transmit Pre-Emphasis Register
 * 
 *  DLM0 Tx Deemphasis.
 * 
$GSER(0)_DLM(0)_TX_PREEMPH   Address=(0x1180090003028+a+b)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:15> NS          RAZ     NS         NS         Reserved.                                         
 <14:8>  TX1_PREEMPH R/W     0x0        NS         Sets the Lane 1 Tx driver de-emphasis value to meet the Tx eye mask.
 <7>     NS          RAZ     NS         NS         Reserved.                                         
 <6:0>   TX0_PREEMPH R/W     0x0        NS         Sets the Lane 0 Tx driver de-emphasis value to meet the Tx eye mask.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_DLM_TX_RATE = GSER DLM Transmit Rate Register
 * 
 *  DLM0 Tx Data Rate.
 * 
$GSER(0)_DLM(0)_TX_RATE   Address=(0x1180090003030+a+b)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:10> NS       RAZ     NS         NS         Reserved.                                         
 <9:8>   TX1_RATE R/W     0x0        NS         Selects the Lane 1 baud rate for the transmit path.
                                                00: baud
                                                01: baud / 2
                                                10: baud / 4
                                                11: Not supported
 <7:2>   NS       RAZ     NS         NS         Reserved.                                         
 <1:0>   TX0_RATE R/W     0x0        NS         Selects the Lane 0 baud rate for the transmit path.
                                                00: baud
                                                01: baud / 2
                                                10: baud / 4
                                                11: Not supported
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_DLM_TX_RESET = GSER DLM Transmit Reset Register
 * 
 *  DLM0 Tx Reset.
 * 
$GSER(0)_DLM(0)_TX_RESET   Address=(0x1180090003038+a+b)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:9>  NS        RAZ     NS         NS         Reserved.                                         
 <8>     TX1_RESET R/W     0x1        NS         Resets all Lane 1 transmitter settings and state machines.
 <7:1>   NS        RAZ     NS         NS         Reserved.                                         
 <0>     TX0_RESET R/W     0x1        NS         Resets all Lane 0 transmitter settings and state machines.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_DLM_TX_TERM_OFFSET = GSER DLM Transmit Term Offset Register
 * 
 *  DLM Transmitter Termination Offset.
 *  Attribute: -dv_fc_scratch=a.
 * 
$GSER(0)_DLM(0..2)_TX_TERM_OFFSET   Address=(0x1180090003040+a+b*0x80000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field           Field   Reset      Typical    Field                                             
 Pos     Name            Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:13> NS              RAZ     NS         NS         Reserved.                                         
 <12:8>  TX1_TERM_OFFSET R/W     0x0        NS         Applies an offset to the Lande 1 resistor calibration value.  Not to be
                                                       used during normal operation.
 <7:5>   NS              RAZ     NS         NS         Reserved.                                         
 <4:0>   TX0_TERM_OFFSET R/W     0x0        NS         Applies an offset to the Lane 0 resistor calibration value.  Not to be
                                                       used during normal operation.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_PCIE_PIPE_STATUS = GSER PCIE Pipe Status Register
 * 
 *  PCIE PIPE Status.
 * 
$GSER(0)_PCIE_PIPE_STATUS   Address=(0x1180090080400+a)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field         Field   Reset      Typical    Field                                             
 Pos     Name          Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS            RAZ     NS         NS         Reserved.                                         
 <3>     PIPE3_CLKREQN RO      0x1        NS         When asserted, indicates that the PCS/PHY layer is in a mode where
                                                     reference clocks are required.  When deasserted, the PIPE PCS is
                                                     powered down into a state where the external reference clocks can
                                                     be turned off.
 <2>     PIPE2_CLKREQN RO      0x1        NS         When asserted, indicates that the PCS/PHY layer is in a mode where
                                                     reference clocks are required.  When deasserted, the PIPE PCS is
                                                     powered down into a state where the external reference clocks can
                                                     be turned off.
 <1>     PIPE1_CLKREQN RO      0x1        NS         When asserted, indicates that the PCS/PHY layer is in a mode where
                                                     reference clocks are required.  When deasserted, the PIPE PCS is
                                                     powered down into a state where the external reference clocks can
                                                     be turned off.
 <0>     PIPE0_CLKREQN RO      0x1        NS         When asserted, indicates that the PCS/PHY layer is in a mode where
                                                     reference clocks are required.  When deasserted, the PIPE PCS is
                                                     powered down into a state where the external reference clocks can
                                                     be turned off.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_PCIE_TX_DEEMPH_GEN1 = GSER PCIE Transmit GEN1 Deemphsis Register
 * 
 *  PCIE Tx De-emphasis at 3.5 dB.
 * 
$GSER(0)_PCIE_TX_DEEMPH_GEN1   Address=(0x1180090080408+a)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field          Field   Reset      Typical    Field                                             
 Pos     Name           Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  NS             RAZ     NS         NS         Reserved.                                         
 <5:0>   TX_DEEMPH_GEN1 R/W     0x18       NS         This static value sets the launch amplitude of the transmitter
                                                      when pipeP_tx_swing is set to 0x0 (default state). Used for
                                                      tuning at the board level for Rx eye compliance.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_PCIE_TX_DEEMPH_GEN2_3P5DB = GSER PCIE Transmit 3P5DB Deemphsis Register
 * 
 *  PCIE Tx De-emphasis at 3.5 dB.
 *  Attribute: -exempt_name_length=True.
 * 
$GSER(0)_PCIE_TX_DEEMPH_GEN2_3P5DB   Address=(0x1180090080410+a)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field                Field   Reset      Typical    Field                                             
 Pos     Name                 Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  NS                   RAZ     NS         NS         Reserved.                                         
 <5:0>   TX_DEEMPH_GEN2_3P5DB R/W     0x18       NS         This static value sets the Tx driver deemphasis value in the case where
                                                            pipeP_tx_deemph is set to 1'b1 (default setting) and the PHY is running
                                                            at the Gen2 rate. Used for tuning at the board level for Rx eye compliance.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_PCIE_TX_DEEMPH_GEN2_6DB = GSER PCIE Transmit GEN2 6DB Deemphsis Register
 * 
 *  PCIE Tx De-emphasis at 6 dB.
 * 
$GSER(0)_PCIE_TX_DEEMPH_GEN2_6DB   Address=(0x1180090080418+a)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field              Field   Reset      Typical    Field                                             
 Pos     Name               Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  NS                 RAZ     NS         NS         Reserved.                                         
 <5:0>   TX_DEEMPH_GEN2_6DB R/W     0x23       NS         This static value sets the Tx driver deemphasis value in the case where
                                                          pipeP_tx_deemph is set to 1'b0 and the PHY is running at the Gen2 rate.
                                                          Used for tuning at the board level for Rx eye compliance.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_PCIE_TX_SWING_FULL = GSER PCIE Transmit Swing Full Register
 * 
 *  PCIE Tx Amplitude (Full Swing Mode).
 * 
$GSER(0)_PCIE_TX_SWING_FULL   Address=(0x1180090080420+a)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:7>  NS          RAZ     NS         NS         Reserved.                                         
 <6:0>   TX_SWING_HI R/W     0x7f       NS         This static value sets the launch amplitude of the transmitter when
                                                   pipeP_tx_swing is set to 1'b0 (default state).  Used for tuning at
                                                   the board level for Rx eye compliance.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_PCIE_TX_SWING_LOW = GSER PCIE Transmit Swing Low Register
 * 
 *  PCIE Tx Amplitude (Low Swing Mode).
 * 
$GSER(0)_PCIE_TX_SWING_LOW   Address=(0x1180090080428+a)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:7>  NS          RAZ     NS         NS         Reserved.                                         
 <6:0>   TX_SWING_LO R/W     0x79       NS         This static value sets the launch amplitude of the transmitter when
                                                   pipeP_tx_swing is set to 1'b1 (low swing mode).  Used for tuning at
                                                   the board level for Rx eye compliance.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_PCIE_TX_VBOOST_LVL = GSER PCIE Transmit Voltage Boost Level Register
 * 
 *  PCIE Tx Voltage Boost Level.
 * 
$GSER(0)_PCIE_TX_VBOOST_LVL   Address=(0x1180090080440+a)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field         Field   Reset      Typical    Field                                             
 Pos     Name          Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:3>  NS            RAZ     NS         NS         Reserved.                                         
 <2:0>   TX_VBOOST_LVL R/W     0x4        NS         Controls the launch amplitude only when VPTX is less than the launch
                                                     amplitude correspnding to tx_vboost_lvl.  Valid settings:
                                                     011: Corresponds to a launch amplitude of 0.844V
                                                     100: Corresponds to a launch amplitude of 1.008V
                                                     101: Corresponds to a launch amplitude of 1.156V.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_PCIE_PIPE_RST = GSER PCIE Pipe Reset Register
 * 
 *  PCIE PIPE Reset.
 * 
$GSER(0)_PCIE_PIPE_RST   Address=(0x1180090080448+a)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS        RAZ     NS         NS         Reserved.                                         
 <3>     PIPE3_RST R/W     0x1        NS         Pipe 3 Reset.  Setting this bit will put Pipe 3 into reset.
                                                 PEM2 is always tied to Pipe 3.
 <2>     PIPE2_RST R/W     0x1        NS         Pipe 2 Reset.  Setting this bit will put Pipe 2 into reset.
                                                 PEM1 is tied to Pipe 2 in 3x1 PCIe mode (GSER_PCIE_PIPE_PORT_SEL.PIPE_PORT_SEL
                                                 is set to 4-pipe mode, and GSER_PCIE_PIPE_PORT_SEL.CFG_PEM1_DLM2 is also set).
 <1>     PIPE1_RST R/W     0x1        NS         Pipe 1 Reset.  Setting this bit will put Pipe 1 into reset.
                                                 PEM1 is tied to Pipe 1 in 2x2 PCIe or 2x1 PCIe with SATA modes.
 <0>     PIPE0_RST R/W/H   0x0        NS         Pipe 0 Reset.  Setting this bit will put Pipe 0 into reset.
                                                 PEM0 is always tied to Pipe 0.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_PCIE_PIPE_RST_STS = GSER PCIE Pipe Reset Status Register
 * 
 *  PCIE PIPE Status Reset.
 * 
$GSER(0)_PCIE_PIPE_RST_STS   Address=(0x1180090080450+a)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS        RAZ     NS         NS         Reserved.                                         
 <3>     PIPE3_RST RO      0x0        NS         Reflects the current state of the pipe3_rst_n which includes
                                                 the rst__pem2_pcs_rst_n term from the reset controller.  Note that
                                                 when PIPE3_RST is asserted (active low), no Pipe clocks are generated
                                                 to PEM3 and any RSL reads to the application side registers will time out.
 <2>     PIPE2_RST RO      0x0        NS         Reflects the current state of the pipe2_rst_n which includes
                                                 the rst__pem2_pcs_rst_n term from the reset controller.  Note that
                                                 when PIPE2_RST is asserted (active low) and PEM1 is being used in
                                                 3x1 PCIe mode (4-Pipe Mode with CFG_PEM1_DLM2 set), no Pipe clocks
                                                 are generated to PEM1 and any RSL reads to the application side
                                                 registers will time out.
 <1>     PIPE1_RST RO      0x0        NS         Reflects the current state of the pipe1_rst_n which includes
                                                 the rst__pem1_pcs_rst_n term from the reset controller.  Note that
                                                 when PIPE1_RST is asserted (active low) and PEM1 is being used in
                                                 2x2 PCIe or 2x1 PCIe with SATA, no Pipe clocks are generated to PEM1
                                                 and any RSL reads to the application side registers will time out.
 <0>     PIPE0_RST RO      NS         NS         Reflects the current state of the pipe0_rst_n which includes
                                                 the rst__pem0_pcs_rst_n term from the reset controller.  Note that
                                                 when PIPE0_RST is asserted (active low), no Pipe clocks are generated
                                                 to PEM0 and any RSL reads to the application side registers will time out.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_PCIE_PIPE_CRST = GSER PCIE Pipe Reset Register
 * 
 *  PCIE PIPE Cold Reset.
 * 
$GSER(0)_PCIE_PIPE_CRST   Address=(0x1180090080458+a)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS        RAZ     NS         NS         Reserved.                                         
 <0>     PIPE_CRST R/W     0x0        NS         PCIE PIPE Async Cold Reset Contol.                
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_PCIE_PIPE_PORT_SEL = GSER PCIE Pipe Port Select Register
 * 
 *  PCIE PIPE Enable Request.
 * 
$GSER(0)_PCIE_PIPE_PORT_SEL   Address=(0x1180090080460+a)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field         Field   Reset      Typical    Field                                             
 Pos     Name          Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:3>  NS            RAZ     NS         NS         Reserved.                                         
 <2>     CFG_PEM1_DLM2 R/W     0x0        NS         The PIPE (Pipe1 or Pipe2) and PHY (DLM1 or DLM2) configuration for PEM1
                                                     when in 4-Pipe Mode.
                                                     This bit should not be set in Single Pipe or 2-Pipe Mode.
                                                     0: PEM1 is tied to Pipe1/DLM1.  This is 3x1 PCIe mode when all 4 PIPES are enabled.
                                                     1: PEM1 is tied to Pipe2/DLM2.  This is 2x1 PCIe mode with SATA
 <1:0>   PIPE_PORT_SEL R/W     0x0        NS         PIPE enable request.  Change only when phy_reset is asserted.
                                                     00: Disables all PIPEs
                                                     01: Single Pipe Mode. Enables PIPE0 (PEM0) only.
                                                         This is 1x4 PCIe mode.
                                                     10: 2-Pipe Mode.  Enables PIPEs 0 (PEM0) and 1 (PEM1).
                                                         This is 2x2 PCIe mode or 1x2 PCIe mode with SATA.
                                                     11: 4-Pipe Mode. Enables PIPEs 0 (PEM0), 1, 2 (PEM1), and 3 (PEM2).
                                                         This is 2x1 PCIe mode with SATA or 3x1 PCIe mode.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_PCIE_PIPE_PORT_LOOPBK = GSER PCIE Pipe Port Loopback Register
 * 
 *  PCIE Tx-to-Rx Loopback Enable.
 * 
$GSER(0)_PCIE_PIPE_PORT_LOOPBK   Address=(0x1180090080468+a)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field        Field   Reset      Typical    Field                                             
 Pos     Name         Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS           RAZ     NS         NS         Reserved.                                         
 <3>     PIPE3_LOOPBK R/W     0x0        NS         When this signal is asserted, data from the PIPE3 transmit predriver
                                                    is looped back to the receive slicers.  LOS is bypassed and based on
                                                    the TxN_en input so that rxN_los !txN_data_en.
 <2>     PIPE2_LOOPBK R/W     0x0        NS         When this signal is asserted, data from the PIPE2 transmit predriver
                                                    is looped back to the receive slicers.  LOS is bypassed and based on
                                                    the TxN_en input so that rxN_los !txN_data_en.
 <1>     PIPE1_LOOPBK R/W     0x0        NS         When this signal is asserted, data from the PIPE1 transmit predriver
                                                    is looped back to the receive slicers.  LOS is bypassed and based on
                                                    the TxN_en input so that rxN_los !txN_data_en.
 <0>     PIPE0_LOOPBK R/W     0x0        NS         When this signal is asserted, data from the PIPE0 transmit predriver
                                                    is looped back to the receive slicers.  LOS is bypassed and based on
                                                    the TxN_en input so that rxN_los !txN_data_en.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_PCIE_PIPE_COM_CLK = GSER PCIE Pipe Common Clock Register
 * 
 *  PCIE Select Common Clock Mode for Receive Data Path.
 * 
$GSER(0)_PCIE_PIPE_COM_CLK   Address=(0x1180090080470+a)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS      RAZ     NS         NS         Reserved.                                         
 <0>     COM_CLK R/W     0x0        NS         When both ends of a PCIe link share a common reference clock, the
                                               latency through the receiver's elasticity buffer can be shorter,
                                               because no frequency offset exists between the two ends of the link.
                                               Assert this control only if all physical lanes of the PHY are
                                               guaranteed to be connected to links that share a common reference
                                               clock.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_PCIE_PCS_CLK_REQ = GSER PCIE Pipe PCS Clock Request
 * 
 *  PCIE PIPE Clock Required
 * 
$GSER(0)_PCIE_PCS_CLK_REQ   Address=(0x1180090080478+a)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS      RAZ     NS         NS         Reserved.                                         
 <0>     CLK_REQ R/W     0x0        NS         When asserted, indicates that the external logic requires the PHY's
                                               PCLK to remain active, preventing the PIPE PCS from powering off
                                               that clock while in the P2 state.
                                               Note, the PCS hangs if this bit is asserted when a Fundamental Reset
                                               is issued to the PEM.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_PCIE_PIPE_TXDEEMPH = GSER PCIE Pipe Transmit Deemphsis Register
 * 
 *  PCIE PIPE Transmitter De-emphasis.
 * 
$GSER(0)_PCIE_PIPE(0..3)_TXDEEMPH   Address=(0x1180090080480+a+b*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field         Field   Reset      Typical    Field                                             
 Pos     Name          Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS            RAZ     NS         NS         Reserved.                                         
 <0>     PIPE_TXDEEMPH R/W     0x0        NS         Selects Transmitter De-emphasis.                  
                                                     0: enabled (6 dB / 3.5 dB)
                                                     1: No de-emphasis
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_SATA_STATUS = GSER SATA Status Register
 * 
 *  SATA PHY Ready Status.
 * 
$GSER(0)_SATA_STATUS   Address=(0x1180090100200+a)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:2>  NS     RAZ     NS         NS         Reserved.                                         
 <1>     P1_RDY RO      0x0        NS         PHY Lane 1 is ready to send and receive data.     
 <0>     P0_RDY RO      0x0        NS         PHY Lane 0 is ready to send and receive data.     
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_SATA_CFG = GSER SATA Configuration Register
 * 
 *  SATA Config Enable.
 * 
$GSER(0)_SATA_CFG   Address=(0x1180090100208+a)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS      RAZ     NS         NS         Reserved.                                         
 <0>     SATA_EN R/W     0x0        NS         When set, DLM2 is configured for SATA (as opposed to PCIE).
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_SATA_LANE_RST = GSER SATA Lane Reset Register
 * 
 *  Lane Reset Control.
 * 
$GSER(0)_SATA_LANE_RST   Address=(0x1180090100210+a)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:2>  NS     RAZ     NS         NS         Reserved.                                         
 <1>     L1_RST R/W     0x1        NS         Independent reset for Lane 1.                     
 <0>     L0_RST R/W     0x1        NS         Independent reset for Lane 0.                     
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_SATA_RX_INVERT = GSER SATA Receive Invert Register
 * 
 *  SATA Receive Polarity Inversion.
 * 
$GSER(0)_SATA_RX_INVERT   Address=(0x1180090100218+a)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:2>  NS         RAZ     NS         NS         Reserved.                                         
 <1>     RX1_INVERT R/W     0x0        NS         Instructs the PHY to perform a polarity inversion on the Lane 1
                                                  received data.
                                                  0: PHY does not performs polarity inversion
                                                  1: PHY performs polarity inversion
 <0>     RX0_INVERT R/W     0x0        NS         0: PHY does not performs polarity inversion       
                                                  1: PHY performs polarity inversion
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_SATA_TX_INVERT = GSER SATA Transmit Invert Register
 * 
 *  SATA Transmit Polarity Inversion.
 * 
$GSER(0)_SATA_TX_INVERT   Address=(0x1180090100220+a)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:2>  NS         RAZ     NS         NS         Reserved.                                         
 <1>     TX1_INVERT R/W     0x0        NS         Instructs the PHY to perform a polarity inversion on the Lane 1
                                                  transmitted data.
                                                  0: PHY does not performs polarity inversion
                                                  1: PHY performs polarity inversion
 <0>     TX0_INVERT R/W     0x0        NS         Instructs the PHY to perform a polarity inversion on the Lane 0
                                                  transmitted data.
                                                  0: PHY does not performs polarity inversion
                                                  1: PHY performs polarity inversion
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_SATA_SSC_EN = GSER SATA SSC Enable Register
 * 
 *  SATA Spread Spectrum Disable.
 * 
$GSER(0)_SATA_SSC_EN   Address=(0x1180090100228+a)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS     RAZ     NS         NS         Reserved.                                         
 <0>     SSC_EN R/W     0x0        NS         Enables spread spectrum clock production (0.5% down-spread
                                              at ~31.5 KHz) in the SATA 6G PHY.  If the reference clock
                                              already has spread spectrum applied, this bit must stay
                                              deasserted.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_SATA_SSC_RANGE = GSER SATA SSC Range Register
 * 
 *  SATA Spread Spectrum Range.
 * 
$GSER(0)_SATA_SSC_RANGE   Address=(0x1180090100230+a)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:3>  NS        RAZ     NS         NS         Reserved.                                         
 <2:0>   SSC_RANGE R/W     0x0        NS         Selects the range of spread spectrum modulation when SSC_EN is
                                                 asserted and the PHY is spreading the high-speed transmit clocks.
                                                 Applies a fixed offset to the accumulator.
                                                 000: -4.980 ppm
                                                 001: -4.492 ppm
                                                 010: -4.003 ppm
                                                 011: -2.000 ppm
                                                 100:  4.980 ppm
                                                 101:  4.492 ppm
                                                 110:  4.003 ppm
                                                 111:  2.000 ppm
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_SATA_SSC_CLK_SEL = GSER SATA SSC Clock Select Register
 * 
 *  SATA Spread Spectrum Reference Clock Shifting.
 * 
$GSER(0)_SATA_SSC_CLK_SEL   Address=(0x1180090100238+a)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:9>  NS          RAZ     NS         NS         Reserved.                                         
 <8:0>   SSC_CLK_SEL R/W     0x0        NS         Enables non-standard oscillator frequencies to generate targeted
                                                   MPLL output rates.  Input corresponds to frequency-synthesis
                                                   coefficient.
                                                   [8:6]: modulous - 1
                                                   [5:0] = 2's compliment push amount.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_SATA_P0_TX_PREEMPH_GEN = GSER SATA Port Transmit Preemphsis Gen Register
 * 
 *  SATA Lane 0 Tx Pre-emphasis at Gen 1,2 and 3 Speeds.
 * 
$GSER(0)_SATA_P0_TX_PREEMPH_GEN(1..3)   Address=(0x1180090100400+a+b*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:7>  NS         RAZ     NS         NS         Reserved.                                         
 <6:0>   TX_PREEMPH R/W     0x0        NS         This static value sets the Tx driver de-emphasis value in the
                                                  case where the PHY is running at the Gen1, Gen2, and Gen3
                                                  rates. Used for tuning at the board level for Rx eye compliance.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_SATA_P1_TX_PREEMPH_GEN = GSER SATA Port Transmit Preemphsis Gen Register
 * 
 *  SATA Lane 0 Tx Pre-emphasis at Gen 1,2 and 3 Speeds.
 * 
$GSER(0)_SATA_P1_TX_PREEMPH_GEN(1..3)   Address=(0x1180090100420+a+b*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:7>  NS         RAZ     NS         NS         Reserved.                                         
 <6:0>   TX_PREEMPH R/W     0x0        NS         This static value sets the Tx driver de-emphasis value in the
                                                  case where the PHY is running at the Gen1, Gen2, and Gen3
                                                  rates. Used for tuning at the board level for Rx eye compliance.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_SATA_P0_TX_AMP_GEN = GSER SATA Port Transmit Amplitude Gen Register
 * 
 *  SATA Lane 0 Tx Launch Amplitude at Gen 1,2 and 3 Speeds.
 * 
$GSER(0)_SATA_P0_TX_AMP_GEN(1..3)   Address=(0x1180090100480+a+b*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:7>  NS         RAZ     NS         NS         Reserved.                                         
 <6:0>   TX_AMP_GEN R/W     0x0        NS         This status value sets the Tx driver launch amplitude in the
                                                  case where the PHY is running at the Gen1, Gen2, and Gen3
                                                  rates. Used for tuning at the board level for Rx eye compliance.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_SATA_P1_TX_AMP_GEN = GSER SATA Port Transmit Amplitude Gen Register
 * 
 *  SATA Lane 1 Tx Launch Amplitude at Gen 1,2 and 3 Speeds.
 * 
$GSER(0)_SATA_P1_TX_AMP_GEN(1..3)   Address=(0x11800901004A0+a+b*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:7>  NS         RAZ     NS         NS         Reserved.                                         
 <6:0>   TX_AMP_GEN R/W     0x0        NS         This status value sets the Tx driver launch amplitude in the
                                                  case where the PHY is running at the Gen1, Gen2, and Gen3
                                                  rates. Used for tuning at the board level for Rx eye compliance.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_SATA_REF_SSP_EN = GSER SATA Ref SSP Enable Register
 * 
 *  SATA Reference Clock Enable for the PHY.
 * 
$GSER(0)_SATA_REF_SSP_EN   Address=(0x1180090100600+a)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS         RAZ     NS         NS         Reserved.                                         
 <0>     REF_SSP_EN R/W     0x0        NS         Reference Clock Enable for the PHY.               
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_PHY_IDCODE_LO = GSER PHY ID CODE LO Register
 * 
 *  PHY Version Low.
 * 
$GSER(0)_PHY(0..2)_IDCODE_LO   Address=(0x1180090400000+a+b*0x80000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS        RAZ     NS         NS         Reserved.                                         
 <15:0>  IDCODE_LO RO      0x74cd     NS         The PHY version low.                              
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_PHY_IDCODE_HI = GSER PHY ID CODE HI Register
 * 
 *  PHY Version Hi.
 * 
$GSER(0)_PHY(0..2)_IDCODE_HI   Address=(0x1180090400008+a+b*0x80000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS        RAZ     NS         NS         Reserved.                                         
 <15:0>  IDCODE_HI RO      0x9223     NS         The PHY version high.                             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_PHY_LANE0_TXDEBUG = GSER PHY Lane N TX DEBUG Register
 * 
 *  PHY LANE0 TX DEBUG.
 * 
$GSER(0)_PHY(0..2)_LANE0_TXDEBUG   Address=(0x1180090408080+a+b*0x80000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field           Field   Reset      Typical    Field                                             
 Pos     Name            Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:12> NS              RAZ     NS         NS         Reserved.                                         
 <11:4>  RXDET_MEAS_TIME R/W     0x10       NS         Time to wait for rxdet measurement.               
 <3>     DETRX_ALWAYS    R/W     0x0        NS         Always signals 1 for rx_detect ignoring analog.   
 <2:0>   DTB_SEL         R/W     0x0        NS         Selects data to drive on the DTB.                 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_PHY_LANE0_TX_LBERT_CTL = GSER PHY Lane 0 TX BERT Control Register
 * 
 *  PHY LANE0 TX LBERT Control.
 * 
$GSER(0)_PHY(0..2)_LANE0_TX_LBERT_CTL   Address=(0x11800904080A8+a+b*0x80000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:15> NS       RAZ     NS         NS         Reserved.                                         
 <14:5>  PAT0     R/W     0x0        NS         10-bit pattern for modes that use this field.  Ignored for
                                                other modes.
 <4>     TRIG_ERR R/W     0x0        NS         Single shot inversion of the LSB of the current symbol.
                                                Any write of 1 to this bit will insert an error.
 <3:0>   MODE     R/W     0x0        NS         Pattern to generate.  When changing modes, the field must be set to zero
                                                first.
                                                0: disabled
                                                1: lfsr31     X^31 + X^28 + 1
                                                2: lfsr23     X^23 + X^18 + 1
                                                3: lfsr15     X^15 + X^14 + 1
                                                4: lfsr7      X^7 + X^6 + 1
                                                5: Fixed word (PAT0)
                                                6: DC-balanced word (PAT0, ~PAT0)
                                                7: Word pattern (20-bit)
                                                15-8: Reserved.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_PHY_LANE0_RX_LBERT_CTL = GSER PHY Lane 0 RX LBERT Control Register
 * 
 *  PHY LANE0 RX LBERT Control.
 * 
$GSER(0)_PHY(0..2)_LANE0_RX_LBERT_CTL   Address=(0x11800904080B0+a+b*0x80000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:5>  NS    RAZ     NS         NS         Reserved.                                         
 <4>     SYNC  R/W     0x0        NS         Synchronizes pattern matcher with incoming data.  A write of a 1
                                             to this bit resets the error counter and starts a synchronization of
                                             the PM.  Once this bit is set, there is no need to write the field back
                                             to a zero.
 <3:0>   MODE  R/W     0x0        NS         Pattern to match.  When changing modes, the field must be set to zero
                                             first.  This field should match what was configured for the TX LBERT
                                             Control register.
                                             0: disabled
                                             1: lfsr31     X^31 + X^28 + 1
                                             2: lfsr23     X^23 + X^18 + 1
                                             3: lfsr15     X^15 + X^14 + 1
                                             4: lfsr7      X^7 + X^6 + 1
                                             5: d[n] = d[n-10]
                                             6: d[n] = !d[n-10]
                                             7: d[n] = !d[n-20]
                                             15-8: Reserved.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_PHY_LANE0_RX_LBERT_ERR = GSER PHY Lane 0 RX LBERT Error Register
 * 
 *  PHY LANE0 RX LBERT Error.
 *  A read of this register, or a SYNC from the RX LBERT Control register
 *  resets the error count.  If all bits in this regisert are set, the
 *  error counter has saturated.
 * 
$GSER(0)_PHY(0..2)_LANE0_RX_LBERT_ERR   Address=(0x11800904080B8+a+b*0x80000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15>    OV14  R/W     0x0        NS         If this bit is set, and COUNT[15] is also set, signals a overflow of counter.
 <14:0>  COUNT R/W     0x0        NS         Current error count if OV14 field is active, then multiply count
                                             by 128 to get the actual count.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_PHY_LANE1_TXDEBUG = GSER PHY Lane N TX DEBUG Register
 * 
 *  PHY LANE1 TX DEBUG.
 * 
$GSER(0)_PHY(0..2)_LANE1_TXDEBUG   Address=(0x1180090408880+a+b*0x80000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field           Field   Reset      Typical    Field                                             
 Pos     Name            Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:12> NS              RAZ     NS         NS         Reserved.                                         
 <11:4>  RXDET_MEAS_TIME R/W     0x10       NS         Time to wait for rxdet measurement.               
 <3>     DETRX_ALWAYS    R/W     0x0        NS         Always signals 1 for rx_detect ignoring analog.   
 <2:0>   DTB_SEL         R/W     0x0        NS         Selects data to drive on the DTB.                 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_PHY_LANE1_TX_LBERT_CTL = GSER PHY Lane 1 TX BERT Control Register
 * 
 *  PHY LANE1 RX LBERT Control.
 * 
$GSER(0)_PHY(0..2)_LANE1_TX_LBERT_CTL   Address=(0x11800904088A8+a+b*0x80000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:15> NS       RAZ     NS         NS         Reserved.                                         
 <14:5>  PAT0     R/W     0x0        NS         10-bit pattern for modes that use this field.  Ignored for
                                                other modes.
 <4>     TRIG_ERR R/W     0x0        NS         Single shot inversion of the LSB of the current symbol.
                                                Any write of 1 to this bit will insert an error.
 <3:0>   MODE     R/W     0x0        NS         Pattern to generate.  When changing modes, the field must be set to zero
                                                first.
                                                0: disabled
                                                1: lfsr31     X^31 + X^28 + 1
                                                2: lfsr23     X^23 + X^18 + 1
                                                3: lfsr15     X^15 + X^14 + 1
                                                4: lfsr7      X^7 + X^6 + 1
                                                5: Fixed word (PAT0)
                                                6: DC-balanced word (PAT0, ~PAT0)
                                                7: Word pattern (20-bit)
                                                15-8: Reserved.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_PHY_LANE1_RX_LBERT_CTL = GSER PHY Lane 1 RX LBERT Control Register
 * 
 *  PHY LANE1 TX LBERT Control.
 * 
$GSER(0)_PHY(0..2)_LANE1_RX_LBERT_CTL   Address=(0x11800904088B0+a+b*0x80000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS    RAZ     NS         NS         Reserved.                                         
 <3>     SYNC  R/W     0x0        NS         Synchronizes pattern matcher with incoming data.  A write of a 1
                                             to this bit resets the error counter and starts a synchronization of
                                             the PM.  Once this bit is set, there is no need to write the field back
                                             to a zero.
 <2:0>   MODE  R/W     0x0        NS         Pattern to match.  When changing modes, the field must be set to zero
                                             first.  This field should match what was configured for the TX LBERT
                                             Control register.
                                             0: disabled
                                             1: lfsr31     X^31 + X^28 + 1
                                             2: lfsr23     X^23 + X^18 + 1
                                             3: lfsr15     X^15 + X^14 + 1
                                             4: lfsr7      X^7 + X^6 + 1
                                             5: d[n] = d[n-10]
                                             6: d[n] = !d[n-10]
                                             7: d[n] = !d[n-20]
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GSER_PHY_LANE1_RX_LBERT_ERR = GSER PHY Lane 0 RX LBERT Error Register
 * 
 *  PHY LANE1 RX LBERT Error.
 *  A read of this register, or a SYNC from the RX LBERT Control register
 *  resets the error count.  If all bits in this regisert are set, the
 *  error counter has saturated.
 * 
$GSER(0)_PHY(0..2)_LANE1_RX_LBERT_ERR   Address=(0x11800904088B8+a+b*0x80000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15>    OV14  R/W     0x0        NS         If this bit is set, and COUNT[15] is also set, signals a overflow of counter.
 <14:0>  COUNT R/W     0x0        NS         Current error count if OV14 field is active, then multiply count
                                             by 128 to get the actual count.
-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the intsn.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

 * 
 * INTSN_ALL_E
 * 
 *  Master list of CIU interrupt sources
 *  Attribute: -width=20.
 * 
$INTSN_ALL_E
-----------------------------------------------------------------------------------------------------------------------------------
 Value                  Name                                 Description    
-----------------------------------------------------------------------------------------------------------------------------------
 0x0                    CIB_NONE                             INTERNAL: No interrupt.
                                                             Attribute: -bit_name=.
                                                             Attribute: -bit_num=-1.
                                                             Attribute: -blk_enum_name=CIU_INTSN_E.
                                                             Attribute: -cib_rtl_module=none.
                                                             Attribute: -intsn_complex=1.
                                                             Attribute: -major_name=CIU.
                                                             Attribute: -major_val=(0x0).
                                                             Attribute: -reg_addr=0.
                                                             Attribute: -reg_name=.
 0x1                    CIB_CANCEL                           INTERNAL: Request not needed as interrupt already cleared.
                                                             Attribute: -bit_name=.
                                                             Attribute: -bit_num=-1.
                                                             Attribute: -blk_enum_name=CIU_INTSN_E.
                                                             Attribute: -cib_rtl_module=none.
                                                             Attribute: -intsn_complex=1.
                                                             Attribute: -major_name=CIU.
                                                             Attribute: -major_val=(0x0).
                                                             Attribute: -reg_addr=0.
                                                             Attribute: -reg_name=.
 0x6000+a               RST_INT_LINK(0..2)                   See RST_INT[RST_LINK<a>].
                                                             Attribute: -bit_name=RST_LINK<a>.
                                                             Attribute: -bit_num=0+a.
                                                             Attribute: -blk_enum_name=RST_INTSN_E.
                                                             Attribute: -major_name=RST.
                                                             Attribute: -major_val=(0x6).
                                                             Attribute: -reg_addr=(0x1180006001628).
                                                             Attribute: -reg_name=RST_INT.
 0x6008+a               RST_INT_PERST(0..2)                  See RST_INT[PERST<a>].
                                                             Attribute: -bit_name=PERST<a>.
                                                             Attribute: -bit_num=8+a.
                                                             Attribute: -blk_enum_name=RST_INTSN_E.
                                                             Attribute: -major_name=RST.
                                                             Attribute: -major_val=(0x6).
                                                             Attribute: -reg_addr=(0x1180006001628).
                                                             Attribute: -reg_name=RST_INT.
 0x68001+a*0x1000       USBDRD(0..1)_UCTL_INTSTAT_XS_NCB_OOB See USBDRD(0..1)_UCTL_INTSTAT[XS_NCB_OOB].
                                                             Attribute: -bit_name=XS_NCB_OOB.
                                                             Attribute: -bit_num=1.
                                                             Attribute: -blk_enum_name=USBDRD_UCTL_INTSN_E.
                                                             Attribute: -cib_rtl_module=usbdrd.
                                                             Attribute: -major_name=USBDRD(0..1).
                                                             Attribute: -major_val=(0x68+a).
                                                             Attribute: -reg_addr=(0x1180068000030+a*0x1000000).
                                                             Attribute: -reg_name=USBDRD(0..1)_UCTL_INTSTAT.
 0x68002+a*0x1000       USBDRD(0..1)_UCTL_INTSTAT_XM_BAD_DMA See USBDRD(0..1)_UCTL_INTSTAT[XM_BAD_DMA].
                                                             Attribute: -bit_name=XM_BAD_DMA.
                                                             Attribute: -bit_num=2.
                                                             Attribute: -blk_enum_name=USBDRD_UCTL_INTSN_E.
                                                             Attribute: -cib_rtl_module=usbdrd.
                                                             Attribute: -major_name=USBDRD(0..1).
                                                             Attribute: -major_val=(0x68+a).
                                                             Attribute: -reg_addr=(0x1180068000030+a*0x1000000).
                                                             Attribute: -reg_name=USBDRD(0..1)_UCTL_INTSTAT.
 0x68010+a*0x1000       USBDRD(0..1)_UCTL_INTSTAT_RAM0_SBE   See USBDRD(0..1)_UCTL_INTSTAT[RAM0_SBE].
                                                             Attribute: -bit_name=RAM0_SBE.
                                                             Attribute: -bit_num=16.
                                                             Attribute: -blk_enum_name=USBDRD_UCTL_INTSN_E.
                                                             Attribute: -cib_rtl_module=usbdrd.
                                                             Attribute: -major_name=USBDRD(0..1).
                                                             Attribute: -major_val=(0x68+a).
                                                             Attribute: -reg_addr=(0x1180068000030+a*0x1000000).
                                                             Attribute: -reg_name=USBDRD(0..1)_UCTL_INTSTAT.
 0x68011+a*0x1000       USBDRD(0..1)_UCTL_INTSTAT_RAM0_DBE   See USBDRD(0..1)_UCTL_INTSTAT[RAM0_DBE].
                                                             Attribute: -bit_name=RAM0_DBE.
                                                             Attribute: -bit_num=17.
                                                             Attribute: -blk_enum_name=USBDRD_UCTL_INTSN_E.
                                                             Attribute: -cib_rtl_module=usbdrd.
                                                             Attribute: -major_name=USBDRD(0..1).
                                                             Attribute: -major_val=(0x68+a).
                                                             Attribute: -reg_addr=(0x1180068000030+a*0x1000000).
                                                             Attribute: -reg_name=USBDRD(0..1)_UCTL_INTSTAT.
 0x68012+a*0x1000       USBDRD(0..1)_UCTL_INTSTAT_RAM1_SBE   See USBDRD(0..1)_UCTL_INTSTAT[RAM1_SBE].
                                                             Attribute: -bit_name=RAM1_SBE.
                                                             Attribute: -bit_num=18.
                                                             Attribute: -blk_enum_name=USBDRD_UCTL_INTSN_E.
                                                             Attribute: -cib_rtl_module=usbdrd.
                                                             Attribute: -major_name=USBDRD(0..1).
                                                             Attribute: -major_val=(0x68+a).
                                                             Attribute: -reg_addr=(0x1180068000030+a*0x1000000).
                                                             Attribute: -reg_name=USBDRD(0..1)_UCTL_INTSTAT.
 0x68013+a*0x1000       USBDRD(0..1)_UCTL_INTSTAT_RAM1_DBE   See USBDRD(0..1)_UCTL_INTSTAT[RAM1_DBE].
                                                             Attribute: -bit_name=RAM1_DBE.
                                                             Attribute: -bit_num=19.
                                                             Attribute: -blk_enum_name=USBDRD_UCTL_INTSN_E.
                                                             Attribute: -cib_rtl_module=usbdrd.
                                                             Attribute: -major_name=USBDRD(0..1).
                                                             Attribute: -major_val=(0x68+a).
                                                             Attribute: -reg_addr=(0x1180068000030+a*0x1000000).
                                                             Attribute: -reg_name=USBDRD(0..1)_UCTL_INTSTAT.
 0x68014+a*0x1000       USBDRD(0..1)_UCTL_INTSTAT_RAM2_SBE   See USBDRD(0..1)_UCTL_INTSTAT[RAM2_SBE].
                                                             Attribute: -bit_name=RAM2_SBE.
                                                             Attribute: -bit_num=20.
                                                             Attribute: -blk_enum_name=USBDRD_UCTL_INTSN_E.
                                                             Attribute: -cib_rtl_module=usbdrd.
                                                             Attribute: -major_name=USBDRD(0..1).
                                                             Attribute: -major_val=(0x68+a).
                                                             Attribute: -reg_addr=(0x1180068000030+a*0x1000000).
                                                             Attribute: -reg_name=USBDRD(0..1)_UCTL_INTSTAT.
 0x68015+a*0x1000       USBDRD(0..1)_UCTL_INTSTAT_RAM2_DBE   See USBDRD(0..1)_UCTL_INTSTAT[RAM2_DBE].
                                                             Attribute: -bit_name=RAM2_DBE.
                                                             Attribute: -bit_num=21.
                                                             Attribute: -blk_enum_name=USBDRD_UCTL_INTSN_E.
                                                             Attribute: -cib_rtl_module=usbdrd.
                                                             Attribute: -major_name=USBDRD(0..1).
                                                             Attribute: -major_val=(0x68+a).
                                                             Attribute: -reg_addr=(0x1180068000030+a*0x1000000).
                                                             Attribute: -reg_name=USBDRD(0..1)_UCTL_INTSTAT.
 0x68042+a*0x1000       USBDRD(0..1)_UCTL_UAHC_USBSTS_HSE    See USBDRD(0..1)_UAHC_USBSTS[HSE].
                                                             Attribute: -bit_name=HSE.
                                                             Attribute: -bit_num=2.
                                                             Attribute: -blk_enum_name=USBDRD_UCTL_INTSN_E.
                                                             Attribute: -cib_rtl_module=usbdrd.
                                                             Attribute: -intsn_level_sensitive=1.
                                                             Attribute: -major_name=USBDRD(0..1).
                                                             Attribute: -major_val=(0x68+a).
                                                             Attribute: -reg_addr=(0x1680000000024+a*0x10000000000).
                                                             Attribute: -reg_name=USBDRD(0..1)_UAHC_USBSTS.
 0x68080+a*0x1000+b     USBDRD(0..1)_UCTL_UAHC_IMAN(0..0)_IP See USBDRD(0..1)_UAHC_IMAN(0..0)[IP].
                                                             Attribute: -bit_name=IP.
                                                             Attribute: -bit_num=0.
                                                             Attribute: -blk_enum_name=USBDRD_UCTL_INTSN_E.
                                                             Attribute: -cib_rtl_module=usbdrd.
                                                             Attribute: -intsn_level_sensitive=1.
                                                             Attribute: -major_name=USBDRD(0..1).
                                                             Attribute: -major_val=(0x68+a).
                                                             Attribute: -reg_addr=(0x1680000000460+a*0x10000000000+b*0x20).
                                                             Attribute: -reg_name=USBDRD(0..1)_UAHC_IMAN(0..0).
 0x680C0+a*0x1000       USBDRD(0..1)_UCTL_UAHC_DEV_INT       See USBDRD(0..1)_UAHC_GEVNTCOUNT[EVNTCOUNT]
                                                             Attribute: -bit_name=.
                                                             Attribute: -bit_num=-1.
                                                             Attribute: -blk_enum_name=USBDRD_UCTL_INTSN_E.
                                                             Attribute: -cib_rtl_module=usbdrd.
                                                             Attribute: -intsn_complex=1.
                                                             Attribute: -intsn_level_sensitive=1.
                                                             Attribute: -major_name=USBDRD(0..1).
                                                             Attribute: -major_val=(0x68+a).
                                                             Attribute: -reg_addr=0.
                                                             Attribute: -reg_name=.
 0x6C001                SATA_UCTL_INTSTAT_XS_NCB_OOB         See SATA_UCTL_INTSTAT[XS_NCB_OOB].
                                                             Attribute: -bit_name=XS_NCB_OOB.
                                                             Attribute: -bit_num=1.
                                                             Attribute: -blk_enum_name=SATA_UCTL_INTSN_E.
                                                             Attribute: -cib_rtl_module=sata.
                                                             Attribute: -major_name=SATA.
                                                             Attribute: -major_val=(0x6C).
                                                             Attribute: -reg_addr=(0x118006C000030).
                                                             Attribute: -reg_name=SATA_UCTL_INTSTAT.
 0x6C002                SATA_UCTL_INTSTAT_XM_BAD_DMA         See SATA_UCTL_INTSTAT[XM_BAD_DMA].
                                                             Attribute: -bit_name=XM_BAD_DMA.
                                                             Attribute: -bit_num=2.
                                                             Attribute: -blk_enum_name=SATA_UCTL_INTSN_E.
                                                             Attribute: -cib_rtl_module=sata.
                                                             Attribute: -major_name=SATA.
                                                             Attribute: -major_val=(0x6C).
                                                             Attribute: -reg_addr=(0x118006C000030).
                                                             Attribute: -reg_name=SATA_UCTL_INTSTAT.
 0x6C010                SATA_UCTL_UAHC_INTRQ_IP              See SATA_UAHC_GBL_IS[IPS] and SATA_UAHC_PX_IS.
                                                             Attribute: -bit_name=.
                                                             Attribute: -bit_num=-1.
                                                             Attribute: -blk_enum_name=SATA_UCTL_INTSN_E.
                                                             Attribute: -cib_rtl_module=sata.
                                                             Attribute: -intsn_complex=1.
                                                             Attribute: -intsn_level_sensitive=1.
                                                             Attribute: -major_name=SATA.
                                                             Attribute: -major_val=(0x6C).
                                                             Attribute: -reg_addr=0.
                                                             Attribute: -reg_name=.
 0x6C020                SATA_UCTL_UAHC_PME_REQ_IP            See SATA_UAHC_PX_IS[CPDS] and
                                                             SATA_UAHC_PX_IS[DMPS] and
                                                             SATA_UAHC_PX_IS[PCS] and
                                                             SATA_UAHC_PX_IS[SDBS] and
                                                             SATA_UAHC_PX_SNTF[PMN]
                                                             Attribute: -bit_name=.
                                                             Attribute: -bit_num=-1.
                                                             Attribute: -blk_enum_name=SATA_UCTL_INTSN_E.
                                                             Attribute: -cib_rtl_module=sata.
                                                             Attribute: -intsn_complex=1.
                                                             Attribute: -intsn_level_sensitive=1.
                                                             Attribute: -major_name=SATA.
                                                             Attribute: -major_val=(0x6C).
                                                             Attribute: -reg_addr=0.
                                                             Attribute: -reg_name=.
 0x80000|(a << 8)       L2C_TAD(0..0)_INT_L2DSBE             See L2C_TAD(0..0)_INT[L2DSBE].
                                                             Attribute: -bit_name=L2DSBE.
                                                             Attribute: -bit_num=0.
                                                             Attribute: -blk_enum_name=L2C_INTSN_E.
                                                             Attribute: -cib_rtl_minor_width=3.
                                                             Attribute: -intsn_lsb_mismatch=True.
                                                             Attribute: -major_name=L2C.
                                                             Attribute: -major_val=(0x80).
                                                             Attribute: -reg_addr=(0x1180080A00028+a*0x40000).
                                                             Attribute: -reg_name=L2C_TAD(0..0)_INT.
 0x80001|(a << 8)       L2C_TAD(0..0)_INT_L2DDBE             See L2C_TAD(0..0)_INT[L2DDBE].
                                                             Attribute: -bit_name=L2DDBE.
                                                             Attribute: -bit_num=1.
                                                             Attribute: -blk_enum_name=L2C_INTSN_E.
                                                             Attribute: -intsn_lsb_mismatch=True.
                                                             Attribute: -major_name=L2C.
                                                             Attribute: -major_val=(0x80).
                                                             Attribute: -reg_addr=(0x1180080A00028+a*0x40000).
                                                             Attribute: -reg_name=L2C_TAD(0..0)_INT.
 0x80002|(a << 8)       L2C_TAD(0..0)_INT_SBFSBE             See L2C_TAD(0..0)_INT[SBFSBE].
                                                             Attribute: -bit_name=SBFSBE.
                                                             Attribute: -bit_num=2.
                                                             Attribute: -blk_enum_name=L2C_INTSN_E.
                                                             Attribute: -intsn_lsb_mismatch=True.
                                                             Attribute: -major_name=L2C.
                                                             Attribute: -major_val=(0x80).
                                                             Attribute: -reg_addr=(0x1180080A00028+a*0x40000).
                                                             Attribute: -reg_name=L2C_TAD(0..0)_INT.
 0x80003|(a << 8)       L2C_TAD(0..0)_INT_SBFDBE             See L2C_TAD(0..0)_INT[SBFDBE].
                                                             Attribute: -bit_name=SBFDBE.
                                                             Attribute: -bit_num=3.
                                                             Attribute: -blk_enum_name=L2C_INTSN_E.
                                                             Attribute: -intsn_lsb_mismatch=True.
                                                             Attribute: -major_name=L2C.
                                                             Attribute: -major_val=(0x80).
                                                             Attribute: -reg_addr=(0x1180080A00028+a*0x40000).
                                                             Attribute: -reg_name=L2C_TAD(0..0)_INT.
 0x80004|(a << 8)       L2C_TAD(0..0)_INT_FBFSBE             See L2C_TAD(0..0)_INT[FBFSBE].
                                                             Attribute: -bit_name=FBFSBE.
                                                             Attribute: -bit_num=4.
                                                             Attribute: -blk_enum_name=L2C_INTSN_E.
                                                             Attribute: -intsn_lsb_mismatch=True.
                                                             Attribute: -major_name=L2C.
                                                             Attribute: -major_val=(0x80).
                                                             Attribute: -reg_addr=(0x1180080A00028+a*0x40000).
                                                             Attribute: -reg_name=L2C_TAD(0..0)_INT.
 0x80005|(a << 8)       L2C_TAD(0..0)_INT_FBFDBE             See L2C_TAD(0..0)_INT[FBFDBE].
                                                             Attribute: -bit_name=FBFDBE.
                                                             Attribute: -bit_num=5.
                                                             Attribute: -blk_enum_name=L2C_INTSN_E.
                                                             Attribute: -intsn_lsb_mismatch=True.
                                                             Attribute: -major_name=L2C.
                                                             Attribute: -major_val=(0x80).
                                                             Attribute: -reg_addr=(0x1180080A00028+a*0x40000).
                                                             Attribute: -reg_name=L2C_TAD(0..0)_INT.
 0x80006|(a << 8)       L2C_TAD(0..0)_INT_TAGSBE             See L2C_TAD(0..0)_INT[TAGSBE].
                                                             Attribute: -bit_name=TAGSBE.
                                                             Attribute: -bit_num=8.
                                                             Attribute: -blk_enum_name=L2C_INTSN_E.
                                                             Attribute: -intsn_lsb_mismatch=True.
                                                             Attribute: -major_name=L2C.
                                                             Attribute: -major_val=(0x80).
                                                             Attribute: -reg_addr=(0x1180080A00028+a*0x40000).
                                                             Attribute: -reg_name=L2C_TAD(0..0)_INT.
 0x80007|(a << 8)       L2C_TAD(0..0)_INT_TAGDBE             See L2C_TAD(0..0)_INT[TAGDBE].
                                                             Attribute: -bit_name=TAGDBE.
                                                             Attribute: -bit_num=9.
                                                             Attribute: -blk_enum_name=L2C_INTSN_E.
                                                             Attribute: -intsn_lsb_mismatch=True.
                                                             Attribute: -major_name=L2C.
                                                             Attribute: -major_val=(0x80).
                                                             Attribute: -reg_addr=(0x1180080A00028+a*0x40000).
                                                             Attribute: -reg_name=L2C_TAD(0..0)_INT.
 0x80008|(a << 8)       L2C_TAD(0..0)_INT_NOWAY              See L2C_TAD(0..0)_INT[NOWAY].
                                                             Attribute: -bit_name=NOWAY.
                                                             Attribute: -bit_num=10.
                                                             Attribute: -blk_enum_name=L2C_INTSN_E.
                                                             Attribute: -intsn_lsb_mismatch=True.
                                                             Attribute: -major_name=L2C.
                                                             Attribute: -major_val=(0x80).
                                                             Attribute: -reg_addr=(0x1180080A00028+a*0x40000).
                                                             Attribute: -reg_name=L2C_TAD(0..0)_INT.
 0x80009|(a << 8)       L2C_TAD(0..0)_INT_HOLEWR             See L2C_TAD(0..0)_INT[HOLEWR].
                                                             Attribute: -bit_name=HOLEWR.
                                                             Attribute: -bit_num=11.
                                                             Attribute: -blk_enum_name=L2C_INTSN_E.
                                                             Attribute: -intsn_lsb_mismatch=True.
                                                             Attribute: -major_name=L2C.
                                                             Attribute: -major_val=(0x80).
                                                             Attribute: -reg_addr=(0x1180080A00028+a*0x40000).
                                                             Attribute: -reg_name=L2C_TAD(0..0)_INT.
 0x8000A|(a << 8)       L2C_TAD(0..0)_INT_HOLERD             See L2C_TAD(0..0)_INT[HOLERD].
                                                             Attribute: -bit_name=HOLERD.
                                                             Attribute: -bit_num=12.
                                                             Attribute: -blk_enum_name=L2C_INTSN_E.
                                                             Attribute: -intsn_lsb_mismatch=True.
                                                             Attribute: -major_name=L2C.
                                                             Attribute: -major_val=(0x80).
                                                             Attribute: -reg_addr=(0x1180080A00028+a*0x40000).
                                                             Attribute: -reg_name=L2C_TAD(0..0)_INT.
 0x8000B|(a << 8)       L2C_TAD(0..0)_INT_BIGWR              See L2C_TAD(0..0)_INT[BIGWR].
                                                             Attribute: -bit_name=BIGWR.
                                                             Attribute: -bit_num=13.
                                                             Attribute: -blk_enum_name=L2C_INTSN_E.
                                                             Attribute: -intsn_lsb_mismatch=True.
                                                             Attribute: -major_name=L2C.
                                                             Attribute: -major_val=(0x80).
                                                             Attribute: -reg_addr=(0x1180080A00028+a*0x40000).
                                                             Attribute: -reg_name=L2C_TAD(0..0)_INT.
 0x8000C|(a << 8)       L2C_TAD(0..0)_INT_BIGRD              See L2C_TAD(0..0)_INT[BIGRD].
                                                             Attribute: -bit_name=BIGRD.
                                                             Attribute: -bit_num=14.
                                                             Attribute: -blk_enum_name=L2C_INTSN_E.
                                                             Attribute: -intsn_lsb_mismatch=True.
                                                             Attribute: -major_name=L2C.
                                                             Attribute: -major_val=(0x80).
                                                             Attribute: -reg_addr=(0x1180080A00028+a*0x40000).
                                                             Attribute: -reg_name=L2C_TAD(0..0)_INT.
 0x8000D|(a << 8)       L2C_TAD(0..0)_INT_WRDISLMC           See L2C_TAD(0..0)_INT[WRDISLMC].
                                                             Attribute: -bit_name=WRDISLMC.
                                                             Attribute: -bit_num=16.
                                                             Attribute: -blk_enum_name=L2C_INTSN_E.
                                                             Attribute: -intsn_lsb_mismatch=True.
                                                             Attribute: -major_name=L2C.
                                                             Attribute: -major_val=(0x80).
                                                             Attribute: -reg_addr=(0x1180080A00028+a*0x40000).
                                                             Attribute: -reg_name=L2C_TAD(0..0)_INT.
 0x8000E|(a << 8)       L2C_TAD(0..0)_INT_RDDISLMC           See L2C_TAD(0..0)_INT[RDDISLMC].
                                                             Attribute: -bit_name=RDDISLMC.
                                                             Attribute: -bit_num=15.
                                                             Attribute: -blk_enum_name=L2C_INTSN_E.
                                                             Attribute: -intsn_lsb_mismatch=True.
                                                             Attribute: -major_name=L2C.
                                                             Attribute: -major_val=(0x80).
                                                             Attribute: -reg_addr=(0x1180080A00028+a*0x40000).
                                                             Attribute: -reg_name=L2C_TAD(0..0)_INT.
 0x8000F|(a << 8)       L2C_TAD(0..0)_INT_RTGSBE             See L2C_TAD(0..0)_INT[RTGSBE].
                                                             Attribute: -bit_name=RTGSBE.
                                                             Attribute: -bit_num=32.
                                                             Attribute: -blk_enum_name=L2C_INTSN_E.
                                                             Attribute: -intsn_lsb_mismatch=True.
                                                             Attribute: -major_name=L2C.
                                                             Attribute: -major_val=(0x80).
                                                             Attribute: -reg_addr=(0x1180080A00028+a*0x40000).
                                                             Attribute: -reg_name=L2C_TAD(0..0)_INT.
 0x80010|(a << 8)       L2C_TAD(0..0)_INT_RTGDBE             See L2C_TAD(0..0)_INT[RTGDBE].
                                                             Attribute: -bit_name=RTGDBE.
                                                             Attribute: -bit_num=33.
                                                             Attribute: -blk_enum_name=L2C_INTSN_E.
                                                             Attribute: -intsn_lsb_mismatch=True.
                                                             Attribute: -major_name=L2C.
                                                             Attribute: -major_val=(0x80).
                                                             Attribute: -reg_addr=(0x1180080A00028+a*0x40000).
                                                             Attribute: -reg_name=L2C_TAD(0..0)_INT.
 0x80800|(a << 8)       L2C_MCI(0..0)_INT_VBFSBE             See L2C_MCI(0..0)_INT[VBFSBE].
                                                             Attribute: -bit_name=VBFSBE.
                                                             Attribute: -bit_num=0.
                                                             Attribute: -blk_enum_name=L2C_INTSN_E.
                                                             Attribute: -cib_rtl_minor_width=4.
                                                             Attribute: -intsn_lsb_mismatch=True.
                                                             Attribute: -major_name=L2C.
                                                             Attribute: -major_val=(0x80).
                                                             Attribute: -reg_addr=(0x1180080C00028+a*0x40000).
                                                             Attribute: -reg_name=L2C_MCI(0..0)_INT.
 0x80801|(a << 8)       L2C_MCI(0..0)_INT_VBFDBE             See L2C_MCI(0..0)_INT[VBFDBE].
                                                             Attribute: -bit_name=VBFDBE.
                                                             Attribute: -bit_num=1.
                                                             Attribute: -blk_enum_name=L2C_INTSN_E.
                                                             Attribute: -intsn_lsb_mismatch=True.
                                                             Attribute: -major_name=L2C.
                                                             Attribute: -major_val=(0x80).
                                                             Attribute: -reg_addr=(0x1180080C00028+a*0x40000).
                                                             Attribute: -reg_name=L2C_MCI(0..0)_INT.
 0x80C00|(a << 8)       L2C_CBC(0..0)_INT_RSDSBE             See L2C_CBC(0..0)_INT[RSDSBE].
                                                             Attribute: -bit_name=RSDSBE.
                                                             Attribute: -bit_num=0.
                                                             Attribute: -blk_enum_name=L2C_INTSN_E.
                                                             Attribute: -cib_rtl_minor_width=4.
                                                             Attribute: -intsn_lsb_mismatch=True.
                                                             Attribute: -major_name=L2C.
                                                             Attribute: -major_val=(0x80).
                                                             Attribute: -reg_addr=(0x1180080E00028+a*0x40000).
                                                             Attribute: -reg_name=L2C_CBC(0..0)_INT.
 0x80C01|(a << 8)       L2C_CBC(0..0)_INT_RSDDBE             See L2C_CBC(0..0)_INT[RSDDBE].
                                                             Attribute: -bit_name=RSDDBE.
                                                             Attribute: -bit_num=1.
                                                             Attribute: -blk_enum_name=L2C_INTSN_E.
                                                             Attribute: -intsn_lsb_mismatch=True.
                                                             Attribute: -major_name=L2C.
                                                             Attribute: -major_val=(0x80).
                                                             Attribute: -reg_addr=(0x1180080E00028+a*0x40000).
                                                             Attribute: -reg_name=L2C_CBC(0..0)_INT.
 0x80C02|(a << 8)       L2C_CBC(0..0)_INT_IOCCMDSBE          See L2C_CBC(0..0)_INT[IOCCMDSBE].
                                                             Attribute: -bit_name=IOCCMDSBE.
                                                             Attribute: -bit_num=2.
                                                             Attribute: -blk_enum_name=L2C_INTSN_E.
                                                             Attribute: -intsn_lsb_mismatch=True.
                                                             Attribute: -major_name=L2C.
                                                             Attribute: -major_val=(0x80).
                                                             Attribute: -reg_addr=(0x1180080E00028+a*0x40000).
                                                             Attribute: -reg_name=L2C_CBC(0..0)_INT.
 0x80C03|(a << 8)       L2C_CBC(0..0)_INT_IOCCMDDBE          See L2C_CBC(0..0)_INT[IOCCMDDBE].
                                                             Attribute: -bit_name=IOCCMDDBE.
                                                             Attribute: -bit_num=3.
                                                             Attribute: -blk_enum_name=L2C_INTSN_E.
                                                             Attribute: -intsn_lsb_mismatch=True.
                                                             Attribute: -major_name=L2C.
                                                             Attribute: -major_val=(0x80).
                                                             Attribute: -reg_addr=(0x1180080E00028+a*0x40000).
                                                             Attribute: -reg_name=L2C_CBC(0..0)_INT.
 0x88000+a*0x1000       LMC(0..0)_INT_NXM_WR_ERR             See LMC(0..0)_INT[NXM_WR_ERR].
                                                             Attribute: -bit_name=NXM_WR_ERR.
                                                             Attribute: -bit_num=0.
                                                             Attribute: -blk_enum_name=LMC_INTSN_E.
                                                             Attribute: -major_name=LMC(0).
                                                             Attribute: -major_val=(0x88+a).
                                                             Attribute: -reg_addr=(0x11800880001F0|a<<24).
                                                             Attribute: -reg_name=LMC(0..0)_INT.
 0x88001+a*0x1000+b     LMC(0..0)_INT_SEC_ERR(0..3)          See LMC(0..0)_INT[SEC_ERR<b>].
                                                             Attribute: -bit_name=SEC_ERR<b>.
                                                             Attribute: -bit_num=1+b.
                                                             Attribute: -blk_enum_name=LMC_INTSN_E.
                                                             Attribute: -exempt_natural_alignment=b.
                                                             Attribute: -major_name=LMC(0).
                                                             Attribute: -major_val=(0x88+a).
                                                             Attribute: -reg_addr=(0x11800880001F0|a<<24).
                                                             Attribute: -reg_name=LMC(0..0)_INT.
 0x88005+a*0x1000+b     LMC(0..0)_INT_DED_ERR(0..3)          See LMC(0..0)_INT[DED_ERR<b>].
                                                             Attribute: -bit_name=DED_ERR<b>.
                                                             Attribute: -bit_num=5+b.
                                                             Attribute: -blk_enum_name=LMC_INTSN_E.
                                                             Attribute: -exempt_natural_alignment=b.
                                                             Attribute: -major_name=LMC(0).
                                                             Attribute: -major_val=(0x88+a).
                                                             Attribute: -reg_addr=(0x11800880001F0|a<<24).
                                                             Attribute: -reg_name=LMC(0..0)_INT.
 0x88009+a*0x1000       LMC(0..0)_INT_DLC_SEC                Reserved.  INTERNAL:See LMC(0..0)_INT[DLCRAM_SEC_ERR].
                                                             Attribute: -bit_name=DLCRAM_SEC_ERR.
                                                             Attribute: -bit_num=9.
                                                             Attribute: -blk_enum_name=LMC_INTSN_E.
                                                             Attribute: -major_name=LMC(0).
                                                             Attribute: -major_val=(0x88+a).
                                                             Attribute: -reg_addr=(0x11800880001F0|a<<24).
                                                             Attribute: -reg_name=LMC(0..0)_INT.
 0x8800A+a*0x1000       LMC(0..0)_INT_DLC_DED                Reserved.  INTERNAL:See LMC(0..0)_INT[DLCRAM_DED_ERR].
                                                             Attribute: -bit_name=DLCRAM_DED_ERR.
                                                             Attribute: -bit_num=10.
                                                             Attribute: -blk_enum_name=LMC_INTSN_E.
                                                             Attribute: -major_name=LMC(0).
                                                             Attribute: -major_val=(0x88+a).
                                                             Attribute: -reg_addr=(0x11800880001F0|a<<24).
                                                             Attribute: -reg_name=LMC(0..0)_INT.
 0x8800B+a*0x1000       LMC(0..0)_INT_DDR_ERR                Reserved.  INTERNAL:See LMC(0..0)_INT[DDR_ERR].
                                                             Attribute: -bit_name=DDR_ERR.
                                                             Attribute: -bit_num=11.
                                                             Attribute: -blk_enum_name=LMC_INTSN_E.
                                                             Attribute: -major_name=LMC(0).
                                                             Attribute: -major_val=(0x88+a).
                                                             Attribute: -reg_addr=(0x11800880001F0|a<<24).
                                                             Attribute: -reg_name=LMC(0..0)_INT.
 0xA8000+a*0x1000+b     OCLA(0)_STATE_OVFL(0..3)             See OCLA(0)_STATE_INT[OVFL<b>].
                                                             Attribute: -bit_name=OVFL<b>.
                                                             Attribute: -bit_num=0+b.
                                                             Attribute: -blk_enum_name=OCLA_INTSN_E.
                                                             Attribute: -major_name=OCLA(0).
                                                             Attribute: -major_val=(0xA8+a).
                                                             Attribute: -reg_addr=(0x11800A8000080|a<<24).
                                                             Attribute: -reg_name=OCLA(0)_STATE_INT.
 0xA8008+a*0x1000       OCLA(0)_STATE_TRIG                   See OCLA(0)_STATE_INT[TRIG].
                                                             Attribute: -bit_name=TRIG.
                                                             Attribute: -bit_num=8.
                                                             Attribute: -blk_enum_name=OCLA_INTSN_E.
                                                             Attribute: -major_name=OCLA(0).
                                                             Attribute: -major_val=(0xA8+a).
                                                             Attribute: -reg_addr=(0x11800A8000080|a<<24).
                                                             Attribute: -reg_name=OCLA(0)_STATE_INT.
 0xA8009+a*0x1000+b     OCLA(0)_STATE_MCD(0..2)              See OCLA(0)_STATE_INT[MCD<b>].
                                                             Attribute: -bit_name=MCD<b>.
                                                             Attribute: -bit_num=9+b.
                                                             Attribute: -blk_enum_name=OCLA_INTSN_E.
                                                             Attribute: -exempt_natural_alignment=b.
                                                             Attribute: -major_name=OCLA(0).
                                                             Attribute: -major_val=(0xA8+a).
                                                             Attribute: -reg_addr=(0x11800A8000080|a<<24).
                                                             Attribute: -reg_name=OCLA(0)_STATE_INT.
 0xA800C+a*0x1000       OCLA(0)_STATE_FSM0_INT               See OCLA(0)_STATE_INT[FSM0_INT].
                                                             Attribute: -bit_name=FSM0_INT.
                                                             Attribute: -bit_num=12.
                                                             Attribute: -blk_enum_name=OCLA_INTSN_E.
                                                             Attribute: -major_name=OCLA(0).
                                                             Attribute: -major_val=(0xA8+a).
                                                             Attribute: -reg_addr=(0x11800A8000080|a<<24).
                                                             Attribute: -reg_name=OCLA(0)_STATE_INT.
 0xA800D+a*0x1000       OCLA(0)_STATE_FSM1_INT               See OCLA(0)_STATE_INT[FSM1_INT].
                                                             Attribute: -bit_name=FSM1_INT.
                                                             Attribute: -bit_num=13.
                                                             Attribute: -blk_enum_name=OCLA_INTSN_E.
                                                             Attribute: -major_name=OCLA(0).
                                                             Attribute: -major_val=(0xA8+a).
                                                             Attribute: -reg_addr=(0x11800A8000080|a<<24).
                                                             Attribute: -reg_name=OCLA(0)_STATE_INT.
 0xA800E+a*0x1000       OCLA(0)_STATE_CAPTURED               See OCLA(0)_STATE_INT[CAPTURED].
                                                             Attribute: -bit_name=CAPTURED.
                                                             Attribute: -bit_num=14.
                                                             Attribute: -blk_enum_name=OCLA_INTSN_E.
                                                             Attribute: -major_name=OCLA(0).
                                                             Attribute: -major_val=(0xA8+a).
                                                             Attribute: -reg_addr=(0x11800A8000080|a<<24).
                                                             Attribute: -reg_name=OCLA(0)_STATE_INT.
 0xA800F+a*0x1000       OCLA(0)_STATE_TRIGFULL               See OCLA(0)_STATE_INT[TRIGFULL].
                                                             Attribute: -bit_name=TRIGFULL.
                                                             Attribute: -bit_num=15.
                                                             Attribute: -blk_enum_name=OCLA_INTSN_E.
                                                             Attribute: -major_name=OCLA(0).
                                                             Attribute: -major_val=(0xA8+a).
                                                             Attribute: -reg_addr=(0x11800A8000080|a<<24).
                                                             Attribute: -reg_name=OCLA(0)_STATE_INT.
 0xA8010+a*0x1000       OCLA(0)_STATE_OVERFULL               See OCLA(0)_STATE_INT[OVERFULL].
                                                             Attribute: -bit_name=OVERFULL.
                                                             Attribute: -bit_num=16.
                                                             Attribute: -blk_enum_name=OCLA_INTSN_E.
                                                             Attribute: -major_name=OCLA(0).
                                                             Attribute: -major_val=(0xA8+a).
                                                             Attribute: -reg_addr=(0x11800A8000080|a<<24).
                                                             Attribute: -reg_name=OCLA(0)_STATE_INT.
 0xA8011+a*0x1000       OCLA(0)_STATE_WMARK                  See OCLA(0)_STATE_INT[WMARK].
                                                             Attribute: -bit_name=WMARK.
                                                             Attribute: -bit_num=17.
                                                             Attribute: -blk_enum_name=OCLA_INTSN_E.
                                                             Attribute: -major_name=OCLA(0).
                                                             Attribute: -major_val=(0xA8+a).
                                                             Attribute: -reg_addr=(0x11800A8000080|a<<24).
                                                             Attribute: -reg_name=OCLA(0)_STATE_INT.
 0xA8012+a*0x1000       OCLA(0)_STATE_DDRFULL                See OCLA(0)_STATE_INT[DDRFULL].
                                                             Attribute: -bit_name=DDRFULL.
                                                             Attribute: -bit_num=18.
                                                             Attribute: -blk_enum_name=OCLA_INTSN_E.
                                                             Attribute: -major_name=OCLA(0).
                                                             Attribute: -major_val=(0xA8+a).
                                                             Attribute: -reg_addr=(0x11800A8000080|a<<24).
                                                             Attribute: -reg_name=OCLA(0)_STATE_INT.
-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the iob.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

 * 
 * IOB_FAU_TIMEOUT
 * 
 *  FAU Timeout = Fetch and Add Unit Tag-Switch Timeout
 *  How many clokc ticks the FAU unit will wait for a tag-switch before timeing out.
 *  for Queue 0.
 *  Attribute: -dv_fc_scratch=ALL.
 * 
$IOB_FAU_TIMEOUT   Address=(0x11800F0000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:13> NS       RAZ     NS         NS         Reserved.                                         
 <12>    TOUT_ENB R/W     0x1        0x0        The enable for the FAU timeout feature.           
                                                '1' will enable the timeout, '0' will disable.
 <11:0>  TOUT_VAL R/W     0x4        0x4        When a tag request arrives from the PP a timer is 
                                                started associate with that PP. The timer which
                                                increments every 256 eclks is compared to TOUT_VAL.
                                                When the two are equal the IOB will flag the tag
                                                request to complete as a time-out tag operation.
                                                The 256 count timer used to increment the PP
                                                associated timer is always running so the first
                                                increment of the PP associated timer may occur any
                                                where within the first 256 eclks.  Note that '0'
                                                is an illegal value.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IOB_N2C_RSP_PRI_CNT
 * 
 *  NCB To CMB Response Priority Counter = NCB to CMB Response Priority Counter Enable and Timer
 *  Value
 *  Enables and supplies the timeout count for raising the priority of NCB Responses access to the
 *  CMB.
 * 
$IOB_N2C_RSP_PRI_CNT   Address=(0x11800F0000008)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS      RAZ     NS         NS         Reserved.                                         
 <15>    CNT_ENB R/W     0x0        0x0        Enables the raising of CMB access priority        
                                               when CNT_VAL is reached.
 <14:0>  CNT_VAL R/W     0x0        0x0        Number of core clocks to wait before raising      
                                               the priority for access to CMB.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IOB_I2C_PRI_CNT
 * 
 *  IPD To CMB Store Priority Counter = IPD to CMB Store Priority Counter Enable and Timer Value
 *  Enables and supplies the timeout count for raising the priority of IPD Store access to the
 *  CMB.
 * 
$IOB_I2C_PRI_CNT   Address=(0x11800F0000010)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS      RAZ     NS         NS         Reserved.                                         
 <15>    CNT_ENB R/W     0x0        0x0        Enables the raising of CMB access priority        
                                               when CNT_VAL is reached.
 <14:0>  CNT_VAL R/W     0x0        0x0        Number of core clocks to wait before raising      
                                               the priority for access to CMB.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IOB_P2C_REQ_PRI_CNT
 * 
 *  PKO To CMB Response Priority Counter = PKO to CMB Response Priority Counter Enable and Timer
 *  Value
 *  Enables and supplies the timeout count for raising the priority of PKO Load access to the CMB.
 * 
$IOB_P2C_REQ_PRI_CNT   Address=(0x11800F0000018)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS      RAZ     NS         NS         Reserved.                                         
 <15>    CNT_ENB R/W     0x0        0x0        Enables the raising of CMB access priority        
                                               when CNT_VAL is reached.
 <14:0>  CNT_VAL R/W     0x0        0x0        Number of core clocks to wait before raising      
                                               the priority for access to CMB.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IOB_N2C_L2C_PRI_CNT
 * 
 *  NCB To CMB L2C Priority Counter = NCB to CMB L2C Priority Counter Enable and Timer Value
 *  Enables and supplies the timeout count for raising the priority of NCB Store/Load access to
 *  the CMB.
 * 
$IOB_N2C_L2C_PRI_CNT   Address=(0x11800F0000020)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS      RAZ     NS         NS         Reserved.                                         
 <15>    CNT_ENB R/W     0x0        0x0        Enables the raising of CMB access priority        
                                               when CNT_VAL is reached.
 <14:0>  CNT_VAL R/W     0x0        0x0        Number of core clocks to wait before raising      
                                               the priority for access to CMB.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IOB_DWB_PRI_CNT
 * 
 *  DWB To CMB Priority Counter = Don't Write Back to CMB Priority Counter Enable and Timer Value
 *  Enables and supplies the timeout count for raising the priority of Don't Write Back request to
 *  the L2C.
 * 
$IOB_DWB_PRI_CNT   Address=(0x11800F0000028)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS      RAZ     NS         NS         Reserved.                                         
 <15>    CNT_ENB R/W     0x0        0x0        Enables the raising of CMB access priority        
                                               when CNT_VAL is reached.
 <14:0>  CNT_VAL R/W     0x0        0x0        Number of core clocks to wait before raising      
                                               the priority for access to CMB.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IOB_OUTB_REQ_PRI_CNT
 * 
 *  Request To NCB Priority Counter = Request to NCB Priority Counter Enable and Timer Value
 *  Enables and supplies the timeout count for raising the priority of Request transfers to the
 *  Outbound NCB.
 * 
$IOB_OUTB_REQ_PRI_CNT   Address=(0x11800F0000038)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS      RAZ     NS         NS         Reserved.                                         
 <15>    CNT_ENB R/W     0x0        0x0        Enables the raising of NCB access priority        
                                               when CNT_VAL is reached.
 <14:0>  CNT_VAL R/W     0x0        0x0        Number of core clocks to wait before raising      
                                               the priority for access to NCB.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IOB_OUTB_COM_PRI_CNT
 * 
 *  Commit To NCB Priority Counter = Commit to NCB Priority Counter Enable and Timer Value
 *  Enables and supplies the timeout count for raising the priority of Commit request to the
 *  Outbound NCB.
 * 
$IOB_OUTB_COM_PRI_CNT   Address=(0x11800F0000040)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS      RAZ     NS         NS         Reserved.                                         
 <15>    CNT_ENB R/W     0x0        0x0        Enables the raising of NCB access priority        
                                               when CNT_VAL is reached.
 <14:0>  CNT_VAL R/W     0x0        0x0        Number of core clocks to wait before raising      
                                               the priority for access to NCB.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IOB_OUTB_FPA_PRI_CNT
 * 
 *  FPA To NCB Priority Counter = FPA Returns to NCB Priority Counter Enable and Timer Value
 *  Enables and supplies the timeout count for raising the priority of FPA Rreturn Page request to
 *  the Outbound NCB.
 * 
$IOB_OUTB_FPA_PRI_CNT   Address=(0x11800F0000048)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS      RAZ     NS         NS         Reserved.                                         
 <15>    CNT_ENB R/W     0x0        0x0        Enables the raising of NCB access priority        
                                               when CNT_VAL is reached.
 <14:0>  CNT_VAL R/W     0x0        0x0        Number of core clocks to wait before raising      
                                               the priority for access to NCB.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IOB_CTL_STATUS
 * 
 *  IOB Control Status = IOB Control and Status Register
 *  Provides control for IOB functions.
 * 
$IOB_CTL_STATUS   Address=(0x11800F0000050)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:10> NS      RAZ     NS         NS         Reserved.                                         
 <9:6>   XMC_PER R/W     0x0        0x0        IBC XMC PUSH EARLY                                
 <5>     RR_MODE R/W     0x0        0x0        When set to '1' will enable Round-Robin mode of next
                                               transaction that could arbitrate for the XMB.
 <4>     RSV4    R/W     0x0        0x0        Reserved.                                         
 <3>     RSV3    R/W     0x0        0x0        Reserved.                                         
 <2>     PKO_ENB R/W     0x0        0x0        Toggles the endian style of the FAU for the PKO.  
                                               '0' is for big-endian and '1' is for little-endian.
 <1>     DWB_ENB R/W     0x1        0x1        Enables the DWB function of the IOB.              
 <0>     FAU_END R/W     0x0        0x0        Toggles the endian style of the FAU. '0' is for   
                                               big-endian and '1' is for little-endian.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IOB_INT_SUM = IOB's Interrupt Summary Register
 * 
 *  Contains the diffrent interrupt summary bits of the IOB.
 * 
$IOB_INT_SUM   Address=(0x11800F0000058)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ     NS         NS         Reserved.                                         
 <7>     OUTB_MAT R/W1C/H 0x0        0x0        Was a match on the outbound bus to the inb pattern
                                                matchers.
 <6>     INB_MAT  R/W1C/H 0x0        0x0        Was a match on the inbound bus to the inb pattern 
                                                matchers.
 <5>     P_DAT    R/W1C/H 0x0        0x0        Set when a data arrives before a SOP for the same 
                                                port for a passthrough packet.
                                                The first detected error associated with bits [5:0]
                                                of this register will only be set here. A new bit
                                                can be set when the previous reported bit is cleared.
 <4>     NP_DAT   R/W1C/H 0x0        0x0        Set when a data arrives before a SOP for the same 
                                                port for a non-passthrough packet.
                                                The first detected error associated with bits [5:0]
                                                of this register will only be set here. A new bit
                                                can be set when the previous reported bit is cleared.
 <3>     P_EOP    R/W1C/H 0x0        0x0        Set when a EOP is followed by an EOP for the same 
                                                port for a passthrough packet.
                                                The first detected error associated with bits [5:0]
                                                of this register will only be set here. A new bit
                                                can be set when the previous reported bit is cleared.
 <2>     P_SOP    R/W1C/H 0x0        0x0        Set when a SOP is followed by an SOP for the same 
                                                port for a passthrough packet.
                                                The first detected error associated with bits [5:0]
                                                of this register will only be set here. A new bit
                                                can be set when the previous reported bit is cleared.
 <1>     NP_EOP   R/W1C/H 0x0        0x0        Set when a EOP is followed by an EOP for the same 
                                                port for a non-passthrough packet.
                                                The first detected error associated with bits [5:0]
                                                of this register will only be set here. A new bit
                                                can be set when the previous reported bit is cleared.
 <0>     NP_SOP   R/W1C/H 0x0        0x0        Set when a SOP is followed by an SOP for the same 
                                                port for a non-passthrough packet.
                                                The first detected error associated with bits [5:0]
                                                of this register will only be set here. A new bit
                                                can be set when the previous reported bit is cleared.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IOB_INT_ENB = IOB's Interrupt Enable
 * 
 *  The IOB's interrupt enable register.
 * 
$IOB_INT_ENB   Address=(0x11800F0000060)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS       RAZ     NS         NS         Reserved.                                         
 <7>     OUTB_MAT R/W     0x0        0x0        When set (1) and bit 7 of the IOB_INT_SUM         
                                                register is asserted the IOB will assert an
                                                interrupt.
 <6>     INB_MAT  R/W     0x0        0x0        When set (1) and bit 6 of the IOB_INT_SUM         
                                                register is asserted the IOB will assert an
                                                interrupt.
 <5>     P_DAT    R/W     0x0        0x0        When set (1) and bit 5 of the IOB_INT_SUM         
                                                register is asserted the IOB will assert an
                                                interrupt.
 <4>     NP_DAT   R/W     0x0        0x0        When set (1) and bit 4 of the IOB_INT_SUM         
                                                register is asserted the IOB will assert an
                                                interrupt.
 <3>     P_EOP    R/W     0x0        0x0        When set (1) and bit 3 of the IOB_INT_SUM         
                                                register is asserted the IOB will assert an
                                                interrupt.
 <2>     P_SOP    R/W     0x0        0x0        When set (1) and bit 2 of the IOB_INT_SUM         
                                                register is asserted the IOB will assert an
                                                interrupt.
 <1>     NP_EOP   R/W     0x0        0x0        When set (1) and bit 1 of the IOB_INT_SUM         
                                                register is asserted the IOB will assert an
                                                interrupt.
 <0>     NP_SOP   R/W     0x0        0x0        When set (1) and bit 0 of the IOB_INT_SUM         
                                                register is asserted the IOB will assert an
                                                interrupt.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IOB_PKT_ERR = IOB Packet Error Register
 * 
 *  Provides status about the failing packet recevie error.
 * 
$IOB_PKT_ERR   Address=(0x11800F0000068)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:12> NS    RAZ     NS         NS         Reserved.                                         
 <11:6>  VPORT RO/H    0x0        NS         When IOB_INT_SUM[3:0] bit is set, this field      
                                             latches the failing vport associate with the
                                             IOB_INT_SUM[3:0] bit set.
 <5:0>   PORT  RO/H    0x0        NS         When IOB_INT_SUM[3:0] bit is set, this field      
                                             latches the failing port associate with the
                                             IOB_INT_SUM[3:0] bit set.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IOB_INB_DATA_MATCH = IOB Inbound Data Match
 * 
 *  Match pattern for the inbound data to set the INB_MATCH_BIT.
 * 
$IOB_INB_DATA_MATCH   Address=(0x11800F0000070)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  DATA R/W/H   0x0        NS         Pattern to match on the inbound NCB.              
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IOB_INB_CONTROL_MATCH = IOB Inbound Control Match
 * 
 *  Match pattern for the inbound control to set the INB_MATCH_BIT.
 * 
$IOB_INB_CONTROL_MATCH   Address=(0x11800F0000078)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:29> NS    RAZ     NS         NS         Reserved.                                         
 <28:21> MASK  R/W/H   0x0        NS         Pattern to match on the inbound NCB.              
 <20:17> OPC   R/W/H   0x0        NS         Pattern to match on the inbound NCB.              
 <16:8>  DST   R/W/H   0x0        NS         Pattern to match on the inbound NCB.              
 <7:0>   SRC   R/W/H   0x0        NS         Pattern to match on the inbound NCB.              
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IOB_INB_DATA_MATCH_ENB = IOB Inbound Data Match Enable
 * 
 *  Enables the match of the corresponding bit in the IOB_INB_DATA_MATCH reister.
 * 
$IOB_INB_DATA_MATCH_ENB   Address=(0x11800F0000080)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  DATA R/W/H   0x0        NS         Bit to enable match of.                           
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IOB_INB_CONTROL_MATCH_ENB = IOB Inbound Control Match Enable
 * 
 *  Enables the match of the corresponding bit in the IOB_INB_CONTROL_MATCH reister.
 * 
$IOB_INB_CONTROL_MATCH_ENB   Address=(0x11800F0000088)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:29> NS    RAZ     NS         NS         Reserved.                                         
 <28:21> MASK  R/W/H   0x0        NS         Pattern to match on the inbound NCB.              
 <20:17> OPC   R/W/H   0x0        NS         Pattern to match on the inbound NCB.              
 <16:8>  DST   R/W/H   0x0        NS         Pattern to match on the inbound NCB.              
 <7:0>   SRC   R/W/H   0x0        NS         Pattern to match on the inbound NCB.              
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IOB_OUTB_DATA_MATCH = IOB Outbound Data Match
 * 
 *  Match pattern for the outbound data to set the OUTB_MATCH_BIT.
 * 
$IOB_OUTB_DATA_MATCH   Address=(0x11800F0000090)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  DATA R/W/H   0x0        NS         Pattern to match on the outbound NCB.             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IOB_OUTB_CONTROL_MATCH = IOB Outbound Control Match
 * 
 *  Match pattern for the outbound control to set the OUTB_MATCH_BIT.
 * 
$IOB_OUTB_CONTROL_MATCH   Address=(0x11800F0000098)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:26> NS    RAZ     NS         NS         Reserved.                                         
 <25:18> MASK  R/W/H   0x0        NS         Pattern to match on the outbound NCB.             
 <17>    EOT   R/W/H   0x0        NS         Pattern to match on the outbound NCB.             
 <16:9>  DST   R/W/H   0x0        NS         Pattern to match on the outbound NCB.             
 <8:0>   SRC   R/W/H   0x0        NS         Pattern to match on the outbound NCB.             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IOB_OUTB_DATA_MATCH_ENB = IOB Outbound Data Match Enable
 * 
 *  Enables the match of the corresponding bit in the IOB_OUTB_DATA_MATCH reister.
 * 
$IOB_OUTB_DATA_MATCH_ENB   Address=(0x11800F00000A0)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  DATA R/W/H   0x0        NS         Bit to enable match of.                           
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IOB_OUTB_CONTROL_MATCH_ENB = IOB Outbound Control Match Enable
 * 
 *  Enables the match of the corresponding bit in the IOB_OUTB_CONTROL_MATCH reister.
 * 
$IOB_OUTB_CONTROL_MATCH_ENB   Address=(0x11800F00000A8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:26> NS    RAZ     NS         NS         Reserved.                                         
 <25:18> MASK  R/W/H   0x0        NS         Pattern to match on the outbound NCB.             
 <17>    EOT   R/W/H   0x0        NS         Pattern to match on the outbound NCB.             
 <16:9>  DST   R/W/H   0x0        NS         Pattern to match on the outbound NCB.             
 <8:0>   SRC   R/W/H   0x0        NS         Pattern to match on the outbound NCB.             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IOB_TO_CMB_CREDITS = IOB To CMB Credits
 * 
 *  Controls the number of reads and writes that may be outstanding to the L2C (via the CMB).
 * 
$IOB_TO_CMB_CREDITS   Address=(0x11800F00000B0)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:9>  NS     RAZ     NS         NS         Reserved.                                         
 <8:6>   PKO_RD R/W/H   0x0        NS         Number of PKO reads that can be out to L2C where  
                                              0 == 8-credits.
 <5:3>   NCB_RD R/W/H   0x0        NS         Number of NCB reads that can be out to L2C where  
                                              0 == 8-credits.
 <2:0>   NCB_WR R/W/H   0x0        NS         Number of NCB/PKI writes that can be out to L2C   
                                              where 0 == 8-credits.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IOB_PP_BIST_STATUS = BIST Status of the PPs
 * 
 *  The result of the BIST run on the PPs.
 * 
$IOB_PP_BIST_STATUS   Address=(0x11800F0000700)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ     NS         NS         Reserved.                                         
 <3:0>   PP_BSTAT RO      0x0        0x0        BIST Status of PPs. Bit vector position is the number of the PP (i.e. PP0 == PP_BSTAT[0]).
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IOB_BIST_STATUS = BIST Status of IOB Memories
 * 
 *  The result of the BIST run on the IOB memories.
 * 
$IOB_BIST_STATUS   Address=(0x11800F00007F8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:23> NS     RAZ     NS         NS         Reserved.                                         
 <22>    XMDFIF RO      0x0        0x0        xmdfif_bist_status                                
 <21>    XMCFIF RO      0x0        0x0        xmcfif_bist_status                                
 <20>    IORFIF RO      0x0        0x0        iorfif_bist_status                                
 <19>    RSDFIF RO      0x0        0x0        rsdfif_bist_status                                
 <18>    IOCFIF RO      0x0        0x0        iocfif_bist_status                                
 <17>    ICNRCB RO      0x0        0x0        icnr_cb_reg_fifo_bist_status (icnr_tag_cb_cmd_fifo1)
 <16>    ICR0   RO      0x0        0x0        icr_bist_req_fifo0_status (icr_req_fifoa0 & icr_req_fifob0)
 <15>    ICR1   RO      0x0        0x0        icr_bist_req_fifo1_status (icr_req_fifo1)         
 <14>    ICNR1  RO      0x0        0x0        Reserved.                                         
 <13>    ICNR0  RO      0x0        0x0        icnr_reg_mem0_bist_status (icnr_reg_mem)          
 <12>    IBDR0  RO      0x0        0x0        ibdr_bist_req_fifo0_status (bnc_req_fifo)         
 <11>    IBDR1  RO      0x0        0x0        Reserved.                                         
 <10>    IBR0   RO      0x0        0x0        ibr_bist_rsp_fifo0_status (bnc_rsp_fifo0)         
 <9>     IBR1   RO      0x0        0x0        ibr_bist_rsp_fifo1_status (bnc_rsp_fifoa1)        
 <8>     ICNRT  RO      0x0        0x0        icnr_tag_cb_reg_fifo_bist_status (icnr_tag_cb_cmd_fifo)
 <7>     IBRQ0  RO      0x0        0x0        ibrq_bist_req_fifo0_status (bnc_req_fifoa)        
 <6>     IBRQ1  RO      0x0        0x0        ibrq_bist_req_fifo1_status (bnc_req_fifob)        
 <5>     ICRN0  RO      0x0        0x0        icr_ncb_bist_mem0_status (icr_ncb_mema0 & icr_ncb_memb0)
 <4>     ICRN1  RO      0x0        0x0        icr_ncb_bist_mem1_status (icr_ncb_mema1 & icr_ncb_memb1)
 <3>     ICRP0  RO      0x0        0x0        icr_pko_bist_mem0_status (icr_pko_mema0 & icr_pko_memb0)
 <2>     ICRP1  RO      0x0        0x0        icr_pko_bist_mem1_status (icr_pko_mema1 & icr_pko_memb1)
 <1>     IBD    RO      0x0        0x0        ibd_bist_mem0_status (ibd_fifo0)                  
 <0>     ICD    RO      0x0        0x0        icd_ncb_fifo_bist_status (icd_ncb_fifo)           
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IOB_CHIP_GLB_PWR_THROTTLE
 * 
 *  Controls the min/max power settings.
 * 
$IOB_CHIP_GLB_PWR_THROTTLE   Address=(0x11800F0000808)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:34> NS          RAZ     NS         NS         Reserved.                                         
 <33:32> PWR_BW      R/W     0x0        0x0        Configures the reaction time of the closed-loop feedback
                                                   control system for the AVG_CHIP_POWER power approximation.
                                                   Higher numbers decrease bandwidth, reducing response time,
                                                   which could lead to greater tracking error, but reduce
                                                   ringing.
 <31:24> PWR_MAX     R/W     0xff       0xff       Maximum allowed CURRENT_POWER_SETTING value. PWR_MAX must
                                                   be >= PWR_MIN.
 <23:16> PWR_MIN     R/W     0x0        NS         Minimum allowed CURRENT_POWER_SETTING value. PWR_MIN must
                                                   be <= PWR_MAX.
                                                   We recommend a PWR_MIN value larger than zero to set a
                                                   minimum performance level in case PWR_SETTING is set to
                                                   an unreachable goal. See the CPU CP0 PowThrottle description.
                                                   PWR_MIN = 50% of PowThrottle[MAXPOW] could be a good
                                                   choice, for example.
 <15:0>  PWR_SETTING R/W     0xffff     NS         A power limiter for the chip.                     
                                                   A limiter of the power consumption of the chip. This power
                                                   limiting is implemented by a closed-loop feedback control
                                                   system for the AVG_CHIP_POWER power approximation. The
                                                   direct output of the PWR_SETTING feedback control system
                                                   is the CURRENT_POWER_SETTING value. The power consumed
                                                   by the chip (estimated currently by the AVG_CHIP_POWER
                                                   value) is an indirect output of the PWR_SETTING feedback
                                                   control system.
                                                   PWR_SETTING is not used by the hardware when PWR_MIN equals
                                                   PWR_MAX. PWR_MIN and PWR_MAX threshold requirements always
                                                   supercede PWR_SETTING limits. (For maximum PWR_SETTING
                                                   feedback control freedom, set PWR_MIN=0 and PWR_MAX=0xff.)
                                                   PWR_SETTING equal to 0 forces the chip to consume near
                                                   minimum power. Increasing PWR_SETTING value from 0 to
                                                   0xffff increases the power that the chip is alloed to
                                                   consume linearly (roughly) from minimum to maximum.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IOB_CHIP_PWR_OUT
 * 
 *  Power numbers from the various partitions on the chip.
 * 
$IOB_CHIP_PWR_OUT   Address=(0x11800F0000818)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field          Field   Reset      Typical    Field                                             
 Pos     Name           Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> CPU_PWR        RO/H    0x0        NS         An estimate of the current CPU core complex power consumption.
                                                      The CPU core complex includes the caches and DRAM controller(s),
                                                      as well as all CPU cores. Linearly larger values indicate linearly
                                                      higher power consumption. This power consumption estimate is
                                                      energy per core clock.
 <47:32> CHIP_POWER     RO/H    0x0        NS         An estimate of the current total power consumption by the chip.
                                                      Linearly larger values indicate linearly higher power consumption.
                                                      CHIP_POWER is the sum of CPU_POWER and COPROC_POWER.
 <31:16> COPROC_POWER   RO/H    0x0        NS         An estimate of the current coprocessor power consumption.
                                                      Linearly larger values indicate linearly higher power consumption.
                                                      This estimate is energy per core clock, and will
                                                      generally decrease as the ratio of core to coprocessor clock
                                                      speed increases.
 <15:0>  AVG_CHIP_POWER RO/H    0x0        NS         An average of CHIP_POWER, calculated using an IIR filter with
                                                      an average weight of 16K core clocks.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IOB_CHIP_CUR_PWR
 * 
 *  
 * 
$IOB_CHIP_CUR_PWR   Address=(0x11800F0000828)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field                 Field   Reset      Typical    Field                                             
 Pos     Name                  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS                    RAZ     NS         NS         Reserved.                                         
 <7:0>   CURRENT_POWER_SETTING RO/H    0x0        NS         Global throttling value currently being used.     
                                                             Throttling can force units (CPU cores, in particular) idle for a
                                                             portion of time, which will reduce power consumption.  When
                                                             CURRENT_POWER_SETTING is equal to zero, the unit is idle most
                                                             of the time and consumes minimum power. When CURRENT_POWER_SETTING
                                                             is equal to 0xFF, units are never idled to reduce power.
                                                             The hardware generally uses a CURRENT_POWER_SETTING value that
                                                             is as large as possible (in order to maximize performance) subject
                                                             to the following constraints (in priority order):
                                                               - PWR_MIN <= CURRENT_POWER_SETTING <= PWR_MAX
                                                               - Power limits from the PWR_SETTING feedback control system
                                                             In the case of the CPU cores, CURRENT_POWER_SETTING effectively
                                                             limits the CP0 PowThrottle[POWLIM] value:
                                                               effective POWLIM = MINIMUM(CURRENT_POWER_SETTING,PowThrottle[POWLIM])
-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the ipd.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

 * 
 * IPD_1ST_MBUFF_SKIP = IPD First MBUFF Word Skip Size
 * 
 *  The number of words that the IPD will skip when writing the first MBUFF.
 *  Attribute: -dv_fc_scratch=ALL.
 * 
$IPD_1ST_MBUFF_SKIP   Address=(0x14F0000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  NS      RAZ     NS         NS         Reserved.                                         
 <5:0>   SKIP_SZ R/W     0x0        0x0        The number of 8-byte words from the top of the    
                                               1st MBUFF that the IPD will store the next-pointer.
                                               Legal values are 0 to 32, where the MAX value
                                               is also limited to:
                                               IPD_PACKET_MBUFF_SIZE[MB_SIZE] - 18.
                                               Must be at least 16 when IPD_CTL_STATUS[NO_WPTR]
                                               is set.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_NOT_1ST_MBUFF_SKIP = IPD Not First MBUFF Word Skip Size
 * 
 *  The number of words that the IPD will skip when writing any MBUFF that is not the first.
 * 
$IPD_NOT_1ST_MBUFF_SKIP   Address=(0x14F0000000008)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  NS      RAZ     NS         NS         Reserved.                                         
 <5:0>   SKIP_SZ R/W     0x0        0x0        The number of 8-byte words from the top of any    
                                               MBUFF, that is not the 1st MBUFF, that the IPD
                                               will write the next-pointer.
                                               Legal values are 0 to 32, where the MAX value
                                               is also limited to:
                                               IPD_PACKET_MBUFF_SIZE[MB_SIZE] - 16.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_PACKET_MBUFF_SIZE = IPD's PACKET MUBUF Size In Words
 * 
 *  The number of words in a MBUFF used for packet data store.
 * 
$IPD_PACKET_MBUFF_SIZE   Address=(0x14F0000000010)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:12> NS      RAZ     NS         NS         Reserved.                                         
 <11:0>  MB_SIZE R/W     0x20       0x20       The number of 8-byte words in a MBUF.             
                                               This must be a number in the range of 32 to
                                               2048.
                                               This is also the size of the FPA's
                                               Queue-0 Free-Page.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_CTL_STATUS = IPD's Control Status Register
 * 
 *  The number of words in a MBUFF used for packet data store.
 * 
$IPD_CTL_STATUS   Address=(0x14F0000000018)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:18> NS       RAZ     NS         NS         Reserved.                                         
 <17>    USE_SOP  R/W     0x0        0x0        When '1' the SOP sent by the MAC will be used in  
                                                place of the SOP generated by the IPD.
 <16>    RST_DONE RO/H    0x1        0x0        When '0' IPD has finished reset. No access        
                                                except the reading of this bit should occur to the
                                                IPD until this is asserted. Or a 1000 core clock
                                                cycles has passed after the de-assertion of reset.
 <15>    CLKEN    R/W     0x0        0x0        Controls the conditional clocking within IPD      
                                                0=Allow HW to control the clocks
                                                1=Force the clocks to be always on
 <14>    NO_WPTR  R/W     0x0        0x0        When set '1' the WQE pointers will not be used and
                                                the WQE will be located at the front of the packet.
                                                When set:
                                                - IPD_WQE_FPA_QUEUE[WQE_QUE] is not used
                                                - IPD_1ST_MBUFF_SKIP[SKIP_SZ] must be at least 16
                                                - If 16 <= IPD_1ST_MBUFF_SKIP[SKIP_SZ] <= 31 then
                                                the WQE will be written into the first 128B
                                                cache block in the first buffer that contains
                                                the packet.
                                                - If IPD_1ST_MBUFF_SKIP[SKIP_SZ] == 32 then
                                                the WQE will be written into the second 128B
                                                cache block in the first buffer that contains
                                                the packet.
 <13>    PQ_APKT  R/W     0x0        0x0        When set IPD_PORT_QOS_@_CNT WILL be incremented   
                                                by one for every work queue entry that is sent to
                                                POW.
 <12>    PQ_NABUF R/W     0x0        0x0        When set IPD_PORT_QOS_@_CNT WILL NOT be           
                                                incremented when IPD allocates a buffer for a
                                                packet.
 <11>    IPD_FULL R/W     0x0        0x0        When clear '0' the IPD acts normaly.              
                                                When set '1' the IPD drive the IPD_BUFF_FULL line to
                                                the IOB-arbiter, telling it to not give grants to
                                                NCB devices sending packet data.
 <10>    PKT_OFF  R/W     0x0        0x0        When clear '0' the IPD working normaly,           
                                                buffering the received packet data. When set '1'
                                                the IPD will not buffer the received packet data.
 <9>     LEN_M8   R/W     0x0        0x1        Setting of this bit will subtract 8 from the      
                                                data-length field in the header written to the
                                                POW and the top of a MBUFF.
                                                OCTEAN generates a length that includes the
                                                length of the data + 8 for the header-field. By
                                                setting this bit the 8 for the instr-field will
                                                not be included in the length field of the header.
                                                NOTE: IPD is compliant with the spec when this
                                                field is '1'.
 <8>     RESET    R/W     0x0        0x0        When set '1' causes a reset of the IPD, except    
                                                RSL.
 <7>     ADDPKT   R/W     0x0        0x0        When IPD_CTL_STATUS[ADDPKT] is set,               
                                                IPD_PORT_BP_COUNTERS_PAIR(port)[CNT_VAL],
                                                IPD_PORT_BP_COUNTERS2_PAIR(port)[CNT_VAL] and
                                                IPD_PORT_BP_COUNTERS3_PAIR(port)[CNT_VAL]
                                                WILL be incremented by one for every work
                                                queue entry that is sent to POW.
 <6>     NADDBUF  R/W     0x0        0x0        When IPD_CTL_STATUS[NADDBUF] is set,              
                                                IPD_PORT_BP_COUNTERS_PAIR(port)[CNT_VAL],
                                                IPD_PORT_BP_COUNTERS2_PAIR(port)[CNT_VAL] and
                                                IPD_PORT_BP_COUNTERS3_PAIR(port)[CNT_VAL]
                                                WILL NOT be incremented when IPD allocates a
                                                buffer for a packet on the port.
 <5>     PKT_LEND R/W     0x0        0x0        Changes PKT to little endian writes to L2C        
 <4>     WQE_LEND R/W     0x0        0x0        Changes WQE to little endian writes to L2C        
 <3>     PBP_EN   R/W     0x0        0x0        Port back pressure enable. When set '1' enables   
                                                the sending of port level backpressure to the
                                                Octane input-ports. The application should NOT
                                                de-assert this bit after asserting it. The
                                                receivers of this bit may have been put into
                                                backpressure mode and can only be released by
                                                IPD informing them that the backpressure has
                                                been released.
                                                GMXX_INF_MODE[EN] must be set to '1' for each
                                                packet interface which requires port back pressure
                                                prior to setting PBP_EN to '1'.
 <2:1>   OPC_MODE R/W     0x0        0x0        0 ==> All packet data (and next buffer pointers)  
                                                is written through to memory.
                                                1 ==> All packet data (and next buffer pointers) is
                                                written into the cache.
                                                2 ==> The first aligned cache block holding the
                                                packet data (and initial next buffer pointer) is
                                                written to the L2 cache, all remaining cache blocks
                                                are not written to the L2 cache.
                                                3 ==> The first two aligned cache blocks holding
                                                the packet data (and initial next buffer pointer)
                                                are written to the L2 cache, all remaining cache
                                                blocks are not written to the L2 cache.
 <0>     IPD_EN   R/W     0x0        0x0        When set '1' enable the operation of the IPD.     
                                                When clear '0', the IPD will appear to the
                                                IOB-arbiter to be applying backpressure, this
                                                causes the IOB-Arbiter to not send grants to NCB
                                                devices requesting to send packet data to the IPD.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_WQE_FPA_QUEUE = IPD Work-Queue-Entry FPA Page Size
 * 
 *  Which FPA Queue (0-7) to fetch page-pointers from for WQE's
 * 
$IPD_WQE_FPA_QUEUE   Address=(0x14F0000000020)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:3>  NS      RAZ     NS         NS         Reserved.                                         
 <2:0>   WQE_QUE R/W     0x1        0x1        Which FPA Queue to fetch page-pointers            
                                               from for WQE's.
                                               Not used when IPD_CTL_STATUS[NO_WPTR] is set.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_PORT_BP_PAGE_CNT
 * 
 *  IPD_PORT@_BP_PAGE_CNT = IPD Port Backpressure Page Count
 *  The number of pages in use by the port that when exceeded, backpressure will be applied to the
 *  port.
 *  See also IPD_PORT@_BP_PAGE_CNT2
 *  See also IPD_PORT@_BP_PAGE_CNT3
 *  Attribute: -exempt_natural_alignment=a.
 * 
$IPD_PORT(0..3,16..19,24,32..35)_BP_PAGE_CNT   Address=(0x14F0000000028+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:18> NS       RAZ     NS         NS         Reserved.                                         
 <17>    BP_ENB   R/W     0x0        0x0        When set '1' BP will be applied, if '0' BP will   
                                                not be applied to port.
 <16:0>  PAGE_CNT R/W     0x0        0x0        The number of page pointers assigned to           
                                                the port, that when exceeded will cause
                                                back-pressure to be applied to the port.
                                                This value is in 256 page-pointer increments,
                                                (i.e. 0 = 0-page-ptrs, 1 = 256-page-ptrs,..)
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_SUB_PORT_BP_PAGE_CNT = IPD Subtract Port Backpressure Page Count
 * 
 *  Will add the value to the indicated port count register, the number of pages supplied. The
 *  value added should
 *  be the 2's complement of the value that needs to be subtracted. Users add 2's complement
 *  values to the
 *  port-mbuf-count register to return (lower the count) mbufs to the counter in order to avoid
 *  port-level
 *  backpressure being applied to the port. Backpressure is applied when the MBUF used count of a
 *  port exceeds the
 *  value in the IPD_PORT@_BP_PAGE_CNT, IPD_PORT@_BP_PAGE_CNT2, and IPD_PORT@_BP_PAGE_CNT3.
 *  This register can't be written from the PCI via a window write.
 * 
$IPD_SUB_PORT_BP_PAGE_CNT   Address=(0x14F0000000148)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:31> NS       RAZ     NS         NS         Reserved.                                         
 <30:25> PORT     R/W     NS         0x0        The port to add the PAGE_CNT field to.            
 <24:0>  PAGE_CNT R/W     NS         0x0        The number of page pointers to add to             
                                                the port counter pointed to by the
                                                PORT Field.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_1ST_NEXT_PTR_BACK
 * 
 *  IPD_1st_NEXT_PTR_BACK = IPD First Next Pointer Back Values
 *  Contains the Back Field for use in creating the Next Pointer Header for the First MBUF
 * 
$IPD_1ST_NEXT_PTR_BACK   Address=(0x14F0000000150)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS    RAZ     NS         NS         Reserved.                                         
 <3:0>   BACK  R/W     0x0        0x0        Used to find head of buffer from the nxt-hdr-ptr. 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_2ND_NEXT_PTR_BACK = IPD Second Next Pointer Back Value
 * 
 *  Contains the Back Field for use in creating the Next Pointer Header for the First MBUF
 * 
$IPD_2ND_NEXT_PTR_BACK   Address=(0x14F0000000158)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS    RAZ     NS         NS         Reserved.                                         
 <3:0>   BACK  R/W     0x0        0x0        Used to find head of buffer from the nxt-hdr-ptr. 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_INT_ENB
 * 
 *  IPD_INTERRUPT_ENB = IPD Interrupt Enable Register
 *  Used to enable the various interrupting conditions of IPD
 * 
$IPD_INT_ENB   Address=(0x14F0000000160)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:12> NS       RAZ     NS         NS         Reserved.                                         
 <11>    PQ_SUB   R/W     0x0        0x0        Allows an interrupt to be sent when the           
                                                corresponding bit in the IPD_INT_SUM is set.
 <10>    PQ_ADD   R/W     0x0        0x0        Allows an interrupt to be sent when the           
                                                corresponding bit in the IPD_INT_SUM is set.
 <9>     BC_OVR   R/W     0x0        0x0        Allows an interrupt to be sent when the           
                                                corresponding bit in the IPD_INT_SUM is set.
 <8>     D_COLL   R/W     0x0        0x0        Allows an interrupt to be sent when the           
                                                corresponding bit in the IPD_INT_SUM is set.
 <7>     C_COLL   R/W     0x0        0x0        Allows an interrupt to be sent when the           
                                                corresponding bit in the IPD_INT_SUM is set.
 <6>     CC_OVR   R/W     0x0        0x0        Allows an interrupt to be sent when the           
                                                corresponding bit in the IPD_INT_SUM is set.
 <5>     DC_OVR   R/W     0x0        0x0        Allows an interrupt to be sent when the           
                                                corresponding bit in the IPD_INT_SUM is set.
 <4>     BP_SUB   R/W     0x0        0x0        Enables interrupts when a backpressure subtract   
                                                has an illegal value.
 <3>     PRC_PAR3 R/W     0x0        0x0        Enable parity error interrupts for bits           
                                                [127:96] of the PBM memory.
 <2>     PRC_PAR2 R/W     0x0        0x0        Enable parity error interrupts for bits           
                                                [95:64] of the PBM memory.
 <1>     PRC_PAR1 R/W     0x0        0x0        Enable parity error interrupts for bits           
                                                [63:32] of the PBM memory.
 <0>     PRC_PAR0 R/W     0x0        0x0        Enable parity error interrupts for bits           
                                                [31:0] of the PBM memory.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_INT_SUM
 * 
 *  IPD_INTERRUPT_SUM = IPD Interrupt Summary Register
 *  Set when an interrupt condition occurs, write '1' to clear.
 * 
$IPD_INT_SUM   Address=(0x14F0000000168)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:12> NS       RAZ     NS         NS         Reserved.                                         
 <11>    PQ_SUB   R/W1C/H 0x0        0x0        Set when a port-qos does an sub to the count      
                                                that causes the counter to wrap.
 <10>    PQ_ADD   R/W1C/H 0x0        0x0        Set when a port-qos does an add to the count      
                                                that causes the counter to wrap.
 <9>     BC_OVR   R/W1C/H 0x0        0x0        Set when the byte-count to send to IOB overflows. 
 <8>     D_COLL   R/W1C/H 0x0        0x0        Set when the packet/WQE data to be sent to IOB    
                                                collides.
 <7>     C_COLL   R/W1C/H 0x0        0x0        Set when the packet/WQE commands to be sent to IOB
                                                collides.
 <6>     CC_OVR   R/W1C/H 0x0        0x0        Set when the command credits to the IOB overflow. 
 <5>     DC_OVR   R/W1C/H 0x0        0x0        Set when the data credits to the IOB overflow.    
 <4>     BP_SUB   R/W1C/H 0x0        0x0        Set when a backpressure subtract is done with a   
                                                supplied illegal value.
 <3>     PRC_PAR3 R/W1C/H 0x0        0x0        Set when a parity error is dected for bits        
                                                [127:96] of the PBM memory.
 <2>     PRC_PAR2 R/W1C/H 0x0        0x0        Set when a parity error is dected for bits        
                                                [95:64] of the PBM memory.
 <1>     PRC_PAR1 R/W1C/H 0x0        0x0        Set when a parity error is dected for bits        
                                                [63:32] of the PBM memory.
 <0>     PRC_PAR0 R/W1C/H 0x0        0x0        Set when a parity error is dected for bits        
                                                [31:0] of the PBM memory.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_SUB_PORT_FCS = IPD Subtract Ports FCS Register
 * 
 *  When set '1' the port corresponding to the bit set will subtract 4 bytes from the end of
 *  the packet.
 * 
$IPD_SUB_PORT_FCS   Address=(0x14F0000000170)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:40> NS        RAZ     NS         NS         Reserved.                                         
 <39:36> PORT_BIT2 R/W     0xf        0xf        When set '1', the port corresponding to the bit   
                                                 position set, will subtract the FCS for packets
                                                 on that port.
 <35:32> NS        RAZ     NS         NS         Reserved.                                         
 <31:0>  PORT_BIT  R/W     0xffffffff 0xffffffff When set '1', the port corresponding to the bit   
                                                 position set, will subtract the FCS for packets
                                                 on that port.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_QOS0_RED_MARKS = IPD QOS 0 Marks Red High Low
 * 
 *  Set the pass-drop marks for qos level.
 * 
$IPD_QOS0_RED_MARKS   Address=(0x14F0000000178)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> DROP R/W     0x0        NS         Packets will be dropped when the average value of 
                                            IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                            this value.
 <31:0>  PASS R/W     0x0        NS         Packets will be passed when the average value of  
                                            IPD_QUE0_FREE_PAGE_CNT is larger than this value.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_QOS1_RED_MARKS = IPD QOS 1 Marks Red High Low
 * 
 *  Set the pass-drop marks for qos level.
 * 
$IPD_QOS1_RED_MARKS   Address=(0x14F0000000180)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> DROP R/W     0x0        NS         Packets will be dropped when the average value of 
                                            IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                            this value.
 <31:0>  PASS R/W     0x0        NS         Packets will be passed when the average value of  
                                            IPD_QUE0_FREE_PAGE_CNT is larger than this value.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_QOS2_RED_MARKS = IPD QOS 2 Marks Red High Low
 * 
 *  Set the pass-drop marks for qos level.
 * 
$IPD_QOS2_RED_MARKS   Address=(0x14F0000000188)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> DROP R/W     0x0        NS         Packets will be dropped when the average value of 
                                            IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                            this value.
 <31:0>  PASS R/W     0x0        NS         Packets will be passed when the average value of  
                                            IPD_QUE0_FREE_PAGE_CNT is larger than this value.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_QOS3_RED_MARKS = IPD QOS 3 Marks Red High Low
 * 
 *  Set the pass-drop marks for qos level.
 * 
$IPD_QOS3_RED_MARKS   Address=(0x14F0000000190)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> DROP R/W     0x0        NS         Packets will be dropped when the average value of 
                                            IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                            this value.
 <31:0>  PASS R/W     0x0        NS         Packets will be passed when the average value of  
                                            IPD_QUE0_FREE_PAGE_CNT is larger than this value.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_QOS4_RED_MARKS = IPD QOS 4 Marks Red High Low
 * 
 *  Set the pass-drop marks for qos level.
 * 
$IPD_QOS4_RED_MARKS   Address=(0x14F0000000198)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> DROP R/W     0x0        NS         Packets will be dropped when the average value of 
                                            IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                            this value.
 <31:0>  PASS R/W     0x0        NS         Packets will be passed when the average value of  
                                            IPD_QUE0_FREE_PAGE_CNT is larger than this value.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_QOS5_RED_MARKS = IPD QOS 5 Marks Red High Low
 * 
 *  Set the pass-drop marks for qos level.
 * 
$IPD_QOS5_RED_MARKS   Address=(0x14F00000001A0)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> DROP R/W     0x0        NS         Packets will be dropped when the average value of 
                                            IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                            this value.
 <31:0>  PASS R/W     0x0        NS         Packets will be passed when the average value of  
                                            IPD_QUE0_FREE_PAGE_CNT is larger than this value.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_QOS6_RED_MARKS = IPD QOS 6 Marks Red High Low
 * 
 *  Set the pass-drop marks for qos level.
 * 
$IPD_QOS6_RED_MARKS   Address=(0x14F00000001A8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> DROP R/W     0x0        NS         Packets will be dropped when the average value of 
                                            IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                            this value.
 <31:0>  PASS R/W     0x0        NS         Packets will be passed when the average value of  
                                            IPD_QUE0_FREE_PAGE_CNT is larger than this value.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_QOS7_RED_MARKS = IPD QOS 7 Marks Red High Low
 * 
 *  Set the pass-drop marks for qos level.
 * 
$IPD_QOS7_RED_MARKS   Address=(0x14F00000001B0)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> DROP R/W     0x0        NS         Packets will be dropped when the average value of 
                                            IPD_QUE0_FREE_PAGE_CNT is equal to or less than
                                            this value.
 <31:0>  PASS R/W     0x0        NS         Packets will be passed when the average value of  
                                            IPD_QUE0_FREE_PAGE_CNT is larger than this value.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_PORT_BP_COUNTERS_PAIR
 * 
 *  See also IPD_PORT_BP_COUNTERS2_PAIR@
 *  See also IPD_PORT_BP_COUNTERS3_PAIR@
 *  0x1b8-0x2d0
 *  Attribute: -exempt_natural_alignment=a.
 * 
$IPD_PORT_BP_COUNTERS_PAIR(0..3,16..19,24, 32..35)   Address=(0x14F00000001B8+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:25> NS      RAZ     NS         NS         Reserved.                                         
 <24:0>  CNT_VAL RO/H    0x0        NS         Number of MBUFs being used by data on this port.  
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_RED_PORT_ENABLE = IPD RED Port Enable
 * 
 *  Set the pass-drop marks for qos level.
 * 
$IPD_RED_PORT_ENABLE   Address=(0x14F00000002D8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:50> PRB_DLY R/W     0x0        0x0        Number (core clocks periods + 68) * 8 to wait     
                                               before calculating the new packet drop
                                               probability for each QOS level.
 <49:36> AVG_DLY R/W     0x0        NS         Number (core clocks periods + 10) * 8 to wait     
                                               before calculating the moving average for each
                                               QOS level.
                                               Larger AVG_DLY values cause the moving averages
                                               of ALL QOS levels to track changes in the actual
                                               free space more slowly. Smaller NEW_CON (and
                                               larger AVG_CON) values can have a similar effect,
                                               but only affect an individual QOS level, rather
                                               than all.
 <35:0>  PRT_ENB R/W     0x0        0x0        The bit position will enable the corresponding    
                                               Ports ability to have packets dropped by RED
                                               probability.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_RED_QUE0_PARAM = IPD RED Queue-0 Parameters
 * 
 *  Value control the Passing and Dropping of packets by the red engine for QOS Level-0.
 * 
$IPD_RED_QUE0_PARAM   Address=(0x14F00000002E0)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:49> NS       RAZ     NS         NS         Reserved.                                         
 <48>    USE_PCNT R/W     0x0        0x0        When set '1' red will use the actual Packet-Page  
                                                Count in place of the Average for RED calculations.
 <47:40> NEW_CON  R/W     0x0        NS         This value is used control how much of the present
                                                Actual Queue Size is used to calculate the new
                                                Average Queue Size. The value is a number from 0
                                                256, which represents NEW_CON/256 of the Actual
                                                Queue Size that will be used in the calculation.
                                                The number in this field plus the value of
                                                AVG_CON must be equal to 256.
                                                Larger AVG_DLY values cause the moving averages
                                                of ALL QOS levels to track changes in the actual
                                                free space more slowly. Smaller NEW_CON (and
                                                larger AVG_CON) values can have a similar effect,
                                                but only affect an individual QOS level, rather
                                                than all.
 <39:32> AVG_CON  R/W     0x0        NS         This value is used control how much of the present
                                                Average Queue Size is used to calculate the new
                                                Average Queue Size. The value is a number from 0
                                                256, which represents AVG_CON/256 of the Average
                                                Queue Size that will be used in the calculation.
                                                The number in this field plus the value of
                                                NEW_CON must be equal to 256.
                                                Larger AVG_DLY values cause the moving averages
                                                of ALL QOS levels to track changes in the actual
                                                free space more slowly. Smaller NEW_CON (and
                                                larger AVG_CON) values can have a similar effect,
                                                but only affect an individual QOS level, rather
                                                than all.
 <31:0>  PRB_CON  R/W     0x0        NS         Used in computing the probability of a packet being
                                                passed or drop by the WRED engine. The field is
                                                calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                PASS and DROP are the field from the
                                                IPD_QOS0_RED_MARKS CSR.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_RED_QUE1_PARAM = IPD RED Queue-1 Parameters
 * 
 *  Value control the Passing and Dropping of packets by the red engine for QOS Level-1.
 * 
$IPD_RED_QUE1_PARAM   Address=(0x14F00000002E8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:49> NS       RAZ     NS         NS         Reserved.                                         
 <48>    USE_PCNT R/W     0x0        0x0        When set '1' red will use the actual Packet-Page  
                                                Count in place of the Average for RED calculations.
 <47:40> NEW_CON  R/W     0x0        NS         This value is used control how much of the present
                                                Actual Queue Size is used to calculate the new
                                                Average Queue Size. The value is a number from 0
                                                256, which represents NEW_CON/256 of the Actual
                                                Queue Size that will be used in the calculation.
                                                The number in this field plus the value of
                                                AVG_CON must be equal to 256.
                                                Larger AVG_DLY values cause the moving averages
                                                of ALL QOS levels to track changes in the actual
                                                free space more slowly. Smaller NEW_CON (and
                                                larger AVG_CON) values can have a similar effect,
                                                but only affect an individual QOS level, rather
                                                than all.
 <39:32> AVG_CON  R/W     0x0        NS         This value is used control how much of the present
                                                Average Queue Size is used to calculate the new
                                                Average Queue Size. The value is a number from 0
                                                256, which represents AVG_CON/256 of the Average
                                                Queue Size that will be used in the calculation.
                                                The number in this field plus the value of
                                                NEW_CON must be equal to 256.
                                                Larger AVG_DLY values cause the moving averages
                                                of ALL QOS levels to track changes in the actual
                                                free space more slowly. Smaller NEW_CON (and
                                                larger AVG_CON) values can have a similar effect,
                                                but only affect an individual QOS level, rather
                                                than all.
 <31:0>  PRB_CON  R/W     0x0        NS         Used in computing the probability of a packet being
                                                passed or drop by the WRED engine. The field is
                                                calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                PASS and DROP are the field from the
                                                IPD_QOS1_RED_MARKS CSR.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_RED_QUE2_PARAM = IPD RED Queue-2 Parameters
 * 
 *  Value control the Passing and Dropping of packets by the red engine for QOS Level-2.
 * 
$IPD_RED_QUE2_PARAM   Address=(0x14F00000002F0)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:49> NS       RAZ     NS         NS         Reserved.                                         
 <48>    USE_PCNT R/W     0x0        0x0        When set '1' red will use the actual Packet-Page  
                                                Count in place of the Average for RED calculations.
 <47:40> NEW_CON  R/W     0x0        NS         This value is used control how much of the present
                                                Actual Queue Size is used to calculate the new
                                                Average Queue Size. The value is a number from 0
                                                256, which represents NEW_CON/256 of the Actual
                                                Queue Size that will be used in the calculation.
                                                The number in this field plus the value of
                                                AVG_CON must be equal to 256.
                                                Larger AVG_DLY values cause the moving averages
                                                of ALL QOS levels to track changes in the actual
                                                free space more slowly. Smaller NEW_CON (and
                                                larger AVG_CON) values can have a similar effect,
                                                but only affect an individual QOS level, rather
                                                than all.
 <39:32> AVG_CON  R/W     0x0        NS         This value is used control how much of the present
                                                Average Queue Size is used to calculate the new
                                                Average Queue Size. The value is a number from 0
                                                256, which represents AVG_CON/256 of the Average
                                                Queue Size that will be used in the calculation.
                                                The number in this field plus the value of
                                                NEW_CON must be equal to 256.
                                                Larger AVG_DLY values cause the moving averages
                                                of ALL QOS levels to track changes in the actual
                                                free space more slowly. Smaller NEW_CON (and
                                                larger AVG_CON) values can have a similar effect,
                                                but only affect an individual QOS level, rather
                                                than all.
 <31:0>  PRB_CON  R/W     0x0        NS         Used in computing the probability of a packet being
                                                passed or drop by the WRED engine. The field is
                                                calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                PASS and DROP are the field from the
                                                IPD_QOS2_RED_MARKS CSR.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_RED_QUE3_PARAM = IPD RED Queue-3 Parameters
 * 
 *  Value control the Passing and Dropping of packets by the red engine for QOS Level-3.
 * 
$IPD_RED_QUE3_PARAM   Address=(0x14F00000002F8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:49> NS       RAZ     NS         NS         Reserved.                                         
 <48>    USE_PCNT R/W     0x0        0x0        When set '1' red will use the actual Packet-Page  
                                                Count in place of the Average for RED calculations.
 <47:40> NEW_CON  R/W     0x0        NS         This value is used control how much of the present
                                                Actual Queue Size is used to calculate the new
                                                Average Queue Size. The value is a number from 0
                                                256, which represents NEW_CON/256 of the Actual
                                                Queue Size that will be used in the calculation.
                                                The number in this field plus the value of
                                                AVG_CON must be equal to 256.
                                                Larger AVG_DLY values cause the moving averages
                                                of ALL QOS levels to track changes in the actual
                                                free space more slowly. Smaller NEW_CON (and
                                                larger AVG_CON) values can have a similar effect,
                                                but only affect an individual QOS level, rather
                                                than all.
 <39:32> AVG_CON  R/W     0x0        NS         This value is used control how much of the present
                                                Average Queue Size is used to calculate the new
                                                Average Queue Size. The value is a number from 0
                                                256, which represents AVG_CON/256 of the Average
                                                Queue Size that will be used in the calculation.
                                                The number in this field plus the value of
                                                NEW_CON must be equal to 256.
                                                Larger AVG_DLY values cause the moving averages
                                                of ALL QOS levels to track changes in the actual
                                                free space more slowly. Smaller NEW_CON (and
                                                larger AVG_CON) values can have a similar effect,
                                                but only affect an individual QOS level, rather
                                                than all.
 <31:0>  PRB_CON  R/W     0x0        NS         Used in computing the probability of a packet being
                                                passed or drop by the WRED engine. The field is
                                                calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                PASS and DROP are the field from the
                                                IPD_QOS3_RED_MARKS CSR.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_RED_QUE4_PARAM = IPD RED Queue-4 Parameters
 * 
 *  Value control the Passing and Dropping of packets by the red engine for QOS Level-4.
 * 
$IPD_RED_QUE4_PARAM   Address=(0x14F0000000300)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:49> NS       RAZ     NS         NS         Reserved.                                         
 <48>    USE_PCNT R/W     0x0        0x0        When set '1' red will use the actual Packet-Page  
                                                Count in place of the Average for RED calculations.
 <47:40> NEW_CON  R/W     0x0        NS         This value is used control how much of the present
                                                Actual Queue Size is used to calculate the new
                                                Average Queue Size. The value is a number from 0
                                                256, which represents NEW_CON/256 of the Actual
                                                Queue Size that will be used in the calculation.
                                                The number in this field plus the value of
                                                AVG_CON must be equal to 256.
                                                Larger AVG_DLY values cause the moving averages
                                                of ALL QOS levels to track changes in the actual
                                                free space more slowly. Smaller NEW_CON (and
                                                larger AVG_CON) values can have a similar effect,
                                                but only affect an individual QOS level, rather
                                                than all.
 <39:32> AVG_CON  R/W     0x0        NS         This value is used control how much of the present
                                                Average Queue Size is used to calculate the new
                                                Average Queue Size. The value is a number from 0
                                                256, which represents AVG_CON/256 of the Average
                                                Queue Size that will be used in the calculation.
                                                The number in this field plus the value of
                                                NEW_CON must be equal to 256.
                                                Larger AVG_DLY values cause the moving averages
                                                of ALL QOS levels to track changes in the actual
                                                free space more slowly. Smaller NEW_CON (and
                                                larger AVG_CON) values can have a similar effect,
                                                but only affect an individual QOS level, rather
                                                than all.
 <31:0>  PRB_CON  R/W     0x0        NS         Used in computing the probability of a packet being
                                                passed or drop by the WRED engine. The field is
                                                calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                PASS and DROP are the field from the
                                                IPD_QOS4_RED_MARKS CSR.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_RED_QUE5_PARAM = IPD RED Queue-5 Parameters
 * 
 *  Value control the Passing and Dropping of packets by the red engine for QOS Level-5.
 * 
$IPD_RED_QUE5_PARAM   Address=(0x14F0000000308)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:49> NS       RAZ     NS         NS         Reserved.                                         
 <48>    USE_PCNT R/W     0x0        0x0        When set '1' red will use the actual Packet-Page  
                                                Count in place of the Average for RED calculations.
 <47:40> NEW_CON  R/W     0x0        NS         This value is used control how much of the present
                                                Actual Queue Size is used to calculate the new
                                                Average Queue Size. The value is a number from 0
                                                256, which represents NEW_CON/256 of the Actual
                                                Queue Size that will be used in the calculation.
                                                The number in this field plus the value of
                                                AVG_CON must be equal to 256.
                                                Larger AVG_DLY values cause the moving averages
                                                of ALL QOS levels to track changes in the actual
                                                free space more slowly. Smaller NEW_CON (and
                                                larger AVG_CON) values can have a similar effect,
                                                but only affect an individual QOS level, rather
                                                than all.
 <39:32> AVG_CON  R/W     0x0        NS         This value is used control how much of the present
                                                Average Queue Size is used to calculate the new
                                                Average Queue Size. The value is a number from 0
                                                256, which represents AVG_CON/256 of the Average
                                                Queue Size that will be used in the calculation.
                                                The number in this field plus the value of
                                                NEW_CON must be equal to 256.
                                                Larger AVG_DLY values cause the moving averages
                                                of ALL QOS levels to track changes in the actual
                                                free space more slowly. Smaller NEW_CON (and
                                                larger AVG_CON) values can have a similar effect,
                                                but only affect an individual QOS level, rather
                                                than all.
 <31:0>  PRB_CON  R/W     0x0        NS         Used in computing the probability of a packet being
                                                passed or drop by the WRED engine. The field is
                                                calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                PASS and DROP are the field from the
                                                IPD_QOS5_RED_MARKS CSR.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_RED_QUE6_PARAM = IPD RED Queue-6 Parameters
 * 
 *  Value control the Passing and Dropping of packets by the red engine for QOS Level-6.
 * 
$IPD_RED_QUE6_PARAM   Address=(0x14F0000000310)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:49> NS       RAZ     NS         NS         Reserved.                                         
 <48>    USE_PCNT R/W     0x0        0x0        When set '1' red will use the actual Packet-Page  
                                                Count in place of the Average for RED calculations.
 <47:40> NEW_CON  R/W     0x0        NS         This value is used control how much of the present
                                                Actual Queue Size is used to calculate the new
                                                Average Queue Size. The value is a number from 0
                                                256, which represents NEW_CON/256 of the Actual
                                                Queue Size that will be used in the calculation.
                                                The number in this field plus the value of
                                                AVG_CON must be equal to 256.
                                                Larger AVG_DLY values cause the moving averages
                                                of ALL QOS levels to track changes in the actual
                                                free space more slowly. Smaller NEW_CON (and
                                                larger AVG_CON) values can have a similar effect,
                                                but only affect an individual QOS level, rather
                                                than all.
 <39:32> AVG_CON  R/W     0x0        NS         This value is used control how much of the present
                                                Average Queue Size is used to calculate the new
                                                Average Queue Size. The value is a number from 0
                                                256, which represents AVG_CON/256 of the Average
                                                Queue Size that will be used in the calculation.
                                                The number in this field plus the value of
                                                NEW_CON must be equal to 256.
                                                Larger AVG_DLY values cause the moving averages
                                                of ALL QOS levels to track changes in the actual
                                                free space more slowly. Smaller NEW_CON (and
                                                larger AVG_CON) values can have a similar effect,
                                                but only affect an individual QOS level, rather
                                                than all.
 <31:0>  PRB_CON  R/W     0x0        NS         Used in computing the probability of a packet being
                                                passed or drop by the WRED engine. The field is
                                                calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                PASS and DROP are the field from the
                                                IPD_QOS6_RED_MARKS CSR.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_RED_QUE7_PARAM = IPD RED Queue-7 Parameters
 * 
 *  Value control the Passing and Dropping of packets by the red engine for QOS Level-7.
 * 
$IPD_RED_QUE7_PARAM   Address=(0x14F0000000318)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:49> NS       RAZ     NS         NS         Reserved.                                         
 <48>    USE_PCNT R/W     0x0        0x0        When set '1' red will use the actual Packet-Page  
                                                Count in place of the Average for RED calculations.
 <47:40> NEW_CON  R/W     0x0        NS         This value is used control how much of the present
                                                Actual Queue Size is used to calculate the new
                                                Average Queue Size. The value is a number from 0
                                                256, which represents NEW_CON/256 of the Actual
                                                Queue Size that will be used in the calculation.
                                                The number in this field plus the value of
                                                AVG_CON must be equal to 256.
                                                Larger AVG_DLY values cause the moving averages
                                                of ALL QOS levels to track changes in the actual
                                                free space more slowly. Smaller NEW_CON (and
                                                larger AVG_CON) values can have a similar effect,
                                                but only affect an individual QOS level, rather
                                                than all.
 <39:32> AVG_CON  R/W     0x0        NS         This value is used control how much of the present
                                                Average Queue Size is used to calculate the new
                                                Average Queue Size. The value is a number from 0
                                                256, which represents AVG_CON/256 of the Average
                                                Queue Size that will be used in the calculation.
                                                The number in this field plus the value of
                                                NEW_CON must be equal to 256.
                                                Larger AVG_DLY values cause the moving averages
                                                of ALL QOS levels to track changes in the actual
                                                free space more slowly. Smaller NEW_CON (and
                                                larger AVG_CON) values can have a similar effect,
                                                but only affect an individual QOS level, rather
                                                than all.
 <31:0>  PRB_CON  R/W     0x0        NS         Used in computing the probability of a packet being
                                                passed or drop by the WRED engine. The field is
                                                calculated to be (255 * 2^24)/(PASS-DROP). Where
                                                PASS and DROP are the field from the
                                                IPD_QOS7_RED_MARKS CSR.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_PTR_COUNT = IPD Page Pointer Count
 * 
 *  Shows the number of WQE and Packet Page Pointers stored in the IPD.
 * 
$IPD_PTR_COUNT   Address=(0x14F0000000320)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:19> NS       RAZ     NS         NS         Reserved.                                         
 <18>    PKTV_CNT RO/H    0x0        0x0        PKT Ptr Valid.                                    
 <17>    WQEV_CNT RO/H    0x0        0x0        WQE Ptr Valid. This value is '1' when a WQE       
                                                is being for use by the IPD. The value of this
                                                field should be added to tha value of the
                                                WQE_PCNT field, of this register, for a total
                                                count of the WQE Page Pointers being held by IPD.
                                                When IPD_CTL_STATUS[NO_WPTR] is set '1' this field
                                                represents a Packet-Pointer NOT a WQE pointer.
 <16:14> PFIF_CNT RO/H    0x0        0x0        See PKT_PCNT.                                     
 <13:7>  PKT_PCNT RO/H    0x0        0x0        This value plus PFIF_CNT plus                     
                                                IPD_PRC_PORT_PTR_FIFO_CTL[MAX_PKT] is the number
                                                of PKT Page Pointers in IPD.
 <6:0>   WQE_PCNT RO/H    0x0        0x0        Number of page pointers for WQE storage that are  
                                                buffered in the IPD. The total count is the value
                                                of this buffer plus the field [WQEV_CNT].
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_BP_PRT_RED_END = IPD Backpressure Port RED Enable
 * 
 *  When IPD applies backpressure to a PORT and the corresponding bit in this register is set,
 *  the RED Unit will drop packets for that port.
 * 
$IPD_BP_PRT_RED_END   Address=(0x14F0000000328)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS      RAZ     NS         NS         Reserved.                                         
 <47:0>  PRT_ENB R/W     0x0        0x0        The port corresponding to the bit position in this
                                               field will drop all NON-RAW packets to that port
                                               when port level backpressure is applied to that
                                               port.  The applying of port-level backpressure for
                                               this dropping does not take into consideration the
                                               value of IPD_PORT@_BP_PAGE_CNT[BP_ENB], nor
                                               IPD_RED_PORT_ENABLE[PRT_ENB].
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_QUE0_FREE_PAGE_CNT = IPD Queue0 Free Page Count
 * 
 *  Number of Free-Page Pointer that are available for use in the FPA for Queue-0.
 * 
$IPD_QUE0_FREE_PAGE_CNT   Address=(0x14F0000000330)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS      RAZ     NS         NS         Reserved.                                         
 <31:0>  Q0_PCNT RO/H    0x0        0x0        Number of Queue-0 Page Pointers Available.        
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_CLK_COUNT = IPD Clock Count
 * 
 *  Counts the number of core clocks periods since the de-asserition of reset.
 * 
$IPD_CLK_COUNT   Address=(0x14F0000000338)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  CLK_CNT RO/H    0x0        0x0        This counter will be zeroed when reset is applied 
                                               and will increment every rising edge of the
                                               core-clock.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_PWP_PTR_FIFO_CTL = IPD's PWP Pointer FIFO Control
 * 
 *  Allows reading of the Page-Pointers stored in the IPD's PWP Fifo.
 * 
$IPD_PWP_PTR_FIFO_CTL   Address=(0x14F0000000340)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:61> NS       RAZ     NS         NS         Reserved.                                         
 <60:54> MAX_CNTS RO      0x40       0x40       Maximum number of Packet-Pointers or WQE-Pointers 
                                                that COULD be in the FIFO.
                                                When IPD_CTL_STATUS[NO_WPTR] is set '1' this field
                                                only represents the Max number of Packet-Pointers,
                                                WQE-Pointers are not used in this mode.
 <53:46> WRADDR   RO/H    NS         NS         Present FIFO WQE Read address.                    
 <45:38> PRADDR   RO/H    NS         NS         Present FIFO Packet Read address.                 
 <37:9>  PTR      RO/H    NS         NS         The output of the pwp_fifo.                       
 <8>     CENA     R/W     0x1        0x1        Active low Chip Enable to the read port of the    
                                                pwp_fifo. This bit also controls the MUX-select
                                                that steers [RADDR] to the pwp_fifo.
                                                *WARNING - Setting this field to '0' will allow
                                                reading of the memories thorugh the PTR field,
                                                but will cause unpredictable operation of the IPD
                                                under normal operation.
 <7:0>   RADDR    R/W     0x0        0x0        Sets the address to read from in the pwp_fifo.    
                                                Addresses 0 through 63 contain Packet-Pointers and
                                                addresses 64 through 127 contain WQE-Pointers.
                                                When IPD_CTL_STATUS[NO_WPTR] is set '1' addresses
                                                64 through 127 are not valid.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_PRC_HOLD_PTR_FIFO_CTL = IPD's PRC Holding Pointer FIFO Control
 * 
 *  Allows reading of the Page-Pointers stored in the IPD's PRC Holding Fifo.
 * 
$IPD_PRC_HOLD_PTR_FIFO_CTL   Address=(0x14F0000000348)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:39> NS      RAZ     NS         NS         Reserved.                                         
 <38:36> MAX_PKT RO      0x5        0x5        Maximum number of Packet-Pointers that COULD be   
                                               in the FIFO.
 <35:33> PRADDR  RO/H    NS         NS         Present Packet-Pointer read address.              
 <32:4>  PTR     RO/H    NS         NS         The output of the prc-holding-fifo.               
 <3>     CENA    R/W     0x1        0x1        Active low Chip Enable that controls the          
                                               MUX-select that steers [RADDR] to the fifo.
                                               *WARNING - Setting this field to '0' will allow
                                               reading of the memories thorugh the PTR field,
                                               but will cause unpredictable operation of the IPD
                                               under normal operation.
 <2:0>   RADDR   R/W     0x0        0x0        Sets the address to read from in the holding.     
                                               fifo in the PRC. This FIFO holds Packet-Pointers
                                               to be used for packet data storage.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_PRC_PORT_PTR_FIFO_CTL = IPD's PRC PORT Pointer FIFO Control
 * 
 *  Allows reading of the Page-Pointers stored in the IPD's PRC PORT Fifo.
 * 
$IPD_PRC_PORT_PTR_FIFO_CTL   Address=(0x14F0000000350)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:44> NS      RAZ     NS         NS         Reserved.                                         
 <43:37> MAX_PKT RO      0x40       0x40       Maximum number of Packet-Pointers that are in     
                                               in the FIFO.
 <36:8>  PTR     RO/H    NS         NS         The output of the prc-port-ptr-fifo.              
 <7>     CENA    R/W     0x1        0x1        Active low Chip Enable to the read port of the    
                                               pwp_fifo. This bit also controls the MUX-select
                                               that steers [RADDR] to the pwp_fifo.
                                               *WARNING - Setting this field to '0' will allow
                                               reading of the memories thorugh the PTR field,
                                               but will cause unpredictable operation of the IPD
                                               under normal operation.
 <6:0>   RADDR   R/W     0x0        0x0        Sets the address to read from in the port         
                                               fifo in the PRC. This FIFO holds Packet-Pointers
                                               to be used for packet data storage.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_PKT_PTR_VALID = IPD's Packet Pointer Valid
 * 
 *  The value of the packet-pointer fetched and in the valid register.
 * 
$IPD_PKT_PTR_VALID   Address=(0x14F0000000358)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:29> NS    RAZ     NS         NS         Reserved.                                         
 <28:0>  PTR   RO/H    NS         NS         Pointer value.                                    
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_WQE_PTR_VALID = IPD's WQE Pointer Valid
 * 
 *  The value of the WQE-pointer fetched and in the valid register.
 * 
$IPD_WQE_PTR_VALID   Address=(0x14F0000000360)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:29> NS    RAZ     NS         NS         Reserved.                                         
 <28:0>  PTR   RO/H    NS         NS         Pointer value.                                    
                                             When IPD_CTL_STATUS[NO_WPTR] is set '1' this field
                                             represents a Packet-Pointer NOT a WQE pointer.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_PORT_BP_PAGE_CNT2
 * 
 *  IPD_PORT@_BP_PAGE_CNT2 = IPD Port Backpressure Page Count
 *  The number of pages in use by the port that when exceeded, backpressure will be applied to the
 *  port.
 *  See also IPD_PORT@_BP_PAGE_CNT
 *  See also IPD_PORT@_BP_PAGE_CNT3
 *  0x368-0x380
 *  Attribute: -exempt_natural_alignment=a.
 * 
$IPD_PORT(36..39)_BP_PAGE_CNT2   Address=(0x14F0000000248+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:18> NS       RAZ     NS         NS         Reserved.                                         
 <17>    BP_ENB   R/W     0x0        0x0        When set '1' BP will be applied, if '0' BP will   
                                                not be applied to port.
 <16:0>  PAGE_CNT R/W     0x0        0x0        The number of page pointers assigned to           
                                                the port, that when exceeded will cause
                                                back-pressure to be applied to the port.
                                                This value is in 256 page-pointer increments,
                                                (i.e. 0 = 0-page-ptrs, 1 = 256-page-ptrs,..)
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_PORT_BP_COUNTERS2_PAIR
 * 
 *  See also IPD_PORT_BP_COUNTERS_PAIR@
 *  See also IPD_PORT_BP_COUNTERS3_PAIR@
 *  0x388-0x3a0
 *  Attribute: -exempt_natural_alignment=a.
 * 
$IPD_PORT_BP_COUNTERS2_PAIR(36..39)   Address=(0x14F0000000268+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:25> NS      RAZ     NS         NS         Reserved.                                         
 <24:0>  CNT_VAL RO/H    0x0        NS         Number of MBUFs being used by data on this port.  
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_RED_PORT_ENABLE2 = IPD RED Port Enable2
 * 
 *  Set the pass-drop marks for qos level.
 * 
$IPD_RED_PORT_ENABLE2   Address=(0x14F00000003A8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:12> NS      RAZ     NS         NS         Reserved.                                         
 <11:0>  PRT_ENB R/W     0x0        0x0        Bits 11-0 corresponds to ports 47-36. These bits  
                                               have the same meaning as the PRT_ENB field of
                                               IPD_RED_PORT_ENABLE.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_PORT_BP_COUNTERS3_PAIR
 * 
 *  See also IPD_PORT_BP_COUNTERS_PAIR@
 *  See also IPD_PORT_BP_COUNTERS2_PAIR@
 *  0x3b0-0x3c8
 *  Attribute: -exempt_natural_alignment=a.
 * 
$IPD_PORT_BP_COUNTERS3_PAIR(40..43)   Address=(0x14F0000000270+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:25> NS      RAZ     NS         NS         Reserved.                                         
 <24:0>  CNT_VAL RO/H    0x0        NS         Number of MBUFs being used by data on this port.  
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_PORT_BP_PAGE_CNT3
 * 
 *  IPD_PORT@_BP_PAGE_CNT3 = IPD Port Backpressure Page Count
 *  The number of pages in use by the port that when exceeded, backpressure will be applied to the
 *  port.
 *  See also IPD_PORT@_BP_PAGE_CNT
 *  See also IPD_PORT@_BP_PAGE_CNT2
 *  0x3d0-408
 *  Attribute: -exempt_natural_alignment=a.
 * 
$IPD_PORT(40..47)_BP_PAGE_CNT3   Address=(0x14F0000000290+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:18> NS       RAZ     NS         NS         Reserved.                                         
 <17>    BP_ENB   R/W     0x0        0x0        When set '1' BP will be applied, if '0' BP will   
                                                not be applied to port.
 <16:0>  PAGE_CNT R/W     0x0        0x0        The number of page pointers assigned to           
                                                the port, that when exceeded will cause
                                                back-pressure to be applied to the port.
                                                This value is in 256 page-pointer increments,
                                                (i.e. 0 = 0-page-ptrs, 1 = 256-page-ptrs,..)
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_PORT_BP_COUNTERS4_PAIR
 * 
 *  See also IPD_PORT_BP_COUNTERS_PAIR@
 *  See also IPD_PORT_BP_COUNTERS2_PAIR@
 *  0x410-0x3c8
 *  Attribute: -exempt_natural_alignment=a.
 * 
$IPD_PORT_BP_COUNTERS4_PAIR(44..47)   Address=(0x14F00000002B0+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:25> NS      RAZ     NS         NS         Reserved.                                         
 <24:0>  CNT_VAL RO/H    0x0        NS         Number of MBUFs being used by data on this port.  
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_BIST_STATUS = IPD BIST STATUS
 * 
 *  BIST Status for IPD's Memories.
 * 
$IPD_BIST_STATUS   Address=(0x14F00000007F8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:18> NS       RAZ     NS         NS         Reserved.                                         
 <17>    CSR_MEM  RO      0x0        0x0        CSR Register Memory Bist Status.                  
 <16>    CSR_NCMD RO      0x0        0x0        CSR NCB Commands Memory Bist Status.              
 <15>    PWQ_WQED RO      0x0        0x0        PWQ PIP WQE DONE Memory Bist Status.              
 <14>    PWQ_WP1  RO      0x0        0x0        PWQ WQE PAGE1 PTR Memory Bist Status.             
 <13>    PWQ_POW  RO      0x0        0x0        PWQ POW MEM Memory Bist Status.                   
 <12>    IPQ_PBE1 RO      0x0        0x0        IPQ PBE1 Memory Bist Status.                      
 <11>    IPQ_PBE0 RO      0x0        0x0        IPQ PBE0 Memory Bist Status.                      
 <10>    PBM3     RO      0x0        0x0        PBM3 Memory Bist Status.                          
 <9>     PBM2     RO      0x0        0x0        PBM2 Memory Bist Status.                          
 <8>     PBM1     RO      0x0        0x0        PBM1 Memory Bist Status.                          
 <7>     PBM0     RO      0x0        0x0        PBM0 Memory Bist Status.                          
 <6>     PBM_WORD RO      0x0        0x0        PBM_WORD Memory Bist Status.                      
 <5>     PWQ1     RO      0x0        0x0        PWQ1 Memory Bist Status.                          
 <4>     PWQ0     RO      0x0        0x0        PWQ0 Memory Bist Status.                          
 <3>     PRC_OFF  RO      0x0        0x0        PRC_OFF Memory Bist Status.                       
 <2>     IPD_OLD  RO      0x0        0x0        IPD_OLD Memory Bist Status.                       
 <1>     IPD_NEW  RO      0x0        0x0        IPD_NEW Memory Bist Status.                       
 <0>     PWP      RO      0x0        0x0        PWP Memory Bist Status.                           
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_SUB_PORT_QOS_CNT = IPD Subtract Port QOS Count
 * 
 *  Will add the value (CNT) to the indicated Port-QOS register (PORT_QOS). The value added must
 *  be
 *  be the 2's complement of the value that needs to be subtracted.
 * 
$IPD_SUB_PORT_QOS_CNT   Address=(0x14F0000000800)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:41> NS       RAZ     NS         NS         Reserved.                                         
 <40:32> PORT_QOS R/W     NS         0x0        The port to add the CNT field to.                 
 <31:0>  CNT      R/W     NS         0x0        The value to be added to the register selected    
                                                in the PORT_QOS field.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_PORT_QOS_INT
 * 
 *  See the description for IPD_PORT_QOS_@_CNT
 *  0=P0-7; 1=P8-15; 2=P16-23; 3=P24-31; 4=P32-39; 5=P40-47; 6=P48-55; 7=P56-63
 *  Only ports used are: P0-3, p16-19, P24, P32-39. Therefore only IPD_PORT_QOS_INT0 ([63:32] ==
 *  Reserved), IPD_PORT_QOS_INT2 ([63:32] == Reserved), IPD_PORT_QOS_INT3 ([63:8] == Reserved),
 *  IPD_PORT_QOS_INT4
 *  Attribute: -exempt_natural_alignment=a.
 * 
$IPD_PORT_QOS_INT(0,2,3,4,5)   Address=(0x14F0000000808+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  INTR R/W1C   0x0        0x0        Interrupt bits.                                   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_PORT_QOS_INT_ENB
 * 
 *  "When the IPD_PORT_QOS_INT@[#] is '1' and IPD_PORT_QOS_INT_ENB@[#] is '1' a interrupt will be
 *  generated."
 *  Attribute: -exempt_natural_alignment=a.
 * 
$IPD_PORT_QOS_INT_ENB(0,2,3,4,5)   Address=(0x14F0000000848+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  ENB R/W     0x0        0x1        Enable bits.                                      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IPD_PORT_QOS__CNT
 * 
 *  IPD_PORT_QOS_@_CNT = IPD Port@ QOS-0 Count
 *  A counter per port/qos. Counter are originzed in sequence where the first 8 counter (0-7)
 *  belong to Port-0
 *  QOS 0-7 respectively followed by port 1 at (8-15), etc..
 *  Ports 0-3, 32-43
 *  Attribute: -exempt_natural_alignment=a.
 * 
$IPD_PORT_QOS_(0..31,128..159, 192..199, 256..383)_CNT   Address=(0x14F0000000888+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> WMARK R/W     0xffffffff NS         When the field CNT after being modified is equal to
                                             or crosses this value (i.e. value was greater than
                                             then becomes less then, or value was less than and
                                             becomes greater than) the corresponding bit in
                                             IPD_PORT_QOS_INT@ is set.
 <31:0>  CNT   RO/H    0x0        NS         The packet related count that is incremented as   
                                             specified by IPD_SUB_PORT_QOS_CNT.
-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the key.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

 * 
 * KEY_INT_SUM = KEY's Interrupt Summary Register
 * 
 *  Contains the diffrent interrupt summary bits of the KEY.
 * 
$KEY_INT_SUM   Address=(0x1180020000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:2>  NS      RAZ     NS         NS         Reserved.                                         
 <1>     KEY_DBE R/W1C/H 0x0        0x0                                                          
 <0>     KEY_SBE R/W1C/H 0x0        0x0                                                          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * KEY_INT_ENB = KEY's Interrupt Enable
 * 
 *  The KEY's interrupt enable register.
 * 
$KEY_INT_ENB   Address=(0x1180020000008)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:2>  NS      RAZ     NS         NS         Reserved.                                         
 <1>     KEY_DBE R/W     0x0        0x0        When set (1) and bit 1 of the KEY_INT_SUM         
                                               register is asserted the KEY will assert an
                                               interrupt.
 <0>     KEY_SBE R/W     0x0        0x0        When set (1) and bit 0 of the KEY_INT_SUM         
                                               register is asserted the KEY will assert an
                                               interrupt.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * KEY_CTL_STATUS = KEY's Control/Status Register
 * 
 *  The KEY's interrupt enable register.
 *  Attribute: -dv_fc_scratch=ALL.
 * 
$KEY_CTL_STATUS   Address=(0x1180020000010)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:3>  NS       RAZ     NS         NS         Reserved.                                         
 <2:1>   KEY_FSYN R/W     0x0        0x0        Flips the syndrome of the KEY MEM.                
 <0>     KEY_CDIS R/W     0x0        0x0        Turns off the correction disable of the key mem   
                                                ECC.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * KEY_BIST_REG = KEY's BIST Status Register
 * 
 *  The KEY's BIST status for memories.
 * 
$KEY_BIST_REG   Address=(0x1180020000018)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:2>  NS    RAZ     NS         NS         Reserved.                                         
 <1>     RRC   RO      0x0        0x0        RRC bist status.                                  
 <0>     MEM   RO      0x0        0x0        MEM bist status.                                  
-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the l2c.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

Octeon III L2C RSL2 address map

  2 22 211 1111 111 1        |
  3 21 098 7654 321 09876 543|210  byte address
  -+--+---+----+---+-----+---+---
  1 00 000        0          |     Octeon III common registers
  1 00 000        1          |     Octeon III CMB PFC registers
  1 00 001                   |     Octeon III way partitioning registers
  1 00 010                   |     Octeon III QOS registers
  1 00 011                   |
  1 00 100                   |
  1 00 101                   |
  1 01 000 0                 |     Octeon III TAD0 registers
  1 01 000 1                 |     Octeon III TAD0 debug registers
  1 01 001                   |     Octeon III TAD1 registers
  1 01 010                   |     Octeon III TAD2 registers
  1 01 011                   |     Octeon III TAD3 registers
  1 01 100                   |     Octeon III TAD4 registers
  1 01 101                   |     Octeon III TAD5 registers
  1 01 110                   |     Octeon III TAD6 registers
  1 01 111                   |     Octeon III TAD7 registers
  1 10 000                   |     Octeon III MCI0 registers
  1 10 001                   |     Octeon III MCI1 registers
  1 10 010                   |     Octeon III MCI2 registers
  1 10 011                   |     Octeon III MCI3 registers
  1 11 000                   |     Octeon III CBC0 registers
  1 11 001                   |     Octeon III CBC1 registers
  1 11 010                   |     Octeon III CBC2 registers
  1 11 011                   |     Octeon III CBC3 registers
  -+--+---+----+---+-----+---+---
Attribute: -dv_fc_regs_extends=l2c_pkg::l2c_rsl_reg_block_c".
 * 
 * IOC_CMD_E
 * 
 *  Enumerates the different IOC command encodings.
 *  Attribute: -parent_block_override=L2C.
 *  Attribute: -width=4.
 * 
$IOC_CMD_E
-----------------------------------------------------------------------------------------------------------------------------------
 Value                  Name   Description    
-----------------------------------------------------------------------------------------------------------------------------------
 0x0                    IDLE   Idle cycle.    
 0x1                    STORE  Store of size 1-8 bytes.
 0x2                    LOAD   Load of size 1-8 bytes.
 0x3                    LMTST  Store of size 1-16 quadwords.
 0x4                    IOBDMA Load of size 1-16 quadwords.
 0x5                    LMTDMA Store of size 1-16 quadwords, followed by load of size 1-16 quadwords (atomic).
 0x6                    ADDR   Send address only (i.e. store of size 0 quadwords).
 0x7                    SLIST  Store of size 1-8 bytes, initiated by remote SLI.
 0x8                    SLILD  Load of size 1-8 bytes, initiated by remote SLI.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * IOR_CMD_E
 * 
 *  Enumerates the different IOR command encodings.
 *  Attribute: -parent_block_override=L2C.
 *  Attribute: -width=2.
 * 
$IOR_CMD_E
-----------------------------------------------------------------------------------------------------------------------------------
 Value                  Name   Description    
-----------------------------------------------------------------------------------------------------------------------------------
 0x0                    IDLE   Idle cycle.    
 0x1                    DATA   Response data return for IOC_LOAD, IOC_IOBDMA, IOC_LMTDMA.
 0x2                    PREF   L1D prefetch request to core from coprocessor.
 0x3                    SLIRSP Response data return for IOC_SLILD.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_DAT_ERRPRIO_E
 * 
 *  Enumerates the different quad error priorities
 *  Attribute: -width=3.
 * 
$L2C_DAT_ERRPRIO_E
-----------------------------------------------------------------------------------------------------------------------------------
 Value                  Name   Description    
-----------------------------------------------------------------------------------------------------------------------------------
 0x0                    NBE    No error.      
 0x1                    FBFSBE FBF single-bit error.
 0x2                    SBFSBE SBF single-bit error.
 0x3                    L2DSBE L2D single-bit error.
 0x4                    FBFDBE FBF double-bit error.
 0x5                    SBFDBE SBF double-bit error.
 0x6                    L2DDBE L2D double-bit error.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_INTSN_E
 * 
 *  Enumerates the different interrupts from L2C.
 *  Attribute: -width=20.
 * 
$L2C_INTSN_E
-----------------------------------------------------------------------------------------------------------------------------------
 Value                  Name                        Description    
-----------------------------------------------------------------------------------------------------------------------------------
 0x80000|(a << 8)       L2C_TAD(0..0)_INT_L2DSBE    See L2C_TAD(0..0)_INT[L2DSBE].
                                                    Attribute: -cib_rtl_minor_width=3.
                                                    Attribute: -intsn_lsb_mismatch=True.
 0x80001|(a << 8)       L2C_TAD(0..0)_INT_L2DDBE    See L2C_TAD(0..0)_INT[L2DDBE].
                                                    Attribute: -intsn_lsb_mismatch=True.
 0x80002|(a << 8)       L2C_TAD(0..0)_INT_SBFSBE    See L2C_TAD(0..0)_INT[SBFSBE].
                                                    Attribute: -intsn_lsb_mismatch=True.
 0x80003|(a << 8)       L2C_TAD(0..0)_INT_SBFDBE    See L2C_TAD(0..0)_INT[SBFDBE].
                                                    Attribute: -intsn_lsb_mismatch=True.
 0x80004|(a << 8)       L2C_TAD(0..0)_INT_FBFSBE    See L2C_TAD(0..0)_INT[FBFSBE].
                                                    Attribute: -intsn_lsb_mismatch=True.
 0x80005|(a << 8)       L2C_TAD(0..0)_INT_FBFDBE    See L2C_TAD(0..0)_INT[FBFDBE].
                                                    Attribute: -intsn_lsb_mismatch=True.
 0x80006|(a << 8)       L2C_TAD(0..0)_INT_TAGSBE    See L2C_TAD(0..0)_INT[TAGSBE].
                                                    Attribute: -intsn_lsb_mismatch=True.
 0x80007|(a << 8)       L2C_TAD(0..0)_INT_TAGDBE    See L2C_TAD(0..0)_INT[TAGDBE].
                                                    Attribute: -intsn_lsb_mismatch=True.
 0x80008|(a << 8)       L2C_TAD(0..0)_INT_NOWAY     See L2C_TAD(0..0)_INT[NOWAY].
                                                    Attribute: -intsn_lsb_mismatch=True.
 0x80009|(a << 8)       L2C_TAD(0..0)_INT_HOLEWR    See L2C_TAD(0..0)_INT[HOLEWR].
                                                    Attribute: -intsn_lsb_mismatch=True.
 0x8000A|(a << 8)       L2C_TAD(0..0)_INT_HOLERD    See L2C_TAD(0..0)_INT[HOLERD].
                                                    Attribute: -intsn_lsb_mismatch=True.
 0x8000B|(a << 8)       L2C_TAD(0..0)_INT_BIGWR     See L2C_TAD(0..0)_INT[BIGWR].
                                                    Attribute: -intsn_lsb_mismatch=True.
 0x8000C|(a << 8)       L2C_TAD(0..0)_INT_BIGRD     See L2C_TAD(0..0)_INT[BIGRD].
                                                    Attribute: -intsn_lsb_mismatch=True.
 0x8000D|(a << 8)       L2C_TAD(0..0)_INT_WRDISLMC  See L2C_TAD(0..0)_INT[WRDISLMC].
                                                    Attribute: -intsn_lsb_mismatch=True.
 0x8000E|(a << 8)       L2C_TAD(0..0)_INT_RDDISLMC  See L2C_TAD(0..0)_INT[RDDISLMC].
                                                    Attribute: -intsn_lsb_mismatch=True.
 0x8000F|(a << 8)       L2C_TAD(0..0)_INT_RTGSBE    See L2C_TAD(0..0)_INT[RTGSBE].
                                                    Attribute: -intsn_lsb_mismatch=True.
 0x80010|(a << 8)       L2C_TAD(0..0)_INT_RTGDBE    See L2C_TAD(0..0)_INT[RTGDBE].
                                                    Attribute: -intsn_lsb_mismatch=True.
 0x80800|(a << 8)       L2C_MCI(0..0)_INT_VBFSBE    See L2C_MCI(0..0)_INT[VBFSBE].
                                                    Attribute: -cib_rtl_minor_width=4.
                                                    Attribute: -intsn_lsb_mismatch=True.
 0x80801|(a << 8)       L2C_MCI(0..0)_INT_VBFDBE    See L2C_MCI(0..0)_INT[VBFDBE].
                                                    Attribute: -intsn_lsb_mismatch=True.
 0x80C00|(a << 8)       L2C_CBC(0..0)_INT_RSDSBE    See L2C_CBC(0..0)_INT[RSDSBE].
                                                    Attribute: -cib_rtl_minor_width=4.
                                                    Attribute: -intsn_lsb_mismatch=True.
 0x80C01|(a << 8)       L2C_CBC(0..0)_INT_RSDDBE    See L2C_CBC(0..0)_INT[RSDDBE].
                                                    Attribute: -intsn_lsb_mismatch=True.
 0x80C02|(a << 8)       L2C_CBC(0..0)_INT_IOCCMDSBE See L2C_CBC(0..0)_INT[IOCCMDSBE].
                                                    Attribute: -intsn_lsb_mismatch=True.
 0x80C03|(a << 8)       L2C_CBC(0..0)_INT_IOCCMDDBE See L2C_CBC(0..0)_INT[IOCCMDDBE].
                                                    Attribute: -intsn_lsb_mismatch=True.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_TAD_PRF_SEL_E
 * 
 *  Enumerates the different TAD performance counter selects.
 *  Attribute: -width=8.
 * 
$L2C_TAD_PRF_SEL_E
-----------------------------------------------------------------------------------------------------------------------------------
 Value                  Name          Description    
-----------------------------------------------------------------------------------------------------------------------------------
 0x0                    NONE          Nothing (disabled).
 0x1                    L2T_HIT       L2 Tag Hit.    
 0x2                    L2T_MISS      L2 Tag Miss.   
 0x3                    L2T_NOALLOC   L2 Tag No-Allocate (forced).
 0x4                    L2_VIC        L2 Victim.     
 0x5                    SC_FAIL       Store-Conditional Fail.
 0x6                    SC_PASS       Store-Conditional Pass.
 0x7                    LFB_OCC       LFB Occupancy (each cycle adds number of LFBs valid).
 0x8                    WAIT_LFB      LFB Wait LFB (each cycle adds number of LFBs waiting for other LFBs).
 0x9                    WAIT_VAB      LFB Wait VAB (each cycle adds number of LFBs waiting for VAB).
 0x80|(a << 4)          QD(0..0)_IDX  Quad(0..0) index bus inuse.
 0x81|(a << 4)          QD(0..0)_RDAT Quad(0..0) read data bus inuse.
 0x82|(a << 4)          QD(0..0)_BNKS Quad(0..0) number of banks inuse (0-4/cycle).
 0x83|(a << 4)          QD(0..0)_WDAT Quad(0..0) write data flops inuse (0-4/cycle).
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_TAG_ERRPRIO_E
 * 
 *  Enumerates the different TAG error priorities.
 *  Attribute: -width=2.
 * 
$L2C_TAG_ERRPRIO_E
-----------------------------------------------------------------------------------------------------------------------------------
 Value                  Name  Description    
-----------------------------------------------------------------------------------------------------------------------------------
 0x0                    NBE   No error.      
 0x1                    NOWAY TAG NOWAY error.
 0x2                    SBE   TAG single-bit error.
 0x3                    DBE   TAG double-bit error.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RSC_CMD_E
 * 
 *  Enumerates the different RSC command encodings.
 *  Attribute: -parent_block_override=L2C.
 *  Attribute: -width=3.
 * 
$RSC_CMD_E
-----------------------------------------------------------------------------------------------------------------------------------
 Value                  Name Description    
-----------------------------------------------------------------------------------------------------------------------------------
 0x0                    NOP  No operation.  
 0x1                    IFDN Filling data, last fill, must write L1T invalid.
 0x2                    FILL Filling data, but not the last.
 0x3                    FLDN Filling data, last fill.
 0x4                    STDN Store commit.  
 0x5                    PREF Prefetch from NCB/IOR.
 0x6                    SCDN Store conditional pass/commit.
 0x7                    SCFL Store conditional fail/commit.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * XMC_CMD_E
 * 
 *  Enumerates the different XMC command encodings.
 *  Attribute: -parent_block_override=L2C.
 *  Attribute: -width=7.
 * 
$XMC_CMD_E
-----------------------------------------------------------------------------------------------------------------------------------
 Value                  Name     Description    
-----------------------------------------------------------------------------------------------------------------------------------
 0x0                    NOP      No operation.  
 0x1                    LDT      Don't allocate L2 or L1
 0x2                    LDI      Don't allocate L1
 0x3                    PL2      Prefetch L2    
 0x4                    RPL2     Mark for replacement in L2
 0x5                    DWB      Clear L2 dirty bit (no writeback) + RPL2
 0x6                    LDY      synonym for LDT
 0x8                    LDD      Normal load    
 0x9                    PSL1     Prefetch L1, bypass L2
 0xA                    LDC      reserved, not currently implemented
 0xB                    LDE      synonym for LDD
 0xD                    LDWB     synonym for LDT
 0xE                    STY      synonym for STT
 0xF                    RSTP     synonym for STP
 0x10                   STF      Full block store to L2, fill zeros
 0x11                   STT      Full block store bypass-L2, fill zeros
 0x12                   STP      Partial store to L2
 0x13                   STC      Partial store to L2, if duptag valid
 0x14                   STFIL1   Full block store to L2, fill zeros, self-inval L1
 0x15                   STTIL1   Full block store bypass-L2, fill zeros, self-inval L1
 0x16                   FAS32    fetch and swap 32b quantity, returning old data
 0x17                   FAS64    fetch and swap 64b quantity, returning old data
 0x18                   WBIL2I   Writeback if dirty, invalidate, clear use bit, by index/way
 0x19                   LTGL2I   Read tag at index/way into CSR
 0x1A                   STGL2I   Write tag at index/way from CSR
 0x1B                   WBL2I    Writeback if dirty, make clean, clear use bit, by index/way
 0x1C                   INVL2    Invalidate, clear use bit, by address (dirty data is LOST)
 0x1D                   WBIL2    Writeback if dirty, invalidate, clear use bit, by address
 0x1E                   WBL2     Writeback if dirty, make clean, clear use bit, by address
 0x1F                   LCKL2    Set lock bit, set use bit, by address
 0x22                   CAS32    reserved, not implemented
 0x23                   CAS64    reserved, not implemented
 0x26                   SAAM132  reserved, not implemented
 0x27                   SAAM164  reserved, not implemented
 0x28                   SET8     set 8b word to all 1's, returning old
 0x29                   SET16    set 16b word to all 1's, returning old
 0x2A                   SET32    set 32b word to all 1's, returning old
 0x2B                   SET64    set 64b word to all 1's, returning old
 0x2C                   CLR8     clear 8b word to all 0's, returning old
 0x2D                   CLR16    clear 16b word to all 0's, returning old
 0x2E                   CLR32    clear 32b word to all 0's, returning old
 0x2F                   CLR64    clear 64b word to all 0's, returning old
 0x30                   INCR8    increment 8b word, returning old
 0x31                   INCR16   increment 16b word, returning old
 0x32                   INCR32   increment 32b word, returning old
 0x33                   INCR64   increment 64b word, returning old
 0x34                   DECR8    decrement 8b word, returning old
 0x35                   DECR16   decrement 16b word, returning old
 0x36                   DECR32   decrement 32b word, returning old
 0x37                   DECR64   decrement 64b word, returning old
 0x3A                   FAA32    fetch and add 32b word, returning old
 0x3B                   FAA64    fetch and add 62b word, returning old
 0x3E                   SAA32    store and add 32b word, no return data
 0x3F                   SAA64    store and add 64b word, no return data
 0x40                   IOBLD8   I/O 1-byte load.
 0x41                   IOBLD16  I/O 2-byte load.
 0x42                   IOBLD32  I/O 4-byte load.
 0x43                   IOBLD64  I/O 8-byte load.
 0x44                   IOBST8   I/O 1-byte store.
 0x45                   IOBST16  I/O 2-byte store.
 0x46                   IOBST32  I/O 4-byte store.
 0x47                   IOBST64  I/O 8-byte store.
 0x48                   IOBADDR  I/O send address only.
 0x49                   IOBDMA   I/O multi-quadword load.
 0x4A                   LMTST    I/O multi-quadword store.
 0x4B                   LMTDMA   I/O multi-quadword store with multi-quadword load.
 0x64                   IOBSTA8  I/O 1-byte store, with commit.
 0x65                   IOBSTA16 I/O 2-byte store, with commit.
 0x66                   IOBSTA32 I/O 4-byte store, with commit.
 0x67                   IOBSTA64 I/O 8-byte store, with commit.
 0x68                   IOBADDRA I/O send address only, with commit.
 0x69                   IOBDMAA  I/O multi-quadword load, with commit.
 0x6A                   LMTSTA   I/O multi-quadword store, with commit.
 0x6B                   LMTDMAA  I/O multi-quadword store with multi-quadword load, with commit.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_CTL = Level 2 Cache Control Register
 * 
 *  
 * 
$L2C_CTL   Address=(0x1180080800000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field        Field   Reset      Typical    Field                                             
 Pos     Name         Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS           RAZ     NS         NS         Reserved.                                         
 <31:29> OCLA_QOS     R/W     0x7        0x7        QOS level for the transactions from OCLA to L2C.  
 <28>    NS           RAZ     NS         NS         Reserved.                                         
 <27>    DISSTGL2I    R/W     0x0        0x0        Disable STGL2Is from changing the tags.           
 <26:25> NS           RAZ     NS         NS         Reserved.                                         
 <24>    DISCCLK      R/W     0x0        0x0        Disable conditional clocking in L2C PNR blocks.   
 <23:16> NS           RAZ     NS         NS         Reserved.                                         
 <15>    RSP_ARB_MODE R/W     0x0        0x0        Arbitration mode for RSC/RSD bus. 0 = round-robin; 1 = static priority.
                                                    1. IOR data
                                                    2. STIN/FILLs
                                                    3. STDN/SCDN/SCFL
 <14>    XMC_ARB_MODE R/W     0x0        0x0        Arbitration mode for ADD bus QOS queues. 0 = fully determined through QOS, 1 = QOS0
                                                    highest priority; QOS 1-7 use normal mode.
 <13:6>  RDF_CNT      R/W     0x0        0x0        Defines the sample point of the LMC response data in the DDR-clock/core-clock crossing.
                                                    For optimal performance set to
                                                    10 * (DDR-clock period/core-clock period) - 1.
                                                    To disable set to 0. All other values are reserved.
 <5:2>   NS           RAZ     NS         NS         Reserved.                                         
 <1>     DISECC       R/W     0x0        0x0        Tag and data ECC disable.                         
 <0>     DISIDXALIAS  R/W     0x0        0x0        Index alias disable.                              
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_QOS_WGT = Level 2 Cache QOS Weight Register
 * 
 *  
 * 
$L2C_QOS_WGT   Address=(0x1180080800008)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:56> WGT7 R/W     0xff       0xff       Weight for QOS level 7.                           
 <55:48> WGT6 R/W     0xff       0xff       Weight for QOS level 6.                           
 <47:40> WGT5 R/W     0xff       0xff       Weight for QOS level 5.                           
 <39:32> WGT4 R/W     0xff       0xff       Weight for QOS level 4.                           
 <31:24> WGT3 R/W     0xff       0xff       Weight for QOS level 3.                           
 <23:16> WGT2 R/W     0xff       0xff       Weight for QOS level 2.                           
 <15:8>  WGT1 R/W     0xff       0xff       Weight for QOS level 1.                           
 <7:0>   WGT0 R/W     0xff       0xff       Weight for QOS level 0.                           
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_ECC_CTL = L2C ECC Control Register
 * 
 *  Flip ECC bits to generate single-bit or double-bit ECC errors in all instances of a given
 *  memory type. Encodings are as follows.
 *  0x0 = No error.
 *  0x1 = Single-bit error on ecc[0].
 *  0x2 = Single-bit error on ecc[1].
 *  0x3 = Double-bit error on ecc[1:0].
 *  L2DFLIP allows software to generate L2DSBE, L2DDBE, VBFSBE, and VBFDBE errors for the purposes
 *  of testing error handling code. When one (or both) of these bits are set, a PL2 that misses in
 *  the L2 will fill with the appropriate error in the first two OWs of the fill. Software can
 *  determine which OW pair gets the error by choosing the desired fill order (address<6:5>). A
 *  PL2 that hits in the L2 will not inject any errors. Therefore sending a WBIL2 prior to the PL2
 *  is recommended to make a miss likely. (If multiple processors are involved, software must be
 *  sure that no other processor or I/O device can bring the block into the L2).
 *  To generate a VBFSBE or VBFDBE, software must first get the cache block into the cache with an
 *  error using a PL2 that misses the L2. Then a store partial to a portion of the cache block
 *  without the error must change the block to dirty. Then, a subsequent WBL2/WBIL2/victim will
 *  trigger the VBFSBE/VBFDBE error.
 * 
$L2C_ECC_CTL   Address=(0x1180080800010)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:10> NS         RAZ     NS         NS         Reserved.                                         
 <9:8>   L2DFLIP    R/W     0x0        0x0        Generate an ECC error in the L2D. See note above. 
 <7:6>   L2TFLIP    R/W     0x0        0x0        Generate an ECC error in the L2T.                 
 <5:4>   RDFFLIP    R/W     0x0        0x0        Generate an ECC error in RDF memory.              
 <3:2>   XMDFLIP    R/W     0x0        0x0        Generate an ECC error in all corresponding CBC XMD memories.
 <1:0>   IOCCMDFLIP R/W     0x0        0x0        Generate an ECC error in all corresponding IOCCMD memories.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_TAD_CTL = Level 2 Cache TAD Control Register
 * 
 *  (1a) If MAXLFB is != 0, VBF_THRESH should be less than MAXLFB.
 *  
 *  (1b) If MAXVBF is != 0, VBF_THRESH should be less than MAXVBF.
 * 
$L2C_TAD_CTL   Address=(0x1180080800018)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:11> NS         RAZ     NS         NS         Reserved.                                         
 <10:8>  VBF_THRESH R/W     0x0        0x0        VBF threshold. When the number of in-use VBFs exceeds this number the L2C TAD increases
                                                  the priority of all its write operations in the LMC.
 <7>     NS         RAZ     NS         NS         Reserved.                                         
 <6:4>   MAXVBF     R/W     0x0        0x0        Maximum VABs/LFBs in use at once (0 means 16, 1-15 as expected).
 <3>     NS         RAZ     NS         NS         Reserved.                                         
 <2:0>   MAXLFB     R/W     0x0        0x0        Maximum VABs/LFBs in use at once (0 means 8, 1-7 as expected)
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_XMC_CMD = Level 2 Cache ADD Bus Command Register
 * 
 *  Note the following:
 *  The ADD bus command chosen must not be a IOB-destined command or operation is UNDEFINED.
 *  The ADD bus command will have SID forced to IOB, DID forced to L2C, no virtualization checks
 *  performed (always pass), and xmdmsk forced to 0. Note that this implies that commands that
 *  REQUIRE a STORE cycle (STP, STC, SAA, FAA, FAS) should not be used or the results are
 *  unpredictable. The sid=IOB means that the way partitioning used for the command is
 *  L2C_WPAR_IOB0/1. None of L2C_QOS_IOB0/1, L2C_QOS_PP(0..31), L2C_VIRTID_IOB0/1,
 *  L2C_VIRTID_PP(0..31) are used for these commands.
 *  Any FILL responses generated by the ADD bus command are ignored. Generated STINs, however,
 *  will correctly invalidate the required cores.
 *  Any L2D read generated by the ADD bus command records the syndrome information in
 *  L2C_TAD(0..0)_ECC0/1. If ECC is disabled prior to the CSR write, this provides the ability to
 *  read the ECC bits directly. If ECC is not disabled, this should log zeros (assuming no ECC
 *  errors were found in the block).
 *  A write that arrives while the INUSE bit is set will block until the INUSE bit clears. This
 *  gives software two options when needing to issue a stream of write operations to L2C_XMC_CMD:
 *  polling on the INUSE bit, or allowing hardware to handle the interlock -- at the expense of
 *  locking up the RSL bus for potentially tens of cycles at a time while waiting for an available
 *  LFB/VAB entry. Note that when the INUSE bit clears, the only ordering it implies is that
 *  software can send another ADD bus command. Subsequent commands may complete out of order
 *  relative to earlier commands.
 *  The address written to L2C_XMC_CMD is a physical address. L2C performs hole removal and index
 *  aliasing (if enabled) on the written address and uses that for the command. This hole
 *  removed/index aliased address is what is returned on a read of the L2C_XMC_CMD register.
 * 
$L2C_XMC_CMD   Address=(0x1180080800028)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    INUSE RO/H    0x0        0x0        Set to 1 by hardware upon receiving a write; cleared when command has issued (not
                                             necessarily completed, but ordered relative to other traffic) and hardware can accept
                                             another command.
 <62:56> CMD   R/W     0x0        NS         Command to use for simulated ADD bus request. A new request can be accepted.
 <55:47> NS    RAZ     NS         NS         Reserved.                                         
 <46:44> QOS   R/W     0x0        NS         QOS level to use for simulated ADD bus request.   
 <43:40> NODE  R/W     0x0        NS         OCI node to use for simulated ADD bus request.    
 <39:0>  ADDR  R/W     0x0        NS         Address to use for simulated ADD bus request. (The address written to L2C_XMC_CMD is a
                                             physical address. L2C performs hole removal and index aliasing (if enabled) on the written
                                             address and uses that for the command. This hole-removed/index-aliased address is what is
                                             returned on a read of L2C_XMC_CMD.)
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_BIG_CTL = Level 2 Cache Big Memory Control Register
 * 
 *  
 * 
$L2C_BIG_CTL   Address=(0x1180080800030)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS      RAZ     NS         NS         Reserved.                                         
 <7:4>   MAXDRAM R/W     0x9        0x9        Amount of configured DRAM.                        
                                               0x0 = reserved.
                                               0x1 = 512 MB.
                                               0x2 = 1 GB.
                                               0x3 = 2 GB.
                                               0x4 = 4 GB.
                                               0x5 = 8 GB.
                                               0x6 = 16 GB.
                                               0x7 = 32 GB.
                                               0x8 = 64 GB.
                                               0x9 = 128 GB.
                                               0xA = 256 GB.
                                               0xB = 512 GB.
                                               0xC-0xF= reserved.
                                               Violations of this limit causes L2C to set L2C_INT_REG[BIGRD/BIGWR].
                                               BIGRD interrupts can occur during normal operation as the cores are allowed to prefetch to
                                               nonexistent memory locations. Therefore, BIGRD is for informational purposes only.
                                               When a HOLERD/BIGRD occurs or HOLEWR/BIGWR blocks a store operation, L2C_TAD(0..0)_ERR is
                                               loaded. L2C_TAD(0..0)_ERR is not locked for a BIGRD, however.
                                               The BIG logic only applies to local addresses. A command for a remote address does not
                                               cause a BIGRD/BIGWR on the requesting node.
 <3:1>   NS      RAZ     NS         NS         Reserved.                                         
 <0>     DISBIG  R/W     0x0        0x0        Disable the BIG/HOLE logic. When set, the BIG/HOLE is logic disabled completely. When
                                               clear, BIGWR and HOLEWR block stores and BIGRD/HOLERD is reported.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_COP0_ADR = Level 2 Cache COP0 Address Register
 * 
 *  Provides the address of the COP0 register to read/write when L2C_COP0_DAT is accessed.
 *  
 *  NOTE: for 78xx, if the PPID is outside the range of 0-47,255 the write will be ignored and
 *  reads will return 0x2bad2bad2bad2bad
 *  
 *  (1) RD and SEL are as defined in the HRM description of Core Coprocessor 0 registers
 *  and note 4 below.
 *  
 *  (2) if a COP0 register cannot be accessed by this mechanism the write be silently ignored and
 *  the read data will be 0x2bad2bad2bad2bad.
 *  
 *  (3) if the PPID is outside the range of 0-47,255 or if the PP in question is in reset
 *  a write will be ignored and reads will timeout the RSL bus.
 *  
 *  (4) Referring to note (1) above, the following root/rd/sel values are supported:
 *  NOTE: Put only the "Customer type" in HRM. do not put the "Real type" in HRM.
 *  
 *               Customer                                           Real
 *  root rd  sel   type         Description                         type
 *  ====+===+===+========+=========================================+====
 *   1    4   2     RO     CP0 Root.UserLocal                        RW
 *   0    4   2     RO     CP0 Guest.UserLocal                       RW
 *   1    7   0     RO     CP0 Root.HWREna                           RW
 *   0    7   0     RO     CP0 Guest.HWREna                          RW
 *   1    8   1     RO     CP0 Root.BadInstr                         RW
 *   0    8   1     RO     CP0 Guest.BadInstr                        RW
 *   1    8   2     RO     CP0 Root.BadInstrP                        RW
 *   0    8   2     RO     CP0 Guest.BadInstrP                       RW
 *   1    9   0     RO     CP0 Root.Count                            RW
 *   1    9   6     RO     CP0 Root.CvmCount                         RW
 *   1    9   7     RO     CP0 Root.CvmCtl                           RW
 *   0    9   7     RO     CP0 Guest.CvmCtl                          RW
 *   1   10   5     RO     CP0 Root.GuestCtl0                        RW
 *   1   11   0     RO     CP0 Root.Compare                          RW
 *   0   11   0     RO     CP0 Guest.Compare                         RW
 *   1   11   4     RO     CP0 Root.GuestCtl0Ext                     RW
 *   1   11   6     RW     CP0 Root.PowThrottle                      RW
 *   1   12   0     RO     CP0 Root.Status                           RW
 *   0   12   0     RO     CP0 Guest.Status                          RW
 *   1   12   1     RO     CP0 Root.IntCtl                           RO
 *   0   12   1     RO     CP0 Guest.IntCtl                          RO
 *   1   12   2     RO     CP0 Root.SRSCtl                           RO
 *   0   12   2     RO     CP0 Guest.SRSCtl                          RO
 *   1   12   6     RO     CP0 Root.GuestCtl0                        RW
 *   1   12   7     RO     CP0 Root.GTOffset                         RW
 *   1   13   0     RO     CP0 Root.Cause                            RW
 *   0   13   0     RO     CP0 Guest.Cause                           RW
 *   1   14   0     RO     CP0 Root.EPC                              RW
 *   0   14   0     RO     CP0 Guest.EPC                             RW
 *   1   15   0     RO     CP0 Root.PrID                             RO
 *   0   15   0     RO     CP0 Guest.PrID                            RO
 *   1   15   1     RO     CP0 Root.EBase                            RW
 *   0   15   1     RO     CP0 Guest.EBase                           RW
 *   1   16   0     RO     PC Issue Debug Info (see details below)   RO
 *   1   16   1     RO     PC Fetch Debug Info (see details below)   RO
 *   1   16   2     RO     PC Fill Debug Info (see details below)    RO
 *   1   16   3     RO     PC Misc Debug Info (see details below)    RO
 *   1   16   5     RO     PC Committed Info (see details below)     RO
 *   1   18   0     RO     CP0 Root.WatchLo0                         RW
 *   1   19   0     RO     CP0 Root.WatchHi0                         RW
 *   1   22   0     RO     CP0 Root.MultiCoreDebug                   RW
 *   1   22   1            CP0 Root.ImplDebug                        R0
 *   1   22   2     RO     CP0 Root.CvmCountOffset                   RW
 *   1   23   0     RO     CP0 Root.Debug                            RW
 *   1   23   6     RO     CP0 Root.Debug2                           RO
 *   1   24   0     RO     CP0 Root.DEPC                             RW
 *   1   25   0     RO     CP0 Root.PerfCnt Control0                 RW
 *   1   25   1     RO     CP0 Root.PerfCnt Counter0                 RW
 *   1   25   2     RO     CP0 Root.PerfCnt Control1                 RW
 *   1   25   3     RO     CP0 Root.PerfCnt Counter1                 RW
 *   1   25   4     RO     CP0 Root.PerfCnt Control2                 RW
 *   1   25   5     RO     CP0 Root.PerfCnt Counter2                 RW
 *   1   25   6     RO     CP0 Root.PerfCnt Control3                 RW
 *   1   25   7     RO     CP0 Root.PerfCnt Counter3                 RW
 *   1   27   0     RO     CP0 Root.CacheErr (icache)                RW
 *   1   27   2     RO     CP0 Root.IcacheDebug                      RO
 *   1   28   0     RO     CP0 Root.TagLo (icache)                   RW
 *   1   28   1     RO     CP0 Root.DataLo (icache)                  RW
 *   1   29   1     RO     CP0 Root.DataHi (icache)                  RW
 *   1   30   0     RO     CP0 Root.ErrorEPC                         RW
 *   0   30   0     RO     CP0 Guest.ErrorEPC                        RW
 *   1   31   0     RO     CP0 Root.DESAVE                           RW
 *   1   31   2     RO     CP0 Root.Scratch                          RW
 *   0   31   2     RO     CP0 Guest.Scratch                         RW
 *   1   31   3     RO     CP0 Root.Scratch1                         RW
 *   0   31   3     RO     CP0 Guest.Scratch1                        RW
 *   1   31   4     RO     CP0 Root.Scratch2                         RW
 *   0   31   4     RO     CP0 Guest.Scratch2                        RW
 *   1   31   5     RO     CP0 Root.Scratch3                         RW
 *  
 *  PC Issue Debug Info
 *   63:2  issue_address<63:2>   // often VA<63:2> (PC) of the next instruction to issue (5a in
 *  pipeline)
 *                               //    but can also be the PC of an instruction
 *  executing/replaying
 *                               //    or can also be a PC being filled into the instruction cache
 *                               //    or can also be unpredictable
 *                               // <58:50> is a copy of <49>
 *   1     issue_illegal         // set when issue_address is an illegal PC
 *   0     issue_delayslot       // set when issue_address is in a delayslot (prior instruction
 *  may be either taken or not taken)
 *  
 *  PC Fetch Debug Info
 *   63:0  fetch_address<63:0>   // VA <63:0> (PC) being fetched from the instruction cache (3a in
 *  pipeline)
 *                               // <58:50> is a copy of <49>
 *                               // <1:0> RAZ
 *  
 *  PC Fill Debug Info
 *   63:2  fill_address<63:2>    // VA<63:2> being filled into instruction cache (4a in pipeline)
 *                               // valid when waiting_for_ifill is set (see PC Misc Debug Info
 *  below)
 *                               // <58:50> is a copy of <49>
 *   1     fill_illegal          // set when fill_address is an illegal PC
 *   0     RAZ
 *  
 *  PC Misc Debug Info
 *   63:3  RAZ
 *   2     mem_stall             // stall term from L1 memory system (3a in pipeline)
 *   1     waiting_for_pfill     // when waiting_for_ifill is set, indicates whether instruction
 *                               // cache fill is due to a prefetch (4a in pipeline)
 *   0     waiting_for_ifill     // set when there is an outstanding instruction cache fill (4a in
 *  pipeline)
 *  
 *  PC Committed Debug Info
 *   63    RAZ
 *   62:55 commit_ASID           // ASID of commit_address
 *   54:49 commit_address<63:59> // VA<63:59> (PC) of the last committed instruction (11a in
 *  pipeline)
 *   48:0  commit_address<48:0>  // VA<48:0> (PC) of last committed instruction (11a in pipeline)
 *                               // <1:0> RAZ
 * 
$L2C_COP0_ADR   Address=(0x1180080800038)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:24> NS    RAZ     NS         NS         Reserved.                                         
 <23:16> PPID  R/W     0x0        0x0        Core to access; use 0xFF for broadcast write. Broadcast reads are unpredictable.
 <15>    NS    RAZ     NS         NS         Reserved.                                         
 <14:9>  MBZ   R/W     0x0        0x0        Must be written to zero.                          
 <8>     ROOT  R/W     0x0        0x0        If 1, root register is accessed, if 0 guest register is accessed.
 <7:3>   RD    R/W     0x0        0x0        COP0 register number                              
 <2:0>   SEL   R/W     0x0        0x0        COP0 sel                                          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_COP0_DAT = L2C COP0 Data Access Register
 * 
 *  Provides data access for the COP0 register specified by the L2C_COP0_ADR register.
 * 
$L2C_COP0_DAT   Address=(0x1180080800040)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  DATA R/W/H   0x0        0x0        Data to write to specified COP0 register or return data for a read.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_XMC_PFC = Level 2 Cache ADD bus Performance Counter Registers
 * 
 *  
 * 
$L2C_XMC(0..0)_PFC   Address=(0x1180080800800+a*0x40)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  COUNT R/W/H   0x0        NS         Current counter value                             
                                             Attribute: -dv_uvm_force_compare=True.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_XMD_PFC = Level 2 Cache STORE bus Performance Counter Registers
 * 
 *  
 * 
$L2C_XMD(0..0)_PFC   Address=(0x1180080800808+a*0x40)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  COUNT R/W/H   0x0        NS         Current counter value                             
                                             Attribute: -dv_uvm_force_compare=True.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_RSC_PFC = Level 2 Cache COMMIT Bus Performance Counter Registers
 * 
 *  
 * 
$L2C_RSC(0..0)_PFC   Address=(0x1180080800810+a*0x40)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  COUNT R/W/H   0x0        NS         Current counter value                             
                                             Attribute: -dv_uvm_force_compare=True.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_RSD_PFC = Level 2 Cache FILL Bus Performance Counter Registers
 * 
 *  
 * 
$L2C_RSD(0..0)_PFC   Address=(0x1180080800818+a*0x40)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  COUNT R/W/H   0x0        NS         Current counter value                             
                                             Attribute: -dv_uvm_force_compare=True.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_INV_PFC = Level 2 Cache IOC Performance Counter Registers
 * 
 *  
 * 
$L2C_INV(0..0)_PFC   Address=(0x1180080800820+a*0x40)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  COUNT R/W/H   0x0        NS         Current counter value                             
                                             Attribute: -dv_uvm_force_compare=True.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_IOC_PFC = Level 2 Cache IOC Performance Counter Register
 * 
 *  
 *  Attribute: -dv_fc_scratch=ALL.
 * 
$L2C_IOC(0)_PFC   Address=(0x1180080800828+a*0x40)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  COUNT R/W/H   0x0        NS         Current counter value                             
                                             Attribute: -dv_uvm_force_compare=True.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_IOR_PFC = Level 2 Cache IOR Performance Counter Register
 * 
 *  
 * 
$L2C_IOR(0)_PFC   Address=(0x1180080800830+a*0x40)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  COUNT R/W/H   0x0        NS         Current counter value                             
                                             Attribute: -dv_uvm_force_compare=True.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_WPAR_PP = Level 2 Cache Core Way Partitioning Registers
 * 
 *  
 * 
$L2C_WPAR_PP(0..3)   Address=(0x1180080840000+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS    RAZ     NS         NS         Reserved.                                         
 <3:0>   MASK  R/W     0x0        0x0        Way partitioning mask (1 means do not use). The read value of MASK includes bits set
                                             because of the L2C cripple fuses.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_WPAR_IOB = Level 2 Cache IOB Way Partitioning Registers
 * 
 *  
 * 
$L2C_WPAR_IOB(0..0)   Address=(0x1180080840200+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS    RAZ     NS         NS         Reserved.                                         
 <3:0>   MASK  R/W     0x0        0x0        Way partitioning mask (1 means do not use). The read value of MASK includes bits set
                                             because of the L2C cripple fuses.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_QOS_PP = Level 2 Cache Core QOS Level Registers
 * 
 *  
 * 
$L2C_QOS_PP(0..3)   Address=(0x1180080880000+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:3>  NS    RAZ     NS         NS         Reserved.                                         
 <2:0>   LVL   R/W     0x0        0x0        QOS level to use for this core.                   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_QOS_IOB = Level 2 Cache IOB QOS Level Registers
 * 
 *  
 * 
$L2C_QOS_IOB(0..0)   Address=(0x1180080880200+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:7>  NS     RAZ     NS         NS         Reserved.                                         
 <6:4>   DWBLVL R/W     0x0        0x0        QOS level for DWB commands.                       
 <3>     NS     RAZ     NS         NS         Reserved.                                         
 <2:0>   LVL    R/W     0x0        0x0        QOS level for non-DWB commands.                   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_TAD_PRF = Level 2 Cache TAD Performance Counter Control Registers
 * 
 *  "(1) All four counters are equivalent and can use any of the defined selects.
 *  (2) the CNTnSEL legal values are:
 *  0x00 -Nothing (disabled)
 *  0x01 -L2 Tag Hit
 *  0x02 -L2 Tag Miss
 *  0x03 -L2 Tag NoAlloc (forced no-allocate)
 *  0x04 -L2 Victim
 *  0x05 -SC Fail
 *  0x06 -SC Pass
 *  0x07 -LFB Occupancy (each cycle adds # of LFBs valid)
 *  0x08 -LFB Wait LFB (each cycle adds # LFBs waiting for other LFBs)
 *  0x09 -LFB Wait VAB (each cycle adds # LFBs waiting for VAB)
 *  0x80 -Quad 0 index bus inuse
 *  0x81 -Quad 0 read data bus inuse
 *  0x82 -Quad 0 # banks inuse (0-4/cycle)
 *  0x83 -Quad 0 wdat flops inuse (0-4/cycle)
 *  0x90 -Quad 1 index bus inuse
 *  0x91 -Quad 1 read data bus inuse
 *  0x92 -Quad 1 # banks inuse (0-4/cycle)
 *  0x93 -Quad 1 wdat flops inuse (0-4/cycle)
 *  0xA0 -Quad 2 index bus inuse
 *  0xA1 -Quad 2 read data bus inuse
 *  0xA2 -Quad 2 # banks inuse (0-4/cycle)
 *  0xA3 -Quad 2 wdat flops inuse (0-4/cycle)
 *  0xB0 -Quad 3 index bus inuse
 *  0xB1 -Quad 3 read data bus inuse
 *  0xB2 -Quad 3 # banks inuse (0-4/cycle)
 *  0xB3 -Quad 3 wdat flops inuse (0-4/cycle)
 *  0xC0 -Quad 4 index bus inuse
 *  0xC1 -Quad 4 read data bus inuse
 *  0xC2 -Quad 4 # banks inuse (0-4/cycle)
 *  0xC3 -Quad 4 wdat flops inuse (0-4/cycle)
 *  0xD0 -Quad 5 index bus inuse
 *  0xD1 -Quad 5 read data bus inuse
 *  0xD2 -Quad 5 # banks inuse (0-4/cycle)
 *  0xD3 -Quad 5 wdat flops inuse (0-4/cycle)
 *  0xE0 -Quad 6 index bus inuse
 *  0xE1 -Quad 6 read data bus inuse
 *  0xE2 -Quad 6 # banks inuse (0-4/cycle)
 *  0xE3 -Quad 6 wdat flops inuse (0-4/cycle)
 *  0xF0 -Quad 7 index bus inuse
 *  0xF1 -Quad 7 read data bus inuse
 *  0xF2 -Quad 7 # banks inuse (0-4/cycle)
 *  0xF3 -Quad 7 wdat flops inuse (0-4/cycle)"
 * 
$L2C_TAD(0..0)_PRF   Address=(0x1180080A00008+a*0x40000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS      RAZ     NS         NS         Reserved.                                         
 <31:24> CNT3SEL R/W     0x0        0x1        Selects event to count for L2C_TAD(0..0)_PFC3     
 <23:16> CNT2SEL R/W     0x0        0x1        Selects event to count for L2C_TAD(0..0)_PFC2     
 <15:8>  CNT1SEL R/W     0x0        0x1        Selects event to count for L2C_TAD(0..0)_PFC1     
 <7:0>   CNT0SEL R/W     0x0        0x1        Selects event to count for L2C_TAD(0..0)_PFC0     
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_TAD_TAG = Level 2 Cache Tag Data Registers
 * 
 *  This register holds the tag information for LTGL2I and STGL2I commands.
 * 
$L2C_TAD(0..0)_TAG   Address=(0x1180080A00010+a*0x40000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:60> SBLKDTY R/W/H   0x0        0x0        Sub-block dirty bits. INTERNAL: 70xx does not implement true sub-block dirty bits,
                                               therefore when L2C_TAD_TAG is written, it is set to all ones if DIRTY is 1, or all zeroes
                                               if DIRTY is zero. LTGL2I will always result in similar legal values being loaded.
 <59:56> NS      RAZ     NS         NS         Reserved.                                         
 <55:48> BUSINFO R/W/H   0x0        0x0        The businfo bits. Legal values: when [55]==1, we are in idmode and [54:50] must be 0,
                                               [49:48] are the PPVID of the PP which could be holding the block; when [55]==0, we are in
                                               bus mask mode and [54:49] must be 0 [48] is 1 if any of the PP's could contain the
                                               block. Operation is undefined if an STGL2I causes an illegal value to be written to the L2
                                               TAGs. LTGL2Is will only load legal values into this register.
 <47>    NS      RAZ     NS         NS         Reserved.                                         
 <46:40> ECC     R/W/H   0x0        NS         The tag ECC                                       
 <39:17> TAG     R/W/H   0x0        0x0        The tag. The tag is the corresponding bits from the L2C+LMC internal L2/DRAM byte address.
 <16:4>  NS      RAZ     NS         NS         Reserved.                                         
 <3>     USED    R/W/H   0x0        0x0        The LRU use bit. If setting the LOCK bit, the USE bit should also be set or the operation
                                               is undefined.
 <2>     VALID   R/W/H   0x0        0x0        The valid bit                                     
 <1>     DIRTY   R/W/H   0x0        0x0        The dirty bit                                     
 <0>     LOCK    R/W/H   0x0        0x0        The lock bit. If setting the LOCK bit, the USE bit should also be set or the operation is
                                               undefined.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_TAD_DLL = L2C TAD DLL Observability Register
 * 
 *  Register for DLL observability
 * 
$L2C_TAD(0..0)_DLL   Address=(0x1180080A00018+a*0x40000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS          RAZ     NS         NS         Reserved.                                         
 <15:4>  DLL_SETTING RO/H    0x0        0x1        DLL setting.                                      
 <3:1>   DLL_STATE   RO/H    0x0        0x1        DLL state.                                        
 <0>     DLL_LOCK    RO/H    0x0        0x1        DLL locked.                                       
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_TAD_INT = Level 2 Cache TAD Interrupt Registers
 * 
 *  This register is for TAD-based interrupts.
 * 
$L2C_TAD(0..0)_INT   Address=(0x1180080A00028+a*0x40000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:34> NS       RAZ     NS         NS         Reserved.                                         
 <33>    RTGDBE   R/W1C/H 0x0        0x0        RTG double-bit error                              
 <32>    RTGSBE   R/W1C/H 0x0        0x0        RTG single-bit error                              
 <31:17> NS       RAZ     NS         NS         Reserved.                                         
 <16>    WRDISLMC R/W1C/H 0x0        0x0        Illegal write to disabled LMC error. A DRAM write arrived before the LMC(s) were enabled.
 <15>    RDDISLMC R/W1C/H 0x0        0x0        Illegal read to disabled LMC error. A DRAM read arrived before the LMC(s) were enabled.
 <14>    BIGRD    R/W1C/H 0x0        0x0        Read reference past L2C_BIG_CTL[MAXDRAM] occurred.
 <13>    BIGWR    R/W1C/H 0x0        0x0        Write reference past L2C_BIG_CTL[MAXDRAM] occurred.
 <12>    HOLERD   R/W1C/H 0x0        0x0        Read reference to 256MB hole occurred.            
 <11>    HOLEWR   R/W1C/H 0x0        0x0        Write reference to 256MB hole occurred.           
 <10>    NOWAY    R/W1C/H 0x0        0x0        No way was available for allocation. L2C sets NOWAY during its processing of a transaction
                                                whenever it needed/wanted to allocate a WAY in the L2 cache, but was unable to. When this
                                                bit = 1, it is (generally) not an indication that L2C failed to complete transactions.
                                                Rather, it is a hint of possible performance degradation. (For example, L2C must read-
                                                modify-write DRAM for every transaction that updates some, but not all, of the bytes in a
                                                cache block, misses in the L2 cache, and cannot allocate a WAY.) There is one 'failure'
                                                case where L2C sets NOWAY: when it cannot leave a block locked in the L2 cache as part of
                                                a LCKL2 transaction. See L2C_TTG(0..7)_ERR for logged information.
 <9>     TAGDBE   R/W1C/H 0x0        0x0        TAG double-bit error occurred. See L2C_TTG(0..7)_ERR for logged information.
 <8>     TAGSBE   R/W1C/H 0x0        0x0        TAG single-bit error occurred. See L2C_TTG(0..7)_ERR for logged information.
 <7:6>   NS       RAZ     NS         NS         Reserved.                                         
 <5>     FBFDBE   R/W1C/H 0x0        0x0        FBF double-bit error occurred. See L2C_TQD(0..7)_ERR for logged information.
 <4>     FBFSBE   R/W1C/H 0x0        0x0        FBF single-bit error occurred. See L2C_TQD(0..7)_ERR for logged information.
 <3>     SBFDBE   R/W1C/H 0x0        0x0        SBF double-bit error occurred. See L2C_TQD(0..7)_ERR for logged information.
 <2>     SBFSBE   R/W1C/H 0x0        0x0        SBF single-bit error occurred. See L2C_TQD(0..7)_ERR for logged information.
 <1>     L2DDBE   R/W1C/H 0x0        0x0        L2D double-bit error occurred. See L2C_TQD(0..7)_ERR for logged information.
 <0>     L2DSBE   R/W1C/H 0x0        0x0        L2D single-bit error occurred. See L2C_TQD(0..7)_ERR for logged information.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_TAD_PFC = Level 2 Cache TAD Performance Counter Registers
 * 
 *  
 * 
$L2C_TAD(0..0)_PFC(0..3)   Address=(0x1180080A00400+a*0x40000+b*8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  COUNT R/W/H   0x0        NS         Current counter value                             
                                             Attribute: -dv_uvm_force_compare=True.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_TAD_ERR = Level 2 Cache TAD Request Error Info Registers
 * 
 *  This register records error information for HOLE* and BIG* interrupts. The first non-BIGRD
 *  error will lock the register until the logged error type is cleared; BIGRD never locks the
 *  register.
 * 
$L2C_TAD(0..0)_ERR   Address=(0x1180080A007D0+a*0x40000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    BIGRD  RO/H    0x0        0x0        Logged information is for a BIGRD error.          
 <62>    BIGWR  RO/H    0x0        0x0        Logged information is for a BIGWR error.          
 <61>    HOLERD RO/H    0x0        0x0        Logged information is for a HOLERD error.         
 <60>    HOLEWR RO/H    0x0        0x0        Logged information is for a HOLEWR error.         
 <59:58> NS     RAZ     NS         NS         Reserved.                                         
 <57:51> CMD    RO/H    0x0        NS         XMC command of request causing error.             
 <50:44> SOURCE RO/H    0x0        NS         XMC 'source' of request causing error. If SOURCE<6>==0, SOURCE<5:0> = PPID else
                                              SOURCE<3:0> is BUSID of IOB which made the request.
 <43:40> NODE   RO/H    0x0        NS         OCI Node of XMC request causing error. For BIG* errors NODE will always be the node
                                              logging the error (BIG* errors are logged at the home node). For HOLE* errors, NODE could
                                              be any OCI node in the system (HOLE* errors are logged at the requester node).
 <39:0>  ADDR   RO/H    0x0        NS         XMC address causing the error. This field is the physical address after hole removal and
                                              index aliasing (if enabled). (The hole is between DR0 and DR1. Remove the hole by
                                              subtracting 256MB from all L2/DRAM physical addresses >= 512 MB.)
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_TQD_ERR = Level 2 Cache TAD Quad Error Information Registers
 * 
 *  This register records error information for all L2D/SBF/FBF errors.
 *  An error locks the L2DIDX, and SYN fields and set the bit corresponding to the error received.
 *  DBE errors take priority and overwrite an earlier logged SBE error. Only one of SBE/DBE is set
 *  at any given time and serves to document which error the L2DIDX/SYN is associated with.
 *  The syndrome is recorded for DBE errors, though the utility of the value is not clear.
 * 
$L2C_TQD(0..0)_ERR   Address=(0x1180080A007D8+a*0x40000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    L2DDBE RO/H    0x0        0x0        L2DIDX/SYN corresponds to a double-bit L2D ECC error.
 <62>    SBFDBE RO/H    0x0        0x0        L2DIDX/SYN corresponds to a double-bit SBF ECC error.
 <61>    FBFDBE RO/H    0x0        0x0        L2DIDX/SYN corresponds to a double-bit FBF ECC error.
 <60>    L2DSBE RO/H    0x0        0x0        L2DIDX/SYN corresponds to a single-bit L2D ECC error.
 <59>    SBFSBE RO/H    0x0        0x0        L2DIDX/SYN corresponds to a single-bit SBF ECC error.
 <58>    FBFSBE RO/H    0x0        0x0        L2DIDX/SYN corresponds to a single-bit FBF ECC error.
 <57:40> NS     RAZ     NS         NS         Reserved.                                         
 <39:32> SYN    RO/H    0x0        NS         Error syndrome.                                   
 <31:18> NS     RAZ     NS         NS         Reserved.                                         
 <17:15> QDNUM  RO/H    0x0        NS         Quad containing the error.                        
 <14>    QDHLF  RO/H    0x0        NS         Quad half of the containing the error.            
 <13:0>  L2DIDX RO/H    0x0        NS         Index within the quad-half containing the error   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_TTG_ERR = Level 2 Cache TAD Tag Error Information Registers
 * 
 *  Error info for all TAG SBE/DBE/NOWAY errors.
 *  
 *  (1) The priority of errors (lowest to highest) is NOWAY, SBE, DBE. An error will lock the SYN,
 *  WAY, and L2IDX fields for equal or lower priority errors until cleared by software.
 *  
 *  (2) The syndrome is recorded for DBE errors, though the utility of the value is not clear.
 *  
 *  (3) A NOWAY error does not change the value of the SYN field, and leaves WAY unpredictable.
 *  L2IDX[16:7] is the L2 block index associated with the command which had no way to allocate.
 * 
$L2C_TTG(0..0)_ERR   Address=(0x1180080A007E0+a*0x40000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    TAGDBE RO/H    0x0        0x0        Information refers to a double-bit TAG ECC error. 
 <62>    TAGSBE RO/H    0x0        0x0        Information refers to a single-bit TAG ECC error. 
 <61>    NOWAY  RO/H    0x0        0x0        Information refers to a NOWAY error.              
 <60:39> NS     RAZ     NS         NS         Reserved.                                         
 <38:32> SYN    RO/H    0x0        0x0        Syndrome for the single-bit error.                
 <31:19> NS     RAZ     NS         NS         Reserved.                                         
 <18:17> WAY    RO/H    0x0        NS         Way of the L2 block containing the error          
 <16:7>  L2IDX  RO/H    0x0        NS         Index of the L2 block containing the error        
 <6:0>   NS     RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_TBF_BIST_STATUS = Level 2 Cache TAD Quad Buffer BIST Status Registers
 * 
 *  
 * 
$L2C_TBF(0..0)_BIST_STATUS   Address=(0x1180080A007E8+a*0x40000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> VBFFL    RO      0x0        0x0        BIST failure status for VBF ({QD7H1,QD7H0, ... , QD0H1, QD0H0})
 <47:32> SBFFL    RO      0x0        0x0        BIST failure status for SBF ({QD7H1,QD7H0, ... , QD0H1, QD0H0})
 <31:16> FBFRSPFL RO      0x0        0x0        BIST failure status for FBF RSP port ({QD7H1,QD7H0, ... , QD0H1, QD0H0})
 <15:0>  FBFWRPFL RO      0x0        0x0        BIST failure status for FBF WRP port ({QD7H1,QD7H0, ... , QD0H1, QD0H0})
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_TDT_BIST_STATUS = Level 2 Cache TAD Data BIST Status Registers
 * 
 *  
 * 
$L2C_TDT(0..0)_BIST_STATUS   Address=(0x1180080A007F0+a*0x40000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:0>  L2DFL RO      0x0        0x0        BIST failure status for L2D ({QD7H1,QD7H0, ... , QD0H1, QD0H0})
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_TTG_BIST_STATUS = Level 2 Cache TAD Tag BIST Status Registers
 * 
 *  
 * 
$L2C_TTG(0..0)_BIST_STATUS   Address=(0x1180080A007F8+a*0x40000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ     NS         NS         Reserved.                                         
 <47:32> RTGFL    RO      0x0        0x0        Always zero for 70xx.                             
 <31:18> NS       RAZ     NS         NS         Reserved.                                         
 <17>    LRULFBFL RO      0x0        0x0        BIST failure status for LRULFB memory             
 <16>    LRUFL    RO      0x0        0x0        BIST failure status for tag LRU                   
 <15:0>  TAGFL    RO      0x0        0x0        BIST failure status for TAG ways.                 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_MCI_INT = Level 2 Cache MCI Interrupt Registers
 * 
 *  This register is for MCI-based interrupts.
 * 
$L2C_MCI(0..0)_INT   Address=(0x1180080C00028+a*0x40000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:2>  NS     RAZ     NS         NS         Reserved.                                         
 <1>     VBFDBE R/W1C/H 0x0        0x0        VBF double-bit error occurred. See L2C_MCI(0..3)_ERR for logged information.
 <0>     VBFSBE R/W1C/H 0x0        0x0        VBF single-bit error occurred. See L2C_MCI(0..3)_ERR for logged information.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_MCI_ERR = Level 2 Cache MCI Error Information Registers
 * 
 *  This register records error information for all MCI errors.
 *  An error locks the VBF4, INDEX, and SYN0/1 fields and set the bit corresponding to the error
 *  received. VBFDBE errors take priority and will overwrite an earlier logged VBFSBE error. The
 *  information from exactly one VBF read is present at any given time and serves to document
 *  which error(s) were present in the read with the highest priority error.
 *  The syndrome is recorded for DBE errors, though the utility of the value is not clear.
 * 
$L2C_MCI(0..0)_ERR   Address=(0x1180080C007F0+a*0x40000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    VBFDBE1 RO/H    0x0        0x0        INDEX/SYN1 corresponds to a double-bit VBF ECC error
 <62>    VBFDBE0 RO/H    0x0        0x0        INDEX/SYN0 corresponds to a double-bit VBF ECC error
 <61>    VBFSBE1 RO/H    0x0        0x0        INDEX/SYN1 corresponds to a single-bit VBF ECC error
 <60>    VBFSBE0 RO/H    0x0        0x0        INDEX/SYN0 corresponds to a single-bit VBF ECC error
 <59:48> NS      RAZ     NS         NS         Reserved.                                         
 <47:40> SYN1    RO/H    0x0        0x0        Error syndrome for QW1 ([127:64]).                
 <39:32> SYN0    RO/H    0x0        0x0        Error syndrome for QW0 ([63:0]).                  
 <31:12> NS      RAZ     NS         NS         Reserved.                                         
 <11>    VBF4    RO/H    0x0        NS         When 1, errors were from VBF (4+a), when 0, from VBF (0+a).
 <10:4>  INDEX   RO/H    0x0        NS         VBF index which was read and had the error(s).    
 <3:0>   NS      RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_MCI_BIST_STATUS = Level 2 MCI BIST Status (DCLK) Registers
 * 
 *  If clear BIST is desired, CLEAR_BIST must be written to 1 before START_BIST is written to 1
 *  using a separate CSR write operation.
 *  CLEAR_BIST must not be changed after writing START_BIST to 1 until the BIST operation
 *  completes (indicated by START_BIST returning to 0) or operation is undefined.
 *  Attribute: -dv_bist_all_fail_test=ALL.
 * 
$L2C_MCI(0..0)_BIST_STATUS   Address=(0x1180080C007F8+a*0x40000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    START_BIST R/W/H   0x0        0x0        When written to 1, starts BIST. Remains 1 until BIST is complete.
 <62>    CLEAR_BIST R/W     0x0        0x0        When BIST is triggered, run clear BIST.           
 <61:2>  NS         RAZ     NS         NS         Reserved.                                         
 <1:0>   VBFFL      RO      0x0        0x0        BIST failure status for VBF0-1. For 70xx, VBFFL[1] will always be 0.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_CBC_INT = Level 2 Cache CBC Interrupt Registers
 * 
 *  This register is for CBC-based interrupts.
 * 
$L2C_CBC(0..0)_INT   Address=(0x1180080E00028+a*0x40000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS        RAZ     NS         NS         Reserved.                                         
 <3>     IOCCMDDBE R/W1C/H 0x0        0x0        IOCCMD double-bit error occurred. See L2C_CBC(0..3)_IOCERR for logged information.
 <2>     IOCCMDSBE R/W1C/H 0x0        0x0        IOCCMD single-bit error occurred. See L2C_CBC(0..3)_IOCERR for logged information.
 <1>     RSDDBE    R/W1C/H 0x0        0x0        RSD double-bit error occurred. See L2C_CBC(0..3)_RSDERR for logged information.
 <0>     RSDSBE    R/W1C/H 0x0        0x0        RSD single-bit error occurred. See L2C_CBC(0..3)_RSDERR for logged information.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_CBC_IOCERR = Level 2 Cache CBC Error Information Registers
 * 
 *  This register records error information for all CBC IOC errors.
 *  An error locks the INDEX, and SYN fields and set the bit corresponding to the error received.
 *  CMDDBE errors take priority and overwrite an earlier logged CMDSBE error. Only one of
 *  CMDSBE/CMDDBE is set at any given time and serves to document which error the INDEX/SYN is
 *  associated with.
 *  The syndrome is recorded for DBE errors, though the utility of the value is not clear.
 * 
$L2C_CBC(0..0)_IOCERR   Address=(0x1180080E007E8+a*0x40000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    CMDDBE RO/H    0x0        0x0        INDEX/SYN corresponds to a double-bit IOCCMD ECC error.
 <62>    CMDSBE RO/H    0x0        0x0        INDEX/SYN corresponds to a single-bit IOCCMD ECC error.
 <61:40> NS     RAZ     NS         NS         Reserved.                                         
 <39:32> SYN    RO/H    0x0        0x0        Error syndrome.                                   
 <31:3>  NS     RAZ     NS         NS         Reserved.                                         
 <2:0>   XMCNUM RO/H    0x0        0x0        Indicates the XMC that had the error.             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_CBC_RSDERR = Level 2 Cache RSD Error Information Registers
 * 
 *  This register records error information for all CBC RSD errors.
 *  An error locks the INDEX, and SYN fields and set the bit corresponding to the error received.
 *  RSDDBE errors take priority and overwrite an earlier logged RSDSBE error. Only one of
 *  RSDSBE/RSDDBE is set at any given time and serves to document which error the INDEX/SYN is
 *  associated with.
 *  The syndrome is recorded for DBE errors, though the utility of the value is not clear.
 * 
$L2C_CBC(0..0)_RSDERR   Address=(0x1180080E007F0+a*0x40000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    RSDDBE RO/H    0x0        0x0        INDEX/SYN corresponds to a double-bit RSD ECC error
 <62>    RSDSBE RO/H    0x0        0x0        INDEX/SYN corresponds to a single-bit RSD ECC error
 <61:40> NS     RAZ     NS         NS         Reserved.                                         
 <39:32> SYN    RO/H    0x0        0x0        Error syndrome.                                   
 <31:9>  NS     RAZ     NS         NS         Reserved.                                         
 <8:6>   TADNUM RO/H    0x0        0x0        Indicates the TAD FIFO containing the error.      
 <5:4>   QWNUM  RO/H    0x0        0x0        Indicates the QW containing the error.            
 <3:0>   RSDNUM RO/H    0x0        0x0        Indicates the RSD that had the error.             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * L2C_CBC_BIST_STATUS = Level 2 Cache CBC BIST Status Registers
 * 
 *  
 *  Attribute: -dv_bist_all_fail_test=ALL.
 * 
$L2C_CBC(0..0)_BIST_STATUS   Address=(0x1180080E007F8+a*0x40000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:34> NS       RAZ     NS         NS         Reserved.                                         
 <33:32> IOCCMDFL RO      0x0        0x0        BIST failure status for IOCCMD0-1.                
 <31:0>  RSDFL    RO      0x0        0x0        BIST failure status for RSDQW0-31.                
-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the lmc.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

 * 
 * LMC_INTSN_E
 * 
 *  Enumerates the different LMC-generated interrupts.  For the 70xx device, the
 *  INT_DLC_SEC, INT_DLC_DED, and INT_DDR_ERR will never occur.
 *
 *  Attribute: -width=20.
 * 
$LMC_INTSN_E
-----------------------------------------------------------------------------------------------------------------------------------
 Value                  Name                        Description    
-----------------------------------------------------------------------------------------------------------------------------------
 0x88000+a*0x1000       LMC(0..0)_INT_NXM_WR_ERR    See LMC(0..0)_INT[NXM_WR_ERR].
 0x88001+a*0x1000+b     LMC(0..0)_INT_SEC_ERR(0..3) See LMC(0..0)_INT[SEC_ERR<b>].
                                                    Attribute: -exempt_natural_alignment=b.
 0x88005+a*0x1000+b     LMC(0..0)_INT_DED_ERR(0..3) See LMC(0..0)_INT[DED_ERR<b>].
                                                    Attribute: -exempt_natural_alignment=b.
 0x88009+a*0x1000       LMC(0..0)_INT_DLC_SEC       Reserved.  INTERNAL:See LMC(0..0)_INT[DLCRAM_SEC_ERR].
 0x8800A+a*0x1000       LMC(0..0)_INT_DLC_DED       Reserved.  INTERNAL:See LMC(0..0)_INT[DLCRAM_DED_ERR].
 0x8800B+a*0x1000       LMC(0..0)_INT_DDR_ERR       Reserved.  INTERNAL:See LMC(0..0)_INT[DDR_ERR].
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_FADR = LMC Failing Address Register (SEC/DED/NXM)
 * 
 *  This register only captures the first transaction with ECC errors. A DED error can over-write
 *  this register with its failing addresses if the first error was a SEC. If you write
 *  LMC(0..0)_INT -> SEC_ERR/DED_ERR, it clears the error bits and captures the next failing
 *  address. If FDIMM is 1, that means the error is in the high DIMM.
 *  LMC(0..0)_FADR captures the failing pre-scrambled address location (split into DIMM, bunk,
 *  bank, etc). If scrambling is off, then LMC(0..0)_FADR will also capture the failing physical
 *  location in the DRAM parts. LMC(0..0)_SCRAMBLED_FADR captures the actual failing address
 *  location in the physical DRAM parts, i.e.,
 *  If scrambling is on, LMC(0..0)_SCRAMBLED_FADR contains the failing physical location in the
 *  DRAM parts (split into DIMM, bunk, bank, etc.)
 *  If scrambling is off, the pre-scramble and post-scramble addresses are the same; and so the
 *  contents of LMC(0..0)_SCRAMBLED_FADR match the contents of LMC(0..0)_FADR.
 * 
$LMC(0..0)_FADR   Address=(0x1180088000020|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:40> NS         RAZ     NS         NS         Reserved.                                         
 <39:38> FILL_ORDER RO/H    0x0        0x0        Fill order for failing transaction.               
 <37>    FDIMM      RO/H    0x0        0x0        Failing DIMM number.                              
 <36>    FBUNK      RO/H    0x0        0x0        Failing rank number.                              
 <35:32> FBANK      RO/H    0x0        0x0        Failing bank number. Bits <3:0>.                  
 <31:14> FROW       RO/H    0x0        0x0        Failing row address. Bits <17:0>.                 
 <13:0>  FCOL       RO/H    0x0        0x0        Failing column address <13:0>. Technically, represents the address of the 64b data that
                                                  had an ECC error, i.e., FCOL[0] is always 0. Can be used in conjunction with
                                                  LMC(0..0)_INT[DED_ERR] to isolate the 64b chunk of data in error.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_NXM_FADR = LMC NXM Failing Address Register
 * 
 *  This register captures only the first transaction with a NXM error while an interrupt is
 *  pending, and only captures a subsequent event once the interrupt is cleared by writing a 1 to
 *  LMC(0..0)_INT[NXM_ERR]. It captures the actual L2C-LMC address provided to the LMC that caused
 *  the NXM error. A read or write NXM error is captured only if enabled using the NXM event
 *  enables.
 * 
$LMC(0..0)_NXM_FADR   Address=(0x1180088000028|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:39> NS        RAZ     NS         NS         Reserved.                                         
 <38>    NXM_SRC   RO/H    0x0        NS         Indicates the source of the operation that caused a NXM error:
                                                 0 = L2C, 1 = HFA
 <37>    NXM_TYPE  RO/H    0x0        NS         Indicates the type of operation that caused NXM error:
                                                 0 = Read, 1 = Write
 <36:0>  NXM_FADDR RO/H    0x0        NS         Failing L2C-LMC address. Bits<3:0> are always 0s for an HFA access, and bits<4:0> are
                                                 always 0s for an L2C access. Bits<5:4> represent the fill order for an L2C read operation,
                                                 and the start point within a cache line for a write operation.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_EXT_CONFIG = LMC Extended Configuration Register
 * 
 *  This register has additional configuration and control bits for the LMC.
 * 
$LMC(0..0)_EXT_CONFIG   Address=(0x1180088000030|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field                Field   Reset      Typical    Field                                             
 Pos     Name                 Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:21> NS                   RAZ     NS         NS         Reserved.                                         
 <20>    VREFINT_SEQ_DESKEW   R/W     0x0        0x0        Personality bit to change the operation of what is normally the internal
                                                            vref training sequence into the deskew training sequence.
 <19>    READ_ENA_BPRCH       R/W     0x0        0x0        Enable pad receiver one cycle longer than normal during read operations.
 <18>    READ_ENA_FPRCH       R/W     0x0        0x0        Enable pad receiver starting one cycle earlier than normal during read operations.
 <17>    SLOT_CTL_RESET_FORCE WO      0x0        0x0        Write 1 to reset the slot-control override for all slot-control registers. After writing a
                                                            1 to this bit, slot-control registers will update with changes made to other timing-
                                                            control registers. This is a one-shot operation; it automatically returns to 0 after a
                                                            write to 1.
 <16:8>  REF_INT_LSBS         R/W     0x0        0x0        These are the 9 LSBs for the refresh interval value, default to 0, but can be set to
                                                            a non-zero value to get a more precise refresh interval.
 <7>     DRIVE_ENA_BPRCH      R/W     0x0        0x0        Drive DQx for one cycle longer than normal during write operations.
 <6>     DRIVE_ENA_FPRCH      R/W     0x0        0x0        Drive DQX starting one cycle earlier than normal during write operations.
 <5:4>   DLCRAM_FLIP_SYND     R/W     0x0        0x0        Reserved. INTERNAL: DLC RAM flip syndrome control bits.
 <3>     DLCRAM_COR_DIS       R/W     0x0        0x0        Reserved. INTERNAL: DLC RAM correction disable control.
 <2>     DLC_NXM_RD           R/W     0x0        0x0        When set, enable NXM events for DLC reads.  Default is disabled, but
                                                            could be useful for debug of DLC/DFA accesses.
 <1>     L2C_NXM_RD           R/W     0x0        0x0        When set, enable NXM events for L2C read operations. INTERNAL: Default is disabled as L2C
                                                            NXM read operations are possible and expected during normal operation.
 <0>     L2C_NXM_WR           R/W     0x1        0x1        When set, enable NXM events for L2C write operations.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_ECC_SYND = LMC MRD ECC Syndromes Register
 * 
 *  
 * 
$LMC(0..0)_ECC_SYND   Address=(0x1180088000038|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS      RAZ     NS         NS         Reserved.                                         
 <31:24> MRDSYN3 RO/H    0x0        0x0        MRD ECC Syndrome Quad3. MRDSYN3 corresponds to DQ[63:0]_c1_p1, or in 32-bit mode
                                               DQ[31:0]_c3_p1/0, where _cC_pP denotes cycle C and phase P.
 <23:16> MRDSYN2 RO/H    0x0        0x0        MRD ECC Syndrome Quad2. MRDSYN2 corresponds to DQ[63:0]_c1_p0, or in 32-bit mode
                                               DQ[31:0]_c2_p1/0, where _cC_pP denotes cycle C and phase P.
 <15:8>  MRDSYN1 RO/H    0x0        0x0        MRD ECC Syndrome Quad1. MRDSYN1 corresponds to DQ[63:0]_c0_p1, or in 32-bit mode
                                               DQ[31:0]_c1_p1/0, where _cC_pP denotes cycle C and phase P.
 <7:0>   MRDSYN0 RO/H    0x0        0x0        MRD ECC Syndrome Quad0. MRDSYN0 corresponds to DQ[63:0]_c0_p0, or in 32-bit mode
                                               DQ[31:0]_c0_p1/0, where _cC_pP denotes cycle C and phase P.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_CHAR_DQ_ERR_COUNT = INTERNAL: LMC DDR Characterization Error Count Register

 * 
 *  INTERNAL: This register counts error in the DQ characterization mode.
 * 
$LMC(0..0)_CHAR_DQ_ERR_COUNT   Address=(0x1180088000040|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field        Field   Reset      Typical    Field                                             
 Pos     Name         Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:40> NS           RAZ     NS         NS         Reserved.                                         
 <39:0>  DQ_ERR_COUNT RO      NS         NS         DQ error count.                                   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_SEQ_CTL = LMC Sequence Control Register
 * 
 *  This register is used to initiate the various control sequences in the LMC.
 * 
$LMC(0..0)_SEQ_CTL   Address=(0x1180088000048|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field        Field   Reset      Typical    Field                                             
 Pos     Name         Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  NS           RAZ     NS         NS         Reserved.                                         
 <5>     SEQ_COMPLETE RO/H    0x0        0x0        Sequence complete. This bit is cleared when INIT_START is set to a 1 and then is set to 1
                                                    when the sequence is completed.
 <4:1>   SEQ_SEL      R/W     0x0        0x0        Selects the sequence that LMC runs after a 0->1 transition on
                                                    LMC(0..0)_SEQ_CTL[INIT_START].
                                                    
                                                    0x0 = Power-up/init:
                                                    RANKMASK selects participating ranks (should be all ranks with attached DRAM).
                                                    DDR*_DIMM*_CKE* signals activated (if they weren't already active).
                                                    RDIMM register control words 0-15 will be written to RANKMASK-selected RDIMMs when
                                                    LMC(0..0)_CONTROL[RDIMM_ENA]=1 and corresponding LMC(0..0)_DIMM_CTL[DIMM*_WMASK] bits are
                                                    set. (Refer to LMC(0..0)_DIMM0/1_PARAMS and LMC(0..0)_DIMM_CTL descriptions below for more
                                                    details.)
                                                    MR0, MR1, MR2, and MR3 will be written to selected ranks.
                                                    
                                                    0x1 = Read-leveling:
                                                    RANKMASK selects the rank to be read-leveled.
                                                    MR3 written to selected rank.
                                                    
                                                    0x2 = Self-refresh entry:
                                                    INIT_STATUS selects participating ranks (should be all ranks with attached DRAM).
                                                    MR1 and MR2 will be written to selected ranks if SREF_WITH_DLL=1.
                                                    DDR*_DIMM*_CKE* signals de-activated.
                                                    
                                                    0x3 = Self-refresh exit:
                                                    RANKMASK must be set to indicate participating ranks (should be all ranks with attached
                                                    DRAM).
                                                    DDR*_DIMM*_CKE* signals activated.
                                                    MR0, MR1, MR2, and MR3 will be written to participating ranks if SREF_WITH_DLL=1.
                                                    INIT_STATUS will be updated for ranks that are selected.
                                                    
                                                    0x6 = Write-leveling:
                                                    RANKMASK selects the rank to be write-leveled.
                                                    INIT_STATUS must indicate all ranks with attached DRAM.
                                                    MR1 and MR2 written to INIT_STATUS-selected ranks.
                                                    
                                                    0x7 = Init RCW
                                                    RANKMASK selects participating ranks (should be all ranks with attached DRAM).
                                                    In DDR3 mode, RDIMM register control words 0-15 will be written to RANKMASK-selected
                                                    RDIMMs when LMC(0..0)_CONTROL[RDIMM_ENA]=1 and corresponding
                                                    LMC(0..0)_DIMM_CTL[DIMM*_WMASK]
                                                    bits are set. (Refer to LMC(0..0)_DIMM0/1_PARAMS and LMC(0..0)_DIMM_CTL descriptions below
                                                    for more details.)
                                                    
                                                    0x8 = MRW
                                                    Mode Register Write sequence.
                                                    
                                                    0x9 = MPR
                                                    MPR register read or write sequence.
                                                    
                                                    0xa = VREFINT
                                                    Vref internal training sequence, also used as deskew training sequence when
                                                    LMC(0..0)_EXT_CONFIG[VREFINT_SEQ_DESKEW] is set.
                                                    
                                                    0xb = Offset Training
                                                    Offset training sequence.
                                                    
                                                    Self-refresh entry SEQ_SEL's may also be automatically
                                                    generated by hardware upon a chip warm or soft reset
                                                    sequence when LMC*_RESET_CTL[DDR3PWARM,DDR3PSOFT] are set.
                                                    
                                                    LMC writes the LMC*_MODEREG_PARAMS0 and LMC*_MODEREG_PARAMS1 CSR field values
                                                    to the Mode registers in the DRAM parts (i.e. MR0, MR1, MR2, and MR3) as part of some of
                                                    these sequences.
                                                    Refer to the LMC*_MODEREG_PARAMS0 and LMC*_MODEREG_PARAMS1 descriptions for more details.
                                                    If there are two consecutive power-up/init's without
                                                    a DRESET assertion between them, LMC asserts DDR_DIMM*_CKE as part of
                                                    the first power-up/init, and continues to assert DDR_DIMM*_CKE
                                                    through the remainder of the first and the second power-up/init.
                                                    If DDR_DIMM*_CKE deactivation and reactivation is needed for
                                                    a second power-up/init, a DRESET assertion is required
                                                    between the first and the second."
 <0>     INIT_START   WO      0x0        0x0        A 0->1 transition starts the DDR memory sequence that is selected by SEQ_SEL. This
                                                    register is a one-shot and clears itself each time it is set.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_MODEREG_PARAMS2 = LMC Mode Register Parameters Register 2
 * 
 *  These parameters are written into the DDR4 mode registers.
 * 
$LMC(0..0)_MODEREG_PARAMS2   Address=(0x1180088000050|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field         Field   Reset      Typical    Field                                             
 Pos     Name          Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:40> NS            RAZ     NS         NS         Reserved.                                         
 <39>    VREF_RANGE_11 R/W     0x0        0x0        VREF range for rank 3.                            
 <38:33> VREF_VALUE_11 R/W     0x0        0x0        VREF value for rank 3.                            
 <32:30> RTT_PARK_11   R/W     0x0        0x0        RTT park value for rank 3.                        
 <29>    VREF_RANGE_10 R/W     0x0        0x0        VREF range for rank 2.                            
 <28:23> VREF_VALUE_10 R/W     0x0        0x0        VREF value for rank 2.                            
 <22:20> RTT_PARK_10   R/W     0x0        0x0        RTT park value for rank 2.                        
 <19>    VREF_RANGE_01 R/W     0x0        0x0        VREF range for rank 1.                            
 <18:13> VREF_VALUE_01 R/W     0x0        0x0        VREF value for rank 1.                            
 <12:10> RTT_PARK_01   R/W     0x0        0x0        RTT park value for rank 1.                        
 <9>     VREF_RANGE_00 R/W     0x0        0x0        VREF range for rank 0.                            
 <8:3>   VREF_VALUE_00 R/W     0x0        0x0        VREF value for rank 0.                            
 <2:0>   RTT_PARK_00   R/W     0x0        0x0        RTT park value for rank 0.                        
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_MODEREG_PARAMS3 = LMC Mode Register Parameters Register 3
 * 
 *  These parameters are written into the DDR4 mode registers.
 * 
$LMC(0..0)_MODEREG_PARAMS3   Address=(0x1180088000058|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field        Field   Reset      Typical    Field                                             
 Pos     Name         Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:33> NS           RAZ     NS         NS         Reserved.                                         
 <32:31> MPR_FMT      R/W     0x0        0x0        MPR format.                                       
 <30:29> WR_CMD_LAT   R/W     0x0        0x0        Write command latency when CRC and DM are both enabled.
 <28:26> FGRM         R/W     0x0        0x0        Fine granularity refresh mode.                    
 <25>    TEMP_SENSE   R/W     0x0        0x0        Temperature sensor readout enable.                
 <24>    PDA          R/W     0x0        0x0        Per DRAM addressability.                          
 <23>    GD           R/W     0x0        0x0        Gear-down mode.                                   
 <22>    CRC          R/W     0x0        0x0        CRC mode.                                         
 <21:20> LPASR        R/W     0x0        0x0        LP auto self refresh.                             
 <19:17> TCCD_L       R/W     0x1        0x1        TCCD_L timing parameter:                          
                                                    0x0 = 4. 0x3 = 7.
                                                    0x1 = 5. 0x4 = 8.
                                                    0x2 = 6. 0x5-0x7 = reserved.
 <16>    RD_DBI       RO      0x0        0x0        Read DBI, must be 0.                              
 <15>    WR_DBI       RO      0x0        0x0        Write DBI, must be 0.                             
 <14>    DM           R/W     0x0        0x0        Data mask enable.                                 
 <13>    CA_PAR_PERS  R/W     0x0        0x0        Command/address persistent parity error mode.     
 <12>    ODT_PD       R/W     0x0        0x0        ODT in PD mode.                                   
 <11:9>  PAR_LAT_MODE R/W     0x0        0x0        Parity latency mode.                              
 <8>     WR_PREAMBLE  R/W     0x0        0x0        Write preamble, 0 = one nCK, 1 = two nCK.         
 <7>     RD_PREAMBLE  R/W     0x0        0x0        Write preamble, 0 = one nCK, 1 = two nCK.         
 <6>     SRE_ABORT    R/W     0x0        0x0        Self refresh abort.                               
 <5:3>   CAL          R/W     0x0        0x0        CS-to-CMD/ADDR latency mode (cycles).             
 <2>     VREF_MON     R/W     0x0        0x0        Internal VREF monitor: 0 = disable, 1 = enable.   
 <1>     TC_REF       R/W     0x0        0x0        Temperature controlled refresh range: 0 = normal, 1 = extended.
 <0>     MAX_PD       R/W     0x0        0x0        Maximum power-down mode: 0 = disable, 1 = enable. 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_TIMING_PARAMS2 = LMC Timing Parameters Register 2
 * 
 *  This register sets timing parameters for DDR4.
 * 
$LMC(0..0)_TIMING_PARAMS2   Address=(0x1180088000060|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:15> NS          RAZ     NS         NS         Reserved.                                         
 <14:11> TRTP        R/W     0x5        NS         Specifies the TRTP parameter, in cycles. Set this field as follows:
                                                   RNDUP[TRTP(ns) / TCYC(ns)] - 1,
                                                   For DDR3, typical = max(4 nCK, 7.5ns).
                                                   For DDR4 the TRTP parameter is dictated by the TWR MR bits.
 <10:7>  T_RW_OP_MAX R/W     0x7        0x7        Specifies the maximum delay for a read or write operation to complete, used to set the
                                                   timing of MRW and MPR operations. Set this field as follows:
                                                   RNDUP[Maximum operation delay (cycles) / 8]
                                                   Typical = 0x7.
 <6:3>   TWTR_L      R/W     0x6        0x6        Specifies TWTR_L constraints. Set this field as follows:
                                                   RNDUP[TWTR_L(ns) / TCYC(ns)] - 1
                                                   where TWTR_L is from the JEDEC DDR4 spec, and TCYC(ns) is the DDR clock frequency (not the
                                                   data rate).
                                                   Typical = MAX(4 nCK, 7.5 ns)
                                                   INTERNAL: Seems the '- 1' is because we add 1 back into slot timing equation
 <2:0>   TRRD_L      R/W     0x4        0x4        Specifies TRRD_L constraints. Set this field as follows:
                                                   RNDUP[TRRD_L(ns) / TCYC(ns)] - 1,
                                                   where TRRD_L is from the JEDEC DDR4 spec, and TCYC(ns) is the DDR clock frequency (not the
                                                   data rate).
                                                   Typical = MAX(4 nCK, 7.5 ns)
                                                   0x0 = reserved. 0x4 = five TCYC.
                                                   0x1 = two TCYC. 0x5 = six TCYC.
                                                   0x2 = three TCYC. 0x6 = seven TCYC.
                                                   0x3 = four TCYC. 0x7 = eight TCYC.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_MR_MPR_CTL = LMC MR Write and MPR Control Register
 * 
 *  This register sets timing parameters for DDR4.
 * 
$LMC(0..0)_MR_MPR_CTL   Address=(0x1180088000068|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field                 Field   Reset      Typical    Field                                             
 Pos     Name                  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:52> NS                    RAZ     NS         NS         Reserved.                                         
 <51>    MPR_WHOLE_BYTE_ENABLE R/W     0x0        0x0        Reserved. INTERNAL: Select a whole byte of DRAM data to read when whole-byte mode enabled.
 <50:47> MPR_BYTE_SELECT       R/W     0x0        0x0        Reserved. INTERNAL: Select a whole byte of DRAM data to read when whole-byte mode enabled.
 <46:45> MPR_BIT_SELECT        R/W     0x0        0x0        Select which of four bits to read for each nibble of DRAM data. Typically all four bits
                                                             from a *4 device, or all eight bits from a *8 device, or all 16 bits from a *16 device
                                                             carry the same data, but this field allows selection of which device bit will be used to
                                                             read the MPR data.
 <44>    MPR_WR                R/W     0x0        0x0        MPR sequence will perform a write operation when set.
 <43:42> MPR_LOC               R/W     0x0        0x0        MPR location select for MPR sequence. Only makes a difference for DDR4.
 <41>    MR_WR_PDA_ENABLE      R/W     0x0        0x0        PDA write enable. When set, MRW operations use PDA, enabled by MR_WR_PDA_MASK per device.
                                                             Only available for DDR4 devices.
 <40:23> MR_WR_PDA_MASK        R/W     0x0        0x0        PDA mask. If MR_WR_PDA_ENABLE = 1 and there is a 1 in the bit for this mask value, then
                                                             the corresponding DRAM device is enabled for the PDA MR write operation.
                                                             Bit<23> corresponds to the lowest order, *4 device, and bit<40> corresponds to the highest
                                                             order *4 device, for a total of up to 18 devices.
 <22:21> MR_WR_RANK            R/W     0x0        0x0        Selects the DRAM rank for either MRW or MPR sequences.
 <20:18> MR_WR_SEL             R/W     0x0        0x0        Selects which MR to write with the MR write sequence.
                                                             Which pins to drive and how to drive them is automatically controlled through the DDR3/4
                                                             mode setting. Bits<19:18> are also used to select the MPR page for an MPR sequence.
                                                             A value of 0x7 selects an RCW write for both DDR4 and DDR3 MRW operations.
 <17:0>  MR_WR_ADDR            R/W     0x0        0x0        Sets a value for A<17:0> for MR write operations. Note that many of these bits must be 0
                                                             for various MRs. Bits<7:0> are also used for write data on an MPR sequence write
                                                             operation.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_MPR_DATA0 = LMC MR Data Register 0
 * 
 *  This register provides bits <63:0> of MPR data register.
 * 
$LMC(0..0)_MPR_DATA0   Address=(0x1180088000070|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  MPR_DATA RO      0x0        NS         MPR data bits<63:0>. Bits<7:0> represent the MPR data for the lowest-order *4 device (*4
                                                device 0); bits<15:8> represent *4 device 1; ..., bits<63:56> are for *4 device 7.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_MPR_DATA1 = LMC MR Data Register 1
 * 
 *  This register provides bits <127:64> of MPR data register.
 * 
$LMC(0..0)_MPR_DATA1   Address=(0x1180088000078|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  MPR_DATA RO      0x0        NS         MPR data bits<127:64>. Bits<7:0> represent the MPR data for *4 device 8; bits<15:8>
                                                represent *4 device 9; ...; bits<63:56> are for *4 device 15.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_MPR_DATA2 = LMC MR Data Register 2
 * 
 *  This register provides bits <143:128> of MPR data register.
 * 
$LMC(0..0)_MPR_DATA2   Address=(0x1180088000080|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ     NS         NS         Reserved.                                         
 <15:0>  MPR_DATA RO      0x0        NS         MPR data bits<143:128>. Bits<7:0> represent the MPR data for *4 device 16; bits<15:8>
                                                represent *4 device 17.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_DUAL_MEMCFG = LMC Dual Memory Configuration Register
 * 
 *  This register controls certain parameters of dual-memory configuration.
 *  This register enables the design to have two separate memory configurations, selected
 *  dynamically by the reference address. Note however, that both configurations share
 *  LMC(0..0)_CONTROL[XOR_BANK], LMC(0..0)_CONFIG [PBANK_LSB], LMC(0..0)_CONFIG[RANK_ENA], and all
 *  timing parameters.
 *  In this description:
 *  config0 refers to the normal memory configuration that is defined by the
 *  LMC*_CONFIG[ROW_LSB] parameter
 *  config1 refers to the dual (or second) memory configuration that is defined by this register.
 *  Enable-mask to chip-select mapping is shown below:
 * 
$LMC(0..0)_DUAL_MEMCFG   Address=(0x1180088000098|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:19> NS      RAZ     NS         NS         Reserved.                                         
 <18:16> ROW_LSB R/W     0x3        NS         Encoding used to determine which memory address bit position represents the low order DDR
                                               ROW address. Refer to
                                               LMC(0..0)_CONFIG[ROW_LSB].
                                               Refer to Cache-block Read Transaction Example.
 <15:4>  NS      RAZ     NS         NS         Reserved.                                         
 <3:0>   CS_MASK R/W     0x0        NS         Chip-select mask. This mask corresponds to the four chip-select signals for a memory
                                               configuration. Each reference address asserts one of the chip-select signals. If that
                                               chip-select signal has its corresponding CS_MASK bit set, then the config1 parameters are
                                               used, otherwise the config0 parameters are used.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_NXM = LMC Nonexistent Memory Register
 * 
 *  Following is the decoding for mem_msb/rank:
 *  0000: mem_msb = mem_adr[25]
 *  0001: mem_msb = mem_adr[26]
 *  0010: mem_msb = mem_adr[27]
 *  0011: mem_msb = mem_adr[28]
 *  0100: mem_msb = mem_adr[29]
 *  0101: mem_msb = mem_adr[30]
 *  0110: mem_msb = mem_adr[31]
 *  0111: mem_msb = mem_adr[32]
 *  1000: mem_msb = mem_adr[33]
 *  1001: mem_msb = mem_adr[34]
 *  1010: mem_msb = mem_adr[35]
 *  1011: mem_msb = mem_adr[36]
 *  1010-1111 = Reserved
 *  For example, for a DIMM made of Samsung's K4B1G0846C-ZCF7 1Gb (16M * 8 bit * 8 bank) DDR3
 *  parts, the column address width = 10; so with 10b of col, 3b of bus, 3b of bank, row_lsb = 16.
 *  Therefore, row = mem_adr[29:16] and mem_msb = 4.
 *  Note also that addresses greater than the max defined space (pbank_msb) are also treated as
 *  NXM accesses.
 * 
$LMC(0..0)_NXM   Address=(0x11800880000C8|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field         Field   Reset      Typical    Field                                             
 Pos     Name          Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:24> NS            RAZ     NS         NS         Reserved.                                         
 <23:20> MEM_MSB_D1_R1 R/W     0x0        NS         Max row MSB for DIMM1, RANK1/DIMM1 in single ranked.
 <19:16> MEM_MSB_D1_R0 R/W     0x0        NS         Max row MSB for DIMM1, RANK0.                     
 <15:12> MEM_MSB_D0_R1 R/W     0x0        NS         Max row MSB for DIMM0, RANK1/DIMM0 in single ranked.
 <11:8>  MEM_MSB_D0_R0 R/W     0x0        NS         Max row MSB for DIMM0, RANK0.                     
 <7:4>   NS            RAZ     NS         NS         Reserved.                                         
 <3:0>   CS_MASK       R/W     0x0        NS         Chip select mask. This mask corresponds to the four chip selects for a memory
                                                     configuration. If LMC(0..0)_CONFIG[RANK_ENA]=0 then this mask must be set in pairs because
                                                     each reference address will assert a pair of chip selects. If the chip select(s) have a
                                                     corresponding CS_MASK bit set, then the reference is to nonexistent memory (NXM). LMC will
                                                     alias a NXM read reference to use the lowest, legal chip select(s) and return zeros. LMC
                                                     normally discards NXM write operations, but will also alias them when LMC(0..0)_CONTROL
                                                     [NXM_WRITE_EN]=1.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_DIMM_DDR4_PARAMS0 = LMC DIMM Parameters Registers 0
 * 
 *  This register contains values to be programmed into the extra DDR4 control words in the
 *  corresponding (registered) DIMM. These are control words RC1x through RC8x.
 * 
$LMC(0..0)_DIMM(0..1)_DDR4_PARAMS0   Address=(0x11800880000D0|a<<24|b<<3)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:56> RC8X R/W     0x0        0x0        RC8x.                                             
 <55:48> RC7X R/W     0x0        0x0        RC7x.                                             
 <47:40> RC6X R/W     0x0        0x0        RC6x.                                             
 <39:32> RC5X R/W     0x0        0x0        RC5x.                                             
 <31:24> RC4X R/W     0x0        0x0        RC4x.                                             
 <23:16> RC3X R/W     0x0        0x0        RC3x.                                             
 <15:8>  RC2X R/W     0x0        0x0        RC2x.                                             
 <7:0>   RC1X R/W     0x0        0x0        RC1x.                                             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_BIST_CTL = LMC BIST Control Registers
 * 
 *  This register has fields to control BIST operation.
 *  Attribute: -dv_bist_all_fail_test=ALL.
 * 
$LMC(0..0)_BIST_CTL   Address=(0x1180088000100|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field              Field   Reset      Typical    Field                                             
 Pos     Name               Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS                 RAZ     NS         NS         Reserved.                                         
 <3>     DLCRAM_BIST_STATUS RO/H    0x0        0x0        Reserved.                                         
 <2>     DLCRAM_BIST_DONE   RO/H    0x0        NS         Reserved.                                         
 <1>     START_BIST         R/W     0x0        0x0        Reserved.                                         
 <0>     CLEAR_BIST         R/W     0x0        0x0        Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_DIMM_DDR4_PARAMS1 = LMC DIMM Parameters Registers 1
 * 
 *  This register contains values to be programmed into the extra DDR4 control words in the
 *  corresponding (registered) DIMM. These are control words RC9x through RCBx.
 * 
$LMC(0..0)_DIMM(0..1)_DDR4_PARAMS1   Address=(0x1180088000140|a<<24|b<<3)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:24> NS    RAZ     NS         NS         Reserved.                                         
 <23:16> RCBX  R/W     0x0        0x0        RCBx.                                             
 <15:8>  RCAX  R/W     0x0        0x0        RCAx.                                             
 <7:0>   RC9X  R/W     0x0        0x0        RC9x.                                             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_RESET_CTL = LMC Reset Control Register
 * 
 *  Specify the RSL base addresses for the block
 * 
$LMC(0..0)_RESET_CTL   Address=(0x1180088000180|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS        RAZ     NS         NS         Reserved.                                         
 <3>     DDR3PSV   R/W     0x0        0x0        Set by hardware to indicate DRAM contents were preserved during warm or soft reset.
                                                 May be useful for system software to determine when the DDR3 contents have been preserved.
                                                 Cleared by hardware during a cold reset. Never cleared by hardware during a warm/soft
                                                 reset. Set by hardware during a warm/soft reset if the hardware automatically put the DDR3
                                                 DRAM into self-refresh during the reset sequence.
                                                 Can also be written by software (to any value).
 <2>     DDR3PSOFT R/W     0x0        0x0        Set to enable preserve mode during soft reset.    
                                                 Enables preserve mode during a soft reset. When set, the DDR3 controller hardware
                                                 automatically puts the attached DDR3 DRAM parts into self-refresh at the beginning of a
                                                 soft reset sequence (see LMC(0..0)_SEQ_CTL[SEQ_SEL]), provided that the DDR3 controller is
                                                 up. When clear, the DDR3 controller hardware does not put the attached DDR3 DRAM parts
                                                 into self-refresh during a soft reset sequence.
                                                 DDR3PSOFT is cleared on a cold reset. Warm and soft chip resets do not affect the
                                                 DDR3PSOFT value. Outside of cold reset, only software CSR write operations change the
                                                 DDR3PSOFT value.
 <1>     DDR3PWARM R/W     0x0        0x0        Set to enable preserve mode during warm reset.    
                                                 Enables preserve mode during a warm reset. When set, the DDR3 controller hardware
                                                 automatically puts the attached DDR3 DRAM parts into self-refresh at the beginning of a
                                                 warm reset sequence (see LMC(0..0)_SEQ_CTL[SEQ_SEL]), provided that the DDR3 controller is
                                                 up. When clear, the DDR3 controller hardware does not put the attached DDR3 DRAM parts
                                                 into self-refresh during a warm reset sequence.
                                                 DDR3PWARM is cleared on a cold reset. Warm and soft chip resets do not affect the
                                                 DDR3PWARM value. Outside of cold reset, only software CSR write operations change the
                                                 DDR3PWARM value.
                                                 Note that if a warm reset follows a soft reset, DDR3PWARM has no effect, as the DDR3
                                                 controller is no longer up after any cold/warm/soft reset sequence.
 <0>     DDR3RST   R/W     0x0        0x0        "Memory Reset. 0 = Reset asserted; 1 = Reset deasserted.
                                                 DDR3 DRAM parts have a RESET# pin that was not present in DDR2 parts. The DDR3RST CSR
                                                 field controls the assertion of the new CN78XX pin that attaches to RESET#. When DDR3RST
                                                 is set, CN78XX asserts RESET#. When DDR3RST is clear, CN78XX deasserts RESET#.
                                                 DDR3RST is set on a cold reset. Warm and soft chip resets do not affect the DDR3RST value.
                                                 Outside of cold reset, only software CSR write operations change the DDR3RST value."

Notes:
"DDR3RST DDR3 DRAM parts have a RESET#
pin that wasn't present in DDR2 parts. The
DDR3RST CSR field controls the assertion of
the 7xxx pin that attaches to RESET#.
When DDR3RST is set, 6xxx asserts RESET#.
When DDR3RST is clear, 6xxx de-asserts
RESET#.
DDR3RST is set on a cold reset. Warm and
soft chip resets do not affect the DDR3RST
value. Outside of cold reset, only software
CSR writes change the DDR3RST value.
DDR3PWARM Enables preserve mode during a warm
reset. When set, the DDR3 controller hardware
automatically puts the attached DDR3 DRAM parts
into self refresh (see LMC*SEQ_CTL[SEQ_SEL] below) at the beginning of a warm
reset sequence, provided that the DDR3 controller
is up. When clear, the DDR3 controller hardware
does not put the attached DDR3 DRAM parts into
self-refresh during a warm reset sequence.
DDR3PWARM is cleared on a cold reset. Warm and
soft chip resets do not affect the DDR3PWARM
value. Outside of cold reset, only software
CSR writes change the DDR3PWARM value.
Note that if a warm reset follows a soft reset,
DDR3PWARM has no effect, as the DDR3 controller
is no longer up after any cold/warm/soft
reset sequence.
DDR3PSOFT Enables preserve mode during a soft
reset. When set, the DDR3 controller hardware
automatically puts the attached DDR3 DRAM parts
into self refresh (see LMC*SEQ_CTL[SEQ_SEL] below) at the beginning of a soft
reset sequence, provided that the DDR3 controller
is up. When clear, the DDR3 controller hardware
does not put the attached DDR3 DRAM parts into
self-refresh during a soft reset sequence.
DDR3PSOFT is cleared on a cold reset. Warm and
soft chip resets do not affect the DDR3PSOFT
value. Outside of cold reset, only software
CSR writes change the DDR3PSOFT value.
DDR3PSV May be useful for system software to
determine when the DDR3 contents have been
preserved.
Cleared by hardware during a cold reset. Never
cleared by hardware during a warm/soft reset.
Set by hardware during a warm/soft reset if
the hardware automatically put the DDR3 DRAM
into self-refresh during the reset sequence.
Can also be written by software (to any value)."

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_CONFIG = LMC Memory Configuration Register
 * 
 *  This register controls certain parameters required for memory configuration. Note the
 *  following:
 *  Priority order for hardware write operations to
 *  LMC(0..0)_CONFIG/LMC(0..0)_FADR/LMC(0..0)_ECC_SYND: DED error > SEC error.
 *  The self-refresh entry sequence(s) power the DLL up/down (depending on
 *  LMC(0..0)_MODEREG_PARAMS0[DLL]) when LMC(0..0)_CONFIG[SREF_WITH_DLL] is set.
 *  Prior to the self-refresh exit sequence, LMC(0..0)_MODEREG_PARAMS0 should be reprogrammed (if
 *  needed) to the appropriate values.
 *  See LMC Initialization Sequence for the LMC bring-up sequence.
 *  Attribute: -exempt_w1c_w=True.
 * 
$LMC(0..0)_CONFIG   Address=(0x1180088000188|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field              Field   Reset      Typical    Field                                             
 Pos     Name               Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    NS                 RAZ     NS         NS         Reserved.                                         
 <62>    BG2_ENABLE         R/W     0x1        NS         BG2 pin is active for DDR4 mode. Only has an effect when LMC(0..0)_CONFIG[MODEDDR4] = 1.
                                                          Typically only cleared for DDR4 *16 devices, where there is no BG2 pin on the device.
 <61>    MODE_X4DEV         RO      0x0        NS         Always reads as 0 for 70xx devices, there is no x4 device support.
 <60>    MODE32B            RO      0x1        0x1        Always reads as 1 for 70xx devices, only 32b mode is supported.
 <59>    SCRZ               R/W1S/H 0x0        NS         Hide LMC(0..0)_SCRAMBLE_CFG0 and LMC(0..0)_SCRAMBLE_CFG1 when set.
 <58>    EARLY_UNLOAD_D1_R1 R/W     0x0        NS         When set, unload the PHY silo one cycle early for Rank 3 reads.
                                                          The recommended EARLY_UNLOAD_D1_R1 value is 0.
 <57>    EARLY_UNLOAD_D1_R0 R/W     0x0        NS         When set, unload the PHY silo one cycle early for Rank 2 reads.
                                                          The recommended EARLY_UNLOAD_D1_RO value is 0.
 <56>    EARLY_UNLOAD_D0_R1 R/W     0x0        NS         When set, unload the PHY silo one cycle early for Rank 1 reads.
                                                          The recommended EARLY_UNLOAD_D0_R1 value is 0.
 <55>    EARLY_UNLOAD_D0_R0 R/W     0x0        NS         When set, unload the PHY silo one cycle early for Rank 0 reads.
                                                          The recommended EARLY_UNLOAD_D0_R0 value is 0.
 <54:51> INIT_STATUS        RO/H    0x0        NS         Indicates status of initialization. INIT_STATUS[n] = 1 implies rank n has been
                                                          initialized.
                                                          Software must set necessary RANKMASK bits before executing the initialization sequence
                                                          using LMC(0..0)_SEQ_CTL. If the rank has been selected for init with the RANKMASK bits,
                                                          the INIT_STATUS bits will be set after successful initialization and after self-refresh
                                                          exit. INIT_STATUS determines the chip-selects that assert during refresh, ZQCS, precharge
                                                          power-down entry/exit, and self-refresh entry SEQ_SEL's.
 <50:47> MIRRMASK           R/W     0x0        NS         "Mask determining which ranks are address-mirrored.
                                                          MIRRMASK<n> = 1 means Rank n addresses are mirrored for
                                                          0 <= n <= 3.
                                                          In DDR3, a mirrored read/write operation has the following differences:
                                                          DDR#_BA<1> is swapped with DDR#_BA<0>;
                                                          DDR#_A<8> is swapped with DDR#_A<7>;
                                                          DDR#_A<6> is swapped with DDR#_A<5>;
                                                          DDR#_A<4> is swapped with DDR#_A<3>.
                                                          
                                                          For 70xx, MIRRMASK<3:2> MBZ.
                                                          When RANK_ENA = 0, MIRRMASK<1> MBZ."
                                                          
                                                          INTERNAL:
                                                          In DDR4, a mirrored read/write operation has the following differences:
                                                          DDR#_BG<1> is swapped with DDR#_BG<0>;
                                                          DDR#_BA<1> is swapped with DDR#_BA<0>;
                                                          DDR#_A<13> is swapped with DDR#_A<11>;
                                                          DDR#_A<8> is swapped with DDR#_A<7>;
                                                          DDR#_A<6> is swapped with DDR#_A<5>;
                                                          DDR#_A<4> is swapped with DDR#_A<3>.
                                                          
                                                          For 70xx, MIRRMASK<3:2> MBZ.
                                                          When RANK_ENA = 0, MIRRMASK<1> MBZ."
 <46:43> RANKMASK           R/W     0x0        NS         Mask to select rank to be leveled/initialized. To write-level/read-level/initialize rank
                                                          i, set RANKMASK< i>
                                                                        RANK_ENA = 1 RANK_ENA = 0
                                                          RANKMASK<0> = DIMM0_CS0    DIMM0_CS0
                                                          RANKMASK<1> = DIMM0_CS1    MBZ
                                                          RANKMASK<2> = MBZ          MBZ
                                                          RANKMASK<3> = MBZ          MBZ
                                                          For read/write leveling, each rank has to be leveled separately, so RANKMASK should only
                                                          have one bit set. RANKMASK is not used during self-refresh entry/exit and precharge power-
                                                          down entry/exit instruction sequences. For 70xx, RANKMASK<3:2> MBZ.  When RANK_ENA = 0,
                                                          RANKMASK<1> MBZ.
 <42>    RANK_ENA           R/W     0x0        NS         "RANK enable (for use with dual-rank DIMMs).      
                                                          For dual-rank DIMMs, the RANK_ENA bit will enable the drive of the DDR#_DIMM*_CS*_L and
                                                          ODT_<1:0> pins differently based on the (PBANK_LSB - 1) address bit.
                                                          Write 0 for SINGLE ranked DIMMs."
 <41>    SREF_WITH_DLL      R/W     0x0        0x0        Self-refresh entry/exit write mode registers. When set, self-refresh entry sequence writes
                                                          MR2 and MR1 (in this order, in all ranks), and self-refresh exit sequence writes MR1, MR0,
                                                          MR2, and MR3 (in this order, for all ranks). The write operations occur before self-
                                                          refresh entry, and after self-refresh exit. When clear, self-refresh entry and exit
                                                          instruction sequences do not write any mode registers in the DDR3/4 parts.
 <40>    EARLY_DQX          R/W     0x0        0x0        Set this bit to send DQx signals one CK cycle earlier for the case when the shortest DQx
                                                          lines have a larger delay than the CK line.
 <39:18> REF_ZQCS_INT       R/W     0x1        NS         Refresh interval is represented in number of 512 CK cycle increments. ZQCS interval is
                                                          represented in a number of refresh intervals. A refresh sequence is triggered when bits
                                                          <24:18> are equal to 0x0, and a ZQCS sequence is triggered when <39:18> are equal to 0x0.
                                                          The ZQCS timer only decrements when the refresh timer is 0.
                                                          Program <24:18> to RND-DN(TREFI/clkPeriod/512).
                                                          A value of 0 in bits <24:18> will effectively turn off refresh.
                                                          Program <36:25> to (RND-DN(ZQCS_Period / Refresh_Period) - 1), where Refresh_Period is the
                                                          effective period programmed in bits <24:18>. Note that this value should always be greater
                                                          than 32, to account for resistor calibration delays.
                                                          000_00000000_0000000: Reserved
                                                          Max Refresh interval = 127 * 512= 65024 CK cycles
                                                          Max ZQCS interval = 32768 * 127 * 512 = 2130706432 CK cycles
                                                          If refresh interval is programmed to ~8us, max ZQCS interval is ~262ms, or ~4 ZQCS
                                                          operations per second.
                                                          LMC(0..0)_CONFIG[INIT_STATUS] determines which ranks receive the REF / ZQCS. LMC does not
                                                          send any refreshes / ZQCS's when LMC(0..0)_CONFIG[INIT_STATUS]=0.
 <17>    RESET              R/W     0x0        NS         Reset one-shot pulse for LMC(0..0)_OPS_CNT, LMC(0..0)_IFB_CNT, and LMC(0..0)_DCLK_CNT
                                                          CSRs.
                                                          To cause the reset, software writes this to a 1, then rewrites it to a 0.
 <16>    ECC_ADR            R/W     0x0        0x1        Include memory reference address in the ECC calculation.
                                                          0 = disabled, 1 = enabled.
 <15:12> FORCEWRITE         R/W     0x0        0x0        Force the oldest outstanding write to complete after having waited for 2^FORCEWRITE CK
                                                          cycles. 0 = disabled.
 <11:9>  IDLEPOWER          R/W     0x0        0x6        Enter precharge power-down mode after the memory controller has been idle for
                                                          2^(2+IDLEPOWER) CK cycles. 0 = disabled.
                                                          This field should only be programmed after initialization.
                                                          LMC(0..0)_MODEREG_PARAMS0[PPD] determines whether the DRAM DLL is disabled during the
                                                          precharge power-down.
 <8:5>   PBANK_LSB          R/W     0x5        NS         "DIMM address bit select. Reverting to the explanation for ROW_LSB, PBANK_LSB would be:
                                                          ROW_LSB bit + #rowbits + #rankbits
                                                          Decoding for PBANK_LSB:
                                                          0x0: DIMM = mem_adr<28>; if RANK_ENA=1, rank = mem_adr<27>
                                                          0x1: DIMM = mem_adr<29>; if RANK_ENA=1, rank = mem_adr<28>
                                                          0x2: DIMM = mem_adr<30>; if RANK_ENA=1, rank = mem_adr<29>
                                                          0x3: DIMM = mem_adr<31>; if RANK_ENA=1, rank = mem_adr<30>
                                                          0x4: DIMM = mem_adr<32>; if RANK_ENA=1, rank = mem_adr<31>
                                                          0x5: DIMM = mem_adr<33>; if RANK_ENA=1, rank = mem_adr<32>
                                                          0x6: DIMM = mem_adr<34>; if RANK_ENA=1, rank = mem_adr<33>
                                                          0x7: DIMM = mem_adr<35>; if RANK_ENA=1, rank = mem_adr<34>
                                                          0x8: DIMM = mem_adr<36>; if RANK_ENA=1, rank = mem_adr<35>
                                                          0x9: DIMM = 0; if RANK_ENA=1, rank = mem_adr<36>
                                                          0xA-0xF: reserved
                                                          For example, for a DIMM made of Samsung's K4B1G0846C-F7 1Gb (16M * 8 bit * 8 bank) DDR3
                                                          parts, the column address width = 10, so with 10b of col, 3b of bus, 3b of bank, ROW_LSB =
                                                          16. So, row = mem_adr<29:16>.
                                                          With RANK_ENA = 0, PBANK_LSB = 2.
                                                          With RANK_ENA = 1, PBANK_LSB = 3."
 <4:2>   ROW_LSB            R/W     0x3        NS         "Row address bit select.                          
                                                          Encoding used to determine which memory address bit position represents the low order DDR
                                                          ROW address. The processor's memory address<34:7> needs to be translated to DRAM addresses
                                                          (bnk,row,col,rank and DIMM) and that is a function of the following:
                                                          Datapath width (32)
                                                          # banks (8)
                                                          # column bits of the memory part--specified indirectly by this register.
                                                          # row bits of the memory part--specified indirectly by PBANK_LSB
                                                          # ranks in a DIMM--specified by RANK_ENA
                                                          # DIMMs in the system by the register below (PBANK_LSB).
                                                          Col Address starts from mem_addr[2] for 32b (4Bytes) DQ width. ROW_LSB is mem_adr[14] for
                                                          32b mode. Therefore, the ROW_LSB parameter should be set to 000 (32b).
                                                          Decoding for row_lsb:
                                                          Mem address  Mem address
                                                          Value and corresponding bit that is LSB:
                                                          000 <14>. 100 <18>.
                                                          001 <15>. 101 <19>.
                                                          010 <16>. 110 <20>.
                                                          011 <17>. 111 Reserved.
                                                          For example, for a DIMM made of Samsung's K4B1G0846C-F7 1GB (16M * 8 bit * 8 bank) DDR3
                                                          parts, the column address width = 10, so with 10b of col, 2b of bus, 3b of bank, ROW_LSB =
                                                          15. So, row = mem_adr<28:15>, and ROW_LSB parameter should be set to 001.
                                                          Refer to Cache-block Read Transaction Example."
 <1>     ECC_ENA            R/W     0x0        0x1        ECC enable. When set, enables the 8b ECC check/correct logic. Should be 1 when used with
                                                          DIMMs with ECC; 0, otherwise.
                                                          When this mode is turned on, DQ<71:64> on write operations contains the ECC code generated
                                                          for the 64 bits of data which will be written in the memory. Later on read operations,
                                                          will be used to check for single-bit error (which will be auto-corrected) and double-bit
                                                          error (which will be reported).
                                                          When not turned on, DQ<71:64> are driven to 0. Please refer to SEC_ERR, DED_ERR,
                                                          LMC(0..0)_FADR, and LMC(0..0)_ECC_SYND registers for diagnostics information when there is
                                                          an error.
 <0>     NS                 RAZ     NS         NS         Reserved.                                         

Notes:
INTERNAL: LMC Initialization Sequence:
1. SW must ensure there are no pending DRAM transactions and that the DDR PLL and the DLL have
been initialized.
2. Write LMC*_COMP_CTL2, LMC*_CONTROL, LMC*_WODT_MASK, LMC*_DUAL_MEMCFG, LMC*_TIMING_PARAMS0,
LMC*_TIMING_PARAMS1, LMC*_MODEREG_PARAMS0, LMC*_MODEREG_PARAMS1, LMC*_RESET_CTL (with
DDR3RST=0), LMC*_CONFIG with appropriate values, if necessary.
3. Wait 200us, then write LMC*_RESET_CTL[DDR3RST] = 1.
4. Initialize all ranks at once by writing LMC*_CONFIG[RANKMASK][n] = 1,
LMC*_SEQ_CTL[SEQ_SEL]= 6, LMC*_SEQ_CTL[INIT_START] = 1, where n is a valid rank index for the
specific board configuration.
5. for each rank n to be write-leveled {
if auto write-leveling is desired {
write LMC*_CONFIG[RANKMASK][n] = 1, LMC*_WLEVEL_CTL appropriately, LMC*_SEQ_CTL[SEQ_SEL]=6,
and LMC*_SEQ_CTL[INIT_START]= 1
wait until LMC*_WLEVEL_RANKn[STATUS] = 3
} else {
write LMC*_WLEVEL_RANKn with appropriate values
}
}
6. for each rank n to be read-leveled {
if auto read-leveling is desired {
write LMC*_CONFIG[RANKMASK][n] = 1, LMC*_RLEVEL_CTL appropriately, LMC*_SEQ_CTL[SEQ_SEL] = 1,
and LMC*_CONFIG[INIT_START] = 1
wait until LMC*_RLEVEL_RANKn[STATUS] = 3
} else {
write LMC*_RLEVEL_RANKn with appropriate values
}
}

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_CONTROL = LMC Control Register
 * 
 *  
 * 
$LMC(0..0)_CONTROL   Address=(0x1180088000190|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field           Field   Reset      Typical    Field                                             
 Pos     Name            Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    SCRAMBLE_ENA    R/W     0x0        0x0        When set, will enable the scramble/descramble logic.
 <62:51> THRCNT          RO/H    0x0        0xa        Fine count.                                       
 <50:43> PERSUB          R/W     0x0        0x0        Offset for DFA rate-matching.                     
 <42:39> THRMAX          R/W     0xf        0x2        Fine rate matching max bucket size. In conjunction with the coarse rate matching logic,
                                                       the fine rate matching logic gives software the ability to prioritize DFA reads over L2C
                                                       writes. Higher PERSUB values result in a lower DFA read bandwidth.
                                                       0x0 = Reserved
 <38:34> CRM_CNT         RO/H    0x0        0x0        Coarse count.                                     
 <33:29> CRM_THR         R/W     0x0        0x8        Coarse rate matching threshold.                   
 <28:24> CRM_MAX         R/W     0x1f       0x1f       Coarse rate matching max bucket size. The coarse rate matching logic is used to control
                                                       the bandwidth allocated to DFA reads. CRM_MAX is subdivided into two regions with DFA
                                                       reads being preferred over LMC reads/writes when CRM_CNT < CRM_THR. CRM_CNT increments by
                                                       1 when a DFA read is slotted and by 2 when a LMC read/write is slotted, and rolls over
                                                       when CRM_MAX is reached.
                                                       0x0 = Reserved
 <23>    RODT_BPRCH      R/W     0x0        0x0        When set, the turn-off time for the ODT pin during a RD command is delayed an additional CK cycle.
 <22>    WODT_BPRCH      R/W     0x0        0x0        When set, the turn-off time for the ODT pin during a WR command is delayed an additional CK cycle.
 <21:20> BPRCH           R/W     0x0        0x0        "Back porch enable. When set, the turn-on time for the default DDR#_DQ*/DDR#_DQS_*_P/N
                                                       drivers is delayed an additional BPRCH CK cycles.
                                                       00 = 0 CK cycles
                                                       01 = 1 CK cycles
                                                       10 = 2 CK cycles
                                                       11 = 3 CK cycles"
 <19>    EXT_ZQCS_DIS    R/W     0x0        0x0        Disable (external) auto-ZQCS calibration. When clear, LMC runs external ZQ calibration
                                                       every LMC(0..0)_CONFIG [REF_ZQCS_INT] CK cycles.
 <18>    INT_ZQCS_DIS    R/W     0x1        0x0        Disable (internal) auto-ZQCS calibration. When clear, LMC runs internal ZQ calibration
                                                       every LMC(0..0)_CONFIG [REF_ZQCS_INT] CK cycles.
 <17>    AUTO_DCLKDIS    R/W     0x0        0x1        When 1, LMC automatically shuts off its internal clock to conserve power when there is no
                                                       traffic. Note that this has no effect on the DDR3 PHY and pads clocks.
 <16>    XOR_BANK        R/W     0x0        0x1        If (XOR_BANK == 1), then                          
                                                       bank<2:0> = address<9:7> ^ address<14:12>
                                                       else
                                                       bank<2:0> = address<9:7>
 <15:12> MAX_WRITE_BATCH R/W     0x8        0x8        Maximum number of consecutive write operations to service before forcing read operations
                                                       to interrupt.
 <11>    NXM_WRITE_EN    R/W     0x0        0x0        NXM write mode. When clear, LMC discards write operations to addresses that don't exist in
                                                       the DRAM (as defined by LMC(0..0)_NXM configuration). When set, LMC completes write
                                                       operations to addresses that don't exist in the DRAM at an aliased address.
 <10>    ELEV_PRIO_DIS   R/W     0x0        0x0        Disable elevate priority logic. When set, write operations are sent in regardless of
                                                       priority information from L2C.
 <9>     INORDER_WR      R/W     0x0        0x0        Send write operations in order (regardless of priority).
 <8>     INORDER_RD      R/W     0x0        0x0        Send read operations in order (regardless of priority).
 <7>     THROTTLE_WR     R/W     0x0        0x0        When set, use at most one IFB for write operations.
 <6>     THROTTLE_RD     R/W     0x0        0x0        When set, use at most one IFB for read operations.
 <5:4>   FPRCH2          R/W     0x0        0x1        "Front porch enable. When set, the turn-off time for the default DDR#_DQ*/DDR#_DQS_*_P/N
                                                       drivers is FPRCH2 CKs earlier.
                                                       00 = 0 CK cycles
                                                       01 = 1 CK cycles
                                                       10 = 2 CK cycles
                                                       11 = Reserved"
 <3>     POCAS           R/W     0x0        0x0        Reserved; must be zero. INTERNAL: Enable the posted CAS feature of DDR3. This bit must be
                                                       set whenever LMC(0..0)_MODEREG_PARAMS0[AL]!=0.
 <2>     DDR2T           R/W     0x0        0x1        Turn on the DDR 2T mode. 2 CK-cycle window for CMD and address. This mode helps relieve
                                                       setup time pressure on the address and command bus which nominally have a very large
                                                       fanout. Please refer to Micron's tech note tn_47_01 titled DDR2-533 Memory Design Guide
                                                       for Two Dimm Unbuffered Systems for physical details.
 <1>     BWCNT           R/W     0x0        0x0        Bus utilization counter clear. Clears the LMC(0..0)_OPS_CNT, LMC(0..0)_IFB_CNT, and
                                                       LMC(0..0)_DCLK_CNT registers. To clear the CSRs, software should first write this field to
                                                       a one, then write this field to a zero.
 <0>     RDIMM_ENA       R/W     0x0        NS         Registered DIMM Enable. When set allows the use of JEDEC Registered DIMMs which require
                                                       address and control bits to be registered in the controller.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_TIMING_PARAMS0 = LMC Timing Parameters Register 0
 * 
 *  
 * 
$LMC(0..0)_TIMING_PARAMS0   Address=(0x1180088000198|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS      RAZ     NS         NS         Reserved.                                         
 <47:44> TCKSRE  R/W     0x5        0x5        Indicates TCKSRE constraints. Set this field as follows:
                                               RNDUP[TCKSRE(ns) / TCYC(ns)] - 1
                                               where TCKSRE is from the JEDEC DDR3 spec, and TCYC(ns) is the DDR clock frequency (not
                                               data rate).
                                               TYP = max(5nCK, 10 ns).
 <43:39> TRP     R/W     0x6        0x6        Indicates TRP constraints. Set TRP as follows:    
                                               RNDUP[TRP(ns) / TCYC(ns)] - 1
                                               where TRP and TRTP are from the JEDEC DDR3 spec, and TCYC(ns) is the DDR clock frequency
                                               (not data rate).
                                               TYP TRP = 10-15ns.
                                               TYP TRTP = max(4nCK, 7.5 ns).
 <38:35> TZQINIT R/W     0x2        0x2        Indicates TZQINIT constraints. Set this field as follows:
                                               RNDUP[TZQINIT(ns) / (256 * TCYC(ns))]
                                               where TZQINIT is from the JEDEC DDR3 spec, and TCYC(ns) is the DDR clock frequency (not
                                               data rate).
                                               TYP = 2 (equivalent to 512).
 <34:31> TDLLK   R/W     0x2        0x2        Indicates TDLLK constraints. Set this field as follows:
                                               RNDUP[TDLLK(ns) / (256 * TCYC(ns))]
                                               where TDLLK is from the JEDEC DDR3 spec, and TCYC(ns) is the DDR clock frequency (not data
                                               rate).
                                               TYP = 2 (equivalent to 512).
                                               This parameter is used in self-refresh exit and assumed to be greater than TRFC.
 <30:26> TMOD    R/W     0xc        0xc        Indicates tMOD constraints. Set this field as follows:
                                               RNDUP[TMOD(ns) / TCYC(ns)] - 1
                                               where TMOD is from the JEDEC DDR3 spec, and TCYC(ns) is the DDR clock frequency (not data
                                               rate).
                                               TYP = max(12nCK, 15 ns).
 <25:22> TMRD    R/W     0x4        0x4        Indicates TMRD constraints. Set this field as follows:
                                               RNDUP[TMRD(ns) / TCYC(ns)] - 1
                                               where TMRD is from the JEDEC DDR3 spec, and TCYC(ns) is the DDR clock frequency (not data
                                               rate).
                                               TYP = 4nCK.
 <21:16> TXPR    R/W     0x5        0x5        Indicates TXPR constraints. Set this field as follows:
                                               RNDUP[TXPR(ns) / (16 * TCYC(ns))]
                                               where TXPR is from the JEDEC DDR3 spec, and TCYC(ns) is the DDR clock frequency (not data
                                               rate).
                                               TYP = max(5nCK, TRFC+10 ns).
 <15:12> TCKE    R/W     0x3        0x3        Indicates TCKE constraints. Set this field as follows:
                                               RNDUP[TCKE(ns) / TCYC(ns)] - 1
                                               where TCKE is from the JEDEC DDR3 spec, and TCYC(ns) is the DDR clock frequency (not data
                                               rate).
                                               TYP = max(3nCK, 7.5/5.625/5.625/5 ns).
 <11:8>  TZQCS   R/W     0x4        0x4        Indicates TZQCS constraints. Set this field as follows:
                                               RNDUP[TZQCS(ns) / (16 * TCYC(ns))]
                                               where TZQCS is from the JEDEC DDR3 spec, and TCYC(ns) is the DDR clock frequency (not data
                                               rate).
                                               TYP = 4 (equivalent to 64).
 <7:0>   NS      RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_TIMING_PARAMS1 = LMC Timing Parameters Register 1
 * 
 *  
 * 
$LMC(0..0)_TIMING_PARAMS1   Address=(0x11800880001A0|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:49> NS       RAZ     NS         NS         Reserved.                                         
 <48:44> TXPDLL   R/W     0x0        0xa        Indicates TXPDLL constraints. Set this field as follows:
                                                RNDUP[TXPDLL(ns) / TCYC(ns)] - 1
                                                where TXPDLL is from the JEDEC DDR3 spec, and TCYC(ns) is the DDR clock frequency (not
                                                data rate).
                                                TYP=max(10nCK, 24 ns)
 <43:39> TFAW     R/W     0x0        0x9        Indicates TFAW constraints. Set this field as follows:
                                                RNDUP[TFAW(ns) / (4 * TCYC(ns))]
                                                where TFAW is from the JEDEC DDR3 spec, and TCYC(ns) is the DDR clock frequency (not data
                                                rate).
                                                TYP = 30-40 ns
 <38:35> TWLDQSEN R/W     0x7        0x7        Indicates TWLDQSEN constraints. Set this field as follows:
                                                RNDUP[TWLDQSEN(ns) / (4 * TCYC(ns))]
                                                where TWLDQSEN is from the JEDEC DDR3 spec, and TCYC(ns) is the DDR clock frequency (not
                                                data rate).
                                                TYP = max(25nCK)
 <34:31> TWLMRD   R/W     0xa        0xa        Indicates TWLMRD constraints. Set this field as follows:
                                                RNDUP[TWLMRD(ns) / (4 * TCYC(ns))]
                                                where TWLMRD is from the JEDEC DDR3 spec, and TCYC(ns) is the DDR clock frequency (not
                                                data rate).
                                                TYP = max(40nCK)
 <30:28> TXP      R/W     0x3        0x3        Indicates TXP constraints. Set this field as follows:
                                                RNDUP[TXP(ns) / TCYC(ns)] - 1
                                                where TXP is from the JEDEC DDR3 spec, and TCYC(ns) is the DDR clock frequency (not data
                                                rate).
                                                TYP=max(3nCK, 7.5 ns)
 <27:25> TRRD     R/W     0x2        0x2        Indicates TRRD constraints. Set this field as follows:
                                                RNDUP[TRRD(ns) / TCYC(ns)] - 1,
                                                where TRRD is from the JEDEC DDR3 spec, and TCYC(ns) is the DDR clock frequency (not data
                                                rate).
                                                TYP = max(4nCK, 10 ns)
                                                000: reserved
                                                001: 2 TCYC
                                                ...
                                                110: 7 TCYC
                                                111: 8 TCYC
                                                For DDR4, this is the TRRD_S parameter.
 <24:18> TRFC     R/W     0x6        0x7        Indicates TRFC constraints. Set this field as follows:
                                                RNDUP[TRFC(ns) / (8 * TCYC(ns))]
                                                where TRFC is from the JEDEC DDR3 spec, and TCYC(ns) is the DDR clock frequency (not data
                                                rate).
                                                TYP = 90-350 ns
                                                0000000: reserved
                                                0000001: 8 TCYC
                                                0000010: 16 TCYC
                                                0000011: 24 TCYC
                                                0000100: 32 TCYC
                                                ...
                                                1111110: 1008 TCYC
                                                1111111: 1016 TCYC
 <17:14> TWTR     R/W     0x2        0x3        Indicates TWTR constraints. Set this field as follows:
                                                RNDUP[TWTR(ns) / TCYC(ns)] - 1
                                                where TWTR is from the JEDEC DDR3 spec, and TCYC(ns) is the DDR clock frequency (not data
                                                rate).
                                                TYP = max(4nCK, 7.5 ns)
                                                For DDR4, this CSR field represents TWTR_S.
                                                0000: reserved
                                                0001: 2
                                                ...
                                                0111: 8
                                                1000-1111: reserved
 <13:10> TRCD     R/W     0x4        0x4        Indicates TRCD constraints. Set this field as follows:
                                                RNDUP[TRCD(ns) / TCYC(ns)]
                                                where TRCD is from the JEDEC DDR3 spec, and TCYC(ns) is the DDR clock frequency (not data
                                                rate).
                                                TYP = 10-15 ns
                                                0000: reserved
                                                0001: 2 (2 is the smallest value allowed)
                                                0002: 2
                                                ...
                                                1110: 14
                                                1010-1111: reserved
                                                In 2T mode, make this register TRCD - 1, not going below 2.
 <9:4>   TRAS     R/W     0xc        0xc        Indicates TRAS constraints. Set TRAS (CSR field) as follows:
                                                RNDUP[TRAS(ns)/TCYC(ns)] - 1,
                                                where TRAS is from the DDR3 spec, and TCYC(ns) is the DDR clock frequency (not data rate).
                                                TYP = 35ns - 9 * TREFI
                                                000000: reserved
                                                000001: 2 TCYC
                                                000010: 3 TCYC
                                                ...
                                                111111: 64 TCYC
 <3:0>   TMPRR    R/W     0x1        0x1        Indicates TMPRR constraints. Set this field as follows:
                                                RNDUP[TMPRR(ns) / TCYC(ns)] - 1
                                                where TMPRR is from the JEDEC DDR3 spec, and TCYC(ns) is the DDR clock frequency (not data
                                                rate).
                                                TYP = 1 nCK
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_MODEREG_PARAMS0 = LMC Mode Register Parameters 0 Register
 * 
 *  These parameters are written into the DDR3 MR0, MR1, MR2 and MR3 registers.
 * 
$LMC(0..0)_MODEREG_PARAMS0   Address=(0x11800880001A8|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:25> NS     RAZ     NS         NS         Reserved.                                         
 <24>    PPD    R/W     0x0        0x0        DLL control for precharge powerdown.              
                                              0: Slow exit (DLL off)
                                              1: Fast exit (DLL on)
                                              LMC writes this value to MR0[PPD] in the selected DDR3 parts during power-up/init and, if
                                              LMC(0..0)_CONFIG[SREF_WITH_DLL] is set, self-refresh exit instruction sequences. See
                                              LMC(0..0)_SEQ_CTL[SEQ_SEL, INIT_START] and LMC(0..0)_CONFIG[RANKMASK]. This value must
                                              equal the MR0[PPD] value in all the DDR3 parts attached to all ranks during normal
                                              operation.
 <23:21> WRP    R/W     0x0        0x0        Write recovery for auto precharge. Should be programmed to be equal to or greater than
                                              RNDUP[TWR(ns) / Tcyc(ns)].
                                              000: 5. 100: 8.
                                              001: 5. 101: 10.
                                              010: 6. 110: 12.
                                              011: 7. 111: 14.
                                              LMC writes this value to MR0[WR] in the selected DDR3 parts during power-up/init and, if
                                              LMC(0..0)_CONFIG[SREF_WITH_DLL] is set, self-refresh exit instruction sequences. See
                                              LMC(0..0)_SEQ_CTL[SEQ_SEL, INIT_START] and LMC(0..0)_CONFIG[RANKMASK]. This value must
                                              equal
                                              the MR0[WR] value in all the DDR3 parts attached to all ranks during normal operation.
 <20>    DLLR   R/W     0x0        0x0        DLL reset. LMC writes this value to MR0[DLL] in the selected DDR3 parts during power-
                                              up/init and, if LMC(0..0)_CONFIG [SREF_WITH_DLL] is set, self-refresh exit instruction
                                              sequences. See LMC(0..0)_SEQ_CTL[SEQ_SEL, INIT_START] and LMC(0..0)_CONFIG[RANKMASK].
                                              The MR0[DLL] value must be 0 in all the DDR3 parts attached to all ranks during normal
                                              operation.
 <19>    TM     R/W     0x0        0x0        Test mode. LMC writes this value to MR0[TM] in the selected DDR3 parts during power-
                                              up/init and, if LMC(0..0)_CONFIG [SREF_WITH_DLL] is set, self-refresh exit instruction
                                              sequences. See LMC(0..0)_SEQ_CTL[SEQ_SEL, INIT_START] and LMC(0..0)_CONFIG[RANKMASK].
                                              The MR0[TM] value must be 0 in all the DDR3 parts attached to all ranks during normal
                                              operation.
 <18>    RBT    RO      0x1        0x1        Read burst. Type 1 = interleaved (fixed). LMC writes this value to MR0[RBT] in the
                                              selected DDR3 parts during power-up/init and, if LMC(0..0)_CONFIG[SREF_WITH_DLL] is set,
                                              self-refresh exit instruction sequences. See LMC(0..0)_SEQ_CTL[SEQ_SEL, INIT_START] and
                                              LMC(0..0)_CONFIG[RANKMASK]. The MR0[RBT] value must be 1 in all the DDR3 parts attached
                                              to all ranks during normal operation.
 <17:14> CL     R/W     0x2        0x2        CAS latency.                                      
                                              In DDR3 mode:
                                              0010: 5. 0001: 12.
                                              0100: 6. 0011: 13.
                                              0110: 7. 0101: 14.
                                              1000: 8. 0111: 15.
                                              1010: 9. 1001: 16.
                                              1100: 10. 0000, 1011, 1101, 1111: Reserved.
                                              1110: 11.
                                              In DDR4 mode:
                                              0000:  9. 0001: 10.
                                              0010: 11. 0011: 12.
                                              0100: 13. 0101: 14.
                                              0110: 15. 0111: 16.
                                              1000: 18. 1001: 20.
                                              1010: 22. 1011: 24.
                                              1100, 1101, 1110, 111: Reserved.
                                              LMC writes this value to MR0[CAS Latency / CL] in the selected DDR3 parts during power-
                                              up/init and, if LMC(0..0)_CONFIG [SREF_WITH_DLL] is set, self-refresh exit instruction
                                              sequences. See LMC(0..0)_SEQ_CTL[SEQ_SEL, INIT_START] and LMC(0..0)_CONFIG[RANKMASK].
                                              This value must equal the MR0[CAS Latency / CL] value in all the DDR3/4 parts attached
                                              to all ranks during normal operation.
                                              tCL must be programmed to greater than or equal to tCWL for proper LMC operation.
 <13:12> BL     R/W     0x1        0x1        Burst length.                                     
                                              0: 8 (fixed).
                                              1: 4 or 8 (on-the-fly).
                                              LMC writes this value to MR0[BL] in the selected DDR3 parts during power-up/init and, if
                                              LMC(0..0)_CONFIG[SREF_WITH_DLL] is set, self-refresh exit instruction sequences. See
                                              LMC(0..0)_SEQ_CTL[SEQ_SEL, INIT_START] and LMC(0..0)_CONFIG[RANKMASK]. The MR0[BL] value
                                              must be 1 in all the
                                              DDR3/4 parts attached to all ranks during normal operation.
 <11>    QOFF   R/W     0x0        0x0        Qoff enable. 0: enable; 1: disable.               
                                              LMC writes this value to MR1[Qoff] in the DDR3 parts in the selected ranks during power-
                                              up/init, write-leveling, and if LMC(0..0)_CONFIG[SREF_WITH_DLL] is set, self-refresh entry
                                              and exit instruction sequences. See LMC(0..0)_SEQ_CTL[SEQ_SEL, INIT_START],
                                              LMC(0..0)_CONFIG[RANKMASK, INIT_STATUS], and LMC(0..0)_RESET_CTL[DDR3PWARM, DDR3PSOFT].
                                              The MR1[Qoff] value must be 0 in all the DDR3 parts attached to all ranks during normal
                                              operation.
 <10>    TDQS   R/W     0x0        0x0        TDQS enable. 0: disable. LMC writes this value to MR1[TDQS] in the DDR3 parts in the
                                              selected ranks during power-up/init, write-leveling, and, if
                                              LMC(0..0)_CONFIG[SREF_WITH_DLL] is set, self-refresh entry and exit instruction sequences.
                                              See LMC(0..0)_SEQ_CTL[SEQ_SEL, INIT_START], LMC(0..0)_CONFIG[RANKMASK, INIT_STATUS], and
                                              LMC(0..0)_RESET_CTL[DDR3PWARM,DDR3PSOFT].
 <9>     WLEV   RO      0x0        0x0        Write leveling enable. 0: disable. LMC writes MR1[Level]=0 in the DDR3 parts in the
                                              selected ranks during power-up/init, write-leveling, and, if
                                              LMC(0..0)_CONFIG[SREF_WITH_DLL] is set, self-refresh entry and exit sequences. (Write-
                                              leveling can only be initiated via the write-leveling instruction sequence.) See
                                              LMC(0..0)_SEQ_CTL[SEQ_SEL, INIT_START], LMC(0..0)_CONFIG[RANKMASK, INIT_STATUS] and
                                              LMC(0..0)_RESET_CTL[DDR3PWARM, DDR3PSOFT].
 <8:7>   AL     R/W     0x0        0x0        Reserved; must be zero.                           
                                              INTERNAL: Additive latency:
                                              0x0: 0.
                                              0x1: CL-1.
                                              0x2: CL - 2.
                                              0x3: Reserved.
                                              LMC writes this value to MR1[AL] in the selected DDR3 parts during power-up/init, write-
                                              leveling, and, if LMC(0..0)_CONFIG[SREF_WITH_DLL] is set, self-refresh entry and exit
                                              instruction sequences. See LMC(0..0)_SEQ_CTL[SEQ_SEL, INIT_START] and
                                              LMC(0..0)_CONFIG[RANKMASK]
                                              and LMC(0..0)_RESET_CTL [DDR3PWARM,DDR3PSOFT]. This value must equal the MR1[AL] value in
                                              all
                                              the DDR3 parts attached to all ranks during normal operation. See also
                                              LMC(0..0)_CONTROL[POCAS].
 <6>     DLL    R/W     0x0        0x0        DLL Enable. 0: enable; 1: disable. LMC writes this value to MR1[DLL] in the selected DDR3
                                              parts during power-up/init, write-leveling, and, if LMC(0..0)_CONFIG[SREF_WITH_DLL] is
                                              set, self-refresh entry and exit instruction sequences. See LMC(0..0)_SEQ_CTL[SEQ_SEL,
                                              INIT_START],
                                              LMC(0..0)_CONFIG[RANKMASK], and LMC(0..0)_RESET_CTL [DDR3PWARM,DDR3PSOFT]. This value
                                              must equal the MR1[DLL] value in all the DDR3 parts attached to all ranks during normal
                                              operation. In DLL-off mode, CL/CWL must be programmed equal to 6/6, respectively, as per
                                              the JEDEC DDR3 specifications.
 <5>     MPR    R/W     0x0        0x0        MPR. LMC writes this value to MR3[MPR] in the selected DDR3 parts during power-up/init,
                                              read-leveling, and, if LMC(0..0)_CONFIG [SREF_WITH_DLL] is set, self-refresh exit
                                              instruction sequences. (LMC also writes MR3[MPR] = 1 at the beginning of the read-leveling
                                              instruction sequence. Read-leveling should only be initiated via the read-leveling
                                              instruction sequence.) See LMC(0..0)_SEQ_CTL[SEQ_SEL, INIT_START] and
                                              LMC(0..0)_CONFIG[RANKMASK]. The MR3[MPR] value must be 0 in all the DDR3 parts attached
                                              to all ranks during normal operation.
 <4:3>   MPRLOC R/W     0x0        0x0        MPR location. LMC writes this value to MR3[MPRLoc] in the selected DDR3 parts during
                                              power-up/init, read-leveling, and, if LMC(0..0)_CONFIG[SREF_WITH_DLL] is set, self-refresh
                                              exit instruction sequences. (LMC also writes MR3[MPRLoc] = 0 at the beginning of the read-
                                              leveling instruction sequence.) See LMC(0..0)_SEQ_CTL[SEQ_SEL, INIT_START] and
                                              LMC(0..0)_CONFIG[RANKMASK]. The MR3[MPRLoc] value must be 0 in all the DDR3 parts attached
                                              to all ranks during normal operation.
 <2:0>   CWL    R/W     0x0        0x0        CAS write latency.                                
                                              In DDR3 mode:
                                              000: 5. 100: 9.
                                              001: 6. 101: 10.
                                              010: 7. 110: 11.
                                              011: 8. 111: 12.
                                              In DDR4 mode:
                                              000: 9. 100: 13.
                                              001: 10. 101: 16.
                                              010: 11. 110: 18.
                                              011: 12. 111: Reserved.
                                              LMC writes this value to MR2[CWL] in the selected DDR3 parts during power-up/init, write-
                                              leveling, and, if LMC*_CONFIG[SREF_WITH_DLL] is set, self-refresh entry and exit
                                              instruction sequences. See LMC(0..0)_SEQ_CTL[SEQ_SEL, INIT_START] and
                                              LMC(0..0)_CONFIG[RANKMASK]
                                              and LMC(0..0)_RESET_CTL [DDR3PWARM, DDR3PSOFT]. This value must equal the MR2[CWL] value
                                              in all the DDR3 parts attached to all ranks during normal operation.
                                              tCWL must be programmed to less than or equal to tCL for proper LMC operation.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_WODT_MASK = LMC Write OnDieTermination Mask Register
 * 
 *  System designers may desire to terminate DQ/DQS lines for higher-frequency DDR operations,
 *  especially on a multirank system. DDR3 DQ/DQS I/Os have built-in termination resistors that
 *  can be turned on or off by the controller, after meeting TAOND and TAOF timing requirements.
 *  Each rank has its own ODT pin that fans out to all of the memory parts in that DIMM. System
 *  designers may prefer different combinations of ODT ONs for write operations into different
 *  ranks. CN78XX supports full programmability by way of the mask register below. Each rank
 *  position has its own 4-bit programmable field. When the controller does a write to that rank,
 *  it sets the 4 ODT pins to the mask pins below. For example, when doing a write into Rank0, a
 *  system designer may desire to terminate the lines with the resistor on DIMM0/Rank1. The mask
 *  WODT_D0_R0 would then be {0010}.
 *  CN78XX drives the appropriate mask values on the ODT pins by default. If this feature is not
 *  required, write 0x0 in this register. When a given RANK is selected, the WODT mask for that
 *  RANK is used. The resulting WODT mask is driven to the DIMMs in the following manner:
 * 
$LMC(0..0)_WODT_MASK   Address=(0x11800880001B0|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:28> NS         RAZ     NS         NS         Reserved.                                         
 <27:24> WODT_D1_R1 R/W     0xf        NS         Reserved.                                         
 <23:20> NS         RAZ     NS         NS         Reserved.                                         
 <19:16> WODT_D1_R0 R/W     0xf        NS         Reserved.                                         
 <15:12> NS         RAZ     NS         NS         Reserved.                                         
 <11:8>  WODT_D0_R1 R/W     0xf        NS         Write ODT mask DIMM0, RANK1/DIMM0 in SingleRanked. If RANK_ENA=0, WODT_D0_R1<3:0> must be
                                                  zero.
 <7:4>   NS         RAZ     NS         NS         Reserved.                                         
 <3:0>   WODT_D0_R0 R/W     0xf        NS         Write ODT mask DIMM0, RANK0. If RANK_ENA=0, WODT_D0_R0<3,1> must be zero.

Notes:
When a given RANK is selected, the WODT mask for that RANK is used.  The resulting WODT mask
is
driven to the DIMMs in the following manner:
RANK_ENA=1                    RANK_ENA=0
Mask[3] -> DIMM1_ODT_1                     MBZ
Mask[2] -> DIMM1_ODT_0                     DIMM1_ODT_0
Mask[1] -> DIMM0_ODT_1                     MBZ
Mask[0] -> DIMM0_ODT_0                     DIMM0_ODT_0
LMC always writes entire cache blocks and always writes them via two consecutive
write CAS operations to the same rank+bank+row spaced exactly 4 CK's apart.
When a WODT mask bit is set, LMC asserts the OCTEON ODT output
pin(s) starting the same CK as the first write CAS operation. Then, OCTEON
normally continues to assert the ODT output pin(s) for 9+LMC*_CONTROL[WODT_BPRCH] more CK's
for a total of 10+LMC*_CONTROL[WODT_BPRCH] CK's for the entire cache block write -
through the second write CAS operation of the cache block,
satisfying the 6 CK DDR3 ODTH8 requirements.
But it is possible for OCTEON to issue two cache block writes separated by as few as
WtW = 8 or 9 (10 if LMC*_CONTROL[WODT_BPRCH]=1) CK's. In that case, OCTEON asserts the ODT
output pin(s)
for the WODT mask of the first cache block write for WtW CK's, then asserts
the ODT output pin(s) for the WODT mask of the second cache block write for
10+LMC*_CONTROL[WODT_BPRCH] CK's
(or less if a third cache block write follows within 8 or 9 (or 10) CK's of this second cache
block write).
Note that it may be necessary to force LMC to space back-to-back cache block writes
to different ranks apart by at least 10+LMC*_CONTROL[WODT_BPRCH] CK's to prevent DDR3 ODTH8
violations.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_COMP_CTL2 = LMC Compensation Control Register
 * 
 *  
 * 
$LMC(0..0)_COMP_CTL2   Address=(0x11800880001B8|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field          Field   Reset      Typical    Field                                             
 Pos     Name           Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:51> NS             RAZ     NS         NS         Reserved.                                         
 <50>    RCLK_CHAR_MODE R/W     0x0        0x0        Reserved. INTERNAL: Select RCLK characterization mode.
 <49:45> DDR__PTUNE     RO/H    NS         NS         DDR PCTL from compensation circuit. The encoded value provides debug information for the
                                                      compensation impedance on P-pullup.
 <44:40> DDR__NTUNE     RO/H    NS         NS         DDR NCTL from compensation circuit. The encoded value provides debug information for the
                                                      compensation impedance on N-pulldown.
 <39:36> PTUNE_OFFSET   R/W     0x0        NS         Ptune offset value.                               
 <35:32> NTUNE_OFFSET   R/W     0x0        NS         Ntune offset value.                               
 <31>    M180           R/W     0x0        NS         Reserved; must be zero. INTERNAL: Cap impedance at 180 ohm, instead of 240 ohm.
 <30>    BYP            R/W     0x0        NS         Bypass mode. When set, PTUNE,NTUNE are the compensation setting. When clear,
                                                      DDR_PTUNE,DDR_NTUNE are the compensation setting.
 <29:25> PTUNE          R/W     0x0        NS         PCTL impedance control in bypass mode.            
 <24:20> NTUNE          R/W     0x0        NS         NCTL impedance control in bypass mode.            
 <19:16> RODT_CTL       R/W     0x0        NS         RODT NCTL impedance control bits. This field controls ODT values during a memory read.
                                                      0x0 = No ODT. 0x3 = 40 ohm.
                                                      0x1 = 20 ohm. 0x4 = 60 ohm.
                                                      0x2 = 30 ohm. 0x5 = 120 ohm.
                                                      0x6-0xF = Reserved
                                                      In DDR4 mode:
                                                      0x0 = No ODT. 0x4 = 120 ohm.
                                                      0x1 = 40 ohm. 0x5 = 240 ohm.
                                                      0x2 = 60 ohm. 0x6 = 34 ohm.
                                                      0x3 = 80 ohm. 0x7 = 48 ohm.
                                                      0x8-0xF = Reserved
 <15:12> CONTROL_CTL    R/W     0x4        NS         Drive strength control for ODT, etc. drivers.     
                                                      In DDR3 mode:
                                                      0x1 = 24 ohm. 0x5 = 40 ohm.
                                                      0x2 = 26.67 ohm. 0x6 = 48 ohm.
                                                      0x3 = 30 ohm. 0x7 = 60 ohm.
                                                      0x4 = 34.3 ohm. 0x0, 0x8-0xF = Reserved.
                                                      In DDR4 mode:
                                                      0x0 = Reserved. 0x4 = 34 ohm.
                                                      0x1 = Reserved. 0x5 = 40 ohm.
                                                      0x2 = 26 ohm. 0x6 = 48 ohm.
                                                      0x3 = 30 ohm. 0x7 = 68 ohm.
                                                      0x8-0xF = Reserved.
 <11:8>  CMD_CTL        R/W     0x4        NS         Drive strength control for CMD/A/RESET_L drivers. 
                                                      In DDR3 mode:
                                                      0x1 = 24 ohm. 0x5 = 40 ohm.
                                                      0x2 = 26.67 ohm. 0x6 = 48 ohm.
                                                      0x3 = 30 ohm. 0x7 = 60 ohm.
                                                      0x4 = 34.3 ohm. 0x0,0x8-0xF = Reserved.
                                                      In DDR4 mode:
                                                      0x0 = Reserved. 0x4 = 34 ohm.
                                                      0x1 = Reserved. 0x5 = 40 ohm.
                                                      0x2 = 26 ohm. 0x6 = 48 ohm.
                                                      0x3 = 30 ohm. 0x7 = 68 ohm.
                                                      0x8-0xF = Reserved.
 <7:4>   CK_CTL         R/W     0x4        NS         "Drive strength control for DDR_CK_*_P/DDR_DIMM*_CS*_L/DDR_DIMM*_ODT_*/DDR#_DIMM*_CKE*
                                                      drivers.
                                                      In DDR3 mode:
                                                      0x1 = 24 ohm. 0x5 = 40 ohm.
                                                      0x2 = 26.67 ohm. 0x6 = 48 ohm.
                                                      0x3 = 30 ohm. 0x7 = 60 ohm.
                                                      0x4 = 34.3 ohm. 0x0,0x8-0xF = Reserved.
                                                      In DDR4 mode:
                                                      0x0 = Reserved. 0x4 = 34 ohm.
                                                      0x1 = Reserved. 0x5 = 40 ohm.
                                                      0x2 = 26 ohm. 0x6 = 48 ohm.
                                                      0x3 = 30 ohm. 0x7 = 68 ohm.
                                                      0x8-0xF = Reserved."
 <3:0>   DQX_CTL        R/W     0x4        NS         Drive strength control for DDR_DQ*/DDR_DQS_*_P/N drivers.
                                                      0x1 = 24 ohm. 0x5 = 40 ohm.
                                                      0x2 = 26.67 ohm. 0x6 = 48 ohm.
                                                      0x3 = 30 ohm. 0x7 = 60 ohm.
                                                      0x4 = 34.3 ohm. 0x0,0x8-0xF = Reserved.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_DLL_CTL2 = LMC DLL Control/System-Memory-Clock-Reset Register
 * 
 *  See LMC Initialization Sequence for the initialization sequence.
 * 
$LMC(0..0)_DLL_CTL2   Address=(0x11800880001C8|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field        Field   Reset      Typical    Field                                             
 Pos     Name         Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:17> NS           RAZ     NS         NS         Reserved.                                         
 <16>    INTF_EN      R/W     0x0        NS         Interface enable.                                 
 <15>    DLL_BRINGUP  R/W     0x0        0x0        DLL bring up.                                     
 <14>    DRESET       R/W     0x1        0x0        System-memory-clock domain reset. The reset signal that is used by the system-memory-clock
                                                    domain is
                                                    (DRESET -OR- core-clock reset).
 <13>    QUAD_DLL_ENA R/W     0x0        0x0        DLL enable.                                       
 <12:9>  BYP_SEL      R/W     0x0        0x0        Reserved; must be zero. INTERNAL: Bypass select.  
                                                    0000 = no byte.
                                                    0001 = byte 0.
                                                    ...
                                                    1001 = byte 8.
                                                    1010 = all bytes.
                                                    1011-1111 = Reserved.
 <8:0>   BYP_SETTING  R/W     0x0        0x0        Reserved; must be zero. INTERNAL: Bypass setting. 
                                                    DDR3-1600: 00100010.
                                                    DDR3-1333: 00110010.
                                                    DDR3-1066: 01001011.
                                                    DDR3-800  : 01110101.
                                                    DDR3-667  : 10010110.
                                                    DDR3-600  : 10101100.

Notes:
DLL Bringup sequence:
1. If not done already, set LMC*_DLL_CTL2 = 0, except when LMC*_DLL_CTL2[DRESET] = 1.
2. Write 1 to LMC*_DLL_CTL2[DLL_BRINGUP]
3. Wait for 10 CK cycles, then write 1 to LMC*_DLL_CTL2[QUAD_DLL_ENA]. It may not be feasible
to count 10 CK cycles, but the idea is to configure the delay line into DLL mode by asserting
DLL_BRING_UP earlier than [QUAD_DLL_ENA], even if it is one cycle early.
LMC*_DLL_CTL2[QUAD_DLL_ENA] must not change after this point without restarting the LMC and/or
DRESET initialization sequence.
4. Read L2D_BST0 and wait for the result. (L2D_BST0 is subject to change depending on how it
called in o63. It is still ok to go without step 4, since step 5 has enough time)
5. Wait 10 us.
6. Write 0 to LMC*_DLL_CTL2[DLL_BRINGUP]. LMC*_DLL_CTL2[DLL_BRINGUP] must not change after
this point without restarting the LMC and/or DRESET initialization sequence.
7. Read L2D_BST0 and wait for the result. (same as step 4, but the idea here is the wait some
time before going to step 8, even it is one cycle is fine)
8. Write 0 to LMC*_DLL_CTL2[DRESET]. LMC*_DLL_CTL2[DRESET] must not change after this point
without restarting the LMC and/or DRESET initialization sequence.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_IFB_CNT = LMC IFB Performance Counter Register
 * 
 *  
 * 
$LMC(0..0)_IFB_CNT   Address=(0x11800880001D0|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  IFBCNT RO/H    0x0        NS         Performance counter. 64-bit counter that increments every CK cycle that there is something
                                              in the in-flight buffer.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_OPS_CNT = LMC OPS Performance Counter Register
 * 
 *  
 * 
$LMC(0..0)_OPS_CNT   Address=(0x11800880001D8|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  OPSCNT RO/H    0x0        NS         Performance counter. A 64-bit counter that increments when the DDR3 data bus is being
                                              used.
                                              DDR bus utilization = OPSCNT / LMC(0..0)_DCLK_CNT.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_DCLK_CNT = LMC System-Memory-Clock Counter Register
 * 
 *  
 * 
$LMC(0..0)_DCLK_CNT   Address=(0x11800880001E0|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  DCLKCNT RO/H    0x0        NS         Performance counter. A 64-bit counter that increments every CK cycle.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_INT_EN = LMC Interrupt Enable Register
 * 
 *  
 * 
$LMC(0..0)_INT_EN   Address=(0x11800880001E8|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field               Field   Reset      Typical    Field                                             
 Pos     Name                Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  NS                  RAZ     NS         NS         Reserved.                                         
 <5>     DDR_ERROR_ALERT_ENA R/W     0x0        NS         Reserved.                                         
 <4>     DLCRAM_DED_ENA      R/W     0x0        0x1        Reserved.                                         
 <3>     DLCRAM_SEC_ENA      R/W     0x0        0x1        Reserved.                                         
 <2>     INTR_DED_ENA        R/W     0x0        0x1        ECC double error detect (DED) interrupt enable bit. When set, the memory controller raises
                                                           a processor interrupt on detecting an uncorrectable double-bit ECC error.
 <1>     INTR_SEC_ENA        R/W     0x0        0x1        ECC single error correct (SEC) interrupt enable bit. When set, the memory controller
                                                           raises a processor interrupt on detecting a correctable single-bit ECC error.
 <0>     INTR_NXM_WR_ENA     R/W     0x0        0x1        Nonwrite error interrupt enable bit. When set, the memory controller raises a processor
                                                           interrupt on detecting an nonexistent memory write.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_INT = LMC Interrupt Register
 * 
 *  
 * 
$LMC(0..0)_INT   Address=(0x11800880001F0|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field          Field   Reset      Typical    Field                                             
 Pos     Name           Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:12> NS             RAZ     NS         NS         Reserved.                                         
 <11>    DDR_ERR        R/W1C/H 0x0        0x0        Reserved.                                         
 <10>    DLCRAM_DED_ERR R/W1C/H 0x0        0x0        Reserved.                                         
 <9>     DLCRAM_SEC_ERR R/W1C/H 0x0        0x0        Reserved.                                         
 <8:5>   DED_ERR        R/W1C/H 0x0        0x0        Double error detected (DED) of Rd Data.           
                                                      In 64b mode:
                                                      <5> corresponds to DQ[63:0]_c0_p0
                                                      <6> corresponds to DQ[63:0]_c0_p1
                                                      <7> corresponds to DQ[63:0]_c1_p0
                                                      <8> corresponds to DQ[63:0]_c1_p1
                                                      where _cC_pP denotes cycle C and phase P.
                                                      In 32b mode, each bit corresponds to 2 phases:
                                                      <5> corresponds to DQ[31:0]_c0_p1/0
                                                      <6> corresponds to DQ[31:0]_c1_p1/0
                                                      <7> corresponds to DQ[31:0]_c2_p1/0
                                                      <8> corresponds to DQ[31:0]_c3_p1/0
                                                      Throws LMC_INTSN_E::LMC(0..0)_INT_DED_ERR(0..3).
 <4:1>   SEC_ERR        R/W1C/H 0x0        0x0        Single error (corrected) of Rd Data.              
                                                      <1> corresponds to DQ[63:0]_c0_p0
                                                      <2> corresponds to DQ[63:0]_c0_p1
                                                      <3> corresponds to DQ[63:0]_c1_p0
                                                      <4> corresponds to DQ[63:0]_c1_p1
                                                      where _cC_pP denotes cycle C and phase P.
                                                      In 32b mode, each bit corresponds to 2 phases:
                                                      <5> corresponds to DQ[31:0]_c0_p1/0
                                                      <6> corresponds to DQ[31:0]_c1_p1/0
                                                      <7> corresponds to DQ[31:0]_c2_p1/0
                                                      <8> corresponds to DQ[31:0]_c3_p1/0
                                                      Throws LMC_INTSN_E::LMC(0..0)_INT_SEC_ERR(0..3).
 <0>     NXM_WR_ERR     R/W1C/H 0x0        0x0        Write to nonexistent memory. Throws LMC_INTSN_E::LMC(0..0)_INT_NXM_WR_ERR.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_SLOT_CTL0 = LMC Slot Control0 Register
 * 
 *  This register is an assortment of control fields needed by the memory controller. If software
 *  has not previously written to this register (since the last DRESET), hardware updates the
 *  fields in this register to the minimum allowed value when any of LMC(0..0)_RLEVEL_RANK(0..3),
 *  LMC(0..0)_WLEVEL_RANK(0..3), LMC(0..0)_CONTROL, and LMC(0..0)_MODEREG_PARAMS0 registers
 *  change. Ideally, only read this register after LMC has been initialized and
 *  LMC(0..0)_RLEVEL_RANK(0..3), LMC(0..0)_WLEVEL_RANK(0..3) have valid data.
 *  The field value is the minimum CK cycles between when the DRAM
 *  part registers CAS commands of the first and second types from different cache blocks.
 *  
 *  "*_S_INIT" fields are DDR3 timing or DDR4 short timing parameters
 *  "*_L_INIT" fields are DDR4 long timing parameters
 *  
 *  The hardware-calculated minimums are:
 *  min R2R_S_INIT = 4
 *  min R2W_S_INIT = 8 + (RL + MaxRdSkew) (WL + MinWrSkew) + LMC*_CONTROL[BPRCH]
 *  min W2R_S_INIT = 5 + LMC*_TIMING_PARAMS1[TWTR] + WL
 *  min W2W_S_INIT = 4
 *  min R2R_L_INIT = LMC*_MODEREG_PARAMS3[TCCD_L] (decoded)
 *  min R2W_L_INIT = 8 + (RL + MaxRdSkew) (WL + MinWrSkew) + LMC*_CONTROL[BPRCH]
 *  min W2R_L_INIT = 5 + LMC*_TIMING_PARAMS2[TWTR_L] + WL
 *  min W2W_L_INIT = LMC*_MODEREG_PARAMS3[TCCD_L] (decoded)
 *  where
 *  RL        = CL  + AL (LMC*_MODEREG_PARAMS0[CL] selects CL, LMC*_MODEREG_PARAMS0[AL] selects
 *  AL)
 *  WL        = CWL + AL (LMC*_MODEREG_PARAMS0[CWL] selects CWL)
 *  MaxRdSkew = max(LMC*_RLEVEL_RANKi[BYTEj]/4) + 1
 *  (max is across all ranks i (0..3) and bytes j (0..8))
 *  MinWrSkew = min(LMC*_WLEVEL_RANKi[BYTEj]/8) LMC*_CONFIG[EARLY_DQX]
 *  (min is across all ranks i (0..3) and bytes j (0..8))
 *  
 *  R2W_INIT has 1 CK cycle built in for OCTEON-internal ODT settling/channel turnaround time.
 * 
$LMC(0..0)_SLOT_CTL0   Address=(0x11800880001F8|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS         RAZ     NS         NS         Reserved.                                         
 <47:42> W2W_L_INIT R/W/H   0x5        NS         Write-to-write spacing control for back-to-back write followed by write cache block
                                                  accesses to the same rank and DIMM, and same BG for DDR4.
 <41:36> W2R_L_INIT R/W/H   0x10       NS         Write-to-read spacing control for back-to-back write followed by read cache block accesses
                                                  to the same rank and DIMM, and same BG for DDR4.
 <35:30> R2W_L_INIT R/W/H   0x9        NS         Read-to-write spacing control for back-to-back read followed by write cache block accesses
                                                  to the same rank and DIMM, and same BG for DDR4.
 <29:24> R2R_L_INIT R/W/H   0x5        NS         Read-to-read spacing control for back-to-back read followed by read cache block accesses
                                                  to the same rank and DIMM, and same BG for DDR4.
 <23:18> W2W_INIT   R/W/H   0x4        NS         Write-to-write spacing control for back-to-back write followed by write cache block
                                                  accesses to the same rank and DIMM.
 <17:12> W2R_INIT   R/W/H   0xc        NS         Write-to-read spacing control for back-to-back write followed by read cache block accesses
                                                  to the same rank and DIMM.
 <11:6>  R2W_INIT   R/W/H   0x9        NS         Read-to-write spacing control for back-to-back read followed by write cache block accesses
                                                  to the same rank and DIMM.
 <5:0>   R2R_INIT   R/W/H   0x4        NS         Read-to-read spacing control for back-to-back read followed by read cache block accesses
                                                  to the same rank and DIMM.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_SLOT_CTL1 = LMC Slot Control1 Register
 * 
 *  This register is an assortment of control fields needed by the memory controller. If software
 *  has not previously written to this register (since the last DRESET), hardware updates the
 *  fields in this register to the minimum allowed value when any of LMC(0..0)_RLEVEL_RANK(0..3),
 *  LMC(0..0)_WLEVEL_RANK(0..3), LMC(0..0)_CONTROL and LMC(0..0)_MODEREG_PARAMS0 CSRs change.
 *  Ideally, only read this register after LMC has been initialized and
 *  LMC(0..0)_RLEVEL_RANK(0..3), LMC(0..0)_WLEVEL_RANK(0..3) have valid data.
 *  The field value is the minimum CK cycles between when the DRAM
 *  part registers CAS commands of the first and second types from different cache blocks.
 *  
 *  The hardware-calculated minimums are:
 *  min R2R_XRANK_INIT = 5 + MaxRdSkew MinRdSkew + LMC*_CONTROL[RODT_BPRCH]
 *  min R2W_XRANK_INIT = 8 + (RL + MaxRdSkew) - (WL + MinWrSkew) + LMC*_CONTROL[BPRCH]
 *  min W2R_XRANK_INIT = 6 + MaxWrSkew + LMC*_CONTROL[FPRCH2]
 *  min W2W_XRANK_INIT = 7 + MaxWrSkew - MinWrSkew
 *  where
 *  RL        = CL  + AL (LMC*_MODEREG_PARAMS0[CL] selects CL, LMC*_MODEREG_PARAMS0[AL] selects
 *  AL)
 *  WL        = CWL + AL (LMC*_MODEREG_PARAMS0[CWL] selects CWL)
 *  MinRdSkew = min(LMC*_RLEVEL_RANKi[BYTEj]/4)                              (min is across all
 *  ranks i (0..3) and bytes j (0..8))
 *  MaxRdSkew = max(LMC*_RLEVEL_RANKi[BYTEj]/4) + 1                          (max is across all
 *  ranks i (0..3) and bytes j (0..8))
 *  MinWrSkew = min(LMC*_WLEVEL_RANKi[BYTEj]/8) LMC*_CONFIG[EARLY_DQX]     (min is across all
 *  ranks i (0..3) and bytes j (0..8))
 *  MaxWrSkew = max(LMC*_WLEVEL_RANKi[BYTEj]/8) LMC*_CONFIG[EARLY_DQX] + 1 (max is across all
 *  ranks i (0..3) and bytes j (0..8))
 *  R2W_XRANK_INIT has 1 extra CK cycle built in for OCTEON-internal ODT settling/channel
 *  turnaround time.
 *  W2R_XRANK_INIT has 1 extra CK cycle built in for channel turnaround time.
 * 
$LMC(0..0)_SLOT_CTL1   Address=(0x1180088000200|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field          Field   Reset      Typical    Field                                             
 Pos     Name           Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:24> NS             RAZ     NS         NS         Reserved.                                         
 <23:18> W2W_XRANK_INIT R/W/H   0x8        NS         Write-to-write spacing control for back-to-back write followed by write cache block
                                                      accesses across ranks of the same DIMM.
 <17:12> W2R_XRANK_INIT R/W/H   0x7        NS         Write-to-read spacing control for back-to-back write followed by read cache block accesses
                                                      across ranks of the same DIMM.
 <11:6>  R2W_XRANK_INIT R/W/H   0x9        NS         Read-to-write spacing control for back-to-back read followed by write cache block accesses
                                                      across ranks of the same DIMM.
 <5:0>   R2R_XRANK_INIT R/W/H   0x6        NS         Read-to-read spacing control for back-to-back read followed by read cache block accesses
                                                      across ranks of the same DIMM.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_SLOT_CTL2 = LMC Slot Control2 Register
 * 
 *  This register is an assortment of control fields needed by the memory controller. If software
 *  has not previously written to this register (since the last DRESET), hardware updates the
 *  fields in this register to the minimum allowed value when any of LMC(0..0)_RLEVEL_RANK(0..3),
 *  LMC(0..0)_WLEVEL_RANK(0..3)LMC*_WLEVEL_RANKn, LMC*_CONTROL and LMC*_MODEREG_PARAMS0 CSRs
 *  change. Ideally, only read this register after LMC has been initialized and LMC*_RLEVEL_RANKn,
 *  LMC*_WLEVEL_RANKn have valid data.
 *  
 *  The field value is the minimum CK cycles between when the DRAM
 *  part registers CAS commands of the first and second types from different cache blocks.
 *  
 *  The hardware-calculated minimums are:
 *  min R2R_XDIMM_INIT = 6 + MaxRdSkew MinRdSkew + LMC*_CONTROL[RODT_BPRCH]
 *  min R2W_XDIMM_INIT = 9 + (RL + MaxRdSkew) - (WL + MinWrSkew) + LMC*_CONTROL[BPRCH]
 *  min W2R_XDIMM_INIT = 6 + MaxWrSkew + LMC*_CONTROL[FPRCH2]
 *  min W2W_XDIMM_INIT = 8 + MaxWrSkew - MinWrSkew
 *  where
 *  RL        = CL  + AL (LMC*_MODEREG_PARAMS0[CL] selects CL, LMC*_MODEREG_PARAMS0[AL] selects
 *  AL)
 *  WL        = CWL + AL (LMC*_MODEREG_PARAMS0[CWL] selects CWL)
 *  MinRdSkew = min(LMC*_RLEVEL_RANKi[BYTEj]/4)                              (min is across all
 *  ranks i (0..3) and bytes j (0..8))
 *  MaxRdSkew = max(LMC*_RLEVEL_RANKi[BYTEj]/4) + 1                          (max is across all
 *  ranks i (0..3) and bytes j (0..8))
 *  MinWrSkew = min(LMC*_WLEVEL_RANKi[BYTEj]/8) LMC*_CONFIG[EARLY_DQX]     (min is across all
 *  ranks i (0..3) and bytes j (0..8))
 *  MaxWrSkew = max(LMC*_WLEVEL_RANKi[BYTEj]/8) LMC*_CONFIG[EARLY_DQX] + 1 (max is across all
 *  ranks i (0..3) and bytes j (0..8))
 *  R2W_XDIMM_INIT has 2 extra CK cycles built in for OCTEON-internal ODT settling/channel
 *  turnaround time.
 *  R2R_XDIMM_INIT, W2R_XRANK_INIT, W2W_XDIMM_INIT have 1 extra CK cycle built in for channel
 *  turnaround time.
 * 
$LMC(0..0)_SLOT_CTL2   Address=(0x1180088000208|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field          Field   Reset      Typical    Field                                             
 Pos     Name           Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:24> NS             RAZ     NS         NS         Reserved.                                         
 <23:18> W2W_XDIMM_INIT R/W/H   0x9        NS         Write-to-write spacing control for back-to-back write followed by write cache block
                                                      accesses across DIMMs.
 <17:12> W2R_XDIMM_INIT R/W/H   0x7        NS         Write-to-read spacing control for back-to-back write followed by read cache block accesses
                                                      across DIMMs.
 <11:6>  R2W_XDIMM_INIT R/W/H   0xa        NS         Read-to-write spacing control for back-to-back read followed by write cache block accesses
                                                      across DIMMs.
 <5:0>   R2R_XDIMM_INIT R/W/H   0x7        NS         Read-to-read spacing control for back-to-back read followed by read cache block accesses
                                                      across DIMMs.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_PHY_CTL = LMC PHY Control Register
 * 
 *  
 * 
$LMC(0..0)_PHY_CTL   Address=(0x1180088000210|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field                Field   Reset      Typical    Field                                             
 Pos     Name                 Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:51> NS                   RAZ     NS         NS         Reserved.                                         
 <50>    PHY_RESET            WO      0x0        0x0        Reserved. INTERNAL: Write to 1 to reset the PHY, one-shot operation, will automatically
                                                            clear to value of 0.
 <49>    DSK_DBG_RD_COMPLETE  RO/H    0x0        NS         Reserved. INTERNAL: Indicates completion of a read operation, will clear to 0 when a read
                                                            operation is started, then set to 1 when operation is complete.
 <48:39> DSK_DBG_RD_DATA      RO/H    0x0        NS         Reserved. INTERNAL: Data from a deskew read operation. Only valid when the
                                                            LMCX_PHY_CTL[DSK_DBG_RD_COMPLETE] bit is set.
 <38>    DSK_DBG_RD_START     WO/H    0x0        0x0        INTERNAL: Write 1 to start deskew data read operation, will automatically
                                                            clear to 0.  Write to 1 will also clear the complete bit.
 <37:36> DSK_DBG_CLK_SCALER   R/W     0x1        0x1        Reserved. INTERNAL: Adjust clock toggle rate for reading deskew debug information:
                                                            0 = Deskew read clock toggles every 1 DCLK
                                                            1 = Deskew read clock toggles every 2 DCLKs
                                                            2 = Deskew read clock toggles every 3 DCLKs
                                                            3 = Deskew read clock toggles every 4 DCLKs
 <35:34> DSK_DBG_OFFSET       R/W     0x0        0x0        Reserved. INTERNAL: Offset to change delay of deskew debug data return time to LMC from
                                                            DDR PHY.
 <33>    DSK_DBG_NUM_BITS_SEL R/W     0x1        0x1        Reserved. INTERNAL: Deskew debug, select number of bits per byte lane.
                                                            0 = 8 bits per byte lane, no DBI
                                                            1 = 9 bits ber byte lane, including DBI
 <32:29> DSK_DBG_BYTE_SEL     R/W     0x0        0x0        Reserved. INTERNAL: Deskew debug byte select for read operation.  Values 0-3 correspond to
                                                            byte lanes 0-3, 4 is for ECC, 5-8 are byte lanes 4-7.
 <28:25> DSK_DBG_BIT_SEL      R/W     0x0        0x0        Reserved. INTERNAL: Deskew debug bit select for dsk read operation.
 <24>    DBI_MODE_ENA         RO      0x0        NS         Enable DBI mode for PHY, must be 0.  DBI mode not supported
                                                            in 70xx.
 <23>    DDR_ERROR_N_ENA      R/W     0x0        0x0        Reserved.                                         
 <22>    REF_PIN_ON           R/W     0x0        0x0        Reserved. INTERNAL: Voltage reference pin enabled.
 <21>    DAC_ON               R/W     0x0        0x0        Reserved. INTERNAL: PHY DAC on.                   
 <20>    INT_PAD_LOOPBACK_ENA R/W     0x0        NS         DDR pad loopback enable.                          
 <19>    INT_PHY_LOOPBACK_ENA R/W     0x0        NS         Internal PHY loopback enable.                     
 <18>    PHY_DSK_RESET        R/W     0x0        NS         PHY deskew reset. When set, the deskew reset signal goes active if the vrefint/deskew
                                                            training sequence is in the idle state.
 <17>    PHY_DSK_BYP          R/W     0x0        NS         PHY deskew bypass.                                
 <16>    PHY_PWR_SAVE_DISABLE R/W     0x0        NS         DDR PHY power save disable.                       
 <15>    TEN                  R/W     0x0        NS         DDR PHY test enable pin.                          
 <14>    RX_ALWAYS_ON         R/W     0x0        NS         Reserved; must be zero. INTERNAL: Set to force read_enable to PHY active all the time.
 <13>    LV_MODE              R/W     0x0        NS         Reserved; must be zero. INTERNAL: Low Voltage Mode (1.35V.)
 <12>    CK_TUNE1             R/W     0x0        NS         Reserved; must be zero. INTERNAL: Clock tune.     
 <11:8>  CK_DLYOUT1           R/W     0x0        NS         Reserved; must be zero. INTERNAL: Clock delay out.
 <7>     CK_TUNE0             R/W     0x0        NS         Reserved; must be zero. INTERNAL: Clock tune.     
 <6:3>   CK_DLYOUT0           R/W     0x0        NS         Reserved; must be zero. INTERNAL: Clock delay out.
 <2>     LOOPBACK             R/W     0x0        NS         Reserved; must be zero. INTERNAL: Loopback enable.
 <1>     LOOPBACK_POS         R/W     0x0        NS         Reserved; must be zero. INTERNAL: Loopback pos mode.
 <0>     TS_STAGGER           R/W     0x0        NS         TS stagger mode. This mode configures output drivers with two-stage drive strength to
                                                            avoid undershoot issues on the bus when strong drivers are suddenly turned on. When this
                                                            mode is asserted, CN78XX will configure output drivers to be weak drivers (60ohm output
                                                            impedance) at the first CK cycle, and change drivers to the designated drive strengths
                                                            specified in LMC(0..0)_COMP_CTL2[CMD_CTL/CK_CTL/DQX_CTL] starting at the following cycle.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_DLL_CTL3 = LMC DLL Control/System-Memory-Clock Reset Register
 * 
 *  
 * 
$LMC(0..0)_DLL_CTL3   Address=(0x1180088000218|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field              Field   Reset      Typical    Field                                             
 Pos     Name               Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:44> NS                 RAZ     NS         NS         Reserved.                                         
 <43>    DCLK90_FWD         WO      0x0        0x0        Reserved; must be zero. INTERNAL: Generate a one cycle pulse to forward setting. This is a
                                                          oneshot and clears itself each time it is set.
 <42>    DDR_90_DLY_BYP     R/W     0x0        0x0        Reserved; must be zero. INTERNAL: Bypass DDR90_DLY in clock tree.
 <41>    DCLK90_RECAL_DIS   R/W     0x1        0x1        Disable periodic recalibration of DDR90 delay line in.
 <40>    DCLK90_BYP_SEL     R/W     0x0        0x0        Bypass setting select for DDR90 delay line.       
 <39:31> DCLK90_BYP_SETTING R/W     0x0        0x0        Bypass setting for DDR90 delay line.              
 <30>    DLL_FAST           RO/H    NS         NS         Reserved; must be zero. INTERNAL: DLL lock, 0=DLL locked.
 <29:21> DLL90_SETTING      RO/H    NS         NS         Reserved; must be zero. INTERNAL: Encoded DLL settings. Works in conjunction with
                                                          DLL90_BYTE_SEL.
 <20>    FINE_TUNE_MODE     R/W     0x0        0x1        DLL fine tune mode. 0 = disabled; 1 = enable. When enabled, calibrate internal PHY DLL
                                                          every LMC(0..0)_CONFIG[REF_ZQCS_INT] CK cycles.
 <19>    DLL_MODE           R/W     0x0        0x0        Reserved; must be zero. INTERNAL: DLL mode.       
 <18:15> DLL90_BYTE_SEL     R/W     0x1        0x1        Observe DLL settings for selected byte.           
                                                          0001: byte 0
                                                          ...
                                                          1001: byte 8
                                                          0000,1010-1111: Reserved
 <14>    OFFSET_ENA         R/W     0x0        0x0        Reserved; must be zero. INTERNAL: Offset enable. 1=enable.
 <13>    LOAD_OFFSET        WO      0x0        0x0        Reserved; must be zero. INTERNAL: Load offset. 0=disable, 1=generate a one cycle pulse to
                                                          the PHY. This field is a oneshot and clears itself each time it is set.
 <12:11> MODE_SEL           R/W     0x0        0x0        Reserved; must be zero. INTERNAL: Mode select. 0x0 = reset, 0x1 = write, 0x2 = read, 0x3 =
                                                          write and read.
 <10:7>  BYTE_SEL           R/W     0x0        0x0        Reserved; must be zero. INTERNAL: Byte select. 0x0 = no byte, 0x1 = byte 0, ..., 0x9 =
                                                          byte 8, 0xA = all bytes, 0xB-0xF = Reserved.
 <6:0>   OFFSET             R/W     0x0        0x0        Reserved; must be zero. INTERNAL: Write/read offset setting. <5:0>: offset (not
                                                          two's-complement), <5>: 0 = increment, 1 = decrement.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_CHAR_CTL = INTERNAL: LMC Characterization Control Register

 * 
 *  This register provides an assortment of various control fields needed to characterize the DDR3
 *  interface.
 * 
$LMC(0..0)_CHAR_CTL   Address=(0x1180088000220|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field                Field   Reset      Typical    Field                                             
 Pos     Name                 Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:53> NS                   RAZ     NS         NS         Reserved.                                         
 <52>    DQ_CHAR_CHECK_LOCK   RO/H    0x0        NS         Indicates if a lock has been achieved. Is set to 1 only if a lock is achieved during the
                                                            LFSR priming period after DQ_CHAR_CHECK_ENABLE is set to 1, and is forced back to 0 when
                                                            DQ_CHAR_CHECK_ENABLE is set to 0.
 <51>    DQ_CHAR_CHECK_ENABLE R/W     0x0        NS         Enable DQ pattern check. The transition from disabled to enabled clears
                                                            LMC(0..0)_CHAR_DQ_ERR_COUNT.
 <50:48> DQ_CHAR_BIT_SEL      R/W     0x0        NS         Select a bit within the byte for DQ characterization pattern check.
 <47:44> DQ_CHAR_BYTE_SEL     R/W     0x0        NS         Select a byte of data for DQ characterization pattern check.
 <43>    DR                   R/W     NS         NS         Pattern at data rate (not clock rate).            
 <42>    SKEW_ON              R/W     NS         NS         Skew adjacent bits.                               
 <41>    EN                   R/W     NS         NS         Enable characterization.                          
 <40>    SEL                  R/W     NS         NS         Pattern select: 0 = PRBS, 1 = programmable pattern.
 <39:32> PROG                 R/W     NS         NS         Programmable pattern.                             
 <31:0>  PRBS                 R/W     NS         NS         PRBS polynomial.                                  
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_CHAR_MASK0 = INTERNAL: LMC Characterization Mask Register 0

 * 
 *  This register provides an assortment of various control fields needed to characterize the DDR3
 *  interface.
 *  Attribute: -dv_fc_scratch=ALL.
 * 
$LMC(0..0)_CHAR_MASK0   Address=(0x1180088000228|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  MASK R/W     NS         NS         Mask for DQ0<63:0>.                               
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_CHAR_MASK1 = INTERNAL: LMC Characterization Mask Register 1

 * 
 *  This register provides an assortment of various control fields needed to characterize the DDR3
 *  interface.
 * 
$LMC(0..0)_CHAR_MASK1   Address=(0x1180088000230|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:0>   MASK  R/W     NS         NS         Mask for DQ0<71:64>.                              
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_CHAR_MASK2 = INTERNAL: LMC Characterization Mask Register 2

 * 
 *  This register provides an assortment of various control fields needed to characterize the DDR3
 *  interface.
 * 
$LMC(0..0)_CHAR_MASK2   Address=(0x1180088000238|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  MASK R/W     NS         NS         Mask for DQ1<63:0>.                               
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_CHAR_MASK3 = INTERNAL: LMC Characterization Mask Register 3

 * 
 *  This register provides an assortment of various control fields needed to characterize the DDR3
 *  interface.
 * 
$LMC(0..0)_CHAR_MASK3   Address=(0x1180088000240|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:0>   MASK  R/W     NS         NS         Mask for DQ1<71:64>.                              
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_DDR_PLL_CTL = LMC DDR PLL Control Register
 * 
 *  This register controls the DDR_CK frequency. For details, refer to CK Speed Programming. See
 *  LMC Initialization Sequence for the initialization sequence.
 *  DDR PLL Bringup sequence:
 *  1. Write CLKF, DDR_PS_EN, DFM_PS_EN, DIFFAMP, CPS, CPB. If test mode is going to be activated,
 *  then also write jtg__ddr_pll_tm_en1, jtg__ddr_pll_tm_en2, jtg__ddr_pll_tm_en3,
 *  jtg__ddr_pll_tm_en4, jtg__dfa_pll_tm_en1, jtg__dfa_pll_tm_en2, jtg__dfa_pll_tm_en3,
 *  jtg__dfa_pll_tm_en4, JTAG_TEST_MODE
 *  2. Wait 128 ref clock cycles (7680 rclk cycles)
 *  3. Write 1 to RESET_N
 *  4. Wait 1152 ref clocks (1152*16 rclk cycles)
 *  5. Write 0 to DDR_DIV_RESET and DFM_DIV_RESET
 *  6. Wait 10 ref clock cycles (160 rclk cycles) before bringing up the DDR interface
 *  If test mode is going to be activated, wait an additional 8191 ref clocks (8191*16 rclk+
 *  cycles) to allow PLL clock alignment.
 * 
$LMC(0..0)_DDR_PLL_CTL   Address=(0x1180088000258|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field         Field   Reset      Typical    Field                                             
 Pos     Name          Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:31> NS            RAZ     NS         NS         Reserved.                                         
 <30>    PHY_DCOK      R/W     0x0        0x1        Set to power up PHY logic after setting LMC#_DDR_PLL_CTL[DDR4_MODE].
 <29>    DDR4_MODE     R/W     0x0        NS         DDR4 mode select (0 for DDR3).                    
 <28>    PLL_FBSLIP    RO/H    0x0        NS         PLL FBSLIP indication.                            
 <27>    PLL_LOCK      RO/H    0x0        NS         PLL LOCK indication.                              
 <26>    PLL_RFSLIP    RO/H    0x0        NS         PLL RFSLIP indication.                            
 <25:24> CLKR          R/W     0x0        NS         PLL post-divider control.                         
 <23>    JTG_TEST_MODE R/W     0x0        0x0        Reserved; must be zero. INTERNAL: JTAG test mode. Clock alignment between DCLK & REFCLK as
                                                     well as FCLK & REFCLK can only be performed after the ddr_pll_divider_reset is deasserted.
                                                     SW need to wait at least 10 reference clock cycles after deasserting pll_divider_reset
                                                     before asserting LMC(0..0)_DDR_PLL_CTL[JTG_TEST_MODE]. During alignment (which can take up
                                                     to 160 microseconds) DCLK and FCLK can exhibit some high-frequency pulses. Therefore, all
                                                     bring up activities in that clock domain need to be delayed (when the chip operates in
                                                     jtg_test_mode) by about 160 microseconds to ensure that lock is achieved.
 <22>    DDR_DIV_RESET R/W     0x1        0x0        DDR postscalar divider reset.                     
 <21:18> DDR_PS_EN     R/W     0x2        NS         DDR postscalar divide ratio. Determines the LMC CK speed.
                                                     0x0 = divide LMC PLL by 1.
                                                     0x1 = divide LMC PLL by 2.
                                                     0x2 = divide LMC PLL by 3.
                                                     0x3 = divide LMC PLL by 4.
                                                     0x4 = divide LMC PLL by 5.
                                                     0x5 = divide LMC PLL by 6.
                                                     0x6 = divide LMC PLL by 7.
                                                     0x7 = divide LMC PLL by 8.
                                                     0x8 = divide LMC PLL by 10
                                                     0x9 = divide LMC PLL by 12.
                                                     0xa = RSVD
                                                     0xb = RSVD
                                                     0xc = RSVD
                                                     0xd = RSVD
                                                     0xe = RSVD
                                                     0xf = RSVD
                                                     DDR_PS_EN is not used when DDR_DIV_RESET = 1
 <17:8>  NS            RAZ     NS         NS         Reserved.                                         
 <7>     RESET_N       R/W     0x0        0x1        PLL reset                                         
 <6:0>   CLKF          R/W     0x30       NS         Multiply reference by CLKF. 32 <= CLKF <= 64. LMC PLL frequency = 50 * CLKF. min = 1.6
                                                     GHz, max = 3.2 GHz.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_MODEREG_PARAMS1 = LMC Mode Register Parameters 1 Register
 * 
 *  These parameters are written into the DDR3 MR0, MR1, MR2 and MR3 registers.
 * 
$LMC(0..0)_MODEREG_PARAMS1   Address=(0x1180088000260|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS         RAZ     NS         NS         Reserved.                                         
 <47:45> RTT_NOM_11 R/W     0x0        0x0        Reserved.  INTERNAL: RTT_NOM rank 3. LMC writes this value to MR1[RTT_NOM] in the rank 3
                                                  (i.e. DIMM1_CS1) DDR3 parts when selected during power-up/init, write-leveling, and, if
                                                  LMC(0..0)_CONFIG[SREF_WITH_DLL] is set, self-refresh entry and exit instruction sequences.
                                                  See LMC(0..0)_SEQ_CTL[SEQ_SEL, INIT_START] and LMC(0..0)_CONFIG[RANKMASK] and
                                                  LMC(0..0)_RESET_CTL[DDR3PWARM,DDR3PSOFT]. Per JEDEC DDR3 specifications, if RTT_NOM is
                                                  used during write operations, only values MR1[RTT_NOM] = 1 (RQZ/4), 2 (RQZ/2), or 3
                                                  (RQZ/6) are allowed. Otherwise, values MR1[RTT_NOM] = 4 (RQZ/12) and 5 (RQZ/8) are also
                                                  allowed.
 <44:43> DIC_11     R/W     0x0        0x0        Reserved.  INTERNAL: Output driver impedance control rank 3. LMC writes this value to
                                                  MR1[D.I.C.] in the rank 3 (i.e. DIMM1_CS1) DDR3 parts when selected during power-up/init,
                                                  write-leveling, and, if LMC(0..0)_CONFIG[SREF_WITH_DLL] is set, self-refresh entry and
                                                  exit
                                                  instruction sequences. See LMC(0..0)_CONFIG [SEQ_SEL, INIT_START, RANKMASK] and
                                                  LMC(0..0)_RESET_CTL[DDR3PWARM, DDR3PSOFT].
 <42:41> RTT_WR_11  R/W     0x0        0x0        Reserved.  INTERNAL: RTT_WR rank 3. LMC writes this value to MR2[Rtt_WR] in the rank 3
                                                  (i.e. DIMM1_CS1) DDR3 parts when selected during power-up/init, write-leveling, and, if
                                                  LMC(0..0)_CONFIG[SREF_WITH_DLL] is set, self-refresh entry and exit instruction sequences.
                                                  See LMC(0..0)_CONFIG [SEQ_SEL, INIT_START, RANKMASK] and LMC(0..0)_RESET_CTL
                                                  [DDR3PWARM,DDR3PSOFT].
 <40>    SRT_11     R/W     0x0        0x0        Reserved.  INTERNAL: Self-refresh temperature range rank 3. LMC writes this value to
                                                  MR2[SRT]
                                                  in the rank 3 (i.e. DIMM1_CS1) DDR3 parts when selected during power-up/init, write-
                                                  leveling,
                                                  and, if LMC(0..0)_CONFIG[SREF_WITH_DLL] is set, self-refresh entry and exit instruction
                                                  sequences.
                                                  See LMC(0..0)_SEQ_CTL[SEQ_SEL, INIT_START] and LMC(0..0)_CONFIG[RANKMASK] and
                                                  LMC(0..0)_RESET_CTLDDR3PWARM,DDR3PSOFT].
 <39>    ASR_11     R/W     0x0        0x0        Reserved.  INTERNAL: Auto self-refresh rank 3. LMC writes this value to MR2[ASR] in the
                                                  rank 3
                                                  (i.e. DIMM1_CS1) DDR3 parts when selected during power-up/init, write-leveling, and, if
                                                  LMC(0..0)_CONFIG[SREF_WITH_DLL] is set, self-refresh entry and exit instruction sequences.
                                                  See
                                                  LMC(0..0)_SEQ_CTL[SEQ_SEL, INIT_START] and LMC(0..0)_CONFIG[RANKMASK] and
                                                  LMC(0..0)_RESET_CTL[DDR3PWARM, DDR3PSOFT].
 <38:36> PASR_11    R/W     0x0        0x0        Reserved.  INTERNAL: Partial array self-refresh rank 3. LMC writes this value to MR2[PASR]
                                                  in the
                                                  rank 3 (i.e. DIMM1_CS1) DDR3 parts when selected during power-up/init, write-leveling,
                                                  and, if
                                                  LMC(0..0)_CONFIG[SREF_WITH_DLL] is set, self-refresh entry and exit instruction sequences.
                                                  See LMC(0..0)_CONFIG [SEQ_SEL, INIT_START, RANKMASK] and
                                                  LMC(0..0)_RESET_CTL[DDR3PWARM,DDR3PSOFT].
 <35:33> RTT_NOM_10 R/W     0x0        0x0        Reserved.  INTERNAL: RTT_NOM rank 2. LMC writes this value to MR1[Rtt_Nom] in the rank 2
                                                  (i.e. DIMM1_CS0) DDR3 parts when selected during power-up/init, write-leveling, and, if
                                                  LMC(0..0)_CONFIG[SREF_WITH_DLL] is set, self-refresh entry and exit instruction sequences.
                                                  See LMC(0..0)_CONFIG [SEQ_SEL, INIT_START, RANKMASK] and LMC(0..0)_RESET_CTL [DDR3PWARM,
                                                  DDR3PSOFT]. Per JEDEC DDR3 specifications, if RTT_NOM is used during write operations,
                                                  only values MR1[RTT_NOM] = 1 (RQZ/4), 2 (RQZ/2), or 3 (RQZ/6) are allowed. Otherwise,
                                                  values MR1[RTT_NOM] = 4 (RQZ/12) and 5 (RQZ/8) are also allowed.
 <32:31> DIC_10     R/W     0x0        0x0        Reserved.  INTERNAL: Output driver impedance control rank 2. LMC writes this value to
                                                  MR1[D.I.C.]
                                                  in the rank 2 (i.e. DIMM1_CS0) DDR3 parts when selected during power-up/init, write-
                                                  leveling, and,
                                                  if LMC(0..0)_CONFIG[SREF_WITH_DLL] is set, self-refresh entry and exit instruction
                                                  sequences.
                                                  See LMC(0..0)_CONFIG [SEQ_SEL, INIT_START, RANKMASK] and
                                                  LMC(0..0)_RESET_CTL[DDR3PWARM,DDR3PSOFT].
 <30:29> RTT_WR_10  R/W     0x0        0x0        Reserved.  INTERNAL: RTT_WR rank 2. LMC writes this value to MR2[Rtt_WR] in the rank 2
                                                  (i.e. DIMM1_CS0) DDR3 parts when selected during power-up/init, write-leveling, and, if
                                                  LMC(0..0)_CONFIG[SREF_WITH_DLL] is set, self-refresh entry and exit instruction sequences.
                                                  See
                                                  LMC(0..0)_SEQ_CTL[SEQ_SEL, INIT_START] and LMC(0..0)_CONFIG[RANKMASK] and
                                                  LMC(0..0)_RESET_CTL[DDR3PWARM, DDR3PSOFT].
 <28>    SRT_10     R/W     0x0        0x0        Reserved.  INTERNAL: Self-refresh temperature range rank 2. LMC writes this value to
                                                  MR2[SRT]
                                                  in the rank 2 (i.e. DIMM1_CS0) DDR3 parts when selected during power-up/init, write-
                                                  leveling, and,
                                                  if LMC(0..0)_CONFIG[SREF_WITH_DLL] is set, self-refresh entry and exit instruction
                                                  sequences.
                                                  See LMC(0..0)_SEQ_CTL[SEQ_SEL, INIT_START] and LMC(0..0)_CONFIG[RANKMASK] and
                                                  LMC(0..0)_RESET_CTL[DDR3PWARM,DDR3PSOFT].
 <27>    ASR_10     R/W     0x0        0x0        Reserved.  INTERNAL: Auto self-refresh rank 2. LMC writes this value to MR2[ASR] in the
                                                  rank 2
                                                  (i.e. DIMM1_CS0) DDR3 parts when selected during power-up/init, write-leveling, and, if
                                                  LMC(0..0)_CONFIG[SREF_WITH_DLL] is set, self-refresh entry and exit instruction sequences.
                                                  See
                                                  LMC(0..0)_CONFIG [SEQ_SEL, INIT_START, RANKMASK] and LMC(0..0)_RESET_CTL[DDR3PWARM,
                                                  DDR3PSOFT].
 <26:24> PASR_10    R/W     0x0        0x0        Reserved.  INTERNAL: Partial array self-refresh rank 2. LMC writes this value to MR2[PASR]
                                                  in
                                                  the rank 2 (i.e. DIMM1_CS0) DDR3 parts when selected during power-up/init, write-leveling,
                                                  and, if
                                                  LMC(0..0)_CONFIG[SREF_WITH_DLL] is set, self-refresh entry and exit instruction sequences.
                                                  See LMC(0..0)_SEQ_CTL[SEQ_SEL, INIT_START] and LMC(0..0)_CONFIG[RANKMASK] and
                                                  LMC(0..0)_RESET_CTL[DDR3PWARM,DDR3PSOFT].
 <23:21> RTT_NOM_01 R/W     0x0        0x0        RTT_NOM rank 1. LMC writes this value to MR1[RTT_NOM] in the rank 1 (i.e. DIMM0_CS1) DDR3
                                                  parts when selected during power-up/init, write-leveling, and, if
                                                  LMC(0..0)_CONFIG[SREF_WITH_DLL] is set, self-refresh entry and exit instruction sequences.
                                                  See LMC(0..0)_CONFIG [SEQ_SEL, INIT_START, RANKMASK] and
                                                  LMC(0..0)_RESET_CTL[DDR3PWARM,DDR3PSOFT]. Per JEDEC DDR3 specifications, if RTT_NOM is
                                                  used during write operations, only values MR1[RTT_NOM] = 1 (RQZ/4), 2 (RQZ/2), or 3
                                                  (RQZ/6) are allowed. Otherwise, values MR1[RTT_NOM] = 4 (RQZ/12) and 5 (RQZ/8) are also
                                                  allowed.
 <20:19> DIC_01     R/W     0x0        0x0        Output driver impedance control rank 1. LMC writes this value to MR1[D.I.C.] in the rank 1
                                                  (i.e. DIMM0_CS1) DDR3 parts when selected during power-up/init, write-leveling, and, if
                                                  LMC(0..0)_CONFIG[SREF_WITH_DLL] is set, self-refresh entry and exit instruction sequences.
                                                  See LMC(0..0)_CONFIG [SEQ_SEL, INIT_START, RANKMASK] and
                                                  LMC(0..0)_RESET_CTL[DDR3PWARM,DDR3PSOFT].
 <18:17> RTT_WR_01  R/W     0x0        0x0        RTT_WR rank 1. LMC writes this value to MR2[RTT_WR] in the rank 1 (i.e. DIMM0_CS1) DDR3
                                                  parts when selected during power-up/init, write-leveling, and, if LMC(0..0)_CONFIG
                                                  [SREF_WITH_DLL] is set, self-refresh entry and exit instruction sequences. See
                                                  LMC(0..0)_SEQ_CTL[SEQ_SEL, INIT_START] and LMC(0..0)_CONFIG[RANKMASK] and
                                                  LMC(0..0)_RESET_CTL[DDR3PWARM, DDR3PSOFT].
 <16>    SRT_01     R/W     0x0        0x0        Self-refresh temperature range rank 1. LMC writes this value to MR2[SRT] in the rank 1
                                                  (i.e. DIMM0_CS1) DDR3 parts when selected during power-up/init, write-leveling, and, if
                                                  LMC(0..0)_CONFIG[SREF_WITH_DLL] is set, self-refresh entry and exit instruction sequences.
                                                  See LMC(0..0)_CONFIG [SEQ_SEL, INIT_START, RANKMASK] and
                                                  LMC(0..0)_RESET_CTL[DDR3PWARM,DDR3PSOFT].
 <15>    ASR_01     R/W     0x0        0x0        Auto self-refresh rank 1. LMC writes this value to MR2[ASR] in the rank 1 (i.e. DIMM0_CS1)
                                                  DDR3 parts when selected during power-up/init, write-leveling, and, if LMC(0..0)_CONFIG
                                                  [SREF_WITH_DLL] is set, self-refresh entry and exit instruction sequences. See
                                                  LMC(0..0)_SEQ_CTL[SEQ_SEL, INIT_START] and LMC(0..0)_CONFIG[RANKMASK] and
                                                  LMC(0..0)_RESET_CTL[DDR3PWARM, DDR3PSOFT].
 <14:12> PASR_01    R/W     0x0        0x0        Partial array self-refresh rank 1. LMC writes this value to MR2[PASR] in the rank 1 (i.e.
                                                  DIMM0_CS1) DDR3 parts when selected during power-up/init, write-leveling, and, if
                                                  LMC(0..0)_CONFIG[SREF_WITH_DLL] is set, self-refresh entry and exit instruction sequences.
                                                  See LMC(0..0)_CONFIG [SEQ_SEL, INIT_START, RANKMASK] and
                                                  LMC(0..0)_RESET_CTL[DDR3PWARM,DDR3PSOFT].
 <11:9>  RTT_NOM_00 R/W     0x0        0x0        RTT_NOM rank 0. LMC writes this value to MR1[RTT_NOM] in the rank 0 (i.e. DIMM0_CS0) DDR3
                                                  parts when selected during power-up/init, write-leveling, and, if LMC(0..0)_CONFIG
                                                  [SREF_WITH_DLL] is set, self-refresh entry and exit instruction sequences. See
                                                  LMC(0..0)_SEQ_CTL[SEQ_SEL, INIT_START] and LMC(0..0)_CONFIG[RANKMASK] and
                                                  LMC(0..0)_RESET_CTL[DDR3PWARM,
                                                  DDR3PSOFT]. Per JEDEC DDR3 specifications, if RTT_NOM is used during write operations,
                                                  only values MR1[RTT_NOM] = 1 (RQZ/4), 2 (RQZ/2), or 3 (RQZ/6) are allowed. Otherwise,
                                                  values MR1[RTT_NOM] = 4 (RQZ/12) and 5 (RQZ/8) are also allowed.
 <8:7>   DIC_00     R/W     0x0        0x0        Output driver impedance control rank 0. LMC writes this value to MR1[D.I.C.] in the rank 0
                                                  (i.e. DIMM0_CS0) DDR3 parts when selected during power-up/init, write-leveling, and, if
                                                  LMC(0..0)_CONFIG[SREF_WITH_DLL] is set, self-refresh entry and exit instruction sequences.
                                                  See LMC(0..0)_CONFIG [SEQ_SEL, INIT_START, RANKMASK] and
                                                  LMC(0..0)_RESET_CTL[DDR3PWARM,DDR3PSOFT].
 <6:5>   RTT_WR_00  R/W     0x0        0x0        RTT_WR rank 0. LMC writes this value to MR2[RTT_WR] in the rank 0 (i.e. DIMM0_CS0) DDR3
                                                  parts when selected during power-up/init, write-leveling, and, if LMC(0..0)_CONFIG
                                                  [SREF_WITH_DLL] is set, self-refresh entry and exit instruction sequences. See
                                                  LMC(0..0)_SEQ_CTL[SEQ_SEL, INIT_START] and LMC(0..0)_CONFIG[RANKMASK] and
                                                  LMC(0..0)_RESET_CTL[DDR3PWARM,
                                                  DDR3PSOFT].
 <4>     SRT_00     R/W     0x0        0x0        Self-refresh temperature range rank 0. LMC writes this value to MR2[SRT] in the rank 0
                                                  (i.e. DIMM0_CS0) DDR3 parts when selected during power-up/init, write-leveling, and, if
                                                  LMC(0..0)_CONFIG[SREF_WITH_DLL] is set, self-refresh entry and exit instruction sequences.
                                                  See LMC(0..0)_CONFIG [SEQ_SEL, INIT_START, RANKMASK] and
                                                  LMC(0..0)_RESET_CTL[DDR3PWARM,DDR3PSOFT].
 <3>     ASR_00     R/W     0x0        0x0        Auto self-refresh rank 0. LMC writes this value to MR2[ASR] in the rank 0 (i.e. DIMM0_CS0)
                                                  DDR3 parts when selected during power-up/init, write-leveling, and, if LMC(0..0)_CONFIG
                                                  [SREF_WITH_DLL] is set, self-refresh entry and exit instruction sequences. See
                                                  LMC(0..0)_SEQ_CTL[SEQ_SEL, INIT_START] and LMC(0..0)_CONFIG[RANKMASK] and
                                                  LMC(0..0)_RESET_CTL[DDR3PWARM,DDR3PSOFT].
 <2:0>   PASR_00    R/W     0x0        0x0        Partial array self-refresh rank 0. LMC writes this value to MR2[PASR] in the rank 0 (i.e.
                                                  DIMM0_CS0) DDR3 parts when selected during power-up/init, write-leveling, and, if
                                                  LMC(0..0)_CONFIG[SREF_WITH_DLL] is set, self-refresh entry and exit instruction sequences.
                                                  See LMC(0..0)_CONFIG [SEQ_SEL, INIT_START, RANKMASK] and
                                                  LMC(0..0)_RESET_CTL[DDR3PWARM,DDR3PSOFT].
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_RODT_MASK = LMC Read OnDieTermination Mask Register
 * 
 *  System designers may desire to terminate DQ/DQS lines for higher frequency DDR operations,
 *  especially on a multirank system. DDR3 DQ/DQS I/Os have built-in termination resistors that
 *  can be turned on or off by the controller, after meeting TAOND and TAOF timing requirements.
 *  Each rank has its own ODT pin that fans out to all the memory parts in that DIMM. System
 *  designers may prefer different combinations of ODT ONs for read operations into different
 *  ranks. CN78XX supports full programmability by way of the mask register below. Each rank
 *  position has its own 4-bit programmable field. When the controller does a read to that rank,
 *  it sets the 4 ODT pins to the MASK pins below. For example, when doing a read from Rank0, a
 *  system designer may desire to terminate the lines with the resistor on DIMM0/Rank1. The mask
 *  RODT_D0_R0 would then be {0010}.
 *  CN78XX drives the appropriate mask values on the ODT pins by default. If this feature is not
 *  required, write 0x0 in this register. Note that, as per the JEDEC DDR3 specifications, the ODT
 *  pin for the rank that is being read should always be 0x0.
 *  When a given RANK is selected, the RODT mask for that rank is used. The resulting RODT mask is
 *  driven to the DIMMs in the following manner:
 *  RANK_ENA=1                    RANK_ENA=0
 *  Mask[3] -> DIMM1_ODT_1                    MBZ
 *  Mask[2] -> DIMM1_ODT_0                          DIMM1_ODT_0
 *  Mask[1] -> DIMM0_ODT_1                    MBZ
 *  Mask[0] -> DIMM0_ODT_0                    DIMM0_ODT_0
 *  LMC always reads entire cache blocks and always reads them via two consecutive
 *  read CAS operations to the same rank+bank+row spaced exactly 4 CK's apart.
 *  When a RODT mask bit is set, LMC asserts the OCTEON ODT output
 *  pin(s) starting (CL CWL) CK's after the first read CAS operation. Then, OCTEON
 *  normally continues to assert the ODT output pin(s) for 9+LMC*_CONTROL[RODT_BPRCH] more CK's
 *  for a total of 10+LMC*_CONTROL[RODT_BPRCH] CK's for the entire cache block read -
 *  through the second read CAS operation of the cache block,
 *  satisfying the 6 CK DDR3 ODTH8 requirements.
 *  But it is possible for OCTEON to issue two cache block reads separated by as few as
 *  RtR = 8 or 9 (10 if LMC*_CONTROL[RODT_BPRCH]=1) CK's. In that case, OCTEON asserts the ODT
 *  output pin(s)
 *  for the RODT mask of the first cache block read for RtR CK's, then asserts
 *  the ODT output pin(s) for the RODT mask of the second cache block read for
 *  10+LMC*_CONTROL[RODT_BPRCH] CK's
 *  (or less if a third cache block read follows within 8 or 9 (or 10) CK's of this second cache
 *  block read).
 *  Note that it may be necessary to force LMC to space back-to-back cache block reads
 *  to different ranks apart by at least 10+LMC*_CONTROL[RODT_BPRCH] CK's to prevent DDR3 ODTH8
 *  violations.
 * 
$LMC(0..0)_RODT_MASK   Address=(0x1180088000268|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:28> NS         RAZ     NS         NS         Reserved.                                         
 <27:24> RODT_D1_R1 R/W     0x0        NS         Reserved.                                         
 <23:20> NS         RAZ     NS         NS         Reserved.                                         
 <19:16> RODT_D1_R0 R/W     0x0        NS         Reserved.                                         
 <15:12> NS         RAZ     NS         NS         Reserved.                                         
 <11:8>  RODT_D0_R1 R/W     0x0        NS         Read ODT mask DIMM0, RANK1/DIMM0 in SingleRanked. If RANK_ENA=1, RODT_D0_R1<1> must be
                                                  zero. Otherwise, RODT_D0_R1<3:0> is not used and must be zero.
 <7:4>   NS         RAZ     NS         NS         Reserved.                                         
 <3:0>   RODT_D0_R0 R/W     0x0        NS         Read ODT mask DIMM0, RANK0. If RANK_ENA=1, RODT_D0_RO<0> must be zero. Otherwise,
                                                  RODT_D0_RO<1:0,3> must be zero.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_DIMM_PARAMS = LMC DIMM Parameters Register
 * 
 *  This register contains values to be programmed into each control word in the corresponding
 *  (registered) DIMM. The control words allow optimization of the device properties for different
 *  raw card designs. Note that LMC only uses this CSR when LMC(0..0)_CONTROL[RDIMM_ENA]=1. During
 *  a power-up/init sequence, LMC writes these fields into the control words in the JEDEC standard
 *  SSTE32882 registering clock driver on an RDIMM when corresponding
 *  LMC(0..0)_DIMM_CTL[DIMM*_WMASK]
 *  bits are set.  For 70xx, only LMC(0..0)_DIMM(0)_PARAMS are used because only 2 ranks are
 *  supported.
 * 
$LMC(0..0)_DIMM(0..1)_PARAMS   Address=(0x1180088000270|a<<24|b<<3)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:60> RC15 R/W     0x0        0x0        RC15, Reserved.                                   
 <59:56> RC14 R/W     0x0        0x0        RC14, Reserved.                                   
 <55:52> RC13 R/W     0x0        0x0        RC13, Reserved.                                   
 <51:48> RC12 R/W     0x0        0x0        RC12, Reserved.                                   
 <47:44> RC11 R/W     0x0        0x0        RC11, Encoding for RDIMM operating VDD.           
 <43:40> RC10 R/W     0x0        0x0        RC10, Encoding for RDIMM operating speed.         
 <39:36> RC9  R/W     0x0        0x0        RC9, Power savings settings control word.         
 <35:32> RC8  R/W     0x0        0x0        RC8, Additional IBT settings control word.        
 <31:28> RC7  R/W     0x0        0x0        RC7, Reserved.                                    
 <27:24> RC6  R/W     0x0        0x0        RC6, Reserved.                                    
 <23:20> RC5  R/W     0x0        0x0        RC5, CK driver characteristics control word.      
 <19:16> RC4  R/W     0x0        0x0        RC4, Control signals driver characteristics control word.
 <15:12> RC3  R/W     0x0        0x0        RC3, CA signals driver characteristics control word.
 <11:8>  RC2  R/W     0x0        0x0        RC2, Timing control word.                         
 <7:4>   RC1  R/W     0x0        0x0        RC1, Clock driver enable control word.            
 <3:0>   RC0  R/W     0x0        0x0        RC0, Global features control word.                
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_RLEVEL_RANK = LMC Read Level Rank Register
 * 
 *  Four of these CSRs exist per LMC, one for each rank. Deskew setting is measured in units of
 *  1/2 CK, so the BYTEn values can range over 16 CK cycles. Each CSR is written by hardware
 *  during a read-leveling sequence for the rank. (Hardware sets STATUS to 3 after hardware read-
 *  leveling completes for the rank.)
 *  If hardware is unable to find a match per LMC(0..0)_RLEVEL_CTL[OFFSET_EN] and
 *  LMC(0..0)_RLEVEL_CTL[OFFSET], then hardware sets LMC(0..0)_RLEVEL_RANK(0..3)[BYTEn<5:0>] to
 *  0x0.
 *  Each CSR may also be written by software, but not while a read-leveling sequence is in
 *  progress. (Hardware sets STATUS to 1 after a CSR write.) Software initiates a hardware read-
 *  leveling sequence by programming LMC(0..0)_RLEVEL_CTL and writing INIT_START = 1 with
 *  SEQ_SEL=1. See LMC*_RLEVEL_CTL.
 *  LMC*_RLEVEL_RANKi values for ranks i without attached DRAM should be set such that they do not
 *  increase the range of possible BYTE values for any byte lane. The easiest way to do this is to
 *  set LMC*_RLEVEL_RANKi = LMC*_RLEVEL_RANKj, where j is some rank with attached DRAM whose
 *  LMC*_RLEVEL_RANKj is already fully initialized.
 * 
$LMC(0..0)_RLEVEL_RANK(0..3)   Address=(0x1180088000280|a<<24|b<<3)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:56> NS     RAZ     NS         NS         Reserved.                                         
 <55:54> STATUS RO/H    0x0        NS         Indicates status of the read-leveling and where the BYTEn programmings in <53:0> came
                                              from:
                                              0x0 = BYTEn values are their reset value.
                                              0x1 = BYTEn values were set via a CSR write to this register.
                                              0x2 = read-leveling sequence currently in progress (BYTEn values are unpredictable).
                                              0x3 = BYTEn values came from a complete read-leveling sequence.
 <53:48> BYTE8  R/W/H   0x0        NS         "Deskew setting.                                  
                                              When ECC DRAM is not present in 64-bit mode (i.e. when DRAM is not attached to chip
                                              signals DDR#_CBS_0_* and DDR#_CB<7:0>), software should write BYTE8 to a value that does
                                              not increase the range of possible BYTE* values. The easiest way to do this is to set
                                              LMC(0..0)_RLEVEL_RANK(0..3)[BYTE8] = LMC(0..0)_RLEVEL_RANK(0..3)[BYTE0] when there is no
                                              ECC DRAM, using the final BYTE0 value."
 <47:42> BYTE7  R/W/H   0x0        NS         Deskew setting.                                   
 <41:36> BYTE6  R/W/H   0x0        NS         Deskew setting.                                   
 <35:30> BYTE5  R/W/H   0x0        NS         Deskew setting.                                   
 <29:24> BYTE4  R/W/H   0x0        NS         Deskew setting.                                   
 <23:18> BYTE3  R/W/H   0x0        NS         Deskew setting.                                   
 <17:12> BYTE2  R/W/H   0x0        NS         Deskew setting.                                   
 <11:6>  BYTE1  R/W/H   0x0        NS         Deskew setting.                                   
 <5:0>   BYTE0  R/W/H   0x0        NS         Deskew setting.                                   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_RLEVEL_CTL = LMC Read Level Control Register
 * 
 *  
 * 
$LMC(0..0)_RLEVEL_CTL   Address=(0x11800880002A0|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field          Field   Reset      Typical    Field                                             
 Pos     Name           Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS             RAZ     NS         NS         Reserved.                                         
 <31:24> PATTERN        R/W     0x55       0x55       Sets the data pattern used to match in read-leveling operations.
 <23:22> NS             RAZ     NS         NS         Reserved.                                         
 <21>    DELAY_UNLOAD_3 R/W     0x0        0x1        When set, unload the PHY silo one cycle later during read-leveling if
                                                      LMC(0..0)_RLEVEL_RANK(0..3)[BYTE*<1:0>] = 3. DELAY_UNLOAD_3 should normally be set.
 <20>    DELAY_UNLOAD_2 R/W     0x0        0x1        When set, unload the PHY silo one cycle later during read-leveling if
                                                      LMC(0..0)_RLEVEL_RANK(0..3)[BYTE*<1:0>] = 2. DELAY_UNLOAD_2 should normally be set.
 <19>    DELAY_UNLOAD_1 R/W     0x0        0x1        When set, unload the PHY silo one cycle later during read-leveling if
                                                      LMC(0..0)_RLEVEL_RANK(0..3)[BYTE*<1:0>] = 1. DELAY_UNLOAD_1 should normally be set.
 <18>    DELAY_UNLOAD_0 R/W     0x0        0x1        When set, unload the PHY silo one cycle later during read-leveling if
                                                      LMC(0..0)_RLEVEL_RANK(0..3)[BYTE*<1:0>] = 0. DELAY_UNLOAD_0 should normally be set.
 <17:10> BITMASK        R/W     0x0        0x0        Mask to select bit lanes on which read-leveling feedback is returned when OR_DIS is set to 1.
 <9>     OR_DIS         R/W     0x0        0x0        Disable ORing of bits in a byte lane when computing the read-leveling bitmask. OR_DIS
                                                      should normally not be set.
 <8>     OFFSET_EN      R/W     0x1        0x1        When set, LMC attempts to select the read-leveling setting that is
                                                      LMC(0..0)_RLEVEL_CTL[OFFSET] settings earlier than the last passing read-leveling setting
                                                      in the largest contiguous sequence of passing settings. When clear, or if the setting
                                                      selected by LMC(0..0)_RLEVEL_CTL[OFFSET] did not pass, LMC selects the middle setting in
                                                      the largest contiguous sequence of passing settings, rounding earlier when necessary.
 <7:4>   OFFSET         R/W     0x2        0x2        The offset used when LMC(0..0)_RLEVEL_CTL[OFFSET] is set.
 <3:0>   BYTE           R/W     0x0        NS         0 <= BYTE <= 8. Byte index for which bitmask results are saved in LMC(0..0)_RLEVEL_DBG.
                                                      Attribute: -exempt_keyword=True.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_RLEVEL_DBG = LMC Read Level Debug Register
 * 
 *  A given read of LMC(0..0)_RLEVEL_DBG returns the read-leveling pass/fail results for all
 *  possible delay settings (i.e. the BITMASK) for only one byte in the last rank that the
 *  hardware ran read-leveling on. LMC(0..0)_RLEVEL_CTL[BYTE] selects the particular byte. To get
 *  these pass/fail results for a different rank, you must run the hardware read-leveling again.
 *  For example, it is possible to get the BITMASK results for every byte of every rank if you run
 *  read-leveling separately for each rank, probing LMC(0..0)_RLEVEL_DBG between each read-
 *  leveling.
 * 
$LMC(0..0)_RLEVEL_DBG   Address=(0x11800880002A8|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  BITMASK RO/H    0x0        0x0        Bitmask generated during deskew settings sweep. BITMASK[n] = 0 means deskew setting n
                                               failed; BITMASK[n] = 1 means deskew setting n passed for 0 <= n <= 63.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_WLEVEL_RANK = LMC Write Level Rank Register
 * 
 *  Four of these CSRs exist per LMC, one for each rank. Deskew setting is measured in units of
 *  1/8 CK, so the below BYTEn values can range over 4 CK cycles. Assuming
 *  LMC(0..0)_WLEVEL_CTL[SSET]=0, the BYTEn<2:0> values are not used during write-leveling, and
 *  they are overwritten by the hardware as part of the write-leveling sequence. (Hardware sets
 *  STATUS to 3 after hardware write-leveling completes for the rank). Software needs to set
 *  BYTEn<4:3> bits.
 *  Each CSR may also be written by software, but not while a write-leveling sequence is in
 *  progress. (Hardware sets STATUS to 1 after a CSR write.) Software initiates a hardware write-
 *  leveling sequence by programming LMC*_WLEVEL_CTL and writing RANKMASK and INIT_START=1 with
 *  SEQ_SEL=6 in LMC*0_CONFIG.
 *  LMC will then step through and accumulate write leveling results for 8 unique delay settings
 *  (twice), starting at a delay of LMC(0..0)_WLEVEL_RANK(0..3) [BYTEn<4:3>]* 8 CK increasing by
 *  1/8 CK each setting. Hardware will then set LMC(0..0)_WLEVEL_RANK(0..3)[BYTEn<2:0>] to
 *  indicate the first write leveling result of '1' that followed a result of '0' during the
 *  sequence by searching for a '1100' pattern in the generated bitmask, except that LMC will
 *  always write LMC(0..0)_WLEVEL_RANK(0..3)[BYTEn<0>]=0. If hardware is unable to find a match
 *  for a '1100' pattern, then hardware sets LMC(0..0)_WLEVEL_RANK(0..3) [BYTEn<2:0>] to 0x4. See
 *  LMC*_WLEVEL_CTL.
 *  LMC*_WLEVEL_RANKi values for ranks i without attached DRAM should be set such that they do not
 *  increase the range of possible BYTE values for any byte lane. The easiest way to do this is to
 *  set LMC*_WLEVEL_RANKi = LMC*_WLEVEL_RANKj, where j is some rank with attached DRAM whose
 *  LMC*_WLEVEL_RANKj is already fully initialized.
 * 
$LMC(0..0)_WLEVEL_RANK(0..3)   Address=(0x11800880002C0|a<<24|b<<3)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:47> NS     RAZ     NS         NS         Reserved.                                         
 <46:45> STATUS RO/H    0x0        NS         Indicates status of the write-leveling and where the BYTE* programmings in <44:0> came
                                              from:
                                              0 = BYTE* values are their reset value.
                                              1 = BYTE* values were set via a CSR write to this register.
                                              2 = write-leveling sequence currently in progress (BYTE* values are unpredictable).
                                              3 = BYTE* values came from a complete write-leveling sequence, irrespective of which lanes
                                              are masked via LMC*WLEVEL_CTL[LANEMASK].
 <44:40> BYTE8  R/W/H   0x0        NS         "Deskew setting. Bit 0 of BYTE8 must be zero during normal operation. When ECC DRAM is not
                                              present in 64-bit mode (i.e. when DRAM is not attached to chip signals DDR#_CBS_0_* and
                                              DDR#_CB<7:0>), software should write BYTE8 with a value that does not increase the range
                                              of possible BYTE* values. The easiest way to do this is to set
                                              LMC(0..0)_WLEVEL_RANK(0..3)[BYTE8] = LMC(0..0)_WLEVEL_RANK(0..3)[BYTE0] when there is no
                                              ECC DRAM, using the final BYTE0 value."
 <39:35> BYTE7  R/W/H   0x0        NS         Deskew setting. Bit 0 of BYTE7 must be zero during normal operation.
 <34:30> BYTE6  R/W/H   0x0        NS         Deskew setting. Bit 0 of BYTE6 must be zero during normal operation.
 <29:25> BYTE5  R/W/H   0x0        NS         Deskew setting. Bit 0 of BYTE5 must be zero during normal operation.
 <24:20> BYTE4  R/W/H   0x0        NS         Deskew setting. Bit 0 of BYTE4 must be zero during normal operation.
 <19:15> BYTE3  R/W/H   0x0        NS         Deskew setting. Bit 0 of BYTE3 must be zero during normal operation.
 <14:10> BYTE2  R/W/H   0x0        NS         Deskew setting. Bit 0 of BYTE2 must be zero during normal operation.
 <9:5>   BYTE1  R/W/H   0x0        NS         Deskew setting. Bit 0 of BYTE1 must be zero during normal operation.
 <4:0>   BYTE0  R/W/H   0x0        NS         Deskew setting. Bit 0 of BYTE0 must be zero during normal operation.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_WLEVEL_CTL = LMC Write Level Control Register
 * 
 *  
 * 
$LMC(0..0)_WLEVEL_CTL   Address=(0x1180088000300|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:22> NS       RAZ     NS         NS         Reserved.                                         
 <21:19> RTT_NOM  R/W     0x0        0x0        LMC writes a decoded value to MR1[Rtt_Nom] of the rank during write leveling. Per JEDEC
                                                DDR3 specifications, only values MR1[Rtt_Nom] = 1 (RQZ/4), 2 (RQZ/2), or 3 (RQZ/6) are
                                                allowed during write leveling with output buffer enabled.
                                                000: LMC writes 001 (RZQ/4) to MR1[Rtt_Nom].
                                                001: LMC writes 010 (RZQ/2) to MR1[Rtt_Nom].
                                                010: LMC writes 011 (RZQ/6) to MR1[Rtt_Nom].
                                                011: LMC writes 100 (RZQ/12) to MR1[Rtt_Nom].
                                                100: LMC writes 101 (RZQ/8) to MR1[Rtt_Nom].
                                                101: LMC writes 110 (Rsvd) to MR1[Rtt_Nom].
                                                110: LMC writes 111 (Rsvd) to MR1[Rtt_Nom].
                                                111: LMC writes 000 (Disabled) to MR1[Rtt_Nom].
 <18:11> BITMASK  R/W     0x0        NS         Mask to select bit lanes on which write-leveling feedback is returned when OR_DIS is set to 1.
 <10>    OR_DIS   R/W     0x0        NS         Disable ORing of bits in a byte lane when computing the write-leveling bitmask.
 <9>     SSET     R/W     0x0        NS         Run write-leveling on the current setting only.   
 <8:0>   LANEMASK R/W     0x0        NS         One-shot mask to select byte lane to be leveled by the write-leveling sequence. Used with
                                                *16 parts where the upper and lower byte lanes need to be leveled independently.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_WLEVEL_DBG = LMC Write Level Debug Register
 * 
 *  A given write of LMC(0..0)_WLEVEL_DBG returns the write-leveling pass/fail results for all
 *  possible delay settings (i.e. the BITMASK) for only one byte in the last rank that the
 *  hardware write-leveled. LMC(0..0)_WLEVEL_DBG[BYTE] selects the particular byte. To get these
 *  pass/fail results for a different rank, you must run the hardware write-leveling again. For
 *  example, it is possible to get the BITMASK results for every byte of every rank if you run
 *  write-leveling separately for each rank, probing LMC(0..0)_WLEVEL_DBG between each write-
 *  leveling.
 * 
$LMC(0..0)_WLEVEL_DBG   Address=(0x1180088000308|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:12> NS      RAZ     NS         NS         Reserved.                                         
 <11:4>  BITMASK RO/H    0x0        0x0        Bitmask generated during deskew settings sweep. If LMC(0..0)_WLEVEL_CTL[SSET]=0,
                                               BITMASK<n>=0 means deskew setting n failed; BITMASK<n>=1 means deskew setting n passed for
                                               0 <= n <= 7. BITMASK contains the first 8 results of the total 16 collected by LMC during
                                               the write-leveling sequence.
                                               If LMC(0..0)_WLEVEL_CTL[SSET]=1, BITMASK<0>=0 means curr deskew setting failed;
                                               BITMASK<0>=1 means curr deskew setting passed.
 <3:0>   BYTE    R/W     0x0        0x0        0 <= BYTE <= 8.                                   
                                               Attribute: -exempt_keyword=True.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_DIMM_CTL = LMC DIMM Control Register
 * 
 *  Note that this CSR is only used when LMC(0..0)_CONTROL[RDIMM_ENA] = 1. During a power-up/init
 *  sequence, this CSR controls LMC's write operations to the control words in the JEDEC standard
 *  SSTE32882 registering clock driver on an RDIMM.
 * 
$LMC(0..0)_DIMM_CTL   Address=(0x1180088000310|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:46> NS          RAZ     NS         NS         Reserved.                                         
 <45>    PARITY      R/W     0x0        0x0        "Parity. The Par_In input of a registered DIMM should be tied off. LMC adjusts the value
                                                   of the DDR_WE_L (DWE#) pin during DDR3 register part control word writes to ensure the
                                                   parity is observed correctly by the receiving SSTE32882 register part.
                                                   When Par_In is grounded, PARITY should be cleared to 0."
 <44:32> TCWS        R/W     0x4e0      0x4e0      LMC waits for this time period before and after a RDIMM control word access during a
                                                   power-up/init SEQUENCE. TCWS is in multiples of 8 CK cycles.
                                                   Set TCWS (CSR field) = RNDUP[TCWS(ns)/(8 * TCYC(ns))], where TCWS is the desired time
                                                   (ns), and TCYC(ns) is the DDR clock frequency (not data rate).
                                                   TYP = 0x4E0 (equivalent to 15 us) when changing clock timing (RC2.DBA1, RC6.DA4, RC10.DA3,
                                                   RC10.DA4, RC11.DA3, and RC11.DA4)
                                                   TYP = 0x8, otherwise
                                                   0x0 = Reserved
 <31:16> DIMM1_WMASK R/W     0xffff     0xffff     DIMM1 write mask. If (DIMM1_WMASK[n] = 1), write DIMM1.RCn.
 <15:0>  DIMM0_WMASK R/W     0xffff     0xffff     DIMM0 write mask. If (DIMM0_WMASK[n] = 1), write DIMM0.RCn.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_CHAR_MASK4 = INTERNAL: LMC Characterization Mask Register 4

 * 
 *  This register is an assortment of various control fields needed to characterize the DDR3 interface.
 * 
$LMC(0..0)_CHAR_MASK4   Address=(0x1180088000318|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field        Field   Reset      Typical    Field                                             
 Pos     Name         Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:45> NS           RAZ     NS         NS         Reserved.                                         
 <44:36> DBI_MASK     R/W     0x0        NS         Mask for DBI/DQS<1>.                              
 <35>    PAR_MASK     R/W     0x0        NS         Mask for PAR.                                     
 <34>    ACT_N_MASK   R/W     0x0        NS         Mask for ACT_N.                                   
 <33>    A17_MASK     R/W     0x0        NS         Mask for A17.                                     
 <32>    RESET_N_MASK R/W     0x0        NS         Mask for RESET_L.                                 
 <31:16> A_MASK       R/W     0x0        NS         Mask for A<15:0>.                                 
 <15:13> BA_MASK      R/W     0x0        NS         Mask for BA<2:0>.                                 
 <12>    WE_N_MASK    R/W     0x0        NS         Mask for WE_N.                                    
 <11>    CAS_N_MASK   R/W     0x0        NS         Mask for CAS_N.                                   
 <10>    RAS_N_MASK   R/W     0x0        NS         Mask for RAS_N.                                   
 <9:8>   ODT1_MASK    R/W     0x0        NS         Mask for ODT1.                                    
 <7:6>   ODT0_MASK    R/W     0x0        NS         Mask for ODT0.                                    
 <5:4>   CS1_N_MASK   R/W     0x0        NS         Mask for CS1_N.                                   
 <3:2>   CS0_N_MASK   R/W     0x0        NS         Mask for CS0_N.                                   
 <1:0>   CKE_MASK     R/W     0x0        NS         Mask for CKE*.                                    
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_SCRAMBLE_CFG0 = LMC Scramble Configuration 0 Register
 * 
 *  
 * 
$LMC(0..0)_SCRAMBLE_CFG0   Address=(0x1180088000320|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  KEY R/W/H   0x0        NS         Scramble key for data.                            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_SCRAMBLE_CFG1 = LMC Scramble Configuration 1 Register
 * 
 *  These registers set the aliasing that uses the lowest, legal chip select(s).
 * 
$LMC(0..0)_SCRAMBLE_CFG1   Address=(0x1180088000328|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  KEY R/W/H   0x0        NS         Scramble key for addresses.                       
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_SCRAMBLED_FADR = LMC Scrambled Failing Address Register (SEC/DED/NXM)
 * 
 *  LMC(0..0)_FADR captures the failing pre-scrambled address location (split into DIMM, bunk,
 *  bank, etc). If scrambling is off, LMC(0..0)_FADR also captures the failing physical location
 *  in the DRAM parts. LMC(0..0)_SCRAMBLED_FADR captures the actual failing address location in
 *  the physical DRAM parts, i.e.:
 *  If scrambling is on, LMC(0..0)_SCRAMBLED_FADR contains the failing physical location in the
 *  DRAM parts (split into DIMM, bunk, bank, etc);
 *  If scrambling is off, the pre-scramble and post-scramble addresses are the same, and so the
 *  contents of LMC(0..0)_SCRAMBLED_FADR match the contents of LMC(0..0)_FADR.
 *  This register only captures the first transaction with ECC errors. A DED error can over-write
 *  this register with its failing addresses if the first error was a SEC. If you write
 *  LMC(0..0)_CONFIG -> SEC_ERR/DED_ERR, it clears the error bits and captures the next failing
 *  address. If FDIMM is 1, that means the error is in the higher DIMM.
 * 
$LMC(0..0)_SCRAMBLED_FADR   Address=(0x1180088000330|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:40> NS         RAZ     NS         NS         Reserved.                                         
 <39:38> FILL_ORDER RO/H    0x0        0x0        Fill order for failing transaction.               
 <37>    FDIMM      RO/H    0x0        0x0        Failing DIMM number.                              
 <36>    FBUNK      RO/H    0x0        0x0        Failing rank number.                              
 <35:32> FBANK      RO/H    0x0        0x0        Failing bank number. Bits <3:0>.                  
 <31:14> FROW       RO/H    0x0        0x0        Failing row address. Bits <17:0>.                 
 <13:0>  FCOL       RO/H    0x0        0x0        Failing column address <13:0>. Technically, represents the address of the 128b data that
                                                  had an ECC error, i.e., FCOL<0> is always 0. Can be used in conjunction with
                                                  LMC(0..0)_CONFIG[DED_ERR] to isolate the 64b chunk of data in error.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * LMC_DDR4_DIMM_CTL = LMC DIMM Control Register
 * 
 *  This register is used only when LMC(0..0)_CONTROL[RDIMM_ENA] = 1. During an RCW initialization
 *  sequence, this register controls LMC's write operations to the extended DDR4 control words in
 *  the JEDEC standard registering clock driver on an RDIMM.
 * 
$LMC(0..0)_DDR4_DIMM_CTL   Address=(0x11800880003F0|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field            Field   Reset      Typical    Field                                             
 Pos     Name             Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:22> NS               RAZ     NS         NS         Reserved.                                         
 <21:11> DDR4_DIMM1_WMASK R/W     0x7ff      0x7ff      DIMM1 write mask. If (DIMM1_WMASK[n] = 1), write DIMM1.RCn.
 <10:0>  DDR4_DIMM0_WMASK R/W     0x7ff      0x7ff      DIMM0 write mask. If (DIMM0_WMASK[n] = 1), write DIMM0.RCn.
-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the mio.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************


Attribute: -multiple_dids=0x0,0x7.
 * 
 * CIU_INT_SUM0
 * 
 *  The remaining IP4 summary bits will be CIU_INT@_SUM4.
 *  CIU_INT0_SUM0:  PP0/IP2
 *  CIU_INT1_SUM0:  PP0/IP3
 *  CIU_INT2_SUM0:  PP1/IP2
 *  CIU_INT3_SUM0:  PP1/IP3
 *  CIU_INT4_SUM0:  PP2/IP2
 *  CIU_INT5_SUM0:  PP2/IP3
 *  CIU_INT6_SUM0:  PP3/IP2
 *  CIU_INT7_SUM0:  PP3/IP3
 *   .....
 *  (hole)
 *  CIU_INT32_SUM0: IO 0 (PEM0).
 *  CIU_INT33_SUM0: IO 1 (Reserved in o70, in seperate address group)
 * 
$CIU_INT(0..7,32)_SUM0   Address=(0x1070000000000+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    BOOTDMA  RO/H    0x0        0x0        Boot bus DMA engines Interrupt                    
                                                See MIO_NDF_DMA_INT
 <62>    NS       RO/H    0x0        0x0        Reserved.                                         
 <61>    IPDPPTHR RO/H    0x0        0x0        IPD per-port counter threshold interrupt          
                                                See IPD_PORT_QOS_INT*
 <60>    POWIQ    RO/H    0x0        0x0        POW IQ interrupt                                  
                                                See POW_IQ_INT
 <59>    TWSI2    RO/H    0x0        0x0        2nd TWSI Interrupt                                
                                                See MIO_TWS1_INT
 <58>    MPI      R/W1C/H 0x0        0x0        MPI/SPI interrupt, Set when MPI transaction       
                                                finished, see MPI_CFG[INT_ENA] and MPI_STS[BUSY]
 <57>    PCM      RO/H    0x0        0x0        PCM/TDM interrupt                                 
 <56>    NS       RAZ     NS         NS         Reserved for USB.                                 
 <55:52> TIMER    R/W1C/H 0x0        0x0        General timer 0-3 interrupts.                     
                                                When CIU_TIM_MULTI_CAST[EN] == 0, this interrupt is
                                                common for all PP/IRQs, writing '1' to any PP/IRQ
                                                TIMERn (n=0..3) will clear all TIMERn(n=0..3) interrupts.
                                                When CIU_TIM_MULTI_CAST[EN] == 1, TIMERn(n=0..3)
                                                are set at the same time, but clearing are based on
                                                per cnMIPS core. See CIU_TIM_MULTI_CAST for detail.
                                                The combination of this field and the
                                                CIU_SUM2_*[TIMER] field implement all 10 CIU_TIM*
                                                interrupts.
 <51>    SUM2     RO/H    0x0        0x0        SUM2&EN2 SUMMARY bit                              
                                                This read-only bit reads as a one whenever any
                                                CIU_SUM2_PP@_IPx (CIU_SUM2_IO@_INT)  bit is set
                                                and corresponding enable bit in CIU_EN2_PP@_IPx
                                                (CIU_EN2_IO@_INT) is set.
                                                Note that SUM2 only summarizes the SUM2/EN2
                                                result and does not have a corresponding enable
                                                bit, so does not directly contribute to
                                                interrupts.
 <50>    IPD_DRP  R/W1C/H 0x0        0x0        IPD QOS packet drop interrupt                     
                                                Set any time PIP/IPD drops a packet
 <49:48> GMX_DRP  R/W1C/H 0x0        0x0        GMX0/1 packet drop interrupt                      
                                                Set any time corresponding GMX0/1 drops a packet
 <47:46> NS       RAZ     NS         NS         Reserved.                                         
 <45>    TWSI     RO/H    0x0        0x0        TWSI Interrupt                                    
                                                See MIO_TWS0_INT
 <44>    WDOG_SUM RO/H    0x0        0x0        SUM1&EN1 summary bit                              
                                                This read-only bit reads as a one whenever any
                                                CIU_SUM1_PP@_IPx (CIU_SUM1_IO@_INT)  bit is set
                                                and corresponding enable bit in CIU_INTx_EN is set
                                                PPs use CIU_INTx_SUM0 where x=0-7
                                                PCIe uses the CIU_INTx_SUM0 where x=32-33.
                                                Note that WDOG_SUM only summarizes the SUM1/EN1
                                                result and does not have a corresponding enable
                                                bit, so does not directly contribute to
                                                interrupts.
 <43:40> PCI_MSI  RO/H    0x0        0x0        PCIe MSI                                          
                                                See SLI_MSI_RCVn for bit <40+n>
 <39:36> PCI_INT  RO/H    0x0        0x0        PCIe INTA/B/C/D                                   
                                                Refer to "Receiving Emulated INTA/INTB/
                                                INTC/INTD" in the SLI chapter of the spec
                                                PCI_INT<3> = INTD
                                                PCI_INT<2> = INTC
                                                PCI_INT<1> = INTB
                                                PCI_INT<0> = INTA
 <35:34> UART     RO/H    0x0        0x0        Two UART interrupts                               
                                                See MIO_UARTn_IIR[IID] for bit <34+n>
 <33:32> MBOX     RO/H    0x0        0x0        Two mailbox interrupts        for entries 0-11    
                                                [33] is the or of <31:16>
                                                [32] is the or of <15:0>
                                                Two PCIe internal interrupts for entries 32-33
                                                which equal CIU_PCI_INTA[INT]
 <31:16> GPIO     R/W1C/H 0x0        0x0        16 GPIO interrupts                                
                                                When GPIO_MULTI_CAST[EN] == 1
                                                Write 1 to clear either the per PP or common GPIO
                                                edge-triggered interrupts,depending on mode.
                                                See GPIO_MULTI_CAST for all details.
                                                When GPIO_MULTI_CAST[EN] == 0
                                                Read Only, retain the same behavior as o63.
 <15:0>  WORKQ    RO/H    0x0        0x0        16 work queue interrupts                          
                                                See POW_WQ_INT[WQ_INT]
                                                1 bit/group. A copy of the R/W1C bit in the POW.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_INT_SUM1
 * 
 *  CIU_INT_SUM1 is kept to keep backward compatible.
 *  Refer to CIU_SUM1_PP@_IPx which is the one should use.
 * 
$CIU_INT_SUM1   Address=(0x1070000000108)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    RST    RO/H    0x0        0x0        MIO RST interrupt. |(CIU_CIB_RST_RAW(0) & CIU_CIB_RST_EN(0))
                                              See CIU_CIB_RST_RAW(0) and CIU_CIB_RST_EN(0)
 <62:60> NS     RAZ     NS         NS         Reserved.                                         
 <59:56> NS     RAZ     NS         NS         Reserved for DFM expansion                        
 <55:53> NS     RAZ     NS         NS         Reserved for LMC expansion                        
 <52>    LMC0   RO/H    0x0        0x0        LMC0 interrupt. |(CIU_CIB_LMC(0)_RAW[0] & CIU_CIB_LMC(0)_EN[0])
                                              See CIU_CIB_LMC(0)_RAW[0] and CIU_CIB_LMC(0)_EN[0]
 <51>    NS     RAZ     NS         NS         Reserved.                                         
 <50>    PEM2   RO/H    0x0        0x0        PEM2 interrupt                                    
                                              See PEM2_INT_SUM (enabled by PEM2_INT_ENB)
 <49>    PEM1   RO/H    0x0        0x0        PEM1 interrupt                                    
                                              See PEM1_INT_SUM (enabled by PEM1_INT_ENB)
 <48>    PEM0   RO/H    0x0        0x0        PEM0 interrupt                                    
                                              See PEM0_INT_SUM (enabled by PEM0_INT_ENB)
 <47>    PTP    R/W1C/H 0x0        0x0        PTP interrupt                                     
                                              Set when HW decrements MIO_PTP_EVT_CNT to zero
 <46>    AGL    RO/H    0x0        0x0        AGL interrupt                                     
                                              See AGL_GMX_RX*_INT_REG, AGL_GMX_TX_INT_REG
 <45:44> NS     RAZ     NS         NS         Reserved for future Interlaken                    
 <43:40> NS     RAZ     NS         NS         Reserved.                                         
 <39:38> NS     RAZ     NS         NS         Reserved for GMX expansion                        
 <37>    AGX1   RO/H    0x0        0x0        GMX1 interrupt                                    
                                              See GMX1_RX*_INT_REG, GMX1_TX_INT_REG,
                                              PCS1_INT*_REG, PCSX1_INT_REG
 <36>    AGX0   RO/H    0x0        0x0        GMX0 interrupt                                    
                                              See GMX0_RX*_INT_REG, GMX0_TX_INT_REG,
                                              PCS0_INT*_REG, PCSX0_INT_REG
 <35>    DPI    RO/H    0x0        0x0        DPI interrupt                                     
                                              See DPI_INT_REG
 <34>    SLI    RO/H    0x0        0x0        SLI interrupt                                     
                                              See SLI_INT_SUM (enabled by SLI_INT_ENB_CIU)
 <33>    USB    RO/H    0x0        0x0        USBDRD0 Interrupt.  (CIU_CIB_USBDRD(0)_RAW[0] & CIU_CIB_USBDRD(0)_EN)
                                              See CIU_CIB_USBDRD(0)_RAW[0] and CIU_CIB_USBDRD(0)_EN[0]
 <32>    DFA    RO/H    0x0        0x0        DFA interrupt                                     
                                              See DFA_ERROR
 <31>    KEY    RO/H    0x0        0x0        KEY interrupt                                     
                                              See KEY_INT_SUM
 <30>    RAD    RO/H    0x0        0x0        RAD interrupt                                     
                                              See RAD_REG_ERROR
 <29>    TIM    RO/H    0x0        0x0        TIM interrupt                                     
                                              See TIM_REG_ERROR
 <28>    NS     RAZ     NS         NS         Reserved.                                         
 <27>    PKO    RO/H    0x0        0x0        PKO interrupt                                     
                                              See PKO_REG_ERROR
 <26>    PIP    RO/H    0x0        0x0        PIP interrupt                                     
                                              See PIP_INT_REG
 <25>    IPD    RO/H    0x0        0x0        IPD interrupt                                     
                                              See IPD_INT_SUM
 <24>    L2C    RO/H    0x0        0x0        L2C interrupt. |(CIU_CIB_L2C_RAW[0..2] & CIU_CIB_L2C_EN[0..2])
                                              See CIU_CIB_L2C_RAW[0..2] and CIU_CIB_L2C_EN[0..2].
 <23>    POW    RO/H    0x0        0x0        POW err interrupt                                 
                                              See POW_ECC_ERR
 <22>    FPA    RO/H    0x0        0x0        FPA interrupt                                     
                                              See FPA_INT_SUM
 <21>    IOB    RO/H    0x0        0x0        IOB interrupt                                     
                                              See IOB_INT_SUM
 <20>    MIO    RO/H    0x0        0x0        MIO boot interrupt                                
                                               See MIO_BOOT_ERR
 <19>    NAND   RO/H    0x0        0x0        NAND / EMMC Controller interrupt                  
                                              See  NAND / EMMC interrupt
                                              Attribute: -exempt_keyword=True.
 <18>    NS     RAZ     NS         NS         Reserved for additional Interrupts                
 <17>    USB1   RO/H    0x0        0x0        USBDRD1 Interrupt.  (CIU_CIB_USBDRD(1)_RAW[0] & CIU_CIB_USBDRD1(1)_EN[0])
                                              See CIU_CIB_USBDRD(1)_RAW[0] and CIU_CIB_USBDRD(1)_EN[0]
 <16>    NS     RAZ     NS         NS         Reserved for Third UART interrupt                 
 <15:4>  NS     RAZ     NS         NS         Reserved.                                         
 <3:0>   WDOG   RO/H    0x0        0x0        Watchdog interrupts. Bit 0 for PP0 watchdog, and Bit n for PPn.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_INT33_SUM0
 * 
 *  This bit is associated with CIU_INT@_SUM0. Reserved for o70 for future expansion.
 * 
$CIU_INT33_SUM0   Address=(0x1070000000110)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    BOOTDMA  RO/H    0x0        0x0        Boot bus DMA engines Interrupt                    
                                                See MIO_NDF_DMA_INT
 <62>    NS       RO/H    0x0        0x0        Reserved.                                         
 <61>    IPDPPTHR RO/H    0x0        0x0        IPD per-port counter threshold interrupt          
                                                See IPD_PORT_QOS_INT*
 <60>    POWIQ    RO/H    0x0        0x0        POW IQ interrupt                                  
                                                See POW_IQ_INT
 <59>    TWSI2    RO/H    0x0        0x0        2nd TWSI Interrupt                                
                                                See MIO_TWS1_INT
 <58>    MPI      R/W1C/H 0x0        0x0        MPI/SPI interrupt                                 
 <57>    PCM      RO/H    0x0        0x0        PCM/TDM interrupt                                 
 <56>    NS       RO/H    0x0        0x0        Reserved.                                         
 <55:52> TIMER    R/W1C/H 0x0        0x0        General timer 0-3 interrupts.                     
                                                When CIU_TIM_MULTI_CAST[EN] == 0, this interrupt is
                                                common for all PP/IRQs, writing '1' to any PP/IRQ
                                                will clear all TIMERx(x=0..9) interrupts.
                                                When CIU_TIM_MULTI_CAST[EN] == 1, TIMERx(x=0..9)
                                                are set at the same time, but clearing are based on
                                                per cnMIPS core. See CIU_TIM_MULTI_CAST for detail.
                                                The combination of this field and the
                                                CIU_SUM2_*[TIMER] field implement all 10 CIU_TIM*
                                                interrupts.
 <51>    SUM2     RO/H    0x0        0x0        SUM2&EN2 SUMMARY bit                              
                                                This read-only bit reads as a one whenever any
                                                CIU_SUM2_PP@_IPx (CIU_SUM2_IO@_INT)  bit is set
                                                and corresponding enable bit in CIU_EN2_PP@_IPx
                                                (CIU_EN2_IO@_INT) is set.
                                                Note that SUM2 only summarizes the SUM2/EN2
                                                result and does not have a corresponding enable
                                                bit, so does not directly contribute to
                                                interrupts.
 <50>    IPD_DRP  R/W1C/H 0x0        0x0        IPD QOS packet drop interrupt                     
                                                Set any time PIP/IPD drops a packet
 <49:48> GMX_DRP  R/W1C/H 0x0        0x0        GMX packet drop interrupt                         
                                                Set any time corresponding GMX drops a packet
 <47:46> NS       RO/H    0x0        0x0        Reserved.                                         
 <45>    TWSI     RO/H    0x0        0x0        TWSI Interrupt                                    
                                                See MIO_TWS0_INT
 <44>    WDOG_SUM RO/H    0x0        0x0        SUM1&EN1 summary bit                              
                                                This read-only bit reads as a one whenever any
                                                CIU_SUM1_PP@_IPx bit is set and corresponding
                                                enable bit in CIU_INTx_EN is set, where x
                                                is the same as x in this CIU_INTx_SUM0.
                                                PPs use CIU_INTx_SUM0 where x=0-7.
                                                PCIe uses the CIU_INTx_SUM0 where x=32-33.
                                                Note that WDOG_SUM only summarizes the SUM1/EN1
                                                result and does not have a corresponding enable
                                                bit, so does not directly contribute to
                                                interrupts.
 <43:40> PCI_MSI  RO/H    0x0        0x0        PCIe MSI                                          
                                                See SLI_MSI_RCVn for bit <40+n>
 <39:36> PCI_INT  RO/H    0x0        0x0        PCIe INTA/B/C/D                                   
                                                Refer to "Receiving Emulated INTA/INTB/
                                                INTC/INTD" in the SLI chapter of the spec
                                                PCI_INT<3> = INTD
                                                PCI_INT<2> = INTC
                                                PCI_INT<1> = INTB
                                                PCI_INT<0> = INTA
 <35:34> UART     RO/H    0x0        0x0        Two UART interrupts                               
                                                See MIO_UARTn_IIR[IID] for bit <34+n>
 <33:32> MBOX     RO/H    0x0        0x0        A read-only copy of CIU_PCI_INTA[INT]             
 <31:16> GPIO     R/W1C/H 0x0        0x0        16 GPIO interrupts                                
                                                When GPIO_MULTI_CAST[EN] == 1
                                                Write 1 to clear either the per PP or common GPIO
                                                edge-triggered interrupts,depending on mode.
                                                See GPIO_MULTI_CAST for all details.
                                                When GPIO_MULTI_CAST[EN] == 0
                                                Read Only, retain the same behavior as o63.
 <15:0>  WORKQ    RO/H    0x0        0x0        16 work queue interrupts                          
                                                See POW_WQ_INT[WQ_INT]
                                                1 bit/group. A copy of the R/W1C bit in the POW.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_INT_EN0
 * 
 *  CIU_INT0_EN0:  PP0/IP2
 *  CIU_INT1_EN0:  PP0/IP3
 *  CIU_INT2_EN0:  PP1/IP2
 *  CIU_INT3_EN0:  PP1/IP3
 *  CIU_INT4_EN0:  PP2/IP2
 *  CIU_INT5_EN0:  PP2/IP3
 *  CIU_INT6_EN0:  PP3/IP2
 *  CIU_INT7_EN0:  PP3/IP3
 *  .....
 *  (hole)
 *  CIU_INT32_EN0: IO 0 (PEM0)
 *  CIU_INT33_EN0: IO 1 (reserved in o70).
 *  Attribute: -exempt_natural_alignment=a.
 * 
$CIU_INT(0..7,32..33)_EN0   Address=(0x1070000000200+a*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    BOOTDMA   R/W     0x0        0x0        Boot bus DMA engines Interrupt enable             
 <62>    NS        R/W     0x0        0x0        Reserved.                                         
 <61>    IPDPPTHR  R/W     0x0        0x0        IPD per-port counter threshold interrupt enable   
 <60>    POWIQ     R/W     0x0        0x0        POW IQ interrupt enable                           
 <59>    TWSI2     R/W     0x0        0x0        2nd TWSI Interrupt enable                         
 <58>    MPI       R/W     0x0        0x0        MPI/SPI interrupt enable                          
 <57>    PCM       R/W     0x0        0x0        PCM/TDM interrupt enable                          
 <56>    NS        RAZ     0x0        0x0        Reserved for USB                                  
 <55:52> TIMER     R/W     0x0        0x0        General timer interrupt enables                   
 <51>    NS        RAZ     0x0        0x0        Reserved for SUM2                                 
 <50>    IPD_DRP   R/W     0x0        0x0        IPD QOS packet drop interrupt enable              
 <49:48> GMX_DRP   R/W     0x0        0x0        GMX packet drop interrupt enable                  
 <47:46> RESERVED0 R/W     0x0        0x0        Reserved.                                         
 <45>    TWSI      R/W     0x0        0x0        TWSI Interrupt enable                             
 <44>    NS        RAZ     NS         NS         Reserved.                                         
 <43:40> PCI_MSI   R/W     0x0        0x0        PCIe MSI enables                                  
 <39:36> PCI_INT   R/W     0x0        0x0        PCIe INTA/B/C/D enables                           
 <35:34> UART      R/W     0x0        0x0        Two UART interrupt enables                        
 <33:32> MBOX      R/W     0x0        0x0        Two mailbox/PCIe interrupt enables                
 <31:16> GPIO      R/W     0x0        0x0        16 GPIO interrupt enables                         
 <15:0>  WORKQ     R/W     0x0        0x0        16 work queue interrupt enables                   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_INT_EN1
 * 
 *  Enables for CIU_SUM1_PP@_IPx  or CIU_SUM1_IO@_INT
 *  CIU_INT0_EN1:  PP0/IP2
 *  CIU_INT1_EN1:  PP0/IP3
 *  CIU_INT2_EN1:  PP1/IP2
 *  CIU_INT3_EN1:  PP1/IP3
 *  CIU_INT4_EN1:  PP2/IP2
 *  CIU_INT5_EN1:  PP2/IP3
 *  CIU_INT6_EN1:  PP3/IP2
 *  CIU_INT7_EN1:  PP3/IP3
 *  .....
 *  (hole)
 *  CIU_INT32_EN1: IO0 (PEM0)
 *  CIU_INT33_EN1: IO1 (Reserved for o70)
 *  
 *  PPx/IP2 will be raised when...
 *  
 *  n = x*2
 *  PPx/IP2 = |({CIU_SUM2_PPx_IP2,CIU_SUM1_PPx_IP2, CIU_INTn_SUM0} &
 *  {CIU_EN2_PPx_IP2,CIU_INTn_EN1, CIU_INTn_EN0})
 *  
 *  PPx/IP3 will be raised when...
 *  
 *  n = x*2 + 1
 *  PPx/IP3 =  |({CIU_SUM2_PPx_IP3,CIU_SUM1_PPx_IP3, CIU_INTn_SUM0} &
 *  {CIU_EN2_PPx_IP3,CIU_INTn_EN1, CIU_INTn_EN0})
 *  
 *  PPx/IP4 will be raised when...
 *  PPx/IP4 = |({CIU_SUM1_PPx_IP4, CIU_INTx_SUM4} & {CIU_INTx_EN4_1, CIU_INTx_EN4_0})
 *  
 *  PCI/INT will be raised when...
 *  
 *  PCI/INT0 (PEM0)
 *  PCI/INT0 = |({CIU_SUM2_IO0_INT,CIU_SUM1_IO0_INT, CIU_INT32_SUM0} &
 *  {CIU_EN2_IO0_INT,CIU_INT32_EN1, CIU_INT32_EN0})
 *  
 *  PCI/INT1 is reserved for o70.
 *  PCI/INT1 = |({CIU_SUM2_IO1_INT,CIU_SUM1_IO1_INT, CIU_INT33_SUM0} &
 *  {CIU_EN2_IO1_INT,CIU_INT33_EN1, CIU_INT33_EN0})
 *  Attribute: -exempt_natural_alignment=a.
 * 
$CIU_INT(0..7,32..33)_EN1   Address=(0x1070000000208+a*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    RST        R/W/H   0x0        0x0        MIO RST interrupt enable                          
 <62:60> NS         R/W     0x0        0x0        Reserved.                                         
 <59:56> NS         R/W/H   0x0        0x0        Reserved for DFM expansion                        
 <55:53> NS         R/W     0x0        0x0        Reserved for LMC expansion                        
 <52>    LMC0       R/W     0x0        0x0        LMC0 interrupt enable                             
 <51>    NS         R/W     0x0        0x0        Reserved.                                         
 <50>    PEM2       R/W     0x0        0x0        PEM2 interrupt enable                             
 <49>    PEM1       R/W     0x0        0x0        PEM1 interrupt enable                             
 <48>    PEM0       R/W     0x0        0x0        PEM0 interrupt enable                             
 <47>    PTP        R/W     0x0        0x0        PTP interrupt enable                              
 <46>    AGL        R/W     0x0        0x0        AGL interrupt enable                              
 <45:44> NS         R/W     0x0        0x0        Reserved for future Interlaken                    
 <43:41> NS         R/W     0x0        0x0        Reserved.                                         
 <40>    DPI_DMA    R/W     0x0        0x0        DPI_DMA interrupt enable                          
 <39:38> NS         R/W     0x0        0x0        Reserved for GMX expansion                        
 <37>    AGX1       R/W     0x0        0x0        GMX1 interrupt enable                             
 <36>    AGX0       R/W     0x0        0x0        GMX0 interrupt enable                             
 <35>    DPI        R/W     0x0        0x0        DPI interrupt enable                              
 <34>    SLI        R/W     0x0        0x0        SLI interrupt enable                              
 <33>    USB        R/W     0x0        0x0        USBDRD0 interrupt enable                          
 <32>    DFA        R/W     0x0        0x0        DFA interrupt enable                              
 <31>    KEY        R/W     0x0        0x0        KEY interrupt enable                              
 <30>    RAD        R/W     0x0        0x0        RAD interrupt enable                              
 <29>    TIM        R/W     0x0        0x0        TIM interrupt enable                              
 <28>    RESERVED_1 R/W     0x0        0x0        Reserved.                                         
 <27>    PKO        R/W     0x0        0x0        PKO interrupt enable                              
 <26>    PIP        R/W     0x0        0x0        PIP interrupt enable                              
 <25>    IPD        R/W     0x0        0x0        IPD interrupt enable                              
 <24>    L2C        R/W     0x0        0x0        L2C interrupt enable                              
 <23>    POW        R/W     0x0        0x0        POW err interrupt enable                          
 <22>    FPA        R/W     0x0        0x0        FPA interrupt enable                              
 <21>    IOB        R/W     0x0        0x0        IOB interrupt enable                              
 <20>    MIO        R/W     0x0        0x0        MIO boot interrupt enable                         
 <19>    NAND       R/W     0x0        0x0        NAND / EMMC Controller interrupt enable           
                                                  Attribute: -exempt_keyword=True.
 <18>    NS         R/W/H   0x0        0x0        Reserved for additional Interrupts                
 <17>    USB1       R/W     0x0        0x0        USBDRD1 summary interrupt enable vector.          
 <16>    NS         RAZ     NS         NS         Reserved for Third UART interrupt                 
 <15:4>  NS         RAZ     NS         NS         Reserved.                                         
 <3:0>   WDOG       R/W     0x0        0x0        Watchdog summary interrupt enable vector.         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_TIM
 * 
 *  
 * 
$CIU_TIM(0..9)   Address=(0x1070000000480+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:37> NS       RAZ     NS         NS         Reserved.                                         
 <36>    ONE_SHOT R/W     0x0        0x0        One-shot mode                                     
 <35:0>  LEN      R/W     0x0        0x0        Timeout length in core clock cycles               
                                                Periodic interrupts will occur every LEN+1 core
                                                clock cycles when ONE_SHOT==0
                                                Timer disabled when LEN==0
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_TIM_MULTI_CAST
 * 
 *  
 * 
$CIU_TIM_MULTI_CAST   Address=(0x10700000004F0)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS    RAZ     NS         NS         Reserved.                                         
 <0>     EN    R/W     0x0        0x0        General Timer Interrupt Mutli-Cast mode:          
                                             0: Timer interrupt is common for all PP/IRQs.
                                             1: Timer interrupts are set at the same time for
                                             all PP/IRQs, but interrupt clearings can/need
                                             to be done Individually based on per cnMIPS core.
                                             Timer interrupts for IOs (@=32,33) will always use
                                             common interrupts. Clear any of the I/O interrupts
                                             will clear the common interrupt.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_WDOG
 * 
 *  
 * 
$CIU_WDOG(0..3)   Address=(0x1070000000500+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:46> NS      RAZ     NS         NS         Reserved.                                         
 <45>    GSTOPEN R/W     0x0        0x0        GSTOPEN                                           
 <44>    DSTOP   R/W     0x0        0x0        DSTOP                                             
 <43:20> CNT     RO/H    0x0        0x0        Number of 256-cycle intervals until next watchdog 
                                               expiration.  Cleared on write to associated
                                               CIU_PP_POKE register.
 <19:4>  LEN     R/W     0x0        0x0        Watchdog time expiration length                   
                                               The 16 bits of LEN represent the most significant
                                               bits of a 24 bit decrementer that decrements
                                               every 256 cycles.
                                               LEN must be set > 0
 <3:2>   STATE   RO/H    0x0        0x0        Watchdog state                                    
                                               number of watchdog time expirations since last
                                               PP poke.  Cleared on write to associated
                                               CIU_PP_POKE register.
 <1:0>   MODE    R/W     0x0        0x0        Watchdog mode                                     
                                               0 = Off
                                               1 = Interrupt Only
                                               2 = Interrupt + NMI
                                               3 = Interrupt + NMI + Soft-Reset
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_PP_POKE
 * 
 *  CIU_PP_POKE for CIU_WDOG
 * 
$CIU_PP_POKE(0..3)   Address=(0x1070000000580+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  POKE R/W/H   0x0        0x0        Any write to a CIU_PP_POKE register clears any pending interrupt generated
                                            by the associated watchdog, resets the CIU_WDOG[STATE] field, and set
                                            CIU_WDOG[CNT] to be (CIU_WDOG[LEN] << 8).
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_MBOX_SET
 * 
 *  
 * 
$CIU_MBOX_SET(0..3)   Address=(0x1070000000600+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  SET   R/W1S/H 0x0        0x0        On writes, set corresponding bit in MBOX register 
                                             on reads, return the MBOX register
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_MBOX_CLR
 * 
 *  
 * 
$CIU_MBOX_CLR(0..3)   Address=(0x1070000000680+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  CLR   R/W1C/H 0x0        0x0        On writes, clr corresponding bit in MBOX register 
                                             on reads, return the MBOX register
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_PP_RST
 * 
 *  Contains the reset control for each PP.  Value of '1' will hold a PP in reset, '0' will
 *  release.
 *  Resets to all 1's when REMOTE_BOOT is enabled, 0xe otherwise.  Writes to this register should
 *  occur
 *  only if the CIU3_PP_RST_PENDING register is cleared.
 *  On pass 2, RST_PP_POWER register can be statically set and writes to this register will
 *  automatically enable/disable power
 *  saving when RST_PP_POWER[GATE] is enabled.
 * 
$CIU_PP_RST   Address=(0x1070000000700)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS    RAZ     NS         NS         Reserved.                                         
 <3:1>   RST   R/W     0x7        0x0        Reset for PP's 3-1                                
 <0>     RST0  R/W     NS         NS         Reset for PP0                                     
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_PP_DBG
 * 
 *  
 * 
$CIU_PP_DBG   Address=(0x1070000000708)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS    RAZ     NS         NS         Reserved.                                         
 <3:0>   PPDBG RO      0x0        0x0        Debug[DM] value for each PP                       
                                             whether the PP's are in debug mode or not
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_GSTOP
 * 
 *  
 * 
$CIU_GSTOP   Address=(0x1070000000710)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS    RAZ     NS         NS         Reserved.                                         
 <0>     GSTOP R/W     0x0        0x0        GSTOP bit                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_NMI
 * 
 *  
 * 
$CIU_NMI   Address=(0x1070000000718)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS    RAZ     NS         NS         Reserved.                                         
 <3:0>   NMI   WO      0x0        0x0        Send NMI pulse to PP vector                       
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_DINT
 * 
 *  
 * 
$CIU_DINT   Address=(0x1070000000720)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS    RAZ     NS         NS         Reserved.                                         
 <3:0>   DINT  WO      0x0        0x0        Send DINT pulse to PP vector                      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_FUSE
 * 
 *  
 * 
$CIU_FUSE   Address=(0x1070000000728)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS    RAZ     NS         NS         Reserved.                                         
 <3:0>   FUSE  RO      NS         NS         Physical PP is present                            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_BIST
 * 
 *  
 * 
$CIU_BIST   Address=(0x1070000000730)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:3>  NS    RAZ     NS         NS         Reserved.                                         
 <2:0>   BIST  RO      0x0        0x0        BIST Results.                                     
                                             HW sets a bit in BIST for for memory that fails
                                             BIST.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_SOFT_BIST
 * 
 *  
 * 
$CIU_SOFT_BIST   Address=(0x1070000000738)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS        RAZ     NS         NS         Reserved.                                         
 <0>     SOFT_BIST RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_PP_RST_PENDING = CIU Cores Reset Pending Register
 * 
 *  This register contains the reset status for each core. A 1 indicated the core is waiting to
 *  change it's reset state.
 *  (Pass 2) Normally a reset change occurs immediately but if RST_PP_POWER[GATE] bit is set and
 *  the core is released from reset
 *  a delay of 64K core clocks per PP will occur to satisify power management.
 * 
$CIU_PP_RST_PENDING   Address=(0x1070000000740)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS    RAZ     NS         NS         Reserved.                                         
 <47:0>  PEND  RO      0x0        0x0        Core waiting on reset to deassert complete.  This register always returns zero on 70xx Pass 1.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_PCI_INTA
 * 
 *  
 * 
$CIU_PCI_INTA   Address=(0x1070000000750)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:2>  NS    RAZ     NS         NS         Reserved.                                         
 <1:0>   INTR  R/W     0x0        0x0        PCIe interrupt                                    
                                             These bits are observed in CIU_INTX_SUM0<33:32>
                                             where X=32-33
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_INTR_SLOWDOWN = CIU Interrupt Slow Down Register
 * 
 *  
 * 
$CIU_INTR_SLOWDOWN   Address=(0x10700000007D0)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:3>  NS    RAZ     NS         NS         Reserved.                                         
 <2:0>   CTL   R/W     0x0        0x0        Slow down CIU interrupt walker processing time. IRQ2/3/4 for all 48 cores are sent to the
                                             core (MRC) in a serial bus to reduce global routing. There is no backpressure mechanism
                                             designed for this scheme. It will only be a problem when SCLK is faster; this Control will
                                             slow down the data send out rate in INTR interface to PP. With different a setting, clock
                                             rate ratio can handle:
                                             SLOWDOWN sclk_freq/aclk_freq ratio
                                             0 3
                                             1 6
                                             n 3*2n
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GPIO_BIT_CFG = GPIO Bit Configuration Register
 * 
 *  
 * 
$GPIO_BIT_CFG(0..15)   Address=(0x1070000000800+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:21> NS         RAZ     NS         NS         Reserved.                                         
 <20:16> OUTPUT_SEL R/W     0x0        0x0        Selects GPIO output. When [TX_OE] is set, selects 
                                                  what output data is driven.
                                                    0x0 : TX Normal GPIO output, controlled by GPIO_TX.
                                                    0x1 : PTP_CKOUT, PTP CKOUT; see MIO_PTP_CLOCK_CFG.
                                                    0x2 : PTP_PPS, PTP PPS; see MIO_PTP_CLOCK_CFG.
                                                    0x3+a  :  CLK_SYNCE(0..1) see GPIO_CLK_SYNCE.
                                                    0x5+a  : MCD(0..2) Multi Core Debug output; see TBD
                                                    0x8    : LMC_ECC(0)  LMC ECC error detected.
                                                    0x9-0xf: Reserved.
                                                    0x10+a : GPIO_CLK_GEN(0..3), GPIO clock generator; See GPIO_CLK_GEN.
                                                    0x14   : USB0_VBUS_CTRL  see USB0 Vbus Control.
                                                    0x15   : SATA port0 cold presence power-on device.(p0_cp_pod)
                                                    0x16   : SATA port1 cold presence power-on device.(p1_cp_pod)
                                                    0x17   : SATA port0 LED  (p0_act_led)
                                                    0x18   : SATA port1 LED  (p1_act_led)
                                                    0x19   : USB1_VBUS_CTRL  see USB1 Vbus control.
                                                    0x1a-  : Reserved.
                                                  Note: GPIO[19:10] controls are ignored if PCM is enabled.  See PCM(0..3)_TDM_CFG
 <15:12> NS         RAZ     NS         NS         Reserved.                                         
 <11:8>  FIL_SEL    R/W     0x0        0x0        Global counter bit-select (controls sample rate)  
 <7:4>   FIL_CNT    R/W     0x0        0x0        Number of consecutive samples to change state     
 <3>     INT_TYPE   R/W     0x0        0x0        Type of interrupt                                 
                                                  0 = level (default)
                                                  1 = rising edge
 <2>     INT_EN     R/W     0x0        0x0        Bit mask to indicate which bits to raise interrupt
 <1>     RX_XOR     R/W     0x0        0x0        Invert the GPIO pin                               
 <0>     TX_OE      R/W     0x0        0x0        Drive the GPIO pin as an output pin               
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GPIO_RX_DAT = GPIO Receive Data
 * 
 *  
 * 
$GPIO_RX_DAT   Address=(0x1070000000880)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:20> NS    RAZ     NS         NS         Reserved.                                         
 <19:0>  DAT   RO/H    0x0        0x0        GPIO Read Data                                    
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GPIO_TX_SET = GPIO Transmit Data Set Register
 * 
 *  
 * 
$GPIO_TX_SET   Address=(0x1070000000888)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:20> NS    RAZ     NS         NS         Reserved.                                         
 <19:0>  SET   R/W1S/H 0x0        0x0        Bit mask to indicate which GPIO_TX_DAT bits to set
                                             to '1'. When read, SET returns the GPIO_TX_DAT
                                             storage.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GPIO_TX_CLR = GPIO Transmit Data Clear Register
 * 
 *  
 * 
$GPIO_TX_CLR   Address=(0x1070000000890)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:20> NS    RAZ     NS         NS         Reserved.                                         
 <19:0>  CLR   R/W1C/H 0x0        0x0        Bit mask to indicate which GPIO_TX_DAT bits to set
                                             to '0'. When read, CLR returns the GPIO_TX_DAT
                                             storage.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GPIO_INT_CLR = GPIO Interrupt Clear Register
 * 
 *  Interrupts are limited to GPIO bits 15:0
 * 
$GPIO_INT_CLR   Address=(0x1070000000898)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:0>  TYPE  R/W1C/H 0x0        0x0        Clear the interrupt rising edge detector          
                                             Attribute: -exempt_keyword=True.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GPIO_USBH_CTL
 * 
 *  Select GPIO0-19 received data (GPIO_RX_DAT[DAT]) routing to USB.
 *  The signals sent to USB from GPIO are filtered and optional inverted.
 * 
$GPIO_USBH_CTL   Address=(0x10700000008A0)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:13> NS    RAZ     NS         NS         Reserved.                                         
 <12:8>  SEL   R/W/H   0x1f       0x0        Selects the GPIO(0..19) received data (GPIO_RX_DAT[DAT]) for USB0
                                             over-current control. With SEL0 values 20-31, signal is always zero.
                                             CSR read out for bit 12..8 will have SEL1(4..0) value.
 <7:5>   NS    RAZ     NS         NS         Reserved.                                         
 <4:0>   SEL1  R/W/H   0x1f       0x0        Selects the GPIO(0..19) received data (GPIO_RX_DAT[DAT]) USB1
                                             over-current control. With SEL1 values 20-31, signal is always zero.
                                             CSR read out for bit 4..0 will have SEL(12..8) value.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GPIO_SATA_CTL
 * 
 *  Select GPIO0-19 received data (GPIO_RX_DAT[DAT]) routing to SATA.
 *  The signals sent to SATA from GPIO are filtered and optional inverted.
 * 
$GPIO_SATA_CTL   Address=(0x10700000008A8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:25> NS    RAZ     NS         NS         Reserved.                                         
 <24:20> SEL4  R/W     0x1f       0x0        Selects the GPIO(0..19) received data (GPIO_RX_DAT[DAT]) for SATA
                                             port1 cold presence detect(p1_cp_det).
                                             With SEL values 20-31, signal is always zero.
 <19:15> SEL3  R/W     0x1f       0x0        Selects the GPIO(0..19) received data (GPIO_RX_DAT[DAT]) for SATA
                                             port0 cold presence detect(p0_cp_det).
                                             With SEL values 20-31, signal is always zero.
 <14:10> SEL2  R/W     0x1f       0x0        Selects the GPIO(0..19) received data (GPIO_RX_DAT[DAT]) for SATA
                                             port1 mechanical presence detect(p1_mp_switch).
                                             With SEL values 20-31, signal is always zero.
 <9:5>   SEL1  R/W     0x1f       0x0        Selects the GPIO(0..19) received data (GPIO_RX_DAT[DAT]) for SATA
                                             port0 mechanical presence detect(p0_mp_switch).
                                             With SEL values 20-31, signal is always zero.
 <4:0>   SEL0  R/W     0x1f       0x0        Selects the GPIO(0..19) received data (GPIO_RX_DAT[DAT]) for SATA
                                             compliance lab loopback testing(lab_lb_pin).
                                             With SEL values 20-31, signal is always zero.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GPIO_MULTI_CAST = GPIO Multicast Control
 * 
 *  GPIO<7..4> have the option of operating in GPIO Interrupt Multicast mode.  In this mode,
 *  the PP GPIO interrupts (CIU_INT<0-7>_SUM0/CIU_INT<0-3>_SUM4[GPIO<7..4>] values are
 *  stored per cnMIPS core.
 *  For GPIO<7..4> (x=4-7)
 *  When GPIO_MULTI_CAST[EN] = 1:
 *      When GPIO_BIT_CFGx[INT_EN]==1 &  GPIO_BIT_CFGx[INT_TYPE]==1 (edge detection and interrupt
 *  enabled)
 *        * Reads to CIU_INT<0-7>_SUM0/<0-3>_SUM4[GPIO<x>] will return a unique interrupt state
 *  per
 *          cnMIPS core.
 *        * Reads to CIU_INT32/33_SUM0/4[GPIO<x>] will return the common GPIO<x>
 *          interrupt state.
 *        * Write of '1' to CIU_INT<0-7>_SUM0/<0-3>_SUM4[GPIO<x>] will clear the individual
 *          interrupt associated with the cnMIPS core.
 *        * Write of '1' to CIU_INT32/33_SUM0/4[GPIO<x>] will clear the common GPIO<x>
 *          interrupt state.
 *        * Write of '1' to GPIO_INT_CLR[TYPE<x>] will clear all
 *          CIU_INT*_SUM0/4[GPIO<x>] state across all cnMIPS cores and common GPIO<x> interrupt
 *  states.
 *      When GPIO_BIT_CFGx[INT_EN]==0 or GPIO_BIT_CFGx[INT_TYPE]==0,
 *        * either leveled interrupt or interrupt not enabled, write of '1' to
 *  CIU_INT*_SUM0/4[GPIO<x>]
 *          will have no effects.
 *   When GPIO_MULTI_CAST[EN] = 0:
 *      * Write of '1' to CIU_INT_SUM0/4[GPIO<x>] will have no effects, as this field is RO,
 *        backward compatible with o63.
 *      When GPIO_BIT_CFGx[INT_EN]==1 &  GPIO_BIT_CFGx[INT_TYPE]==1 (edge detection and interrupt
 *  enabled)
 *        * Reads to CIU_INT*_SUM0/4[GPIO<x>] will return the common GPIO<X> interrupt state.
 *        * Write of '1' to GPIO_INT_CLR[TYPE<x>] will clear all
 *          CIU_INT*_SUM0/4[GPIO<x>] state across all cnMIPS cores and common GPIO<x> interrupt
 *  states.
 *      When GPIO_BIT_CFGx[INT_EN]==0 or GPIO_BIT_CFGx[INT_TYPE]==0,
 *        * either leveled interrupt or interrupt not enabled, write of '1' to
 *  CIU_INT*_SUM0/4[GPIO<x>]
 *          will have no effects.
 *  
 *  GPIO<19..8> and GPIO<3..0> will never be in multicast mode as those don't have per cnMIPS
 *  capabilities.
 *  For GPIO<y> (y=0-3,8-19):
 *  When GPIO_BIT_CFGx[INT_EN]==1 &  GPIO_BIT_CFGx[INT_TYPE]==1 (edge detection and interrupt
 *  enabled):
 *     * Reads to CIU_INT*_SUM0/4[GPIO<y>] will return the common GPIO<y> interrupt state.
 *     * Write of '1' to GPIO_INT_CLR[TYPE<y>] will clear all CIU_INT*_SUM0/4[GPIO<y>] common
 *  GPIO<y>
 *       interrupt states.
 *     When GPIO_MULTI_CAST[EN] = 1:
 *       * Write of '1' to CIU_INT*_SUM0/4[GPIO<y>] will clear the common GPIO<y> interrupt state.
 *     When GPIO_MULTI_CAST[EN] = 0:
 *       * Write of '1' to CIU_INT*_SUM0/4[GPIO<y>] has no effect, as this field is RO,
 *         backward compatible to o63.
 *  When GPIO_BIT_CFGx[INT_EN]==0 or GPIO_BIT_CFGx[INT_TYPE]==0,
 *     * either leveled interrupt or interrupt not enabled, write of '1' to
 *  CIU_INT*_SUM0/4[GPIO<y>]
 *       will have no effects.
 *  NOTE:  Whenever there is mode change, (GPIO_BIT_CFGx[INT_EN] or  GPIO_BIT_CFGx[INT_TYPE] or
 *  GPIO_MULTI_CAST[EN])
 *  software needs to write to  $GPIO_INT_CLR to clear up all pending/stale interrupts.
 * 
$GPIO_MULTI_CAST   Address=(0x10700000008B0)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS    RAZ     NS         NS         Reserved.                                         
 <0>     EN    R/W     0x0        0x0        Enable GPIO Interrupt Multicast mode              
                                             When EN is set, GPIO<7:4> will function in
                                             multicast mode allowing these four GPIOs to
                                             interrupt multi-cores.
                                             Multicast functionality allows the GPIO to exist
                                             as per cnMIPS interrupts as opposed to a global
                                             interrupt.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GPIO_OCLA_EXTEN_TRIG = GPIO OCLA External Trigger Register
 * 
 *  
 * 
$GPIO_OCLA_EXTEN_TRIG   Address=(0x10700000008B8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  NS     RAZ     NS         NS         Reserved.                                         
 <5>     M_TRIG R/W     0x0        NS         Manual Trigger.  Used only when SEL=1F.           
 <4:0>   SEL    R/W     0x1f       0x0        Selects the GPIO(0..19) input pin or Manual Trigger to use in the OCLA coprocessor for triggering.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GPIO_CLK_GEN = GPIO Clock Generation
 * 
 *  
 * 
$GPIO_CLK_GEN(0..3)   Address=(0x10700000008C0+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  N     R/W     0x0        NS         Determines the frequency of the GPIO clk generator
                                             NOTE: Fgpio_clk = Feclk * N / 2^32
                                             N = (Fgpio_clk / Feclk) * 2^32
                                             NOTE: writing N == 0 stops the clock generator
                                             N  should be <= 2^31-1.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GPIO_CLK_SYNCE
 * 
 *  
 * 
$GPIO_CLK_SYNCE(0..1)   Address=(0x10700000008E0+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:10> NS       RAZ     NS         NS         Reserved.                                         
 <9:8>   DLM_SEL  R/W     0x1        0x1        Selects clock source from                         
                                                00 = Disabled
                                                01 = DLM0
                                                10 = DLM1
                                                11 = DLM2
 <7:3>   NS       RAZ     NS         NS         Reserved.                                         
 <2>     DIV      R/W     0x0        0x0        Internal clock divider                            
                                                0=DIV2
                                                1=DIV4
 <1>     NS       R/W     0x0        0x0        Reserved.                                         
 <0>     LANE_SEL R/W     0x0        0x0        Selects which RX lane clock from DLMx to use as   
                                                the GPIO internal DLMx clock.  The GPIO block can
                                                support upto two unique clocks to send out any
                                                GPIO pin as configured by
                                                $GPIO_BIT_CFG[OUTPUT_SEL]
                                                The clock can either be a divided by 2 or divide
                                                by 4 of the selected RX lane clock.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * GPIO_XBIT_CFG
 *  This register has the same bit fields as GPIO_BIT_CFG(0..15).
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 *  Attribute: -inherits=GPIO_BIT_CFG(0..15).
 * 
$GPIO_XBIT_CFG(16..19)   Address=(0x1070000000880+a*0x8)   Bus=(NCB)


 * 
 * CIU_INT_SUM4
 * 
 *  CIU_INT0_SUM4:   PP0  /IP4
 *  CIU_INT1_SUM4:   PP1  /IP4
 *  ...
 *  CIU_INT3_SUM4:   PP3  /IP4
 * 
$CIU_INT(0..3)_SUM4   Address=(0x1070000000C00+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    BOOTDMA    RO/H    0x0        0x0        Boot bus DMA engines Interrupt                    
                                                  See MIO_NDF_DMA_INT
 <62>    NS         RO/H    0x0        0x0        Reserved.                                         
 <61>    IPDPPTHR   RO/H    0x0        0x0        IPD per-port counter threshold interrupt          
                                                  See IPD_PORT_QOS_INT*
 <60>    POWIQ      RO/H    0x0        0x0        POW IQ interrupt                                  
                                                  See POW_IQ_INT
 <59>    TWSI2      RO/H    0x0        0x0        2nd TWSI Interrupt                                
                                                  See MIO_TWS1_INT
 <58>    MPI        R/W1C/H 0x0        0x0        MPI/SPI interrupt                                 
 <57>    PCM        RO/H    0x0        0x0        PCM/TDM interrupt                                 
 <56>    NS         RO/H    0x0        0x0        Reserved.                                         
 <55:52> TIMER      R/W1C/H 0x0        0x0        General timer 0-3 interrupts                      
                                                  When CIU_TIM_MULTI_CAST[EN] == 0, this interrupt is
                                                  common for all PP/IRQs, writing '1' to any PP/IRQ
                                                  will clear all TIMERx(x=0..9) interrupts.
                                                  When CIU_TIM_MULTI_CAST[EN] == 1, TIMERx(x=0..9)
                                                  are set at the same time, but clearing are based on
                                                  per cnMIPS core. See CIU_TIM_MULTI_CAST for detail.
                                                  The combination of this field and the
                                                  CIU_SUM2_*[TIMER] field implement all 10 CIU_TIM*
                                                  interrupts.
 <51>    SUM2       RO/H    0x0        0x0        SUM2&EN2 SUMMARY bit                              
                                                  This read-only bit reads as a one whenever any
                                                  CIU_SUM2_PP@_IPx (CIU_SUM2_IO@_INT)  bit is set
                                                  and corresponding enable bit in CIU_EN2_PP@_IPx
                                                  (CIU_EN2_IO@_INT) is set.
                                                  Note that WDOG_SUM only summarizes the SUM2/EN2
                                                  result and does not have a corresponding enable
                                                  bit, so does not directly contribute to
                                                  interrupts.
 <50>    IPD_DRP    R/W1C/H 0x0        0x0        IPD QOS packet drop interrupt                     
                                                  Set any time PIP/IPD drops a packet
 <49:48> GMX_DRP    R/W1C/H 0x0        0x0        GMX packet drop interrupt                         
                                                  Set any time corresponding GMX drops a packet
 <47:46> RESERVED_0 R/W1C/H 0x0        0x0        Reserved.                                         
 <45>    TWSI       RO/H    0x0        0x0        TWSI Interrupt                                    
                                                  See MIO_TWS0_INT
 <44>    WDOG_SUM   RO/H    0x0        0x0        SUM1&EN1 summary bit                              
                                                  This read-only bit reads as a one whenever any
                                                  CIU_SUM1_PP@_IPx (CIU_SUM1_IO@_INT)  bit is set
                                                  and corresponding enable bit in CIU_INTx_EN is set
                                                  PPs use CIU_INTx_SUM0 where x=0-19
                                                  PCIe uses the CIU_INTx_SUM0 where x=32-33.
                                                  Note that WDOG_SUM only summarizes the SUM1/EN1
                                                  result and does not have a corresponding enable
                                                  bit, so does not directly contribute to
                                                  interrupts.
 <43:40> PCI_MSI    RO/H    0x0        0x0        PCIe MSI                                          
                                                  See SLI_MSI_RCVn for bit <40+n>
 <39:36> PCI_INT    RO/H    0x0        0x0        PCIe INTA/B/C/D                                   
                                                  Refer to "Receiving Emulated INTA/INTB/
                                                  INTC/INTD" in the SLI chapter of the spec
                                                  PCI_INT<3> = INTD
                                                  PCI_INT<2> = INTC
                                                  PCI_INT<1> = INTB
                                                  PCI_INT<0> = INTA
 <35:34> UART       RO/H    0x0        0x0        Two UART interrupts                               
                                                  See MIO_UARTn_IIR[IID] for bit <34+n>
 <33:32> MBOX       RO/H    0x0        0x0        Two mailbox interrupts        for entries 0-5     
                                                  [33] is the or of <31:16>
                                                  [32] is the or of <15:0>
 <31:16> GPIO       R/W1C/H 0x0        0x0        16 GPIO interrupts                                
                                                  When GPIO_MULTI_CAST[EN] == 1
                                                  Write 1 to clear either the per PP interrupt or
                                                  common GPIO interrupt for all PP/IOs,depending
                                                  on mode setting. This will apply to all 16 GPIOs.
                                                  See GPIO_MULTI_CAST for all details
                                                  When GPIO_MULTI_CAST[EN] == 0
                                                  Read Only, retain the same behavior as o63.
 <15:0>  WORKQ      RO/H    0x0        0x0        16 work queue interrupts                          
                                                  See POW_WQ_INT[WQ_INT]
                                                  1 bit/group. A copy of the R/W1C bit in the POW.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_INT_EN4_0
 * 
 *  CIU_INT0_EN4_0:   PP0  /IP4
 *  CIU_INT1_EN4_0:   PP1  /IP4
 *  ...
 *  CIU_INT3_EN4_0:   PP3  /IP4
 * 
$CIU_INT(0..3)_EN4_0   Address=(0x1070000000C80+a*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    BOOTDMA    R/W     0x0        0x0        Boot bus DMA engines Interrupt        enable      
 <62>    NS         R/W     0x0        0x0        Reserved.                                         
 <61>    IPDPPTHR   R/W     0x0        0x0        IPD per-port counter threshold interrupt enable   
 <60>    POWIQ      R/W     0x0        0x0        POW IQ interrupt enable                           
 <59>    TWSI2      R/W     0x0        0x0        2nd TWSI Interrupt enable                         
 <58>    MPI        R/W     0x0        0x0        MPI/SPI interrupt enable                          
 <57>    PCM        R/W     0x0        0x0        PCM/TDM interrupt enable                          
 <56>    NS         RAZ     0x0        0x0        Reserved for USB interrupt                        
 <55:52> TIMER      R/W     0x0        0x0        General timer interrupt enables                   
 <51>    NS         RAZ     0x0        0x0        Reserved for Key Zeroization interrupt            
 <50>    IPD_DRP    R/W     0x0        0x0        IPD QOS packet drop interrupt enable              
 <49:48> GMX_DRP    R/W     0x0        0x0        GMX packet drop interrupt enable                  
 <47:46> RESERVED_0 R/W     0x0        0x0        Reserved.                                         
 <45>    TWSI       R/W     0x0        0x0        TWSI Interrupt enable                             
 <44>    NS         RAZ     NS         NS         Reserved.                                         
 <43:40> PCI_MSI    R/W     0x0        0x0        PCIe MSI enables                                  
 <39:36> PCI_INT    R/W     0x0        0x0        PCIe INTA/B/C/D enables                           
 <35:34> UART       R/W     0x0        0x0        Two UART interrupt enables                        
 <33:32> MBOX       R/W     0x0        0x0        Two mailbox interrupt enables                     
 <31:16> GPIO       R/W     0x0        0x0        16 GPIO interrupt enables                         
 <15:0>  WORKQ      R/W     0x0        0x0        16 work queue interrupt enables                   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_INT_EN4_1
 * 
 *  PPx/IP4 will be raised when...
 *   PPx/IP4 = |({CIU_SUM1_PPx_IP4, CIU_INTx_SUM4} & {CIU_INTx_EN4_1, CIU_INTx_EN4_0})
 * 
$CIU_INT(0..3)_EN4_1   Address=(0x1070000000C88+a*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    RST        R/W     0x0        0x0        MIO RST interrupt enable                          
 <62:60> NS         R/W     0x0        0x0        Reserved.                                         
 <59:56> NS         R/W     0x0        0x0        Reserved for DFM expansion                        
 <55:53> NS         R/W     0x0        0x0        Reserved for LMC expansion                        
 <52>    LMC0       R/W     0x0        0x0        LMC0 interrupt enable                             
 <51>    NS         R/W     0x0        0x0        Reserved.                                         
 <50>    PEM2       R/W     0x0        0x0        PEM2 interrupt enable                             
 <49>    PEM1       R/W     0x0        0x0        PEM1 interrupt enable                             
 <48>    PEM0       R/W     0x0        0x0        PEM0 interrupt enable                             
 <47>    PTP        R/W     0x0        0x0        PTP interrupt enable                              
 <46>    AGL        R/W     0x0        0x0        AGL interrupt enable                              
 <45:44> NS         R/W     0x0        0x0        Reserved for future Interlaken                    
 <43:41> NS         R/W     0x0        0x0        Reserved.                                         
 <40>    DPI_DMA    R/W     0x0        0x0        DPI_DMA interrupt enable                          
 <39:38> NS         R/W     0x0        0x0        Reserved for GMX expansion                        
 <37>    AGX1       R/W     0x0        0x0        GMX1 interrupt enable                             
 <36>    AGX0       R/W     0x0        0x0        GMX0 interrupt enable                             
 <35>    DPI        R/W     0x0        0x0        DPI interrupt enable                              
 <34>    SLI        R/W     0x0        0x0        SLI interrupt enable                              
 <33>    USB        R/W     0x0        0x0        USBDRD0 interrupt enable                          
 <32>    DFA        R/W     0x0        0x0        DFA interrupt enable                              
 <31>    KEY        R/W     0x0        0x0        KEY interrupt enable                              
 <30>    RAD        R/W     0x0        0x0        RAD interrupt enable                              
 <29>    TIM        R/W     0x0        0x0        TIM interrupt enable                              
 <28>    RESERVED_1 R/W     0x0        0x0        Reserved.                                         
 <27>    PKO        R/W     0x0        0x0        PKO interrupt enable                              
 <26>    PIP        R/W     0x0        0x0        PIP interrupt enable                              
 <25>    IPD        R/W     0x0        0x0        IPD interrupt enable                              
 <24>    L2C        R/W     0x0        0x0        L2C interrupt enable                              
 <23>    POW        R/W     0x0        0x0        POW err interrupt enable                          
 <22>    FPA        R/W     0x0        0x0        FPA interrupt enable                              
 <21>    IOB        R/W     0x0        0x0        IOB interrupt enable                              
 <20>    MIO        R/W     0x0        0x0        MIO boot interrupt enable                         
 <19>    NAND       R/W     0x0        0x0        NAND / EMMC Controller interrupt enable           
                                                  Attribute: -exempt_keyword=True.
 <18>    NS         R/W/H   0x0        0x0        Reserved for additional Interrupts                
 <17>    USB1       R/W     0x0        0x0        USBDRD1 summary interrupt enable vector           
 <16>    NS         RAZ     NS         NS         Reserved for Third UART interrupt                 
 <15:4>  NS         RAZ     NS         NS         Reserved.                                         
 <3:0>   WDOG       R/W     0x0        0x0        Watchdog summary interrupt enable vector          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_PTP_CLOCK_CFG = Configuration
 * 
 *  
 * 
$MIO_PTP_CLOCK_CFG   Address=(0x1070000000F00)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field        Field   Reset      Typical    Field                                             
 Pos     Name         Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:42> NS           RAZ     NS         NS         Reserved.                                         
 <41>    PPS          RO      NS         0x0        PTP PPS Output                                    
                                                    reflects ptp__pps after PPS_INV inverter
 <40>    CKOUT        RO      NS         0x0        PTP Clock Output                                  
                                                    reflects ptp__ckout after CKOUT_INV inverter
 <39:38> EXT_CLK_EDGE R/W     0x0        0x0        External Clock input edge                         
                                                    00 = rising edge
                                                    01 = falling edge
                                                    10 = both rising & falling edge
                                                    11 = reserved
 <37:32> NS           RAZ     NS         NS         Reserved.                                         
 <31>    PPS_INV      R/W     0x0        0x0        Invert PTP PPS                                    
                                                    0 = don't invert
                                                    1 = invert
 <30>    PPS_EN       R/W     0x0        0x0        Enable PTP PPS                                    
 <29:26> NS           RAZ     NS         NS         Reserved.                                         
 <25>    CKOUT_INV    R/W     0x0        0x0        Invert PTP Clock Out                              
                                                    0 = don't invert
                                                    1 = invert
 <24>    CKOUT_EN     R/W     0x0        0x0        Enable PTP Clock Out                              
 <23:18> EVCNT_IN     R/W     0x0        0x0        Source for event counter input                    
                                                    0x00-0x0f : GPIO[EVCNT_IN[3:0]]
                                                    0x20      : GPIO[16]
                                                    0x21      : GPIO[17]
                                                    0x22      : GPIO[18]
                                                    0x23      : GPIO[19]
                                                    0x10      : QLM0_REF_CLK
                                                    0x11      : QLM1_REF_CLK
                                                    0x12      : QLM2_REF_CLK
                                                    0x13-0x1f : Reserved
                                                    0x24-0x3f : Reserved
 <17>    EVCNT_EDGE   R/W     0x0        0x0        Event counter input edge                          
                                                    0 = falling edge
                                                    1 = rising edge
 <16>    EVCNT_EN     R/W     0x0        0x0        Enable event counter                              
 <15:10> TSTMP_IN     R/W     0x0        0x0        Source for timestamp input                        
                                                    0x00-0x0f : GPIO[TSTMP_IN[3:0]]
                                                    0x20      : GPIO[16]
                                                    0x21      : GPIO[17]
                                                    0x22      : GPIO[18]
                                                    0x23      : GPIO[19]
                                                    0x10      : QLM0_REF_CLK
                                                    0x11      : QLM1_REF_CLK
                                                    0x12      : QLM2_REF_CLK
                                                    0x13-0x1f : Reserved
                                                    0x24-0x3f : Reserved
 <9>     TSTMP_EDGE   R/W     0x0        0x0        External timestamp input edge                     
                                                    0 = falling edge
                                                    1 = rising edge
 <8>     TSTMP_EN     R/W     0x0        0x0        Enable external timestamp                         
 <7:2>   EXT_CLK_IN   R/W     0x0        0x0        Source for external clock                         
                                                    0x00-0x0f : GPIO[EXT_CLK_IN[3:0]]
                                                    0x20      : GPIO[16]
                                                    0x21      : GPIO[17]
                                                    0x22      : GPIO[18]
                                                    0x23      : GPIO[19]
                                                    0x10      : QLM0_EF_CLK
                                                    0x11      : QLM1_REF_CLK
                                                    0x12      : QLM2_REF_CLK
                                                    0x13-0x1f : Reserved
                                                    0x24-0x3f : Reserved
 <1>     EXT_CLK_EN   R/W     0x0        0x0        Use external clock                                
 <0>     PTP_EN       R/W     0x0        0x0        Enable PTP Module                                 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_PTP_CLOCK_LO = Lo bytes of CLOCK
 * 
 *  
 * 
$MIO_PTP_CLOCK_LO   Address=(0x1070000000F08)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS        RAZ     NS         NS         Reserved.                                         
 <31:0>  FRNANOSEC R/W     0x0        0x0        Fractions of Nanoseconds                          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_PTP_CLOCK_HI = Hi bytes of CLOCK
 * 
 *  Writes to MIO_PTP_CLOCK_HI also clear MIO_PTP_CLOCK_LO. To update all 96 bits, write
 *  MIO_PTP_CLOCK_HI followed
 *  by MIO_PTP_CLOCK_LO
 * 
$MIO_PTP_CLOCK_HI   Address=(0x1070000000F10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  NANOSEC R/W     0x0        0x0        Nanoseconds                                       
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_PTP_CLOCK_COMP = Compensator
 * 
 *  
 * 
$MIO_PTP_CLOCK_COMP   Address=(0x1070000000F18)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NANOSEC   R/W     0x0        0x0        Nanoseconds                                       
 <31:0>  FRNANOSEC R/W     0x0        0x0        Fractions of Nanoseconds                          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_PTP_TIMESTAMP = Timestamp latched on MIO_PTP_CLOCK_CFG[TSTMP_EDGE] edge of MIO_PTP_CLOCK_CFG[TSTMP_IN]
 * 
 *  
 * 
$MIO_PTP_TIMESTAMP   Address=(0x1070000000F20)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  NANOSEC R/W     0x0        0x0        Nanoseconds                                       
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_PTP_EVT_CNT = Event Counter
 * 
 *  Writes to MIO_PTP_EVT_CNT increment this register by the written data. The register counts
 *  down by
 *  1 for every MIO_PTP_CLOCK_CFG[EVCNT_EDGE] edge of MIO_PTP_CLOCK_CFG[EVCNT_IN]. When register
 *  equals
 *  0, an interrupt gets generated
 * 
$MIO_PTP_EVT_CNT   Address=(0x1070000000F28)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  CNTR R/W     0x0        0x0        Nanoseconds                                       
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_PTP_CKOUT_THRESH_LO = Lo bytes of PTP Clock Out
 * 
 *  
 * 
$MIO_PTP_CKOUT_THRESH_LO   Address=(0x1070000000F30)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS        RAZ     NS         NS         Reserved.                                         
 <31:0>  FRNANOSEC R/W     0xffffffff 0x0        Fractions of Nanoseconds                          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_PTP_CKOUT_THRESH_HI = Hi bytes of PTP Clock Out
 * 
 *  Writes to MIO_PTP_CKOUT_THRESH_HI also clear MIO_PTP_CKOUT_THRESH_LO. To update all 96 bits,
 *  write MIO_PTP_CKOUT_THRESH_HI followed
 *  by MIO_PTP_CKOUT_THRESH_LO
 * 
$MIO_PTP_CKOUT_THRESH_HI   Address=(0x1070000000F38)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  NANOSEC R/W     0xffffffffffffffffL 0x0        Nanoseconds                                       
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_PTP_CKOUT_HI_INCR = PTP Clock Out Hi Increment
 * 
 *  
 * 
$MIO_PTP_CKOUT_HI_INCR   Address=(0x1070000000F40)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NANOSEC   R/W     0x0        0x0        Nanoseconds                                       
 <31:0>  FRNANOSEC R/W     0x0        0x0        Fractions of Nanoseconds                          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_PTP_CKOUT_LO_INCR = PTP Clock Out Lo Increment
 * 
 *  
 *  Attribute: -dv_fc_scratch=ALL.
 * 
$MIO_PTP_CKOUT_LO_INCR   Address=(0x1070000000F48)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NANOSEC   R/W     0x0        0x0        Nanoseconds                                       
 <31:0>  FRNANOSEC R/W     0x0        0x0        Fractions of Nanoseconds                          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_PTP_PPS_THRESH_LO = Lo bytes of PTP PPS
 * 
 *  
 * 
$MIO_PTP_PPS_THRESH_LO   Address=(0x1070000000F50)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS        RAZ     NS         NS         Reserved.                                         
 <31:0>  FRNANOSEC R/W     0xffffffff 0x0        Fractions of Nanoseconds                          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_PTP_PPS_THRESH_HI = Hi bytes of PTP PPS
 * 
 *  Writes to MIO_PTP_PPS_THRESH_HI also clear MIO_PTP_PPS_THRESH_LO. To update all 96 bits, write
 *  MIO_PTP_PPS_THRESH_HI followed
 *  by MIO_PTP_PPS_THRESH_LO
 * 
$MIO_PTP_PPS_THRESH_HI   Address=(0x1070000000F58)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  NANOSEC R/W     0xffffffffffffffffL 0x0        Nanoseconds                                       
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_PTP_PPS_HI_INCR = PTP PPS Hi Increment
 * 
 *  
 * 
$MIO_PTP_PPS_HI_INCR   Address=(0x1070000000F60)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NANOSEC   R/W     0x0        0x0        Nanoseconds                                       
 <31:0>  FRNANOSEC R/W     0x0        0x0        Fractions of Nanoseconds                          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_PTP_PPS_LO_INCR = PTP PPS Lo Increment
 * 
 *  
 * 
$MIO_PTP_PPS_LO_INCR   Address=(0x1070000000F68)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NANOSEC   R/W     0x0        0x0        Nanoseconds                                       
 <31:0>  FRNANOSEC R/W     0x0        0x0        Fractions of Nanoseconds                          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MPI_CFG = SPI_MPI Interface Control register
 * 
 *  
 * 
$MPI_CFG   Address=(0x1070000001000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:29> NS       RAZ     NS         NS         Reserved.                                         
 <28:16> CLKDIV   R/W     0x0        0x0        Fspi_clk = Fsclk / (2 * CLKDIV)                   
                                                CLKDIV = Fsclk / (2 * Fspi_clk)
 <15>    CSENA3   R/W     0x0        0x0        If 0, UART1_RTS_L/SPI_CS3_L pin is UART pin       
                                                1, UART1_RTS_L/SPI_CS3_L pin is SPI pin
                                                SPI_CS3_L drives UART1_RTS_L/SPI_CS3_L
 <14>    CSENA2   R/W     0x0        0x0        If 0, UART1_CTS_L/SPI_CS2_L pin is UART pin       
                                                1, UART1_CTS_L/SPI_CS2_L pin is SPI pin
                                                SPI_CS2_L drives  UART1_CTS_L/SPI_CS2_L
 <13>    CSENA1   R/W     0x0        0x0        If 0, BOOT_CE_N<7>/SPI_CS1_L pin is BOOT pin      
                                                1, BOOT_CE_N<7>/SPI_CS1_L pin is SPI pin
                                                SPI_CS1_L drives BOOT_CE_N<7>/SPI_CS1_L
 <12>    CSENA0   R/W     0x0        0x0        If 0, BOOT_CE_N<6>/SPI_CS0_L pin is BOOT pin      
                                                1, BOOT_CE_N<6>/SPI_CS0_L pin is SPI pin
                                                SPI_CS0_L drives BOOT_CE_N<6>/SPI_CS0_L
 <11>    CSLATE   R/W     0x0        0x0        If 0, SPI_CS asserts 1/2 SCLK before transaction  
                                                1, SPI_CS assert coincident with transaction
                                                NOTE: This control apply for 2 CSs
 <10>    TRITX    R/W     0x0        0x0        If 0, SPI_DO pin is driven when slave is not      
                                                expected to be driving
                                                1, SPI_DO pin is tristated when not transmitting
                                                NOTE: only used when WIREOR==1
 <9:8>   IDLECLKS R/W     0x0        0x0        Guarantee IDLECLKS idle sclk cycles between       
                                                commands.
 <7>     CSHI     R/W     0x0        0x0        If 0, CS is low asserted                          
                                                1, CS is high asserted
 <6>     NS       RAZ     NS         NS         Reserved.                                         
 <5>     INT_ENA  R/W     0x0        0x0        If 0, polling is required                         
                                                1, MPI engine interrupts @ end of transaction
 <4>     LSBFIRST R/W     0x0        0x0        If 0, shift MSB first                             
                                                1, shift LSB first
 <3>     WIREOR   R/W     0x0        0x0        If 0, SPI_DO and SPI_DI are separate wires (SPI)  
                                                SPI_DO pin is always driven
                                                1, SPI_DO/DI is all from SPI_DO pin (MPI)
                                                SPI_DO pin is tristated when not transmitting
                                                NOTE: if WIREOR==1, SPI_DI pin is not used by the
                                                MPI engine
 <2>     CLK_CONT R/W     0x0        0x0        If 0, clock idles to value given by IDLELO after  
                                                completion of MPI transaction
                                                1, clock never idles, requires CS deassertion
                                                assertion between commands
 <1>     IDLELO   R/W     0x0        0x0        0 = SPI_CK idles high, first transition is high-to-low. This mode corresponds to SPI Block
                                                Guide options CPOL = 1, CPHA = 1.
                                                1 = SPI_CK idles low, first transition is low-to-high. This mode corresponds to SPI Block
                                                Guide options CPOL = 0, CPHA = 0.
 <0>     ENABLE   R/W     0x0        0x0        MPI/SPI master enable.                            
                                                0 = UART0_DTR_L/SPI_DO, UART0_DCD_L/SPI_DI,  pins are UART pins.
                                                1 = UART0_DTR_L/SPI_DO and UART0_DCD_L/SPI_DI pins are MPI/SPI pins.
                                                This bit must be set for CSENA0-3 to operate as MPI/SPI Chip Selects
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MPI_STS = MPI Status
 * 
 *  
 * 
$MPI_STS   Address=(0x1070000001008)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:13> NS    RAZ     NS         NS         Reserved.                                         
 <12:8>  RXNUM RO/H    0x0        0x0        Number of bytes written for transaction           
 <7:1>   NS    RAZ     NS         NS         Reserved.                                         
 <0>     BUSY  RO/H    0x0        0x0        If 0, no MPI transaction in progress              
                                             1, MPI engine is processing a transaction
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MPI_TX = MPI Transmit Control
 * 
 *  
 * 
$MPI_TX   Address=(0x1070000001010)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:22> NS      WO      NS         NS         Reserved.                                         
 <21:20> CSID    WO      NS         0x0        Which CS to assert for this transaction           
 <19:17> NS      WO      NS         NS         Reserved.                                         
 <16>    LEAVECS WO      NS         0x0        If 0, deassert CS after transaction is done       
                                               1, leave CS asserted after transactrion is done
 <15:13> NS      WO      NS         NS         Reserved.                                         
 <12:8>  TXNUM   WO      NS         0x1        Number of bytes to transmit                       
 <7:5>   NS      WO      NS         NS         Reserved.                                         
 <4:0>   TOTNUM  WO      NS         0x2        Number of bytes to shift (transmit + receive)     
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MPI_WIDE_DAT = MPI Wide Data Register
 * 
 *  This register aliases operations to MPI_DAT(0..7) in a single access
 * 
$MPI_WIDE_DAT   Address=(0x1070000001040)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  DATA R/W/H   NS         NS         Data to transmit/receive.                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MPI_DAT = MPI Byte Data Registers
 * 
 *  
 * 
$MPI_DAT(0..8)   Address=(0x1070000001080+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:0>   DATA  R/W/H   NS         NS         Data to transmit/received                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_INT_EN0_W1C
 * 
 *  Write-1-to-clear version of the CIU_INTx_EN0 register, read back corresponding CIU_INTx_EN0
 *  value.
 *  CIU_INT33_EN0_W1C is reserved.
 *  Attribute: -exempt_natural_alignment=a.
 * 
$CIU_INT(0..7,32..33)_EN0_W1C   Address=(0x1070000002200+a*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    BOOTDMA    R/W1C/H 0x0        0x0        Write 1 to clear Boot bus DMA engines Interrupt   
                                                  enable
 <62>    NS         R/W1C   0x0        0x0        Reserved.                                         
 <61>    IPDPPTHR   R/W1C/H 0x0        0x0        Write 1 to clear IPD per-port counter threshold   
                                                  interrupt enable
 <60>    POWIQ      R/W1C/H 0x0        0x0        Write 1 to clear POW IQ interrupt enable          
 <59>    TWSI2      R/W1C/H 0x0        0x0        Write 1 to clear 2nd TWSI Interrupt enable        
 <58>    MPI        R/W1C/H 0x0        0x0        Write 1 to clear MPI/SPI interrupt enable         
 <57>    PCM        R/W1C/H 0x0        0x0        Write 1 to clear PCM/TDM interrupt enable         
 <56>    NS         RAZ     0x0        0x0        Reserved for USB interrupt enable                 
 <55:52> TIMER      R/W1C/H 0x0        0x0        Write 1 to clear General timer interrupt enables  
 <51>    NS         RAZ     0x0        0x0        Reserved for SUM2 interrupt enable                
 <50>    IPD_DRP    R/W1C/H 0x0        0x0        Write 1 to clear IPD QOS packet drop interrupt    
                                                  enable
 <49:48> GMX_DRP    R/W1C/H 0x0        0x0        Write 1 to clear GMX packet drop interrupt enable 
 <47:46> RESERVED_0 R/W1C/H 0x0        0x0        Reserved.                                         
 <45>    TWSI       R/W1C/H 0x0        0x0        Write 1 to clear TWSI Interrupt enable            
 <44>    NS         RAZ     NS         NS         Reserved.                                         
 <43:40> PCI_MSI    R/W1C/H 0x0        0x0        Write 1s to clear PCIe MSI enables                
 <39:36> PCI_INT    R/W1C/H 0x0        0x0        Write 1s to clear PCIe INTA/B/C/D enables         
 <35:34> UART       R/W1C/H 0x0        0x0        Write 1s to clear UART interrupt enables          
 <33:32> MBOX       R/W1C/H 0x0        0x0        Write 1s to clear mailbox/PCIe interrupt          
                                                  enables
 <31:16> GPIO       R/W1C/H 0x0        0x0        Write 1s to clear GPIO interrupt enables          
 <15:0>  WORKQ      R/W1C/H 0x0        0x0        Write 1s to clear work queue interrupt enables    
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_INT_EN1_W1C
 * 
 *  Write-1-to-clear version of the CIU_INT@_EN1 register, read back corresponding CIU_INT@_EN1
 *  value.
 *  CIU_INT33_EN1_W1C is reserved.
 *  Attribute: -exempt_natural_alignment=a.
 * 
$CIU_INT(0..7,32..33)_EN1_W1C   Address=(0x1070000002208+a*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    RST        R/W1C/H 0x0        0x0        Write 1 to clear MIO RST interrupt enable         
 <62:60> NS         R/W1C   0x0        0x0        Reserved.                                         
 <59:56> NS         R/W1C/H 0x0        0x0        Reserved for DFM expansion                        
 <55:53> NS         R/W1C   0x0        0x0        Reserved for LMC expansion                        
 <52>    LMC0       R/W1C/H 0x0        0x0        Write 1 to clear LMC0 interrupt enable            
 <51>    NS         R/W1C   0x0        0x0        Reserved.                                         
 <50>    PEM2       R/W1C/H 0x0        0x0        Write 1 to clear PEM2 interrupt enable            
 <49>    PEM1       R/W1C/H 0x0        0x0        Write 1 to clear PEM1 interrupt enable            
 <48>    PEM0       R/W1C/H 0x0        0x0        Write 1 to clear PEM0 interrupt enable            
 <47>    PTP        R/W1C/H 0x0        0x0        Write 1 to clear PTP interrupt enable             
 <46>    AGL        R/W1C/H 0x0        0x0        Write 1 to clear AGL interrupt enable             
 <45:44> NS         R/W1C   0x0        0x0        Reserved for future Interlaken                    
 <43:41> NS         R/W1C   0x0        0x0        Reserved.                                         
 <40>    DPI_DMA    R/W1C/H 0x0        0x0        Write 1 to clear DPI_DMA interrupt enable         
 <39:38> NS         R/W1C   0x0        0x0        Reserved for GMX expansion                        
 <37>    AGX1       R/W1C/H 0x0        0x0        Write 1 to clear GMX1 interrupt enable            
 <36>    AGX0       R/W1C/H 0x0        0x0        Write 1 to clear GMX0 interrupt enable            
 <35>    DPI        R/W1C/H 0x0        0x0        Write 1 to clear DPI interrupt enable             
 <34>    SLI        R/W1C/H 0x0        0x0        Write 1 to clear SLI interrupt enable             
 <33>    USB        R/W1C/H 0x0        0x0        Write 1 to clear USBDRD0 interrupt enable         
 <32>    DFA        R/W1C/H 0x0        0x0        Write 1 to clear DFA interrupt enable             
 <31>    KEY        R/W1C/H 0x0        0x0        Write 1 to clear KEY interrupt enable             
 <30>    RAD        R/W1C/H 0x0        0x0        Write 1 to clear RAD interrupt enable             
 <29>    TIM        R/W1C/H 0x0        0x0        Write 1 to clear TIM interrupt enable             
 <28>    RESERVED_1 R/W1C   0x0        0x0        Reserved for future Interlaken                    
 <27>    PKO        R/W1C/H 0x0        0x0        Write 1 to clear PKO interrupt enable             
 <26>    PIP        R/W1C/H 0x0        0x0        Write 1 to clear PIP interrupt enable             
 <25>    IPD        R/W1C/H 0x0        0x0        Write 1 to clear IPD interrupt enable             
 <24>    L2C        R/W1C/H 0x0        0x0        Write 1 to clear L2C interrupt enable             
 <23>    POW        R/W1C/H 0x0        0x0        Write 1 to clear POW err interrupt enable         
 <22>    FPA        R/W1C/H 0x0        0x0        Write 1 to clear FPA interrupt enable             
 <21>    IOB        R/W1C/H 0x0        0x0        Write 1 to clear IOB interrupt enable             
 <20>    MIO        R/W1C/H 0x0        0x0        Write 1 to clear MIO boot interrupt enable        
 <19>    NAND       R/W1C/H 0x0        0x0        Write 1 to clear NAND / EMMC Controller interrupt 
                                                  enable
                                                  Attribute: -exempt_keyword=True.
 <18>    NS         R/W1C/H 0x0        0x0        Reserved for additional Interrupts                
 <17>    USB1       R/W1C/H 0x0        0x0        Write 1s to clear USBDRD1 summary interrupt enable
 <16>    NS         RAZ     NS         NS         Reserved for Third UART interrupt                 
 <15:4>  NS         RAZ     NS         NS         Reserved.                                         
 <3:0>   WDOG       R/W1C/H 0x0        0x0        Write 1s to clear Watchdog summary interrupt enable
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_INT_EN4_0_W1C
 * 
 *  Write-1-to-clear version of the CIU_INTx_EN4_0 register, read back corresponding
 *  CIU_INTx_EN4_0 value.
 * 
$CIU_INT(0..3)_EN4_0_W1C   Address=(0x1070000002C80+a*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    BOOTDMA    R/W1C/H 0x0        0x0        Write 1 to clear Boot bus DMA engines Interrupt enable
 <62>    NS         R/W1C   0x0        0x0        Reserved.                                         
 <61>    IPDPPTHR   R/W1C/H 0x0        0x0        Write 1 to clear IPD per-port counter threshold interrupt enable
 <60>    POWIQ      R/W1C/H 0x0        0x0        Write 1 to clear POW IQ interrupt enable          
 <59>    TWSI2      R/W1C/H 0x0        0x0        Write 1 to clear 2nd TWSI Interrupt enable        
 <58>    MPI        R/W1C/H 0x0        0x0        Write 1 to clear MPI/SPI interrupt enable         
 <57>    PCM        R/W1C/H 0x0        0x0        Write 1 to clear PCM/TDM interrupt enable         
 <56>    NS         RAZ     0x0        0x0        Reserved for USB interrupt enable                 
 <55:52> TIMER      R/W1C/H 0x0        0x0        Write 1 to clear General timer interrupt enables  
 <51>    NS         RAZ     0x0        0x0        Reserved for SUM2 interrupt enable                
 <50>    IPD_DRP    R/W1C/H 0x0        0x0        Write 1 to clear IPD QOS packet drop interrupt enable
 <49:48> GMX_DRP    R/W1C/H 0x0        0x0        Write 1 to clear GMX packet drop interrupt enable 
 <47:46> RESERVED_0 R/W1C/H 0x0        0x0        Reserved.                                         
 <45>    TWSI       R/W1C/H 0x0        0x0        Write 1 to clear TWSI Interrupt enable            
 <44>    NS         RAZ     NS         NS         Reserved.                                         
 <43:40> PCI_MSI    R/W1C/H 0x0        0x0        Write 1s to clear PCIe MSI enables                
 <39:36> PCI_INT    R/W1C/H 0x0        0x0        Write 1s to clear PCIe INTA/B/C/D enables         
 <35:34> UART       R/W1C/H 0x0        0x0        Write 1s to clear UART interrupt enables          
 <33:32> MBOX       R/W1C/H 0x0        0x0        Write 1s to clear mailbox interrupt enables       
 <31:16> GPIO       R/W1C/H 0x0        0x0        Write 1s to clear GPIO interrupt enables          
 <15:0>  WORKQ      R/W1C/H 0x0        0x0        Write 1s to clear work queue interrupt enables    
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_INT_EN4_1_W1C
 * 
 *  Write-1-to-clear version of the CIU_INT@_EN4_1 register, read back corresponding
 *  CIU_INT@_EN4_1 value.
 * 
$CIU_INT(0..3)_EN4_1_W1C   Address=(0x1070000002C88+a*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    RST        R/W1C/H 0x0        0x0        Write 1 to clear MIO RST interrupt enable         
 <62:60> NS         R/W1C   0x0        0x0        Reserved.                                         
 <59:56> NS         R/W1C/H 0x0        0x0        Reserved for DFM expansion                        
 <55:53> NS         R/W1C   0x0        0x0        Reserved for LMC expansion                        
 <52>    LMC0       R/W1C/H 0x0        0x0        Write 1 to clear LMC0 interrupt enable            
 <51>    NS         R/W1C   0x0        0x0        Reserved.                                         
 <50>    PEM2       R/W1C/H 0x0        0x0        Write 1 to clear PEM2 interrupt enable            
 <49>    PEM1       R/W1C/H 0x0        0x0        Write 1 to clear PEM1 interrupt enable            
 <48>    PEM0       R/W1C/H 0x0        0x0        Write 1 to clear PEM0 interrupt enable            
 <47>    PTP        R/W1C/H 0x0        0x0        Write 1 to clear PTP interrupt enable             
 <46>    AGL        R/W1C/H 0x0        0x0        Write 1 to clear AGL interrupt enable             
 <45:44> NS         R/W1C   0x0        0x0        Reserved for future Interlaken                    
 <43:41> NS         R/W1C   0x0        0x0        Reserved.                                         
 <40>    DPI_DMA    R/W1C/H 0x0        0x0        Write 1 to clear DPI_DMA interrupt enable         
 <39:38> NS         R/W1C   0x0        0x0        Reserved for GMX expansion                        
 <37>    AGX1       R/W1C/H 0x0        0x0        Write 1 to clear GMX1 interrupt enable            
 <36>    AGX0       R/W1C/H 0x0        0x0        Write 1 to clear GMX0 interrupt enable            
 <35>    DPI        R/W1C/H 0x0        0x0        Write 1 to clear DPI interrupt enable             
 <34>    SLI        R/W1C/H 0x0        0x0        Write 1 to clear SLI interrupt enable             
 <33>    USB        R/W1C/H 0x0        0x0        Write 1 to clear USBDRD0 interrupt enable         
 <32>    DFA        R/W1C/H 0x0        0x0        Write 1 to clear DFA interrupt enable             
 <31>    KEY        R/W1C/H 0x0        0x0        Write 1 to clear KEY interrupt enable             
 <30>    RAD        R/W1C/H 0x0        0x0        Write 1 to clear RAD interrupt enable             
 <29>    TIM        R/W1C/H 0x0        0x0        Write 1 to clear TIM interrupt enable             
 <28>    RESERVED_1 R/W1C   0x0        0x0        Reserved.                                         
 <27>    PKO        R/W1C/H 0x0        0x0        Write 1 to clear PKO interrupt enable             
 <26>    PIP        R/W1C/H 0x0        0x0        Write 1 to clear PIP interrupt enable             
 <25>    IPD        R/W1C/H 0x0        0x0        Write 1 to clear IPD interrupt enable             
 <24>    L2C        R/W1C/H 0x0        0x0        Write 1 to clear L2C interrupt enable             
 <23>    POW        R/W1C/H 0x0        0x0        Write 1 to clear POW err interrupt enable         
 <22>    FPA        R/W1C/H 0x0        0x0        Write 1 to clear FPA interrupt enable             
 <21>    IOB        R/W1C/H 0x0        0x0        Write 1 to clear IOB interrupt enable             
 <20>    MIO        R/W1C/H 0x0        0x0        Write 1 to clear MIO boot interrupt enable        
 <19>    NAND       R/W1C/H 0x0        0x0        Write 1 to clear NAND / EMMC Controller interrupt 
                                                  enable
                                                  Attribute: -exempt_keyword=True.
 <18>    NS         R/W1C/H 0x0        0x0        Reserved for additional Interrupts                
 <17>    USB1       R/W1C/H 0x0        0x0        Write 1s to clear USBDRD1 summary interrupt enable
 <16>    NS         RAZ     NS         NS         Reserved for Third UART interrupt                 
 <15:4>  NS         RAZ     NS         NS         Reserved.                                         
 <3:0>   WDOG       R/W1C/H 0x0        0x0        Write 1s to clear Watchdog summary interrupt enable
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_INT_EN0_W1S
 * 
 *  Write-1-to-set version of the CIU_INTx_EN0 register, read back corresponding CIU_INTx_EN0
 *  value.
 *  CIU_INT33_EN0_W1S is reserved.
 *  Attribute: -exempt_natural_alignment=a.
 * 
$CIU_INT(0..7,32..33)_EN0_W1S   Address=(0x1070000006200+a*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    BOOTDMA    R/W1S/H 0x0        0x0        Write 1 to set Boot bus DMA engines Interrupt enable
 <62>    NS         R/W1S/H 0x0        0x0        Reserved.                                         
 <61>    IPDPPTHR   R/W1S/H 0x0        0x0        Write 1 to set IPD per-port counter threshold interrupt enable
 <60>    POWIQ      R/W1S/H 0x0        0x0        Write 1 to set POW IQ interrupt enable            
 <59>    TWSI2      R/W1S/H 0x0        0x0        Write 1 to set 2nd TWSI Interrupt enable          
 <58>    MPI        R/W1S/H 0x0        0x0        Write 1 to set MPI/SPI interrupt enable           
 <57>    PCM        R/W1S/H 0x0        0x0        Write 1 to set PCM/TDM interrupt enable           
 <56>    NS         RAZ     0x0        0x0        Reserved for USB interrupt enable                 
 <55:52> TIMER      R/W1S/H 0x0        0x0        Write 1 to set General timer interrupt enables    
 <51>    NS         RAZ     0x0        0x0        Reserved for Key Zeroization interrupt enable     
 <50>    IPD_DRP    R/W1S/H 0x0        0x0        Write 1 to set IPD QOS packet drop interrupt      
                                                  enable
 <49:48> GMX_DRP    R/W1S/H 0x0        0x0        Write 1 to set GMX packet drop interrupt enable   
 <47:46> RESERVED_0 R/W1S/H 0x0        0x0        Reserved for Key Zeroization interrupt enable     
 <45>    TWSI       R/W1S/H 0x0        0x0        Write 1 to set TWSI Interrupt enable              
 <44>    NS         RAZ     NS         NS         Reserved.                                         
 <43:40> PCI_MSI    R/W1S/H 0x0        0x0        Write 1s to set PCIe MSI enables                  
 <39:36> PCI_INT    R/W1S/H 0x0        0x0        Write 1s to set PCIe INTA/B/C/D enables           
 <35:34> UART       R/W1S/H 0x0        0x0        Write 1s to set UART interrupt enables            
 <33:32> MBOX       R/W1S/H 0x0        0x0        Write 1s to set mailbox/PCIe interrupt            
                                                  enables
 <31:16> GPIO       R/W1S/H 0x0        0x0        Write 1s to set GPIO interrupt enables            
 <15:0>  WORKQ      R/W1S/H 0x0        0x0        Write 1s to set work queue interrupt enables      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_INT_EN1_W1S
 * 
 *  Write-1-to-set version of the CIU_INT@_EN1 register, read back corresponding CIU_INT@_EN1
 *  value.
 *  CIU_INT33_EN1_W1S is reserved.
 *  Attribute: -exempt_natural_alignment=a.
 * 
$CIU_INT(0..7,32..33)_EN1_W1S   Address=(0x1070000006208+a*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    RST        R/W1S/H 0x0        0x0        Write 1 to set MIO RST interrupt enable           
 <62:60> NS         R/W1S   0x0        0x0        Reserved.                                         
 <59:56> NS         R/W1S/H 0x0        0x0        Reserved for DFM expansion                        
 <55:53> NS         R/W1S   0x0        0x0        Reserved for LMC expansion                        
 <52>    LMC0       R/W1S/H 0x0        0x0        Write 1 to set LMC0 interrupt enable              
 <51>    NS         R/W1S   0x0        0x0        Reserved.                                         
 <50>    PEM2       R/W1S/H 0x0        0x0        Write 1 to set PEM2 interrupt enable              
 <49>    PEM1       R/W1S/H 0x0        0x0        Write 1 to set PEM1 interrupt enable              
 <48>    PEM0       R/W1S/H 0x0        0x0        Write 1 to set PEM0 interrupt enable              
 <47>    PTP        R/W1S/H 0x0        0x0        Write 1 to set PTP interrupt enable               
 <46>    AGL        R/W1S/H 0x0        0x0        Write 1 to set AGL interrupt enable               
 <45:44> NS         R/W1S   0x0        0x0        Reserved for future Interlaken                    
 <43:41> NS         R/W1S   0x0        0x0        Reserved.                                         
 <40>    DPI_DMA    R/W1S/H 0x0        0x0        Write 1 to set DPI_DMA interrupt enable           
 <39:38> NS         R/W1S   0x0        0x0        Reserved for GMX expansion                        
 <37>    AGX1       R/W1S/H 0x0        0x0        Write 1 to set GMX1 interrupt enable              
 <36>    AGX0       R/W1S/H 0x0        0x0        Write 1 to set GMX0 interrupt enable              
 <35>    DPI        R/W1S/H 0x0        0x0        Write 1 to set DPI interrupt enable               
 <34>    SLI        R/W1S/H 0x0        0x0        Write 1 to set SLI interrupt enable               
 <33>    USB        R/W1S/H 0x0        0x0        Write 1 to set USBDRD0 interrupt enable           
 <32>    DFA        R/W1S/H 0x0        0x0        Write 1 to set DFA interrupt enable               
 <31>    KEY        R/W1S/H 0x0        0x0        Write 1 to set KEY interrupt enable               
 <30>    RAD        R/W1S/H 0x0        0x0        Write 1 to set RAD interrupt enable               
 <29>    TIM        R/W1S/H 0x0        0x0        Write 1 to set TIM interrupt enable               
 <28>    RESERVED_1 R/W1S   0x0        0x0        Reserved.                                         
 <27>    PKO        R/W1S/H 0x0        0x0        Write 1 to set PKO interrupt enable               
 <26>    PIP        R/W1S/H 0x0        0x0        Write 1 to set PIP interrupt enable               
 <25>    IPD        R/W1S/H 0x0        0x0        Write 1 to set IPD interrupt enable               
 <24>    L2C        R/W1S/H 0x0        0x0        Write 1 to set L2C interrupt enable               
 <23>    POW        R/W1S/H 0x0        0x0        Write 1 to set POW err interrupt enable           
 <22>    FPA        R/W1S/H 0x0        0x0        Write 1 to set FPA interrupt enable               
 <21>    IOB        R/W1S/H 0x0        0x0        Write 1 to set IOB interrupt enable               
 <20>    MIO        R/W1S/H 0x0        0x0        Write 1 to set MIO boot interrupt enable          
 <19>    NAND       R/W1S/H 0x0        0x0        Write 1 to set NAND / EMMC Controller interrupt   
                                                  enable
                                                  Attribute: -exempt_keyword=True.
 <18>    NS         R/W1S/H 0x0        0x0        Reserved for additional Interrupts                
 <17>    USB1       R/W1S/H 0x0        0x0        Write 1s to set USBDRD1 summary interrupt enable  
 <16>    NS         RAZ     NS         NS         Reserved for Third UART interrupt                 
 <15:4>  NS         RAZ     NS         NS         Reserved.                                         
 <3:0>   WDOG       R/W1S/H 0x0        0x0        Write 1s to set Watchdog summary interrupt enable 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_INT_EN4_0_W1S
 * 
 *  Write-1-to-set version of the CIU_INT@_EN4_0 register, read back corresponding CIU_INT@_EN4_0
 *  value.
 * 
$CIU_INT(0..3)_EN4_0_W1S   Address=(0x1070000006C80+a*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    BOOTDMA    R/W1S/H 0x0        0x0        Write 1 to set Boot bus DMA engines Interrupt     
                                                  enable
 <62>    NS         R/W1S/H 0x0        0x0        Reserved.                                         
 <61>    IPDPPTHR   R/W1S/H 0x0        0x0        Write 1 to set IPD per-port counter threshold     
                                                  interrupt enable
 <60>    POWIQ      R/W1S/H 0x0        0x0        Write 1 to set POW IQ interrupt enable            
 <59>    TWSI2      R/W1S/H 0x0        0x0        Write 1 to set 2nd TWSI Interrupt enable          
 <58>    MPI        R/W1S/H 0x0        0x0        Write 1 to set MPI/SPI interrupt enable           
 <57>    PCM        R/W1S/H 0x0        0x0        Write 1 to set PCM/TDM interrupt enable           
 <56>    NS         RAZ     0x0        0x0        Reserved for USB interrupt enable                 
 <55:52> TIMER      R/W1S/H 0x0        0x0        Write 1 to set General timer interrupt enables    
 <51>    NS         RAZ     0x0        0x0        Reserved for SUM2 interrupt enable                
 <50>    IPD_DRP    R/W1S/H 0x0        0x0        Write 1 to set IPD QOS packet drop interrupt      
                                                  enable
 <49:48> GMX_DRP    R/W1S/H 0x0        0x0        Write 1 to set GMX packet drop interrupt enable   
 <47:46> RESERVED_0 R/W1S/H 0x0        0x0        Reserved.                                         
 <45>    TWSI       R/W1S/H 0x0        0x0        Write 1 to set TWSI Interrupt enable              
 <44>    NS         RAZ     NS         NS         Reserved.                                         
 <43:40> PCI_MSI    R/W1S/H 0x0        0x0        Write 1s to set PCIe MSI enables                  
 <39:36> PCI_INT    R/W1S/H 0x0        0x0        Write 1s to set PCIe INTA/B/C/D enables           
 <35:34> UART       R/W1S/H 0x0        0x0        Write 1s to set UART interrupt enables            
 <33:32> MBOX       R/W1S/H 0x0        0x0        Write 1s to set mailbox interrupt enables         
 <31:16> GPIO       R/W1S/H 0x0        0x0        Write 1s to set GPIO interrupt enables            
 <15:0>  WORKQ      R/W1S/H 0x0        0x0        Write 1s to set work queue interrupt enables      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_INT_EN4_1_W1S
 * 
 *  Write-1-to-set version of the CIU_INT@_EN4_1 register, read back corresponding CIU_INT@_EN4_1
 *  value.
 * 
$CIU_INT(0..3)_EN4_1_W1S   Address=(0x1070000006C88+a*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    RST        R/W1S/H 0x0        0x0        Write 1 to set MIO RST interrupt enable           
 <62:60> NS         R/W1S   0x0        0x0        Reserved.                                         
 <59:56> NS         R/W1S/H 0x0        0x0        Reserved for DFM expansion                        
 <55:53> NS         R/W1S   0x0        0x0        Reserved for LMC expansion                        
 <52>    LMC0       R/W1S/H 0x0        0x0        Write 1 to set LMC0 interrupt enable              
 <51>    NS         R/W1S   0x0        0x0        Reserved.                                         
 <50>    PEM2       R/W1S/H 0x0        0x0        Write 1 to set PEM2 interrupt enable              
 <49>    PEM1       R/W1S/H 0x0        0x0        Write 1 to set PEM1 interrupt enable              
 <48>    PEM0       R/W1S/H 0x0        0x0        Write 1 to set PEM0 interrupt enable              
 <47>    PTP        R/W1S/H 0x0        0x0        Write 1 to set PTP interrupt enable               
 <46>    AGL        R/W1S/H 0x0        0x0        Write 1 to set AGL interrupt enable               
 <45:44> NS         R/W1S   0x0        0x0        Reserved for future Interlaken                    
 <43:41> NS         R/W1S   0x0        0x0        Reserved.                                         
 <40>    DPI_DMA    R/W1S/H 0x0        0x0        Write 1 to set DPI_DMA interrupt enable           
 <39:38> NS         R/W1S   0x0        0x0        Reserved for GMX expansion                        
 <37>    AGX1       R/W1S/H 0x0        0x0        Write 1 to set GMX1 interrupt enable              
 <36>    AGX0       R/W1S/H 0x0        0x0        Write 1 to set GMX0 interrupt enable              
 <35>    DPI        R/W1S/H 0x0        0x0        Write 1 to set DPI interrupt enable               
 <34>    SLI        R/W1S/H 0x0        0x0        Write 1 to set SLI interrupt enable               
 <33>    USB        R/W1S/H 0x0        0x0        Write 1 to set USBDRD0 interrupt enable           
 <32>    DFA        R/W1S/H 0x0        0x0        Write 1 to set DFA interrupt enable               
 <31>    KEY        R/W1S/H 0x0        0x0        Write 1 to set KEY interrupt enable               
 <30>    RAD        R/W1S/H 0x0        0x0        Write 1 to set RAD interrupt enable               
 <29>    TIM        R/W1S/H 0x0        0x0        Write 1 to set TIM interrupt enable               
 <28>    RESERVED_1 R/W1S   0x0        0x0        Reserved for LMC expansion                        
 <27>    PKO        R/W1S/H 0x0        0x0        Write 1 to set PKO interrupt enable               
 <26>    PIP        R/W1S/H 0x0        0x0        Write 1 to set PIP interrupt enable               
 <25>    IPD        R/W1S/H 0x0        0x0        Write 1 to set IPD interrupt enable               
 <24>    L2C        R/W1S/H 0x0        0x0        Write 1 to set L2C interrupt enable               
 <23>    POW        R/W1S/H 0x0        0x0        Write 1 to set POW err interrupt enable           
 <22>    FPA        R/W1S/H 0x0        0x0        Write 1 to set FPA interrupt enable               
 <21>    IOB        R/W1S/H 0x0        0x0        Write 1 to set IOB interrupt enable               
 <20>    MIO        R/W1S/H 0x0        0x0        Write 1 to set MIO boot interrupt enable          
 <19>    NAND       R/W1S/H 0x0        0x0        Write 1 to set NAND / EMMC Controller interrupt   
                                                  enable
                                                  Attribute: -exempt_keyword=True.
 <18>    NS         R/W1S/H 0x0        0x0        Reserved for additional Interrupts                
 <17>    USB1       R/W1S/H 0x0        0x0        Write 1s to set USBDRD1 summary interrupt enable  
 <16>    NS         RAZ     NS         NS         Reserved for Third UART interrupt                 
 <15:4>  NS         RAZ     NS         NS         Reserved.                                         
 <3:0>   WDOG       R/W1S/H 0x0        0x0        Write 1s to set Watchdog summary interrupt enable 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_SUM1_PP_IP2
 * 
 *  SUM1 becomes per IPx in o65/6 and afterwards. Only Field <40> DPI_DMA will have
 *  different value per PP(IP) for  $CIU_SUM1_PPx_IPy, and <40> DPI_DMA will always
 *  be zero for  $CIU_SUM1_IO@_INT. All other fields ([63:41] and [39:0]) values  are idential for
 *  different PPs, same value as $CIU_INT_SUM1.
 *  Write to any IRQ's PTP fields will clear PTP for all IRQ's PTP field.
 * 
$CIU_SUM1_PP(0..3)_IP2   Address=(0x1070000008000+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    RST     RO/H    0x0        0x0        MIO RST interrupt                                 
                                               See MIO_RST_INT
 <62:60> NS      RAZ     NS         NS         Reserved.                                         
 <59:56> NS      RAZ     NS         NS         Reserved for DFM expansion                        
 <55:53> NS      RAZ     NS         NS         Reserved for LMC expansion                        
 <52>    LMC0    RO/H    0x0        0x0        LMC0 interrupt                                    
                                               See LMC0_INT
 <51>    NS      RAZ     NS         NS         Reserved.                                         
 <50>    PEM2    RO/H    0x0        0x0        PEM2 interrupt                                    
                                               See PEM2_INT_SUM (enabled by PEM2_INT_ENB)
 <49>    PEM1    RO/H    0x0        0x0        PEM1 interrupt                                    
                                               See PEM1_INT_SUM (enabled by PEM1_INT_ENB)
 <48>    PEM0    RO/H    0x0        0x0        PEM0 interrupt                                    
                                               See PEM0_INT_SUM (enabled by PEM0_INT_ENB)
 <47>    PTP     R/W1C/H 0x0        0x0        PTP interrupt                                     
                                               Set when HW decrements MIO_PTP_EVT_CNT to zero
 <46>    AGL     RO/H    0x0        0x0        AGL interrupt                                     
                                               See AGL_GMX_RX*_INT_REG, AGL_GMX_TX_INT_REG
 <45:44> NS      RAZ     NS         NS         Reserved for future Interlaken                    
 <43:41> NS      RAZ     NS         NS         Reserved.                                         
 <40>    DPI_DMA RO/H    0x0        0x0        DPI DMA instruction completion interrupt.         
                                               This bit is different for each CIU_SUM1_PPx.
                                               TBD, See DPI DMA instruction completion
 <39:38> NS      RAZ     NS         NS         Reserved for GMX expansion                        
 <37>    AGX1    RO/H    0x0        0x0        GMX1 interrupt                                    
                                               See GMX1_RX*_INT_REG, GMX1_TX_INT_REG,
                                               PCS1_INT*_REG, PCSX1_INT_REG
 <36>    AGX0    RO/H    0x0        0x0        GMX0 interrupt                                    
                                               See GMX0_RX*_INT_REG, GMX0_TX_INT_REG,
                                               PCS0_INT*_REG, PCSX0_INT_REG
 <35>    DPI     RO/H    0x0        0x0        DPI interrupt                                     
                                               See DPI_INT_REG
 <34>    SLI     RO/H    0x0        0x0        SLI interrupt                                     
                                               See SLI_INT_SUM (enabled by SLI_INT_ENB_CIU)
 <33>    USB     RO/H    0x0        0x0        USBDRD0 interrupt. (CIU_CIB_USBDRD(0)_RAW[0] & CIU_CIB_USBDRD(0)_EN(0))
                                               See CIU_CIB_USBDRD(0)_RAW[0] and CIU_CIB_USBDRD(0)_EN(0)
 <32>    DFA     RO/H    0x0        0x0        DFA interrupt                                     
                                               See DFA_ERROR
 <31>    KEY     RO/H    0x0        0x0        KEY interrupt                                     
                                               See KEY_INT_SUM
 <30>    RAD     RO/H    0x0        0x0        RAD interrupt                                     
                                               See RAD_REG_ERROR
 <29>    TIM     RO/H    0x0        0x0        TIM interrupt                                     
                                               See TIM_REG_ERROR
 <28>    NS      RAZ     NS         NS         Reserved.                                         
 <27>    PKO     RO/H    0x0        0x0        PKO interrupt                                     
                                               See PKO_REG_ERROR
 <26>    PIP     RO/H    0x0        0x0        PIP interrupt                                     
                                               See PIP_INT_REG
 <25>    IPD     RO/H    0x0        0x0        IPD interrupt                                     
                                               See IPD_INT_SUM
 <24>    L2C     RO/H    0x0        0x0        L2C interrupt                                     
                                               See L2C_INT_REG
 <23>    POW     RO/H    0x0        0x0        POW err interrupt                                 
                                               See POW_ECC_ERR
 <22>    FPA     RO/H    0x0        0x0        FPA interrupt                                     
                                               See FPA_INT_SUM
 <21>    IOB     RO/H    0x0        0x0        IOB interrupt                                     
                                               See IOB_INT_SUM
 <20>    MIO     RO/H    0x0        0x0        MIO boot interrupt                                
                                               See MIO_BOOT_ERR
 <19>    NAND    RO/H    0x0        0x0        NAND / EMMC Controller interrupt                  
                                               See NAND / EMMC interrupt
                                               Attribute: -exempt_keyword=True.
 <18>    NS      RAZ     NS         NS         Reserved for additional Interrupts                
 <17>    USB1    RO/H    0x0        0x0        USBDRD1 interrupts. |(CIU_CIB_USBDRD(1)_RAW[0] & CIU_CIB_USBDRD1(1)_EN[0]).
                                               See CIU_CIB_USBDRD(1)_RAW[0] and CIU_CIB_USBDRD(1)_EN[0].
 <16>    NS      RAZ     NS         NS         Reserved for Third UART interrupt                 
 <15:4>  NS      RAZ     NS         NS         Reserved.                                         
 <3:0>   WDOG    RO/H    0x0        0x0        Watchdog interrupts, bit 0 is watchdog for PP0, ..., bit x for PPx.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_SUM1_PP_IP3
 *  This register has the same bit fields as CIU_SUM1_PP(0..3)_IP2.
 * 
 *  
 *  Attribute: -inherits=CIU_SUM1_PP(0..3)_IP2.
 * 
$CIU_SUM1_PP(0..3)_IP3   Address=(0x1070000008200+a*0x8)   Bus=(NCB)


 * 
 * CIU_SUM1_PP_IP4
 *  This register has the same bit fields as CIU_SUM1_PP(0..3)_IP2.
 * 
 *  
 *  Attribute: -inherits=CIU_SUM1_PP(0..3)_IP2.
 * 
$CIU_SUM1_PP(0..3)_IP4   Address=(0x1070000008400+a*0x8)   Bus=(NCB)


 * 
 * CIU_SUM1_IO_INT
 *  This register has the same bit fields as CIU_SUM1_PP(0..3)_IP2.
 * 
 *  CIU_SUM1_IO0_INT is for PEM0, CIU_SUM1_IO1_INT is reserved.
 *  Attribute: -inherits=CIU_SUM1_PP(0..3)_IP2.
 * 
$CIU_SUM1_IO(0..1)_INT   Address=(0x1070000008600+a*0x8)   Bus=(NCB)


 * 
 * CIU_SUM2_PP_IP2
 * 
 *  Only TIMER field may have different value per PP(IP).
 *  All other fields  values  are idential for different PPs.
 * 
$CIU_SUM2_PP(0..3)_IP2   Address=(0x1070000008800+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:20> NS      RAZ     NS         NS         Reserved.                                         
 <19>    BCH     RO/H    0x0        0x0        BCH interrupt. TBD.                               
 <18>    AGL_DRP R/W1C   0x0        0x0        AGL parket drop interrupt. TBD.                   
 <17>    OCLA    RO/H    0x0        0x0        OCLA interrupt summary. |(CIU_CIB_OCLA(0)_RAW[0] & CIU_CIB_OCLA(0)_EN[0]).
                                               See  CIU_CIB_OCLA(0)_RAW[0]  and  CIU_CIB_OCLA(0)_EN[0].
 <16>    SATA    RO/H    0x0        0x0        SATA interrupt summary. |(CIU_CIB_SATA(0)_RAW[0] & CIU_CIB_SATA(0)_EN(0)).
                                               See  CIU_CIB_SATA(0)_RAW[0]  and  CIU_CIB_SATA(0)_EN(0).
 <15:10> NS      RAZ     NS         NS         Reserved.                                         
 <9:4>   TIMER   R/W1C/H 0x0        0x0        General timer 4-9 interrupts.                     
                                               When CIU_TIM_MULTI_CAST[EN] == 0, this interrupt is
                                               common for all PP/IRQs, writing '1' to any PP/IRQ
                                               will clear all TIMERx(x=0..9) interrupts.
                                               When CIU_TIM_MULTI_CAST[EN] == 1, TIMERx(x=0..9)
                                               are set at the same time, but clearing are based on
                                               per cnMIPS core. See CIU_TIM_MULTI_CAST for detail.
                                               The combination of this field and the
                                               CIU_INT*_SUM0/4[TIMER] field implement all 10
                                               CIU_TIM* interrupts.
 <3:0>   NS      RAZ     NS         NS         Reserved for TIMER Interrupts                     
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_SUM2_PP_IP3
 *  This register has the same bit fields as CIU_SUM2_PP(0..3)_IP2.
 * 
 *  
 *  Attribute: -inherits=CIU_SUM2_PP(0..3)_IP2.
 * 
$CIU_SUM2_PP(0..3)_IP3   Address=(0x1070000008A00+a*0x8)   Bus=(NCB)


 * 
 * CIU_SUM2_PP_IP4
 *  This register has the same bit fields as CIU_SUM2_PP(0..3)_IP2.
 * 
 *  
 *  Attribute: -inherits=CIU_SUM2_PP(0..3)_IP2.
 * 
$CIU_SUM2_PP(0..3)_IP4   Address=(0x1070000008C00+a*0x8)   Bus=(NCB)


 * 
 * CIU_SUM2_IO_INT
 *  This register has the same bit fields as CIU_SUM2_PP(0..3)_IP2.
 * 
 *  CIU_SUM2_IO0_INT is for PEM0, CIU_SUM2_IO1_INT is reserved.
 *  Attribute: -inherits=CIU_SUM2_PP(0..3)_IP2.
 * 
$CIU_SUM2_IO(0..1)_INT   Address=(0x1070000008E00+a*0x8)   Bus=(NCB)


 * 
 * CIU_EN2_PP_IP2
 * 
 *  
 * 
$CIU_EN2_PP(0..3)_IP2   Address=(0x107000000A000+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:20> NS      RAZ     NS         NS         Reserved.                                         
 <19>    BCH     R/W     0x0        0x0        BCH interrupt enable                              
 <18>    AGL_DRP R/W     0x0        0x0        AGL_DRP interrupt enable                          
 <17>    OCLA    R/W     0x0        0x0        OCLA interrupt enable                             
 <16>    SATA    R/W     0x0        0x0        SATA_UNTL interrupt enable                        
 <15:10> NS      RAZ     NS         NS         Reserved.                                         
 <9:4>   TIMER   R/W     0x0        0x0        General timer 4-9 interrupt enable                
 <3:0>   NS      RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_EN2_PP_IP3
 *  This register has the same bit fields as CIU_EN2_PP(0..3)_IP2.
 * 
 *  
 *  Attribute: -inherits=CIU_EN2_PP(0..3)_IP2.
 * 
$CIU_EN2_PP(0..3)_IP3   Address=(0x107000000A200+a*0x8)   Bus=(NCB)


 * 
 * CIU_EN2_PP_IP4
 *  This register has the same bit fields as CIU_EN2_PP(0..3)_IP2.
 * 
 *  
 *  Attribute: -inherits=CIU_EN2_PP(0..3)_IP2.
 * 
$CIU_EN2_PP(0..3)_IP4   Address=(0x107000000A400+a*0x8)   Bus=(NCB)


 * 
 * CIU_EN2_IO_INT
 *  This register has the same bit fields as CIU_EN2_PP(0..3)_IP2.
 * 
 *  CIU_EN2_IO0_INT is for PEM0, CIU_EN2_IO1_INT is reserved.
 *  Attribute: -inherits=CIU_EN2_PP(0..3)_IP2.
 * 
$CIU_EN2_IO(0..1)_INT   Address=(0x107000000A600+a*0x8)   Bus=(NCB)


 * 
 * CIU_EN2_PP_IP2_W1S
 * 
 *  Write-1-to-set version of the CIU_EN2_PP(IO)@_IPx(INT) register, read back corresponding
 *  CIU_EN2_PP(IO)@_IPx(INT) value.
 * 
$CIU_EN2_PP(0..3)_IP2_W1S   Address=(0x107000000A800+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:20> NS      RAZ     NS         NS         Reserved.                                         
 <19>    BCH     R/W1S/H 0x0        0x0        Write 1 to set BCH interrupt enable               
 <18>    AGL_DRP R/W1S/H 0x0        0x0        Write 1 to set AGL_DRP interrupt enable           
 <17>    OCLA    R/W1S/H 0x0        0x0        Write 1 to set OCLA interrupt enable              
 <16>    SATA    R/W1S/H 0x0        0x0        Write 1 to set SATA_UCTL interrupt enable         
 <15:10> NS      RAZ     NS         NS         Reserved.                                         
 <9:4>   TIMER   R/W1S/H 0x0        0x0        Write 1 to set General timer 4-9 interrupt enables
 <3:0>   NS      RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_EN2_PP_IP3_W1S
 *  This register has the same bit fields as CIU_EN2_PP(0..3)_IP2_W1S.
 * 
 *  
 *  Attribute: -inherits=CIU_EN2_PP(0..3)_IP2_W1S.
 * 
$CIU_EN2_PP(0..3)_IP3_W1S   Address=(0x107000000AA00+a*0x8)   Bus=(NCB)


 * 
 * CIU_EN2_PP_IP4_W1S
 *  This register has the same bit fields as CIU_EN2_PP(0..3)_IP2_W1S.
 * 
 *  
 *  Attribute: -inherits=CIU_EN2_PP(0..3)_IP2_W1S.
 * 
$CIU_EN2_PP(0..3)_IP4_W1S   Address=(0x107000000AC00+a*0x8)   Bus=(NCB)


 * 
 * CIU_EN2_IO_INT_W1S
 *  This register has the same bit fields as CIU_EN2_PP(0..3)_IP2_W1S.
 * 
 *  CIU_EN2_IO0_INT_W1S is for PEM0, CIU_EN2_IO1_INT_W1S is reserved.
 *  Attribute: -inherits=CIU_EN2_PP(0..3)_IP2_W1S.
 * 
$CIU_EN2_IO(0..1)_INT_W1S   Address=(0x107000000AE00+a*0x8)   Bus=(NCB)


 * 
 * CIU_EN2_PP_IP2_W1C
 * 
 *  Write-1-to-clear version of the CIU_EN2_PP(IO)@_IPx(INT) register, read back corresponding
 *  CIU_EN2_PP(IO)@_IPx(INT) value.
 * 
$CIU_EN2_PP(0..3)_IP2_W1C   Address=(0x107000000C800+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:20> NS      RAZ     NS         NS         Reserved.                                         
 <19>    BCH     R/W1C/H 0x0        0x0        Write 1 to clear BCH interrupt enable             
 <18>    AGL_DRP R/W1C/H 0x0        0x0        Write 1 to clear AGL_DRP interrupt enable         
 <17>    OCLA    R/W1C/H 0x0        0x0        Write 1 to clear OCLA interrupt enable            
 <16>    SATA    R/W1C/H 0x0        0x0        Write 1 to clear SATA_UCTL interrupt enable       
 <15:10> NS      RAZ     NS         NS         Reserved.                                         
 <9:4>   TIMER   R/W1C/H 0x0        0x0        Write 1 to clear General timer 4-9 interrupt enable
 <3:0>   NS      RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_EN2_PP_IP3_W1C
 *  This register has the same bit fields as CIU_EN2_PP(0..3)_IP2_W1C.
 * 
 *  
 *  Attribute: -inherits=CIU_EN2_PP(0..3)_IP2_W1C.
 * 
$CIU_EN2_PP(0..3)_IP3_W1C   Address=(0x107000000CA00+a*0x8)   Bus=(NCB)


 * 
 * CIU_EN2_PP_IP4_W1C
 *  This register has the same bit fields as CIU_EN2_PP(0..3)_IP2_W1C.
 * 
 *  
 *  Attribute: -inherits=CIU_EN2_PP(0..3)_IP2_W1C.
 * 
$CIU_EN2_PP(0..3)_IP4_W1C   Address=(0x107000000CC00+a*0x8)   Bus=(NCB)


 * 
 * CIU_EN2_IO_INT_W1C
 *  This register has the same bit fields as CIU_EN2_PP(0..3)_IP2_W1C.
 * 
 *  CIU_EN2_IO0_INT_W1C is for PEM0, CIU_EN2_IO1_INT_W1C is reserved.
 *  Attribute: -inherits=CIU_EN2_PP(0..3)_IP2_W1C.
 * 
$CIU_EN2_IO(0..1)_INT_W1C   Address=(0x107000000CE00+a*0x8)   Bus=(NCB)


 * 
 * CIU_CIB_L2C_RAW
 * 
 *  
 * 
$CIU_CIB_L2C_RAW(0)   Address=(0x107000000E000+a*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field              Field   Reset      Typical    Field                                             
 Pos     Name               Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:23> NS                 RAZ     NS         NS         Reserved.                                         
 <22>    CBCX_INT_IOCCMDDBE R/W1C/H 0x0        0x0        Set when L2C_CBC(0..0)_INT[IOCCMDDBE] set.        
 <21>    CBCX_INT_IOCCMDSBE R/W1C/H 0x0        0x0        Set when L2C_CBC(0..0)_INT[IOCCMDSBE] set.        
 <20>    CBCX_INT_RSDDBE    R/W1C/H 0x0        0x0        Set when L2C_CBC(0..0)_INT[RSDDBE] set.           
 <19>    CBCX_INT_RSDSBE    R/W1C/H 0x0        0x0        Set when L2C_CBC(0..0)_INT[RSDSBE] set.           
 <18>    MCIX_INT_VBFDBE    R/W1C/H 0x0        0x0        Set when L2C_MCI(0..0)_INT[VBFDBE] set.           
 <17>    MCIX_INT_VBFSBE    R/W1C/H 0x0        0x0        Set when L2C_MCI(0..0)_INT[VBFSBE] set.           
 <16>    TADX_INT_RTGDBE    R/W1C/H 0x0        0x0        Set when L2C_TAD(0..0)_INT[RTGDBE] set.           
 <15>    TADX_INT_RTGSBE    R/W1C/H 0x0        0x0        Set when L2C_TAD(0..0)_INT[RTGSBE] set.           
 <14>    TADX_INT_RDDISLMC  R/W1C/H 0x0        0x0        Set when L2C_TAD(0..0)_INT[RDDISLMC] set.         
 <13>    TADX_INT_WRDISLMC  R/W1C/H 0x0        0x0        Set when L2C_TAD(0..0)_INT[WRDISLMC] set.         
 <12>    TADX_INT_BIGRD     R/W1C/H 0x0        0x0        Set when L2C_TAD(0..0)_INT[BIGRD] set.            
 <11>    TADX_INT_BIGWR     R/W1C/H 0x0        0x0        Set when L2C_TAD(0..0)_INT[BIGWR] set.            
 <10>    TADX_INT_HOLERD    R/W1C/H 0x0        0x0        Set when L2C_TAD(0..0)_INT[HOLERD] set.           
 <9>     TADX_INT_HOLEWR    R/W1C/H 0x0        0x0        Set when L2C_TAD(0..0)_INT[HOLEWR] set.           
 <8>     TADX_INT_NOWAY     R/W1C/H 0x0        0x0        Set when L2C_TAD(0..0)_INT[NOWAY] set.            
 <7>     TADX_INT_TAGDBE    R/W1C/H 0x0        0x0        Set when L2C_TAD(0..0)_INT[TAGDBE] set.           
 <6>     TADX_INT_TAGSBE    R/W1C/H 0x0        0x0        Set when L2C_TAD(0..0)_INT[TAGSBE] set.           
 <5>     TADX_INT_FBFDBE    R/W1C/H 0x0        0x0        Set when L2C_TAD(0..0)_INT[FBFDBE] set.           
 <4>     TADX_INT_FBFSBE    R/W1C/H 0x0        0x0        Set when L2C_TAD(0..0)_INT[FBFSBE] set.           
 <3>     TADX_INT_SBFDBE    R/W1C/H 0x0        0x0        Set when L2C_TAD(0..0)_INT[SBFDBE] set.           
 <2>     TADX_INT_SBFSBE    R/W1C/H 0x0        0x0        Set when L2C_TAD(0..0)_INT[SBFSBE] set.           
 <1>     TADX_INT_L2DDBE    R/W1C/H 0x0        0x0        Set when L2C_TAD(0..0)_INT[L2DDBE] set.           
 <0>     TADX_INT_L2DSBE    R/W1C/H 0x0        0x0        Set when L2C_TAD(0..0)_INT[L2DSBE] set.           
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_CIB_L2C_EN
 * 
 *  
 * 
$CIU_CIB_L2C_EN(0)   Address=(0x107000000E100+a*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field              Field   Reset      Typical    Field                                             
 Pos     Name               Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:23> NS                 RAZ     NS         NS         Reserved.                                         
 <22>    CBCX_INT_IOCCMDDBE R/W     0x0        0x0        Enable corresponding CIU_CIB_L2C_RAW bit.         
 <21>    CBCX_INT_IOCCMDSBE R/W     0x0        0x0        Enable corresponding CIU_CIB_L2C_RAW bit.         
 <20>    CBCX_INT_RSDDBE    R/W     0x0        0x0        Enable corresponding CIU_CIB_L2C_RAW bit.         
 <19>    CBCX_INT_RSDSBE    R/W     0x0        0x0        Enable corresponding CIU_CIB_L2C_RAW bit.         
 <18>    MCIX_INT_VBFDBE    R/W     0x0        0x0        Enable corresponding CIU_CIB_L2C_RAW bit.         
 <17>    MCIX_INT_VBFSBE    R/W     0x0        0x0        Enable corresponding CIU_CIB_L2C_RAW bit.         
 <16>    TADX_INT_RTGDBE    R/W     0x0        0x0        Enable corresponding CIU_CIB_L2C_RAW bit.         
 <15>    TADX_INT_RTGSBE    R/W     0x0        0x0        Enable corresponding CIU_CIB_L2C_RAW bit.         
 <14>    TADX_INT_RDDISLMC  R/W     0x0        0x0        Enable corresponding CIU_CIB_L2C_RAW bit.         
 <13>    TADX_INT_WRDISLMC  R/W     0x0        0x0        Enable corresponding CIU_CIB_L2C_RAW bit.         
 <12>    TADX_INT_BIGRD     R/W     0x0        0x0        Enable corresponding CIU_CIB_L2C_RAW bit.         
 <11>    TADX_INT_BIGWR     R/W     0x0        0x0        Enable corresponding CIU_CIB_L2C_RAW bit.         
 <10>    TADX_INT_HOLERD    R/W     0x0        0x0        Enable corresponding CIU_CIB_L2C_RAW bit.         
 <9>     TADX_INT_HOLEWR    R/W     0x0        0x0        Enable corresponding CIU_CIB_L2C_RAW bit.         
 <8>     TADX_INT_NOWAY     R/W     0x0        0x0        Enable corresponding CIU_CIB_L2C_RAW bit.         
 <7>     TADX_INT_TAGDBE    R/W     0x0        0x0        Enable corresponding CIU_CIB_L2C_RAW bit.         
 <6>     TADX_INT_TAGSBE    R/W     0x0        0x0        Enable corresponding CIU_CIB_L2C_RAW bit.         
 <5>     TADX_INT_FBFDBE    R/W     0x0        0x0        Enable corresponding CIU_CIB_L2C_RAW bit.         
 <4>     TADX_INT_FBFSBE    R/W     0x0        0x0        Enable corresponding CIU_CIB_L2C_RAW bit.         
 <3>     TADX_INT_SBFDBE    R/W     0x0        0x0        Enable corresponding CIU_CIB_L2C_RAW bit.         
 <2>     TADX_INT_SBFSBE    R/W     0x0        0x0        Enable corresponding CIU_CIB_L2C_RAW bit.         
 <1>     TADX_INT_L2DDBE    R/W     0x0        0x0        Enable corresponding CIU_CIB_L2C_RAW bit.         
 <0>     TADX_INT_L2DSBE    R/W     0x0        0x0        Enable corresponding CIU_CIB_L2C_RAW bit.         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_CIB_LMC_RAW
 * 
 *  
 * 
$CIU_CIB_LMC(0)_RAW(0)   Address=(0x107000000E200+a*0x100+b*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field          Field   Reset      Typical    Field                                             
 Pos     Name           Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:12> NS             RAZ     NS         NS         Reserved.                                         
 <11>    INT_DDR_ERR    R/W1C/H 0x0        0x0        Set when LMC(0..0)_INT[DDR_ERR] set.              
 <10>    INT_DLC_DED    R/W1C/H 0x0        0x0        Set when LMC(0..0)_INT[DLCRAM_DED_ERR] set.       
 <9>     INT_DLC_SEC    R/W1C/H 0x0        0x0        Set when LMC(0..0)_INT[DLCRAM_SEC_ERR] set.       
 <8:5>   INT_DED_ERRX   R/W1C/H 0x0        0x0        Set when LMC(0..0)_INT[DED_ERR<b>] set.           
 <4:1>   INT_SEC_ERRX   R/W1C/H 0x0        0x0        Set when LMC(0..0)_INT[SEC_ERR<b>] set.           
 <0>     INT_NXM_WR_ERR R/W1C/H 0x0        0x0        Set when LMC(0..0)_INT[NXM_WR_ERR] set.           
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_CIB_LMC_EN
 * 
 *  
 * 
$CIU_CIB_LMC(0)_EN(0)   Address=(0x107000000E300+a*0x100+b*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field          Field   Reset      Typical    Field                                             
 Pos     Name           Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:12> NS             RAZ     NS         NS         Reserved.                                         
 <11>    INT_DDR_ERR    R/W     0x0        0x0        Enable corresponding CIU_CIB_LMC_RAW bit.         
 <10>    INT_DLC_DED    R/W     0x0        0x0        Enable corresponding CIU_CIB_LMC_RAW bit.         
 <9>     INT_DLC_SEC    R/W     0x0        0x0        Enable corresponding CIU_CIB_LMC_RAW bit.         
 <8:5>   INT_DED_ERRX   R/W     0x0        0x0        Enable corresponding CIU_CIB_LMC_RAW bit.         
 <4:1>   INT_SEC_ERRX   R/W     0x0        0x0        Enable corresponding CIU_CIB_LMC_RAW bit.         
 <0>     INT_NXM_WR_ERR R/W     0x0        0x0        Enable corresponding CIU_CIB_LMC_RAW bit.         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_CIB_RST_RAW
 * 
 *  
 * 
$CIU_CIB_RST_RAW(0)   Address=(0x107000000E400+a*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  NS         RAZ     NS         NS         Reserved.                                         
 <5:3>   INT_PERSTX R/W1C/H 0x0        0x0        Set when RST_INT[PERST<a>] set.                   
 <2:0>   INT_LINKX  R/W1C/H 0x0        0x0        Set when RST_INT[RST_LINK<a>] set.                
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_CIB_RST_EN
 * 
 *  
 * 
$CIU_CIB_RST_EN(0)   Address=(0x107000000E500+a*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  NS         RAZ     NS         NS         Reserved.                                         
 <5:3>   INT_PERSTX R/W     0x0        0x0        Enable corresponding CIU_CIB_RST_RAW bit.         
 <2:0>   INT_LINKX  R/W     0x0        0x0        Enable corresponding CIU_CIB_RST_RAW bit.         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_CIB_SATA_RAW
 * 
 *  
 * 
$CIU_CIB_SATA_RAW(0)   Address=(0x107000000E600+a*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field              Field   Reset      Typical    Field                                             
 Pos     Name               Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS                 RAZ     NS         NS         Reserved.                                         
 <3>     UAHC_PME_REQ_IP    R/W1C/H 0x0        0x0        Set when SATA_UAHC_PX_IS[CPDS],                   
                                                          SATA_UAHC_PX_IS[DMPS],
                                                          SATA_UAHC_PX_IS[PCS],
                                                          SATA_UAHC_PX_IS[SDBS], or
                                                          SATA_UAHC_PX_SNTF[PMN] set.
 <2>     UAHC_INTRQ_IP      R/W1C/H 0x0        0x0        Set when SATA_UAHC_GBL_IS[IPS] or SATA_UAHC_PX_IS set.
 <1>     INTSTAT_XM_BAD_DMA R/W1C/H 0x0        0x0        Set when SATA_UCTL_INTSTAT[XM_BAD_DMA] set.       
 <0>     INTSTAT_XS_NCB_OOB R/W1C/H 0x0        0x0        Set when SATA_UCTL_INTSTAT[XS_NCB_OOB] set.       
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_CIB_SATA_EN
 * 
 *  
 * 
$CIU_CIB_SATA_EN(0)   Address=(0x107000000E700+a*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field              Field   Reset      Typical    Field                                             
 Pos     Name               Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS                 RAZ     NS         NS         Reserved.                                         
 <3>     UAHC_PME_REQ_IP    R/W     0x0        0x0        Enable corresponding CIU_CIB_SATA_RAW bit.        
 <2>     UAHC_INTRQ_IP      R/W     0x0        0x0        Enable corresponding CIU_CIB_SATA_RAW bit.        
 <1>     INTSTAT_XM_BAD_DMA R/W     0x0        0x0        Enable corresponding CIU_CIB_SATA_RAW bit.        
 <0>     INTSTAT_XS_NCB_OOB R/W     0x0        0x0        Enable corresponding CIU_CIB_SATA_RAW bit.        
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_CIB_USBDRD_RAW
 * 
 *  
 * 
$CIU_CIB_USBDRD(0..1)_RAW(0)   Address=(0x107000000E800+a*0x100+b*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field              Field   Reset      Typical    Field                                             
 Pos     Name               Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:11> NS                 RAZ     NS         NS         Reserved.                                         
 <10>    UAHC_DEV_INT       R/W1C/H 0x0        0x0        Set when USBDRD(0..1)_UAHC_GEVNTCOUNT[EVNTCOUNT]  
 <9>     UAHC_IMANX_IP      R/W1C/H 0x0        0x0        Set when USBDRD(0..1)_UAHC_IMAN(0..0)[IP] set.    
 <8>     UAHC_USBSTS_HSE    R/W1C/H 0x0        0x0        Set when USBDRD(0..1)_UAHC_USBSTS[HSE] set.       
 <7>     INTSTAT_RAM2_DBE   R/W1C/H 0x0        0x0        Set when USBDRD(0..1)_UCTL_INTSTAT[RAM2_DBE] set. 
 <6>     INTSTAT_RAM2_SBE   R/W1C/H 0x0        0x0        Set when USBDRD(0..1)_UCTL_INTSTAT[RAM2_SBE] set. 
 <5>     INTSTAT_RAM1_DBE   R/W1C/H 0x0        0x0        Set when USBDRD(0..1)_UCTL_INTSTAT[RAM1_DBE] set. 
 <4>     INTSTAT_RAM1_SBE   R/W1C/H 0x0        0x0        Set when USBDRD(0..1)_UCTL_INTSTAT[RAM1_SBE] set. 
 <3>     INTSTAT_RAM0_DBE   R/W1C/H 0x0        0x0        Set when USBDRD(0..1)_UCTL_INTSTAT[RAM0_DBE] set. 
 <2>     INTSTAT_RAM0_SBE   R/W1C/H 0x0        0x0        Set when USBDRD(0..1)_UCTL_INTSTAT[RAM0_SBE] set. 
 <1>     INTSTAT_XM_BAD_DMA R/W1C/H 0x0        0x0        Set when USBDRD(0..1)_UCTL_INTSTAT[XM_BAD_DMA] set.
 <0>     INTSTAT_XS_NCB_OOB R/W1C/H 0x0        0x0        Set when USBDRD(0..1)_UCTL_INTSTAT[XS_NCB_OOB] set.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_CIB_USBDRD_EN
 * 
 *  
 * 
$CIU_CIB_USBDRD(0..1)_EN(0)   Address=(0x107000000EA00+a*0x100+b*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field              Field   Reset      Typical    Field                                             
 Pos     Name               Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:11> NS                 RAZ     NS         NS         Reserved.                                         
 <10>    UAHC_DEV_INT       R/W     0x0        0x0        Enable corresponding CIU_CIB_USBDRD(0..1)_RAW bit.
 <9>     UAHC_IMANX_IP      R/W     0x0        0x0        Enable corresponding CIU_CIB_USBDRD(0..1)_RAW bit.
 <8>     UAHC_USBSTS_HSE    R/W     0x0        0x0        Enable corresponding CIU_CIB_USBDRD(0..1)_RAW bit.
 <7>     INTSTAT_RAM2_DBE   R/W     0x0        0x0        Enable corresponding CIU_CIB_USBDRD(0..1)_RAW bit.
 <6>     INTSTAT_RAM2_SBE   R/W     0x0        0x0        Enable corresponding CIU_CIB_USBDRD(0..1)_RAW bit.
 <5>     INTSTAT_RAM1_DBE   R/W     0x0        0x0        Enable corresponding CIU_CIB_USBDRD(0..1)_RAW bit.
 <4>     INTSTAT_RAM1_SBE   R/W     0x0        0x0        Enable corresponding CIU_CIB_USBDRD(0..1)_RAW bit.
 <3>     INTSTAT_RAM0_DBE   R/W     0x0        0x0        Enable corresponding CIU_CIB_USBDRD(0..1)_RAW bit.
 <2>     INTSTAT_RAM0_SBE   R/W     0x0        0x0        Enable corresponding CIU_CIB_USBDRD(0..1)_RAW bit.
 <1>     INTSTAT_XM_BAD_DMA R/W     0x0        0x0        Enable corresponding CIU_CIB_USBDRD(0..1)_RAW bit.
 <0>     INTSTAT_XS_NCB_OOB R/W     0x0        0x0        Enable corresponding CIU_CIB_USBDRD(0..1)_RAW bit.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_CIB_OCLA_RAW
 * 
 *  
 * 
$CIU_CIB_OCLA(0)_RAW(0)   Address=(0x107000000EC00+a*0x100+b*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field          Field   Reset      Typical    Field                                             
 Pos     Name           Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:15> NS             RAZ     NS         NS         Reserved.                                         
 <14>    STATE_DDRFULL  R/W1C/H 0x0        0x0        Set when OCLA(0)_STATE_INT[DDRFULL] set.          
 <13>    STATE_WMARK    R/W1C/H 0x0        0x0        Set when OCLA(0)_STATE_INT[WMARK] set.            
 <12>    STATE_OVERFULL R/W1C/H 0x0        0x0        Set when OCLA(0)_STATE_INT[OVERFULL] set.         
 <11>    STATE_TRIGFULL R/W1C/H 0x0        0x0        Set when OCLA(0)_STATE_INT[TRIGFULL] set.         
 <10>    STATE_CAPTURED R/W1C/H 0x0        0x0        Set when OCLA(0)_STATE_INT[CAPTURED] set.         
 <9>     STATE_FSM1_INT R/W1C/H 0x0        0x0        Set when OCLA(0)_STATE_INT[FSM1_INT] set.         
 <8>     STATE_FSM0_INT R/W1C/H 0x0        0x0        Set when OCLA(0)_STATE_INT[FSM0_INT] set.         
 <7:5>   STATE_MCDX     R/W1C/H 0x0        0x0        Set when OCLA(0)_STATE_INT[MCD<b>] set.           
 <4>     STATE_TRIG     R/W1C/H 0x0        0x0        Set when OCLA(0)_STATE_INT[TRIG] set.             
 <3:0>   STATE_OVFLX    R/W1C/H 0x0        0x0        Set when OCLA(0)_STATE_INT[OVFL<b>] set.          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * CIU_CIB_OCLA_EN
 * 
 *  
 * 
$CIU_CIB_OCLA(0)_EN(0)   Address=(0x107000000EE00+a*0x100+b*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field          Field   Reset      Typical    Field                                             
 Pos     Name           Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:15> NS             RAZ     NS         NS         Reserved.                                         
 <14>    STATE_DDRFULL  R/W     0x0        0x0        Enable corresponding CIU_CIB_OCLA_RAW bit.        
 <13>    STATE_WMARK    R/W     0x0        0x0        Enable corresponding CIU_CIB_OCLA_RAW bit.        
 <12>    STATE_OVERFULL R/W     0x0        0x0        Enable corresponding CIU_CIB_OCLA_RAW bit.        
 <11>    STATE_TRIGFULL R/W     0x0        0x0        Enable corresponding CIU_CIB_OCLA_RAW bit.        
 <10>    STATE_CAPTURED R/W     0x0        0x0        Enable corresponding CIU_CIB_OCLA_RAW bit.        
 <9>     STATE_FSM1_INT R/W     0x0        0x0        Enable corresponding CIU_CIB_OCLA_RAW bit.        
 <8>     STATE_FSM0_INT R/W     0x0        0x0        Enable corresponding CIU_CIB_OCLA_RAW bit.        
 <7:5>   STATE_MCDX     R/W     0x0        0x0        Enable corresponding CIU_CIB_OCLA_RAW bit.        
 <4>     STATE_TRIG     R/W     0x0        0x0        Enable corresponding CIU_CIB_OCLA_RAW bit.        
 <3:0>   STATE_OVFLX    R/W     0x0        0x0        Enable corresponding CIU_CIB_OCLA_RAW bit.        
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCM_CLK_CFG = PCM Clock Configuration
 * 
 *  
 * 
$PCM_CLK(0..1)_CFG   Address=(0x1070000010000+a*0x4000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    FSYNCGOOD RO/H    0x0        0x1        FSYNC status                                      
                                                 If 1, the last frame had a correctly positioned
                                                 fsync pulse
                                                 If 0, none/extra fsync pulse seen on most recent
                                                 frame
                                                 NOTE: this is intended for startup. the FSYNCEXTRA
                                                 and FSYNCMISSING interrupts are intended for
                                                 detecting loss of sync during normal operation.
 <62:48> NS        RAZ     NS         NS         Reserved.                                         
 <47:32> FSYNCSAMP R/W     0x0        NS         Number of ECLKs from internal BCLK edge to        
                                                 sample FSYNC
                                                 NOTE: used to sync to the start of a frame and to
                                                 check for FSYNC errors.
 <31:26> NS        RAZ     NS         NS         Reserved.                                         
 <25:21> FSYNCLEN  R/W     0x0        0x2        Number of 1/2 BCLKs FSYNC is asserted for         
                                                 NOTE: only used when GEN==1
 <20:16> FSYNCLOC  R/W     0x0        0x0        FSYNC location, in 1/2 BCLKS before timeslot 0, bit 0.
                                                 NOTE: also used to detect framing errors and
                                                 therefore must have a correct value even if GEN==0
 <15:6>  NUMSLOTS  R/W     0x0        NS         Number of 8-bit slots in a frame                  
                                                 NOTE: this, along with EXTRABIT and Fbclk
                                                 determines FSYNC frequency when GEN == 1
                                                 NOTE: also used to detect framing errors and
                                                 therefore must have a correct value even if GEN==0
 <5>     EXTRABIT  R/W     0x0        0x0        If 0, no frame bit                                
                                                 If 1, add one extra bit time for frame bit
                                                 NOTE: if GEN == 1, then FSYNC will be delayed one
                                                 extra bit time.
                                                 NOTE: also used to detect framing errors and
                                                 therefore must have a correct value even if GEN==0
                                                 NOTE: the extra bit comes from the LSB/MSB of the
                                                 first byte of the frame in the transmit memory
                                                 region.  LSB vs MSB is determined from the setting
                                                 of PCMn_TDM_CFG[LSBFIRST].
 <4:3>   BITLEN    R/W     0x0        0x0        Number of BCLKs in a bit time.                    
                                                 0 : 1 BCLK
                                                 1 : 2 BCLKs
                                                 2 : 4 BCLKs
                                                 3 : operation undefined
 <2>     BCLKPOL   R/W     0x0        0x0        If 0, BCLK rise edge is start of bit time         
                                                 If 1, BCLK fall edge is start of bit time
                                                 NOTE: also used to detect framing errors and
                                                 therefore must have a correct value even if GEN==0
 <1>     FSYNCPOL  R/W     0x0        0x0        If 0, FSYNC idles low, asserts high               
                                                 If 1, FSYNC idles high, asserts low
                                                 NOTE: also used to detect framing errors and
                                                 therefore must have a correct value even if GEN==0
 <0>     ENA       R/W     0x0        0x0        If 0, Clock receiving logic is doing nothing      
                                                 1, Clock receiving logic is looking for sync
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCM_CLK_GEN = PCM Clock Generation
 * 
 *  
 * 
$PCM_CLK(0..1)_GEN   Address=(0x1070000010008+a*0x4000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> DELTASAMP R/W     0x0        0x0        Signed number of ECLKs to move sampled BCLK edge  
                                                 NOTE: the complete number of ECLKs to move is:
                                                 NUMSAMP + 2 + 1 + DELTASAMP
                                                 NUMSAMP to compensate for sampling delay
                                                 + 2 to compensate for dual-rank synchronizer
                                                 + 1 for uncertainity
                                                 + DELTASAMP to CMA/debugging
 <47:32> NUMSAMP   R/W     0x0        NS         Number of ECLK samples to detect BCLK change when 
                                                 receiving clock.
 <31:0>  N         R/W     0x0        NS         Determines BCLK frequency when generating clock   
                                                 NOTE: Fbclk = Feclk * N / 2^32
                                                 N = (Fbclk / Feclk) * 2^32
                                                 NOTE: writing N == 0 stops the clock generator, and
                                                 causes bclk and fsync to be RECEIVED
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCM_TDM_CFG = PCM TDM Configuration
 * 
 *  
 * 
$PCM(0..3)_TDM_CFG   Address=(0x1070000010010+a*0x4000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> DRVTIM   R/W     0x0        NS         Number of ECLKs from start of bit time to stop    
                                                driving last bit of timeslot (if not driving next
                                                timeslot)
 <47:32> SAMPPT   R/W     0x0        NS         Number of ECLKs from start of bit time to sample  
                                                data bit.
 <31:3>  NS       RAZ     NS         NS         Reserved.                                         
 <2>     LSBFIRST R/W     0x0        0x0        If 0, shift/receive MSB first                     
                                                1, shift/receive LSB first
 <1>     USECLK1  R/W     0x0        0x0        If 0, this PCM is based on BCLK/FSYNC0            
                                                1, this PCM is based on BCLK/FSYNC1
 <0>     ENABLE   R/W     0x0        0x0        If 1, PCM is enabled, otherwise pins are GPIOs    
                                                NOTE: when TDM is disabled by detection of an
                                                FSYNC error all transmission and reception is
                                                halted.  In addition,        PCMn_TX/RXADDR are updated
                                                to point to the position at which the error was
                                                detected.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCM_DMA_CFG = PCM DMA Configuration
 * 
 *  
 * 
$PCM(0..3)_DMA_CFG   Address=(0x1070000010018+a*0x4000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    RDPEND   RO/H    0x0        0x0        If 0, no L2C read responses pending               
                                                1, L2C read responses are outstanding
                                                NOTE: When restarting after stopping a running TDM
                                                engine, software must wait for RDPEND to read 0
                                                before writing PCMn_TDM_CFG[ENABLE] to a 1
 <62:54> NS       RAZ     NS         NS         Reserved.                                         
 <53:44> RXSLOTS  R/W     0x0        NS         Number of 8-bit slots to receive per frame        
                                                (number of slots in a receive superframe)
 <43:42> NS       RAZ     NS         NS         Reserved.                                         
 <41:32> TXSLOTS  R/W     0x0        NS         Number of 8-bit slots to transmit per frame       
                                                (number of slots in a transmit superframe)
 <31:30> NS       RAZ     NS         NS         Reserved.                                         
 <29:20> RXST     R/W     0x0        0x1        Number of frame writes for interrupt              
 <19>    NS       RAZ     NS         NS         Reserved.                                         
 <18>    USELDT   R/W     0x0        0x0        If 0, use LDI command to read from L2C            
                                                1, use LDT command to read from L2C
 <17:8>  TXRD     R/W     0x0        0x1        Number of frame reads for interrupt               
 <7:4>   FETCHSIZ R/W     0x0        0x7        FETCHSIZ+1 timeslots are read when threshold is   
                                                reached.
 <3:0>   THRESH   R/W     0x0        0x8        If number of bytes remaining in the DMA fifo is <=
                                                THRESH, initiate a fetch of timeslot data from the
                                                transmit memory region.
                                                NOTE: there are only 16B of buffer for each engine
                                                so the seetings for FETCHSIZ and THRESH must be
                                                such that the buffer will not be overrun:
                                                
                                                THRESH + min(FETCHSIZ + 1,TXSLOTS) MUST BE <= 16
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCM_INT_ENA = PCM Interrupt Enables
 * 
 *  
 * 
$PCM(0..3)_INT_ENA   Address=(0x1070000010020+a*0x4000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS          RAZ     NS         NS         Reserved.                                         
 <7>     RXOVF       R/W     0x0        0x1        Enable interrupt if RX byte overflows             
 <6>     TXEMPTY     R/W     0x0        0x1        Enable interrupt on TX byte empty                 
 <5>     TXRD        R/W     0x0        0x1        Enable DMA engine frame read interrupts           
 <4>     TXWRAP      R/W     0x0        0x1        Enable TX region wrap interrupts                  
 <3>     RXST        R/W     0x0        0x1        Enable DMA engine frame store interrupts          
 <2>     RXWRAP      R/W     0x0        0x1        Enable RX region wrap interrupts                  
 <1>     FSYNCEXTRA  R/W     0x0        0x1        Enable FSYNC extra interrupts                     
                                                   NOTE: FSYNCEXTRA errors are defined as an FSYNC
                                                   found in the "wrong" spot of a frame given the
                                                   programming of PCMn_CLK_CFG[NUMSLOTS] and
                                                   PCMn_CLK_CFG[EXTRABIT].
 <0>     FSYNCMISSED R/W     0x0        0x1        Enable FSYNC missed interrupts                    
                                                   NOTE: FSYNCMISSED errors are defined as an FSYNC
                                                   missing from the correct spot in a frame given
                                                   the programming of PCMn_CLK_CFG[NUMSLOTS] and
                                                   PCMn_CLK_CFG[EXTRABIT].
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCM_INT_SUM = PCM Interrupt Summary
 * 
 *  
 * 
$PCM(0..3)_INT_SUM   Address=(0x1070000010028+a*0x4000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS          RAZ     NS         NS         Reserved.                                         
 <7>     RXOVF       R/W1C/H 0x0        0x0        RX byte overflowed                                
 <6>     TXEMPTY     R/W1C/H 0x0        0x0        TX byte was empty when sampled                    
 <5>     TXRD        R/W1C/H 0x0        0x0        DMA engine frame read interrupt occurred          
 <4>     TXWRAP      R/W1C/H 0x0        0x0        TX region wrap interrupt occurred                 
 <3>     RXST        R/W1C/H 0x0        0x0        DMA engine frame store interrupt occurred         
 <2>     RXWRAP      R/W1C/H 0x0        0x0        RX region wrap interrupt occurred                 
 <1>     FSYNCEXTRA  R/W1C/H 0x0        0x0        FSYNC extra interrupt occurred                    
 <0>     FSYNCMISSED R/W1C/H 0x0        0x0        FSYNC missed interrupt occurred                   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCM_TDM_DBG = PCM TDM Debug Information
 * 
 *  
 * 
$PCM(0..3)_TDM_DBG   Address=(0x1070000010030+a*0x4000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  DEBUGINFO RO/H    NS         NS         Miscellaneous debug information                   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCM_CLK_DBG = PCM Clock Debug Information
 * 
 *  
 * 
$PCM_CLK(0..1)_DBG   Address=(0x1070000010038+a*0x4000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  DEBUGINFO RO/H    NS         NS         Miscellaneous debug information                   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCM_TXSTART = PCM Transmit Start Address
 * 
 *  
 * 
$PCM(0..3)_TXSTART   Address=(0x1070000010040+a*0x4000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:36> NS    RAZ     NS         NS         Reserved.                                         
 <35:3>  ADDR  R/W     NS         NS         Starting address for the transmit memory region   
 <2:0>   NS    RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCM_TXCNT = PCM Superframe Transmit Count
 * 
 *  
 * 
$PCM(0..3)_TXCNT   Address=(0x1070000010048+a*0x4000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:0>  CNT   R/W     NS         NS         Number of superframes in transmit memory region   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCM_TXADDR = PCM Transmit Address
 * 
 *  
 * 
$PCM(0..3)_TXADDR   Address=(0x1070000010050+a*0x4000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:36> NS    RAZ     NS         NS         Reserved.                                         
 <35:3>  ADDR  R/W/H   NS         NS         Address of the next read from the transmit memory 
                                             region
 <2:0>   FRAM  R/W/H   NS         NS         Frame offset                                      
                                             NOTE: this is used to extract the correct byte from
                                             each 64b word read from the transmit memory region
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCM_RXSTART = PCM Receive Start Address
 * 
 *  
 * 
$PCM(0..3)_RXSTART   Address=(0x1070000010058+a*0x4000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:36> NS    RAZ     NS         NS         Reserved.                                         
 <35:3>  ADDR  R/W     NS         NS         Starting address for the receive memory region    
 <2:0>   NS    RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCM_RXCNT = PCM Receive Superframe Count
 * 
 *  
 * 
$PCM(0..3)_RXCNT   Address=(0x1070000010060+a*0x4000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:0>  CNT   R/W     NS         NS         Number of superframes in receive memory region    
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCM_RXADDR = PCM Receive Address
 * 
 *  
 * 
$PCM(0..3)_RXADDR   Address=(0x1070000010068+a*0x4000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:36> NS    RAZ     NS         NS         Reserved.                                         
 <35:0>  ADDR  R/W/H   NS         NS         Address of the next write to the receive memory   
                                             region
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCM_TXMSK = PCM Transmit bit masks
 * 
 *  
 * 
$PCM(0..3)_TXMSK(0..7)   Address=(0x1070000010080+a*0x4000+b*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  MASK R/W     NS         NS         Transmit mask bits                                
                                            (1 means transmit, 0 means don't transmit)
                                            TXMSK0 covers slots  63 to   0
                                            TXMSK1 covers slots 127 to  64
                                            TXMSK2 covers slots 191 to 128
                                            TXMSK3 covers slots 255 to 192
                                            TXMSK4 covers slots 319 to 256
                                            TXMSK5 covers slots 383 to 320
                                            TXMSK6 covers slots 447 to 384
                                            TXMSK7 covers slots 511 to 448
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCM_RXMSK = PCM Recieve bit masks
 * 
 *  
 * 
$PCM(0..3)_RXMSK(0..7)   Address=(0x10700000100C0+a*0x4000+b*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  MASK R/W     NS         NS         Receive mask bits                                 
                                            (1 means transmit, 0 means don't transmit)
                                            RXMSK0 covers slots  63 to   0
                                            RXMSK1 covers slots 127 to  64
                                            RXMSK2 covers slots 191 to 128
                                            RXMSK3 covers slots 255 to 192
                                            RXMSK4 covers slots 319 to 256
                                            RXMSK5 covers slots 383 to 320
                                            RXMSK6 covers slots 447 to 384
                                            RXMSK7 covers slots 511 to 448
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_BOOT_REG_CFG0 = MIO Boot Region Config Register (1 per region * 8 regions)
 * 
 *  Contains region enable, region or, region ALE/SAM mode, region width, region size, and region
 *  base
 *  address parameters.
 *  DMACK, if non-zero, will assert the corresponding boot_dmack[n] pin when an access to this
 *  region
 *  is performed.  DMACK is encoded as follows: 0 = disabled, 1 = boot_dmack[0], 2 =
 *  boot_dmack[1].
 *  This is useful for CF cards in PC card memory mode that support DMA because the -REG and
 *  -DMACK pins
 *  are shared.  Note: the assertion level of boot_dmack is specified by
 *  MIO_BOOT_DMA_TIMn[DMACK_PI].
 *  TIM_MULT specifies the timing multiplier for a region.  The timing multiplier applies to all
 *  timing
 *  parameters, except for WAIT and RD_DLY, which simply count eclks.  TIM_MULT is encoded as
 *  follows:
 *  0 = 4x, 1 = 1x, 2 = 2x, 3 = 8x.
 *  RD_DLY specifies the read sample delay in eclk cycles for a region.  For reads, the data bus
 *  is
 *  normally sampled on the same eclk edge that drives boot_oe_n to the inactive state (or the
 *  sclk edge that toggles the lower address bits in page mode).  This parameter can delay that
 *  sampling
 *  edge by up to 7 sclks.  Note: the number of eclk cycles counted by the PAGE and RD_HLD timing
 *  parameters
 *  must be greater than RD_DLY.
 *  Region or bit will assert the given region's chip enable when there is an address hit in the
 *  previous
 *  region (no function for region 0, since there is no previous region).  This is useful for CF
 *  cards
 *  because it allows the use of 2 separate timing configurations for common memory and attribute
 *  memory.
 *  ALE (address latch enable) mode enables the multiplexed address/data bus mode.  This is the
 *  only
 *  mode supported for 70xx.
 *  SAM (strobe AND mode) internally combines the output enable and write enable strobes into a
 *  single
 *  strobe that is then driven onto both boot_oe_n and boot_we_n.  This is useful for parts that
 *  use a single strobe along with a read/write bit (the read/write bit can be driven from an
 *  address
 *  pin).
 *  Bus width is fixed at 8 bits.
 *  Region size is in 64k blocks and in -1 notation (i.e. 0 = 1 64k block, 1 = 2 64k blocks,
 *  etc.).
 *  Base address specifies address bits [31:16] of the first 64k block of the region.
 *  Note: When region 0 is defined to be NAND flash, only MIO_BOOT_REG_CFG0[EN],
 *  MIO_BOOT_REG_CFG0[SIZE],
 *  and MIO_BOOT_REG_CFG0[BASE] remain functional.  All other fields in MIO_BOOT_REG_CFG0 have no
 *  effect.
 * 
$MIO_BOOT_REG_CFG0   Address=(0x1180000000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:44> NS       RAZ     NS         NS         Reserved.                                         
 <43:42> DMACK    R/W     0x0        NS         Reserved.                                         
 <41:40> TIM_MULT R/W     0x0        NS         Region 0 timing multiplier                        
 <39:37> RD_DLY   R/W     0x0        NS         Region 0 read sample delay                        
 <36>    SAM      R/W     0x0        NS         Region 0 SAM                                      
 <35:34> WE_EXT   R/W     0x0        NS         Region 0 write enable count extension             
 <33:32> OE_EXT   R/W     0x0        NS         Region 0 output enable count extension            
 <31>    EN       R/W     0x1        0x1        Region 0 enable                                   
 <30>    ORBIT    R/W     0x0        0x0        No function for region 0                          
 <29>    ALE      RO      0x1        0x1        Fixed ALE mode (forced to 1)                      
 <28>    WIDTH    RO      0x0        NS         Fixed 8-bit width (forced to 0)                   
 <27:16> SIZE     R/W     0xfff      NS         Region 0 size                                     
 <15:0>  BASE     R/W     0x1fc0     0x1fc0     Region 0 base address                             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_BOOT_REG_CFG = MIO Boot Region Config Register (1 per region * 8 regions)
 * 
 *  
 * 
$MIO_BOOT_REG_CFG(1..7)   Address=(0x1180000000000+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:44> NS       RAZ     NS         NS         Reserved.                                         
 <43:42> DMACK    R/W     0x0        NS         Reserved.                                         
 <41:40> TIM_MULT R/W     0x0        NS         Region @ timing multiplier                        
 <39:37> RD_DLY   R/W     0x0        NS         Region @ read sample delay                        
 <36>    SAM      R/W     0x0        NS         Region @ SAM mode                                 
 <35:34> WE_EXT   R/W     0x0        NS         Region @ write enable count extension             
 <33:32> OE_EXT   R/W     0x0        NS         Region @ output enable count extension            
 <31>    EN       R/W     0x0        NS         Region @ enable                                   
 <30>    ORBIT    R/W     0x0        NS         Region @ or bit                                   
 <29>    ALE      RO      0x1        0x1        Fixed ALE mode (forced to 1)                      
 <28>    WIDTH    RO      0x0        NS         Fixed 8-bit width (forced to 0)                   
 <27:16> SIZE     R/W     0x0        NS         Region @ size                                     
 <15:0>  BASE     R/W     0x0        NS         Region @ base address                             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_BOOT_REG_TIM0 = MIO Boot Region Timing Register (1 per region * 8 regions)
 * 
 *  Contains page mode, wait mode, page size, and region timing parameters.
 *  Note: OE, WE, PAGE, and ALE must be non-zero to ensure legal transitions on the corresponding
 *  boot bus outputs.
 *  Note: WAIT must be non-zero if WAITM is set.
 *  Note: When region 0 is defined to be NAND flash, all fields in MIO_BOOT_TIM_CFG0 have no
 *  effect.
 * 
$MIO_BOOT_REG_TIM0   Address=(0x1180000000040)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    PAGEM  RO      0x0        NS         Reserved must be 0                                
 <62>    WAITM  R/W     0x0        NS         Region 0 wait mode                                
 <61:60> PAGES  R/W     0x0        NS         Region 0 page size                                
 <59:54> ALE    R/W     0x4        NS         Region 0 ALE count                                
 <53:48> PAGE   R/W     0x3f       NS         Region 0 page count                               
 <47:42> WAIT   R/W     0x3f       NS         Region 0 wait count                               
                                              Attribute: -exempt_keyword=True.
 <41:36> PAUSE  R/W     0x11       NS         Region 0 pause count                              
 <35:30> WR_HLD R/W     0x3f       NS         Region 0 write hold count                         
 <29:24> RD_HLD R/W     0x5        NS         Region 0 read hold count                          
 <23:18> WE     R/W     0x3f       NS         Region 0 write enable count                       
 <17:12> OE     R/W     0x3f       NS         Region 0 output enable count                      
 <11:6>  CE     R/W     0x5        NS         Region 0 chip enable count                        
 <5:0>   ADR    R/W     0x8        NS         Region 0 address count                            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_BOOT_REG_TIM = MIO Boot Region Timing Register (1 per region * 8 regions)
 * 
 *  Contains page mode, wait mode, page size, and region timing parameters.
 *  Note: OE, WE, PAGE, and ALE must be non-zero to ensure legal transitions on the corresponding
 *  boot bus outputs.
 *  Note: WAIT must be non-zero if WAITM is set.
 *  Note: When region 0 is defined to be NAND flash, all fields in MIO_BOOT_TIM_CFG0 have no
 *  effect.
 * 
$MIO_BOOT_REG_TIM(1..7)   Address=(0x1180000000040+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    PAGEM  RO      0x0        NS         Reserved must be 0                                
 <62>    WAITM  R/W     0x0        NS         Region @ wait mode                                
 <61:60> PAGES  R/W     0x0        NS         Region @ page size                                
 <59:54> ALE    R/W     0x3f       NS         Region @ ALE count                                
 <53:48> PAGE   R/W     0x3f       NS         Region @ page count                               
 <47:42> WAIT   R/W     0x3f       NS         Region @ wait count                               
                                              Attribute: -exempt_keyword=True.
 <41:36> PAUSE  R/W     0x3f       NS         Region @ pause count                              
 <35:30> WR_HLD R/W     0x3f       NS         Region @ write hold count                         
 <29:24> RD_HLD R/W     0x3f       NS         Region @ read hold count                          
 <23:18> WE     R/W     0x3f       NS         Region @ write enable count                       
 <17:12> OE     R/W     0x3f       NS         Region @ output enable count                      
 <11:6>  CE     R/W     0x3f       NS         Region @ chip enable count                        
 <5:0>   ADR    R/W     0x3f       NS         Region @ address count                            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_BOOT_LOC_CFG = MIO Boot Local Memory Region Config Register (1 per region * 2 regions)
 * 
 *  Contains local memory region enable and local memory region base address parameters.  Each
 *  local memory region is 128 bytes organized as 16 entries x 8 bytes.
 *  Base address specifies address bits [31:7] of the region.
 * 
$MIO_BOOT_LOC_CFG(0..1)   Address=(0x1180000000080+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31>    EN    R/W     0x0        NS         Local memory region @ enable                      
 <30:28> NS    RAZ     NS         NS         Reserved.                                         
 <27:3>  BASE  R/W     0x0        NS         Local memory region @ base address                
 <2:0>   NS    RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_BOOT_LOC_ADR = MIO Boot Local Memory Region Address Register
 * 
 *  Specifies the address for reading or writing the local memory region.  This address will
 *  post-increment following an access to the MIO Boot Local Memory Region Data Register
 *  (MIO_BOOT_LOC_DAT).
 *  Local memory region 0 exists from addresses 0x00 - 0x78.
 *  Local memory region 1 exists from addresses 0x80 - 0xf8.
 * 
$MIO_BOOT_LOC_ADR   Address=(0x1180000000090)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:3>   ADR   R/W/H   0x0        NS         Local memory region address                       
 <2:0>   NS    RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_BOOT_LOC_DAT = MIO Boot Local Memory Region Data Register
 * 
 *  This is a pseudo-register that will read/write the local memory region at the address
 *  specified by the MIO Boot Local Memory Region Address Register (MIO_BOOT_LOC_ADR) when
 *  accessed.
 * 
$MIO_BOOT_LOC_DAT   Address=(0x1180000000098)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  DATA R/W/H   NS         NS         Local memory region data                          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_BOOT_ERR = MIO Boot Error Register
 * 
 *  Contains the address decode error and wait mode error bits.  Address decode error is set
 *  when a boot bus access does not hit in any of the 8 remote regions or 2 local memory regions.
 *  Wait mode error is set when wait mode is enabled and the external wait signal is not de-
 *  asserted
 *  after 32k sclk cycles.
 * 
$MIO_BOOT_ERR   Address=(0x11800000000A0)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ     NS         NS         Reserved.                                         
 <1>     WAIT_ERR R/W1C   0x0        0x0        Wait mode error                                   
 <0>     ADR_ERR  R/W1C   0x0        0x0        Address decode error                              
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_BOOT_INT = MIO Boot Interrupt Register
 * 
 *  Contains the interrupt enable bits for address decode error and wait mode error.
 * 
$MIO_BOOT_INT   Address=(0x11800000000A8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ     NS         NS         Reserved.                                         
 <1>     WAIT_INT R/W     0x0        NS         Wait mode error interrupt enable                  
 <0>     ADR_INT  R/W     0x0        NS         Address decode error interrupt enable             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_BOOT_THR = MIO Boot Threshold Register
 * 
 *  Contains MIO Boot threshold values:
 *  FIF_THR = Assert ncb__busy when the Boot NCB input FIFO reaches this level (not typically for
 *  customer use).
 *  DMA_THR = When non-DMA accesses are pending, perform a DMA access after this value of non-DMA
 *  accesses have completed.  If set to zero, only perform a DMA access when non-DMA
 *  accesses are not pending.
 * 
$MIO_BOOT_THR   Address=(0x11800000000B0)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:22> NS      RAZ     NS         NS         Reserved.                                         
 <21:16> DMA_THR R/W     0x0        NS         DMA threshold                                     
 <15:14> NS      RAZ     NS         NS         Reserved.                                         
 <13:8>  FIF_CNT RO/H    0x0        NS         Current NCB FIFO count                            
 <7:6>   NS      RAZ     NS         NS         Reserved.                                         
 <5:0>   FIF_THR R/W     0x19       0x19       NCB busy threshold                                
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_BOOT_COMP = MIO Boot Compensation Register
 * 
 *  This register sets the termination of boot-bus output pins.
 *  Reset value is as follows:
 *  no pullups,                               PCTL=6, NCTL=6 (50 ohm termination)
 *  pullup on boot_cle,                       PCTL=7, NCTL=7 (40 ohm termination)
 *  pullup on boot_ale[0].                    PCTL=4, NCTL=4 (75 ohm termination)
 * 
$MIO_BOOT_COMP   Address=(0x11800000000B8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:11> NS    RAZ     NS         NS         Reserved.                                         
 <10:8>  PCTL  R/W     NS         NS         Boot bus PCTL                                     
 <7:3>   NS    RAZ     NS         NS         Reserved.                                         
 <2:0>   NCTL  R/W     NS         NS         Boot bus NCTL                                     
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_BOOT_PIN_DEFS = MIO Boot Pin Defaults Register
 * 
 *  
 * 
$MIO_BOOT_PIN_DEFS   Address=(0x11800000000C0)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:33> NS          RAZ     NS         NS         Reserved.                                         
 <32>    DLM_SUPPLY  RO      NS         NS         DLM Power Supply Setting based on DLMC_VPH_SELECT_18 pin 1 = 1.8V 0 = 2.5V All others = Reserved
 <31:30> RGM_SUPPLY  RO      NS         NS         RGMii Power Supply Setting based on VDD_RGM_SUPPLY_SELECT pin 01 = 1.8V 10 = 2.5V All
                                                   others = Reserved
 <29:27> SMI_SUPPLY  RO      NS         NS         SMI Power Supply Setting based on VDD_SMI_SUPPLY_SELECT pin 001 = 1.8V 010 = 2.5V 100 =
                                                   3.3V All others = Reserved
 <26:24> IO_SUPPLY   RO      NS         NS         I/O Power Supply Setting based on VDD_IO_SUPPLY_SELECT pin 001 = 1.8V 010 = 2.5V 100 =
                                                   3.3V All others = Reserved
 <23:17> NS          RAZ     NS         NS         Reserved.                                         
 <16>    REF_SEL     RO      NS         NS         Reference Clock Selection based on UART0_RTS_N pin at powerup 0 = DLM_REF_CLK[1] pins div
                                                   2, must be set to 100Mhz 1 = PLL_REF_CLK pin (default), must be set to 50Mhz
 <15>    ALE         RO      0x1        0x1        Set to 1 for backward compatability               
 <14>    WIDTH       RO      0x0        0x0        Set to 0 for backward compatability               
 <13>    VRM_DISABLE RO      NS         NS         VRM disable based on BOOT_DIR pin at powerup      
 <12:10> DEVICE      RO      NS         NS         Boot Device based on BOOT_ALE[3:1] pins at power up 0   = Parallel NOR 1   = Parallel NOR
                                                   via int bootrom (reserved) 2   = EMMC/SD 3   = reserved 4   = SPI Boot 16bit Address 5   =
                                                   SPI Boot 24bit Address 6   = SPI Boot 32bit Address (reserved) 7   = SPI NAND Boot 32bit
                                                   Address (reserved)
 <9:8>   TERM        RO      NS         NS         Selects default driver termination latched from BOOT_ALE[0], BOOT_CLE pins at powerup
 <7:0>   USER0       RO      NS         NS         BOOT_AD [7:0] pins latched at powerup             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_GPIO_COMP = MIO GPIO Compensation Register
 * 
 *  suggested values                          PCTL=6, NCTL=6 (50 ohm termination)
 *                                            PCTL=7, NCTL=7 (40 ohm termination)
 *                                            PCTL=4, NCTL=4 (75 ohm termination)
 * 
$MIO_GPIO_COMP   Address=(0x11800000000C8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:11> NS    RAZ     NS         NS         Reserved.                                         
 <10:8>  PCTL  R/W     0x6        NS         GPIO bus PCTL                                     
 <7:3>   NS    RAZ     NS         NS         Reserved.                                         
 <2:0>   NCTL  R/W     0x6        NS         GPIO bus NCTL                                     
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_BOOT_CTL = MIO BOOT Controller Selection
 * 
 *  The hardware allows only one controller to use the BootBus and the MIO_NDF_DMA engine
 *  at a time.  The SEL field determines the owner.
 *  This field should be changed only when the current controller operations are complete.
 *  Here are several situations.
 *     1.  If eMMC/SD is currently doing a read or write command without a DMA then the
 *         MIO_EMM_INT[CMD_DONE] should occur before SEL is changed.
 *     2.  If eMMC/SD is currently doing a dma operation with the device then the
 *         MIO_EMM_INT[DMA_DONE] should occur before SEL is changed.  Care must be taken not to
 *         reprogram the MIO_NDF_DMA_CFG register until both the previous MIO_NDF_DMA_INT[DONE]
 *         has occurred and the new SEL has been set.
 *     3.  If NAND is currently doing one or more operations to the external device without using
 *         the DMA then the NDF_INT[EMPTY] should occur to guarantee all commands are executed
 *         before changing the SEL value.
 *     4.  If NAND is currently doing one or more operations to the external device which includes
 *         DMAs then the SEL should not change until both the last MIO_NDF_DMA_INT[DONE] and
 *         NDF_INT[EMPTY] have occurred.
 * 
$MIO_BOOT_CTL   Address=(0x11800000000D0)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS    RAZ     NS         NS         Reserved.                                         
 <0>     SEL   R/W     0x0        NS         Controller Selection.                             
                                                     0 = eMMC/SD,
                                                     1 = NAND
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_BOOT_BIST_STAT = MIO Boot BIST Status Register
 * 
 *  Contains the BIST status for the MIO boot memories.  '0' = pass, '1' = fail.
 * 
$MIO_BOOT_BIST_STAT   Address=(0x11800000000F8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:14> NS    RAZ     NS         NS         Reserved.                                         
 <13:0>  STAT  RO      0x0        0x0        BIST status                                       
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_NDF_DMA_CFG = MIO NAND Flash and EMMC Controller DMA Config Register
 * 
 *  SIZE is specified in number of 64 bit transfers (encoded in -1 notation).
 *  ADR must be 64 bit aligned.
 * 
$MIO_NDF_DMA_CFG   Address=(0x1180000000168)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    EN     R/W/H   0x0        NS         DMA Engine enable                                 
 <62>    RW     R/W     0x0        NS         DMA Engine R/W bit (0 = read, 1 = write)          
 <61>    CLR    R/W     0x0        NS         DMA Engine clear EN on device terminated burst    
 <60>    NS     RAZ     NS         NS         Reserved.                                         
 <59>    SWAP32 R/W     0x0        NS         DMA Engine 32 bit swap                            
 <58>    SWAP16 R/W     0x0        NS         DMA Engine 16 bit swap                            
 <57>    SWAP8  R/W     0x0        NS         DMA Engine 8 bit swap                             
 <56>    ENDIAN R/W     0x0        NS         DMA Engine NCB endian mode (0 = big, 1 = little)  
 <55:36> SIZE   R/W/H   0x0        NS         DMA Engine size                                   
 <35:0>  ADR    R/W/H   0x0        NS         DMA Engine address                                
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_NDF_DMA_INT = MIO NAND Flash and EMMC Controller DMA Interrupt Register
 * 
 *  
 * 
$MIO_NDF_DMA_INT   Address=(0x1180000000170)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS    RAZ     NS         NS         Reserved.                                         
 <0>     DONE  R/W1C/H 0x0        NS         DMA Engine request completion interrupt           
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_NDF_DMA_INT_EN = MIO NAND Flash and EMMC Controller DMA Interrupt Enable Register
 * 
 *  
 * 
$MIO_NDF_DMA_INT_EN   Address=(0x1180000000178)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS    RAZ     NS         NS         Reserved.                                         
 <0>     DONE  R/W     0x0        NS         DMA Engine request completion interrupt enable    
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_UART_RBR
 * 
 *  MIO_UART@_RBR = MIO UART@ Receive Buffer Register
 *  The Receive Buffer Register (RBR) is a read-only register that contains the data byte received
 *  on the
 *  serial input port (sin). The data in this register is valid only if the Data Ready (DR) bit in
 *  the
 *  Line status Register (LSR) is set. When the FIFOs are programmed OFF, the data in the RBR must
 *  be
 *  read before the next data arrives, otherwise it is overwritten, resulting in an overrun error.
 *  When the FIFOs are programmed ON, this register accesses the head of the receive FIFO. If the
 *  receive FIFO is full (64 characters) and this register is not read before the next data
 *  character arrives,
 *  then the data already in the FIFO is preserved, but any incoming data is lost. An overrun
 *  error also
 *  occurs. Note: The Divisor Latch Address Bit (DLAB) of the Line Control Register (LCR) must be
 *  clear to
 *  access this register. Note: The address below is an alias to simplify these CSR descriptions.
 *  It should be known
 *  that the RBR, THR, and DLL registers are the same.
 * 
$MIO_UART(0..1)_RBR   Address=(0x1180000000800+a*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:0>   RBR   RO/H    0x0        NS         Receive Buffer Register                           
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_UART_IER
 * 
 *  MIO_UART@_IER = MIO UART@ Interrupt Enable Register
 *  Interrupt Enable Register (IER) is a read/write register that contains four bits that enable
 *  the generation of interrupts. These four bits are the Enable Received Data Available Interrupt
 *  (ERBFI), the Enable Transmitter Holding Register Empty Interrupt (ETBEI), the Enable Receiver
 *  Line Status Interrupt (ELSI), and the Enable Modem Status Interrupt (EDSSI).
 *  The IER also contains an enable bit (PTIME) for the Programmable THRE Interrupt mode.
 *  Note: The Divisor Latch Address Bit (DLAB) of the Line Control Register (LCR) must be clear to
 *  access this register.
 *  Note: The address below is an alias to simplify these CSR descriptions. It should be known
 *  that the IER and DLH registers are the same.
 * 
$MIO_UART(0..1)_IER   Address=(0x1180000000808+a*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7>     PTIME R/W     0x0        NS         Programmable THRE Interrupt mode enable           
 <6:4>   NS    RAZ     NS         NS         Reserved.                                         
 <3>     EDSSI R/W     0x0        NS         Enable Modem Status Interrupt                     
 <2>     ELSI  R/W     0x0        NS         Enable Receiver Line Status Interrupt             
 <1>     ETBEI R/W     0x0        NS         Enable Transmitter Holding Register Empty Interrupt
 <0>     ERBFI R/W     0x0        NS         Enable Received Data Available Interrupt          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_UART_IIR = MIO UART@ Interrupt Identity Register
 * 
 *  The Interrupt Identity Register (IIR) is a read-only register that identifies the source of
 *  an interrupt. The lower four bits identify the highest priority pending interrupt. The
 *  following table defines interrupt source decoding, interrupt priority, and interrupt reset
 *  control:
 *             Priority   Interrupt        Interrupt                                  Interrupt
 *  IID        Level      Type             Source                                     Reset By
 *  -------------------------------------------------------------------------------------------
 *  0001       -          None             None                                          -
 *  0110       Highest    Receiver Line    Overrun, parity, or framing errors or      Reading the
 *  Line Status Register
 *                        Status           break interrupt
 *  0100       Second     Received Data    Receiver data available (FIFOs disabled)   Reading the
 *  Receiver Buffer Register
 *                        Available        or RX FIFO trigger level reached (FIFOs    (FIFOs
 *  disabled) or the FIFO drops below
 *                                         enabled)                                   the trigger
 *  level (FIFOs enabled)
 *  1100       Second     Character        No characters in or out of the RX FIFO     Reading the
 *  Receiver Buffer Register
 *                        Timeout          during the last 4 character times and
 *                        Indication       there is at least 1 character in it
 *                                         during this time
 *  0010       Third      Transmitter      Transmitter Holding Register Empty         Reading the
 *  Interrupt Identity Register
 *                        Holding          (Programmable THRE Mode disabled) or TX    (if source
 *  of interrupt) or writing into
 *                        Register         FIFO at or below threshold (Programmable   THR (FIFOs
 *  or THRE Mode disabled) or TX
 *                        Empty            THRE Mode enabled)                         FIFO above
 *  threshold (FIFOs and THRE
 *                                                                                    Mode
 *  enabled)
 *  0000       Fourth     Modem Status     Clear To Send (CTS) or Data Set Ready      Reading the
 *  Modem Status Register
 *                        Changed          (DSR) or Ring Indicator (RI) or Data
 *                                         Detect (DCD) changed (note: if auto flow
 *                                         Carrier control mode is enabled, a change
 *                                         in CTS will not cause an interrupt)
 * 
$MIO_UART(0..1)_IIR   Address=(0x1180000000810+a*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:6>   FEN   RO      0x0        NS         FIFO-enabled.                                     
                                             00 = FIFOs disabled, 01 = reserved, 10 = reserved, 11 = FIFOs enabled
 <5:4>   NS    RAZ     0x0        NS         Reserved.                                         
 <3:0>   IID   RO      0x1        NS         Interrupt ID, see table above                     
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_UART_LCR = MIO UART@ Line Control Register
 * 
 *  The Line Control Register (LCR) controls the format of the data that is transmitted and
 *  received by the UART.
 *  LCR bits 0 and 1 are the Character Length Select field. This field is used to select the
 *  number of data bits per character that are transmitted and received. See the following table
 *  for encodings:
 *  CLS
 *  ---
 *  00 = 5 bits (bits 0-4 sent)
 *  01 = 6 bits (bits 0-5 sent)
 *  10 = 7 bits (bits 0-6 sent)
 *  11 = 8 bits (all bits sent)
 *  LCR bit 2 controls the number of stop bits transmitted. If bit 2 is a '0', one stop bit is
 *  transmitted in the serial data. If bit 2 is a '1' and the data bits are set to '00', one and
 *  a half stop bits are generated. Otherwise, two stop bits are generated and transmitted in the
 *  serial data out. Note that regardless of the number of stop bits selected the receiver will
 *  only
 *  check the first stop bit.
 *  LCR bit 3 is the Parity Enable bit. This bit is used to enable and disable parity generation
 *  and detection in transmitted and received serial character respectively.
 *  LCR bit 4 is the Even Parity Select bit. If parity is enabled, bit 4 selects between even and
 *  odd parity. If bit 4 is a '1', an even number of ones is transmitted or checked. If bit 4 is a
 *  '0', an odd number of ones is transmitted or checked.
 *  LCR bit 6 is the Break Control bit. Setting the Break bit sends a break signal by holding the
 *  sout line low (when not in Loopback mode, as determined by Modem Control Register bit 4). When
 *  in Loopback mode, the break condition is internally looped back to the receiver.
 *  LCR bit 7 is the Divisor Latch Address bit. Setting this bit enables reading and writing of
 *  the Divisor Latch register (DLL and DLH) to set the baud rate of the UART. This bit must be
 *  cleared after initial baud rate setup in order to access other registers.
 *  Note: The LCR is writeable only when the UART is not busy (when the BUSY bit (bit 0) of the
 *  UART
 *  Status Register (USR) is clear). The LCR is always readable and writable because the BUSY bit
 *  is always clear.
 * 
$MIO_UART(0..1)_LCR   Address=(0x1180000000818+a*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7>     DLAB  R/W     0x0        NS         Divisor Latch Address bit                         
 <6>     BRK   R/W     0x0        NS         Break Control bit                                 
 <5>     NS    RAZ     NS         NS         Reserved.                                         
 <4>     EPS   R/W     0x0        NS         Even Parity Select bit                            
 <3>     PEN   R/W     0x0        NS         Parity Enable bit                                 
 <2>     STOP  R/W     0x0        NS         Stop Control bit                                  
 <1:0>   CLS   R/W     0x0        NS         Character Length Select                           
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_UART_MCR = MIO UART@ Modem Control Register
 * 
 *  The lower four bits of the Modem Control Register (MCR) directly manipulate the outputs of the
 *  UART.
 *  The DTR (bit 0), RTS (bit 1), OUT1 (bit 2), and OUT2 (bit 3) bits are inverted and then drive
 *  the corresponding UART outputs, dtr_n, rts_n, out1_n, and out2_n.  In loopback mode, these
 *  outputs
 *  are driven inactive high while the values in these locations are internally looped back to the
 *  inputs.
 *  Note: When Auto RTS is enabled, the rts_n output is controlled in the same way, but is also
 *  gated with the receiver FIFO threshold trigger (rts_n is inactive high when above the
 *  threshold).
 *  The rts_n output will be de-asserted whenever RTS (bit 1) is set low.
 *  Note: The UART0 out1_n and out2_n outputs are not present on the pins of the chip, but the
 *  UART0 OUT1 and OUT2 bits still function in Loopback mode.  The UART1 dtr_n, out1_n, and out2_n
 *  outputs
 *  are not present on the pins of the chip, but the UART1 DTR, OUT1, and OUT2 bits still function
 *  in
 *  Loopback mode.
 *  MCR bit 4 is the Loopback bit. When set, data on the sout line is held high, while serial data
 *  output is looped back to the sin line, internally. In this mode all the interrupts are fully
 *  functional. This feature is used for diagnostic purposes. Also, in loopback mode, the modem
 *  control
 *  inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the four modem control outputs (dtr_n,
 *  rts_n,
 *  out1_n, out1_n) are looped back to the inputs, internally.
 *  MCR bit 5 is the Auto Flow Control Enable (AFCE) bit. When FIFOs are enabled and this bit is
 *  set, 16750-compatible Auto RTS and Auto CTS serial data flow control features are enabled.
 *  Auto RTS becomes active when the following occurs:
 *  1. MCR bit 1 is set
 *  2. FIFOs are enabled by setting FIFO Control Register (FCR) bit 0
 *  3. MCR bit 5 is set (must be set after FCR bit 0)
 *  When active, the rts_n output is forced inactive-high when the receiver FIFO level reaches the
 *  threshold set by FCR[7:6]. When rts_n is connected to the cts_n input of another UART device,
 *  the other UART stops sending serial data until the receiver FIFO has available space.
 *  The selectable receiver FIFO threshold values are: 1, 1/4, 1/2, and 2 less than full. Since
 *  one additional character may be transmitted to the UART after rts_n has become inactive (due
 *  to
 *  data already having entered the transmitter block in the other UART), setting the threshold to
 *  2
 *  less than full allows maximum use of the FIFO with a safety zone of one character.
 *  Once the receiver FIFO becomes completely empty by reading the Receiver Buffer Register (RBR),
 *  rts_n again becomes active-low, signalling the other UART to continue sending data. It is
 *  important
 *  to note that, even if everything else is set to Enabled and the correct MCR bits are set, if
 *  the FIFOs
 *  are disabled through FCR[0], Auto Flow Control is also disabled. When Auto RTS is disabled or
 *  inactive, rts_n is controlled solely by MCR[1].
 *  Auto CTS becomes active when the following occurs:
 *  1. FIFOs are enabled by setting FIFO Control Register (FCR) bit 0
 *  2. MCR bit 5 is set (must be set after FCR bit 0)
 *  When active, the UART transmitter is disabled whenever the cts_n input becomes inactive-high.
 *  This prevents overflowing the FIFO of the receiving UART.
 *  Note that, if the cts_n input is not inactivated before the middle of the last stop bit,
 *  another character is transmitted before the transmitter is disabled. While the transmitter is
 *  disabled, the transmitter FIFO can still be written to, and even overflowed. Therefore, when
 *  using this
 *  mode, either the true FIFO depth (64 characters) must be known to software, or the
 *  Programmable THRE
 *  Interrupt mode must be enabled to access the FIFO full status through the Line Status
 *  Register. When using
 *  the FIFO full status, software can poll this before each write to the Transmitter FIFO.
 *  Note: FIFO full status is also available in the UART Status Register (USR) or the actual level
 *  of the FIFO may be read through the Transmit FIFO Level (TFL) register.
 *  When the cts_n input becomes active-low again, transmission resumes. It is important to note
 *  that, even if everything else is set to Enabled, Auto Flow Control is also disabled if the
 *  FIFOs are
 *  disabled through FCR[0]. When Auto CTS is disabled or inactive, the transmitter is unaffected
 *  by cts_n.
 * 
$MIO_UART(0..1)_MCR   Address=(0x1180000000820+a*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:6>   NS    RAZ     NS         NS         Reserved.                                         
 <5>     AFCE  R/W     0x0        NS         Auto Flow Control Enable bit                      
 <4>     LOOP  R/W     0x0        NS         Loopback bit                                      
 <3>     OUT2  R/W     0x0        NS         OUT2 output bit                                   
 <2>     OUT1  R/W     0x0        NS         OUT1 output bit                                   
 <1>     RTS   R/W     0x0        NS         Request To Send output bit                        
 <0>     DTR   R/W     0x0        NS         Data Terminal Ready output bit                    
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_UART_LSR = MIO UART@ Line Status Register
 * 
 *  The Line Status Register (LSR) contains status of the receiver and transmitter data transfers.
 *  This status can be read by the user at anytime.
 *  LSR bit 0 is the Data Ready (DR) bit. When set, this bit indicates the receiver contains at
 *  least one character in the RBR or the receiver FIFO. This bit is cleared when the RBR is read
 *  in the
 *  non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.
 *  LSR bit 1 is the Overrun Error (OE) bit. When set, this bit indicates an overrun error has
 *  occurred because a new data character was received before the previous data was read. In the
 *  non-FIFO
 *  mode, the OE bit is set when a new character arrives in the receiver before the previous
 *  character was
 *  read from the RBR. When this happens, the data in the RBR is overwritten. In the FIFO mode, an
 *  overrun
 *  error occurs when the FIFO is full and a new character arrives at the receiver. The data in
 *  the FIFO
 *  is retained and the data in the receive shift register is lost.
 *  LSR bit 2 is the Parity Error (PE) bit. This bit is set whenever there is a parity error in
 *  the receiver if the Parity Enable (PEN) bit in the LCR is set. In the FIFO mode, since the
 *  parity
 *  error is associated with a character received, it is revealed when the character with the
 *  parity error
 *  arrives at the top of the FIFO. It should be noted that the Parity Error (PE) bit will be set
 *  if a
 *  break interrupt has occurred, as indicated by the Break Interrupt (BI) bit.
 *  LSR bit 3 is the Framing Error (FE) bit. This bit is set whenever there is a framing error in
 *  the receiver. A framing error occurs when the receiver does not detect a valid STOP bit in the
 *  received data. In the FIFO mode, since the framing error is associated with a character
 *  received, it is
 *  revealed when the character with the framing error is at the top of the FIFO. When a framing
 *  error occurs the UART will try resynchronize. It does this by assuming that the error was due
 *  to the
 *  start bit of the next character and then continues receiving the other bits (i.e. data and/or
 *  parity
 *  and stop). It should be noted that the Framing Error (FE) bit will be set if a break interrupt
 *  has
 *  occurred, as indicated by the Break Interrupt (BI) bit.
 *  Note: The OE, PE, and FE bits are reset when a read of the LSR is performed.
 *  LSR bit 4 is the Break Interrupt (BI) bit. This bit is set whenever the serial input (sin) is
 *  held in a 0 state for longer than the sum of start time + data bits + parity + stop bits. A
 *  break
 *  condition on sin causes one and only one character, consisting of all zeros, to be received by
 *  the UART. In
 *  the FIFO mode, the character associated with the break condition is carried through the FIFO
 *  and
 *  is revealed when the character is at the top of the FIFO. Reading the LSR clears the BI bit.
 *  In
 *  the non-FIFO mode, the BI indication occurs immediately and persists until the LSR is read.
 *  LSR bit 5 is the Transmitter Holding Register Empty (THRE) bit. When Programmable THRE
 *  Interrupt mode is disabled, this bit indicates that the UART can accept a new character for
 *  transmission.
 *  This bit is set whenever data is transferred from the THR (or TX FIFO) to the transmitter
 *  shift register
 *  and no new data has been written to the THR (or TX FIFO). This also causes a THRE Interrupt to
 *  occur,
 *  if the THRE Interrupt is enabled. When FIFOs and Programmable THRE Interrupt mode are enabled,
 *  LSR
 *  bit 5 functionality is switched to indicate the transmitter FIFO is full, and no longer
 *  controls
 *  THRE Interrupts, which are then controlled by the FCR[5:4] threshold setting.
 *  LSR bit 6 is the Transmitter Empty (TEMT) bit. In the FIFO mode, this bit is set whenever the
 *  Transmitter Shift Register and the FIFO are both empty. In the non-FIFO mode, this bit is set
 *  whenever the Transmitter Holding Register and the Transmitter Shift Register are both empty.
 *  This bit
 *  is typically used to make sure it is safe to change control registers. Changing control
 *  registers
 *  while the transmitter is busy can result in corrupt data being transmitted.
 *  LSR bit 7 is the Error in Receiver FIFO (FERR) bit. This bit is active only when FIFOs are
 *  enabled. It is set when there is at least one parity error, framing error, or break indication
 *  in the
 *  FIFO. This bit is cleared when the LSR is read and the character with the error is at the top
 *  of the
 *  receiver FIFO and there are no subsequent errors in the FIFO.
 * 
$MIO_UART(0..1)_LSR   Address=(0x1180000000828+a*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7>     FERR  RC      0x0        NS         Error in Receiver FIFO bit                        
 <6>     TEMT  RO/H    0x1        NS         Transmitter Empty bit                             
 <5>     THRE  RO/H    0x1        NS         Transmitter Holding Register Empty bit            
 <4>     BI    RC      0x0        NS         Break Interrupt bit                               
 <3>     FE    RC      0x0        NS         Framing Error bit                                 
 <2>     PE    RC      0x0        NS         Parity Error bit                                  
 <1>     OE    RC      0x0        NS         Overrun Error bit                                 
 <0>     DR    RO/H    0x0        NS         Data Ready bit                                    
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_UART_MSR = MIO UART@ Modem Status Register
 * 
 *  The Modem Status Register (MSR) contains the current status of the modem control input lines
 *  and if they changed.
 *  DCTS (bit 0), DDSR (bit 1), and DDCD (bit 3) bits record whether the modem control lines
 *  (cts_n, dsr_n, and dcd_n) have changed since the last time the user read the MSR. TERI (bit 2)
 *  indicates ri_n has changed from an active-low, to an inactive-high state since the last time
 *  the MSR was
 *  read. In Loopback mode, DCTS reflects changes on MCR bit 1 (RTS), DDSR reflects changes on MCR
 *  bit 0
 *  (DTR), and DDCD reflects changes on MCR bit 3 (Out2), while TERI reflects when MCR bit 2
 *  (Out1) has
 *  changed state from a high to a low.
 *  Note: if the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs
 *  (software or otherwise), then the DCTS bit will get set when the reset is removed if the cts_n
 *  signal
 *  remains asserted.
 *  The CTS, DSR, RI, and DCD Modem Status bits contain information on the current state of the
 *  modem control lines. CTS (bit 4) is the compliment of cts_n, DSR (bit 5) is the compliment of
 *  dsr_n,
 *  RI (bit 6) is the compliment of ri_n, and DCD (bit 7) is the compliment of dcd_n. In Loopback
 *  mode, CTS is the same as MCR bit 1 (RTS), DSR is the same as MCR bit 0 (DTR), RI is the same
 *  as MCR bit
 *  2 (Out1), and DCD is the same as MCR bit 3 (Out2).
 *  Note: The UART0 dsr_n and ri_n inputs are internally tied to power and not present on the pins
 *  of chip. Thus the UART0 DSR and RI bits will be '0' when not in Loopback mode.  The UART1
 *  dsr_n, ri_n,
 *  and dcd_n inputs are internally tied to power and not present on the pins of chip. Thus the
 *  UART1 DSR,
 *  RI, and DCD bits will be '0' when not in Loopback mode.
 * 
$MIO_UART(0..1)_MSR   Address=(0x1180000000830+a*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7>     DCD   RO      0x0        NS         Data Carrier Detect input bit                     
 <6>     RI    RO      0x0        NS         Ring Indicator input bit                          
 <5>     DSR   RO      0x0        NS         Data Set Ready input bit                          
 <4>     CTS   RO      NS         NS         Clear To Send input bit                           
 <3>     DDCD  RC      0x0        NS         Delta Data Carrier Detect bit                     
 <2>     TERI  RC      0x0        NS         Trailing Edge of Ring Indicator bit               
 <1>     DDSR  RC      0x0        NS         Delta Data Set Ready bit                          
 <0>     DCTS  RC      0x0        NS         Delta Clear To Send bit                           
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_UART_SCR = MIO UART@ Scratchpad Register
 * 
 *  The Scratchpad Register (SCR) is an 8-bit read/write register for programmers to use as a
 *  temporary storage space.
 * 
$MIO_UART(0..1)_SCR   Address=(0x1180000000838+a*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:0>   SCR   R/W     0x0        NS         Scratchpad Register                               
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_UART_THR = MIO UART@ Transmit Holding Register
 * 
 *  Transmit Holding Register (THR) is a write-only register that contains data to be transmitted
 *  on the serial output port (sout). Data can be written to the THR any time that the THR Empty
 *  (THRE)
 *  bit of the Line Status Register (LSR) is set.
 *  If FIFOs are not enabled and THRE is set, writing a single character to the THR clears the
 *  THRE. Any additional writes to the THR before the THRE is set again causes the THR data to be
 *  overwritten. If FIFOs are enabled and THRE is set (and Programmable THRE mode disabled), 64
 *  characters of
 *  data may be written to the THR before the FIFO is full. Any attempt to write data when the
 *  FIFO is full
 *  results in the write data being lost.
 *  Note: The Divisor Latch Address Bit (DLAB) of the Line Control Register (LCR) must be clear to
 *  access this register.
 *  Note: The address below is an alias to simplify these CSR descriptions. It should be known
 *  that the RBR, THR, and DLL registers are the same.
 * 
$MIO_UART(0..1)_THR   Address=(0x1180000000840+a*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:0>   THR   WO      0x0        NS         Transmit Holding Register                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_UART_FCR = MIO UART@ FIFO Control Register
 * 
 *  The FIFO Control Register (FCR) is a write-only register that controls the read and write data
 *  FIFO operation. When FIFOs and Programmable THRE Interrupt mode are enabled, this register
 *  also
 *  controls the THRE Interrupt empty threshold level.
 *  Setting bit 0 of the FCR enables the transmit and receive FIFOs. Whenever the value of this
 *  bit is changed both the TX and RX FIFOs will be reset.
 *  Writing a '1' to bit 1 of the FCR resets and flushes data in the receive FIFO. Note that this
 *  bit is self-clearing and it is not necessary to clear this bit.
 *  Writing a '1' to bit 2 of the FCR resets and flushes data in the transmit FIFO. Note that this
 *  bit is self-clearing and it is not necessary to clear this bit.
 *  If the FIFOs and Programmable THRE Interrupt mode are enabled, bits 4 and 5 control the empty
 *  threshold level at which THRE Interrupts are generated when the mode is active.  See the
 *  following table for encodings:
 *  TX Trigger
 *  ----------
 *  00 = empty FIFO
 *  01 = 2 chars in FIFO
 *  10 = FIFO 1/4 full
 *  11 = FIFO 1/2 full
 *  If the FIFO mode is enabled (bit 0 of the FCR is set to '1') bits 6 and 7 are active. Bit 6
 *  and bit 7 set the trigger level in the receiver FIFO for the Enable Received Data Available
 *  Interrupt
 *  (ERBFI). In auto flow control mode the trigger is used to determine when the rts_n signal will
 *  be
 *  deasserted. See the following table for encodings:
 *  RX Trigger
 *  ----------
 *  00 = 1 char in FIFO
 *  01 = FIFO 1/4 full
 *  10 = FIFO 1/2 full
 *  11 = FIFO 2 chars less than full
 *  Note: The address below is an alias to simplify these CSR descriptions. It should be known
 *  that the IIR and FCR registers are the same.
 * 
$MIO_UART(0..1)_FCR   Address=(0x1180000000850+a*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS     RAZ     NS         NS         Reserved.                                         
 <7:6>   RXTRIG WO      0x0        NS         RX Trigger                                        
 <5:4>   TXTRIG WO      0x0        NS         TX Trigger                                        
 <3>     NS     RAZ     NS         NS         Reserved.                                         
 <2>     TXFR   WO      0x0        NS         TX FIFO reset                                     
 <1>     RXFR   WO      0x0        NS         RX FIFO reset                                     
 <0>     EN     WO      0x0        NS         FIFO enable                                       
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_UART_DLL = MIO UART@ Divisor Latch Low Register
 * 
 *  The DLH (Divisor Latch High) register in conjunction with DLL (Divisor Latch Low) register
 *  form a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the
 *  UART.
 *  It is accessed by first setting the DLAB bit (bit 7) in the Line Control Register (LCR). The
 *  output
 *  baud rate is equal to eclk frequency divided by sixteen times the value of the baud rate
 *  divisor,
 *  as follows: baud rate = eclk / (16 * divisor).
 *  Note that with the Divisor Latch Registers (DLL and DLH) set to zero, the baud clock is
 *  disabled and no serial communications will occur. Also, once the DLL or DLH is set, at least 8
 *  clock
 *  cycles of eclk should be allowed to pass before transmitting or receiving data.
 *  Note: The address below is an alias to simplify these CSR descriptions. It should be known
 *  that the RBR, THR, and DLL registers are the same.
 * 
$MIO_UART(0..1)_DLL   Address=(0x1180000000880+a*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:0>   DLL   R/W     0x0        NS         Divisor Latch Low Register                        
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_UART_DLH = MIO UART@ Divisor Latch High Register
 * 
 *  The DLH (Divisor Latch High) register in conjunction with DLL (Divisor Latch Low) register
 *  form a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the
 *  UART.
 *  It is accessed by first setting the DLAB bit (bit 7) in the Line Control Register (LCR). The
 *  output
 *  baud rate is equal to eclk frequency divided by sixteen times the value of the baud rate
 *  divisor,
 *  as follows: baud rate = eclk / (16 * divisor).
 *  Note that with the Divisor Latch Registers (DLL and DLH) set to zero, the baud clock is
 *  disabled and no serial communications will occur. Also, once the DLL or DLH is set, at least 8
 *  clock
 *  cycles of eclk should be allowed to pass before transmitting or receiving data.
 *  Note: The address below is an alias to simplify these CSR descriptions. It should be known
 *  that the IER and DLH registers are the same.
 * 
$MIO_UART(0..1)_DLH   Address=(0x1180000000888+a*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:0>   DLH   R/W     0x0        NS         Divisor Latch High Register                       
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_UART_FAR = MIO UART@ FIFO Access Register
 * 
 *  The FIFO Access Register (FAR) is used to enable a FIFO access mode for testing, so that the
 *  receive FIFO can be written by software and the transmit FIFO can be read by software when the
 *  FIFOs
 *  are enabled. When FIFOs are not enabled it allows the RBR to be written by software and the
 *  THR to
 *  be read by software. Note, that when the FIFO access mode is enabled/disabled, the control
 *  portion of
 *  the receive FIFO and transmit FIFO is reset and the FIFOs are treated as empty.
 * 
$MIO_UART(0..1)_FAR   Address=(0x1180000000920+a*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS    RAZ     NS         NS         Reserved.                                         
 <0>     FAR   R/W     0x0        NS         FIFO Access Register                              
                                             Attribute: -exempt_keyword=True.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_UART_TFR = MIO UART@ Transmit FIFO Read Register
 * 
 *  The Transmit FIFO Read Register (TFR) is only valid when FIFO access mode is enabled (FAR bit
 *  0 is set). When FIFOs are enabled, reading this register gives the data at the top of the
 *  transmit
 *  FIFO. Each consecutive read pops the transmit FIFO and gives the next data value that is
 *  currently
 *  at the top of the FIFO. When FIFOs are not enabled, reading this register gives the data in
 *  the THR.
 * 
$MIO_UART(0..1)_TFR   Address=(0x1180000000928+a*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:0>   TFR   RO      0x0        NS         Transmit FIFO Read Register                       
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_UART_RFW = MIO UART@ Receive FIFO Write Register
 * 
 *  The Receive FIFO Write Register (RFW) is only valid when FIFO access mode is enabled (FAR bit
 *  0 is set). When FIFOs are enabled, this register is used to write data to the receive FIFO.
 *  Each
 *  consecutive write pushes the new data to the next write location in the receive FIFO. When
 *  FIFOs are not enabled, this register is used to write data to the RBR.
 * 
$MIO_UART(0..1)_RFW   Address=(0x1180000000930+a*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:10> NS    RAZ     NS         NS         Reserved.                                         
 <9>     RFFE  WO      0x0        NS         Receive FIFO Framing Error                        
 <8>     RFPE  WO      0x0        NS         Receive FIFO Parity Error                         
 <7:0>   RFWD  WO      0x0        NS         Receive FIFO Write Data                           
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_UART_USR = MIO UART@ UART Status Register
 * 
 *  The UART Status Register (USR) contains UART status information.
 *  USR bit 0 is the BUSY bit.  When set this bit indicates that a serial transfer is in progress,
 *  when clear it indicates that the UART is idle or inactive.
 *  Note: The BUSY bit will always be clear.
 *  USR bits 1-4 indicate the following FIFO status: TX FIFO Not Full (TFNF), TX FIFO Empty (TFE),
 *  RX FIFO Not Empty (RFNE), and RX FIFO Full (RFF).
 * 
$MIO_UART(0..1)_USR   Address=(0x1180000000938+a*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:5>  NS    RAZ     NS         NS         Reserved.                                         
 <4>     RFF   RO      0x0        NS         RX FIFO Full                                      
 <3>     RFNE  RO      0x0        NS         RX FIFO Not Empty                                 
 <2>     TFE   RO      0x1        NS         TX FIFO Empty                                     
 <1>     TFNF  RO      0x1        NS         TX FIFO Not Full                                  
 <0>     BUSY  RO      0x0        NS         Busy bit (always 0)                               
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_UART_TFL = MIO UART@ Transmit FIFO Level Register
 * 
 *  The Transmit FIFO Level Register (TFL) indicates the number of data entries in the transmit FIFO.
 * 
$MIO_UART(0..1)_TFL   Address=(0x1180000000A00+a*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:7>  NS    RAZ     NS         NS         Reserved.                                         
 <6:0>   TFL   RO      0x0        NS         Transmit FIFO Level Register                      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_UART_RFL = MIO UART@ Receive FIFO Level Register
 * 
 *  The Receive FIFO Level Register (RFL) indicates the number of data entries in the receive
 *  FIFO.
 * 
$MIO_UART(0..1)_RFL   Address=(0x1180000000A08+a*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:7>  NS    RAZ     NS         NS         Reserved.                                         
 <6:0>   RFL   RO      0x0        NS         Receive FIFO Level Register                       
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_UART_SRR = MIO UART@ Software Reset Register
 * 
 *  The Software Reset Register (SRR) is a write-only register that resets the UART and/or the
 *  receive FIFO and/or the transmit FIFO.
 *  Bit 0 of the SRR is the UART Soft Reset (USR) bit.  Setting this bit resets the UART.
 *  Bit 1 of the SRR is a shadow copy of the RX FIFO Reset bit (FCR bit 1). This can be used to
 *  remove the burden on software having to store previously written FCR values (which are pretty
 *  static)
 *  just to reset the receive FIFO.
 *  Bit 2 of the SRR is a shadow copy of the TX FIFO Reset bit (FCR bit 2). This can be used to
 *  remove the burden on software having to store previously written FCR values (which are pretty
 *  static)
 *  just to reset the transmit FIFO.
 * 
$MIO_UART(0..1)_SRR   Address=(0x1180000000A10+a*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:3>  NS    RAZ     NS         NS         Reserved.                                         
 <2>     STFR  WO      0x0        NS         Shadow TX FIFO Reset                              
 <1>     SRFR  WO      0x0        NS         Shadow RX FIFO Reset                              
 <0>     USR   WO      0x0        NS         UART Soft Reset                                   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_UART_SRTS = MIO UART@ Shadow Request To Send Register
 * 
 *  The Shadow Request To Send Register (SRTS) is a shadow register for the RTS bit (MCR bit 1)
 *  that can
 *  be used to remove the burden of having to perform a read-modify-write on the MCR.
 * 
$MIO_UART(0..1)_SRTS   Address=(0x1180000000A18+a*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS    RAZ     NS         NS         Reserved.                                         
 <0>     SRTS  R/W     0x0        NS         Shadow Request To Send                            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_UART_SBCR = MIO UART@ Shadow Break Control Register
 * 
 *  The Shadow Break Control Register (SBCR) is a shadow register for the BRK bit (LCR bit 6) that
 *  can be used to remove the burden of having to perform a read-modify-write on the LCR.
 * 
$MIO_UART(0..1)_SBCR   Address=(0x1180000000A20+a*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS    RAZ     NS         NS         Reserved.                                         
 <0>     SBCR  R/W     0x0        NS         Shadow Break Control                              
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_UART_SFE = MIO UART@ Shadow FIFO Enable Register
 * 
 *  The Shadow FIFO Enable Register (SFE) is a shadow register for the FIFO enable bit (FCR bit 0)
 *  that can be used to remove the burden of having to store the previously written value to the
 *  FCR in
 *  memory and having to mask this value so that only the FIFO enable bit gets updated.
 * 
$MIO_UART(0..1)_SFE   Address=(0x1180000000A30+a*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS    RAZ     NS         NS         Reserved.                                         
 <0>     SFE   R/W     0x0        NS         Shadow FIFO Enable                                
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_UART_SRT = MIO UART@ Shadow RX Trigger Register
 * 
 *  The Shadow RX Trigger Register (SRT) is a shadow register for the RX Trigger bits (FCR bits
 *  7:6) that
 *  can be used to remove the burden of having to store the previously written value to the FCR in
 *  memory and having to mask this value so that only the RX Trigger bits get updated.
 * 
$MIO_UART(0..1)_SRT   Address=(0x1180000000A38+a*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:2>  NS    RAZ     NS         NS         Reserved.                                         
 <1:0>   SRT   R/W     0x0        NS         Shadow RX Trigger                                 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_UART_STT = MIO UART@ Shadow TX Trigger Register
 * 
 *  The Shadow TX Trigger Register (STT) is a shadow register for the TX Trigger bits (FCR bits
 *  5:4) that can be used to remove the burden of having to store the previously written value to
 *  the FCR in
 *  memory and having to mask this value so that only the TX Trigger bits get updated.
 * 
$MIO_UART(0..1)_STT   Address=(0x1180000000B00+a*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:2>  NS    RAZ     NS         NS         Reserved.                                         
 <1:0>   STT   R/W     0x0        NS         Shadow TX Trigger                                 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_UART_HTX = MIO UART@ Halt TX Register
 * 
 *  The Halt TX Register (HTX) is used to halt transmissions for testing, so that the transmit
 *  FIFO can be filled by software when FIFOs are enabled. If FIFOs are not enabled, setting the
 *  HTX
 *  register will have no effect.
 * 
$MIO_UART(0..1)_HTX   Address=(0x1180000000B08+a*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS    RAZ     NS         NS         Reserved.                                         
 <0>     HTX   R/W     0x0        NS         Halt TX                                           
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_TWS_SW_TWSI = TWS@ Software to TWSI Register
 * 
 *  This register allows software to
 *  - initiate TWSI interface master-mode operations with a write and read the result with a read
 *  - load four bytes for later retrieval (slave mode) with a write and check validity with a read
 *  - launch a TWSI controller configuration read/write with a write and read the result with a
 *  read
 *  This register should be read or written by software, and read by the TWSI device. The TWSI
 *  device can use either two-byte or five-byte reads to reference this register.
 *  The TWSI device considers this register valid when V==1 and SLONLY==1.
 * 
$MIO_TWS(0..1)_SW_TWSI   Address=(0x1180000001000+a*0x200)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    V      RC/W/H  0x0        NS         Valid bit                                         
                                              - Set on a write (should always be written with a 1)
                                              - Cleared when a TWSI master mode op completes
                                              - Cleared when a TWSI configuration register access completes
                                              - Cleared when the TWSI device reads the register if SLONLY==1
 <62>    SLONLY R/W     0x0        NS         Slave Only Mode                                   
                                              - No operation is initiated with a write when
                                              this bit is set - only D field is updated in
                                              this case
                                              - When clear, a write initiates either a TWSI
                                              master-mode operation or a TWSI configuration
                                              register access
 <61>    EIA    R/W     0x0        NS         Extended Internal Address - send additional       
                                              internal address byte (MSB of IA is from IA field
                                              of MIO_TWS_SW_TWSI_EXT)
 <60:57> OP     R/W     0x0        NS         Opcode field - When the register is written with  
                                              SLONLY==0, initiate a read or write:
                                              0000 => 7-bit Byte Master Mode TWSI Op
                                              0001 => 7-bit Byte Combined Read Master Mode Op
                                              7-bit Byte Write w/ IA Master Mode Op
                                              0010 => 10-bit Byte Master Mode TWSI Op
                                              0011 => 10-bit Byte Combined Read Master Mode Op
                                              10-bit Byte Write w/ IA Master Mode Op
                                              0100 => TWSI Master Clock Register
                                              0110 => See EOP field
                                              1000 => 7-bit 4-byte Master Mode TWSI Op
                                              1001 => 7-bit 4-byte Comb. Read Master Mode Op
                                              7-bit 4-byte Write w/ IA Master Mode Op
                                              1010 => 10-bit 4-byte Master Mode TWSI Op
                                              1011 => 10-bit 4-byte Comb. Read Master Mode Op
                                              10-bit 4-byte Write w/ IA Master Mode Op
 <56>    R      R/W/H   0x0        NS         Read bit or result                                
                                              - If set on a write when SLONLY==0, the
                                              operation is a read
                                              - On a read, this bit returns the result
                                              indication for the most recent master mode
                                              operation (1 = success, 0 = fail)
 <55>    SOVR   R/W     0x0        NS         Size Override - if set, use the SIZE field to     
                                              determine Master Mode Op size rather than what
                                              the Opcode field specifies.  For operations
                                              greater than 4 bytes, the additional data will be
                                              contained in the D field of MIO_TWS_SW_TWSI_EXT
 <54:52> SIZE   R/W     0x0        NS         Size in bytes of Master Mode Op if the Size       
                                              Override bit is set.  Specified in -1 notation
                                              (i.e. 0 = 1 byte, 1 = 2 bytes ... 7 = 8 bytes)
 <51:50> SCR    R/W     0x0        NS         Scratch - unused, but retain state                
 <49:40> ADDR   R/W     0x0        NS         Address field                                     
                                              - the address of the remote device for a master
                                              mode operation
                                              - A<9:7> are only used for 10-bit addressing
                                              Note that when mastering a 7-bit OP, A<6:0> should
                                              not take any of the values 0x78, 0x79, 0x7A nor
                                              0x7B (these 7-bit addresses are reserved to
                                              extend to 10-bit addressing).
 <39:35> IA     R/W     0x0        NS         Internal Address - Used when launching a master   
                                              mode combined read / write with internal address
                                              (lower 3 bits are contained in the EOP_IA field)
 <34:32> EOP_IA R/W     0x0        NS         Extra opcode (when OP<3:0> == 0110 and SLONLY==0):
                                              000 => TWSI Slave Address Register
                                              001 => TWSI Data Register
                                              010 => TWSI Control Register
                                              011 => TWSI Clock Control Register (when R == 0)
                                              011 => TWSI Status Register (when R == 1)
                                              100 => TWSI Extended Slave Register
                                              111 => TWSI Soft Reset Register
                                              Also the lower 3 bits of Internal Address when
                                              launching a master mode combined read / write
                                              with internal address
 <31:0>  D      R/W/H   0x0        NS         Data Field                                        
                                              Used on a write when
                                              - initiating a master-mode write (SLONLY==0)
                                              - writing a TWSI config register (SLONLY==0)
                                              - a slave mode write (SLONLY==1)
                                              The read value is updated by
                                              - a write to this register
                                              - master mode completion (contains result or
                                              error code)
                                              - TWSI config register read (contains result)
                                              Attribute: -exempt_keyword=True.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_TWS_TWSI_SW = TWS@ TWSI to Software Register
 * 
 *  This register allows the TWSI device to transfer data to software and later check that
 *  software has received the information.
 *  This register should be read or written by the TWSI device, and read by software. The TWSI
 *  device can use one-byte or four-byte payload writes, and two-byte payload reads.
 *  The TWSI device considers this register valid when V==1.
 * 
$MIO_TWS(0..1)_TWSI_SW   Address=(0x1180000001008+a*0x200)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:62> V     RC/W    0x0        NS         Valid Bits                                        
                                             - Not directly writable
                                             - Set to 1 on any write by the TWSI device
                                             - Cleared on any read by software
 <61:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  D     R/W     NS         NS         Data Field - updated on a write by the TWSI device
                                             Attribute: -exempt_keyword=True.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_TWS_INT = TWS@ Interrupt Register
 * 
 *  This register contains the TWSI interrupt enable mask and the interrupt source bits.  Note:
 *  the interrupt source bit for the TWSI core interrupt (CORE_INT) is read-only, the appropriate
 *  sequence must be written to the TWSI core to clear this interrupt.  The other interrupt source
 *  bits are
 *  write-one-to-clear.  TS_INT is set on the update of the MIO_TWS_TWSI_SW register (i.e. when it
 *  is
 *  written by a TWSI device).  ST_INT is set whenever the valid bit of the MIO_TWS_SW_TWSI is
 *  cleared
 *  (see above for reasons).
 *  Note: When using the high-level controller, CORE_EN should be clear and CORE_INT should be
 *  ignored.
 *  Conversely, when the high-level controller is disabled, ST_EN / TS_EN should be clear and
 *  ST_INT / TS_INT should be ignored.
 *  This register also contains a read-only copy of the TWSI bus (SCL and SDA) as well as control
 *  bits to override the current state of the TWSI bus (SCL_OVR and SDA_OVR).  Setting an override
 *  bit
 *  high will result in the open drain driver being activated, thus driving the corresponding
 *  signal low.
 *  Attribute: -exempt_w1c_w=True.
 * 
$MIO_TWS(0..1)_INT   Address=(0x1180000001010+a*0x200)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:12> NS       RAZ     NS         NS         Reserved.                                         
 <11>    SCL      RO/H    NS         NS         SCL                                               
 <10>    SDA      RO/H    NS         NS         SDA                                               
 <9>     SCL_OVR  R/W     0x0        NS         SCL override                                      
 <8>     SDA_OVR  R/W     0x0        NS         SDA override                                      
 <7>     NS       RAZ     NS         NS         Reserved.                                         
 <6>     CORE_EN  R/W     0x0        NS         TWSI core interrupt enable                        
 <5>     TS_EN    R/W     0x0        NS         MIO_TWS_TWSI_SW register update interrupt enable  
 <4>     ST_EN    R/W     0x0        NS         MIO_TWS_SW_TWSI register update interrupt enable  
 <3>     NS       RAZ     NS         NS         Reserved.                                         
 <2>     CORE_INT RO/H    0x0        NS         TWSI core interrupt                               
 <1>     TS_INT   R/W1C/H 0x0        NS         MIO_TWS_TWSI_SW register update interrupt         
 <0>     ST_INT   R/W1C/H 0x0        NS         MIO_TWS_SW_TWSI register update interrupt         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_TWS_SW_TWSI_EXT = TWS@ Software to TWSI Extension Register
 * 
 *  This register contains an additional byte of internal address and 4 additional bytes of data
 *  to be used with TWSI master mode operations.  IA will be sent as the first byte of internal
 *  address
 *  when performing master mode combined read / write with internal address operations and the EIA
 *  bit
 *  of MIO_TWS_SW_TWSI is set.  D extends the data field of MIO_TWS_SW_TWSI for a total of 8 bytes
 *  (SOVR must be set to perform operations greater than 4 bytes).
 * 
$MIO_TWS(0..1)_SW_TWSI_EXT   Address=(0x1180000001018+a*0x200)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:40> NS    RAZ     NS         NS         Reserved.                                         
 <39:32> IA    R/W     0x0        NS         Extended Internal Address                         
 <31:0>  D     R/W/H   0x0        NS         Extended Data Field                               
                                             Attribute: -exempt_keyword=True.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SMI_CMD = SMI Command
 * 
 *  Used to force a Read/Write command to the PHY
 * 
$SMI(0..1)_CMD   Address=(0x1180000001800+a*0x100)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:18> NS      RAZ     NS         NS         Reserved.                                         
 <17:16> PHY_OP  R/W     0x0        NS         PHY Opcode depending on SMI_CLK[MODE]             
                                               SMI_CLK[MODE] == 0 (<=1Gbs / Clause 22)
                                               x0=write
                                               x1=read
                                               SMI_CLK[MODE] == 1 (>1Gbs / Clause 45)
                                               00=address
                                               01=write
                                               11=read
                                               10=post-read-increment-address
 <15:13> NS      RAZ     NS         NS         Reserved.                                         
 <12:8>  PHY_ADR R/W     0x0        NS         PHY Address                                       
 <7:5>   NS      RAZ     NS         NS         Reserved.                                         
 <4:0>   REG_ADR R/W     0x0        NS         PHY Register Offset                               

Notes:
Writes to this register will create SMI xactions.  Software will poll on (depending on the
xaction type).

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SMI_WR_DAT = SMI Write Data
 * 
 *  
 * 
$SMI(0..1)_WR_DAT   Address=(0x1180000001808+a*0x100)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:18> NS      RAZ     NS         NS         Reserved.                                         
 <17>    PENDING RO/H    0x0        NS         Write Xaction Pending                             
 <16>    VAL     RO/H    0x0        NS         Write Data Valid                                  
 <15:0>  DAT     R/W/H   0x0        NS         Write Data                                        

Notes:
VAL will assert when the write xaction completes.  A read to this register
will clear VAL.  PENDING indicates that an SMI WR transaction is in flight.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SMI_RD_DAT = SMI Read Data
 * 
 *  
 * 
$SMI(0..1)_RD_DAT   Address=(0x1180000001810+a*0x100)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:18> NS      RAZ     NS         NS         Reserved.                                         
 <17>    PENDING RO/H    0x0        NS         Read Xaction Pending                              
 <16>    VAL     RO/H    0x0        NS         Read Data Valid                                   
 <15:0>  DAT     RO/H    0x0        NS         Read Data                                         

Notes:
VAL will assert when the read xaction completes.  A read to this register
will clear VAL.  PENDING indicates that an SMI RD transaction is in flight.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SMI_CLK = SMI Clock Control Register
 * 
 *  
 * 
$SMI(0..1)_CLK   Address=(0x1180000001818+a*0x100)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:25> NS          RAZ     NS         NS         Reserved.                                         
 <24>    MODE        R/W     0x0        0x0        IEEE operating mode                               
                                                   0=Clause 22 complient
                                                   1=Clause 45 complient
 <23:21> NS          RAZ     NS         NS         Reserved.                                         
 <20:16> SAMPLE_HI   R/W     0x0        0x0        When to sample read data (extended bits)          
 <15>    SAMPLE_MODE R/W     0x0        0x0        Read Data sampling mode                           
                                                   According to the 802.3 spec, on reads, the STA
                                                   transitions MDC and the PHY drives MDIO with
                                                   some delay relative to that edge.  This is edge1.
                                                   The STA then samples MDIO on the next rising edge
                                                   of MDC.  This is edge2. Octeon can sample the
                                                   read data relative to either edge.
                                                   0={SAMPLE_HI,SAMPLE} specify the sample time
                                                   relative to edge2
                                                   1={SAMPLE_HI,SAMPLE} specify the sample time
                                                   relative to edge1
 <14>    NS          RAZ     NS         NS         Reserved.                                         
 <13>    CLK_IDLE    R/W     0x0        0x0        Do not toggle MDC on idle cycles                  
 <12>    PREAMBLE    R/W     0x1        0x1        Send PREAMBLE on SMI transacton                   
                                                   PREAMBLE must be set 1 when MODE=1 in order
                                                   for the receiving PHY to correctly frame the
                                                   transaction.
 <11:8>  SAMPLE      R/W     0x2        0x2        When to sample read data                          
                                                   (number of eclks after the rising edge of mdc)
                                                   ( {SAMPLE_HI,SAMPLE} > 1 )
                                                   ( {SAMPLE_HI, SAMPLE} + 3 <= 2*PHASE )
 <7:0>   PHASE       R/W     0x64       0x64       MDC Clock Phase                                   
                                                   (number of eclks that make up an mdc phase)
                                                   (PHASE > 2)
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SMI_EN = Enable the SMI interface
 * 
 *  
 * 
$SMI(0..1)_EN   Address=(0x1180000001820+a*0x100)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS    RAZ     NS         NS         Reserved.                                         
 <0>     EN    R/W     0x0        0x1        Interface enable                                  
                                             0=SMI Interface is down / no transactions, no MDC
                                             1=SMI Interface is up
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SMI_DRV_CTL = SMI Drive Strength Control
 * 
 *  suggested values                          PCTL=6, NCTL=6 (50 ohm termination)
 *                                            PCTL=7, NCTL=7 (40 ohm termination)
 *                                            PCTL=4, NCTL=4 (75 ohm termination)
 * 
$SMI_DRV_CTL   Address=(0x1180000001828)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:11> NS    RAZ     NS         NS         Reserved.                                         
 <10:8>  PCTL  R/W     0x6        0x6        SMI bus NCTL                                      
 <7:3>   NS    RAZ     NS         NS         Reserved.                                         
 <2:0>   NCTL  R/W     0x6        0x6        SMI bus NCTL                                      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_EMM_CFG = MIO EMMC Configuration Register
 * 
 *  
 * 
$MIO_EMM_CFG   Address=(0x1180000002000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:17> NS        RAZ     0x0        NS         Reserved.                                         
 <16>    BOOT_FAIL R/W     0x0        NS         SW should set BOOT_FAIL when an unrecoverable error occurs
                                                 while attempt to boot.   When set, the
                                                 following pattern will be output:
                                                 BOOT_AD[7:0] pulled up to 1
                                                 BOOT_CE_N[7:0] driven to 1
                                                 BOOT_ALE[0] driven to 0
                                                 BOOT_OE_L driven to 1
                                                 BOOT_WE_L driven to 1
 <15:5>  NS        RAZ     0x0        NS         Reserved.                                         
 <4>     LOCKOUT   R/W     0x0        NS         eMMC Lockout.  Setting this bit keeps the eMMC controller from
                                                 requesting the boot bus.  This setting will allow NDF
                                                 even when the BUS_ENA bits have been set.  Care must be taken
                                                 to only set this bit when both the eMMC controller and the
                                                 shared NDF DMA engine are idle.
 <3:0>   BUS_ENA   R/W     0x0        NS         eMMC bus enable mask.                             
                                                 
                                                 Setting bit0 of BUS_ENA causes BOOT_CE[1] to become dedicated
                                                 eMMC bus 0 command (ie. disabling any other use)
                                                 
                                                 Setting bit1 of BUS_ENA causes BOOT_CE[2] to become dedicated
                                                 eMMC bus 1 command (ie. disabling any other use).
                                                 
                                                 Setting bit2 of BUS_ENA causes BOOT_CE[3] to become dedicated
                                                 eMMC bus 2 command (ie. disabling any other use).
                                                 
                                                 Setting bit3 of BUS_ENA causes BOOT_CE[4] to become dedicated
                                                 eMMC bus 3 command (ie. disabling any other use).
                                                 
                                                 Setting any bit of BUS_ENA causes BOOT_CE[5] to become the eMMC
                                                 clock for all eMMC devices.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_EMM_MODE = MIO EMMC Operating mode Register
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$MIO_EMM_MODE(0..3)   Address=(0x1180000002008+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:49> NS          RAZ     0x0        NS         Reserved.                                         
 <48>    HS_TIMING   RO/H    0x0        NS         Current high speed timing mode.   Required when CLK frequency
                                                   higher than 20MHz.
 <47:43> NS          RAZ     0x0        NS         Reserved.                                         
 <42:40> BUS_WIDTH   RO/H    0x0        NS         Current card bus mode.  Out of reset, the card is in 1 bit data
                                                   bus mode.   Select bus width.
                                                   
                                                   0 - 1 bit data bus (power on)
                                                   1 - 4 bit data bus
                                                   2 - 8 bit data bus
                                                   5 - 4 bit data bus (dual data rate)
                                                   6 - 8 bit data bus (dual data rate)
 <39:36> NS          RAZ     0x0        NS         Reserved.                                         
 <35:32> POWER_CLASS RO/H    0x0        NS         Out of reset, the card power class is 0, which is the minimum
                                                   current consumption class for the card.  EXT_CSD bytes
                                                   [203:200] and [239:238] contain the power class for different
                                                   BUS_WITDH and CLK frequencies.  Software should write this
                                                   field with the  4-bit field from the EXT_CSD bytes
                                                   corresponding to the selected operating mode.
 <31:16> CLK_HI      RO/H    0x9c4      NS         Current number of sclk cycles to hold the eMMC CLK pin high
 <15:0>  CLK_LO      RO/H    0x9c4      NS         Current number of sclk cycles to hold the eMMC CLK pin low.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_EMM_SWITCH = MIO EMMC Operating mode switch Register
 * 
 *  
 * 
$MIO_EMM_SWITCH   Address=(0x1180000002048)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:62> NS          RAZ     0x0        NS         Reserved.                                         
 <61:60> BUS_ID      R/W/H   0x0        NS         Specify the eMMC bus                              
 <59>    SWITCH_EXE  R/W/H   0x0        NS         When SWITCH_EXE is 0, the operating modes will be update
                                                   directly without performing any SWITCH operations.   This
                                                   allows SW to perform the SWITCH operations manually, then
                                                   update the HW.
                                                   
                                                   SW writes this bit to a 1 to indicate that HW should perform
                                                   the necessary SWITCH operations.   First, the POWER_CLASS
                                                   switch will be performed.   If it fails, SWITCH_ERR0 will be
                                                   and the remaining SWITCH operations will not be performed.   If
                                                   is succeeds, the POWER_CLASS field will be updated and the
                                                   HS_TIMING switch will be performed.   If it fails, SWITCH_ERR1
                                                   will be set and the remaining SWITCH operations will not be
                                                   performed.   If is succeeds, the HS_TIMING field will be
                                                   updated and the BUS_WITDH switch operation will be performed.
                                                   If it fails, SWITCH_ERR2 will be set.  If it succeeds, the
                                                   BUS_WITDH will be updated.
                                                   
                                                   Changes to CLK_HI and CLK_LO are discarded if any switch error
                                                   occurs.
 <58>    SWITCH_ERR0 RO/H    0x0        NS         Error encounter while performing POWER_CLASS switch .   See
                                                   MIO_EMM_RSP_STS
 <57>    SWITCH_ERR1 RO/H    0x0        NS         Error encounter while performing HS_TIMING switch .   See
                                                   MIO_EMM_RSP_STS
 <56>    SWITCH_ERR2 RO/H    0x0        NS         Error encounter while performing BUS_WIDTH switch .   See
                                                   MIO_EMM_RSP_STS
 <55:49> NS          RAZ     0x0        NS         Reserved.                                         
 <48>    HS_TIMING   R/W     0x0        NS         Requested update to HS_TIMING                     
 <47:43> NS          RAZ     0x0        NS         Reserved.                                         
 <42:40> BUS_WIDTH   R/W     0x0        NS         Requested update to BUS_WIDTH                     
 <39:36> NS          RAZ     0x0        NS         Reserved.                                         
 <35:32> POWER_CLASS R/W     0x0        NS         Requested update to POWER_CLASS                   
 <31:16> CLK_HI      R/W     0x9c4      NS         Requested update to CLK_HI                        
 <15:0>  CLK_LO      R/W     0x9c4      NS         Requested update to CLK_LO                        
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_EMM_DMA = MIO EMMC DMA config Register
 * 
 *  
 * 
$MIO_EMM_DMA   Address=(0x1180000002050)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:62> NS        RAZ     0x0        NS         Reserved.                                         
 <61:60> BUS_ID    R/W     0x0        NS         Specify the eMMC bus                              
 <59>    DMA_VAL   R/W/H   0x0        NS         SW writes this bit to a 1 to indicate that HW should perform
                                                 the DMA transfer.   HW clears when DMA operation completes or
                                                 is terminated.
 <58>    SECTOR    R/W/H   0x0        NS         Specify CARD_ADDR and eMMC are using sector (512B) addressing.
 <57>    DAT_NULL  R/W     0x0        NS         Do not perform any eMMC commands.   A DMA read will return all
                                                 0s.  A DMA write tosses the data.  In the case of a failure,
                                                 this can be used to unwind the DMA engine.
 <56:51> THRES     R/W     0x0        NS         Number of 8B blocks of data that must exist in the DBUF before
                                                 the starting the 512B block transfer.  0 indicates to wait for
                                                 the entire block.
 <50>    REL_WR    R/W     0x0        NS         Set the reliable write parameter when performing CMD23
                                                 (SET_BLOCK_COUNT) for a multiple block
 <49>    RW        R/W     0x0        NS         R/W bit (0 = read, 1 = write)                     
 <48>    MULTI     R/W     0x0        NS         Perform operation using a multiple block command instead of a
                                                 series of single block commands.
 <47:32> BLOCK_CNT R/W/H   0x0        NS         Number of blocks to read/write.  Hardware decrements the block
                                                 count after each successful block transfer.
 <31:0>  CARD_ADDR R/W/H   0x0        NS         Data address for media =<2GB is a 32bit byte address and data
                                                 address for media > 2GB is a 32bit sector (512B) address.
                                                 Hardware advances the card address after each successful block
                                                 transfer by 512 for byte addressing and by 1 for sector
                                                 addressing.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_EMM_CMD = MIO EMMC Command Register
 * 
 *  
 * 
$MIO_EMM_CMD   Address=(0x1180000002058)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:62> NS        RAZ     0x0        NS         Reserved.                                         
 <61:60> BUS_ID    R/W     0x0        NS         Specify the eMMC bus                              
 <59>    CMD_VAL   R/W/H   NS         NS         Request valid.  SW writes this bit to a 1.   HW clears it when
                                                 the operation completes.
 <58:56> NS        RAZ     0x0        NS         Reserved.                                         
 <55>    DBUF      R/W     0x0        NS         Specify the data buffer to be used for a block transfer.
 <54:49> OFFSET    R/W     0x0        NS         Debug only.  Specify the number of 8 byte transfers in the
                                                 used in the command.  Value is 64-OFFSET.  The block transfer
                                                 will still start at the first btye in the 512B data buffer.
                                                 SW must ensure CMD16 has updated the card block length.
 <48:43> NS        RAZ     0x0        NS         Reserved.                                         
 <42:41> CTYPE_XOR R/W     0x0        NS         "Command Type Override.  Typically Zero.  Value is XOR'd with
                                                 default command type.  See table of Command Types per CMD#.
                                                 Types are:  00 = No Data
                                                 01 = Read data into Dbuf
                                                 10 = Write data from Dbuf
                                                 11 = Reserved"
 <40:38> RTYPE_XOR R/W     0x0        NS         "Response Type Override.  Typically Zero.  Value is XOR'd with
                                                 default response type.  See table of Response Types per CMD#.
                                                 Types are 000 = No Response
                                                 001 = R1, 48 bits,
                                                 010 = R2, 136 bits
                                                 011 = R3, 48 bits,
                                                 100 = R4, 48 bits,
                                                 101 = R5, 48 bits,
                                                 110, 111 = Reserved"
 <37:32> CMD_IDX   R/W/H   0x0        NS         eMMC command                                      
 <31:0>  ARG       R/W/H   0x0        NS         eMMC command argument                             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_EMM_RSP_STS = MIO EMMC Response status Register
 * 
 *  
 * 
$MIO_EMM_RSP_STS   Address=(0x1180000002060)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:62> NS          RAZ     0x0        NS         Reserved.                                         
 <61:60> BUS_ID      RO/H    0x0        NS         eMMC bus id to which the response status corresponds.
 <59>    CMD_VAL     RO/H    0x0        NS         Read-only copy of MIO_EMM_CMD[CMD_VAL].  CMD_VAL=1 indicates a
                                                   direct operation is in progress.
 <58>    SWITCH_VAL  RO/H    0x0        NS         Read-only copy of MIO_EMM_SWITCH[SWITCH_EXE].   SWITCH_VAL=1
                                                   indicates a switch operation is in progress.
 <57>    DMA_VAL     RO/H    0x0        NS         Read-only copy of MIO_EMM_DMA[DMA_VAL].   DMA_VAL=1 indicates a
                                                   DMA operation is in progress.
 <56>    DMA_PEND    RO/H    0x0        NS         The DMA engine has a pending transfer resulting from an error.
                                                   SW can resume the transfer by writing MIO_EMM_DMA[DMA_VAL]=1.
                                                   SW can terminate the transfer by writing MIO_EMM_DMA[DMA_VAL]=1
                                                   and MIO_EMM_DMA[DAT_NULL]=1.   HW will clear DMA_PEND and
                                                   perform the DMA operation.
 <55:29> NS          RAZ     0x0        NS         Reserved.                                         
 <28>    DBUF_ERR    RO/H    0x0        NS         For CMD_TYPE=1, indicates a DMA read data arrived from card
                                                   without a free DBUF.
                                                   
                                                   For CMD_TYPE=2, indicates a DBUF underflow occurred during a
                                                   DMA write.    See MIO_EMM_DMA[THRES].
 <27:24> NS          RAZ     0x0        NS         Reserved.                                         
 <23>    DBUF        RO/H    0x0        NS         DBUF corresponding to the most recently attempted block
                                                   transfer.
 <22>    BLK_TIMEOUT RO/H    0x0        NS         Timeout waiting for read data or 3bit CRC token   
 <21>    BLK_CRC_ERR RO/H    0x0        NS         For CMD_TYPE=1, indicates a card read data CRC mismatch.
                                                   MIO_EMM_RSP_STS[DBUF] indicates the failing data buffer.
                                                   
                                                   For CMD_TYPE=2, indicates card returned 3-bit CRC status token
                                                   indicating the card encountered a write data CRC check
                                                   mismatch.  MIO_EMM_RSP_STS[DBUF] indicates the failing data
                                                   buffer.
 <20>    RSP_BUSYBIT RO/H    0x0        NS         Debug only.  eMMC protocol utilizes DAT0 as a busy signal
                                                   during block writes and R1b responses.
 <19>    STP_TIMEOUT RO/H    0x0        NS         Stop transmission response timeout.               
 <18>    STP_CRC_ERR RO/H    0x0        NS         Stop transmission response had a CRC error        
 <17>    STP_BAD_STS RO/H    0x0        NS         Stop transmission response had bad status.        
 <16>    STP_VAL     RO/H    0x0        NS         Stop transmission response valid.                 
 <15>    RSP_TIMEOUT RO/H    0x0        NS         Response timeout                                  
 <14>    RSP_CRC_ERR RO/H    0x0        NS         Response CRC error                                
 <13>    RSP_BAD_STS RO/H    0x0        NS         Response bad status                               
 <12>    RSP_VAL     RO/H    0x0        NS         Response id.   See MIO_EMM_RSP_HI/LO              
 <11:9>  RSP_TYPE    RO/H    0x0        NS         Indicates the response type. See MIO_EMM_RSP_HI/LO
 <8:7>   CMD_TYPE    RO/H    0x0        NS         eMMC command type (0=no data, 1=read, 2=write)    
 <6:1>   CMD_IDX     RO/H    0x0        NS         eMMC command index most recently attempted        
 <0>     CMD_DONE    RO/H    0x0        NS         eMMC command completed.   Once the command has complete, the
                                                   status is final and can be examined by SW.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_EMM_RSP_LO = MIO EMMC Response data low Register
 * 
 *  
 * 
$MIO_EMM_RSP_LO   Address=(0x1180000002068)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  DAT RO      NS         NS         Command response (as per JEDEC eMMC spec)         
                                           
                                           RSP_TYPE = 1
                                           DAT[63:46] - 0x0
                                           DAT[45:40] - Command index
                                           DAT[39: 8] - Card status
                                           DAT[ 7: 1] - CRC7
                                           DAT[    0] - End bit
                                           
                                           RSP_TYPE = 2
                                           DAT[63: 1] - CID[63:1] or CSD[63:1] including CRC
                                           DAT[    0] - End bit
                                           
                                           RSP_TYPE = 3
                                           DAT[63:46] - 0x0
                                           DAT[45:40] - Check bits (0x3f)
                                           DAT[39: 8] - OCR register
                                           DAT[ 7: 1] - Check bits (0x7f)
                                           DAT[    0] - End bit
                                           
                                           RSP_TYPE = 4
                                           DAT[63:46] - 0x0
                                           DAT[45:40] - CMD39 ('10111')
                                           DAT[39:24] - RCA[31:16]
                                           DAT[   23] - Status
                                           DAT[22:16] - Register address
                                           DAT[15: 8] - Register contents
                                           DAT[ 7: 1] - CRC7
                                           DAT[    0] - End bit
                                           
                                           RSP_TYPE = 5
                                           DAT[63:46] - 0x0
                                           DAT[45:40] - CMD40 ('10100')
                                           DAT[39:24] - RCA[31:16]
                                           DAT[   23] - Status
                                           DAT[22:16] - Register address
                                           DAT[15: 8] - Not defined.  May be used for IRQ data
                                           DAT[ 7: 1] - CRC7
                                           DAT[    0] - End bit
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_EMM_RSP_HI = MIO EMMC Response data high Register
 * 
 *  
 * 
$MIO_EMM_RSP_HI   Address=(0x1180000002070)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  DAT RO      NS         NS         Command response (as per JEDEC eMMC spec)         
                                           
                                           RSP_TYPE=1 - DAT[63:0] - 0x0
                                           RSP_TYPE=2 - DAT[63:0] - CID[127:64] or CSD[127:64]
                                           RSP_TYPE=3 - DAT[63:0] - 0x0
                                           RSP_TYPE=4 - DAT[63:0] - 0x0
                                           RSP_TYPE=5 - DAT[63:0] - 0x0
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_EMM_INT = MIO EMMC Interrupt Register
 * 
 *  
 * 
$MIO_EMM_INT   Address=(0x1180000002078)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:7>  NS          RAZ     0x0        NS         Reserved.                                         
 <6>     SWITCH_ERR  R/W1C/H NS         NS         Switch operation encountered an error.            
 <5>     SWITCH_DONE R/W1C/H NS         NS         Switch operation completed successfully           
 <4>     DMA_ERR     R/W1C/H NS         NS         DMA transfer encountered an error.   See MIO_EMM_RSP_STS.
 <3>     CMD_ERR     R/W1C/H NS         NS         Operation specified by MIO_EMM_CMD encountered an error.  See
                                                   MIO_EMM_RSP_STS.
 <2>     DMA_DONE    R/W1C/H NS         NS         All blocks have been successfully transferred between the card
                                                   and the boot bus DMA Engine.   For a DMA read, software must
                                                   wait for MIO_NDF_DMA_INT to indicate the read data has been
                                                   written to L2/DRAM.
 <1>     CMD_DONE    R/W1C/H NS         NS         Operation specified by MIO_EMM_CMD completed successfully
 <0>     BUF_DONE    R/W1C/H NS         NS         The next 512B block transfer of a multi-block transfer has
                                                   completed.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_EMM_INT_EN = MIO EMMC Interrupt enable Register
 * 
 *  
 * 
$MIO_EMM_INT_EN   Address=(0x1180000002080)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:7>  NS          RAZ     0x0        NS         Reserved.                                         
 <6>     SWITCH_ERR  R/W     NS         NS         Switch operation encountered an error.            
 <5>     SWITCH_DONE R/W     NS         NS         Switch operation completed.                       
 <4>     DMA_ERR     R/W     NS         NS         DMA transfer encountered an error.   See MIO_EMM_RSP_STS.
 <3>     CMD_ERR     R/W     NS         NS         Operation specified by MIO_EMM_CMD encountered an error.  See
                                                   MIO_EMM_RSP_STS.
 <2>     DMA_DONE    R/W     NS         NS         DMA transfer completed                            
 <1>     CMD_DONE    R/W     NS         NS         Operation specified by MIO_EMM_CMD completed      
 <0>     BUF_DONE    R/W     NS         NS         The next 512B block transfer of a multi-block transfer has
                                                   completed.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_EMM_WDOG = MIO EMMC Watchdog Register
 * 
 *  
 * 
$MIO_EMM_WDOG   Address=(0x1180000002088)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:26> NS      RAZ     0x0        NS         Reserved.                                         
 <25:0>  CLK_CNT R/W     0x27ea818  NS         Number of CLK_CNT cycles to wait for the card to return a
                                               response, read data, or the 3-bit CRC status token.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_EMM_SAMPLE = MIO EMMC Sample Point Specification Register
 * 
 *  
 * 
$MIO_EMM_SAMPLE   Address=(0x1180000002090)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:26> NS      RAZ     0x0        NS         Reserved.                                         
 <25:16> CMD_CNT R/W     0x0        0x0        Number of SCLK cycles before the eMMC clock rising edge to
                                               sample the command pin.
 <15:10> NS      RAZ     0x0        NS         Reserved.                                         
 <9:0>   DAT_CNT R/W     0x0        0x0        Number of SCLK cycles before the eMMC clock edge to sample the
                                               the data pin.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_EMM_STS_MASK = MIO EMMC Status Mask Register
 * 
 *  
 * 
$MIO_EMM_STS_MASK   Address=(0x1180000002098)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS      RAZ     0x0        NS         Reserved.                                         
 <31:0>  STS_MSK R/W     0xe4390080 NS         Any bit set in STS_MSK causes the corresponding bit in the card
                                               status to be considered when computing response bad status.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_EMM_RCA = MIO EMMC RCA Status Register
 * 
 *  
 * 
$MIO_EMM_RCA   Address=(0x11800000020A0)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ     0x0        NS         Reserved.                                         
 <15:0>  CARD_RCA R/W/H   0x1        0x1        Whenever SW performs CMD7, HW will update CARD_RCA with the
                                                relative card address from the MIO_EMM_CMD[ARG] unless the
                                                operations encounters an error.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_EMM_BUF_IDX = MIO EMMC Data buffer address Register
 * 
 *  
 * 
$MIO_EMM_BUF_IDX   Address=(0x11800000020E0)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:17> NS      RAZ     0x0        NS         Reserved.                                         
 <16>    INC     R/W     0x0        NS         Automatically advance BUF_NUM/OFFSET after each access to
                                               MIO_EMM_BUF_DAT.   Wraps after last offset of last data buffer.
 <15:7>  NS      RAZ     0x0        NS         Reserved.                                         
 <6>     BUF_NUM R/W     0x0        NS         Specify the data buffer for the next access to MIO_EMM_BUF_DAT
 <5:0>   OFFSET  R/W     0x0        NS         Specify the 8B data buffer offset for the next access to
                                               MIO_EMM_BUF_DAT
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_EMM_BUF_DAT = MIO EMMC Data buffer access Register
 * 
 *  
 * 
$MIO_EMM_BUF_DAT   Address=(0x11800000020E8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  DAT R/W     NS         NS         Direct access to the 1KB data buffer memory.    Address
                                           specified by MIO_EMM_BUF_IDX
-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the mio_fus.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

 * 
 * MIO_FUS_DAT0 = MIO Fuse Data0 Register
 * 
 *  
 * 
$MIO_FUS_DAT0   Address=(0x1180000001400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ     NS         NS         Reserved.                                         
 <31:0>  MAN_INFO RO      NS         NS         Fuse information - manufacturing info [31:0]      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_FUS_DAT1 = MIO Fuse Data1 Register
 * 
 *  
 * 
$MIO_FUS_DAT1   Address=(0x1180000001408)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ     NS         NS         Reserved.                                         
 <31:0>  MAN_INFO RO      NS         NS         Fuse information - manufacturing info [63:32]     
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_FUS_DAT2 = MIO Fuse Data2 Register
 * 
 *  
 * 
$MIO_FUS_DAT2   Address=(0x1180000001410)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS          RAZ     NS         NS         Reserved.                                         
 <47>    FUS118      RO      NS         NS         Fuse information - Ignore Authentik disable.      
 <46:37> ROM_INFO    RO      NS         NS         Fuse information - ROM info.                      
 <36:35> POWER_LIMIT RO      NS         NS         Fuse information - Power limit.                   
 <34>    DORM_CRYPTO RO      NS         NS         Fuse information - Dormant encryption enable.     
 <33>    FUS318      RO      NS         NS         Reserved.                                         
 <32>    RAID_EN     RO      NS         NS         Fuse information - RAID enabled.                  
 <31:29> NS          RO      NS         NS         Spare fuses.                                      
 <28>    NODFA_CP2   RO      NS         NS         Fuse information - HFA disable (CP2).             
 <27>    NOMUL       RO      NS         NS         Fuse information - VMUL disable.                  
 <26>    NOCRYPTO    RO      NS         NS         Fuse information - DORM_CRYPTO and NOCRYPTO together select one of four mutually-exclusive
                                                   modes:
                                                   DORM_CRYPTO = 0, NOCRYPTO = 0 AES/DES/HASH enabled.
                                                   DORM_CRYPTO = 0, NOCRYPTO = 1 AES/DES/HASH disabled.
                                                   DORM_CRYPTO = 1, NOCRYPTO = 0 Dormant encryption enable.
                                                   DORM_CRYPTO = 1, NOCRYPTO = 1 Authenik mode.
 <25:24> NS          RO      NS         NS         Spare fuses.                                      
 <23:16> CHIP_ID     RO      NS         NS         Fuse information - chip ID.                       
 <15:0>  NS          RO      NS         NS         Spare fuses.                                      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_FUS_DAT3 = MIO Fuse Data3 Register
 * 
 *  
 * 
$MIO_FUS_DAT3   Address=(0x1180000001418)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field        Field   Reset      Typical    Field                                             
 Pos     Name         Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:58> EMA0         RO      NS         NS         Fuse information - EMA0.                          
 <57:48> PLL_CTL      RO      NS         NS         Fuse information - PLL control.                   
 <47:45> DFA_INFO_DTE RO      NS         NS         Fuse information - HFA information (HTE).         
 <44:41> DFA_INFO_CLM RO      NS         NS         Fuse information - HFA information (cluster mask).
 <40:38> NS           RAZ     NS         NS         Reserved.                                         
 <37>    EFUS_LCK_RSV RO      NS         NS         Fuse information - efuse lockdown.                
 <36>    EFUS_LCK_MAN RO      NS         NS         Fuse information - efuse lockdown.                
 <35>    PLL_HALF_DIS RO/H    NS         NS         Fuse information - Coprocessor-clock PLL control. 
 <34:32> L2C_CRIP     RO      NS         NS         Fuse information - L2C cripple:                   
                                                    0 -- full cache (4-way 512KB)
                                                    1 -- 3/4 ways   (3-way 384KB)
                                                    2 -- 1/2 ways   (2-way 256KB)
                                                    3 -- 1/4 ways   (1-way 128KB)
                                                    4-7 -- illegal
 <31>    SPARE        RO      NS         NS         Spare fuse.                                       
 <30:29> ZIP_INFO     RO      NS         NS         Fuse information - Zip information                
 <28>    BAR2_EN      RO      NS         NS         Fuse information - BAR2 present (when blown `1')  
 <27>    EFUS_LCK     RO      NS         NS         Fuse information - efuse lockdown                 
 <26>    EFUS_IGN     RO      NS         NS         Fuse information - efuse ignore                   
 <25>    NOZIP        RO      NS         NS         Fuse information - ZIP disable                    
 <24>    NODFA_DTE    RO      NS         NS         Fuse information - HFA disable (HTE)              
 <23:18> EMA1         RO      NS         NS         Fuse information - EMA1.                          
 <17:0>  NS           RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_FUS_DAT4 = MIO Fuse Data4 Register
 * 
 *  
 * 
$MIO_FUS_DAT4   Address=(0x1180000001420)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field                 Field   Reset      Typical    Field                                             
 Pos     Name                  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:52> NS                    RO      NS         NS         Reserved.                                         
 <51>    EAST_RCLK_BYP_SELECT  RO      0x0        NS                                                           
 <50:39> EAST_RCLK_BYP_SETTING RO      0x0        NS         Reserved.                                         
 <38>    CMB_RCLK_BYP_SELECT   RO      0x0        NS         Reserved.                                         
 <37:26> CMB_RCLK_BYP_SETTING  RO      0x0        NS         Reserved.                                         
 <25>    PP_RCLK_BYP_SELECT    RO      0x0        NS         Reserved.                                         
 <24:13> PP_RCLK_BYP_SETTING   RO      0x0        NS         Reserved.                                         
 <12>    TAD_RCLK_BYP_SELECT   RO      0x0        NS                                                           
 <11:0>  TAD_RCLK_BYP_SETTING  RO      0x0        NS                                                           
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_FUS_PDF = MIO Fuse Product Definition Field Register
 * 
 *  
 * 
$MIO_FUS_PDF   Address=(0x1180000001428)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  PDF RO      NS         NS         Fuse information--product definition field.       
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_FUS_TGG = MIO Fuse TGG Register
 * 
 *  
 * 
$MIO_FUS_TGG   Address=(0x1180000001430)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    VAL R/W/H   NS         NS         Out of reset, VAL will return the TGG<63> fuse. Software may write this CSR bit to zero
                                           (to hide the value of the TGG fuses). Software cannot write the valid bit to a one, so it
                                           is not possible to read the value of the TGG fuses after the valid bit is clear. It is
                                           never possible to read the value of the TGG fuses directly (ie. the only way to read the
                                           value of the TGG fuses is via the MIO_FUS_TGG CSR.) Whenever the fuse corresponding to the
                                           valid bit (ie. TGG<63>) is blown, it is not possible to blow the other 63 TGG fuses. (ie.
                                           only when the TGG<63> fuse is not blown, the other 63 TGG fuses can be blown. The TGG<63>
                                           fuse is the one and only fuse lockdown bit for the other 63 fuses TGG fuses. No other fuse
                                           lockdown bits can prevent blowing the 63 fuses.
 <62:0>  DAT RO/H    NS         NS         When VAL is clear, DAT will always read as zero, regardless of the value of the TGG<62:0>
                                           fuses. When VAL is set, DAT will return the value of the other 63 TGG fuses.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_FUS_RCMD = MIO Fuse Read Command Register
 * 
 *  To read an efuse, software writes MIO_FUS_RCMD[ADDR,PEND] with the byte address of the fuse in
 *  question, then software can poll MIO_FUS_RCMD[PEND]. When PEND is clear, then
 *  MIO_FUS_RCMD[DAT] is valid. In addition, if the efuse read went to the efuse banks (e.g.
 *  (ADDR/16) not {0,1,7}) || EFUSE), software can read MIO_FUS_BNK_DATx which contains all 128
 *  fuses in the bank associated in ADDR.
 * 
$MIO_FUS_RCMD   Address=(0x1180000001500)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:24> NS      RAZ     NS         NS         Reserved.                                         
 <23:16> DAT     RO/H    NS         NS         8 bits of fuse data.                              
 <15:13> NS      RAZ     NS         NS         Reserved.                                         
 <12>    PEND    R/W/H   0x0        0x0        Software sets this bit on a write to start FUSE read operation. Hardware clears when read
                                               is complete and the DAT is valid.
 <11>    NS      RAZ     NS         NS         Reserved. INTERNAL: Save for address expansion.   
 <10:9>  ADDR_HI R/W     0x0        0x0        Upper fuse address bits to extend space beyond 2k fuses. Valid range is 0x0-0x2.
 <8>     EFUSE   R/W     0x0        0x0        When set, return data from the efuse storage rather than the local storage.
 <7:0>   ADDR    R/W     0x0        0x0        The byte address of the fuse to read.             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_FUS_WADR = MIO Fuse Read Command Register
 * 
 *  
 *  Attribute: -dv_fc_scratch=ALL.
 * 
$MIO_FUS_WADR   Address=(0x1180000001508)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  NS    RAZ     NS         NS         Reserved.                                         
 <5:0>   ADDR  R/W     NS         NS         Indicates which of the banks of 128 fuses to blow.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_FUS_PROG = INTERNAL: MIO Fuse Programming Register

 * 
 *  
 * 
$MIO_FUS_PROG   Address=(0x1180000001510)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:2>  NS    RAZ     NS         NS         Reserved.                                         
 <1>     SOFT  R/W/H   0x0        0x0        INTERNAL: When set with PROG, causes only the local storage to change and will not blow
                                             any fuses. Hardware will clear when the program operation is complete.
 <0>     PROG  R/W/H   NS         NS         INTERNAL: When written to one by software, blow the fuse bank. Hardware will clear when
                                             the program operation is complete.
                                             To write a bank of fuses, software must set MIO_FUS_WADR[ADDR] to the bank to be
                                             programmed and then set each bit within MIO_FUS_BNK_DATX to indicate which fuses to blow.
                                             Once ADDR, and DAT are setup, SW can write to MIO_FUS_PROG[PROG] to start the bank write
                                             and poll on PROG. Once PROG is clear, the bank write is complete. A soft blow is still
                                             subject to lockdown fuses. After a soft/warm reset, the chip will behave as though the
                                             fuses were actually blown. A cold reset restores the actual fuse values.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_FUS_PROG_TIMES = INTERNAL: MIO Fuse Program Times Register

 * 
 *  
 * 
$MIO_FUS_PROG_TIMES   Address=(0x1180000001518)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:35> NS        RAZ     NS         NS         Reserved.                                         
 <34>    VGATE_PIN RO      0x0        0x0        INTERNAL: Efuse vgate pin (L6G).                  
 <33>    FSRC_PIN  RO      0x0        0x0        INTERNAL: Efuse fsource pin (L6G).                
 <32>    PROG_PIN  RO      0x0        0x0        INTERNAL: Efuse program pin (IFB).                
 <31:0>  NS        RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_FUS_BNK_DAT = MIO Fuse Bank Store Register
 * 
 *  The initial state of MIO_FUS_BNK_DAT0/1 is as if bank6 were just read,
 *  i.e. DAT* = fus[895:768].
 * 
$MIO_FUS_BNK_DAT(0..1)   Address=(0x1180000001520+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  DAT R/W/H   NS         NS         Efuse bank store. For read operations, the DAT gets the fus bank last read. For write
                                           operations, the DAT determines which fuses to blow.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_FUS_RPR_DAT = INTERNAL: MIO Fuse Repair Memory Register

 * 
 *  
 * 
$MIO_FUS_RPR_DAT(0..1)   Address=(0x1180000001530+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  DAT R/W     NS         NS         INTERNAL: Repair memory store (RPR_MEM). Data for read and write. A write to
                                           MIO_FUS_RPR_DAT(1) writes all 128 bits from both registers to RPR_MEM.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_FUS_SOFT_REPAIR = INTERNAL: MIO Fuse Soft Repair Register

 * 
 *  
 * 
$MIO_FUS_SOFT_REPAIR   Address=(0x1180000001540)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field         Field   Reset      Typical    Field                                             
 Pos     Name          Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:20> NS            RAZ     NS         NS         Reserved.                                         
 <19:18> RPR_FLIP_SYND R/W/H   NS         0x0        INTERNAL: Flip syndrome bits on RPR_MEM writes. For diagnostic purposes only.
 <17>    AUTOBLOW      R/W/H   NS         0x0        INTERNAL: Set to initiate burning of defect fuses to fuse macro. Clears when fuses are
                                                     blown.
 <16>    TOO_MANY      RO/H    NS         0x0        INTERNAL: Set if the sum of fuse repairs and memory defects exceeds 195.
 <15:8>  NUMDEFECTS    RO/H    NS         NS         INTERNAL: After reset/BIST indicates the number of memory defects reported. Defects are
                                                     stored in REPAIR_MEM from bit address NUMREPAIRS*21 to (NUMREPAIRS*21 + NUMDEFECTS*21 -
                                                     1).
 <7:0>   NUMREPAIRS    R/W     NS         0x0        INTERNAL: Indicates the number of soft repairs to load from repair mem to the memories on
                                                     a soft/warm reset. Indicates the number of repairs loaded from efuses to repair mem on a
                                                     cold reset.

Notes:
INTERNAL: Aka `Soft Blow'. Upon reset fuse repairs are loaded into REPAIR_MEM as they are
loaded into the memories. Any new defects are loaded in afterwards, leaving END_PTR at the
last defect.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_FUS_INT = INTERNAL: MIO Fuse Repair Interrupt Register

 * 
 *  
 * 
$MIO_FUS_INT   Address=(0x1180000001548)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:2>  NS      RAZ     NS         NS         Reserved.                                         
 <1>     RPR_DBE R/W1C/H NS         0x0        INTERNAL: Indicates an uncorrectable double-bit-error occurred to RPR_MEM.
 <0>     RPR_SBE R/W1C/H NS         0x0        INTERNAL: Indicates a corrected single-bit-error occurred to RPR_MEM.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_FUS_READ_TIMES = MIO Fuse Read Times Register
 * 
 *  IFB fuses are 0 to 1791. The reset values are for IFB fuses for PLL_REF_CLK up to 100MHz when
 *  core PLL is engaged. If any of the formulas below result in a value less than zero, the
 *  corresponding timing parameter should be set to zero.
 *  Prior to issuing a read to the fuse banks (via MIO_FUS_RCMD), this register should be written
 *  with the timing parameters that will be read.
 *  This register should not be written while MIO_FUS_RCMD[PEND] = 1.
 * 
$MIO_FUS_READ_TIMES   Address=(0x1180000001570)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ     NS         NS         Reserved.                                         
 <31:28> DONE     R/W     0x0        NS         Hold time of CSB, PGENB, and LOAD with respect to falling edge of STROBE for read and
                                                write mode in PLL_REF_CLK + 1 cycles. Timing specs are th_CS = 6ns, th_PG = 10ns, th_LD_p
                                                = 7ns. Default of 0x0 yields 20ns for a PLL_REF_CLK of 50 MHz, 10ns at 100MHz.
 <27:24> AHD      R/W     0x0        NS         Hold time of A with respect to falling edge of STROBE for read and write modes in
                                                PLL_REF_CLK + 2 cycles. Timing spec of tsu_A_r and tsu_A_p is 3ns min. Default of 0x0
                                                yields 40ns for a PLL_REF_CLK of 50 MHz, 20ns at 100MHz.
 <23:12> WRSTB_WH R/W     0x1f3      NS         Pulse width high of STROBE in write mode in PLL_REF_CLK + 1 cycles. Timing spec of
                                                twh_SB_p is 9.8us max. Default of 0x1F3 yields 10 us at PLL_REF_CLK of 50 MHz.
 <11:8>  RDSTB_WH R/W     0x1        NS         Pulse width high of STROBE in read mode in PLL_REF_CLK + 1 cycles. Timing spec of twh_SB_p
                                                is 20ns min. Default of 0x1 yields 40 ns at PLL_REF_CLK of 50 MHz, 20ns at 100MHz.
 <7:4>   ASU      R/W     0x1        NS         Setup time of A to rising edge of STROBE for read and write modes in PLL_REF_CLK cycles.
                                                Timing spec of tsu_A_r and tsu_A_p is 12 ns min. Default of 0x1 yields 40 ns at
                                                PLL_REF_CLK of 50 MHz, 20ns at 100MHz.
 <3:0>   SETUP    R/W     0x0        NS         Setup of CSB, PGENB, LOAD to rising edge of STROBE in read and write modes in PLL_REF_CLK
                                                + 1 cycles. tsu_CS = 16ns, tsu_PG = 14ns, tsu_LD_r = 10ns. Default of 0x0 yields 20 ns
                                                plush ASU cycles at PLL_REF_CLK of 50 MHz, 10ns + ASU at 100MHz.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * MIO_FUS_PLL = MIO Fuse PLL Register
 * 
 *  
 * 
$MIO_FUS_PLL   Address=(0x1180000001580)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field        Field   Reset      Typical    Field                                             
 Pos     Name         Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:15> NS           RAZ     NS         NS         Reserved.                                         
 <14:12> CORE_STATUS  RO/H    NS         NS         Core clock PLL status information.                
 <11>    NS           RAZ     NS         NS         Reserved.                                         
 <10:8>  PNR_STATUS   RO/H    NS         NS         PNR clock PLL status information.                 
 <7>     C_COUT_RST   R/W     0x0        NS         Core clockout postscaler reset. The core clockout postscaler should be placed in reset at
                                                    least 10 ref-clock cycles prior to changing C_COUT_SEL. The core clockout postscaler
                                                    should remain under reset for at least 10 ref-clock cycles after C_COUT_SEL changes.
 <6:5>   C_COUT_SEL   R/W     0x0        NS         Core clockout select:                             
                                                    0x0 = core clock 0x2 = PLL output
                                                    0x1 = PS output 0x3 = undivided core clock
 <4>     PNR_COUT_RST R/W     0x0        NS         PNR clockout postscaler reset. The PNR clockout postscaler should be placed in reset at
                                                    least 10 ref-clock cycles prior to changing PNR_COUT_SEL. The PNR clockout postscaler
                                                    should remain under reset for at least 10 ref-clock cycles after PNR_COUT_SEL changes.
 <3:2>   PNR_COUT_SEL R/W     0x0        NS         PNR clockout select:                              
                                                    0x0 = coprocessor clock 0x2 = PLL output
                                                    0x1 = PS output 0x3 = undivided core clock
 <1:0>   NS           RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the mio_ndf.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

 * 
 * NDF_CMD
 * 
 *  When SW reads this csr, RD_VAL bit in NDF_MISC csr is cleared to 0. SW must always write all 8
 *  bytes whenever it writes
 *  this csr. If there are fewer than 8 bytes left in the command sequence that SW wants the NAND
 *  flash controller to execute, it
 *  must insert Idle (WAIT) commands to make up 8 bytes. SW also must ensure there is enough
 *  vacancy in the command fifo to accept these
 *  8 bytes, by first reading the FR_BYT field in the NDF_MISC csr.
 * 
$NDF_CMD   Address=(0x1070001000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  NF_CMD R/W     0x0        NS         8 Command Bytes                                   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * NDF_MISC
 * 
 *  "NBR_HWM this field specifies the high water mark for the NCB outbound load/store commands
 *  receive fifo.
 *    the fifo size is 16 entries.
 *  WAIT_CNT this field allows glitch filtering of the WAIT_n input to octeon, from Flash Memory.
 *  The count
 *    represents number of eclk cycles.
 *  FR_BYT  this field specifies # of unfilled bytes in the command fifo. Bytes become unfilled as
 *  commands
 *    complete execution and exit. (fifo is 256 bytes when BT_DIS=0,  and 1536 bytes when
 *  BT_DIS=1)
 *  RD_DONE this W1C bit is set to 1 by HW when it reads the last 8 bytes out of the command fifo,
 *    in response to RD_CMD bit being set to 1 by SW.
 *  RD_VAL  this read only bit is set to 1 by HW when it reads next 8 bytes from command fifo in
 *  response
 *    to RD_CMD bit being set to 1. A SW read of NDF_CMD csr clears this bit to 0.
 *  RD_CMD  this R/W bit starts read out from the command fifo, 8 bytes at a time. SW should first
 *  read the
 *  RD_VAL bit in  this csr to see if next 8 bytes from the command fifo are available in the
 *  NDF_CMD csr. All command fifo reads start and end on an 8 byte boundary. A RD_CMD in the
 *    middle of command execution will cause the execution to freeze until RD_DONE is set to 1.
 *  RD_CMD
 *    bit will be cleared on any NDF_CMD csr write by SW.
 *  BT_DMA  this indicates to the NAND flash boot control state machine that boot dma read can
 *  begin.
 *    SW should set this bit to 1 after SW has loaded the command fifo. HW sets the bit to 0
 *    when boot dma command execution is complete. If chip enable 0 is not nand flash, this bit is
 *    permanently 1'b0 with SW writes ignored. Whenever BT_DIS=1, this bit will be 0.
 *  BT_DIS  this R/W bit indicates to NAND flash boot control state machine that boot operation
 *  has ended.
 *    whenever this bit changes from 0 to a 1, the command fifo is emptied as a side effect. This
 *  bit must
 *    never be set when booting from nand flash and region zero is enabled.
 *  EX_DIS  When 1, command execution stops after completing execution of all commands currently
 *  in the command
 *    fifo. Once command execution has stopped, and then new commands are loaded into the command
 *  fifo, execution
 *    will not resume as long as this bit is 1. When this bit is 0, command execution will resume
 *  if command fifo
 *    is not empty. EX_DIS should be set to 1, during boot i.e. when BT_DIS = 0.
 *  RST_FF  reset command fifo to make it empty, any command inflight is not aborted before
 *  reseting
 *    the fifo. The fifo comes up empty at the end of power on reset."
 *  Attribute: -exempt_w1c_w=True.
 * 
$NDF_MISC   Address=(0x1070001000008)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:28> NS       RAZ     NS         NS         Reserved.                                         
 <27>    MB_DIS   R/W     0x0        NS         Disable multibit error hangs and allow boot loads 
                                                or boot dma's proceed as if no multi bit errors
                                                occured. HW will fix single bit errors as usual
 <26:24> NBR_HWM  R/W     0x3        0x3        Hi Water mark for NBR fifo or load/stores         
 <23:18> WAIT_CNT R/W     0x14       NS         WAIT input filter count                           
 <17:7>  FR_BYT   RO/H    0x0        NS         Number of unfilled Command fifo bytes             
 <6>     RD_DONE  R/W1C/H 0x0        0x0        This W1C bit is set to 1 by HW when it completes  
                                                command fifo read out, in response to RD_CMD
 <5>     RD_VAL   RO/H    0x0        NS         This RO bit is set to 1 by HW when it reads next 8
                                                bytes from Command fifo into the NDF_CMD csr
                                                SW reads NDF_CMD csr, HW clears this bit to 0
 <4>     RD_CMD   R/W     0x0        0x0        When 1, HW reads out contents of the Command fifo 8
                                                bytes at a time into the NDF_CMD csr
 <3>     BT_DMA   R/W     0x0        NS         When set to 1, boot time dma is enabled           
 <2>     BT_DIS   R/W     0x0        0x1        When boot operation is over SW must set to 1      
                                                causes boot state mchines to sleep
 <1>     EX_DIS   R/W     0x0        0x0        When set to 1, suspends execution of commands at  
                                                next command in the fifo.
 <0>     RST_FF   R/W     0x0        0x0        1=reset command fifo to make it empty,            
                                                0=normal operation
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * NDF_ECC_CNT
 * 
 *  
 * 
$NDF_ECC_CNT   Address=(0x1070001000010)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS      RAZ     NS         NS         Reserved.                                         
 <31:8>  XOR_ECC RO/H    0x0        NS         result of XOR of ecc read bytes and ecc genarated 
                                               bytes. The value pertains to the last 1 bit ecc err
 <7:0>   ECC_ERR RO/H    0x0        NS         "Count = # of 1 bit errors fixed during boot      
                                               This count saturates instead of wrapping around."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * NDF_BT_PG_INFO
 * 
 *  NDF_BT_PG_INFO provides page size and number of column plus row address cycles information. SW
 *  writes to this CSR
 *    during boot from Nand Flash. Additionally SW also writes the multiplier value for timing
 *  parameters. This value is
 *    used during boot, in the SET_TM_PARAM command. This information is used only by the boot
 *  load state machine and is
 *    otherwise a don't care, once boot is disabled. Also, boot dma's do not use this value.
 *  Bytes per Nand Flash page = 2 ** (SIZE + 1) times 256 bytes.
 *    512, 1k, 2k, 4k, 8k, 16k, 32k and 64k are legal bytes per page values
 *  Legal values for ADR_CYC field are 3 through 8. SW CSR writes with a value less than 3 will
 *  write a 3 to this
 *    field, and a SW CSR write with a value greater than 8, will write an 8 to this field.
 * 
$NDF_BT_PG_INFO   Address=(0x1070001000018)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:11> NS      RAZ     NS         NS         Reserved.                                         
 <10:7>  T_MULT  R/W     NS         NS         Boot time TIM_MULT[3:0] field of SET__TM_PAR[63:0]
                                               command
 <6:3>   ADR_CYC R/W     NS         NS         # of column address cycles                        
 <2:0>   SIZE    R/W     NS         NS         bytes per page in the nand device                 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * NDF_INT
 * 
 *  FULL status is updated when the command fifo becomes full as a result of SW writing a new
 *  command to it.
 *  EMPTY status is updated when the command fifo becomes empty as a result of command execution
 *  unit fetching the
 *    last instruction out of the command fifo.
 * 
$NDF_INT   Address=(0x1070001000020)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ     NS         NS         Reserved.                                         
 <6>     OVRF     R/W1C/H 0x0        NS         NDF_CMD write when fifo is full. Generally a      
                                                fatal error.
 <5>     ECC_MULT R/W1C/H 0x0        NS         Multi bit ECC error detected during boot          
 <4>     ECC_1BIT R/W1C/H 0x0        NS         Single bit ECC error detected and fixed during boot
 <3>     SM_BAD   R/W1C/H 0x0        NS         One of the state machines in a bad state          
 <2>     WDOG     R/W1C/H 0x0        NS         Watch Dog timer expired during command execution  
 <1>     FULL     R/W1C/H 0x0        NS         Command fifo is full                              
 <0>     EMPTY    R/W1C/H 0x0        NS         Command fifo is empty                             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * NDF_INT_EN
 * 
 *  
 *  Attribute: -dv_fc_scratch=ALL.
 * 
$NDF_INT_EN   Address=(0x1070001000028)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ     NS         NS         Reserved.                                         
 <6>     OVRF     R/W/H   0x0        NS         Wrote to a full command fifo                      
 <5>     ECC_MULT R/W/H   0x0        NS         Multi bit ECC error detected during boot          
 <4>     ECC_1BIT R/W/H   0x0        NS         Single bit ECC error detected and fixed during boot
 <3>     SM_BAD   R/W/H   0x0        NS         One of the state machines in a bad state          
 <2>     WDOG     R/W/H   0x0        NS         Watch Dog timer expired during command execution  
 <1>     FULL     R/W/H   0x0        NS         Command fifo is full                              
 <0>     EMPTY    R/W/H   0x0        NS         Command fifo is empty                             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * NDF_DRBELL
 * 
 *  SW csr writes will increment CNT by the signed 8 bit value being written. SW csr reads return
 *  the current CNT value.
 *  HW will also modify the value of the CNT field. Everytime HW executes a BUS_ACQ[15:0] command,
 *  to arbitrate and win the
 *  flash bus, it decrements the CNT field by 1. If the CNT field is already 0 or negative, HW
 *  command execution unit will
 *  stall when it fetches the new BUS_ACQ[15:0] command, from the command fifo. Only when the SW
 *  writes to this CSR with a
 *  non-zero data value, can the execution unit come out of the stalled condition, and resume
 *  execution.
 *  The intended use of this doorbell CSR is to control execution of the Nand Flash commands. The
 *  NDF execution unit
 *  has to arbitrate for the flash bus, before it can enable a Nand Flash device connected to the
 *  Octeon chip, by
 *  asserting the device's chip enable. Therefore SW should first load the command fifo, with a
 *  full sequence of
 *  commands to perform a Nand Flash device task. This command sequence will start with a bus
 *  acquire command and
 *  the last command in the sequence will be a bus release command. The execution unit will start
 *  execution of
 *  the sequence only if the [CNT] field is non-zero when it fetches the bus acquire command,
 *  which is the first
 *  command in this sequence. SW can also, load multiple such sequences, each starting with a chip
 *  enable command
 *  and ending with a chip disable command, and then write a non-zero data value to this csr to
 *  increment the
 *  CNT field by the number of the command sequences, loaded to the command fifo.
 * 
$NDF_DRBELL   Address=(0x1070001000030)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:0>   CNT   R/W/H   0x0        NS         Doorbell count register, 2's complement 8 bit value
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * NDF_ST_REG
 * 
 *  
 * 
$NDF_ST_REG   Address=(0x1070001000038)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS        RAZ     NS         NS         Reserved.                                         
 <15>    EXE_IDLE  RO/H    0x1        NS         Command Execution status 1=IDLE, 0=Busy           
                                                 1 means execution of command sequence is complete
                                                 and command fifo is empty
 <14:11> EXE_SM    RO/H    0x0        NS         Command Execution State machine states            
 <10:7>  BT_SM     RO/H    0x0        NS         Boot load and Boot dma State machine states       
 <6>     RD_FF_BAD RO/H    0x0        NS         CMD fifo read back State machine in bad state     
 <5:4>   RD_FF     RO/H    0x0        NS         CMD fifo read back State machine states           
 <3>     MAIN_BAD  RO/H    0x0        NS         Main State machine in bad state                   
 <2:0>   MAIN_SM   RO/H    0x0        NS         Main State machine states                         
-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the ocla.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

 * 
 * OCLA_INTSN_E
 * 
 *  Enumerates the different generated interrupts.
 *  Attribute: -width=20.
 * 
$OCLA_INTSN_E
-----------------------------------------------------------------------------------------------------------------------------------
 Value                  Name                     Description    
-----------------------------------------------------------------------------------------------------------------------------------
 0xA8000+a*0x1000+b     OCLA(0)_STATE_OVFL(0..3) See OCLA(0)_STATE_INT[OVFL<b>].
 0xA8008+a*0x1000       OCLA(0)_STATE_TRIG       See OCLA(0)_STATE_INT[TRIG].
 0xA8009+a*0x1000+b     OCLA(0)_STATE_MCD(0..2)  See OCLA(0)_STATE_INT[MCD<b>].
                                                 Attribute: -exempt_natural_alignment=b.
 0xA800C+a*0x1000       OCLA(0)_STATE_FSM0_INT   See OCLA(0)_STATE_INT[FSM0_INT].
 0xA800D+a*0x1000       OCLA(0)_STATE_FSM1_INT   See OCLA(0)_STATE_INT[FSM1_INT].
 0xA800E+a*0x1000       OCLA(0)_STATE_CAPTURED   See OCLA(0)_STATE_INT[CAPTURED].
 0xA800F+a*0x1000       OCLA(0)_STATE_TRIGFULL   See OCLA(0)_STATE_INT[TRIGFULL].
 0xA8010+a*0x1000       OCLA(0)_STATE_OVERFULL   See OCLA(0)_STATE_INT[OVERFULL].
 0xA8011+a*0x1000       OCLA(0)_STATE_WMARK      See OCLA(0)_STATE_INT[WMARK].
 0xA8012+a*0x1000       OCLA(0)_STATE_DDRFULL    See OCLA(0)_STATE_INT[DDRFULL].
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_CAP_CTL_S
 * 
 *  Control packets are indicated by an entry's bit 37 being set, and described by the
 *  OCLA_CAP_CTL_S structure:
 *
 * 
$OCLA_CAP_CTL_S
-----------------------------------------------------------------------------------------------------------------------------------
 Bit       Field Field          
 Pos       Name  Description    
-----------------------------------------------------------------------------------------------------------------------------------
 w0<37>    CTL   Indicates a control word. Always set for control structures.
 w0<36>    NS    Reserved.      
 w0<35>    EOT1  End transaction for high data.
 w0<34>    EOT0  End transaction for low data. When set, CYCLE indicates the cycle at which the previous
                 entry of low data stopped being replicated. This may be set along with SOT0 to indicate a
                 repeat followed by new sequence.
 w0<33>    SOT1  Start transaction for high data.
 w0<32>    SOT0  Start transaction for low data. When set, CYCLE indicates the cycle number of the next new
                 low data, minus one cycle.
 w0<31:0>  CYCLE Cycle at which this control entry was written, from OCLA(0)_TIME register.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_CAP_DAT_S
 * 
 *  Data packets are indicated by an entry's bit 37 being clear, and described by the
 *  OCLA_CAP_DAT_S structure:
 *
 * 
$OCLA_CAP_DAT_S
-----------------------------------------------------------------------------------------------------------------------------------
 Bit       Field Field          
 Pos       Name Description    
-----------------------------------------------------------------------------------------------------------------------------------
 w0<37>    CTL  Indicates a control word. Always clear for data structures.
 w0<36>    HI   Set to indicate a sample of high data, clear for a sample of low data.
 w0<35:0>  DATA Captured trace data.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_CONST = OCLA Constants Registers
 * 
 *  
 * 
$OCLA(0)_CONST   Address=(0x11800A8000000|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ     NS         NS         Reserved.                                         
 <15:0>  DAT_SIZE RO      0x1000     0x1000     Size of data RAM in units of 36-bit entries. This value is subject to change between chip
                                                passes, and software should thus use this value rather than a hard coded constant.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_SFT_RST = OCLA Reset Registers
 * 
 *  
 * 
$OCLA(0)_SFT_RST   Address=(0x11800A8000020|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS    RAZ     NS         NS         Reserved.                                         
 <0>     RESET R/W     0x0        0x0        Reset. When set, causes a block reset, except RSL.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_BIST_RESULT = OCLA BIST Result Registers
 * 
 *  This register provides access to the internal BIST results. Each bit is the BIST result of an
 *  individual memory (per bit, 0 = pass and 1 = fail).
 * 
$OCLA(0)_BIST_RESULT   Address=(0x11800A8000040|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS    RAZ     NS         NS         Reserved.                                         
 <0>     DAT   RO      NS         0x0        BIST result of the DAT memory.                    
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_GEN_CTL = OCLA General Control Registers
 * 
 *  
 * 
$OCLA(0)_GEN_CTL   Address=(0x11800A8000060|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS    RAZ     NS         NS         Reserved.                                         
 <3>     EXTEN R/W     0x0        0x0        Enable external triggering.                       
                                             0 = External triggering ignored.
                                             1 = When the external trigger pin selected with GPIO_OCLA_EXTEN_TRIG is high it will cause
                                             triggerring and set OCLA(0)_STATE_SET[TRIG]. The external device must de-assert the
                                             signal to release the trigger (it is not edge sensitive.)
 <2>     DEN   R/W     0x0        0x1        Enable data bus and counter clocking. When set, the OCLA inbound data bus may be used and
                                             counters may increment. When clear, the bus is always zero and internal flops may be clock
                                             gated off to save power. Must be set for normal operation.
 <1>     STT   R/W     0x0        NS         Store to DDR directly, bypassing L2 cache.        
 <0>     NS    RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_STATE_INT = OCLA State and Interrupt Registers
 * 
 *  
 * 
$OCLA(0)_STATE_INT   Address=(0x11800A8000080|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:60> FSM1_STATE RO      0x0        NS         FSM1 current state.                               
 <59:56> FSM0_STATE RO      0x0        NS         FSM0 current state.                               
 <55:36> NS         RAZ     NS         NS         Reserved.                                         
 <35>    FSM1_RST   R/W1C   0x0        0x0        FSM1 hold in state zero. Writing one to OCLA(0)_STATE_SET[FSM1_RST] sets this bit and
                                                  holds FSM1 in state zero, writing one to OCLA(0)_STATE_INT[FSM1_RST] removes the hold.
 <34>    FSM0_RST   R/W1C   0x0        0x0        FSM0 hold in state zero. Writing one to OCLA(0)_STATE_SET[FSM0_RST] sets this bit and
                                                  holds FSM0 in state zero, writing one to OCLA(0)_STATE_INT[FSM0_RST] removes the hold.
 <33>    FSM1_ENA   R/W1C   0x0        0x0        FSM1 sequencing enabled.                          
 <32>    FSM0_ENA   R/W1C   0x0        0x0        FSM0 sequencing enabled.                          
 <31:19> NS         RAZ     NS         NS         Reserved.                                         
 <18>    DDRFULL    R/W1C/H 0x0        0x0        DDR buffer wrapped. Asserted when OCLA(0)_STACK_CUR has wrapped and been re-initialized
                                                  to OCLA(0)_STACK_BASE.
 <17>    WMARK      R/W1C/H 0x0        0x0        Internal buffer watermark reached. Asserted when OCLA(0)_FIFO_DEPTH >
                                                  OCLA(0)_FIFO_LIMIT[WMARK].
 <16>    OVERFULL   R/W1C/H 0x0        0x0        Capture ended due to FIFO overflow. Asserted when OCLA(0)_FIFO_DEPTH >
                                                  OCLA(0)_FIFO_LIMIT[OVERFULL].
 <15>    TRIGFULL   R/W1C/H 0x0        0x0        Capture ended due to buffer full. Asserted when OCLA(0)_FIFO_TRIG[LIMIT] >=
                                                  OCLA(0)_FIFO_TRIG[COUNT].
 <14>    CAPTURED   R/W1C/H 0x0        0x0        Capture started. Asserted when the first capture is made. Informational only; often masked.
 <13>    FSM1_INT   R/W1C/H 0x0        0x0        FSM1 interrupt requested.                         
 <12>    FSM0_INT   R/W1C/H 0x0        0x0        FSM0 interrupt requested.                         
 <11:9>  MCD        R/W1C/H 0x0        0x0        Multichip Debug (MCD0..2) set. Asserted on MCD received from another coprocessor or code,
                                                  or FSM MCD request or W1S to OCLA(0)_STATE_SET[MCD].
 <8>     TRIG       R/W1C/H 0x0        0x0        Internal trigger set. Asserted on FSM internal trigger request or W1S to OCLA(0)_STATE_SET[TRIG]
 <7:4>   NS         RAZ     NS         NS         Reserved.                                         
 <3:0>   OVFL       R/W1C/H 0x0        0x0        Match counter has overflowed. Asserted when OCLA(0)_MAT(0..3)_COUNT >=
                                                  OCLA(0)_MAT(0..3)_THRESH. Informational only; often masked. Writing 1 clears the
                                                  counter, not just the interrupt.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_STATE_SET = OCLA State Set Registers
 * 
 *  This register reads identically to OCLA(0)_STATE_INT, but allows R/W1S instead of R/W1C access.
 * 
$OCLA(0)_STATE_SET   Address=(0x11800A80000A0|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:60> FSM1_STATE RO      0x0        NS         See OCLA(0)_STATE_INT[FSM1_STATE].                
 <59:56> FSM0_STATE RO      0x0        NS         See OCLA(0)_STATE_INT[FSM0_STATE].                
 <55:36> NS         RAZ     NS         NS         Reserved.                                         
 <35>    FSM1_RST   R/W1S   0x0        0x0        See OCLA(0)_STATE_INT[FSM1_RST].                  
 <34>    FSM0_RST   R/W1S   0x0        0x0        See OCLA(0)_STATE_INT[FSM0_RST].                  
 <33>    FSM1_ENA   R/W1S   0x0        0x1        See OCLA(0)_STATE_INT[FSM1_ENA].                  
 <32>    FSM0_ENA   R/W1S   0x0        0x1        See OCLA(0)_STATE_INT[FSM0_ENA].                  
 <31:19> NS         RAZ     NS         NS         Reserved.                                         
 <18>    DDRFULL    R/W1S/H 0x0        0x0        See OCLA(0)_STATE_INT[DDRFULL].                   
 <17>    WMARK      R/W1S/H 0x0        0x0        See OCLA(0)_STATE_INT[WMARK].                     
 <16>    OVERFULL   R/W1S/H 0x0        0x0        See OCLA(0)_STATE_INT[OVERFULL].                  
 <15>    TRIGFULL   R/W1S/H 0x0        0x0        See OCLA(0)_STATE_INT[TRIGFULL].                  
 <14>    CAPTURED   R/W1S/H 0x0        0x0        See OCLA(0)_STATE_INT[CAPTURED].                  
 <13>    FSM1_INT   R/W1S/H 0x0        0x0        See OCLA(0)_STATE_INT[FSM1_INT].                  
 <12>    FSM0_INT   R/W1S/H 0x0        0x0        See OCLA(0)_STATE_INT[FSM0_INT].                  
 <11:9>  MCD        R/W1S/H 0x0        0x0        See OCLA(0)_STATE_INT[MCD].                       
 <8>     TRIG       R/W1S/H 0x0        0x0        See OCLA(0)_STATE_INT[TRIG].                      
 <7:4>   NS         RAZ     NS         NS         Reserved.                                         
 <3:0>   OVFL       R/W1S/H 0x0        0x0        See OCLA(0)_STATE_INT[OVFL].                      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_TIME = OCLA Current Time Registers
 * 
 *  
 * 
$OCLA(0)_TIME   Address=(0x11800A80000C0|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  CYCLE R/W/H   0x0        NS         Current time as free running counter. Loaded into captured control packets.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_RAW = OCLA Raw Input Registers
 * 
 *  
 * 
$OCLA(0)_RAW(0..1)   Address=(0x11800A8000100|a<<24|b<<3)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:36> NS    RAZ     NS         NS         Reserved.                                         
 <35:0>  RAW   RO/H    NS         NS         Raw value of debug bus input signals into OCLA.   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_FIFO_DEPTH = OCLA Capture FIFO Depth Registers
 * 
 *  
 * 
$OCLA(0)_FIFO_DEPTH   Address=(0x11800A8000200|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:0>  DEPTH RO/H    0x0        0x0        Current capture FIFO depth in 36-bit words.       
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_FIFO_LIMIT = OCLA Capture FIFO Limit Registers
 * 
 *  
 * 
$OCLA(0)_FIFO_LIMIT   Address=(0x11800A8000240|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> OVERFULL R/W     0xffff     NS         Stop level. When OCLA(0)_FIFO_DEPTH > OVERFULL, stop capturing and set
                                                OCLA(0)_STATE_INT[OVERFULL]. This should be set to just less than the FIFO size when
                                                using DDR capture to insure that overflow can be detected.
 <47:32> DDR      R/W     0xffff     NS         DDR level. When OCLA(0)_FIFO_DEPTH > DDR, FIFO entries will be removed, packed into a
                                                cache line, and overflowed to DDR/L2. All-ones disables overflow to DDR/L2. If non-zero
                                                must be at least 28.
 <31:16> BP       R/W     0xffff     NS         Backpressure level. When OCLA(0)_FIFO_DEPTH > BP, OCLA will signal backpressure to
                                                coprocessors. All-ones disables indicating backpressure.
 <15:0>  WMARK    R/W     0xffff     NS         Interrupt watermark level. When OCLA(0)_FIFO_DEPTH > WMARK OCLA will set
                                                OCLA(0)_STATE_INT[WMARK] interrupt. All-ones disables setting the interrupt.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_FIFO_TAIL = OCLA Capture FIFO Tail Registers
 * 
 *  
 * 
$OCLA(0)_FIFO_TAIL   Address=(0x11800A8000260|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:0>  TAIL  RO/H    0x0        0x0        Address last written into entry FIFO.             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_FIFO_WRAP = OCLA Capture FIFO Wrap Counter Registers
 * 
 *  
 * 
$OCLA(0)_FIFO_WRAP   Address=(0x11800A8000280|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  WRAPS R/W/H   0x0        0x0        Number of times FIFO has wrapped since trigger. Cleared when OCLA(0)_STATE_INT[TRIG] clear.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_FIFO_TRIG = OCLA Capture FIFO Trigger Level Registers
 * 
 *  
 * 
$OCLA(0)_FIFO_TRIG   Address=(0x11800A80002A0|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:16> LIMIT R/W     0x0        0x1        Post-trigger number of entries to collect before stopping collection. If zero, collection
                                             will never stop, which may be desirable when overflowing to DDR/L2.
 <15:0>  CNT   R/W/H   0x0        0x0        Number of entries collected since trigger. Cleared when OCLA(0)_STATE_INT[TRIG] clear.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_STACK_BASE = OCLA Stack Base Registers
 * 
 *  
 * 
$OCLA(0)_STACK_BASE   Address=(0x11800A8000400|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:42> NS    RAZ     NS         NS         Reserved.                                         
 <41:7>  PTR   R/W     0x0        NS         Memory address for base of overflow stack. This address must be on the local node in a OCI system.
 <6:0>   NS    RAZ     NS         NS         Reserved. For cache line alignment.               
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_STACK_TOP = OCLA Stack Top Address Registers
 * 
 *  
 * 
$OCLA(0)_STACK_TOP   Address=(0x11800A8000420|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:42> NS    RAZ     NS         NS         Reserved.                                         
 <41:7>  PTR   R/W     0x0        NS         Memory address for top of overflow stack plus one. This address must be on the local node
                                             in a OCI system.
 <6:0>   NS    RAZ     NS         NS         Reserved. For cache line alignment.               
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_STACK_WRAP = OCLA Stack Wrap Counter Registers
 * 
 *  
 * 
$OCLA(0)_STACK_WRAP   Address=(0x11800A8000440|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  WRAPS R/W/H   0x0        0x0        Number of times stack has been reset to OCLA(0)_STACK_BASE since trigger. Cleared when
                                             OCLA(0)_STATE_INT[TRIG] clear.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_STACK_STORE_CNT = OCLA Stack Stores Performance Counter Registers
 * 
 *  
 * 
$OCLA(0)_STACK_STORE_CNT   Address=(0x11800A8000460|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS     RAZ     NS         NS         Reserved.                                         
 <31:0>  STORES R/W/H   0x0        0x0        Number of cache line stores sent to memory subsystem. Not cleared by hardware.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_STACK_CUR = OCLA Stack Current Registers
 * 
 *  
 * 
$OCLA(0)_STACK_CUR   Address=(0x11800A8000480|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:42> NS    RAZ     NS         NS         Reserved.                                         
 <41:7>  PTR   R/W/H   0x0        NS         Next address to write for overflow stack. This address must be on the local node in a OCI
                                             system. During initialization this must be between OCLA(0)_STACK_BASE and
                                             OCLA(0)_STACK_TOP.
 <6:0>   NS    RAZ     NS         NS         Reserved. For cache line alignment.               
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_CDH_CTL = OCLA Capture Data Half Control Registers
 * 
 *  
 * 
$OCLA(0)_CDH(0..1)_CTL   Address=(0x11800A8000600|a<<24|b<<3)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  NS        RAZ     NS         NS         Reserved.                                         
 <5>     DUP       R/W     0x0        0x0        Retain duplicates in the data stream.             
 <4>     DIS_STAMP R/W     0x0        0x0        Remove time stamps from data stream.              
 <3:0>   CAP_CTL   R/W     0x2        0x2        Minterms that will cause data to be captured. These minterms are the four inputs to a 4-1
                                                 mux selected by PLA1 and 0. The output is thus calulated from the equation:
                                                 fsmcap0 = OCLA(0)_FSM(0)_STATE[state0][CAP]
                                                 fsmcap1 = OCLA(0)_FSM(1)_STATE[state1][CAP]
                                                 out = (    (<3> & fsmcap0 & fsmcap0)
                                                 || (<2> & fsmcap1 & !fsmcap0)
                                                 || (<1> & !fsmcap1 & fsmcap0)
                                                 || (<0> & !fsmcap1 & !fsmcap0))
                                                 Common examples:
                                                 0x0 = No capture
                                                 0x2 = Capture when fsmcap0 requests capture
                                                 0x4 = Capture when fsmcap1 requests capture
                                                 0x6 = Capture on fsmcap0 | fsmcap1
                                                 0x8 = Capture on fsmcap0 & fsmcap1
                                                 0xF = Always capture.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_DAT_POP = OCLA Data Pop Registers
 * 
 *  
 * 
$OCLA(0)_DAT_POP   Address=(0x11800A8000800|a<<24)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    VALID RC/H    0x0        0x1        Valid entry. Indicates the FIFO contains data, and equivalent to OCLA(0)_FIFO_DEPTH[DEPTH] != 0.
 <62>    TRIG  RO/H    0x0        0x0        Internal trigger set. Equivalent to OCLA(0)_STATE_INT[TRIG].
 <61>    WMARK RO/H    0x0        0x0        Internal buffer watermark reached. Equivalent to OCLA(0)_STATE_INT[WMARK].
 <60:38> NS    RAZ     NS         NS         Reserved.                                         
 <37:0>  ENTRY RC/H    0x0        NS         Captured entry. If VALID is set, has read side effect of unloading data by decrementing
                                             OCLA(0)_FIFO_DEPTH[DEPTH]. Data is in the format described by OCLA_CAP_DAT_S or
                                             OCLA_CAP_CTL_S.
                                             Note that unloading data will cause that data not to be sent to memory, therefore
                                             OCLA(0)_DAT_POP should not be read when OCLA(0)_FIFO_LIMIT[DDR] != all-ones.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_STAGE = OCLA Input Staging Registers
 * 
 *  
 * 
$OCLA(0)_STAGE(0..71)   Address=(0x11800A8100000|a<<24|b<<3)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:3>  NS    RAZ     NS         NS         Reserved.                                         
 <2:0>   DLY   R/W     0x0        0x0        Cycles of delay staging to apply to corresponding input bit.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_MAT_CTL = OCLA Matcher Control Registers
 * 
 *  
 * 
$OCLA(0)_MAT(0..3)_CTL   Address=(0x11800A8200000|a<<24|b<<12)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS        RAZ     NS         NS         Reserved.                                         
 <7>     FSM_CTR   R/W     0x0        0x1        What output matcher provides to FSM:              
                                                 0 = FSM receives raw match signal, asserting only in those cycles with matches.
                                                 1 = FSM receives OCLA(0)_MAT(0..3)_COUNT >= OCLA(0)_MAT(0..3)_THRESH.
 <6>     INC_MATCH R/W     0x0        0x1        Increment OCLA(0)_MAT(0..3)_COUNT counter automatically on each match.
 <5:0>   SHIFT     R/W     0x0        NS         Right rotation amount to apply to data loaded into OCLA(0)_MAT(0..3)_VALUE(0..1)
                                                 register when FSM requests a value load.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_MAT_VALUE = OCLA Matcher Compare Value Registers
 * 
 *  
 * 
$OCLA(0)_MAT(0..3)_VALUE(0..1)   Address=(0x11800A8210000|a<<24|b<<12|c<<3)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:36> NS    RAZ     NS         NS         Reserved.                                         
 <35:0>  MASK  R/W     0x0        NS         Data value to compare against when corresponding bits of OCLA(0)_MAT(0..3)_MASK(0..1) are set.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_MAT_MASK = OCLA Matcher Compare Mask Registers
 * 
 *  
 * 
$OCLA(0)_MAT(0..3)_MASK(0..1)   Address=(0x11800A8220000|a<<24|b<<12|c<<3)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:36> NS    RAZ     NS         NS         Reserved.                                         
 <35:0>  MASK  R/W     0x0        NS         Bitmask of which bits in OCLA(0)_MAT(0..3)_VALUE(0..1) are to be compared.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_MAT_COUNT = OCLA Matcher Count Registers
 * 
 *  
 * 
$OCLA(0)_MAT(0..3)_COUNT   Address=(0x11800A8230000|a<<24|b<<12)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  COUNT R/W/H   0x0        NS         Current counter value. Note software must reset this to zero (or the appropriate count)
                                             before starting capture.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_MAT_THRESH = OCLA Matcher Count Threshold Registers
 * 
 *  
 * 
$OCLA(0)_MAT(0..3)_THRESH   Address=(0x11800A8240000|a<<24|b<<12)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS     RAZ     NS         NS         Reserved.                                         
 <31:0>  THRESH R/W     0x0        NS         Counter threshold value. Compared against OCLA(0)_MAT(0..3)_COUNT to assert matcher
                                              output, and set OCLA(0)_STATE_INT[OVFL].
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_FSM_AND_I = OCLA FSM PLA AND Tree Registers
 * 
 *  Values for PLA-AND plane. AND(0..15) represents the 15 allowed AND terms. I(0..1) for I=0
 *  indicates the term non-inverted, for I=1 indicates the term inverted. Any AND tree may be
 *  disabled by setting the same bit in both _I(0) and _I(1), as '((1) & !(1))' is always false.
 * 
$OCLA(0)_FSM(0..1)_AND(0..15)_I(0..1)   Address=(0x11800A8300000|a<<24|b<<12|c<<4|d<<3)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:15> NS         RAZ     NS         NS         Reserved.                                         
 <14:12> MCD        R/W     0x0        NS         Multichip Debug (MCD) 0..2 inputs.                
 <11:8>  MATCH      R/W     0x0        NS         Matcher 0..3 input.                               
 <7:4>   FSM1_STATE R/W     0x0        NS         FSM 1 last state.                                 
 <3:0>   FSM0_STATE R/W     0x0        NS         FSM 0 last state.                                 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_FSM_OR = OCLA FSM PLA AND Tree Registers
 * 
 *  
 * 
$OCLA(0)_FSM(0..1)_OR(0..15)   Address=(0x11800A8310000|a<<24|b<<12|c<<3)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ     NS         NS         Reserved.                                         
 <3:0>   OR_STATE R/W     0x0        NS         Column to drive on PLA OR-plane.                  
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_FSM_STATE = OCLA FSM State Registers
 * 
 *  See State Outputs for more details on each of these actions.
 * 
$OCLA(0)_FSM(0..1)_STATE(0..15)   Address=(0x11800A8320000|a<<24|b<<12|c<<3)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:30> NS       RAZ     NS         NS         Reserved.                                         
 <29>    SET_INT  R/W     0x0        0x0        In this state set interrupt.                      
 <28>    CAP      R/W     0x0        0x1        In this state request capture this cycle.         
 <27:25> SET_MCD  R/W     0x0        0x0        In this state set MCD.                            
 <24>    SET_TRIG R/W     0x0        0x0        In this state set internal trigger indication.    
 <23:20> NS       RAZ     NS         NS         Reserved.                                         
 <19:16> SET_VAL  R/W     0x0        0x0        In this state store match value into matcher 0..3.
 <15:12> NS       RAZ     NS         NS         Reserved.                                         
 <11:8>  CLR_CNT  R/W     0x0        0x0        In this state clear match counter.                
 <7:4>   NS       RAZ     NS         NS         Reserved.                                         
 <3:0>   INC_CNT  R/W     0x0        0x0        In this state increment match counter. See State Outputs for more information on this or
                                                any of the bits above.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * OCLA_DAT = OCLA Data Registers
 * 
 *  
 * 
$OCLA(0)_DAT(0..8191)   Address=(0x11800A8400000|a<<24|b<<3)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:38> NS    RAZ     NS         NS         Reserved.                                         
 <37:0>  ENTRY RO/H    0x0        NS         Captured entry. Data is in the format described by OCLA_CAP_DAT_S or OCLA_CAP_CTL_S.
-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the pcieep.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

 * 
 * PCIEEP_CFG000
 * 
 *  PCIE_CFG000 = First 32-bits of PCIE type 0 config space (Device ID and Vendor ID Register)
 * 
$PCIEEP(0..2)_CFG000   Address=(0x30000000000+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> DEVID  RO/WRSL 0x96       0x96       "Device ID, writable through PEM#_CFG_WR          
                                              However, the application must not change this field.
                                              For EEPROM loads also see VENDID of this register."
 <15:0>  VENDID RO/WRSL 0x177d     0x177d     "Vendor ID, writable through PEM#_CFG_WR          
                                              However, the application must not change this field.
                                              During and EPROM Load is a value of 0xFFFF is loaded to this
                                              field and a value of 0xFFFF is loaded to the DEVID field of
                                              this register, the value will not be loaded, EEPROM load will
                                              stop, and the FastLinkEnable bit will be set in the
                                              PCIE_CFG452 register."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG001
 * 
 *  PCIE_CFG001 = Second 32-bits of PCIE type 0 config space (Command/Status Register)
 *  Attribute: -exempt_w1c_w=True.
 * 
$PCIEEP(0..2)_CFG001   Address=(0x30000000004+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31>    DPE     R/W1C/H 0x0        0x0        Detected Parity Error                             
 <30>    SSE     R/W1C/H 0x0        0x0        Signaled System Error                             
 <29>    RMA     R/W1C/H 0x0        0x0        Received Master Abort                             
 <28>    RTA     R/W1C/H 0x0        0x0        Received Target Abort                             
 <27>    STA     R/W1C/H 0x0        0x0        Signaled Target Abort                             
 <26:25> DEVT    RO      0x0        0x0        DEVSEL Timing                                     
                                               Not applicable for PCI Express. Hardwired to 0.
 <24>    MDPE    R/W1C/H 0x0        0x0        Master Data Parity Error                          
 <23>    FBB     RO      0x0        0x0        Fast Back-to-Back Capable                         
                                               Not applicable for PCI Express. Hardwired to 0.
 <22>    NS      RAZ     NS         NS         Reserved.                                         
 <21>    M66     RO      0x0        0x0        66 MHz Capable                                    
                                               Not applicable for PCI Express. Hardwired to 0.
 <20>    CL      RO      0x1        0x1        Capabilities List                                 
                                               Indicates presence of an extended capability item.
                                               Hardwired to 1.
 <19>    I_STAT  RO/H    0x0        0x0        INTx Status                                       
 <18:11> NS      RAZ     NS         NS         Reserved.                                         
 <10>    I_DIS   R/W     0x0        0x0        INTx Assertion Disable                            
 <9>     FBBE    RO      0x0        0x0        Fast Back-to-Back Enable                          
                                               Not applicable for PCI Express. Must be hardwired to 0.
 <8>     SEE     R/W     0x0        0x0        SERR# Enable                                      
 <7>     IDS_WCC RO      0x0        0x0        IDSEL Stepping/Wait Cycle Control                 
                                               Not applicable for PCI Express. Must be hardwired to 0
 <6>     PER     R/W     0x0        0x0        Parity Error Response                             
 <5>     VPS     RO      0x0        0x0        VGA Palette Snoop                                 
                                               Not applicable for PCI Express. Must be hardwired to 0.
 <4>     MWICE   RO      0x0        0x0        Memory Write and Invalidate                       
                                               Not applicable for PCI Express. Must be hardwired to 0.
 <3>     SCSE    RO      0x0        0x0        Special Cycle Enable                              
                                               Not applicable for PCI Express. Must be hardwired to 0.
 <2>     ME      R/W     0x0        0x0        Bus Master Enable                                 
 <1>     MSAE    R/W     0x0        0x0        Memory Space Enable                               
 <0>     ISAE    R/W     0x0        0x0        I/O Space Enable                                  
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG002
 * 
 *  PCIE_CFG002 = Third 32-bits of PCIE type 0 config space (Revision ID/Class Code Register)
 * 
$PCIEEP(0..2)_CFG002   Address=(0x30000000008+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:24> BCC RO/WRSL 0xb        0xb        "Base Class Code, writable through PEM#_CFG_WR    
                                           However, the application must not change this field."
 <23:16> SC  RO/WRSL 0x30       0x30       "Subclass Code, writable through PEM#_CFG_WR      
                                           However, the application must not change this field."
 <15:8>  PI  RO/WRSL 0x0        0x0        "Programming Interface, writable through PEM#_CFG_WR
                                           However, the application must not change this field."
 <7:0>   RID RO/WRSL 0x8        0x8        "Revision ID, writable through PEM#_CFG_WR        
                                           However, the application must not change this field."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG003
 * 
 *  PCIE_CFG003 = Fourth 32-bits of PCIE type 0 config space (Cache Line Size/Master Latency
 *  Timer/Header Type Register/BIST Register)
 * 
$PCIEEP(0..2)_CFG003   Address=(0x3000000000C+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:24> BIST RO      0x0        0x0        The BIST register functions are not supported.    
                                            All 8 bits of the BIST register are hardwired to 0.
 <23>    MFD  RO/WRSL 0x0        0x0        "Multi Function Device                            
                                            The Multi Function Device bit is writable through PEM#_CFG_WR.
                                            However, this is a single function device. Therefore, the
                                            application must not write a 1 to this bit."
 <22:16> CHF  RO      0x0        0x0        Configuration Header Format                       
                                            Hardwired to 0 for type 0.
 <15:8>  LT   RO      0x0        0x0        Master Latency Timer                              
                                            Not applicable for PCI Express, hardwired to 0.
 <7:0>   CLS  R/W     0x0        0x0        Cache Line Size                                   
                                            The Cache Line Size register is RW for legacy compatibility
                                            purposes and is not applicable to PCI Express device
                                            functionality.
                                            Writing to the Cache Line Size register does not impact
                                            functionality.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG004
 * 
 *  PCIE_CFG004 = Fifth 32-bits of PCIE type 0 config space (Base Address Register 0 - Low)
 * 
$PCIEEP(0..2)_CFG004   Address=(0x30000000010+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:14> LBAB  R/W     0x0        0x0        Lower bits of the BAR 0 base address              
 <13:4>  NS    RAZ     NS         NS         Reserved                                          
                                             If the Bit Mask Register (PCIE_CFG004_MASK or PCIE_CFG005_MASK)
                                             is changed, see LBAB.
 <3>     PF    RO/WRSL 0x1        0x1        "Prefetchable                                     
                                             This field is writable through PEM#_CFG_WR.
                                             However, the application must not change this field."
 <2:1>   TYP   RO/WRSL 0x2        0x2        "BAR type                                         
                                             o 00 = 32-bit BAR
                                             o 10 = 64-bit BAR
                                             This field is writable through PEM#_CFG_WR.
                                             However, the application must not change this field."
 <0>     MSPC  RO/WRSL 0x0        0x0        "Memory Space Indicator                           
                                             o 0 = BAR 0 is a memory BAR
                                             o 1 = BAR 0 is an I/O BAR
                                             This field is writable through PEM#_CFG_WR.
                                             However, the application must not change this field."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG005
 * 
 *  PCIE_CFG005 = Sixth 32-bits of PCIE type 0 config space (Base Address Register 0 - High)
 * 
$PCIEEP(0..2)_CFG005   Address=(0x30000000014+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  UBAB R/W     0x0        0x0        Contains the upper 32 bits of the BAR 0 base address.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG006
 * 
 *  PCIE_CFG006 = Seventh 32-bits of PCIE type 0 config space (Base Address Register 1 - Low)
 * 
$PCIEEP(0..2)_CFG006   Address=(0x30000000018+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:26> LBAB  R/W     0x0        0x0        Lower bits of the BAR 1 base address              
 <25:4>  NS    RAZ     NS         NS         Reserved                                          
                                             If the Bit Mask Register (PCIE_CFG006_MASK or PCIE_CFG007_MASK)
                                             is changed, see LBAB.
 <3>     PF    RO/WRSL 0x1        0x1        "Prefetchable                                     
                                             This field is writable through PEM#_CFG_WR.
                                             However, the application must not change this field."
 <2:1>   TYP   RO/WRSL 0x2        0x2        "BAR type                                         
                                             o 00 = 32-bit BAR
                                             o 10 = 64-bit BAR
                                             This field is writable through PEM#_CFG_WR.
                                             However, the application must not change this field."
 <0>     MSPC  RO/WRSL 0x0        0x0        "Memory Space Indicator                           
                                             o 0 = BAR 1 is a memory BAR
                                             o 1 = BAR 1 is an I/O BAR
                                             This field is writable through PEM#_CFG_WR.
                                             However, the application must not change this field."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG007
 * 
 *  PCIE_CFG007 = Eighth 32-bits of PCIE type 0 config space (Base Address Register 1 - High)
 * 
$PCIEEP(0..2)_CFG007   Address=(0x3000000001C+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  UBAB R/W     0x0        0x0        Contains the upper 32 bits of the BAR 1 base address.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG008
 * 
 *  PCIE_CFG008 = Ninth 32-bits of PCIE type 0 config space (Base Address Register 2 - Low)
 * 
$PCIEEP(0..2)_CFG008   Address=(0x30000000020+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:20> LBAB  R/W     0x0        0x0        Lower bits of the BAR 2 base address              
 <19:4>  NS    RAZ     NS         NS         Reserved                                          
                                             If the Bit Mask Register (PCIE_CFG008_MASK or PCIE_CFG009_MASK)
                                             is changed, see LBAB.
 <3>     PF    RO/WRSL 0x1        0x1        "Prefetchable                                     
                                             This field is writable through PEM#_CFG_WR.
                                             However, the application must not change this field."
 <2:1>   TYP   RO/WRSL 0x2        0x2        "BAR type                                         
                                             o 00 = 32-bit BAR
                                             o 10 = 64-bit BAR
                                             This field is writable through PEM#_CFG_WR.
                                             However, the application must not change this field."
 <0>     MSPC  RO/WRSL 0x0        0x0        "Memory Space Indicator                           
                                             o 0 = BAR 2 is a memory BAR
                                             o 1 = BAR 2 is an I/O BAR
                                             This field is writable through PEM#_CFG_WR.
                                             However, the application must not change this field."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG009
 * 
 *  PCIE_CFG009 = Tenth 32-bits of PCIE type 0 config space (Base Address Register 2 - High)
 * 
$PCIEEP(0..2)_CFG009   Address=(0x30000000024+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  UBAB R/W     0x0        0x0        Contains the upper 32 bits of the BAR 2 base address.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG010
 * 
 *  PCIE_CFG010 = Eleventh 32-bits of PCIE type 0 config space (CardBus CIS Pointer Register)
 * 
$PCIEEP(0..2)_CFG010   Address=(0x30000000028+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  CISP RO/WRSL 0x0        0x0        "CardBus CIS Pointer                              
                                            Optional, writable through PEM#_CFG_WR."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG011
 * 
 *  PCIE_CFG011 = Twelfth 32-bits of PCIE type 0 config space (Subsystem ID and Subsystem Vendor
 *  ID Register)
 * 
$PCIEEP(0..2)_CFG011   Address=(0x3000000002C+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> SSID  RO/WRSL 0x1        0x1        "Subsystem ID                                     
                                             Assigned by PCI-SIG, writable through PEM#_CFG_WR.
                                             However, the application must not change this field."
 <15:0>  SSVID RO/WRSL 0x177d     0x177d     "Subsystem Vendor ID                              
                                             Assigned by PCI-SIG, writable through PEM#_CFG_WR.
                                             However, the application must not change this field."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG012
 * 
 *  PCIE_CFG012 = Thirteenth 32-bits of PCIE type 0 config space (Expansion ROM Base Address Register)
 * 
$PCIEEP(0..2)_CFG012   Address=(0x30000000030+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> ERADDR R/W     0x0        0x0        Expansion ROM Address                             
 <15:1>  NS     RAZ     NS         NS         Reserved.                                         
 <0>     ER_EN  R/W     0x0        0x0        Expansion ROM Enable                              
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG013
 * 
 *  PCIE_CFG013 = Fourteenth 32-bits of PCIE type 0 config space (Capability Pointer Register)
 * 
$PCIEEP(0..2)_CFG013   Address=(0x30000000034+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:0>   CP    RO/WRSL 0x40       0x40       "First Capability Pointer.                        
                                             Points to Power Management Capability structure by
                                             default, writable through PEM#_CFG_WR.
                                             However, the application must not change this field."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG015
 * 
 *  PCIE_CFG015 = Sixteenth 32-bits of PCIE type 0 config space (Interrupt Line Register/Interrupt
 *  Pin/Bridge Control Register)
 * 
$PCIEEP(0..2)_CFG015   Address=(0x3000000003C+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:24> ML   RO/H    0x0        0x0        Maximum Latency     (Hardwired to 0)              
 <23:16> MG   RO/H    0x0        0x0        Minimum Grant       (Hardwired to 0)              
 <15:8>  INTA RO/WRSL 0x1        0x1        "Interrupt Pin                                    
                                            Identifies the legacy interrupt Message that the device
                                            (or device function) uses.
                                            The Interrupt Pin register is writable through PEM#_CFG_WR.
                                            In a single-function configuration, only INTA is used.
                                            Therefore, the application must not change this field."
 <7:0>   IL   R/W     0xff       0xff       Interrupt Line                                    
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG016
 * 
 *  PCIE_CFG016 = Seventeenth 32-bits of PCIE type 0 config space
 *  (Power Management Capability ID/
 *  Power Management Next Item Pointer/
 *  Power Management Capabilities Register)
 * 
$PCIEEP(0..2)_CFG016   Address=(0x30000000040+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:27> PMES      RO/WRSL 0x0        0x0        "PME_Support                                      
                                                 o Bit 11: If set, PME Messages can be generated from D0
                                                 o Bit 12: If set, PME Messages can be generated from D1
                                                 o Bit 13: If set, PME Messages can be generated from D2
                                                 o Bit 14: If set, PME Messages can be generated from D3hot
                                                 o Bit 15: If set, PME Messages can be generated from D3cold
                                                 The PME_Support field is writable through PEM#_CFG_WR.
                                                 However, the application must not change this field."
 <26>    D2S       RO/WRSL 0x0        0x0        "D2 Support, writable through PEM#_CFG_WR         
                                                 However, the application must not change this field."
 <25>    D1S       RO/WRSL 0x0        0x0        "D1 Support, writable through PEM#_CFG_WR         
                                                 However, the application must not change this field."
 <24:22> AUXC      RO/WRSL 0x0        0x0        "AUX Current, writable through PEM#_CFG_WR        
                                                 However, the application must not change this field."
 <21>    DSI       RO/WRSL 0x0        0x0        "Device Specific Initialization (DSI), writable through PEM#_CFG_WR
                                                 However, the application must not change this field."
 <20>    NS        RAZ     NS         NS         Reserved.                                         
 <19>    PME_CLOCK RO      0x0        0x0        PME Clock, hardwired to 0                         
 <18:16> PMSV      RO/WRSL 0x3        0x0        "Power Management Specification Version, writable through PEM#_CFG_WR
                                                 However, the application must not change this field."
 <15:8>  NCP       RO/WRSL 0x50       0x0        "Next Capability Pointer                          
                                                 Points to the MSI capabilities by default, writable
                                                 through PEM#_CFG_WR.
                                                 However, the application must not change this field."
 <7:0>   PMCID     RO      0x1        0x0        Power Management Capability ID                    
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG017
 * 
 *  PCIE_CFG017 = Eighteenth 32-bits of PCIE type 0 config space (Power Management Control and
 *  Status Register)
 *  Attribute: -exempt_w1c_w=True.
 * 
$PCIEEP(0..2)_CFG017   Address=(0x30000000044+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:24> PMDIA   RO      0x0        0x0        Data register for additional information (not supported)
 <23>    BPCCEE  RO      0x0        0x0        Bus Power/Clock Control Enable, hardwired to 0    
 <22>    BD3H    RO      0x0        0x0        B2/B3 Support, hardwired to 0                     
 <21:16> NS      RAZ     NS         NS         Reserved.                                         
 <15>    PMESS   R/W1C/H 0x0        0x0        PME Status                                        
                                               Indicates if a previously enabled PME event occurred or not.
 <14:13> PMEDSIA RO      0x0        0x0        Data Scale (not supported)                        
 <12:9>  PMDS    RO      0x0        0x0        Data Select (not supported)                       
 <8>     PMEENS  R/W     0x0        0x0        PME Enable                                        
                                               A value of 1 indicates that the device is enabled to
                                               generate PME.
 <7:4>   NS      RAZ     NS         NS         Reserved.                                         
 <3>     NSR     RO/WRSL 0x0        0x0        "No Soft Reset, writable through PEM#_CFG_WR      
                                               However, the application must not change this field."
 <2>     NS      RAZ     NS         NS         Reserved.                                         
 <1:0>   PS      R/W     0x0        0x0        Power State                                       
                                               Controls the device power state:
                                               o 00b: D0
                                               o 01b: D1
                                               o 10b: D2
                                               o 11b: D3
                                               The written value is ignored if the specific state is
                                               not supported.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG020
 * 
 *  PCIE_CFG020 = Twenty-first 32-bits of PCIE type 0 config space
 *  (MSI Capability ID/
 *  MSI Next Item Pointer/
 *  MSI Control Register)
 * 
$PCIEEP(0..2)_CFG020   Address=(0x30000000050+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:25> NS     RAZ     NS         NS         Reserved.                                         
 <24>    PVM    RO      0x0        0x0        Per-vector masking capable                        
 <23>    M64    RO/WRSL 0x1        0x1        "64-bit Address Capable, writable through PEM#_CFG_WR
                                              However, the application must not change this field."
 <22:20> MME    R/W     0x0        0x0        Multiple Message Enabled                          
                                              Indicates that multiple Message mode is enabled by system
                                              software. The number of Messages enabled must be less than
                                              or equal to the Multiple Message Capable value.
 <19:17> MMC    RO/WRSL 0x0        0x0        "Multiple Message Capable, writable through PEM#_CFG_WR
                                              However, the application must not change this field."
 <16>    MSIEN  R/W     0x0        0x0        MSI Enabled                                       
                                              When set, INTx must be disabled.
 <15:8>  NCP    RO/WRSL 0x70       0x70       "Next Capability Pointer                          
                                              Points to PCI Express Capabilities by default,
                                              writable through PEM#_CFG_WR.
                                              However, the application must not change this field."
 <7:0>   MSICID RO      0x5        0x5        MSI Capability ID                                 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG021
 * 
 *  PCIE_CFG021 = Twenty-second 32-bits of PCIE type 0 config space (MSI Lower 32 Bits Address
 *  Register)
 * 
$PCIEEP(0..2)_CFG021   Address=(0x30000000054+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:2>  LMSI  R/W     0x0        0x0        Lower 32-bit Address                              
 <1:0>   NS    RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG022
 * 
 *  PCIE_CFG022 = Twenty-third 32-bits of PCIE type 0 config space (MSI Upper 32 bits Address Register)
 * 
$PCIEEP(0..2)_CFG022   Address=(0x30000000058+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  UMSI R/W     0x0        0x0        Upper 32-bit Address                              
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG023
 * 
 *  PCIE_CFG023 = Twenty-fourth 32-bits of PCIE type 0 config space (MSI Data Register)
 * 
$PCIEEP(0..2)_CFG023   Address=(0x3000000005C+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:0>  MSIMD R/W     0x0        0x0        MSI Data                                          
                                             Pattern assigned by system software, bits [4:0] are Or-ed with
                                             MSI_VECTOR to generate 32 MSI Messages per function.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG024
 * 
 *  PCIE_CFG024 = Twenty-fifth 32-bits of PCIE type 0 config space (MSI Mask Register)
 * 
$PCIEEP(0..2)_CFG024   Address=(0x30000000060+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  MSIMM R/W     0x0        0x0        MSI Mask                                          
                                             For each mask bit that is set, the function is prohibited from
                                             sending the associated message.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG025
 * 
 *  PCIE_CFG025 = Twenty-sixth 32-bits of PCIE type 0 config space (MSI Pending Register)
 * 
$PCIEEP(0..2)_CFG025   Address=(0x30000000064+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  MSIMP RO      0x0        0x0        MSI Pending                                       
                                             For each Pending bit that is set, the function has a pending
                                             associated message.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG028
 * 
 *  PCIE_CFG028 = Twenty-ninth 32-bits of PCIE type 0 config space
 *  (PCI Express Capabilities List Register/
 *  PCI Express Capabilities Register)
 * 
$PCIEEP(0..2)_CFG028   Address=(0x30000000070+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:30> NS     RAZ     NS         NS         Reserved.                                         
 <29:25> IMN    RO/WRSL 0x0        0x0        "Interrupt Message Number                         
                                              Updated by hardware, writable through PEM#_CFG_WR.
                                              However, the application must not change this field."
 <24>    SI     RO/WRSL 0x0        0x0        "Slot Implemented                                 
                                              This bit is writable through PEM#_CFG_WR.
                                              However, it must be 0 for
                                              an Endpoint device. Therefore, the application must not write a
                                              1 to this bit."
 <23:20> DPT    RO      0x0        0x0        Device Port Type                                  
 <19:16> PCIECV RO      0x2        0x2        PCI Express Capability Version                    
 <15:8>  NCP    RO/WRSL 0x0        0x0        "Next Capability Pointer                          
                                              writable through PEM#_CFG_WR.
                                              However, the application must not change this field."
 <7:0>   PCIEID RO      0x10       0x10       PCIE Capability ID                                
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG029
 * 
 *  PCIE_CFG029 = Thirtieth 32-bits of PCIE type 0 config space (Device Capabilities Register)
 * 
$PCIEEP(0..2)_CFG029   Address=(0x30000000074+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:29> NS      RAZ     NS         NS         Reserved.                                         
 <28>    FLR_CAP RO      0x0        0x0        Function Level Reset Capable                      
                                               not supported
 <27:26> CSPLS   RO      0x0        0x0        Captured Slot Power Limit Scale                   
                                               From Message from RC, upstream port only.
 <25:18> CSPLV   RO      0x0        0x0        Captured Slot Power Limit Value                   
                                               From Message from RC, upstream port only.
 <17:16> NS      RAZ     NS         NS         Reserved.                                         
 <15>    RBER    RO/WRSL 0x1        0x1        "Role-Based Error Reporting, writable through PEM#_CFG_WR
                                               However, the application must not change this field."
 <14>    NS      RAZ     NS         NS         Undefined                                         
 <13>    NS      RAZ     NS         NS         Undefined                                         
 <12>    NS      RAZ     NS         NS         Undefined                                         
 <11:9>  EL1AL   RO/WRSL 0x3        0x3        "Endpoint L1 Acceptable Latency, writable through PEM#_CFG_WR
                                               However, the application must not change this field."
 <8:6>   EL0AL   RO/WRSL 0x4        0x4        "Endpoint L0s Acceptable Latency, writable through PEM#_CFG_WR
                                               However, the application must not change this field."
 <5>     ETFS    RO/WRSL 0x0        0x0        "Extended Tag Field Supported                     
                                               This bit is writable through PEM#_CFG_WR.
                                               However, the application
                                               must not write a 1 to this bit."
 <4:3>   PFS     RO/WRSL 0x0        0x0        "Phantom Function Supported                       
                                               This field is writable through PEM#_CFG_WR.
                                               However, Phantom
                                               Function is not supported. Therefore, the application must not
                                               write any value other than 0x0 to this field."
 <2:0>   MPSS    RO/WRSL 0x1        0x1        "Max_Payload_Size Supported, writable through PEM#_CFG_WR
                                               However, the application must not change this field."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG030
 * 
 *  PCIE_CFG030 = Thirty-first 32-bits of PCIE type 0 config space
 *  (Device Control Register/Device Status Register)
 *  Attribute: -exempt_w1c_w=True.
 * 
$PCIEEP(0..2)_CFG030   Address=(0x30000000078+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:22> NS     RAZ     NS         NS         Reserved.                                         
 <21>    TP     RO/H    0x0        0x0        Transaction Pending                               
                                              Set to 1 when Non-Posted Requests are not yet completed
                                              and clear when they are completed.
 <20>    AP_D   RO      0x0        0x0        Aux Power Detected                                
                                              Set to 1 if Aux power detected.
 <19>    UR_D   R/W1C/H 0x0        0x0        Unsupported Request Detected                      
                                              Errors are logged in this register regardless of whether
                                              error reporting is enabled in the Device Control register.
                                              UR_D occurs when we receive something we don't support.
                                              Unsupported requests are Nonfatal errors, so UR_D should
                                              cause NFE_D.  Receiving a  vendor defined message should
                                              cause an unsupported request.
 <18>    FE_D   R/W1C/H 0x0        0x0        Fatal Error Detected                              
                                              Errors are logged in this register regardless of whether
                                              error reporting is enabled in the Device Control register.
                                              FE_D is set if receive any of the errors in PCIE_CFG066 that
                                              has a severity set to Fatal.  Malformed TLP's generally fit
                                              into this category.
 <17>    NFE_D  R/W1C/H 0x0        0x0        Non-Fatal Error detected                          
                                              Errors are logged in this register regardless of whether
                                              error reporting is enabled in the Device Control register.
                                              NFE_D is set if we receive any of the errors in PCIE_CFG066
                                              that has a severity set to Nonfatal and does NOT meet Advisory
                                              Nonfatal criteria , which
                                              most poisoned TLP's should be.
 <16>    CE_D   R/W1C/H 0x0        0x0        Correctable Error Detected                        
                                              Errors are logged in this register regardless of whether
                                              error reporting is enabled in the Device Control register.
                                              CE_D is set if we receive any of the errors in PCIE_CFG068
                                              for example a Replay Timer Timeout.  Also, it can be set if
                                              we get any of the errors in PCIE_CFG066 that has a severity
                                              set to Nonfatal and meets the Advisory Nonfatal criteria,
                                              which most ECRC errors
                                              should be.
 <15>    I_FLR  RO      0x0        0x0        Initiate Function Level Reset                     
                                              (Not Supported)
 <14:12> MRRS   R/W     0x2        0x2        "Max Read Request Size                            
                                              0 = 128B
                                              1 = 256B
                                              2 = 512B
                                              3 = 1024B
                                              4 = 2048B
                                              5 = 4096B
                                              Note: SLI_S2M_PORT#_CTL[MRRS] and DPI_SLI_PRT#_CFG[MRRS] and
                                              also must be set properly.
                                              SLI_S2M_PORT#_CTL[MRRS] and DPI_SLI_PRT#_CFG[MRRS] must
                                              not exceed the desired max read request size."
 <11>    NS_EN  R/W     0x1        0x1        Enable No Snoop                                   
 <10>    AP_EN  R/W     0x0        0x0        AUX Power PM Enable                               
 <9>     PF_EN  R/W     0x0        0x0        Phantom Function Enable                           
                                              This bit should never be set - OCTEON requests never use
                                              phantom functions.
 <8>     ETF_EN R/W     0x0        0x0        Extended Tag Field Enable                         
                                              This bit should never be set - OCTEON requests never use
                                              extended tags.
 <7:5>   MPS    R/W     0x0        0x0        "Max Payload Size                                 
                                              Legal values:
                                              0  = 128B
                                              1  = 256B
                                              Larger sizes not supported by OCTEON.
                                              Note: DPI_SLI_PRT#_CFG[MPS] must be set to the same
                                              value for proper functionality."
 <4>     RO_EN  R/W     0x1        0x1        Enable Relaxed Ordering                           
 <3>     UR_EN  R/W     0x0        0x0        Unsupported Request Reporting Enable              
 <2>     FE_EN  R/W     0x0        0x0        Fatal Error Reporting Enable                      
 <1>     NFE_EN R/W     0x0        0x0        Non-Fatal Error Reporting Enable                  
 <0>     CE_EN  R/W     0x0        0x0        Correctable Error Reporting Enable                
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG031
 * 
 *  PCIE_CFG031 = Thirty-second 32-bits of PCIE type 0 config space
 *  (Link Capabilities Register)
 * 
$PCIEEP(0..2)_CFG031   Address=(0x3000000007C+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:24> PNUM   RO/WRSL 0x0        0x0        "Port Number                                      
                                              writable through PEM#_CFG_WR, however the application
                                              must not change this field."
 <23>    NS     RAZ     NS         NS         Reserved.                                         
 <22>    ASPM   RO/WRSL 0x1        0x1        ASPM Optionality Compliance                       
 <21>    LBNC   RO      0x0        0x0        Link Bandwidth Notification Capability            
                                              Set 0 for Endpoint devices.
 <20>    DLLARC RO      0x0        0x0        Data Link Layer Active Reporting Capable          
 <19>    SDERC  RO      0x0        0x0        Surprise Down Error Reporting Capable             
                                              Not supported, hardwired to 0x0.
 <18>    CPM    RO/WRSL 0x0        0x0        "Clock Power Management                           
                                              The default value is the value you specify during hardware
                                              configuration, writable through PEM#_CFG_WR.
                                              However, the application must not change this field."
 <17:15> L1EL   RO/WRSL 0x1        0x1        "L1 Exit Latency                                  
                                              The default value is the value you specify during hardware
                                              configuration, writable through PEM#_CFG_WR.
                                              However, the application must not change this field."
 <14:12> L0EL   RO/WRSL 0x0        0x0        "L0s Exit Latency                                 
                                              The default value is the value you specify during hardware
                                              configuration, writable through PEM#_CFG_WR.
                                              However, the application must not change this field."
 <11:10> ASLPMS RO/WRSL 0x3        0x3        "Active State Link PM Support                     
                                              The default value is the value you specify during hardware
                                              configuration, writable through PEM#_CFG_WR.
                                              However, the application must not change this field."
 <9:4>   MLW    RO/WRSL 0x4        0x4        "Maximum Link Width                               
                                              The default value is the value you specify during hardware
                                              configuration (x1, x4, x8, or x16), writable through PEM#_CFG_WR."
 <3:0>   MLS    RO/WRSL NS         NS         "Maximum Link Speed                               
                                              The reset value of this field is controlled by a value read from
                                              the msb of the PEM CSR mode pins.
                                              PEM(0..2)_CFG.MD[2]  RST_VALUE   NOTE
                                              1                    0001b       2.5 GHz supported
                                              0                    0010b       5.0 GHz and 2.5 GHz supported
                                              This field is writable through PEM#_CFG_WR.
                                              However, the application must not change this field."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG032
 * 
 *  PCIE_CFG032 = Thirty-third 32-bits of PCIE type 0 config space
 *  (Link Control Register/Link Status Register)
 * 
$PCIEEP(0..2)_CFG032   Address=(0x30000000080+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31>    LAB         RO/H    0x0        0x0        Link Autonomous Bandwidth Status                  
 <30>    LBM         RO/H    0x0        0x0        Link Bandwidth Management Status                  
 <29>    DLLA        RO      0x0        0x0        Data Link Layer Active                            
                                                   Not applicable for an upstream Port or Endpoint device,
                                                   hardwired to 0.
 <28>    SCC         RO/WRSL 0x1        0x1        "Slot Clock Configuration                         
                                                   Indicates that the component uses the same physical reference
                                                   clock that the platform provides on the connector.
                                                   Writable through PEM#_CFG_WR.
                                                   However, the application must not change this field."
 <27>    LT          RO      0x0        0x0        Link Training                                     
                                                   Not applicable for an upstream Port or Endpoint device,
                                                   hardwired to 0.
 <26>    NS          RAZ     NS         NS         Undefined                                         
 <25:20> NLW         RO/H    0x1        0x4        Negotiated Link Width                             
                                                   Set automatically by hardware after Link initialization.
                                                   Value is undefined when link is not up.
 <19:16> LS          RO/H    0x1        0x1        Link Speed                                        
                                                   1 == The negotiated Link speed: 2.5 Gbps
                                                   2 == The negotiated Link speed: 5.0 Gbps
                                                   4 == The negotiated Link speed: 8.0 Gbps (Not Supported)
 <15:12> NS          RAZ     NS         NS         Reserved.                                         
 <11>    LAB_INT_ENB RO      0x0        0x0        Link Autonomous Bandwidth Interrupt Enable        
                                                   This bit is not applicable and is reserved for endpoints
 <10>    LBM_INT_ENB RO      0x0        0x0        Link Bandwidth Management Interrupt Enable        
                                                   This bit is not applicable and is reserved for endpoints
 <9>     HAWD        RO      0x0        0x0        Hardware Autonomous Width Disable                 
                                                   (Not Supported)
 <8>     ECPM        R/W     0x0        0x0        Enable Clock Power Management                     
                                                   Hardwired to 0 if Clock Power Management is disabled in
                                                   the Link Capabilities register.
 <7>     ES          R/W     0x0        0x0        Extended Synch                                    
 <6>     CCC         R/W     0x0        0x0        Common Clock Configuration                        
 <5>     RL          RO      0x0        0x0        Retrain Link                                      
                                                   Not applicable for an upstream Port or Endpoint device,
                                                   hardwired to 0.
 <4>     LD          RO      0x0        0x0        Link Disable                                      
                                                   Not applicable for an upstream Port or Endpoint device,
                                                   hardwired to 0.
 <3>     RCB         RO      0x0        0x0        Read Completion Boundary (RCB)                    
 <2>     NS          RAZ     NS         NS         Reserved.                                         
 <1:0>   ASLPC       R/W     0x0        0x0        Active State Link PM Control                      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG037
 * 
 *  PCIE_CFG037 = Thirty-eighth 32-bits of PCIE type 0 config space
 *  (Device Capabilities 2 Register)
 * 
$PCIEEP(0..2)_CFG037   Address=(0x30000000094+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:14> NS       RAZ     NS         NS         Reserved.                                         
 <13:12> TPH      RO      0x0        0x0        TPH Completer Supported                           
                                                (Not Supported)
 <11>    NS       RAZ     NS         NS         Reserved.                                         
 <10>    NOROPRPR RO/H    0x0        0x0        No RO-enabled PR-PR Passing                       
                                                (This bit applies to RCs)
 <9>     ATOM128S RO      0x0        0x0        128-bit AtomicOp Supported                        
                                                (Not Supported)
 <8>     ATOM64S  RO      0x0        0x0        64-bit AtomicOp Supported                         
                                                (Not Supported)
 <7>     ATOM32S  RO      0x0        0x0        32-bit AtomicOp Supported                         
                                                (Not Supported)
 <6>     ATOM_OPS RO      0x0        0x0        AtomicOp Routing Supported                        
                                                (Not Applicable for EP)
 <5>     ARI      RO      0x0        0x0        Alternate Routing ID Forwarding Supported         
                                                (Not Supported)
 <4>     CTDS     RO      0x1        0x1        Completion Timeout Disable Supported              
 <3:0>   CTRS     RO/H    0xf        0xf        Completion Timeout Ranges Supported               
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG038
 * 
 *  PCIE_CFG038 = Thirty-ninth 32-bits of PCIE type 0 config space
 *  (Device Control 2 Register/Device Status 2 Register)
 * 
$PCIEEP(0..2)_CFG038   Address=(0x30000000098+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:10> NS         RAZ     NS         NS         Reserved.                                         
 <9>     ID0_CP     RO      0x0        0x0        ID Based Ordering Completion Enable               
                                                  (Not Supported)
 <8>     ID0_RQ     RO      0x0        0x0        ID Based Ordering Request Enable                  
                                                  (Not Supported)
 <7>     ATOM_OP_EB RO      0x0        0x0        AtomicOp Egress Blocking                          
                                                  (Not Supported)m
 <6>     ATOM_OP    RO      0x0        0x0        AtomicOp Requester Enable                         
                                                  (Not Supported)
 <5>     ARI        RO      0x0        0x0        Alternate Routing ID Forwarding Supported         
                                                  (Not Supported)
 <4>     CTD        R/W     0x0        0x0        Completion Timeout Disable                        
 <3:0>   CTV        RO/H    0x0        0x0        Completion Timeout Value                          
                                                  Completion Timeout Programming is not supported
                                                  Completion timeout is the range of 16 ms to 55 ms.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG039
 * 
 *  PCIE_CFG039 = Fourtieth 32-bits of PCIE type 0 config space
 *  (Link Capabilities 2 Register)
 * 
$PCIEEP(0..2)_CFG039   Address=(0x3000000009C+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:9>  NS    RAZ     NS         NS         Reserved.                                         
 <8>     CLS   RO      0x0        0x0        Crosslink Supported                               
 <7:1>   SLSV  RO/WRSL NS         NS         "Supported Link Speeds Vector                     
                                             Indicates the supported Link speeds of the associated Port.
                                             For each bit, a value of 1b indicates that the cooresponding
                                             Link speed is supported; otherwise, the Link speed is not
                                             supported.
                                             Bit definitions are:
                                             Bit 1 2.5 GT/s
                                             Bit 2 5.0 GT/s
                                             Bit 3 8.0 GT/s (Not Supported)
                                             Bits 7:4 reserved
                                             The reset value of this field is controlled by a value read from
                                             the msb of the pi_select_mode pins.
                                             pi_sel_md[2]   RST_VALUE   NOTE
                                             1             0001b       2.5 GHz supported
                                             0             0011b       5.0 GHz and 2.5 GHz supported"
 <0>     NS    RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG040
 * 
 *  PCIE_CFG040 = Fourty-first 32-bits of PCIE type 0 config space
 *  (Link Control 2 Register/Link Status 2 Register)
 * 
$PCIEEP(0..2)_CFG040   Address=(0x300000000A0+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:17> NS    RAZ     NS         NS         Reserved.                                         
 <16>    CDL   RO/H    0x0        0x0        Current De-emphasis Level                         
                                             When the Link is operating at 5 GT/s speed, this bit
                                             reflects the level of de-emphasis. Encodings:
                                             1b: -3.5 dB
                                             0b: -6 dB
                                             Note: The value in this bit is undefined when the Link is
                                             operating at 2.5 GT/s speed
 <15:13> NS    RAZ     NS         NS         Reserved.                                         
 <12>    CDE   R/W     0x0        0x0        Compliance De-emphasis                            
                                             This bit sets the de-emphasis level in Polling. Compliance
                                             state if the entry occurred due to the Tx Compliance
                                             Receive bit being 1b. Encodings:
                                             1b: -3.5 dB
                                             0b: -6 dB
                                             Note: When the Link is operating at 2.5 GT/s, the setting
                                             of this bit has no effect.
 <11>    CSOS  R/W     0x0        0x0        Compliance SOS                                    
                                             When set to 1b, the LTSSM is required to send SKP
                                             Ordered Sets periodically in between the (modified)
                                             compliance patterns.
                                             Note: When the Link is operating at 2.5 GT/s, the setting
                                             of this bit has no effect.
 <10>    EMC   R/W     0x0        0x0        Enter Modified Compliance                         
                                             When this bit is set to 1b, the device transmits a modified
                                             compliance pattern if the LTSSM enters Polling.
                                             Compliance state.
 <9:7>   TM    R/W/H   0x0        0x0        Transmit Margin                                   
                                             This field controls the value of the non-de-emphasized
                                             voltage level at the Transmitter pins:
                                             000: 800-1200 mV for full swing 400-600 mV for half-swing
                                             001-010: values must be monotonic with a non-zero slope
                                             011: 200-400 mV for full-swing and 100-200 mV for halfswing
                                             100-111: reserved
                                             This field is reset to 000b on entry to the LTSSM Polling.
                                             Compliance substate.
                                             When operating in 5.0 GT/s mode with full swing, the
                                             de-emphasis ratio must be maintained within +/- 1 dB
                                             from the specification-defined operational value
                                             either -3.5 or -6 dB).
 <6>     SDE   RO      0x0        0x0        Selectable De-emphasis                            
                                             Not applicable for an upstream Port or Endpoint device.
                                             Hardwired to 0.
 <5>     HASD  RO/H    0x0        0x0        Hardware Autonomous Speed Disable                 
                                             When asserted, the
                                             application must disable hardware from changing the Link
                                             speed for device-specific reasons other than attempting to
                                             correct unreliable Link operation by reducing Link speed.
                                             Initial transition to the highest supported common link
                                             speed is not blocked by this signal.
 <4>     EC    R/W     0x0        0x0        Enter Compliance                                  
                                             Software is permitted to force a link to enter Compliance
                                             mode at the speed indicated in the Target Link Speed
                                             field by setting this bit to 1b in both components on a link
                                             and then initiating a hot reset on the link.
 <3:0>   TLS   R/W     NS         0x2        "Target Link Speed                                
                                             For Downstream ports, this field sets an upper limit on link
                                             operational speed by restricting the values advertised by
                                             the upstream component in its training sequences:
                                             0001: 2.5Gb/s Target Link Speed
                                             0010: 5Gb/s Target Link Speed
                                             0100: 8Gb/s Target Link Speed (Not Supported)
                                             All other encodings are reserved.
                                             If a value is written to this field that does not correspond to
                                             a speed included in the Supported Link Speeds field, the
                                             result is undefined.
                                             For both Upstream and Downstream ports, this field is
                                             used to set the target compliance mode speed when
                                             software is using the Enter Compliance bit to force a link
                                             into compliance mode.
                                             The reset value of this field is controlled by a value read from
                                             the msb of the pi_select_mode pins.
                                             pi_sel_md[2]  RST_VALUE   NOTE
                                             1             0001b       2.5 GHz supported
                                             0             0010b       5.0 GHz and 2.5 GHz supported"
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG064
 * 
 *  PCIE_CFG064 = Sixty-fifth 32-bits of PCIE type 0 config space
 *  (PCI Express Extended Capability Header)
 * 
$PCIEEP(0..2)_CFG064   Address=(0x30000000100+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:20> NCO    RO      0x148      0x148      Next Capability Offset                            
 <19:16> CV     RO      0x2        0x2        Capability Version                                
 <15:0>  PCIEEC RO      0x1        0x1        PCIE Express Extended Capability                  
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG065
 * 
 *  PCIE_CFG065 = Sixty-sixth 32-bits of PCIE type 0 config space
 *  (Uncorrectable Error Status Register)
 * 
$PCIEEP(0..2)_CFG065   Address=(0x30000000104+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:25> NS      RAZ     NS         NS         Reserved.                                         
 <24>    UATOMBS R/W1C/H 0x0        0x0        Unsupported AtomicOp Egress Blocked Status        
 <23>    NS      RAZ     NS         NS         Reserved.                                         
 <22>    UCIES   R/W1C/H 0x1        0x1        Uncorrectable Internal Error Status               
 <21>    NS      RAZ     NS         NS         Reserved.                                         
 <20>    URES    R/W1C/H 0x0        0x0        Unsupported Request Error Status                  
 <19>    ECRCES  R/W1C/H 0x0        0x0        ECRC Error Status                                 
 <18>    MTLPS   R/W1C/H 0x0        0x0        Malformed TLP Status                              
 <17>    ROS     R/W1C/H 0x0        0x0        Receiver Overflow Status                          
 <16>    UCS     R/W1C/H 0x0        0x0        Unexpected Completion Status                      
 <15>    CAS     R/W1C/H 0x0        0x0        Completer Abort Status                            
 <14>    CTS     R/W1C/H 0x0        0x0        Completion Timeout Status                         
 <13>    FCPES   R/W1C/H 0x0        0x0        Flow Control Protocol Error Status                
 <12>    PTLPS   R/W1C/H 0x0        0x0        Poisoned TLP Status                               
 <11:6>  NS      RAZ     NS         NS         Reserved.                                         
 <5>     SDES    RO      0x0        0x0        Surprise Down Error Status (not supported)        
 <4>     DLPES   R/W1C/H 0x0        0x0        Data Link Protocol Error Status                   
 <3:1>   NS      RAZ     NS         NS         Reserved.                                         
 <0>     NS      RAZ     NS         NS         Undefined                                         
                                               (Was Training Error Status for PCI Express 1.0a)
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG066
 * 
 *  PCIE_CFG066 = Sixty-seventh 32-bits of PCIE type 0 config space
 *  (Uncorrectable Error Mask Register)
 * 
$PCIEEP(0..2)_CFG066   Address=(0x30000000108+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:25> NS      RAZ     NS         NS         Reserved.                                         
 <24>    UATOMBM RO      0x0        0x0        Unsupported AtomicOp Egress Blocked Mask          
 <23>    NS      RAZ     NS         NS         Reserved.                                         
 <22>    UCIEM   R/W     0x1        0x1        Uncorrectable Internal Error Mask                 
 <21>    NS      RAZ     NS         NS         Reserved.                                         
 <20>    UREM    R/W     0x0        0x0        Unsupported Request Error Mask                    
 <19>    ECRCEM  R/W     0x0        0x0        ECRC Error Mask                                   
 <18>    MTLPM   R/W     0x0        0x0        Malformed TLP Mask                                
 <17>    ROM     R/W     0x0        0x0        Receiver Overflow Mask                            
 <16>    UCM     R/W     0x0        0x0        Unexpected Completion Mask                        
 <15>    CAM     R/W     0x0        0x0        Completer Abort Mask                              
 <14>    CTM     R/W     0x0        0x0        Completion Timeout Mask                           
 <13>    FCPEM   R/W     0x0        0x0        Flow Control Protocol Error Mask                  
 <12>    PTLPM   R/W     0x0        0x0        Poisoned TLP Mask                                 
 <11:6>  NS      RAZ     NS         NS         Reserved.                                         
 <5>     SDEM    RO      0x0        0x0        Surprise Down Error Mask (not supported)          
 <4>     DLPEM   R/W     0x0        0x0        Data Link Protocol Error Mask                     
 <3:1>   NS      RAZ     NS         NS         Reserved.                                         
 <0>     NS      RAZ     NS         NS         Undefined                                         
                                               (Was Training Error Mask for PCI Express 1.0a)
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG067
 * 
 *  PCIE_CFG067 = Sixty-eighth 32-bits of PCIE type 0 config space
 *  (Uncorrectable Error Severity Register)
 * 
$PCIEEP(0..2)_CFG067   Address=(0x3000000010C+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:25> NS      RAZ     NS         NS         Reserved.                                         
 <24>    UATOMBS RO      0x0        0x0        Unsupported AtomicOp Egress Blocked Severity      
 <23>    NS      RAZ     NS         NS         Reserved.                                         
 <22>    UCIES   R/W     0x1        0x1        Uncorrectable Internal Error Severity             
 <21>    NS      RAZ     NS         NS         Reserved.                                         
 <20>    URES    R/W     0x0        0x0        Unsupported Request Error Severity                
 <19>    ECRCES  R/W     0x0        0x0        ECRC Error Severity                               
 <18>    MTLPS   R/W     0x1        0x1        Malformed TLP Severity                            
 <17>    ROS     R/W     0x1        0x1        Receiver Overflow Severity                        
 <16>    UCS     R/W     0x0        0x0        Unexpected Completion Severity                    
 <15>    CAS     R/W     0x0        0x0        Completer Abort Severity                          
 <14>    CTS     R/W     0x0        0x0        Completion Timeout Severity                       
 <13>    FCPES   R/W     0x1        0x1        Flow Control Protocol Error Severity              
 <12>    PTLPS   R/W     0x0        0x0        Poisoned TLP Severity                             
 <11:6>  NS      RAZ     NS         NS         Reserved.                                         
 <5>     SDES    RO      0x1        0x1        Surprise Down Error Severity (not supported)      
 <4>     DLPES   R/W     0x1        0x1        Data Link Protocol Error Severity                 
 <3:1>   NS      RAZ     NS         NS         Reserved.                                         
 <0>     NS      RAZ     NS         NS         Undefined                                         
                                               (Was Training Error Severity for PCI Express 1.0a)
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG068
 * 
 *  PCIE_CFG068 = Sixty-ninth 32-bits of PCIE type 0 config space
 *  (Correctable Error Status Register)
 * 
$PCIEEP(0..2)_CFG068   Address=(0x30000000110+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:15> NS     RAZ     NS         NS         Reserved.                                         
 <14>    CIES   R/W1C/H 0x0        0x0        Corrected Internal Error Status                   
 <13>    ANFES  R/W1C/H 0x0        0x0        Advisory Non-Fatal Error Status                   
 <12>    RTTS   R/W1C/H 0x0        0x0        Replay Timer Timeout Status                       
 <11:9>  NS     RAZ     NS         NS         Reserved.                                         
 <8>     RNRS   R/W1C/H 0x0        0x0        REPLAY_NUM Rollover Status                        
 <7>     BDLLPS R/W1C/H 0x0        0x0        Bad DLLP Status                                   
 <6>     BTLPS  R/W1C/H 0x0        0x0        Bad TLP Status                                    
 <5:1>   NS     RAZ     NS         NS         Reserved.                                         
 <0>     RES    R/W1C/H 0x0        0x0        Receiver Error Status                             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG069
 * 
 *  PCIE_CFG069 = Seventieth 32-bits of PCIE type 0 config space
 *  (Correctable Error Mask Register)
 * 
$PCIEEP(0..2)_CFG069   Address=(0x30000000114+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:15> NS     RAZ     NS         NS         Reserved.                                         
 <14>    CIEM   R/W     0x1        0x1        Corrected Internal Error Mask                     
 <13>    ANFEM  R/W     0x1        0x1        Advisory Non-Fatal Error Mask                     
 <12>    RTTM   R/W     0x0        0x0        Reply Timer Timeout Mask                          
 <11:9>  NS     RAZ     NS         NS         Reserved.                                         
 <8>     RNRM   R/W     0x0        0x0        REPLAY_NUM Rollover Mask                          
 <7>     BDLLPM R/W     0x0        0x0        Bad DLLP Mask                                     
 <6>     BTLPM  R/W     0x0        0x0        Bad TLP Mask                                      
 <5:1>   NS     RAZ     NS         NS         Reserved.                                         
 <0>     REM    R/W     0x0        0x0        Receiver Error Mask                               
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG070
 * 
 *  PCIE_CFG070 = Seventy-first 32-bits of PCIE type 0 config space
 *  (Advanced Error Capabilities and Control Register)
 * 
$PCIEEP(0..2)_CFG070   Address=(0x30000000118+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:9>  NS    RAZ     NS         NS         Reserved.                                         
 <8>     CE    R/W     0x0        0x0        ECRC Check Enable                                 
 <7>     CC    RO      0x1        0x1        ECRC Check Capable                                
 <6>     GE    R/W     0x0        0x0        ECRC Generation Enable                            
 <5>     GC    RO      0x1        0x1        ECRC Generation Capability                        
 <4:0>   FEP   RO/H    0x0        0x0        First Error Pointer                               
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG071
 * 
 *  PCIE_CFG071 = Seventy-second 32-bits of PCIE type 0 config space
 *  (Header Log Register 1)
 * 
$PCIEEP(0..2)_CFG071   Address=(0x3000000011C+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  DWORD1 RO/H    0x0        0x0        Header Log Register (first DWORD)                 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG072
 * 
 *  PCIE_CFG072 = Seventy-third 32-bits of PCIE type 0 config space
 *  (Header Log Register 2)
 * 
$PCIEEP(0..2)_CFG072   Address=(0x30000000120+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  DWORD2 RO/H    0x0        0x0        Header Log Register (second DWORD)                
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG073
 * 
 *  PCIE_CFG073 = Seventy-fourth 32-bits of PCIE type 0 config space
 *  (Header Log Register 3)
 * 
$PCIEEP(0..2)_CFG073   Address=(0x30000000124+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  DWORD3 RO/H    0x0        0x0        Header Log Register (third DWORD)                 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG074
 * 
 *  PCIE_CFG074 = Seventy-fifth 32-bits of PCIE type 0 config space
 *  (Header Log Register 4)
 * 
$PCIEEP(0..2)_CFG074   Address=(0x30000000128+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  DWORD4 RO/H    0x0        0x0        Header Log Register (fourth DWORD)                
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG082
 * 
 *  PCIE_CFG082 = Eighty-third 32-bits of PCIE type 0 config space
 *  (PCI Express Resizable BAR (RBAR) Capability Header)
 * 
$PCIEEP(0..2)_CFG082   Address=(0x30000000148+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:20> NCO    RO/H    0x0        0x0        Next Capability Offset                            
 <19:16> CV     RO      0x1        0x1        Capability Version                                
 <15:0>  PCIEEC RO      0x15       0x15       PCIE Express Extended Capability                  
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG083
 * 
 *  PCIE_CFG083 = Eighty-fourth 32-bits of PCIE type 0 config space
 *  (PCI Express Resizable BAR (RBAR) Capability Register)
 * 
$PCIEEP(0..2)_CFG083   Address=(0x3000000014C+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:26> NS    RAZ     NS         NS         Reserved.                                         
 <25:4>  SRS   RO      0xfffff    0xfffff    "Supported Resource Sizes                         
                                             The OCTEON advertises the maximum allowable BAR size (512GB - 0xf_ffff)
                                             when the fus__bar2_size_conf is intact. When the fuse is blown,
                                             the OCTEON advertised a BAR size of 2TB (0x3f_ffff).
                                             The BAR is disabled at runtime by writing all zeros through
                                             PEM#_CFG_WR to this field"
 <3:0>   NS    RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG084
 * 
 *  PCIE_CFG084 = Eighty-fifth 32-bits of PCIE type 0 config space
 *  (PCI Express Resizable BAR (RBAR) Control Register)
 * 
$PCIEEP(0..2)_CFG084   Address=(0x30000000150+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:13> NS    RAZ     0x0        0x0        Reserved.                                         
 <12:8>  RBARS R/W     0x0        0x0        BAR Size                                          
                                             The OCTEON advertises the minimum allowable BAR size of 0x0 (1MB)
                                             but will accept values as large as 0x15 (2TB)
 <7:5>   NRBAR RO      0x1        0x1        Number of Resizable BARs                          
 <4:3>   NS    RAZ     0x0        0x0        Reserved.                                         
 <2:0>   RBARI RO      0x4        0x4        BAR Index                                         
                                             Points to the BAR located at offset 0x18 (BAR2)
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG448
 * 
 *  PCIE_CFG448 = Four hundred forty-ninth 32-bits of PCIE type 0 config space
 *  (Ack Latency Timer and Replay Timer Register)
 * 
$PCIEEP(0..2)_CFG448   Address=(0x30000000700+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> RTL   R/W/H   0x308d     NS         Replay Time Limit                                 
                                             The replay timer expires when it reaches this limit. The PCI
                                             Express bus initiates a replay upon reception of a Nak or when
                                             the replay timer expires.
                                             This value will be set correctly by the hardware out of reset
                                             or when the negotiated Link-Width or Payload-Size changes. If
                                             the user changes this value through a CSR write or by an
                                             EEPROM load then they should refer to the PCIe Specification
                                             for the correct value.
 <15:0>  RTLTL R/W/H   0x102f     NS         Round Trip Latency Time Limit                     
                                             The Ack/Nak latency timer expires when it reaches this limit.
                                             This value will be set correctly by the hardware out of reset
                                             or when the negotiated Link-Width or Payload-Size changes. If
                                             the user changes this value through a CSR write or by an
                                             EEPROM load then they should refer to the PCIe Specification
                                             for the correct value.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG449
 * 
 *  PCIE_CFG449 = Four hundred fiftieth 32-bits of PCIE type 0 config space
 *  (Other Message Register)
 * 
$PCIEEP(0..2)_CFG449   Address=(0x30000000704+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  OMR R/W     0xffffffff NS         Other Message Register                            
                                           This register can be used for either of the following purposes:
                                           o To send a specific PCI Express Message, the application
                                           writes the payload of the Message into this register, then
                                           sets bit 0 of the Port Link Control Register to send the
                                           Message.
                                           o To store a corruption pattern for corrupting the LCRC on all
                                           TLPs, the application places a 32-bit corruption pattern into
                                           this register and enables this function by setting bit 25 of
                                           the Port Link Control Register. When enabled, the transmit
                                           LCRC result is XOR'd with this pattern before inserting
                                           it into the packet.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG450
 * 
 *  PCIE_CFG450 = Four hundred fifty-first 32-bits of PCIE type 0 config space
 *  (Port Force Link Register)
 * 
$PCIEEP(0..2)_CFG450   Address=(0x30000000708+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:24> LPEC       R/W     0x7        0x7        Low Power Entrance Count                          
                                                  The Power Management state will wait for this many clock cycles
                                                  for the associated completion of a CfgWr to PCIE_CFG017 register
                                                  Power State (PS) field register to go low-power. This register
                                                  is intended for applications that do not let the PCI Express
                                                  bus handle a completion for configuration request to the
                                                  Power Management Control and Status (PCIE_CFG017) register.
 <23:22> NS         RAZ     NS         NS         Reserved.                                         
 <21:16> LINK_STATE R/W     0x0        0x0        Link State                                        
                                                  The Link state that the PCI Express Bus will be forced to
                                                  when bit 15 (Force Link) is set.
                                                  State encoding:
                                                  o DETECT_QUIET              00h
                                                  o DETECT_ACT                01h
                                                  o POLL_ACTIVE               02h
                                                  o POLL_COMPLIANCE           03h
                                                  o POLL_CONFIG               04h
                                                  o PRE_DETECT_QUIET          05h
                                                  o DETECT_WAIT               06h
                                                  o CFG_LINKWD_START          07h
                                                  o CFG_LINKWD_ACEPT          08h
                                                  o CFG_LANENUM_WAIT          09h
                                                  o CFG_LANENUM_ACEPT         0Ah
                                                  o CFG_COMPLETE              0Bh
                                                  o CFG_IDLE                  0Ch
                                                  o RCVRY_LOCK                0Dh
                                                  o RCVRY_SPEED               0Eh
                                                  o RCVRY_RCVRCFG             0Fh
                                                  o RCVRY_IDLE                10h
                                                  o L0                        11h
                                                  o L0S                       12h
                                                  o L123_SEND_EIDLE           13h
                                                  o L1_IDLE                   14h
                                                  o L2_IDLE                   15h
                                                  o L2_WAKE                   16h
                                                  o DISABLED_ENTRY            17h
                                                  o DISABLED_IDLE             18h
                                                  o DISABLED                  19h
                                                  o LPBK_ENTRY                1Ah
                                                  o LPBK_ACTIVE               1Bh
                                                  o LPBK_EXIT                 1Ch
                                                  o LPBK_EXIT_TIMEOUT         1Dh
                                                  o HOT_RESET_ENTRY           1Eh
                                                  o HOT_RESET                 1Fh
 <15>    FORCE_LINK R/W/H   0x0        0x0        Force Link                                        
                                                  Forces the Link to the state specified by the Link State field.
                                                  The Force Link pulse will trigger Link re-negotiation.
                                                  * As the The Force Link is a pulse, writing a 1 to it does
                                                  trigger the forced link state event, even thought reading it
                                                  always returns a 0.
 <14:12> NS         RAZ     NS         NS         Reserved.                                         
 <11:8>  LINK_CMD   R/W     0x0        0x0        Link Command                                      
                                                  The Link command that the PCI Express Core will be forced to
                                                  transmit when bit 15 (Force Link) is set.
                                                  Command encoding:
                                                  o PEM_SEND_IDLE              1h
                                                  o PEM_SEND_EIDLE             2h
                                                  o PEM_XMT_IN_EIDLE           3h
                                                  o PEM_MOD_COMPL_PATTERN      4h
                                                  o PEM_SEND_RCVR_DETECT_SEQ   5h
                                                  o PEM_SEND_TS1               6h
                                                  o PEM_SEND_TS2               7h
                                                  o PEM_COMPLIANCE_PATTERN     8h
                                                  o PEM_SEND_SDS               9h
                                                  o PEM_SEND_BEACON            ah
                                                  o PEM_SEND_N_FTS             bh
                                                  o PEM_NORM                   ch
                                                  o PEM_SEND_SKP               dh
                                                  o PEM_SEND_EIES              eh
                                                  o PEM_SEND_EIES_SYM          fh
 <7:0>   LINK_NUM   RO/H    0x0        0x0        Link Number                                       
                                                  Not used for Endpoint
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG451
 * 
 *  PCIE_CFG451 = Four hundred fifty-second 32-bits of PCIE type 0 config space
 *  (Ack Frequency Register)
 * 
$PCIEEP(0..2)_CFG451   Address=(0x3000000070C+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31>    NS       RAZ     NS         NS         Reserved.                                         
 <30>    EASPML1  R/W/H   0x0        0x0        Enter ASPM L1 without receive in L0s              
                                                Allow core to enter ASPM L1 even when link partner did
                                                not go to L0s (receive is not in L0s).
                                                When not set, core goes to ASPM L1 only after idle period
                                                during which both receive and transmit are in L0s.
 <29:27> L1EL     R/W     0x3        0x3        L1 Entrance Latency                               
                                                Values correspond to:
                                                o 000: 1 ms
                                                o 001: 2 ms
                                                o 010: 4 ms
                                                o 011: 8 ms
                                                o 100: 16 ms
                                                o 101: 32 ms
                                                o 110 or 111: 64 ms
 <26:24> L0EL     R/W     0x3        0x3        L0s Entrance Latency                              
                                                Values correspond to:
                                                o 000: 1 ms
                                                o 001: 2 ms
                                                o 010: 3 ms
                                                o 011: 4 ms
                                                o 100: 5 ms
                                                o 101: 6 ms
                                                o 110 or 111: 7 ms
 <23:16> N_FTS_CC R/W     0x30       0x30       N_FTS when common clock is used.                  
                                                The number of Fast Training Sequence ordered sets to be
                                                transmitted when transitioning from L0s to L0. The maximum
                                                number of FTS ordered-sets that a component can request is 255.
                                                Note: A value of zero is not supported; a value of
                                                zero can cause the LTSSM to go into the recovery state
                                                when exiting from L0s.
 <15:8>  N_FTS    R/W     0x30       0x30       N_FTS                                             
                                                The number of Fast Training Sequence ordered sets to be
                                                transmitted when transitioning from L0s to L0. The maximum
                                                number of FTS ordered-sets that a component can request is 255.
                                                Note: A value of zero is not supported; a value of
                                                zero can cause the LTSSM to go into the recovery state
                                                when exiting from L0s.
 <7:0>   ACK_FREQ R/W     0x0        0x0        Ack Frequency                                     
                                                The number of pending Ack's specified here (up to 255) before
                                                sending an Ack.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG452
 * 
 *  PCIE_CFG452 = Four hundred fifty-third 32-bits of PCIE type 0 config space
 *  (Port Link Control Register)
 * 
$PCIEEP(0..2)_CFG452   Address=(0x30000000710+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:22> NS        RAZ     NS         NS         Reserved.                                         
 <21:16> LME       R/W     0x7        0x7        Link Mode Enable                                  
                                                 o 000001: x1
                                                 o 000011: x2
                                                 o 000111: x4
                                                 o 001111: x8  (not supported)
                                                 o 011111: x16 (not supported)
                                                 o 111111: x32 (not supported)
                                                 This field indicates the MAXIMUM number of lanes supported
                                                 by the PCIe port. The value can be set less than 0x7
                                                 to limit the number of lanes the PCIe will attempt to use.
                                                 If the value of 0x7 set by the HW is not desired,
                                                 this field can be programmed to a smaller value (i.e. EEPROM)
                                                 See also MLW.
                                                 (Note: The value of this field does NOT indicate the number
                                                 of lanes in use by the PCIe. LME sets the max number of lanes
                                                 in the PCIe core that COULD be used. As per the PCIe specs,
                                                 the PCIe core can negotiate a smaller link width, so all
                                                 of x4, x2, and x1 are supported when LME=0x7,
                                                 for example.)
 <15:12> NS        RAZ     NS         NS         Reserved.                                         
 <11:8>  LINK_RATE RO/H    0x1        0x1        Reserved.                                         
 <7>     FLM       R/W/H   0x0        0x0        Fast Link Mode                                    
                                                 Sets all internal timers to fast mode for simulation purposes.
                                                 If during an eeprom load, the first word loaded is 0xffffffff,
                                                 then the EEPROM load will be terminated and this bit will be set.
 <6>     NS        RAZ     NS         NS         Reserved.                                         
 <5>     DLLLE     R/W     0x1        0x1        DLL Link Enable                                   
                                                 Enables Link initialization. If DLL Link Enable = 0, the PCI
                                                 Express bus does not transmit InitFC DLLPs and does not
                                                 establish a Link.
 <4>     NS        RAZ     NS         NS         Reserved.                                         
 <3>     RA        R/W     0x0        0x0        Reset Assert                                      
                                                 Triggers a recovery and forces the LTSSM to the Hot Reset
                                                 state (downstream port only).
 <2>     LE        R/W     0x0        0x0        Loopback Enable                                   
                                                 Initiate loopback mode as a master. On a 0->1 transition,
                                                 the PCIe core sends TS ordered sets with the loopback bit set
                                                 to cause the link partner to enter into loopback mode as a
                                                 slave. Normal transmission is not possible when LE=1. To exit
                                                 loopback mode, take the link through a reset sequence.
 <1>     SD        R/W     0x0        0x0        Scramble Disable                                  
                                                 Turns off data scrambling.
 <0>     OMR       R/W     0x0        0x0        Other Message Request                             
                                                 When software writes a `1' to this bit, the PCI Express bus
                                                 transmits the Message contained in the Other Message register.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG453
 * 
 *  PCIE_CFG453 = Four hundred fifty-fourth 32-bits of PCIE type 0 config space
 *  (Lane Skew Register)
 * 
$PCIEEP(0..2)_CFG453   Address=(0x30000000714+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31>    DLLD    R/W     0x0        0x0        Disable Lane-to-Lane Deskew                       
                                               Disables the internal Lane-to-Lane deskew logic.
 <30:26> NS      RAZ     NS         NS         Reserved.                                         
 <25>    ACK_NAK R/W     0x0        0x0        Ack/Nak Disable                                   
                                               Prevents the PCI Express bus from sending Ack and Nak DLLPs.
 <24>    FCD     R/W     0x0        0x0        Flow Control Disable                              
                                               Prevents the PCI Express bus from sending FC DLLPs.
 <23:0>  ILST    R/W     0x0        0x0        Insert Lane Skew for Transmit                     
                                               Causes skew between lanes for test purposes. There are three
                                               bits per Lane. The value is in units of one symbol time. For
                                               example, the value 010b for a Lane forces a skew of two symbol
                                               times for that Lane. The maximum skew value for any Lane is 5
                                               symbol times.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG454
 * 
 *  PCIE_CFG454 = Four hundred fifty-fifth 32-bits of PCIE type 0 config space
 *  (Symbol Number Register)
 * 
$PCIEEP(0..2)_CFG454   Address=(0x30000000718+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:24> NS     RAZ     NS         NS         Reserved.                                         
 <23:19> TMANLT R/W     0x0        0x0        Timer Modifier for Ack/Nak Latency Timer          
                                              Increases the timer value for the Ack/Nak latency timer, in
                                              increments of 64 clock cycles.
 <18:14> TMRT   R/W     0x8        0x8        Timer Modifier for Replay Timer                   
                                              Increases the timer value for the replay timer, in increments
                                              of 64 clock cycles.
 <13:8>  NS     RAZ     NS         NS         Reserved.                                         
 <7:0>   MFUNCN R/W     0x0        0x0        Max Number of Functions Supported                 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG455
 * 
 *  PCIE_CFG455 = Four hundred fifty-sixth 32-bits of PCIE type 0 config space
 *  (Symbol Timer Register/Filter Mask Register 1)
 * 
$PCIEEP(0..2)_CFG455   Address=(0x3000000071C+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field           Field   Reset      Typical    Field                                             
 Pos     Name            Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31>    M_CFG0_FILT     R/W     0x0        0x0        Mask filtering of received Configuration Requests (RC mode only)
 <30>    M_IO_FILT       R/W     0x0        0x0        Mask filtering of received I/O Requests (RC mode only)
 <29>    MSG_CTRL        R/W     0x0        0x0        Message Control                                   
                                                       The application must not change this field.
 <28>    M_CPL_ECRC_FILT R/W     0x0        0x0        Mask ECRC error filtering for Completions         
 <27>    M_ECRC_FILT     R/W     0x0        0x0        Mask ECRC error filtering                         
 <26>    M_CPL_LEN_ERR   R/W     0x0        0x0        Mask Length mismatch error for received Completions
 <25>    M_CPL_ATTR_ERR  R/W     0x0        0x0        Mask Attributes mismatch error for received Completions
 <24>    M_CPL_TC_ERR    R/W     0x0        0x0        Mask Traffic Class mismatch error for received Completions
 <23>    M_CPL_FUN_ERR   R/W     0x0        0x0        Mask function mismatch error for received Completions
 <22>    M_CPL_RID_ERR   R/W     0x0        0x0        Mask Requester ID mismatch error for received Completions
 <21>    M_CPL_TAG_ERR   R/W     0x0        0x0        Mask Tag error rules for received Completions     
 <20>    M_LK_FILT       R/W     0x0        0x0        Mask Locked Request filtering                     
 <19>    M_CFG1_FILT     R/W     0x0        0x0        Mask Type 1 Configuration Request filtering       
 <18>    M_BAR_MATCH     R/W     0x0        0x0        Mask BAR match filtering                          
 <17>    M_POIS_FILT     R/W     0x1        0x1        Mask poisoned TLP filtering                       
 <16>    M_FUN           R/W     0x0        0x0        Mask function                                     
 <15>    DFCWT           R/W     0x0        0x0        Disable FC Watchdog Timer                         
 <14:11> NS              RAZ     NS         NS         Reserved.                                         
 <10:0>  SKPIV           R/W     0x280      0x280      SKP Interval Value                                
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG456
 * 
 *  PCIE_CFG456 = Four hundred fifty-seventh 32-bits of PCIE type 0 config space
 *  (Filter Mask Register 2)
 * 
$PCIEEP(0..2)_CFG456   Address=(0x30000000720+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field          Field   Reset      Typical    Field                                             
 Pos     Name           Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:4>  NS             RAZ     NS         NS         Reserved.                                         
 <3>     M_HANDLE_FLUSH R/W     0x0        0x0        Mask Core Filter to handle flush request          
 <2>     M_DABORT_4UCPL R/W     0x0        0x0        Mask DLLP abort for unexpected CPL                
 <1>     M_VEND1_DRP    R/W     0x0        0x0        Mask Vendor MSG Type 1 dropped silently           
 <0>     M_VEND0_DRP    R/W     0x0        0x0        Mask Vendor MSG Type 0 dropped with UR error reporting.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG458
 * 
 *  PCIE_CFG458 = Four hundred fifty-ninth 32-bits of PCIE type 0 config space
 *  (Debug Register 0)
 * 
$PCIEEP(0..2)_CFG458   Address=(0x30000000728+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field        Field   Reset      Typical    Field                                             
 Pos     Name         Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  DBG_INFO_L32 RO/H    0x0        0x0        Debug Info Lower 32 Bits                          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG459
 * 
 *  PCIE_CFG459 = Four hundred sixtieth 32-bits of PCIE type 0 config space
 *  (Debug Register 1)
 * 
$PCIEEP(0..2)_CFG459   Address=(0x3000000072C+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field        Field   Reset      Typical    Field                                             
 Pos     Name         Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  DBG_INFO_U32 RO/H    0x0        0x0        Debug Info Upper 32 Bits                          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG460
 * 
 *  PCIE_CFG460 = Four hundred sixty-first 32-bits of PCIE type 0 config space
 *  (Transmit Posted FC Credit Status)
 * 
$PCIEEP(0..2)_CFG460   Address=(0x30000000730+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:20> NS     RAZ     NS         NS         Reserved.                                         
 <19:12> TPHFCC RO/H    0x0        0x0        Transmit Posted Header FC Credits                 
                                              The Posted Header credits advertised by the receiver at the
                                              other end of the Link, updated with each UpdateFC DLLP.
 <11:0>  TPDFCC RO/H    0x0        0x0        Transmit Posted Data FC Credits                   
                                              The Posted Data credits advertised by the receiver at the other
                                              end of the Link, updated with each UpdateFC DLLP.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG461
 * 
 *  PCIE_CFG461 = Four hundred sixty-second 32-bits of PCIE type 0 config space
 *  (Transmit Non-Posted FC Credit Status)
 * 
$PCIEEP(0..2)_CFG461   Address=(0x30000000734+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:20> NS     RAZ     NS         NS         Reserved.                                         
 <19:12> TCHFCC RO/H    0x0        0x0        Transmit Non-Posted Header FC Credits             
                                              The Non-Posted Header credits advertised by the receiver at the
                                              other end of the Link, updated with each UpdateFC DLLP.
 <11:0>  TCDFCC RO/H    0x0        0x0        Transmit Non-Posted Data FC Credits               
                                              The Non-Posted Data credits advertised by the receiver at the
                                              other end of the Link, updated with each UpdateFC DLLP.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG462
 * 
 *  PCIE_CFG462 = Four hundred sixty-third 32-bits of PCIE type 0 config space
 *  (Transmit Completion FC Credit Status )
 * 
$PCIEEP(0..2)_CFG462   Address=(0x30000000738+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:20> NS     RAZ     NS         NS         Reserved.                                         
 <19:12> TCHFCC RO/H    0x0        0x0        Transmit Completion Header FC Credits             
                                              The Completion Header credits advertised by the receiver at the
                                              other end of the Link, updated with each UpdateFC DLLP.
 <11:0>  TCDFCC RO/H    0x0        0x0        Transmit Completion Data FC Credits               
                                              The Completion Data credits advertised by the receiver at the
                                              other end of the Link, updated with each UpdateFC DLLP.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG463
 * 
 *  PCIE_CFG463 = Four hundred sixty-fourth 32-bits of PCIE type 0 config space
 *  (Queue Status)
 * 
$PCIEEP(0..2)_CFG463   Address=(0x3000000073C+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:3>  NS        RAZ     NS         NS         Reserved.                                         
 <2>     RQNE      RO/H    0x0        0x0        Received Queue Not Empty                          
                                                 Indicates there is data in one or more of the receive buffers.
 <1>     TRBNE     RO/H    0x0        0x0        Transmit Retry Buffer Not Empty                   
                                                 Indicates that there is data in the transmit retry buffer.
 <0>     RTLPFCCNR RO/H    0x0        0x0        Received TLP FC Credits Not Returned              
                                                 Indicates that the PCI Express bus has sent a TLP but has not
                                                 yet received an UpdateFC DLLP indicating that the credits for
                                                 that TLP have been restored by the receiver at the other end of
                                                 the Link.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG464
 * 
 *  PCIE_CFG464 = Four hundred sixty-fifth 32-bits of PCIE type 0 config space
 *  (VC Transmit Arbitration Register 1)
 * 
$PCIEEP(0..2)_CFG464   Address=(0x30000000740+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:24> WRR_VC3 RO      0x0        0x0        WRR Weight for VC3                                
 <23:16> WRR_VC2 RO      0x0        0x0        WRR Weight for VC2                                
 <15:8>  WRR_VC1 RO      0x0        0x0        WRR Weight for VC1                                
 <7:0>   WRR_VC0 RO      0xf        0xf        WRR Weight for VC0                                
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG465
 * 
 *  PCIE_CFG465 = Four hundred sixty-sixth 32-bits of PCIE type 0 config space
 *  (VC Transmit Arbitration Register 2)
 * 
$PCIEEP(0..2)_CFG465   Address=(0x30000000744+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:24> WRR_VC7 RO      0x0        0x0        WRR Weight for VC7                                
 <23:16> WRR_VC6 RO      0x0        0x0        WRR Weight for VC6                                
 <15:8>  WRR_VC5 RO      0x0        0x0        WRR Weight for VC5                                
 <7:0>   WRR_VC4 RO      0x0        0x0        WRR Weight for VC4                                
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG466
 * 
 *  PCIE_CFG466 = Four hundred sixty-seventh 32-bits of PCIE type 0 config space
 *  (VC0 Posted Receive Queue Control)
 * 
$PCIEEP(0..2)_CFG466   Address=(0x30000000748+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field          Field   Reset      Typical    Field                                             
 Pos     Name           Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31>    RX_QUEUE_ORDER RO/WRSL 0x0        0x0        "VC Ordering for Receive Queues                   
                                                      Determines the VC ordering rule for the receive queues, used
                                                      only in the segmented-buffer configuration,
                                                      writable through PEM#_CFG_WR:
                                                      o 1: Strict ordering, higher numbered VCs have higher priority
                                                      o 0: Round robin
                                                      However, the application must not change this field."
 <30>    TYPE_ORDERING  RO/WRSL 0x1        0x1        "TLP Type Ordering for VC0                        
                                                      Determines the TLP type ordering rule for VC0 receive queues,
                                                      used only in the segmented-buffer configuration, writable
                                                      through PEM#_CFG_WR:
                                                      o 1: Ordering of received TLPs follows the rules in
                                                      PCI Express Base Specification
                                                      o 0: Strict ordering for received TLPs: Posted, then
                                                      Completion, then Non-Posted
                                                      However, the application must not change this field."
 <29:24> NS             RAZ     NS         NS         Reserved.                                         
 <23:21> QUEUE_MODE     RO/WRSL 0x2        0x2        "VC0 Posted TLP Queue Mode                        
                                                      The operating mode of the Posted receive queue for VC0, used
                                                      only in the segmented-buffer configuration, writable through
                                                      PEM#_CFG_WR.
                                                      However, the application must not change this field.
                                                      Only one bit can be set at a time:
                                                      o Bit 23: Bypass
                                                      o Bit 22: Cut-through
                                                      o Bit 21: Store-and-forward"
 <20>    NS             RAZ     NS         NS         Reserved.                                         
 <19:12> HEADER_CREDITS RO/WRSL 0x20       0x20       "VC0 Posted Header Credits                        
                                                      The number of initial Posted header credits for VC0, used for
                                                      all receive queue buffer configurations.
                                                      This field is writable through PEM#_CFG_WR.
                                                      However, the application must not change this field."
 <11:0>  DATA_CREDITS   RO/WRSL 0x40       0x40       "VC0 Posted Data Credits                          
                                                      The number of initial Posted data credits for VC0, used for all
                                                      receive queue buffer configurations.
                                                      This field is writable through PEM#_CFG_WR.
                                                      However, the application must not change this field."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG467
 * 
 *  PCIE_CFG467 = Four hundred sixty-eighth 32-bits of PCIE type 0 config space
 *  (VC0 Non-Posted Receive Queue Control)
 * 
$PCIEEP(0..2)_CFG467   Address=(0x3000000074C+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field          Field   Reset      Typical    Field                                             
 Pos     Name           Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:24> NS             RAZ     NS         NS         Reserved.                                         
 <23:21> QUEUE_MODE     RO/WRSL 0x2        0x2        "VC0 Non-Posted TLP Queue Mode                    
                                                      The operating mode of the Non-Posted receive queue for VC0,
                                                      used only in the segmented-buffer configuration, writable
                                                      through PEM#_CFG_WR.
                                                      Only one bit can be set at a time:
                                                      o Bit 23: Bypass
                                                      o Bit 22: Cut-through
                                                      o Bit 21: Store-and-forward
                                                      However, the application must not change this field."
 <20>    NS             RAZ     NS         NS         Reserved.                                         
 <19:12> HEADER_CREDITS RO/WRSL 0x1f       0x1f       "VC0 Non-Posted Header Credits                    
                                                      The number of initial Non-Posted header credits for VC0, used
                                                      for all receive queue buffer configurations.
                                                      This field is writable through PEM#_CFG_WR.
                                                      However, the application must not change this field."
 <11:0>  DATA_CREDITS   RO/WRSL 0xd        0xd        "VC0 Non-Posted Data Credits                      
                                                      The number of initial Non-Posted data credits for VC0, used for
                                                      all receive queue buffer configurations.
                                                      This field is writable through PEM#_CFG_WR.
                                                      However, the application must not change this field."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG468
 * 
 *  PCIE_CFG468 = Four hundred sixty-ninth 32-bits of PCIE type 0 config space
 *  (VC0 Completion Receive Queue Control)
 * 
$PCIEEP(0..2)_CFG468   Address=(0x30000000750+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field          Field   Reset      Typical    Field                                             
 Pos     Name           Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:24> NS             RAZ     NS         NS         Reserved.                                         
 <23:21> QUEUE_MODE     RO/WRSL 0x2        0x2        "VC0 Completion TLP Queue Mode                    
                                                      The operating mode of the Completion receive queue for VC0,
                                                      used only in the segmented-buffer configuration, writable
                                                      through PEM#_CFG_WR.
                                                      Only one bit can be set at a time:
                                                      o Bit 23: Bypass
                                                      o Bit 22: Cut-through
                                                      o Bit 21: Store-and-forward
                                                      However, the application must not change this field."
 <20>    NS             RAZ     NS         NS         Reserved.                                         
 <19:12> HEADER_CREDITS RO/WRSL 0x0        0x0        "VC0 Completion Header Credits                    
                                                      The number of initial Completion header credits for VC0, used
                                                      for all receive queue buffer configurations.
                                                      This field is writable through PEM#_CFG_WR.
                                                      However, the application must not change this field."
 <11:0>  DATA_CREDITS   RO/WRSL 0x0        0x0        "VC0 Completion Data Credits                      
                                                      The number of initial Completion data credits for VC0, used for
                                                      all receive queue buffer configurations.
                                                      This field is writable through PEM#_CFG_WR.
                                                      However, the application must not change this field."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG490
 * 
 *  PCIE_CFG490 = Four hundred ninety-first 32-bits of PCIE type 0 config space
 *  (VC0 Posted Buffer Depth)
 * 
$PCIEEP(0..2)_CFG490   Address=(0x300000007A8+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field        Field   Reset      Typical    Field                                             
 Pos     Name         Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:26> NS           RAZ     NS         NS         Reserved.                                         
 <25:16> HEADER_DEPTH RO/WRSL 0x26       0x26       "VC0 Posted Header Queue Depth                    
                                                    Sets the number of entries in the Posted header queue for VC0
                                                    when using the segmented-buffer configuration, writable through
                                                    PEM#_CFG_WR.
                                                    However, the application must not change this field."
 <15:14> NS           RAZ     NS         NS         Reserved.                                         
 <13:0>  DATA_DEPTH   RO/WRSL 0xc8       0xc8       "VC0 Posted Data Queue Depth                      
                                                    Sets the number of entries in the Posted data queue for VC0
                                                    when using the segmented-buffer configuration, writable
                                                    through PEM#_CFG_WR.
                                                    However, the application must not change this field."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG491
 * 
 *  PCIE_CFG491 = Four hundred ninety-second 32-bits of PCIE type 0 config space
 *  (VC0 Non-Posted Buffer Depth)
 * 
$PCIEEP(0..2)_CFG491   Address=(0x300000007AC+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field        Field   Reset      Typical    Field                                             
 Pos     Name         Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:26> NS           RAZ     NS         NS         Reserved.                                         
 <25:16> HEADER_DEPTH RO/WRSL 0x25       0x25       "VC0 Non-Posted Header Queue Depth                
                                                    Sets the number of entries in the Non-Posted header queue for
                                                    VC0 when using the segmented-buffer configuration, writable
                                                    through PEM#_CFG_WR.
                                                    However, the application must not change this field."
 <15:14> NS           RAZ     NS         NS         Reserved.                                         
 <13:0>  DATA_DEPTH   RO/WRSL 0x61       0x61       "VC0 Non-Posted Data Queue Depth                  
                                                    Sets the number of entries in the Non-Posted data queue for VC0
                                                    when using the segmented-buffer configuration, writable
                                                    through PEM#_CFG_WR.
                                                    However, the application must not change this field."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG492
 * 
 *  PCIE_CFG492 = Four hundred ninety-third 32-bits of PCIE type 0 config space
 *  (VC0 Completion Buffer Depth)
 * 
$PCIEEP(0..2)_CFG492   Address=(0x300000007B0+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field        Field   Reset      Typical    Field                                             
 Pos     Name         Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:26> NS           RAZ     NS         NS         Reserved.                                         
 <25:16> HEADER_DEPTH RO/WRSL 0x66       0x66       "VC0 Completion Header Queue Depth                
                                                    Sets the number of entries in the Completion header queue for
                                                    VC0 when using the segmented-buffer configuration, writable
                                                    through PEM#_CFG_WR.
                                                    However, the application must not change this field."
 <15:14> NS           RAZ     NS         NS         Reserved.                                         
 <13:0>  DATA_DEPTH   RO/WRSL 0x18e      0x18e      "VC0 Completion Data Queue Depth                  
                                                    Sets the number of entries in the Completion data queue for VC0
                                                    when using the segmented-buffer configuration, writable
                                                    through PEM#_CFG_WR.
                                                    However, the application must not change this field."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG515
 * 
 *  PCIE_CFG515 = Five hundred sixteenth 32-bits of PCIE type 0 config space
 *  (Port Logic Register (Gen2))
 * 
$PCIEEP(0..2)_CFG515   Address=(0x3000000080C+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:21> NS    RAZ     NS         NS         Reserved.                                         
 <20>    S_D_E R/W     0x0        0x0        SEL_DE_EMPHASIS                                   
                                             Used to set the de-emphasis level for upstream ports.
 <19>    CTCRB R/W     0x0        0x0        Config Tx Compliance Receive Bit                  
                                             When set to 1, signals LTSSM to transmit TS ordered sets
                                             with the compliance receive bit assert (equal to 1).
 <18>    CPYTS R/W     0x0        0x0        Config PHY Tx Swing                               
                                             Indicates the voltage level the PHY should drive. When set to
                                             1, indicates Full Swing. When set to 0, indicates Low Swing
 <17>    DSC   R/W/H   0x0        0x0        Directed Speed Change                             
                                             o a write of '1' will initiate a speed change
                                             o always reads a zero
 <16:8>  LE    R/W     0x4        0x4        Lane Enable                                       
                                             Indicates the number of lanes to check for exit from electrical
                                             idle in Polling.Active and Polling.Compliance. 1 = x1, 2 = x2,
                                             etc. Used to limit the maximum link width to ignore broken
                                             lanes that detect a receiver, but will not exit electrical
                                             idle and
                                             would otherwise prevent a valid link from being configured.
 <7:0>   N_FTS R/W     0x30       0x30       N_FTS                                             
                                             Sets the Number of Fast Training Sequences (N_FTS) that
                                             the core advertises as its N_FTS during GEN2 Link training.
                                             This value is used to inform the Link partner about the PHYs
                                             ability to recover synchronization after a low power state.
                                             Note: Do not set N_FTS to zero; doing so can cause the
                                             LTSSM to go into the recovery state when exiting from
                                             L0s.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG516
 * 
 *  PCIE_CFG516 = Five hundred seventeenth 32-bits of PCIE type 0 config space
 *  (PHY Status Register)
 * 
$PCIEEP(0..2)_CFG516   Address=(0x30000000810+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  PHY_STAT RO/H    0x0        0x0        PHY Status                                        
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG517
 * 
 *  PCIE_CFG517 = Five hundred eighteenth 32-bits of PCIE type 0 config space
 *  (PHY Control Register)
 * 
$PCIEEP(0..2)_CFG517   Address=(0x30000000814+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  PHY_CTRL R/W     0x0        0x0        PHY Control                                       
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG004_MASK
 * 
 *  "PCIE_CFG004_MASK (BAR Mask 0 - Low)
 *  The BAR 0 Mask register is invisible to host software and not readable from the application.
 *  The BAR 0 Mask register is only writable through PEM#_CFG_WR."
 * 
$PCIEEP(0..2)_CFG004_MASK   Address=(0x30080000010+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:1>  LMASK WORSL/H 0x1fff     0x1fff     Bar Mask Low                                      
 <0>     ENB   WORSL/H 0x1        0x1        Bar Enable                                        
                                             o 0: BAR 0 is disabled
                                             o 1: BAR 0 is enabled
                                             Bit 0 is interpreted as BAR Enable when writing to the BAR Mask
                                             register rather than as a mask bit because bit 0 of a BAR is
                                             always masked from writing by host software. Bit 0 must be
                                             written prior to writing the other mask bits.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG005_MASK
 * 
 *  "PCIE_CFG005_MASK = (BAR Mask 0 - High)
 *  The BAR 0 Mask register is invisible to host software and not readable from the application.
 *  The BAR 0 Mask register is only writable through PEM#_CFG_WR."
 * 
$PCIEEP(0..2)_CFG005_MASK   Address=(0x30080000014+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  UMASK WORSL/H 0x0        0x0        Bar Mask High                                     
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG006_MASK
 * 
 *  "PCIE_CFG006_MASK (BAR Mask 1 - Low)
 *  The BAR 1 Mask register is invisible to host software and not readable from the application.
 *  The BAR 1 Mask register is only writable through PEM#_CFG_WR."
 * 
$PCIEEP(0..2)_CFG006_MASK   Address=(0x30080000018+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:1>  LMASK WORSL/H 0x1ffffff  0x1ffffff  Bar Mask Low                                      
 <0>     ENB   WORSL/H 0x1        0x1        Bar Enable                                        
                                             o 0: BAR 1 is disabled
                                             o 1: BAR 1 is enabled
                                             Bit 0 is interpreted as BAR Enable when writing to the BAR Mask
                                             register rather than as a mask bit because bit 0 of a BAR is
                                             always masked from writing by host software. Bit 0 must be
                                             written prior to writing the other mask bits.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG007_MASK
 * 
 *  "PCIE_CFG007_MASK (BAR Mask 1 - High)
 *  The BAR 1 Mask register is invisible to host software and not readable from the application.
 *  The BAR 1 Mask register is only writable through PEM#_CFG_WR."
 * 
$PCIEEP(0..2)_CFG007_MASK   Address=(0x3008000001C+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  UMASK WORSL/H 0x0        0x0        Bar Mask High                                     
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG008_MASK
 * 
 *  "PCIE_CFG008_MASK (BAR Mask 2 - Low)
 *  The BAR 2 Mask register is invisible to host software and not readable from the application.
 *  The BAR 2 Mask register is only writable through PEM#_CFG_WR."
 * 
$PCIEEP(0..2)_CFG008_MASK   Address=(0x30080000020+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:1>  LMASK WORSL/H 0x7fffffff 0x7fffffff Bar Mask Low                                      
 <0>     ENB   WORSL/H 0x1        0x1        Bar Enable                                        
                                             o 0: BAR 2 is disabled
                                             o 1: BAR 2 is enabled
                                             Bit 0 is interpreted as BAR Enable when writing to the BAR Mask
                                             register rather than as a mask bit because bit 0 of a BAR is
                                             always masked from writing by host software. Bit 0 must be
                                             written prior to writing the other mask bits.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG009_MASK
 * 
 *  "PCIE_CFG009_MASK (BAR Mask 2 - High)
 *  The BAR 2 Mask register is invisible to host software and not readable from the application.
 *  The BAR 2 Mask register is only writable through PEM#_CFG_WR."
 * 
$PCIEEP(0..2)_CFG009_MASK   Address=(0x30080000024+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  UMASK WORSL/H 0x1ff      0x1ff      Bar Mask High                                     
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIEEP_CFG012_MASK
 * 
 *  "PCIE_CFG012_MASK (Exapansion ROM BAR Mask)
 *  The ROM Mask register is invisible to host software and not readable from the application.
 *  The ROM Mask register is only writable through PEM#_CFG_WR."
 * 
$PCIEEP(0..2)_CFG012_MASK   Address=(0x30080000030+a*0x100000000)   Bus=(PCICONFIGEP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:1>  MASK WORSL/H 0x7fff     0x7fff     Bar Mask Low                                      
 <0>     ENB  WORSL/H 0x1        0x1        Bar Enable                                        
                                            o 0: BAR ROM is disabled
                                            o 1: BAR ROM is enabled
                                            Bit 0 is interpreted as BAR Enable when writing to the BAR Mask
                                            register rather than as a mask bit because bit 0 of a BAR is
                                            always masked from writing by host software. Bit 0 must be
                                            written prior to writing the other mask bits.
-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the pcierc.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

 * 
 * PCIERC_CFG000
 * 
 *  PCIE_CFG000 = First 32-bits of PCIE type 1 config space (Device ID and Vendor ID Register)
 * 
$PCIERC(0..2)_CFG000   Address=(0x20000000000+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> DEVID  R/W     0x96       0x96       "Device ID, writable through PEM#_CFG_WR          
                                              However, the application must not change this field."
 <15:0>  VENDID R/W     0x177d     0x177d     "Vendor ID, writable through PEM#_CFG_WR          
                                              However, the application must not change this field."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG001
 * 
 *  PCIE_CFG001 = Second 32-bits of PCIE type 1 config space (Command/Status Register)
 *  Attribute: -exempt_w1c_w=True.
 * 
$PCIERC(0..2)_CFG001   Address=(0x20000000004+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31>    DPE     R/W1C/H 0x0        0x0        Detected Parity Error                             
 <30>    SSE     R/W1C/H 0x0        0x0        Signaled System Error                             
 <29>    RMA     R/W1C/H 0x0        0x0        Received Master Abort                             
 <28>    RTA     R/W1C/H 0x0        0x0        Received Target Abort                             
 <27>    STA     R/W1C/H 0x0        0x0        Signaled Target Abort                             
 <26:25> DEVT    RO      0x0        0x0        DEVSEL Timing                                     
                                               Not applicable for PCI Express. Hardwired to 0.
 <24>    MDPE    R/W1C/H 0x0        0x0        Master Data Parity Error                          
 <23>    FBB     RO      0x0        0x0        Fast Back-to-Back Capable                         
                                               Not applicable for PCI Express. Hardwired to 0.
 <22>    NS      RO/H    NS         NS         Reserved.                                         
 <21>    M66     RO      0x0        0x0        66 MHz Capable                                    
                                               Not applicable for PCI Express. Hardwired to 0.
 <20>    CL      RO      0x1        0x1        Capabilities List                                 
                                               Indicates presence of an extended capability item.
                                               Hardwired to 1.
 <19>    I_STAT  RO      0x0        0x0        INTx Status                                       
 <18:11> NS      RAZ     NS         NS         Reserved.                                         
 <10>    I_DIS   R/W     0x0        0x0        INTx Assertion Disable                            
 <9>     FBBE    RO      0x0        0x0        Fast Back-to-Back Enable                          
                                               Not applicable for PCI Express. Must be hardwired to 0.
 <8>     SEE     R/W     0x0        0x0        SERR# Enable                                      
 <7>     IDS_WCC RO      0x0        0x0        IDSEL Stepping/Wait Cycle Control                 
                                               Not applicable for PCI Express. Must be hardwired to 0
 <6>     PER     R/W     0x0        0x0        Parity Error Response                             
 <5>     VPS     RO      0x0        0x0        VGA Palette Snoop                                 
                                               Not applicable for PCI Express. Must be hardwired to 0.
 <4>     MWICE   RO      0x0        0x0        Memory Write and Invalidate                       
                                               Not applicable for PCI Express. Must be hardwired to 0.
 <3>     SCSE    RO      0x0        0x0        Special Cycle Enable                              
                                               Not applicable for PCI Express. Must be hardwired to 0.
 <2>     ME      R/W     0x0        0x0        Bus Master Enable                                 
 <1>     MSAE    R/W     0x0        0x0        Memory Space Enable                               
 <0>     ISAE    R/W     0x0        0x0        I/O Space Enable                                  
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG002
 * 
 *  PCIE_CFG002 = Third 32-bits of PCIE type 1 config space (Revision ID/Class Code Register)
 * 
$PCIERC(0..2)_CFG002   Address=(0x20000000008+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:24> BCC R/W     0xb        0xb        "Base Class Code, writable through PEM#_CFG_WR    
                                           However, the application must not change this field."
 <23:16> SC  R/W     0x30       0x30       "Subclass Code, writable through PEM#_CFG_WR      
                                           However, the application must not change this field."
 <15:8>  PI  R/W     0x0        0x0        "Programming Interface, writable through PEM#_CFG_WR
                                           However, the application must not change this field."
 <7:0>   RID R/W     0x8        0x8        "Revision ID, writable through PEM#_CFG_WR        
                                           However, the application must not change this field."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG003
 * 
 *  PCIE_CFG003 = Fourth 32-bits of PCIE type 1 config space (Cache Line Size/Master Latency
 *  Timer/Header Type Register/BIST Register)
 * 
$PCIERC(0..2)_CFG003   Address=(0x2000000000C+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:24> BIST RO      0x0        0x0        The BIST register functions are not supported.    
                                            All 8 bits of the BIST register are hardwired to 0.
 <23>    MFD  R/W     0x0        0x0        "Multi Function Device                            
                                            The Multi Function Device bit is writable through PEM#_CFG_WR.
                                            However, this is a single function device. Therefore, the
                                            application must not write a 1 to this bit."
 <22:16> CHF  RO      0x1        0x1        Configuration Header Format                       
                                            Hardwired to 1.
 <15:8>  LT   RO      0x0        0x0        Master Latency Timer                              
                                            Not applicable for PCI Express, hardwired to 0.
 <7:0>   CLS  R/W     0x0        0x0        Cache Line Size                                   
                                            The Cache Line Size register is RW for legacy compatibility
                                            purposes and is not applicable to PCI Express device
                                            functionality.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG004
 * 
 *  PCIE_CFG004 = Fifth 32-bits of PCIE type 1 config space (Base Address Register 0 - Low)
 * 
$PCIERC(0..2)_CFG004   Address=(0x20000000010+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  NS    RO/H    NS         NS         Unused                                            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG005
 * 
 *  PCIE_CFG005 = Sixth 32-bits of PCIE type 1 config space (Base Address Register 0 - High)
 * 
$PCIERC(0..2)_CFG005   Address=(0x20000000014+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  NS    RO/H    NS         NS         Unused                                            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG006
 * 
 *  PCIE_CFG006 = Seventh 32-bits of PCIE type 1 config space (Bus Number Registers)
 * 
$PCIERC(0..2)_CFG006   Address=(0x20000000018+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:24> SLT     RO      0x0        0x0        Secondary Latency Timer                           
                                               Not applicable to PCI Express, hardwired to 0x00.
 <23:16> SUBBNUM R/W     0x0        0x0        Subordinate Bus Number                            
 <15:8>  SBNUM   R/W     0x0        0x0        Secondary Bus Number                              
 <7:0>   PBNUM   R/W     0x0        0x0        Primary Bus Number                                
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG007
 * 
 *  PCIE_CFG007 = Eighth 32-bits of PCIE type 1 config space (IO Base and IO Limit/Secondary
 *  Status Register)
 *  Attribute: -exempt_w1c_w=True.
 * 
$PCIERC(0..2)_CFG007   Address=(0x2000000001C+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31>    DPE      R/W1C/H 0x0        0x0        Detected Parity Error                             
 <30>    SSE      R/W1C/H 0x0        0x0        Signaled System Error                             
 <29>    RMA      R/W1C/H 0x0        0x0        Received Master Abort                             
 <28>    RTA      R/W1C/H 0x0        0x0        Received Target Abort                             
 <27>    STA      R/W1C/H 0x0        0x0        Signaled Target Abort                             
 <26:25> DEVT     RO      0x0        0x0        DEVSEL Timing                                     
                                                Not applicable for PCI Express. Hardwired to 0.
 <24>    MDPE     R/W1C/H 0x0        0x0        Master Data Parity Error                          
 <23>    FBB      RO      0x0        0x0        Fast Back-to-Back Capable                         
                                                Not applicable for PCI Express. Hardwired to 0.
 <22>    NS       RO/H    NS         NS         Reserved.                                         
 <21>    M66      RO      0x0        0x0        66 MHz Capable                                    
                                                Not applicable for PCI Express. Hardwired to 0.
 <20:16> NS       RAZ     NS         NS         Reserved.                                         
 <15:12> LIO_LIMI R/W     0x0        0x0        I/O Space Limit                                   
 <11:9>  NS       RAZ     0x0        0x0        Reserved.                                         
 <8>     IO32B    RO      0x1        0x1        32-Bit I/O Space                                  
 <7:4>   LIO_BASE R/W     0x0        0x0        I/O Space Base                                    
 <3:1>   NS       RAZ     0x0        0x0        Reserved.                                         
 <0>     IO32A    R/W     0x1        0x1        "32-Bit I/O Space                                 
                                                o 0 = 16-bit I/O addressing
                                                o 1 = 32-bit I/O addressing
                                                This bit is writable through PEM#_CFG_WR.
                                                When the application
                                                writes to this bit through PEM#_CFG_WR,
                                                the same value is written
                                                to bit 8 of this register."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG008
 * 
 *  PCIE_CFG008 = Ninth 32-bits of PCIE type 1 config space (Memory Base and Memory Limit Register)
 * 
$PCIERC(0..2)_CFG008   Address=(0x20000000020+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:20> ML_ADDR R/W     0x0        0x0        Memory Limit Address                              
 <19:16> NS      RO/H    NS         NS         Reserved.                                         
 <15:4>  MB_ADDR R/W     0x0        0x0        Memory Base Address                               
 <3:0>   NS      RO/H    NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG009
 * 
 *  PCIE_CFG009 = Tenth 32-bits of PCIE type 1 config space (Prefetchable Memory Base and Limit
 *  Register)
 * 
$PCIERC(0..2)_CFG009   Address=(0x20000000024+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:20> LMEM_LIMIT R/W     0x0        0x0        Upper 12 bits of 32-bit Prefetchable Memory End Address
 <19:17> NS         RO/H    NS         NS         Reserved.                                         
 <16>    MEM64B     RO      0x1        0x1        64-Bit Memory Addressing                          
                                                  o 0 = 32-bit memory addressing
                                                  o 1 = 64-bit memory addressing
 <15:4>  LMEM_BASE  R/W     0x0        0x0        Upper 12 bits of 32-bit Prefetchable Memory Start Address
 <3:1>   NS         RO/H    NS         NS         Reserved.                                         
 <0>     MEM64A     R/W     0x1        0x1        "64-Bit Memory Addressing                         
                                                  o 0 = 32-bit memory addressing
                                                  o 1 = 64-bit memory addressing
                                                  This bit is writable through PEM#_CFG_WR.
                                                  When the application
                                                  writes to this bit through PEM#_CFG_WR,
                                                  the same value is written
                                                  to bit 16 of this register."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG010
 * 
 *  PCIE_CFG010 = Eleventh 32-bits of PCIE type 1 config space (Prefetchable Base Upper 32 Bits
 *  Register)
 * 
$PCIERC(0..2)_CFG010   Address=(0x20000000028+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  UMEM_BASE R/W     0x0        0x0        Upper 32 Bits of Base Address of Prefetchable Memory Space
                                                 Used only when 64-bit prefetchable memory addressing is
                                                 enabled.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG011
 * 
 *  PCIE_CFG011 = Twelfth 32-bits of PCIE type 1 config space (Prefetchable Limit Upper 32 Bits
 *  Register)
 * 
$PCIERC(0..2)_CFG011   Address=(0x2000000002C+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  UMEM_LIMIT R/W     0x0        0x0        Upper 32 Bits of Limit Address of Prefetchable Memory Space
                                                  Used only when 64-bit prefetchable memory addressing is
                                                  enabled.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG012
 * 
 *  PCIE_CFG012 = Thirteenth 32-bits of PCIE type 1 config space (IO Base and Limit Upper 16 Bits
 *  Register)
 * 
$PCIERC(0..2)_CFG012   Address=(0x20000000030+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> UIO_LIMIT R/W     0x0        0x0        Upper 16 Bits of I/O Limit (if 32-bit I/O decoding is supported
                                                 for devices on the secondary side)
 <15:0>  UIO_BASE  R/W     0x0        0x0        Upper 16 Bits of I/O Base (if 32-bit I/O decoding is supported
                                                 for devices on the secondary side)
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG013
 * 
 *  PCIE_CFG013 = Fourteenth 32-bits of PCIE type 1 config space (Capability Pointer Register)
 * 
$PCIERC(0..2)_CFG013   Address=(0x20000000034+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:0>   CP    R/W     0x40       0x40       "First Capability Pointer.                        
                                             Points to Power Management Capability structure by
                                             default, writable through PEM#_CFG_WR
                                             However, the application must not change this field."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG014
 * 
 *  PCIE_CFG014 = Fifteenth 32-bits of PCIE type 1 config space (Expansion ROM Base Address Register)
 * 
$PCIERC(0..2)_CFG014   Address=(0x20000000038+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  NS    RAZ     NS         NS         Unused                                            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG015
 * 
 *  PCIE_CFG015 = Sixteenth 32-bits of PCIE type 1 config space (Interrupt Line Register/Interrupt
 *  Pin/Bridge Control Register)
 * 
$PCIERC(0..2)_CFG015   Address=(0x2000000003C+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:28> NS     RO/H    NS         NS         Reserved.                                         
 <27>    DTSEES RO      0x0        0x0        Discard Timer SERR Enable Status                  
                                              Not applicable to PCI Express, hardwired to 0.
 <26>    DTS    RO      0x0        0x0        Discard Timer Status                              
                                              Not applicable to PCI Express, hardwired to 0.
 <25>    SDT    RO      0x0        0x0        Secondary Discard Timer                           
                                              Not applicable to PCI Express, hardwired to 0.
 <24>    PDT    RO      0x0        0x0        Primary Discard Timer                             
                                              Not applicable to PCI Express, hardwired to 0.
 <23>    FBBE   RO      0x0        0x0        Fast Back-to-Back Transactions Enable             
                                              Not applicable to PCI Express, hardwired to 0.
 <22>    SBRST  R/W     0x0        0x0        Secondary Bus Reset                               
                                              Hot reset. Causes TS1s with the hot reset bit to be sent to
                                              the link partner. When set, SW should wait 2ms before
                                              clearing. The link partner normally responds by sending TS1s
                                              with the hot reset bit set, which will cause a link
                                              down event - refer to "PCIe Link-Down Reset in RC Mode"
                                              section.
 <21>    MAM    RO      0x0        0x0        Master Abort Mode                                 
                                              Not applicable to PCI Express, hardwired to 0.
 <20>    VGA16D R/W     0x0        0x0        VGA 16-Bit Decode                                 
 <19>    VGAE   R/W     0x0        0x0        VGA Enable                                        
 <18>    ISAE   R/W     0x0        0x0        ISA Enable                                        
 <17>    SEE    R/W     0x0        0x0        SERR Enable                                       
 <16>    PERE   R/W     0x0        0x0        Parity Error Response Enable                      
 <15:8>  INTA   R/W     0x1        0x1        "Interrupt Pin                                    
                                              Identifies the legacy interrupt Message that the device
                                              (or device function) uses.
                                              The Interrupt Pin register is writable through PEM#_CFG_WR.
                                              In a single-function configuration, only INTA is used.
                                              Therefore, the application must not change this field."
 <7:0>   IL     R/W     0xff       0xff       Interrupt Line                                    
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG016
 * 
 *  PCIE_CFG016 = Seventeenth 32-bits of PCIE type 1 config space
 *  (Power Management Capability ID/
 *  Power Management Next Item Pointer/
 *  Power Management Capabilities Register)
 * 
$PCIERC(0..2)_CFG016   Address=(0x20000000040+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:27> PMES      R/W     0x0        0x0        "PME_Support                                      
                                                 A value of 0 for any bit indicates that the
                                                 device (or function) is not capable of generating PME Messages
                                                 while in that power state:
                                                 o Bit 11: If set, PME Messages can be generated from D0
                                                 o Bit 12: If set, PME Messages can be generated from D1
                                                 o Bit 13: If set, PME Messages can be generated from D2
                                                 o Bit 14: If set, PME Messages can be generated from D3hot
                                                 o Bit 15: If set, PME Messages can be generated from D3cold
                                                 The PME_Support field is writable through PEM#_CFG_WR.
                                                 However, the application must not change this field."
 <26>    D2S       R/W     0x0        0x0        "D2 Support, writable through PEM#_CFG_WR         
                                                 However, the application must not change this field."
 <25>    D1S       R/W     0x0        0x0        "D1 Support, writable through PEM#_CFG_WR         
                                                 However, the application must not change this field."
 <24:22> AUXC      R/W     0x0        0x0        "AUX Current, writable through PEM#_CFG_WR        
                                                 However, the application must not change this field."
 <21>    DSI       R/W     0x0        0x0        "Device Specific Initialization (DSI), writable through PEM#_CFG_WR
                                                 However, the application must not change this field."
 <20>    NS        RAZ     NS         NS         Reserved.                                         
 <19>    PME_CLOCK RO      0x0        0x0        PME Clock, hardwired to 0                         
 <18:16> PMSV      R/W     0x3        0x3        "Power Management Specification Version, writable through PEM#_CFG_WR
                                                 However, the application must not change this field."
 <15:8>  NCP       R/W     0x50       0x50       "Next Capability Pointer                          
                                                 Points to the MSI capabilities by default, writable
                                                 through PEM#_CFG_WR."
 <7:0>   PMCID     RO      0x1        0x1        Power Management Capability ID                    
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG017
 * 
 *  PCIE_CFG017 = Eighteenth 32-bits of PCIE type 1 config space (Power Management Control and
 *  Status Register)
 *  Attribute: -exempt_w1c_w=True.
 * 
$PCIERC(0..2)_CFG017   Address=(0x20000000044+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:24> PMDIA   RO      0x0        0x0        Data register for additional information (not supported)
 <23>    BPCCEE  RO      0x0        0x0        Bus Power/Clock Control Enable, hardwired to 0    
 <22>    BD3H    RO      0x0        0x0        B2/B3 Support, hardwired to 0                     
 <21:16> NS      RAZ     NS         NS         Reserved.                                         
 <15>    PMESS   R/W1C/H 0x0        0x0        PME Status                                        
                                               Indicates if a previously enabled PME event occurred or not.
 <14:13> PMEDSIA RO      0x0        0x0        Data Scale (not supported)                        
 <12:9>  PMDS    RO      0x0        0x0        Data Select (not supported)                       
 <8>     PMEENS  R/W     0x0        0x0        PME Enable                                        
                                               A value of 1 indicates that the device is enabled to
                                               generate PME.
 <7:4>   NS      RAZ     NS         NS         Reserved.                                         
 <3>     NSR     R/W     0x0        0x0        "No Soft Reset, writable through PEM#_CFG_WR      
                                               However, the application must not change this field."
 <2>     NS      RAZ     NS         NS         Reserved.                                         
 <1:0>   PS      R/W     0x0        0x0        Power State                                       
                                               Controls the device power state:
                                               o 00b: D0
                                               o 01b: D1
                                               o 10b: D2
                                               o 11b: D3
                                               The written value is ignored if the specific state is
                                               not supported.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG020
 * 
 *  PCIE_CFG020 = Twenty-first 32-bits of PCIE type 1 config space
 *  (MSI Capability ID/
 *  MSI Next Item Pointer/
 *  MSI Control Register)
 * 
$PCIERC(0..2)_CFG020   Address=(0x20000000050+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:25> NS     RAZ     NS         NS         Reserved.                                         
 <24>    PVM    RO      0x0        0x0        Per-vector masking capable                        
 <23>    M64    R/W     0x1        0x1        "64-bit Address Capable, writable through PEM#_CFG_WR
                                              However, the application must not change this field."
 <22:20> MME    R/W     0x0        0x0        Multiple Message Enabled                          
                                              Indicates that multiple Message mode is enabled by system
                                              software. The number of Messages enabled must be less than
                                              or equal to the Multiple Message Capable value.
 <19:17> MMC    R/W     0x0        0x0        "Multiple Message Capable, writable through PEM#_CFG_WR
                                              However, the application must not change this field."
 <16>    MSIEN  R/W     0x0        0x0        MSI Enabled                                       
                                              When set, INTx must be disabled.
                                              This bit must never be set, as internal-MSI is not supported in
                                              RC mode. (Note that this has no effect on external MSI, which
                                              will be commonly used in RC mode.)
 <15:8>  NCP    R/W     0x70       0x70       "Next Capability Pointer                          
                                              Points to PCI Express Capabilities by default,
                                              writable through PEM#_CFG_WR.
                                              However, the application must not change this field."
 <7:0>   MSICID RO      0x5        0x5        MSI Capability ID                                 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG021
 * 
 *  PCIE_CFG021 = Twenty-second 32-bits of PCIE type 1 config space (MSI Lower 32 Bits Address
 *  Register)
 * 
$PCIERC(0..2)_CFG021   Address=(0x20000000054+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:2>  LMSI  R/W     0x0        0x0        Lower 32-bit Address                              
 <1:0>   NS    RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG022
 * 
 *  PCIE_CFG022 = Twenty-third 32-bits of PCIE type 1 config space (MSI Upper 32 bits Address Register)
 * 
$PCIERC(0..2)_CFG022   Address=(0x20000000058+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  UMSI R/W     0x0        0x0        Upper 32-bit Address                              
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG023
 * 
 *  PCIE_CFG023 = Twenty-fourth 32-bits of PCIE type 1 config space (MSI Data Register)
 * 
$PCIERC(0..2)_CFG023   Address=(0x2000000005C+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:0>  MSIMD R/W     0x0        0x0        MSI Data                                          
                                             Pattern assigned by system software, bits [4:0] are Or-ed with
                                             MSI_VECTOR to generate 32 MSI Messages per function.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG028
 * 
 *  PCIE_CFG028 = Twenty-ninth 32-bits of PCIE type 1 config space
 *  (PCI Express Capabilities List Register/
 *  PCI Express Capabilities Register)
 * 
$PCIERC(0..2)_CFG028   Address=(0x20000000070+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:30> NS     RAZ     NS         NS         RsvdP                                             
 <29:25> IMN    R/W     0x0        0x0        "Interrupt Message Number                         
                                              Updated by hardware, writable through PEM#_CFG_WR.
                                              However, the application must not change this field."
 <24>    SI     R/W     0x0        0x0        "Slot Implemented                                 
                                              This bit is writable through PEM#_CFG_WR.
                                              However, it must 0 for an
                                              Endpoint device. Therefore, the application must not write a
                                              1 to this bit."
 <23:20> DPT    RO      0x4        0x4        Device Port Type                                  
 <19:16> PCIECV RO      0x2        0x2        PCI Express Capability Version                    
 <15:8>  NCP    RO/WRSL 0x0        0x0        "Next Capability Pointer                          
                                              writable through PEM#_CFG_WR.
                                              However, the application must not change this field."
 <7:0>   PCIEID RO      0x10       0x10       PCIE Capability ID                                
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG029
 * 
 *  PCIE_CFG029 = Thirtieth 32-bits of PCIE type 1 config space (Device Capabilities Register)
 * 
$PCIERC(0..2)_CFG029   Address=(0x20000000074+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:28> NS    RAZ     NS         NS         Reserved.                                         
 <27:26> CSPLS RO      0x0        0x0        Captured Slot Power Limit Scale                   
                                             Not applicable for RC port, upstream port only.
 <25:18> CSPLV RO      0x0        0x0        Captured Slot Power Limit Value                   
                                             Not applicable for RC port, upstream port only.
 <17:16> NS    RAZ     NS         NS         Reserved.                                         
 <15>    RBER  R/W     0x1        0x1        "Role-Based Error Reporting, writable through PEM#_CFG_WR
                                             However, the application must not change this field."
 <14>    NS    RAZ     0x0        0x0        Undefined                                         
 <13>    NS    RAZ     NS         NS         Undefined                                         
 <12>    NS    RAZ     NS         NS         Undefined                                         
 <11:9>  EL1AL R/W     0x0        0x0        "Endpoint L1 Acceptable Latency, writable through PEM#_CFG_WR
                                             Must be 0x0 for non-endpoint devices."
 <8:6>   EL0AL R/W     0x0        0x0        "Endpoint L0s Acceptable Latency, writable through PEM#_CFG_WR
                                             Must be 0x0 for non-endpoint devices."
 <5>     ETFS  R/W     0x0        0x0        "Extended Tag Field Supported                     
                                             This bit is writable through PEM#_CFG_WR.
                                             However, the application
                                             must not write a 1 to this bit."
 <4:3>   PFS   R/W     0x0        0x0        "Phantom Function Supported                       
                                             This field is writable through PEM#_CFG_WR.
                                             However, Phantom
                                             Function is not supported. Therefore, the application must not
                                             write any value other than 0x0 to this field."
 <2:0>   MPSS  R/W     0x1        0x1        "Max_Payload_Size Supported, writable through PEM#_CFG_WR
                                             However, the application must not change this field."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG030
 * 
 *  PCIE_CFG030 = Thirty-first 32-bits of PCIE type 1 config space
 *  (Device Control Register/Device Status Register)
 *  Attribute: -exempt_w1c_w=True.
 * 
$PCIERC(0..2)_CFG030   Address=(0x20000000078+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:22> NS     RAZ     NS         NS         Reserved.                                         
 <21>    TP     RO      0x0        0x0        Transaction Pending                               
                                              Hard-wired to 0.
 <20>    AP_D   RO      0x0        0x0        Aux Power Detected                                
                                              Set to 1 if Aux power detected.
 <19>    UR_D   R/W1C/H 0x0        0x0        Unsupported Request Detected                      
                                              Errors are logged in this register regardless of whether
                                              error reporting is enabled in the Device Control register.
                                              UR_D occurs when we receive something we don't support.
                                              Unsupported requests are Nonfatal errors, so UR_D should
                                              cause NFE_D.  Receiving a  vendor defined message should
                                              cause an unsupported request.
 <18>    FE_D   R/W1C/H 0x0        0x0        Fatal Error Detected                              
                                              Errors are logged in this register regardless of whether
                                              error reporting is enabled in the Device Control register.
                                              FE_D is set if receive any of the errors in PCIE_CFG066 that
                                              has a severity set to Fatal.  Malformed TLP's generally fit
                                              into this category.
 <17>    NFE_D  R/W1C/H 0x0        0x0        Non-Fatal Error detected                          
                                              Errors are logged in this register regardless of whether
                                              error reporting is enabled in the Device Control register.
                                              NFE_D is set if we receive any of the errors in PCIE_CFG066
                                              that has a severity set to Nonfatal and does NOT meet Advisory
                                              Nonfatal criteria , which
                                              most poisoned TLP's should be.
 <16>    CE_D   R/W1C/H 0x0        0x0        Correctable Error Detected                        
                                              Errors are logged in this register regardless of whether
                                              error reporting is enabled in the Device Control register.
                                              CE_D is set if we receive any of the errors in PCIE_CFG068
                                              for example a Replay Timer Timeout.  Also, it can be set if
                                              we get any of the errors in PCIE_CFG066 that has a severity
                                              set to Nonfatal and meets the Advisory Nonfatal criteria,
                                              which most ECRC errors should be.
 <15>    NS     RAZ     NS         NS         Reserved.                                         
 <14:12> MRRS   R/W     0x2        0x2        "Max Read Request Size                            
                                              0 = 128B
                                              1 = 256B
                                              2 = 512B
                                              3 = 1024B
                                              4 = 2048B
                                              5 = 4096B
                                              Note: SLI_S2M_PORT#_CTL[MRRS] and DPI_SLI_PRT#_CFG[MRRS] and
                                              also must be set properly.
                                              SLI_S2M_PORT#_CTL[MRRS] and DPI_SLI_PRT#_CFG[MRRS] must
                                              not exceed the desired max read request size."
 <11>    NS_EN  R/W     0x1        0x1        Enable No Snoop                                   
 <10>    AP_EN  R/W     0x0        0x0        AUX Power PM Enable                               
 <9>     PF_EN  R/W     0x0        0x0        Phantom Function Enable                           
                                              This bit should never be set - OCTEON requests never use
                                              phantom functions.
 <8>     ETF_EN R/W     0x0        0x0        Extended Tag Field Enable                         
                                              This bit should never be set - OCTEON requests never use
                                              extended tags.
 <7:5>   MPS    R/W     0x0        0x0        "Max Payload Size                                 
                                              Legal values:
                                              0  = 128B
                                              1  = 256B
                                              Larger sizes not supported.
                                              Note: Both PCI Express Ports must be set to the same value
                                              for Peer-to-Peer to function properly.
                                              Note: DPI_SLI_PRT#_CFG[MPS] must also be set to the same
                                              value for proper functionality."
 <4>     RO_EN  R/W     0x1        0x1        Enable Relaxed Ordering                           
 <3>     UR_EN  R/W     0x0        0x0        Unsupported Request Reporting Enable              
 <2>     FE_EN  R/W     0x0        0x0        Fatal Error Reporting Enable                      
 <1>     NFE_EN R/W     0x0        0x0        Non-Fatal Error Reporting Enable                  
 <0>     CE_EN  R/W     0x0        0x0        Correctable Error Reporting Enable                
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG031
 * 
 *  PCIE_CFG031 = Thirty-second 32-bits of PCIE type 1 config space
 *  (Link Capabilities Register)
 * 
$PCIERC(0..2)_CFG031   Address=(0x2000000007C+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:24> PNUM   RO/WRSL 0x0        0x0        "Port Number                                      
                                              writable through PEM#_CFG_WR, however the application
                                              must not change this field."
 <23>    NS     RAZ     NS         NS         Reserved.                                         
 <22>    ASPM   RO/WRSL 0x1        0x1        ASPM Optionality Compliance                       
 <21>    LBNC   RO/WRSL 0x1        0x1        "Link Bandwidth Notification Capability           
                                              Set to 1 for Root Complex devices. writable through PEM#_CFG_WR.
                                              However, the application must not change this field."
 <20>    DLLARC RO      0x1        0x1        Data Link Layer Active Reporting Capable          
                                              Set to 1 for Root Complex devices and 0 for Endpoint devices.
 <19>    SDERC  RO      0x0        0x0        Surprise Down Error Reporting Capable             
                                              Not supported, hardwired to 0x0.
 <18>    CPM    R/W     0x0        0x0        "Clock Power Management                           
                                              The default value is the value you specify during hardware
                                              configuration."
 <17:15> L1EL   R/W     0x1        0x1        "L1 Exit Latency                                  
                                              The default value is the value you specify during hardware
                                              configuration."
 <14:12> L0EL   R/W     0x0        0x0        "L0s Exit Latency                                 
                                              The default value is the value you specify during hardware
                                              configuration."
 <11:10> ASLPMS R/W     0x3        0x3        "Active State Link PM Support                     
                                              The default value is the value you specify during hardware
                                              configuration."
 <9:4>   MLW    R/W     NS         NS         '"Maximum Link Width                              
                                              The reset value of this field is controlled by a value read from
                                              the two lsbs of the PEM csr PEM(0..2)_CFG.MD.
                                              PEM(0..2)_CFG.MD[1:0]  RST_VALUE   NOTE
                                              00                     0010b       2 lanes
                                              01                     0001b       1 lane
                                              10                     0100b       4 lanes'
 <3:0>   MLS    R/W     NS         NS         '"Maximum Link Speed                              
                                              The reset value of this field is controlled by a value read from
                                              the msb of the PEM csr PEM(0..2)_CFG.MD.
                                              PEM(0..2)_CFG.MD[2]  RST_VALUE   NOTE
                                              1                    0001b       2.5 GHz supported
                                              0                    0010b       5.0 GHz and 2.5 GHz supported'
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG032
 * 
 *  PCIE_CFG032 = Thirty-third 32-bits of PCIE type 1 config space
 *  (Link Control Register/Link Status Register)
 *  Attribute: -exempt_w1c_w=True.
 * 
$PCIERC(0..2)_CFG032   Address=(0x20000000080+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31>    LAB         R/W1C/H 0x0        0x0        Link Autonomous Bandwidth Status                  
                                                   this bit is set to indicate that hardware has autonomously
                                                   changed Link speed or width, without the Port transitioning
                                                   through DL_Down status, for reasons other than to attempt
                                                   to correct unreliable Link operation.
 <30>    LBM         R/W1C/H 0x0        0x0        Link Bandwidth Management Status                  
                                                   This bit is set to indicate either of the following has
                                                   occurred without the Port transitioning through DL_DOWN status
                                                   o A link retraining has completed following a write of 1b to
                                                   the Retrain Link bit
                                                   o Hardware has changed the Link speed or width to attempt to
                                                   correct unreliable Link operation, either through a LTSSM
                                                   timeout of higher level process.  This bit must be set if
                                                   the Physical Layer reports a speed or width change was
                                                   inititiated by the Downstream component tha was not
                                                   indicated as an autonomous change
 <29>    DLLA        RO/H    0x0        0x1        Data Link Layer Active                            
 <28>    SCC         R/W     0x1        0x0        "Slot Clock Configuration                         
                                                   Indicates that the component uses the same physical reference
                                                   clock that the platform provides on the connector. The default
                                                   value is the value you select during hardware configuration,
                                                   writable through PEM#_CFG_WR.
                                                   However, the application must not change this field."
 <27>    LT          RO/H    0x0        0x0        Link Training                                     
 <26>    NS          RAZ     NS         NS         Undefined                                         
 <25:20> NLW         RO/H    0x1        0x4        Negotiated Link Width                             
                                                   Set automatically by hardware after Link initialization.
                                                   Value is undefined when link is not up.
 <19:16> LS          RO/H    NS         NS         Link Speed                                        
                                                   0001 == The negotiated Link speed: 2.5 Gbps
                                                   0010 == The negotiated Link speed: 5.0 Gbps
                                                   0100 == The negotiated Link speed: 8.0 Gbps (Not Supported)
 <15:12> NS          RAZ     NS         NS         Reserved.                                         
 <11>    LAB_INT_ENB R/W     0x0        0x0        Link Autonomous Bandwidth Interrupt Enable        
                                                   When set, enables the generation of an interrupt to indicate
                                                   that the Link Autonomous Bandwidth Status bit has been set.
 <10>    LBM_INT_ENB R/W     0x0        0x0        Link Bandwidth Management Interrupt Enable        
                                                   When set, enables the generation of an interrupt to indicate
                                                   that the Link Bandwidth Management Status bit has been set.
 <9>     HAWD        R/W     0x0        0x0        Hardware Autonomous Width Disable                 
                                                   (Not Supported)
 <8>     ECPM        R/W     0x0        0x0        Enable Clock Power Management                     
                                                   Hardwired to 0 if Clock Power Management is disabled in
                                                   the Link Capabilities register.
 <7>     ES          R/W     0x0        0x0        Extended Synch                                    
 <6>     CCC         R/W     0x0        0x0        Common Clock Configuration                        
 <5>     RL          R/W     0x0        0x0        Retrain Link                                      
 <4>     LD          R/W     0x0        0x0        Link Disable                                      
 <3>     RCB         R/W     0x1        0x1        "Read Completion Boundary (RCB), writable through PEM#_CFG_WR
                                                   However, the application must not change this field
                                                   because an RCB of 64 bytes is not supported."
 <2>     NS          RAZ     NS         NS         Reserved.                                         
 <1:0>   ASLPC       R/W     0x0        0x0        Active State Link PM Control                      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG033
 * 
 *  PCIE_CFG033 = Thirty-fourth 32-bits of PCIE type 1 config space
 *  (Slot Capabilities Register)
 * 
$PCIERC(0..2)_CFG033   Address=(0x20000000084+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:19> PS_NUM R/W     0x0        0x0        "Physical Slot Number, writable through PEM#_CFG_WR
                                              However, the application must not change this field."
 <18>    NCCS   R/W     0x0        0x0        "No Command Complete Support, writable through PEM#_CFG_WR
                                              However, the application must not change this field."
 <17>    EMIP   R/W     0x0        0x0        "Electromechanical Interlock Present, writable through PEM#_CFG_WR
                                              However, the application must not change this field."
 <16:15> SP_LS  R/W     0x0        0x0        Slot Power Limit Scale, writable through PEM#_CFG_WR.
 <14:7>  SP_LV  R/W     0x0        0x0        Slot Power Limit Value, writable through PEM#_CFG_WR.
 <6>     HP_C   R/W     0x0        0x0        "Hot-Plug Capable, writable through PEM#_CFG_WR   
                                              However, the application must not change this field."
 <5>     HP_S   R/W     0x0        0x0        "Hot-Plug Surprise, writable through PEM#_CFG_WR  
                                              However, the application must not change this field."
 <4>     PIP    R/W     0x0        0x0        "Power Indicator Present, writable through PEM#_CFG_WR
                                              However, the application must not change this field."
 <3>     AIP    R/W     0x0        0x0        "Attention Indicator Present, writable through PEM#_CFG_WR
                                              However, the application must not change this field."
 <2>     MRLSP  R/W     0x0        0x0        "MRL Sensor Present, writable through PEM#_CFG_WR 
                                              However, the application must not change this field."
 <1>     PCP    R/W     0x0        0x0        "Power Controller Present, writable through PEM#_CFG_WR
                                              However, the application must not change this field."
 <0>     ABP    R/W     0x0        0x0        "Attention Button Present, writable through PEM#_CFG_WR
                                              However, the application must not change this field."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG034
 * 
 *  PCIE_CFG034 = Thirty-fifth 32-bits of PCIE type 1 config space
 *  (Slot Control Register/Slot Status Register)
 *  Attribute: -exempt_w1c_w=True.
 * 
$PCIERC(0..2)_CFG034   Address=(0x20000000088+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:25> NS       RAZ     NS         NS         Reserved.                                         
 <24>    DLLS_C   R/W1C/H 0x0        0x0        Data Link Layer State Changed                     
 <23>    EMIS     RO      0x0        0x0        Electromechanical Interlock Status                
 <22>    PDS      RO      0x1        0x1        Presence Detect State                             
 <21>    MRLSS    RO      0x0        0x0        MRL Sensor State                                  
 <20>    CCINT_D  R/W1C/H 0x0        0x0        Command Completed                                 
 <19>    PD_C     R/W1C/H 0x0        0x0        Presence Detect Changed                           
 <18>    MRLS_C   R/W1C/H 0x0        0x0        MRL Sensor Changed                                
 <17>    PF_D     R/W1C/H 0x0        0x0        Power Fault Detected                              
 <16>    ABP_D    R/W1C/H 0x0        0x0        Attention Button Pressed                          
 <15:13> NS       RAZ     NS         NS         Reserved.                                         
 <12>    DLLS_EN  R/W     0x0        0x0        Data Link Layer State Changed Enable              
 <11>    EMIC     R/W     0x0        0x0        Electromechanical Interlock Control               
 <10>    PCC      R/W     0x0        0x0        Power Controller Control                          
 <9:8>   PIC      R/W     0x3        0x3        Power Indicator Control                           
 <7:6>   AIC      R/W     0x3        0x3        Attention Indicator Control                       
 <5>     HPINT_EN R/W     0x0        0x0        Hot-Plug Interrupt Enable                         
 <4>     CCINT_EN R/W     0x0        0x0        Command Completed Interrupt Enable                
 <3>     PD_EN    R/W     0x0        0x0        Presence Detect Changed Enable                    
 <2>     MRLS_EN  R/W     0x0        0x0        MRL Sensor Changed Enable                         
 <1>     PF_EN    R/W     0x0        0x0        Power Fault Detected Enable                       
 <0>     ABP_EN   R/W     0x0        0x0        Attention Button Pressed Enable                   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG035
 * 
 *  PCIE_CFG035 = Thirty-sixth 32-bits of PCIE type 1 config space
 *  (Root Control Register/Root Capabilities Register)
 * 
$PCIERC(0..2)_CFG035   Address=(0x2000000008C+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:17> NS     RAZ     NS         NS         Reserved.                                         
 <16>    CRSSV  RO      0x0        0x0        CRS Software Visibility                           
                                              Not supported, hardwired to 0x0.
 <15:5>  NS     RAZ     NS         NS         Reserved.                                         
 <4>     CRSSVE RO      0x0        0x0        CRS Software Visibility Enable                    
                                              Not supported, hardwired to 0x0.
 <3>     PMEIE  R/W     0x0        0x0        PME Interrupt Enable                              
 <2>     SEFEE  R/W     0x0        0x0        System Error on Fatal Error Enable                
 <1>     SENFEE R/W     0x0        0x0        System Error on Non-fatal Error Enable            
 <0>     SECEE  R/W     0x0        0x0        System Error on Correctable Error Enable          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG036
 * 
 *  PCIE_CFG036 = Thirty-seventh 32-bits of PCIE type 1 config space
 *  (Root Status Register)
 * 
$PCIERC(0..2)_CFG036   Address=(0x20000000090+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:18> NS       RAZ     0x0        0x0        Reserved.                                         
 <17>    PME_PEND RO      0x0        0x0        PME Pending                                       
 <16>    PME_STAT R/W1C/H 0x0        0x0        PME Status                                        
 <15:0>  PME_RID  RO      0x0        0x0        PME Requester ID                                  
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG037
 * 
 *  PCIE_CFG037 = Thirty-eighth 32-bits of PCIE type 1 config space
 *  (Device Capabilities 2 Register)
 * 
$PCIERC(0..2)_CFG037   Address=(0x20000000094+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:14> NS       RAZ     NS         NS         Reserved.                                         
 <13:12> TPH      RO      0x0        0x0        TPH Completer Supported                           
                                                (Not Supported)
 <11>    NS       RAZ     NS         NS         Reserved.                                         
 <10>    NOROPRPR RO/H    0x1        0x1        No RO-enabled PR-PR Passing                       
                                                When set, the routing element never carries out the passing
                                                permitted in the Relaxed Ordering Model.
 <9>     ATOM128S RO      0x0        0x0        128-bit AtomicOp Supported                        
                                                (Not Supported)
 <8>     ATOM64S  RO      0x0        0x0        64-bit AtomicOp Supported                         
                                                (Not Supported)
 <7>     ATOM32S  RO      0x0        0x0        32-bit AtomicOp Supported                         
                                                (Not Supported)
 <6>     ATOM_OPS RO      0x0        0x0        AtomicOp Routing Supported                        
                                                (Not Supported)
 <5>     ARI_FW   RO      0x0        0x0        ARI Forwarding Supported                          
                                                (Not Supported)
 <4>     CTDS     RO      0x1        0x1        Completion Timeout Disable Supported              
 <3:0>   CTRS     RO/H    0xf        0xf        Completion Timeout Ranges Supported               
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG038
 * 
 *  PCIE_CFG038 = Thirty-ninth 32-bits of PCIE type 1 config space
 *  (Device Control 2 Register)
 * 
$PCIERC(0..2)_CFG038   Address=(0x20000000098+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:10> NS         RAZ     NS         NS         Reserved.                                         
 <9>     ID0_CP     RO      0x0        0x0        ID Based Ordering Completion Enable               
                                                  (Not Supported)
 <8>     ID0_RQ     RO      0x0        0x0        ID Based Ordering Request Enable                  
                                                  (Not Supported)
 <7>     ATOM_OP_EB RO      0x0        0x0        AtomicOp Egress Blocking                          
                                                  (Not Supported)m
 <6>     ATOM_OP    RO      0x0        0x0        AtomicOp Requester Enable                         
                                                  (Not Supported)
 <5>     ARI        RO      0x0        0x0        Alternate Routing ID Forwarding Supported         
                                                  (Not Supported)
 <4>     CTD        R/W     0x0        0x0        Completion Timeout Disable                        
 <3:0>   CTV        RO/H    0x0        0x0        Completion Timeout Value                          
                                                  o 0000b Default range: 50 us to 55 ms
                                                  o 0001b 50 us to 100 us
                                                  o 0010b 1 ms to 10 ms
                                                  o 0101b 16 ms to 55 ms
                                                  o 0110b 65 ms to 210 ms
                                                  o 1001b 260 ms to 900 ms
                                                  o 1010b 1 s to 3.5 s
                                                  o 1101b 4 s to 13 s
                                                  o 1110b 17 s to 64 s
                                                  Values not defined are reserved
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG039
 * 
 *  PCIE_CFG039 = Fourtieth 32-bits of PCIE type 1 config space
 *  (Link Capabilities 2 Register)
 * 
$PCIERC(0..2)_CFG039   Address=(0x2000000009C+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:9>  NS    RAZ     NS         NS         Reserved.                                         
 <8>     CLS   RO      0x0        0x0        Crosslink Supported                               
 <7:1>   SLSV  RO/WRSL NS         NS         "Supported Link Speeds Vector                     
                                             Indicates the supported Link speeds of the associated Port.
                                             For each bit, a value of 1b indicates that the cooresponding
                                             Link speed is supported; otherwise, the Link speed is not
                                             supported.
                                             Bit definitions are:
                                             Bit 1 2.5 GT/s
                                             Bit 2 5.0 GT/s
                                             Bit 3 8.0 GT/s (Not Supported)
                                             Bits 7:4 reserved
                                             The reset value of this field is controlled by a value read from
                                             the msb of the pi_select_mode pins.
                                             pi_sel_md[2]   RST_VALUE   NOTE
                                             1             0001b       2.5 GHz supported
                                             0             0011b       5.0 GHz and 2.5 GHz supported"
 <0>     NS    RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG040
 * 
 *  PCIE_CFG040 = Fourty-first 32-bits of PCIE type 1 config space
 *  (Link Control 2 Register/Link Status 2 Register)
 * 
$PCIERC(0..2)_CFG040   Address=(0x200000000A0+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:17> NS    RAZ     NS         NS         Reserved.                                         
 <16>    CDL   RO/H    0x1        0x1        Current De-emphasis Level                         
                                             When the Link is operating at 5 GT/s speed, this bit
                                             reflects the level of de-emphasis. Encodings:
                                             1b: -3.5 dB
                                             0b: -6 dB
                                             Note: The value in this bit is undefined when the Link is
                                             operating at 2.5 GT/s speed
 <15:13> NS    RAZ     NS         NS         Reserved.                                         
 <12>    CDE   R/W     0x0        0x0        Compliance De-emphasis                            
                                             This bit sets the de-emphasis level in Polling. Compliance
                                             state if the entry occurred due to the Tx Compliance
                                             Receive bit being 1b. Encodings:
                                             1b: -3.5 dB
                                             0b: -6 dB
                                             Note: When the Link is operating at 2.5 GT/s, the setting
                                             of this bit has no effect.
 <11>    CSOS  R/W     0x0        0x0        Compliance SOS                                    
                                             When set to 1b, the LTSSM is required to send SKP
                                             Ordered Sets periodically in between the (modified)
                                             compliance patterns.
                                             Note: When the Link is operating at 2.5 GT/s, the setting
                                             of this bit has no effect.
 <10>    EMC   R/W     0x0        0x0        Enter Modified Compliance                         
                                             When this bit is set to 1b, the device transmits a modified
                                             compliance pattern if the LTSSM enters Polling.
                                             Compliance state.
 <9:7>   TM    R/W/H   0x0        0x0        Transmit Margin                                   
                                             This field controls the value of the non-de-emphasized
                                             voltage level at the Transmitter pins:
                                             000: 800-1200 mV for full swing 400-600 mV for half-swing
                                             001-010: values must be monotonic with a non-zero slope
                                             011: 200-400 mV for full-swing and 100-200 mV for halfswing
                                             100-111: reserved
                                             This field is reset to 000b on entry to the LTSSM Polling.
                                             Compliance substate.
                                             When operating in 5.0 GT/s mode with full swing, the
                                             de-emphasis ratio must be maintained within +/- 1 dB
                                             from the specification-defined operational value
                                             either -3.5 or -6 dB).
 <6>     SDE   R/W     0x0        0x0        Selectable De-emphasis                            
                                             When the Link is operating at 5.0 GT/s speed, selects the
                                             level of de-emphasis:
                                             1: -3.5 dB
                                             0: -6 dB
                                             When the Link is operating at 2.5 GT/s speed, the setting
                                             of this bit has no effect.
 <5>     HASD  R/W     0x0        0x0        Hardware Autonomous Speed Disable                 
                                             When asserted, the
                                             application must disable hardware from changing the Link
                                             speed for device-specific reasons other than attempting to
                                             correct unreliable Link operation by reducing Link speed.
                                             Initial transition to the highest supported common link
                                             speed is not blocked by this signal.
 <4>     EC    R/W     0x0        0x0        Enter Compliance                                  
                                             Software is permitted to force a link to enter Compliance
                                             mode at the speed indicated in the Target Link Speed
                                             field by setting this bit to 1b in both components on a link
                                             and then initiating a hot reset on the link.
 <3:0>   TLS   R/W     NS         NS         "Target Link Speed                                
                                             For Downstream ports, this field sets an upper limit on link
                                             operational speed by restricting the values advertised by
                                             the upstream component in its training sequences:
                                             0001: 2.5Gb/s Target Link Speed
                                             0010: 5Gb/s Target Link Speed
                                             0100: 8Gb/s Target Link Speed (Not Supported)
                                             All other encodings are reserved.
                                             If a value is written to this field that does not correspond to
                                             a speed included in the Supported Link Speeds field, the
                                             result is undefined.
                                             For both Upstream and Downstream ports, this field is
                                             used to set the target compliance mode speed when
                                             software is using the Enter Compliance bit to force a link
                                             into compliance mode.
                                             The reset value of this field is controlled by a value read from
                                             the msb of the pi_select_mode pins.
                                             pi_sel_md[2]  RST_VALUE   NOTE
                                             1             0001b       2.5 GHz supported
                                             0             0010b       5.0 GHz and 2.5 GHz supported"
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG041
 * 
 *  PCIE_CFG041 = Fourty-second 32-bits of PCIE type 1 config space
 *  (Slot Capabilities 2 Register)
 * 
$PCIERC(0..2)_CFG041   Address=(0x200000000A4+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  NS    RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG042
 * 
 *  PCIE_CFG042 = Fourty-third 32-bits of PCIE type 1 config space
 *  (Slot Control 2 Register/Slot Status 2 Register)
 * 
$PCIERC(0..2)_CFG042   Address=(0x200000000A8+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  NS    RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG064
 * 
 *  PCIE_CFG064 = Sixty-fifth 32-bits of PCIE type 1 config space
 *  (PCI Express Extended Capability Header)
 * 
$PCIERC(0..2)_CFG064   Address=(0x20000000100+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:20> NCO    RO/H    0x0        0x0        Next Capability Offset                            
 <19:16> CV     RO      0x2        0x2        Capability Version                                
 <15:0>  PCIEEC RO      0x1        0x1        PCIE Express Extended Capability                  
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG065
 * 
 *  PCIE_CFG065 = Sixty-sixth 32-bits of PCIE type 1 config space
 *  (Uncorrectable Error Status Register)
 * 
$PCIERC(0..2)_CFG065   Address=(0x20000000104+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:25> NS      RAZ     NS         NS         Reserved.                                         
 <24>    UATOMBS R/W1C/H 0x0        0x0        Unsupported AtomicOp Egress Blocked Status        
 <23>    NS      RAZ     NS         NS         Reserved.                                         
 <22>    UCIES   R/W1C/H 0x1        0x1        Uncorrectable Internal Error Status               
 <21>    NS      RAZ     NS         NS         Reserved.                                         
 <20>    URES    R/W1C/H 0x0        0x0        Unsupported Request Error Status                  
 <19>    ECRCES  R/W1C/H 0x0        0x0        ECRC Error Status                                 
 <18>    MTLPS   R/W1C/H 0x0        0x0        Malformed TLP Status                              
 <17>    ROS     R/W1C/H 0x0        0x0        Receiver Overflow Status                          
 <16>    UCS     R/W1C/H 0x0        0x0        Unexpected Completion Status                      
 <15>    CAS     R/W1C/H 0x0        0x0        Completer Abort Status                            
 <14>    CTS     R/W1C/H 0x0        0x0        Completion Timeout Status                         
 <13>    FCPES   R/W1C/H 0x0        0x0        Flow Control Protocol Error Status                
 <12>    PTLPS   R/W1C/H 0x0        0x0        Poisoned TLP Status                               
 <11:6>  NS      RAZ     NS         NS         Reserved.                                         
 <5>     SDES    RO      0x0        0x0        Surprise Down Error Status (not supported)        
 <4>     DLPES   R/W1C/H 0x0        0x0        Data Link Protocol Error Status                   
 <3:1>   NS      RAZ     NS         NS         Reserved.                                         
 <0>     NS      RAZ     NS         NS         Undefined                                         
                                               (Was Training Error Status for PCI Express 1.0a)
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG066
 * 
 *  PCIE_CFG066 = Sixty-seventh 32-bits of PCIE type 1 config space
 *  (Uncorrectable Error Mask Register)
 * 
$PCIERC(0..2)_CFG066   Address=(0x20000000108+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:25> NS      RAZ     NS         NS         Reserved.                                         
 <24>    UATOMBM RO      0x0        0x0        Unsupported AtomicOp Egress Blocked Mask          
 <23>    NS      RAZ     NS         NS         Reserved.                                         
 <22>    UCIEM   R/W     0x1        0x1        Uncorrectable Internal Error Mask                 
 <21>    NS      RAZ     NS         NS         Reserved.                                         
 <20>    UREM    R/W     0x0        0x0        Unsupported Request Error Mask                    
 <19>    ECRCEM  R/W     0x0        0x0        ECRC Error Mask                                   
 <18>    MTLPM   R/W     0x0        0x0        Malformed TLP Mask                                
 <17>    ROM     R/W     0x0        0x0        Receiver Overflow Mask                            
 <16>    UCM     R/W     0x0        0x0        Unexpected Completion Mask                        
 <15>    CAM     R/W     0x0        0x0        Completer Abort Mask                              
 <14>    CTM     R/W     0x0        0x0        Completion Timeout Mask                           
 <13>    FCPEM   R/W     0x0        0x0        Flow Control Protocol Error Mask                  
 <12>    PTLPM   R/W     0x0        0x0        Poisoned TLP Mask                                 
 <11:6>  NS      RAZ     NS         NS         Reserved.                                         
 <5>     SDEM    RO      0x0        0x0        Surprise Down Error Mask (not supported)          
 <4>     DLPEM   R/W     0x0        0x0        Data Link Protocol Error Mask                     
 <3:1>   NS      RAZ     NS         NS         Reserved.                                         
 <0>     NS      RAZ     NS         NS         Undefined                                         
                                               (Was Training Error Mask for PCI Express 1.0a)
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG067
 * 
 *  PCIE_CFG067 = Sixty-eighth 32-bits of PCIE type 1 config space
 *  (Uncorrectable Error Severity Register)
 * 
$PCIERC(0..2)_CFG067   Address=(0x2000000010C+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:25> NS      RAZ     NS         NS         Reserved.                                         
 <24>    UATOMBS RO      0x0        0x0        Unsupported AtomicOp Egress Blocked Severity      
 <23>    NS      RAZ     NS         NS         Reserved.                                         
 <22>    UCIES   R/W     0x1        0x1        Uncorrectable Internal Error Severity             
 <21>    NS      RAZ     NS         NS         Reserved.                                         
 <20>    URES    R/W     0x0        0x0        Unsupported Request Error Severity                
 <19>    ECRCES  R/W     0x0        0x0        ECRC Error Severity                               
 <18>    MTLPS   R/W     0x1        0x1        Malformed TLP Severity                            
 <17>    ROS     R/W     0x1        0x1        Receiver Overflow Severity                        
 <16>    UCS     R/W     0x0        0x0        Unexpected Completion Severity                    
 <15>    CAS     R/W     0x0        0x0        Completer Abort Severity                          
 <14>    CTS     R/W     0x0        0x0        Completion Timeout Severity                       
 <13>    FCPES   R/W     0x1        0x1        Flow Control Protocol Error Severity              
 <12>    PTLPS   R/W     0x0        0x0        Poisoned TLP Severity                             
 <11:6>  NS      RAZ     NS         NS         Reserved.                                         
 <5>     SDES    RO      0x1        0x1        Surprise Down Error Severity (not supported)      
 <4>     DLPES   R/W     0x1        0x1        Data Link Protocol Error Severity                 
 <3:1>   NS      RAZ     NS         NS         Reserved.                                         
 <0>     NS      RAZ     NS         NS         Undefined                                         
                                               (Was Training Error Severity for PCI Express 1.0a)
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG068
 * 
 *  PCIE_CFG068 = Sixty-ninth 32-bits of PCIE type 1 config space
 *  (Correctable Error Status Register)
 * 
$PCIERC(0..2)_CFG068   Address=(0x20000000110+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:15> NS     RAZ     NS         NS         Reserved.                                         
 <14>    CIES   R/W1C/H 0x0        0x0        Corrected Internal Error Status                   
 <13>    ANFES  R/W1C/H 0x0        0x0        Advisory Non-Fatal Error Status                   
 <12>    RTTS   R/W1C/H 0x0        0x0        Replay Timer Timeout Status                       
 <11:9>  NS     RAZ     NS         NS         Reserved.                                         
 <8>     RNRS   R/W1C/H 0x0        0x0        REPLAY_NUM Rollover Status                        
 <7>     BDLLPS R/W1C/H 0x0        0x0        Bad DLLP Status                                   
 <6>     BTLPS  R/W1C/H 0x0        0x0        Bad TLP Status                                    
 <5:1>   NS     RAZ     NS         NS         Reserved.                                         
 <0>     RES    R/W1C/H 0x0        0x0        Receiver Error Status                             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG069
 * 
 *  PCIE_CFG069 = Seventieth 32-bits of PCIE type 1 config space
 *  (Correctable Error Mask Register)
 * 
$PCIERC(0..2)_CFG069   Address=(0x20000000114+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:15> NS     RAZ     NS         NS         Reserved.                                         
 <14>    CIEM   R/W     0x1        0x1        Corrected Internal Error Mask                     
 <13>    ANFEM  R/W     0x1        0x1        Advisory Non-Fatal Error Mask                     
 <12>    RTTM   R/W     0x0        0x0        Replay Timer Timeout Mask                         
 <11:9>  NS     RAZ     NS         NS         Reserved.                                         
 <8>     RNRM   R/W     0x0        0x0        REPLAY_NUM Rollover Mask                          
 <7>     BDLLPM R/W     0x0        0x0        Bad DLLP Mask                                     
 <6>     BTLPM  R/W     0x0        0x0        Bad TLP Mask                                      
 <5:1>   NS     RAZ     NS         NS         Reserved.                                         
 <0>     REM    R/W     0x0        0x0        Receiver Error Mask                               
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG070
 * 
 *  PCIE_CFG070 = Seventy-first 32-bits of PCIE type 1 config space
 *  (Advanced Capabilities and Control Register)
 * 
$PCIERC(0..2)_CFG070   Address=(0x20000000118+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:9>  NS    RAZ     NS         NS         Reserved.                                         
 <8>     CE    R/W     0x0        0x0        ECRC Check Enable                                 
 <7>     CC    RO      0x1        0x1        ECRC Check Capable                                
 <6>     GE    R/W     0x0        0x0        ECRC Generation Enable                            
 <5>     GC    RO      0x1        0x1        ECRC Generation Capability                        
 <4:0>   FEP   RO      0x0        0x0        First Error Pointer                               
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG071
 * 
 *  PCIE_CFG071 = Seventy-second 32-bits of PCIE type 1 config space
 *  (Header Log Register 1)
 *  The Header Log registers collect the header for the TLP corresponding to a detected error.
 * 
$PCIERC(0..2)_CFG071   Address=(0x2000000011C+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  DWORD1 RO      0x0        0x0        Header Log Register (first DWORD)                 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG072
 * 
 *  PCIE_CFG072 = Seventy-third 32-bits of PCIE type 1 config space
 *  (Header Log Register 2)
 *  The Header Log registers collect the header for the TLP corresponding to a detected error.
 * 
$PCIERC(0..2)_CFG072   Address=(0x20000000120+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  DWORD2 RO      0x0        0x0        Header Log Register (second DWORD)                
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG073
 * 
 *  PCIE_CFG073 = Seventy-fourth 32-bits of PCIE type 1 config space
 *  (Header Log Register 3)
 *  The Header Log registers collect the header for the TLP corresponding to a detected error.
 * 
$PCIERC(0..2)_CFG073   Address=(0x20000000124+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  DWORD3 RO      0x0        0x0        Header Log Register (third DWORD)                 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG074
 * 
 *  PCIE_CFG074 = Seventy-fifth 32-bits of PCIE type 1 config space
 *  (Header Log Register 4)
 *  The Header Log registers collect the header for the TLP corresponding to a detected error.
 * 
$PCIERC(0..2)_CFG074   Address=(0x20000000128+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  DWORD4 RO      0x0        0x0        Header Log Register (fourth DWORD)                
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG075
 * 
 *  PCIE_CFG075 = Seventy-sixth 32-bits of PCIE type 1 config space
 *  (Root Error Command Register)
 * 
$PCIERC(0..2)_CFG075   Address=(0x2000000012C+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:3>  NS    RAZ     NS         NS         Reserved.                                         
 <2>     FERE  R/W     0x0        0x0        Fatal Error Reporting Enable                      
 <1>     NFERE R/W     0x0        0x0        Non-Fatal Error Reporting Enable                  
 <0>     CERE  R/W     0x0        0x0        Correctable Error Reporting Enable                
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG076
 * 
 *  PCIE_CFG076 = Seventy-seventh 32-bits of PCIE type 1 config space
 *  (Root Error Status Register)
 *  Attribute: -exempt_w1c_w=True.
 * 
$PCIERC(0..2)_CFG076   Address=(0x20000000130+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:27> AEIMN       R/W     0x0        0x0        "Advanced Error Interrupt Message Number,         
                                                   writable through PEM#_CFG_WR"
 <26:7>  NS          RAZ     NS         NS         Reserved.                                         
 <6>     FEMR        R/W1C/H 0x0        0x0        Fatal Error Messages Received                     
 <5>     NFEMR       R/W1C/H 0x0        0x0        Non-Fatal Error Messages Received                 
 <4>     FUF         R/W1C/H 0x0        0x0        First Uncorrectable Fatal                         
 <3>     MULTI_EFNFR R/W1C/H 0x0        0x0        Multiple ERR_FATAL/NONFATAL Received              
 <2>     EFNFR       R/W1C/H 0x0        0x0        ERR_FATAL/NONFATAL Received                       
 <1>     MULTI_ECR   R/W1C/H 0x0        0x0        Multiple ERR_COR Received                         
 <0>     ECR         R/W1C/H 0x0        0x0        ERR_COR Received                                  
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG077
 * 
 *  PCIE_CFG077 = Seventy-eighth 32-bits of PCIE type 1 config space
 *  (Error Source Identification Register)
 * 
$PCIERC(0..2)_CFG077   Address=(0x20000000134+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> EFNFSI RO      0x0        0x0        ERR_FATAL/NONFATAL Source Identification          
 <15:0>  ECSI   RO      0x0        0x0        ERR_COR Source Identification                     
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG448
 * 
 *  PCIE_CFG448 = Four hundred forty-ninth 32-bits of PCIE type 1 config space
 *  (Ack Latency Timer and Replay Timer Register)
 * 
$PCIERC(0..2)_CFG448   Address=(0x20000000700+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> RTL   R/W/H   0x308d     NS         Replay Time Limit                                 
                                             The replay timer expires when it reaches this limit. The PCI
                                             Express bus initiates a replay upon reception of a Nak or when
                                             the replay timer expires.
                                             This value will be set correctly by the hardware out of reset
                                             or when the negotiated Link-Width or Payload-Size changes. If
                                             the user changes this value through a CSR write or by an
                                             EEPROM load then they should refer to the PCIe Specification
                                             for the correct value.
 <15:0>  RTLTL R/W/H   0x102f     NS         Round Trip Latency Time Limit                     
                                             The Ack/Nak latency timer expires when it reaches this limit.
                                             This value will be set correctly by the hardware out of reset
                                             or when the negotiated Link-Width or Payload-Size changes. If
                                             the user changes this value through a CSR write or by an
                                             EEPROM load then they should refer to the PCIe Specification
                                             for the correct value.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG449
 * 
 *  PCIE_CFG449 = Four hundred fiftieth 32-bits of PCIE type 1 config space
 *  (Other Message Register)
 * 
$PCIERC(0..2)_CFG449   Address=(0x20000000704+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  OMR R/W     0xffffffff NS         Other Message Register                            
                                           This register can be used for either of the following purposes:
                                           o To send a specific PCI Express Message, the application
                                           writes the payload of the Message into this register, then
                                           sets bit 0 of the Port Link Control Register to send the
                                           Message.
                                           o To store a corruption pattern for corrupting the LCRC on all
                                           TLPs, the application places a 32-bit corruption pattern into
                                           this register and enables this function by setting bit 25 of
                                           the Port Link Control Register. When enabled, the transmit
                                           LCRC result is XOR'd with this pattern before inserting
                                           it into the packet.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG450
 * 
 *  PCIE_CFG450 = Four hundred fifty-first 32-bits of PCIE type 1 config space
 *  (Port Force Link Register)
 * 
$PCIERC(0..2)_CFG450   Address=(0x20000000708+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:24> LPEC       RO      0x7        0x7        Low Power Entrance Count                          
                                                  The Power Management state will wait for this many clock cycles
                                                  for the associated completion of a CfgWr to PCIE_CFG017 register
                                                  Power State (PS) field register to go low-power. This register
                                                  is intended for applications that do not let the PCI Express
                                                  bus handle a completion for configuration request to the
                                                  Power Management Control and Status (PCIE_CFG017) register.
 <23:22> NS         RAZ     NS         NS         Reserved.                                         
 <21:16> LINK_STATE R/W     0x0        0x0        Link State                                        
                                                  The Link state that the PCI Express Bus will be forced to
                                                  when bit 15 (Force Link) is set.
                                                  State encoding:
                                                  o DETECT_QUIET              00h
                                                  o DETECT_ACT                01h
                                                  o POLL_ACTIVE               02h
                                                  o POLL_COMPLIANCE           03h
                                                  o POLL_CONFIG               04h
                                                  o PRE_DETECT_QUIET          05h
                                                  o DETECT_WAIT               06h
                                                  o CFG_LINKWD_START          07h
                                                  o CFG_LINKWD_ACEPT          08h
                                                  o CFG_LANENUM_WAIT          09h
                                                  o CFG_LANENUM_ACEPT         0Ah
                                                  o CFG_COMPLETE              0Bh
                                                  o CFG_IDLE                  0Ch
                                                  o RCVRY_LOCK                0Dh
                                                  o RCVRY_SPEED               0Eh
                                                  o RCVRY_RCVRCFG             0Fh
                                                  o RCVRY_IDLE                10h
                                                  o L0                        11h
                                                  o L0S                       12h
                                                  o L123_SEND_EIDLE           13h
                                                  o L1_IDLE                   14h
                                                  o L2_IDLE                   15h
                                                  o L2_WAKE                   16h
                                                  o DISABLED_ENTRY            17h
                                                  o DISABLED_IDLE             18h
                                                  o DISABLED                  19h
                                                  o LPBK_ENTRY                1Ah
                                                  o LPBK_ACTIVE               1Bh
                                                  o LPBK_EXIT                 1Ch
                                                  o LPBK_EXIT_TIMEOUT         1Dh
                                                  o HOT_RESET_ENTRY           1Eh
                                                  o HOT_RESET                 1Fh
 <15>    FORCE_LINK R/W/H   0x0        0x0        Force Link                                        
                                                  Forces the Link to the state specified by the Link State field.
                                                  The Force Link pulse will trigger Link re-negotiation.
                                                  * As the The Force Link is a pulse, writing a 1 to it does
                                                  trigger the forced link state event, even thought reading it
                                                  always returns a 0.
 <14:12> NS         RAZ     NS         NS         Reserved.                                         
 <11:8>  LINK_CMD   R/W     0x0        0x0        Link Command                                      
                                                  The Link command that the PCI Express Core will be forced to
                                                  transmit when bit 15 (Force Link) is set.
                                                  Command encoding:
                                                  o PEM_SEND_IDLE              1h
                                                  o PEM_SEND_EIDLE             2h
                                                  o PEM_XMT_IN_EIDLE           3h
                                                  o PEM_MOD_COMPL_PATTERN      4h
                                                  o PEM_SEND_RCVR_DETECT_SEQ   5h
                                                  o PEM_SEND_TS1               6h
                                                  o PEM_SEND_TS2               7h
                                                  o PEM_COMPLIANCE_PATTERN     8h
                                                  o PEM_SEND_SDS               9h
                                                  o PEM_SEND_BEACON            ah
                                                  o PEM_SEND_N_FTS             bh
                                                  o PEM_NORM                   ch
                                                  o PEM_SEND_SKP               dh
                                                  o PEM_SEND_EIES              eh
                                                  o PEM_SEND_EIES_SYM          fh
 <7:0>   LINK_NUM   R/W     0x4        0x4        Link Number                                       
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG451
 * 
 *  PCIE_CFG451 = Four hundred fifty-second 32-bits of PCIE type 1 config space
 *  (Ack Frequency Register)
 * 
$PCIERC(0..2)_CFG451   Address=(0x2000000070C+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31>    NS       RAZ     NS         NS         Reserved.                                         
 <30>    EASPML1  R/W/H   0x0        0x0        Enter ASPM L1 without receive in L0s              
                                                Allow core to enter ASPM L1 even when link partner did
                                                not go to L0s (receive is not in L0s).
                                                When not set, core goes to ASPM L1 only after idle period
                                                during which both receive and transmit are in L0s.
 <29:27> L1EL     R/W     0x3        0x3        L1 Entrance Latency                               
                                                Values correspond to:
                                                o 000: 1 ms
                                                o 001: 2 ms
                                                o 010: 4 ms
                                                o 011: 8 ms
                                                o 100: 16 ms
                                                o 101: 32 ms
                                                o 110 or 111: 64 ms
 <26:24> L0EL     R/W     0x3        0x3        L0s Entrance Latency                              
                                                Values correspond to:
                                                o 000: 1 ms
                                                o 001: 2 ms
                                                o 010: 3 ms
                                                o 011: 4 ms
                                                o 100: 5 ms
                                                o 101: 6 ms
                                                o 110 or 111: 7 ms
 <23:16> N_FTS_CC R/W     0x30       0x30       N_FTS when common clock is used.                  
                                                The number of Fast Training Sequence ordered sets to be
                                                transmitted when transitioning from L0s to L0. The maximum
                                                number of FTS ordered-sets that a component can request is 255.
                                                Note: The core does not support a value of zero; a value of
                                                zero can cause the LTSSM to go into the recovery state
                                                when exiting from L0s.
 <15:8>  N_FTS    R/W     0x30       0x30       N_FTS                                             
                                                The number of Fast Training Sequence ordered sets to be
                                                transmitted when transitioning from L0s to L0. The maximum
                                                number of FTS ordered-sets that a component can request is 255.
                                                Note: The core does not support a value of zero; a value of
                                                zero can cause the LTSSM to go into the recovery state
                                                when exiting from L0s.
 <7:0>   ACK_FREQ R/W     0x0        0x0        Ack Frequency                                     
                                                The number of pending Ack's specified here (up to 255) before
                                                sending an Ack.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG452
 * 
 *  PCIE_CFG452 = Four hundred fifty-third 32-bits of PCIE type 1 config space
 *  (Port Link Control Register)
 * 
$PCIERC(0..2)_CFG452   Address=(0x20000000710+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:22> NS        RAZ     NS         NS         Reserved.                                         
 <21:16> LME       R/W     0x7        0x7        Link Mode Enable                                  
                                                 o 000001: x1
                                                 o 000011: x2
                                                 o 000111: x4
                                                 o 001111: x8  (not supported)
                                                 o 011111: x16 (not supported)
                                                 o 111111: x32 (not supported)
                                                 This field indicates the MAXIMUM number of lanes supported
                                                 by the PCIe port. The value can be set less than 0x7
                                                 to limit the number of lanes the PCIe will attempt to use.
                                                 The programming of this field needs to be done by SW BEFORE
                                                 enabling the link. See also MLW.
                                                 (Note: The value of this field does NOT indicate the number
                                                 of lanes in use by the PCIe. LME sets the max number of lanes
                                                 in the PCIe core that COULD be used. As per the PCIe specs,
                                                 the PCIe core can negotiate a smaller link width, so all
                                                 of x4, x2, and x1 are supported when LME=0x7,
                                                 for example.)
 <15:12> NS        RAZ     NS         NS         Reserved.                                         
 <11:8>  LINK_RATE RO/H    0x1        0x1        Reserved.                                         
 <7>     FLM       R/W/H   0x0        0x0        Fast Link Mode                                    
                                                 Sets all internal timers to fast mode for simulation purposes.
 <6>     NS        RAZ     NS         NS         Reserved.                                         
 <5>     DLLLE     R/W     0x1        0x1        DLL Link Enable                                   
                                                 Enables Link initialization. If DLL Link Enable = 0, the PCI
                                                 Express bus does not transmit InitFC DLLPs and does not
                                                 establish a Link.
 <4>     NS        RAZ     NS         NS         Reserved.                                         
 <3>     RA        R/W     0x0        0x0        Reset Assert                                      
                                                 Triggers a recovery and forces the LTSSM to the Hot Reset
                                                 state (downstream port only).
 <2>     LE        R/W     0x0        0x0        Loopback Enable                                   
                                                 Initiate loopback mode as a master. On a 0->1 transition,
                                                 the PCIe core sends TS ordered sets with the loopback bit set
                                                 to cause the link partner to enter into loopback mode as a
                                                 slave. Normal transmission is not possible when LE=1. To exit
                                                 loopback mode, take the link through a reset sequence.
 <1>     SD        R/W     0x0        0x0        Scramble Disable                                  
                                                 Turns off data scrambling.
 <0>     OMR       R/W     0x0        0x0        Other Message Request                             
                                                 When software writes a `1' to this bit, the PCI Express bus
                                                 transmits the Message contained in the Other Message register.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG453
 * 
 *  PCIE_CFG453 = Four hundred fifty-fourth 32-bits of PCIE type 1 config space
 *  (Lane Skew Register)
 * 
$PCIERC(0..2)_CFG453   Address=(0x20000000714+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31>    DLLD    R/W     0x0        0x0        Disable Lane-to-Lane Deskew                       
                                               Disables the internal Lane-to-Lane deskew logic.
 <30:26> NS      RAZ     NS         NS         Reserved.                                         
 <25>    ACK_NAK R/W     0x0        0x0        Ack/Nak Disable                                   
                                               Prevents the PCI Express bus from sending Ack and Nak DLLPs.
 <24>    FCD     R/W     0x0        0x0        Flow Control Disable                              
                                               Prevents the PCI Express bus from sending FC DLLPs.
 <23:0>  ILST    R/W     0x0        0x0        Insert Lane Skew for Transmit (not supported for x16)
                                               Causes skew between lanes for test purposes. There are three
                                               bits per Lane. The value is in units of one symbol time. For
                                               example, the value 010b for a Lane forces a skew of two symbol
                                               times for that Lane. The maximum skew value for any Lane is 5
                                               symbol times.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG454
 * 
 *  PCIE_CFG454 = Four hundred fifty-fifth 32-bits of PCIE type 1 config space
 *  (Symbol Number Register)
 * 
$PCIERC(0..2)_CFG454   Address=(0x20000000718+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:24> NS     RAZ     NS         NS         Reserved.                                         
 <23:19> TMANLT R/W     0x0        0x0        Timer Modifier for Ack/Nak Latency Timer          
                                              Increases the timer value for the Ack/Nak latency timer, in
                                              increments of 64 clock cycles.
 <18:14> TMRT   R/W     0x8        0x8        Timer Modifier for Replay Timer                   
                                              Increases the timer value for the replay timer, in increments
                                              of 64 clock cycles.
 <13:8>  NS     RAZ     NS         NS         Reserved.                                         
 <7:0>   MFUNCN R/W     0x0        0x0        Max Number of Functions Supported                 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG455
 * 
 *  PCIE_CFG455 = Four hundred fifty-sixth 32-bits of PCIE type 1 config space
 *  (Symbol Timer Register/Filter Mask Register 1)
 * 
$PCIERC(0..2)_CFG455   Address=(0x2000000071C+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field           Field   Reset      Typical    Field                                             
 Pos     Name            Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31>    M_CFG0_FILT     R/W     0x0        0x0        Mask filtering of received Configuration Requests (RC mode only)
 <30>    M_IO_FILT       R/W     0x0        0x0        Mask filtering of received I/O Requests (RC mode only)
 <29>    MSG_CTRL        R/W     0x0        0x0        Message Control                                   
                                                       The application must not change this field.
 <28>    M_CPL_ECRC_FILT R/W     0x0        0x0        Mask ECRC error filtering for Completions         
 <27>    M_ECRC_FILT     R/W     0x0        0x0        Mask ECRC error filtering                         
 <26>    M_CPL_LEN_ERR   R/W     0x0        0x0        Mask Length mismatch error for received Completions
 <25>    M_CPL_ATTR_ERR  R/W     0x0        0x0        Mask Attributes mismatch error for received Completions
 <24>    M_CPL_TC_ERR    R/W     0x0        0x0        Mask Traffic Class mismatch error for received Completions
 <23>    M_CPL_FUN_ERR   R/W     0x0        0x0        Mask function mismatch error for received Completions
 <22>    M_CPL_RID_ERR   R/W     0x0        0x0        Mask Requester ID mismatch error for received Completions
 <21>    M_CPL_TAG_ERR   R/W     0x0        0x0        Mask Tag error rules for received Completions     
 <20>    M_LK_FILT       R/W     0x0        0x0        Mask Locked Request filtering                     
 <19>    M_CFG1_FILT     R/W     0x0        0x0        Mask Type 1 Configuration Request filtering       
 <18>    M_BAR_MATCH     R/W     0x0        0x0        Mask BAR match filtering                          
 <17>    M_POIS_FILT     R/W     0x1        0x1        Mask poisoned TLP filtering                       
 <16>    M_FUN           R/W     0x0        0x0        Mask function                                     
 <15>    DFCWT           R/W     0x0        0x0        Disable FC Watchdog Timer                         
 <14:11> NS              RAZ     NS         NS         Reserved.                                         
 <10:0>  SKPIV           R/W     0x280      0x280      SKP Interval Value                                
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG456
 * 
 *  PCIE_CFG456 = Four hundred fifty-seventh 32-bits of PCIE type 1 config space
 *  (Filter Mask Register 2)
 * 
$PCIERC(0..2)_CFG456   Address=(0x20000000720+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field          Field   Reset      Typical    Field                                             
 Pos     Name           Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:4>  NS             RAZ     NS         NS         Reserved.                                         
 <3>     M_HANDLE_FLUSH R/W     0x0        0x0        Mask Core Filter to handle flush request          
 <2>     M_DABORT_4UCPL R/W     0x0        0x0        Mask DLLP abort for unexpected CPL                
 <1>     M_VEND1_DRP    R/W     0x0        0x0        Mask Vendor MSG Type 1 dropped silently           
 <0>     M_VEND0_DRP    R/W     0x0        0x0        Mask Vendor MSG Type 0 dropped with UR error reporting.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG458
 * 
 *  PCIE_CFG458 = Four hundred fifty-ninth 32-bits of PCIE type 1 config space
 *  (Debug Register 0)
 * 
$PCIERC(0..2)_CFG458   Address=(0x20000000728+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field        Field   Reset      Typical    Field                                             
 Pos     Name         Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  DBG_INFO_L32 RO/H    0x0        0x0        The value on cxpl_debug_info[31:0].               
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG459
 * 
 *  PCIE_CFG459 = Four hundred sixtieth 32-bits of PCIE type 1 config space
 *  (Debug Register 1)
 * 
$PCIERC(0..2)_CFG459   Address=(0x2000000072C+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field        Field   Reset      Typical    Field                                             
 Pos     Name         Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  DBG_INFO_U32 RO/H    0x0        0x0        The value on cxpl_debug_info[63:32].              
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG460
 * 
 *  PCIE_CFG460 = Four hundred sixty-first 32-bits of PCIE type 1 config space
 *  (Transmit Posted FC Credit Status)
 * 
$PCIERC(0..2)_CFG460   Address=(0x20000000730+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:20> NS     RAZ     NS         NS         Reserved.                                         
 <19:12> TPHFCC RO/H    0x0        0x0        Transmit Posted Header FC Credits                 
                                              The Posted Header credits advertised by the receiver at the
                                              other end of the Link, updated with each UpdateFC DLLP.
 <11:0>  TPDFCC RO/H    0x0        0x0        Transmit Posted Data FC Credits                   
                                              The Posted Data credits advertised by the receiver at the other
                                              end of the Link, updated with each UpdateFC DLLP.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG461
 * 
 *  PCIE_CFG461 = Four hundred sixty-second 32-bits of PCIE type 1 config space
 *  (Transmit Non-Posted FC Credit Status)
 * 
$PCIERC(0..2)_CFG461   Address=(0x20000000734+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:20> NS     RAZ     NS         NS         Reserved.                                         
 <19:12> TCHFCC RO/H    0x0        0x0        Transmit Non-Posted Header FC Credits             
                                              The Non-Posted Header credits advertised by the receiver at the
                                              other end of the Link, updated with each UpdateFC DLLP.
 <11:0>  TCDFCC RO/H    0x0        0x0        Transmit Non-Posted Data FC Credits               
                                              The Non-Posted Data credits advertised by the receiver at the
                                              other end of the Link, updated with each UpdateFC DLLP.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG462
 * 
 *  PCIE_CFG462 = Four hundred sixty-third 32-bits of PCIE type 1 config space
 *  (Transmit Completion FC Credit Status )
 * 
$PCIERC(0..2)_CFG462   Address=(0x20000000738+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:20> NS     RAZ     NS         NS         Reserved.                                         
 <19:12> TCHFCC RO/H    0x0        0x0        Transmit Completion Header FC Credits             
                                              The Completion Header credits advertised by the receiver at the
                                              other end of the Link, updated with each UpdateFC DLLP.
 <11:0>  TCDFCC RO/H    0x0        0x0        Transmit Completion Data FC Credits               
                                              The Completion Data credits advertised by the receiver at the
                                              other end of the Link, updated with each UpdateFC DLLP.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG463
 * 
 *  PCIE_CFG463 = Four hundred sixty-fourth 32-bits of PCIE type 1 config space
 *  (Queue Status)
 * 
$PCIERC(0..2)_CFG463   Address=(0x2000000073C+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:3>  NS        RAZ     NS         NS         Reserved.                                         
 <2>     RQNE      RO/H    0x0        0x0        Received Queue Not Empty                          
                                                 Indicates there is data in one or more of the receive buffers.
 <1>     TRBNE     RO/H    0x0        0x0        Transmit Retry Buffer Not Empty                   
                                                 Indicates that there is data in the transmit retry buffer.
 <0>     RTLPFCCNR RO/H    0x0        0x0        Received TLP FC Credits Not Returned              
                                                 Indicates that the PCI Express bus has sent a TLP but has not
                                                 yet received an UpdateFC DLLP indicating that the credits for
                                                 that TLP have been restored by the receiver at the other end of
                                                 the Link.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG464
 * 
 *  PCIE_CFG464 = Four hundred sixty-fifth 32-bits of PCIE type 1 config space
 *  (VC Transmit Arbitration Register 1)
 * 
$PCIERC(0..2)_CFG464   Address=(0x20000000740+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:24> WRR_VC3 RO      0x0        0x0        WRR Weight for VC3                                
 <23:16> WRR_VC2 RO      0x0        0x0        WRR Weight for VC2                                
 <15:8>  WRR_VC1 RO      0x0        0x0        WRR Weight for VC1                                
 <7:0>   WRR_VC0 RO      0xf        0xf        WRR Weight for VC0                                
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG465
 * 
 *  PCIE_CFG465 = Four hundred sixty-sixth 32-bits of config space
 *  (VC Transmit Arbitration Register 2)
 * 
$PCIERC(0..2)_CFG465   Address=(0x20000000744+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:24> WRR_VC7 RO      0x0        0x0        WRR Weight for VC7                                
 <23:16> WRR_VC6 RO      0x0        0x0        WRR Weight for VC6                                
 <15:8>  WRR_VC5 RO      0x0        0x0        WRR Weight for VC5                                
 <7:0>   WRR_VC4 RO      0x0        0x0        WRR Weight for VC4                                
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG466
 * 
 *  PCIE_CFG466 = Four hundred sixty-seventh 32-bits of PCIE type 1 config space
 *  (VC0 Posted Receive Queue Control)
 * 
$PCIERC(0..2)_CFG466   Address=(0x20000000748+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field          Field   Reset      Typical    Field                                             
 Pos     Name           Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31>    RX_QUEUE_ORDER R/W     0x0        0x0        "VC Ordering for Receive Queues                   
                                                      Determines the VC ordering rule for the receive queues, used
                                                      only in the segmented-buffer configuration,
                                                      writable through PEM#_CFG_WR:
                                                      o 1: Strict ordering, higher numbered VCs have higher priority
                                                      o 0: Round robin
                                                      However, the application must not change this field."
 <30>    TYPE_ORDERING  R/W     0x1        0x1        "TLP Type Ordering for VC0                        
                                                      Determines the TLP type ordering rule for VC0 receive queues,
                                                      used only in the segmented-buffer configuration, writable
                                                      through PEM#_CFG_WR:
                                                      o 1: Ordering of received TLPs follows the rules in
                                                      PCI Express Base Specification
                                                      o 0: Strict ordering for received TLPs: Posted, then
                                                      Completion, then Non-Posted
                                                      However, the application must not change this field."
 <29:24> NS             RAZ     NS         NS         Reserved.                                         
 <23:21> QUEUE_MODE     R/W     0x2        0x2        "VC0 Posted TLP Queue Mode                        
                                                      The operating mode of the Posted receive queue for VC0, used
                                                      only in the segmented-buffer configuration, writable through
                                                      PEM#_CFG_WR.
                                                      However, the application must not change this field.
                                                      Only one bit can be set at a time:
                                                      o Bit 23: Bypass
                                                      o Bit 22: Cut-through
                                                      o Bit 21: Store-and-forward"
 <20>    NS             RAZ     NS         NS         Reserved.                                         
 <19:12> HEADER_CREDITS R/W     0x20       0x20       "VC0 Posted Header Credits                        
                                                      The number of initial Posted header credits for VC0, used for
                                                      all receive queue buffer configurations.
                                                      This field is writable through PEM#_CFG_WR.
                                                      However, the application must not change this field."
 <11:0>  DATA_CREDITS   R/W     0x40       0x40       "VC0 Posted Data Credits                          
                                                      The number of initial Posted data credits for VC0, used for all
                                                      receive queue buffer configurations.
                                                      This field is writable through PEM#_CFG_WR.
                                                      However, the application must not change this field."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG467
 * 
 *  PCIE_CFG467 = Four hundred sixty-eighth 32-bits of PCIE type 1 config space
 *  (VC0 Non-Posted Receive Queue Control)
 * 
$PCIERC(0..2)_CFG467   Address=(0x2000000074C+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field          Field   Reset      Typical    Field                                             
 Pos     Name           Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:24> NS             RAZ     NS         NS         Reserved.                                         
 <23:21> QUEUE_MODE     R/W     0x2        0x2        "VC0 Non-Posted TLP Queue Mode                    
                                                      The operating mode of the Non-Posted receive queue for VC0,
                                                      used only in the segmented-buffer configuration, writable
                                                      through PEM#_CFG_WR.
                                                      Only one bit can be set at a time:
                                                      o Bit 23: Bypass
                                                      o Bit 22: Cut-through
                                                      o Bit 21: Store-and-forward
                                                      However, the application must not change this field."
 <20>    NS             RAZ     NS         NS         Reserved.                                         
 <19:12> HEADER_CREDITS R/W     0x1f       0x1f       "VC0 Non-Posted Header Credits                    
                                                      The number of initial Non-Posted header credits for VC0, used
                                                      for all receive queue buffer configurations.
                                                      This field is writable through PEM#_CFG_WR.
                                                      However, the application must not change this field."
 <11:0>  DATA_CREDITS   R/W     0xd        0xd        "VC0 Non-Posted Data Credits                      
                                                      The number of initial Non-Posted data credits for VC0, used for
                                                      all receive queue buffer configurations.
                                                      This field is writable through PEM#_CFG_WR.
                                                      However, the application must not change this field."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG468
 * 
 *  PCIE_CFG468 = Four hundred sixty-ninth 32-bits of PCIE type 1 config space
 *  (VC0 Completion Receive Queue Control)
 * 
$PCIERC(0..2)_CFG468   Address=(0x20000000750+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field          Field   Reset      Typical    Field                                             
 Pos     Name           Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:24> NS             RAZ     NS         NS         Reserved.                                         
 <23:21> QUEUE_MODE     R/W     0x2        0x2        "VC0 Completion TLP Queue Mode                    
                                                      The operating mode of the Completion receive queue for VC0,
                                                      used only in the segmented-buffer configuration, writable
                                                      through PEM#_CFG_WR.
                                                      Only one bit can be set at a time:
                                                      o Bit 23: Bypass
                                                      o Bit 22: Cut-through
                                                      o Bit 21: Store-and-forward
                                                      However, the application must not change this field."
 <20>    NS             RAZ     NS         NS         Reserved.                                         
 <19:12> HEADER_CREDITS R/W     0x60       0x60       "VC0 Completion Header Credits                    
                                                      The number of initial Completion header credits for VC0, used
                                                      for all receive queue buffer configurations.
                                                      This field is writable through PEM#_CFG_WR.
                                                      However, the application must not change this field."
 <11:0>  DATA_CREDITS   R/W     0x80       0x80       "VC0 Completion Data Credits                      
                                                      The number of initial Completion data credits for VC0, used for
                                                      all receive queue buffer configurations.
                                                      This field is writable through PEM#_CFG_WR.
                                                      However, the application must not change this field."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG490
 * 
 *  PCIE_CFG490 = Four hundred ninety-first 32-bits of PCIE type 1 config space
 *  (VC0 Posted Buffer Depth)
 * 
$PCIERC(0..2)_CFG490   Address=(0x200000007A8+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field        Field   Reset      Typical    Field                                             
 Pos     Name         Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:26> NS           RAZ     NS         NS         Reserved.                                         
 <25:16> HEADER_DEPTH R/W     0x26       0x26       "VC0 Posted Header Queue Depth                    
                                                    Sets the number of entries in the Posted header queue for VC0
                                                    when using the segmented-buffer configuration, writable through
                                                    PEM#_CFG_WR.
                                                    However, the application must not change this field."
 <15:14> NS           RAZ     NS         NS         Reserved.                                         
 <13:0>  DATA_DEPTH   R/W     0xc8       0xc8       "VC0 Posted Data Queue Depth                      
                                                    Sets the number of entries in the Posted data queue for VC0
                                                    when using the segmented-buffer configuration, writable
                                                    through PEM#_CFG_WR.
                                                    However, the application must not change this field."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG491
 * 
 *  PCIE_CFG491 = Four hundred ninety-second 32-bits of PCIE type 1 config space
 *  (VC0 Non-Posted Buffer Depth)
 * 
$PCIERC(0..2)_CFG491   Address=(0x200000007AC+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field        Field   Reset      Typical    Field                                             
 Pos     Name         Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:26> NS           RAZ     NS         NS         Reserved.                                         
 <25:16> HEADER_DEPTH R/W     0x25       0x25       "VC0 Non-Posted Header Queue Depth                
                                                    Sets the number of entries in the Non-Posted header queue for
                                                    VC0 when using the segmented-buffer configuration, writable
                                                    through PEM#_CFG_WR.
                                                    However, the application must not change this field."
 <15:14> NS           RAZ     NS         NS         Reserved.                                         
 <13:0>  DATA_DEPTH   R/W     0x61       0x61       "VC0 Non-Posted Data Queue Depth                  
                                                    Sets the number of entries in the Non-Posted data queue for VC0
                                                    when using the segmented-buffer configuration, writable
                                                    through PEM#_CFG_WR.
                                                    However, the application must not change this field."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG492
 * 
 *  PCIE_CFG492 = Four hundred ninety-third 32-bits of PCIE type 1 config space
 *  (VC0 Completion Buffer Depth)
 * 
$PCIERC(0..2)_CFG492   Address=(0x200000007B0+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field        Field   Reset      Typical    Field                                             
 Pos     Name         Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:26> NS           RAZ     NS         NS         Reserved.                                         
 <25:16> HEADER_DEPTH R/W     0x66       0x66       "VC0 Completion Header Queue Depth                
                                                    Sets the number of entries in the Completion header queue for
                                                    VC0 when using the segmented-buffer configuration, writable
                                                    through PEM#_CFG_WR.
                                                    However, the application must not change this field."
 <15:14> NS           RAZ     NS         NS         Reserved.                                         
 <13:0>  DATA_DEPTH   R/W     0x18e      0x18e      "VC0 Completion Data Queue Depth                  
                                                    Sets the number of entries in the Completion data queue for VC0
                                                    when using the segmented-buffer configuration, writable
                                                    through PEM#_CFG_WR.
                                                    However, the application must not change this field."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG515
 * 
 *  PCIE_CFG515 = Five hundred sixteenth 32-bits of PCIE type 1 config space
 *  (Port Logic Register (Gen2))
 * 
$PCIERC(0..2)_CFG515   Address=(0x2000000080C+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:21> NS    RAZ     NS         NS         Reserved.                                         
 <20>    S_D_E R/W     0x0        0x0        SEL_DE_EMPHASIS                                   
                                             Used to set the de-emphasis level for upstream ports.
 <19>    CTCRB R/W     0x0        0x0        Config Tx Compliance Receive Bit                  
                                             When set to 1, signals LTSSM to transmit TS ordered sets
                                             with the compliance receive bit assert (equal to 1).
 <18>    CPYTS R/W     0x0        0x0        Config PHY Tx Swing                               
                                             Indicates the voltage level the PHY should drive. When set to
                                             1, indicates Full Swing. When set to 0, indicates Low Swing
 <17>    DSC   R/W/H   0x0        0x0        Directed Speed Change                             
                                             o a write of '1' will initiate a speed change
                                             o always reads a zero
 <16:8>  LE    R/W     0x4        0x4        Lane Enable                                       
                                             Indicates the number of lanes to check for exit from electrical
                                             idle in Polling.Active and Polling.Compliance. 1 = x1, 2 = x2,
                                             etc. Used to limit the maximum link width to ignore broken
                                             lanes that detect a receiver, but will not exit electrical
                                             idle and
                                             would otherwise prevent a valid link from being configured.
 <7:0>   N_FTS R/W     0x30       0x30       N_FTS                                             
                                             Sets the Number of Fast Training Sequences (N_FTS) that
                                             the core advertises as its N_FTS during GEN2 Link training.
                                             This value is used to inform the Link partner about the PHYs
                                             ability to recover synchronization after a low power state.
                                             Note: Do not set N_FTS to zero; doing so can cause the
                                             LTSSM to go into the recovery state when exiting from
                                             L0s.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG516
 * 
 *  PCIE_CFG516 = Five hundred seventeenth 32-bits of PCIE type 1 config space
 *  (PHY Status Register)
 * 
$PCIERC(0..2)_CFG516   Address=(0x20000000810+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  PHY_STAT RO/H    0x0        0x0        PHY Status                                        
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCIERC_CFG517
 * 
 *  PCIE_CFG517 = Five hundred eighteenth 32-bits of PCIE type 1 config space
 *  (PHY Control Register)
 * 
$PCIERC(0..2)_CFG517   Address=(0x20000000814+a*0x100000000)   Bus=(PCICONFIGRC)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  PHY_CTRL R/W     0x0        0x0        PHY Control                                       
-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the pcs.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

 * 
 * PCS_MR_CONTROL_REG = Control Register0
 * 
 *  NOTE:
 *  Whenever AN_EN bit[12] is set, Auto negotiation is allowed to happen. The results
 *  of the auto negotiation process set the fields in the AN_RESULTS reg. When AN_EN is not set,
 *  AN_RESULTS reg is don't care. The effective SPD, DUP etc.. get their values
 *  from the pcs_mr_ctrl reg.
 * 
$PCS(0..1)_MR(0..3)_CONTROL_REG   Address=(0x11800B0001000+a*0x8000000+b*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ     NS         NS         Reserved.                                         
 <15>    RESET    R/W/H   0x0        0x0        1=SW Reset, the bit will return to 0 after pcs has
                                                been reset. Takes 32 eclk cycles to reset pcs
 <14>    LOOPBCK1 R/W     0x0        0x0        0=normal operation, 1=loopback. The loopback mode 
                                                will return(loopback) tx data from GMII tx back to
                                                GMII rx interface. The loopback happens in the pcs
                                                module. Auto Negotiation will be disabled even if
                                                the AN_EN bit is set, during loopback
 <13>    SPDLSB   R/W     0x0        0x0        See bit 6 description                             
 <12>    AN_EN    R/W     0x0        0x0        1=AN Enable, 0=AN Disable                         
 <11>    PWR_DN   R/W     0x1        0x0        1=Power Down(HW reset), 0=Normal operation        
 <10>    NS       RAZ     NS         NS         Reserved.                                         
 <9>     RST_AN   R/W/H   0x0        0x0        If bit 12 is set and bit 3 of status reg is 1     
                                                Auto Negotiation begins. Else,SW writes are ignored
                                                and this bit remians at 0. This bit clears itself
                                                to 0, when AN starts.
 <8>     DUP      R/W     0x1        0x1        1=full duplex, 0=half duplex; effective only if AN
                                                disabled. If status register bits [15:9] and and
                                                extended status reg bits [15:12] allow only one
                                                duplex mode|, this bit will correspond to that
                                                value and any attempt to write will be ignored.
 <7>     COLTST   R/W     0x0        0x0        1=enable COL signal test, 0=disable test          
                                                During COL test, the COL signal will reflect the
                                                GMII TX_EN signal with less than 16BT delay
 <6>     SPDMSB   R/W     0x1        0x1        {<6>, <13>}Link Speed effective only if AN disabled
                                                0    0  10Mb/s
                                                0    1  100Mb/s
                                                1    0  1000Mb/s
                                                1    1  NS
 <5>     UNI      R/W     0x0        0x0        Unidirectional (Std 802.3-2005, Clause 66.2)      
                                                This bit will override the AN_EN bit and disable
                                                auto-negotiation variable mr_an_enable, when set
                                                Used in both 1000Base-X and SGMII modes
 <4:0>   NS       RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCS_MR_STATUS_REG = Status Register1
 * 
 *  Bits [15:9] in the Status Register indicate ability to operate as per those signalling
 *  specification,
 *  when misc ctl reg MAC_PHY bit is set to MAC mode. Bits [15:9] will all, always read 1'b0,
 *  indicating
 *  that the chip cannot operate in the corresponding modes.
 *  Bit [4] RM_FLT is a don't care when the selected mode is SGMII.
 *  Attribute: -dv_force_no_compare=UVM.
 * 
$PCS(0..1)_MR(0..3)_STATUS_REG   Address=(0x11800B0001008+a*0x8000000+b*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ     NS         NS         Reserved.                                         
 <15>    HUN_T4   RO      0x0        0x0        1 means 100Base-T4 capable                        
 <14>    HUN_XFD  RO      0x0        0x0        1 means 100Base-X Full Duplex                     
 <13>    HUN_XHD  RO      0x0        0x0        1 means 100Base-X Half Duplex                     
 <12>    TEN_FD   RO      0x0        0x0        1 means 10Mb/s Full Duplex                        
 <11>    TEN_HD   RO      0x0        0x0        1 means 10Mb/s Half Duplex                        
 <10>    HUN_T2FD RO      0x0        0x0        1 means 100Base-T2 Full Duplex                    
 <9>     HUN_T2HD RO      0x0        0x0        1 means 100Base-T2 Half Duplex                    
 <8>     EXT_ST   RO      0x1        0x1        1 means extended status info in reg15             
 <7>     NS       RAZ     0x0        0x0        Reserved.                                         
 <6>     PRB_SUP  RO      0x1        0x1        1 means able to work without preamble bytes at the
                                                beginning of frames. 0 means not able to accept
                                                frames without preamble bytes preceding them.
 <5>     AN_CPT   RO      0x0        0x0        1 means Auto Negotiation is complete and the      
                                                contents of the an_results_reg are valid.
 <4>     RM_FLT   RO      0x0        0x0        Set to 1 when remote flt condition occurs. This bit
                                                implements a latching Hi behavior. It is cleared by
                                                SW read of this reg or when reset bit [15] in
                                                Control Reg is asserted.
                                                See an adv reg[13:12] for flt conditions
 <3>     AN_ABIL  RO      0x1        0x1        1 means Auto Negotiation capable                  
 <2>     LNK_ST   RO      0x0        0x1        1=link up, 0=link down. Set during AN process     
                                                Set whenever XMIT=DATA. Latching Lo behavior when
                                                link goes down. Link down value of the bit stays
                                                low until SW reads the reg.
 <1>     NS       RAZ     0x0        0x0        Reserved.                                         
 <0>     EXTND    RO      0x0        0x0        Always 0, no extended capability regs present     
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCS_AN_ADV_REG = AN Advertisement Register4
 * 
 *  
 * 
$PCS(0..1)_AN(0..3)_ADV_REG   Address=(0x11800B0001010+a*0x8000000+b*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS      RAZ     NS         NS         Reserved.                                         
 <15>    NP      RO/H    0x0        0x0        Always 0, no next page capability supported       
 <14>    NS      RAZ     0x0        0x0        Reserved.                                         
 <13:12> REM_FLT R/W/H   0x0        0x0        {<13>,<12>}                                       
                                               0    0  Link OK  XMIT=DATA
                                               0    1  Link failure (loss of sync, XMIT!= DATA)
                                               1    0  local device Offline
                                               1    1  AN Error failure to complete AN
                                               AN Error is set if resolution function
                                               precludes operation with link partner
 <11:9>  NS      RAZ     0x0        0x0        reserved                                          
 <8:7>   PAUSE   R/W     0x0        0x0        {<8>, <7>} Pause frame flow capability across link
                                               Exchanged during Auto Negotiation
                                               0    0  No Pause
                                               0    1  Symmetric pause
                                               1    0  Asymmetric Pause
                                               1    1  Both symm and asymm pause to local device
 <6>     HFD     R/W     0x1        0x1        1 means local device Half Duplex capable          
 <5>     FD      R/W     0x1        0x1        1 means local device Full Duplex capable          
 <4:0>   NS      RAZ     0x0        0x0        reserved                                          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCS_AN_LP_ABIL_REG = AN link Partner Ability Register5
 * 
 *  as per IEEE802.3 Clause 37
 * 
$PCS(0..1)_AN(0..3)_LP_ABIL_REG   Address=(0x11800B0001018+a*0x8000000+b*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS      RAZ     NS         NS         Reserved.                                         
 <15>    NP      RO      0x0        0x0        1=lp next page capable, 0=lp not next page capable
 <14>    ACK     RO      0x0        NS         1=Acknowledgement received                        
 <13:12> REM_FLT RO      0x0        0x0        {<13>,<12>} Link Partner's link status            
                                               0    0  Link OK
                                               0    1  Offline
                                               1    0  Link failure
                                               1    1  AN Error
 <11:9>  NS      RAZ     0x0        0x0        Reserved.                                         
 <8:7>   PAUSE   RO      0x0        0x0        {<8>, <7>} Link Partner Pause setting             
                                               0    0  No Pause
                                               0    1  Symmetric pause
                                               1    0  Asymmetric Pause
                                               1    1  Both symm and asymm pause to local device
 <6>     HFD     RO      0x0        0x0        1 means link partner Half Duplex capable          
 <5>     FD      RO      0x0        0x0        1 means link partner Full Duplex capable          
 <4:0>   NS      RAZ     0x0        0x0        reserved                                          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCS_AN_RESULTS_REG = AN Results Register
 * 
 *  NOTE:
 *  an_results_reg is don't care when AN_OVRD is set to 1. If AN_OVRD=0 and AN_CPT=1
 *  the an_results_reg is valid.
 *  Attribute: -dv_force_no_compare=UVM.
 * 
$PCS(0..1)_AN(0..3)_RESULTS_REG   Address=(0x11800B0001020+a*0x8000000+b*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:7>  NS      RAZ     NS         NS         Reserved.                                         
 <6:5>   PAUSE   RO      0x0        0x0        {<6>, <5>} PAUSE Selection (Don't care for SGMII) 
                                               0    0  Disable Pause, TX and RX
                                               0    1  Enable pause frames RX only
                                               1    0  Enable Pause frames TX only
                                               1    1  Enable pause frames TX and RX
 <4:3>   SPD     RO      0x0        0x0        {<4>, <3>} Link Speed Selection                   
                                               0    0  10Mb/s
                                               0    1  100Mb/s
                                               1    0  1000Mb/s
                                               1    1  NS
 <2>     AN_CPT  RO      0x0        0x1        1=AN Completed, 0=AN not completed or failed      
 <1>     DUP     RO      0x0        0x0        1=Full Duplex, 0=Half Duplex                      
 <0>     LINK_OK RO      0x0        0x0        1=Link up(OK), 0=Link down                        
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCS_AN_EXT_ST_REG = AN Extended Status Register15
 * 
 *  as per IEEE802.3 Clause 22
 * 
$PCS(0..1)_AN(0..3)_EXT_ST_REG   Address=(0x11800B0001028+a*0x8000000+b*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ     NS         NS         Reserved.                                         
 <15>    THOU_XFD RO/H    0x1        0x1        1 means PHY is 1000BASE-X Full Dup capable        
 <14>    THOU_XHD RO/H    0x1        0x1        1 means PHY is 1000BASE-X Half Dup capable        
 <13>    THOU_TFD RO/H    0x0        0x0        1 means PHY is 1000BASE-T Full Dup capable        
 <12>    THOU_THD RO/H    0x0        0x0        1 means PHY is 1000BASE-T Half Dup capable        
 <11:0>  NS       RO      0x0        0x0        Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCS_LINK_TIMER_COUNT_REG = 1.6ms nominal link timer register
 * 
 *  
 * 
$PCS(0..1)_LINK(0..3)_TIMER_COUNT_REG   Address=(0x11800B0001040+a*0x8000000+b*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:0>  COUNT R/W     0x446      NS         (core clock period times 1024) times "COUNT" should
                                             be 1.6ms(SGMII)/10ms(otherwise) which is the link
                                             timer used in auto negotiation.
                                             Reset assums a 700MHz eclk for 1.6ms link timer
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCS_TX_RX_POLARITY_REG = TX_RX polarity reg
 * 
 *  Note:
 *  r_tx_rx_polarity_reg bit [2] will show correct polarity needed on the link receive path after
 *  code grp synchronization is achieved.
 * 
$PCS(0..1)_TX_RX(0..3)_POLARITY_REG   Address=(0x11800B0001048+a*0x8000000+b*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ     NS         NS         Reserved.                                         
 <3>     RXOVRD   R/W     0x0        0x0        When 0, <2> determines polarity                   
                                                when 1, <1> determines polarity
 <2>     AUTORXPL RO/H    0x0        0x0        Auto RX polarity detected. 1=inverted, 0=normal   
                                                This bit always represents the correct rx polarity
                                                setting needed for successful rx path operartion,
                                                once a successful code group sync is obtained
 <1>     RXPLRT   R/W     0x0        0x0        1 is inverted polarity, 0 is normal polarity      
 <0>     TXPLRT   R/W     0x0        0x0        1 is inverted polarity, 0 is normal polarity      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCS_RX_SYNC_REG = Code Group synchronization reg
 * 
 *  
 * 
$PCS(0..1)_RX(0..3)_SYNC_REG   Address=(0x11800B0001050+a*0x8000000+b*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ     NS         NS         Reserved.                                         
 <1>     SYNC     RO      0x0        0x0        1 means code group synchronization achieved       
 <0>     BIT_LOCK RO      0x0        0x0        1 means bit lock achieved                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCS_RX_STATES_REG = RX State Machines states register
 * 
 *  
 * 
$PCS(0..1)_RX(0..3)_STATES_REG   Address=(0x11800B0001058+a*0x8000000+b*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ     NS         NS         Reserved.                                         
 <15>    RX_BAD   RO      0x0        0x0        Receive state machine in an illegal state         
 <14:10> RX_ST    RO/H    0x0        0x0        Receive state machine state                       
 <9>     SYNC_BAD RO      0x0        0x0        Receive synchronization SM in an illegal state    
 <8:5>   SYNC     RO/H    0x0        0x0        Receive synchronization SM state                  
 <4>     AN_BAD   RO      0x0        0x0        Auto Negotiation state machine in an illegal state
 <3:0>   AN_ST    RO/H    0x0        0x0        Auto Negotiation state machine state              
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCS_TX_STATES_REG = TX State Machines states register
 * 
 *  
 * 
$PCS(0..1)_TX(0..3)_STATES_REG   Address=(0x11800B0001060+a*0x8000000+b*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:7>  NS     RAZ     NS         NS         Reserved.                                         
 <6:5>   XMIT   RO/H    0x0        NS         0=undefined, 1=config, 2=idle, 3=data             
 <4>     TX_BAD RO      0x0        0x0        Xmit state machine in a bad state                 
 <3:0>   ORD_ST RO/H    0x0        0x0        Xmit ordered set state machine state              
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCS_SGM_AN_ADV_REG
 * 
 *  SGMII AN Advertisement Register (sent out as tx_config_reg)
 *  NOTE: The SGMII AN Advertisement Register above will be sent during Auto Negotiation if the
 *  MAC_PHY mode bit in misc_ctl_reg
 *  is set (1=PHY mode). If the bit is not set (0=MAC mode), the tx_config_reg[14] becomes ACK bit
 *  and [0] is always 1.
 *  All other bits in tx_config_reg sent will be 0. The PHY dictates the Auto Negotiation results.
 * 
$PCS(0..1)_SGM(0..3)_AN_ADV_REG   Address=(0x11800B0001068+a*0x8000000+b*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15>    LINK  R/W     0x0        0x1        Link status 1 Link Up, 0 Link Down                
 <14>    ACK   RO      0x0        0x0        Auto negotiation ack                              
 <13>    NS    RAZ     0x0        NS         Reserved for future use                           
 <12>    DUP   R/W     0x1        0x1        Duplex mode 1=full duplex, 0=half duplex          
 <11:10> SPEED R/W     0x2        0x2        Link Speed                                        
                                             0    0  10Mb/s
                                             0    1  100Mb/s
                                             1    0  1000Mb/s
                                             1    1  NS
 <9:1>   NS    RAZ     0x0        NS         Reserved for future use                           
 <0>     ONE   RO      0x1        0x1        Always set to match tx_config_reg<0>              
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCS_SGM_LP_ADV_REG
 * 
 *  SGMII LP Advertisement Register (received as rx_config_reg)
 * 
$PCS(0..1)_SGM(0..3)_LP_ADV_REG   Address=(0x11800B0001070+a*0x8000000+b*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15>    LINK  RO      0x0        0x1        Link status 1 Link Up, 0 Link Down                
 <14>    NS    RO      0x0        NS         Reserved for auto negotiation ack                 
 <13>    NS    RAZ     0x0        NS         Reserved for future use                           
 <12>    DUP   RO      0x0        0x1        Duplex mode 1=full duplex, 0=half duplex          
 <11:10> SPEED RO      0x0        0x2        Link Speed                                        
                                             0    0  10Mb/s
                                             0    1  100Mb/s
                                             1    0  1000Mb/s
                                             1    1  NS
 <9:1>   NS    RAZ     0x0        NS         Reserved for future use                           
 <0>     ONE   RO      0x1        0x1        Always set to match tx_config_reg<0>              
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCS_MISC_CTL_REG
 * 
 *  SGMII Misc Control Register
 *  SGMII bit [12] is really a misnomer, it is a decode  of pi_qlm_cfg pins to indicate SGMII or
 *  1000Base-X modes.
 *  Note: MODE bit
 *  When MODE=1,  1000Base-X mode is selected. Auto negotiation will follow IEEE 802.3 clause 37.
 *  When MODE=0,  SGMII mode is selected and the following note will apply.
 *  Repeat note from SGM_AN_ADV register
 *  NOTE: The SGMII AN Advertisement Register above will be sent during Auto Negotiation if the
 *  MAC_PHY mode bit in misc_ctl_reg
 *  is set (1=PHY mode). If the bit is not set (0=MAC mode), the tx_config_reg[14] becomes ACK bit
 *  and [0] is always 1.
 *  All other bits in tx_config_reg sent will be 0. The PHY dictates the Auto Negotiation results.
 * 
$PCS(0..1)_MISC(0..3)_CTL_REG   Address=(0x11800B0001078+a*0x8000000+b*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:12> NS       RAZ     NS         NS         Reserved.                                         
 <11>    GMXENO   R/W     0x0        0x0        GMX Enable override. When set to 1, forces GMX to 
                                                appear disabled. The enable/disable status of GMX
                                                is checked only at SOP of every packet.
 <10>    LOOPBCK2 R/W     0x0        0x0        Sets external loopback mode to return rx data back
                                                out via tx data path. 0=no loopback, 1=loopback
 <9>     MAC_PHY  R/W     0x0        0x0        0=MAC, 1=PHY decides the tx_config_reg value to be
                                                sent during auto negotiation.
                                                See SGMII spec ENG-46158 from CISCO
 <8>     MODE     R/W     0x0        0x0        0=SGMII or 1= 1000 Base X                         
 <7>     AN_OVRD  R/W     0x0        0x0        0=disable, 1= enable over ride AN results         
                                                Auto negotiation is allowed to happen but the
                                                results are ignored when set. Duplex and Link speed
                                                values are set from the pcs_mr_ctrl reg
 <6:0>   SAMP_PT  R/W     0x1        NS         "Byte# in elongated frames for 10/100Mb/s operation
                                                for data sampling on RX side in PCS.
                                                Recommended values are 0x5 for 100Mb/s operation
                                                and 0x32 for 10Mb/s operation.
                                                For 10Mb/s operaton this field should be set to a
                                                value less than 99 and greater than 0. If set out
                                                of this range a value of 50 will be used for actual
                                                sampling internally without affecting the CSR field
                                                For 100Mb/s operation this field should be set to a
                                                value less than 9 and greater than 0. If set out of
                                                this range a value of 5 will be used for actual
                                                sampling internally without affecting the CSR field"
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCS_INT_REG
 * 
 *  PCS Interrupt Register
 *  NOTE: RXERR and TXERR conditions to be discussed with Dan before finalising
 *  DBG_SYNC interrupt fires when code group synchronization state machine makes a transition from
 *  SYNC_ACQUIRED_1 state to SYNC_ACQUIRED_2 state(See IEEE 802.3-2005 figure 37-9). It is an
 *  indication that a bad code group
 *  was received after code group synchronizaton was achieved. This interrupt should be disabled
 *  during normal link operation.
 *  Use it as a debug help feature only.
 * 
$PCS(0..1)_INT(0..3)_REG   Address=(0x11800B0001080+a*0x8000000+b*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:13> NS       RAZ     NS         NS         Reserved.                                         
 <12>    DBG_SYNC R/W1C/H 0x0        0x0        Code Group sync failure debug help                
 <11>    DUP      R/W1C/H 0x0        0x0        Set whenever Duplex mode changes on the link      
 <10>    SYNC_BAD R/W1C/H 0x0        0x0        Set by HW whenever rx sync st machine reaches a bad
                                                state. Should never be set during normal operation
 <9>     AN_BAD   R/W1C/H 0x0        0x0        Set by HW whenever AN st machine reaches a bad    
                                                state. Should never be set during normal operation
 <8>     RXLOCK   R/W1C/H 0x0        0x0        Set by HW whenever code group Sync or bit lock    
                                                failure occurs
                                                Cannot fire in loopback1 mode
 <7>     RXBAD    R/W1C/H 0x0        0x0        Set by HW whenever rx st machine reaches a  bad   
                                                state. Should never be set during normal operation
 <6>     RXERR    R/W1C/H 0x0        0x0        Set whenever RX receives a code group error in    
                                                10 bit to 8 bit decode logic
                                                Cannot fire in loopback1 mode
 <5>     TXBAD    R/W1C/H 0x0        0x0        Set by HW whenever tx st machine reaches a bad    
                                                state. Should never be set during normal operation
 <4>     TXFIFO   R/W1C/H 0x0        0x0        Set whenever HW detects a TX fifo overflow        
                                                condition
 <3>     TXFIFU   R/W1C/H 0x0        0x0        Set whenever HW detects a TX fifo underflowflow   
                                                condition
 <2>     AN_ERR   R/W1C/H 0x0        0x0        AN Error, AN resolution function failed           
 <1>     XMIT     R/W1C/H 0x0        0x0        Set whenever HW detects a change in the XMIT      
                                                variable. XMIT variable states are IDLE, CONFIG and
                                                DATA
 <0>     LNKSPD   R/W1C/H 0x0        0x0        Set by HW whenever Link Speed has changed         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCS_INT_EN_REG
 * 
 *  PCS Interrupt Enable Register
 * 
$PCS(0..1)_INT(0..3)_EN_REG   Address=(0x11800B0001088+a*0x8000000+b*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:13> NS          RAZ     NS         NS         Reserved.                                         
 <12>    DBG_SYNC_EN R/W/H   0x0        0x0        Code Group sync failure debug help                
 <11>    DUP         R/W     0x0        0x1        Enable duplex mode changed interrupt              
 <10>    SYNC_BAD_EN R/W     0x0        0x1        Enable rx sync st machine in bad state interrupt  
 <9>     AN_BAD_EN   R/W     0x0        0x1        Enable AN state machine bad state interrupt       
 <8>     RXLOCK_EN   R/W     0x0        0x1        Enable rx code group sync/bit lock failure interrupt
 <7>     RXBAD_EN    R/W     0x0        0x1        Enable rx state machine in bad state interrupt    
 <6>     RXERR_EN    R/W     0x0        0x1        Enable RX error condition interrupt               
 <5>     TXBAD_EN    R/W     0x0        0x1        Enable tx state machine in bad state interrupt    
 <4>     TXFIFO_EN   R/W     0x0        0x1        Enable tx fifo overflow condition interrupt       
 <3>     TXFIFU_EN   R/W     0x0        0x1        Enable tx fifo underflow condition intrrupt       
 <2>     AN_ERR_EN   R/W     0x0        0x1        Enable AN Error condition interrupt               
 <1>     XMIT_EN     R/W     0x0        0x1        Enable XMIT variable state change interrupt       
 <0>     LNKSPD_EN   R/W     0x0        0x1        Enable Link Speed has changed interrupt           
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCS_LOG_ANL_REG
 * 
 *  PCS Logic Analyzer Register
 *  NOTE: Logic Analyzer is enabled with LA_EN for the specified PCS lane only. PKT_SZ is
 *  effective only when LA_EN=1
 *  For normal operation(sgmii or 1000Base-X), this bit must be 0.
 *  See pcsx.csr for xaui logic analyzer mode.
 *  For full description see document at .../rtl/pcs/readme_logic_analyzer.txt
 *  Attribute: -exempt_w1c_w=True.
 * 
$PCS(0..1)_LOG_ANL(0..3)_REG   Address=(0x11800B0001090+a*0x8000000+b*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS        RAZ     NS         NS         Reserved.                                         
 <3>     LAFIFOVFL R/W1C/H 0x0        0x0        1=logic analyser fif overflowed during packetization
                                                 Write 1 to clear this bit
 <2>     LA_EN     R/W/H   0x0        0x0        1= Logic Analyzer enabled, 0=Logic Analyzer disabled
 <1:0>   PKT_SZ    R/W/H   0x0        0x0        {<1>, <0>}  Logic Analyzer Packet Size            
                                                 0    0   Packet size 1k bytes
                                                 0    1   Packet size 4k bytes
                                                 1    0   Packet size 8k bytes
                                                 1    1   Packet size 16k bytes
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCS_SERDES_CRDT_CNT_REG
 * 
 *  PCS SERDES Credit Count
 *  INTERNAL: Do not add this register to the HRM
 *  Attribute: -dv_fc_scratch=a.
 * 
$PCS(0..1)_SERDES_CRDT_CNT(0..3)_REG   Address=(0x11800B00010A0+a*0x8000000+b*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:5>  NS    RAZ     NS         NS         Reserved.                                         
 <4:0>   CNT   R/W     0x10       0x10       PCS to SERDES FIFO credit count                   
                                             Valid range is 1-30
                                             Recommended value is 16 for all full-duplex operations; 12 for half-duplex operation.
                                             Some clock ratios may require a larger setting of 20.
                                             Value of zero will disable TX packet flow on the port
                                             Value of 31   is reserved.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCS_MAC_CRDT_CNT_REG
 * 
 *  PCS MAC Credit Count
 *  INTERNAL: Do not add this register to the HRM
 * 
$PCS(0..1)_MAC_CRDT_CNT(0..3)_REG   Address=(0x11800B00010B0+a*0x8000000+b*0x400)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:5>  NS    RAZ     NS         NS         Reserved.                                         
 <4:0>   CNT   R/W     0x8        0x8        MAC to PCS FIFO credit count                      
                                             Valid range is 1-16
                                             Recommended value is 8 for all full-duplex operations; 4 for half-duplex operation.
                                             Value  of zero  will disable TX packet flow on the port
                                             Values of 17-31 are reserved.
-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the pcsx.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

 * 
 * PCSX_CONTROL1_REG = Control Register1
 * 
 *  
 * 
$PCSX(0..0)_CONTROL1_REG   Address=(0x11800B0000800+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ     NS         NS         Reserved.                                         
 <15>    RESET    R/W/H   0x1        0x0        1=SW PCSX Reset, the bit will return to 0 after pcs
                                                has been reset. Takes 32 eclk cycles to reset pcs
                                                0=Normal operation
 <14>    LOOPBCK1 R/W     0x0        0x0        0=normal operation, 1=internal loopback mode      
                                                xgmii tx data received from gmx tx port is returned
                                                back into gmx, xgmii rx port.
 <13>    SPDSEL1  RO      0x1        0x1        See bit 6 description                             
 <12>    NS       RAZ     NS         NS         Reserved.                                         
 <11>    LO_PWR   R/W     0x1        0x0        1=Power Down(HW reset), 0=Normal operation        
 <10:7>  NS       RAZ     NS         NS         Reserved.                                         
 <6>     SPDSEL0  RO      0x1        0x1        SPDSEL1 and SPDSEL0 are always at 1'b1. Write has 
                                                no effect.
                                                {<6>, <13>}Link Speed selection
                                                1    1   Bits 5:2 select speed
 <5:2>   SPD      RO      0x0        0x0        Always select 10Gb/s, writes have no effect       
 <1:0>   NS       RAZ     NS         NS         Reserved.                                         

Notes:
o70 supports a single RXAUI interface.  The PCSX1 version is not supported and should not be
documented.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCSX_STATUS1_REG = Status Register1
 * 
 *  
 * 
$PCSX(0..0)_STATUS1_REG   Address=(0x11800B0000808+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS      RAZ     NS         NS         Reserved.                                         
 <7>     FLT     RO/H    0x0        0x0        1=Fault condition detected, 0=No fault condition  
                                               This bit is a logical OR of Status2 reg bits 11,10
 <6:3>   NS      RAZ     NS         NS         Reserved.                                         
 <2>     RCV_LNK RO/H    0x0        0x1        1=Receive Link up, 0=Receive Link down            
                                               Latching Low version of r_10gbx_status_reg[12],
                                               Link down status continues until SW read.
 <1>     LPABLE  RO      0x1        0x1        Always set to 1 for Low Power ablility indication 
 <0>     NS      RAZ     NS         NS         Reserved.                                         

Notes:
o70 supports a single RXAUI interface.  The PCSX1 version is not supported and should not be
documented.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCSX_SPD_ABIL_REG = Speed ability register
 * 
 *  
 * 
$PCSX(0..0)_SPD_ABIL_REG   Address=(0x11800B0000810+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:2>  NS       RAZ     NS         NS         Reserved.                                         
 <1>     TENPASST RO      0x0        0x0        Always 0, no 10PASS-TS/2BASE-TL capability support
 <0>     TENGB    RO      0x1        0x1        Always 1, 10Gb/s supported                        

Notes:
o70 supports a single RXAUI interface.  The PCSX1 version is not supported and should not be
documented.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCSX_CONTROL2_REG = Control Register2
 * 
 *  
 * 
$PCSX(0..0)_CONTROL2_REG   Address=(0x11800B0000818+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:2>  NS    RAZ     NS         NS         Reserved.                                         
 <1:0>   TYPE  RO      0x1        0x1        Always 2'b01, 10GBASE-X only supported            
                                             Attribute: -exempt_keyword=True.

Notes:
o70 supports a single RXAUI interface.  The PCSX1 version is not supported and should not be
documented.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCSX_STATUS2_REG = Status Register2
 * 
 *  
 * 
$PCSX(0..0)_STATUS2_REG   Address=(0x11800B0000820+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS      RAZ     NS         NS         Reserved.                                         
 <15:14> DEV     RO      0x2        0x2        Always at 2'b10, means a Device present at the addr
 <13:12> NS      RAZ     NS         NS         Reserved.                                         
 <11>    XMTFLT  RC/H    0x0        0x0        0=No xmit fault, 1=xmit fault. Implements latching
                                               High function until SW read.
 <10>    RCVFLT  RC/H    0x0        0x0        0=No rcv fault, 1=rcv fault. Implements latching  
                                               High function until SW read
 <9:3>   NS      RAZ     NS         NS         Reserved.                                         
 <2>     TENGB_W RO      0x0        0x0        Always 0, no 10GBASE-W capability                 
 <1>     TENGB_X RO      0x1        0x1        Always 1, 10GBASE-X capable                       
 <0>     TENGB_R RO      0x0        0x0        Always 0, no 10GBASE-R capability                 

Notes:
o70 supports a single RXAUI interface.  The PCSX1 version is not supported and should not be
documented.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCSX_10GBX_STATUS_REG = 10gbx_status_reg
 * 
 *  
 * 
$PCSX(0..0)_10GBX_STATUS_REG   Address=(0x11800B0000828+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:13> NS     RAZ     NS         NS         Reserved.                                         
 <12>    ALIGND RO/H    0x0        0x1        1=Lane alignment achieved, 0=Lanes not aligned    
 <11>    PATTST RO      0x0        0x0        Always at 0, no pattern testing capability        
 <10:4>  NS     RAZ     NS         NS         Reserved.                                         
 <3>     L3SYNC RO/H    0x0        0x1        1=Rcv lane 3 code grp synchronized, 0=not sync'ed 
 <2>     L2SYNC RO/H    0x0        0x1        1=Rcv lane 2 code grp synchronized, 0=not sync'ed 
 <1>     L1SYNC RO/H    0x0        0x1        1=Rcv lane 1 code grp synchronized, 0=not sync'ed 
 <0>     L0SYNC RO/H    0x0        0x1        1=Rcv lane 0 code grp synchronized, 0=not sync'ed 

Notes:
o70 supports a single RXAUI interface.  The PCSX1 version is not supported and should not be
documented.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCSX_TX_RX_STATES_REG = Transmit Receive States Register
 * 
 *  
 * 
$PCSX(0..0)_TX_RX_STATES_REG   Address=(0x11800B0000830+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:14> NS       RAZ     NS         NS         Reserved.                                         
 <13>    TERM_ERR R/W1C/H 0x0        0x0        1=Check end function detected error in packet     
                                                terminate ||T|| column or the one after it
 <12>    SYN3BAD  RO/H    0x0        0x0        1=lane 3 code grp sync state machine in bad state 
 <11>    SYN2BAD  RO/H    0x0        0x0        1=lane 2 code grp sync state machine in bad state 
 <10>    SYN1BAD  RO/H    0x0        0x0        1=lane 1 code grp sync state machine in bad state 
 <9>     SYN0BAD  RO/H    0x0        0x0        1=lane 0 code grp sync state machine in bad state 
 <8>     RXBAD    RO/H    0x0        0x0        1=Rcv state machine in a bad state, HW malfunction
 <7:5>   ALGN_ST  RO/H    0x0        NS         Lane alignment state machine state state          
 <4:3>   RX_ST    RO/H    0x0        NS         Receive state machine state state                 
 <2:0>   TX_ST    RO/H    0x0        NS         Transmit state machine state state                

Notes:
o70 supports a single RXAUI interface.  The PCSX1 version is not supported and should not be
documented.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCSX_RX_SYNC_STATES_REG = Receive Sync States Register
 * 
 *  
 * 
$PCSX(0..0)_RX_SYNC_STATES_REG   Address=(0x11800B0000838+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS      RAZ     NS         NS         Reserved.                                         
 <15:12> SYNC3ST RO/H    0x0        NS         Receive lane 3 code grp sync state machine state  
 <11:8>  SYNC2ST RO/H    0x0        NS         Receive lane 2 code grp sync state machine state  
 <7:4>   SYNC1ST RO/H    0x0        NS         Receive lane 1 code grp sync state machine state  
 <3:0>   SYNC0ST RO/H    0x0        NS         Receive lane 0 code grp sync state machine state  

Notes:
o70 supports a single RXAUI interface.  The PCSX1 version is not supported and should not be
documented.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCSX_TX_RX_POLARITY_REG = TX_RX polarity reg
 * 
 *  RX lane polarity vector [3:0] = XOR_RXPLRT<9:6>  ^  {4{RXPLRT<1>}};
 *  TX lane polarity vector [3:0] = XOR_TXPLRT<5:2>  ^  {4{TXPLRT<0>}};
 *  In short keep <1:0> to 2'b00, and use <5:2> and <9:6> fields to define per lane polarities
 * 
$PCSX(0..0)_TX_RX_POLARITY_REG   Address=(0x11800B0000840+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:10> NS         RAZ     NS         NS         Reserved.                                         
 <9:6>   XOR_RXPLRT R/W     0x0        0x0        Per lane RX polarity control                      
 <5:2>   XOR_TXPLRT R/W     0x0        0x0        Per lane TX polarity control                      
 <1>     RXPLRT     R/W     0x0        0x0        1 is inverted polarity, 0 is normal polarity      
 <0>     TXPLRT     R/W     0x0        0x0        1 is inverted polarity, 0 is normal polarity      

Notes:
o70 supports a single RXAUI interface.  The PCSX1 version is not supported and should not be
documented.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCSX_MISC_CTL_REG
 * 
 *  PCSX Misc Control Register
 *  LN_SWAP for XAUI is to simplify interconnection layout between devices
 * 
$PCSX(0..0)_MISC_CTL_REG   Address=(0x11800B0000848+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS      RAZ     NS         NS         Reserved.                                         
 <3>     TX_SWAP R/W     0x0        NS         0=do not swap xaui lanes going out to qlm's       
                                               1=swap lanes 3 <-> 0   and   2 <-> 1
 <2>     RX_SWAP R/W     0x0        NS         0=do not swap xaui lanes coming in from qlm's     
                                               1=swap lanes 3 <-> 0   and   2 <-> 1
 <1>     XAUI    RO/H    NS         NS         1=XAUI mode selected, 0=not XAUI mode selected    
                                               This bit represents pi_qlm1/3_cfg[1:0] pin status
 <0>     GMXENO  R/W     0x0        0x0        GMX port enable override, GMX en/dis status is held
                                               during data packet reception.

Notes:
o70 supports a single RXAUI interface.  The PCSX1 version is not supported and should not be
documented.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCSX_BIT_LOCK_STATUS_REG
 * 
 *  PCSX Bit Lock Status Register
 * 
$PCSX(0..0)_BIT_LOCK_STATUS_REG   Address=(0x11800B0000850+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS      RAZ     NS         NS         Reserved.                                         
 <3>     BITLCK3 RO/H    0x0        NS         Receive Lane 3 bit lock status                    
 <2>     BITLCK2 RO/H    0x0        NS         Receive Lane 2 bit lock status                    
 <1>     BITLCK1 RO/H    0x0        NS         Receive Lane 1 bit lock status                    
 <0>     BITLCK0 RO/H    0x0        NS         Receive Lane 0 bit lock status                    

Notes:
o70 supports a single RXAUI interface.  The PCSX1 version is not supported and should not be
documented.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCSX_INT_REG
 * 
 *  PCSX Interrupt Register
 *  Note: DBG_SYNC is a edge triggered interrupt. When set it indicates PCS Synchronization state
 *  machine in
 *  Figure 48-7 state diagram in IEEE Std 802.3-2005 changes state SYNC_ACQUIRED_1 to
 *  SYNC_ACQUIRED_2
 *  indicating an invalid code group was received on one of the 4 receive lanes.
 *  This interrupt should be always disabled and used only for link problem debugging help.
 * 
$PCSX(0..0)_INT_REG   Address=(0x11800B0000858+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ     NS         NS         Reserved.                                         
 <6>     DBG_SYNC R/W1C/H 0x0        0x0        Code Group sync failure debug help, see Note below
 <5>     ALGNLOS  R/W1C/H 0x0        0x0        Set when XAUI lanes lose alignment                
 <4>     SYNLOS   R/W1C/H 0x0        0x0        Set when Code group sync lost on 1 or more  lanes 
 <3>     BITLCKLS R/W1C/H 0x0        0x0        Set when Bit lock lost on 1 or more xaui lanes    
 <2>     RXSYNBAD R/W1C/H 0x0        0x0        Set when RX code grp sync st machine in bad state 
                                                in one of the 4 xaui lanes
 <1>     RXBAD    R/W1C/H 0x0        0x0        Set when RX state machine in bad state            
 <0>     TXFLT    R/W1C/H 0x0        0x0        None defined at this time, always 0x0             

Notes:
o70 supports a single RXAUI interface.  The PCSX1 version is not supported and should not be
documented.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCSX_INT_EN_REG
 * 
 *  PCSX Interrupt Enable Register
 * 
$PCSX(0..0)_INT_EN_REG   Address=(0x11800B0000860+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:7>  NS          RAZ     NS         NS         Reserved.                                         
 <6>     DBG_SYNC_EN R/W/H   0x0        0x0        Code Group sync failure debug help                
 <5>     ALGNLOS_EN  R/W     0x0        0x1        Enable ALGNLOS interrupt                          
 <4>     SYNLOS_EN   R/W     0x0        0x1        Enable SYNLOS interrupt                           
 <3>     BITLCKLS_EN R/W     0x0        0x1        Enable BITLCKLS interrupt                         
 <2>     RXSYNBAD_EN R/W     0x0        0x1        Enable RXSYNBAD  interrupt                        
 <1>     RXBAD_EN    R/W     0x0        0x1        Enable RXBAD  interrupt                           
 <0>     TXFLT_EN    R/W     0x0        0x1        Enable TXFLT   interrupt                          

Notes:
o70 supports a single RXAUI interface.  The PCSX1 version is not supported and should not be
documented.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCSX_LOG_ANL_REG
 * 
 *  PCSX Logic Analyzer Register
 *  NOTE: Logic Analyzer is enabled with LA_EN for xaui only. PKT_SZ is effective only when
 *  LA_EN=1
 *  For normal operation(xaui), this bit must be 0. The dropped lane is used to send rxc[3:0].
 *  See pcs.csr  for sgmii/1000Base-X logic analyzer mode.
 *  For full description see document at .../rtl/pcs/readme_logic_analyzer.txt
 *  Attribute: -exempt_w1c_w=True.
 * 
$PCSX(0..0)_LOG_ANL_REG   Address=(0x11800B0000868+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:7>  NS        RAZ     NS         NS         Reserved.                                         
 <6>     ENC_MODE  R/W     0x0        0x0        1=send xaui encoded data, 0=send xaui raw data to GMX
                                                 See .../rtl/pcs/readme_logic_analyzer.txt for details
 <5:4>   DROP_LN   R/W     0x0        0x0        "xaui lane# to drop from logic analyzer packets   
                                                 {<5>, <4>}  Drop lane #
                                                 0    0   Drop lane 0 data
                                                 0    1   Drop lane 1 data
                                                 1    0   Drop lane 2 data
                                                 1    1   Drop lane 3 data"
 <3>     LAFIFOVFL R/W1C/H 0x0        0x0        1=logic analyser fif overflowed one or more times 
                                                 during packetization.
                                                 Write 1 to clear this bit
 <2>     LA_EN     R/W     0x0        0x0        1= Logic Analyzer enabled, 0=Logic Analyzer disabled
 <1:0>   PKT_SZ    R/W     0x0        0x0        {<1>, <0>}  Logic Analyzer Packet Size            
                                                 0    0   Packet size 1k bytes
                                                 0    1   Packet size 4k bytes
                                                 1    0   Packet size 8k bytes
                                                 1    1   Packet size 16k bytes

Notes:
o70 supports a single RXAUI interface.  The PCSX1 version is not supported and should not be
documented.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCSX_BIST_STATUS_REG
 * 
 *  PCSX Bist Status Register
 * 
$PCSX(0..0)_BIST_STATUS_REG   Address=(0x11800B0000870+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS          RAZ     NS         NS         Reserved.                                         
 <0>     BIST_STATUS RO      0x0        0x0        1=bist failure, 0=bisted memory ok or bist in progress
                                                   pcsx.tx_sm.drf8x36m1_async_bist

Notes:
o70 supports a single RXAUI interface.  The PCSX1 version is not supported and should not be
documented.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PCSX_SERDES_CRDT_CNT_REG
 * 
 *  PCSX SERDES Credit Count
 *  INTERNAL: Do not add this register to the HRM
 *  Attribute: -dv_fc_scratch=ALL.
 * 
$PCSX(0..0)_SERDES_CRDT_CNT_REG   Address=(0x11800B0000880+a*0x8000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:5>  NS    RAZ     NS         NS         Reserved.                                         
 <4:0>   CNT   R/W     0x10       0x10       INTERNAL: SERDES Credit Count.                    
                                             Valid rand is 1-31.
                                             Recommended value is 16 for all full-duplex operations.  Some clock ratios may require a
                                             larger setting of 20.
                                             Value of zero will disable the port.

Notes:
o70 supports a single RXAUI interface.  The PCSX1 version is not supported and should not be
documented.

-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the pem.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

 * 
 * PEM_CTL_STATUS = PEM Control Status
 * 
 *  General control and status of the PEM.
 * 
$PEM(0..2)_CTL_STATUS   Address=(0x11800C0000000+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:51> NS       RAZ     NS         NS         Reserved.                                         
 <50>    INV_DPAR R/W     0x0        0x0        Invert the generated parity to be written into the
                                                the most significant Data Queue Buffer ram block
                                                to force a parity error when it is later read.
 <49>    INV_HPAR R/W     0x0        0x0        Invert the generated parity to be written into the
                                                most significant Header Queue Buffer ram block
                                                to force a parity error when it is later read.
 <48>    INV_RPAR R/W     0x0        0x0        Invert the generated parity to be written into the
                                                tmost significant Retry Buffer ram block to force
                                                a parity error when it is later read.
 <47>    AUTO_SD  RO      NS         NS         Link Hardware Autonomous Speed Disable.           
 <46:42> DNUM     RO      NS         NS         Primary bus device number.                        
 <41:34> PBUS     RO      NS         NS         Primary bus number.                               
 <33:32> NS       RAZ     NS         NS         Reserved.                                         
 <31:16> CFG_RTRY R/W     0x0        0x20       The time x 0x10000 in core clocks to wait for a   
                                                CPL to a CFG RD that does not carry a Retry Status.
                                                Until such time that the timeout occurs and Retry
                                                Status is received for a CFG RD, the Read CFG Read
                                                will be resent. A value of 0 disables retries and
                                                treats a CPL Retry as a CPL UR.
                                                When enabled only one CFG RD may be issued until
                                                either successful completion or CPL UR.
 <15:12> SPARES   R/W     0x0        0x0        Spares flops.                                     
 <11>    PM_XTOFF R/W/H   0x0        0x0        When WRITTEN with a '1' a single cycle pulse is   
                                                to the PCIe core pm_xmt_turnoff port. RC mode.
 <10>    PM_XPME  R/W/H   0x0        0x0        When WRITTEN with a '1' a single cycle pulse is   
                                                to the PCIe core pm_xmt_pme port. EP mode.
 <9>     OB_P_CMD R/W/H   0x0        0x0        When WRITTEN with a '1' a single cycle pulse is   
                                                to the PCIe core outband_pwrup_cmd port. EP mode.
 <8>     NS       R/W     0x0        0x0        Reserved.                                         
 <7>     NS       R/W     0x0        0x0        Reserved.                                         
 <6>     NF_ECRC  R/W     0x0        0x0        Do not forward peer-to-peer ECRC TLPs.            
 <5>     DLY_ONE  R/W/H   0x0        0x0        When set the output client state machines will    
                                                wait one cycle before starting a new TLP out.
 <4>     LNK_ENB  R/W     0x0        0x0        When set '1' the link is enabled when '0' the     
                                                link is disabled. This bit only is active when in
                                                RC mode.
 <3>     RO_CTLP  R/W     0x0        0x0        When set '1' C-TLPs that have the RO bit set will 
                                                not wait for P-TLPs that normaly would be sent
                                                first.
 <2>     FAST_LM  R/W     0x0        0x0        When '1' forces fast link mode.                   
 <1>     INV_ECRC R/W     0x0        0x0        When '1' causes the LSB of the ECRC to be inverted.
 <0>     INV_LCRC R/W     0x0        0x0        When '1' causes the LSB of the LCRC to be inverted.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PEM_BIST_STATUS = PEM Bist Status
 * 
 *  Contains the diffrent interrupt summary bits of the PEM.
 * 
$PEM(0..2)_BIST_STATUS   Address=(0x11800C0000018+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  NS      RAZ     NS         NS         Reserved.                                         
 <5>     RETRY   RO      0x0        0x0        Retry Buffer Memory                               
 <4>     SOT     RO      0x0        0x0        Start of Transfer Memory                          
 <3>     RQHDR0  RO      0x0        0x0        Rx Queue Header Memory 0                          
 <2>     RQHDR1  RO      0x0        0x0        Rx Queue Header Memory 1                          
 <1>     RQDATA0 RO      0x0        0x0        Rx Queue Data Memory 0                            
 <0>     RQDATA1 RO      0x0        0x0        Rx Queue Data Memory 1                            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PEM_DIAG_STATUS = PEM Diagnostic Status
 * 
 *  Selection control for the cores diagnostic bus.
 * 
$PEM(0..2)_DIAG_STATUS   Address=(0x11800C0000020+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  NS      RO/H    NS         NS         Reserved.                                         
 <5:3>   PM_DST  RO      0x0        0x0        Current power management DSTATE.                  
 <2>     PM_STAT RO      0x0        0x0        Power Management Status.                          
 <1>     PM_EN   RO      0x0        0x0        Power Management Event Enable.                    
 <0>     AUX_EN  RO      0x0        0x0        Auxilary Power Enable.                            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PEM_CFG_WR = PEM Configuration Write
 * 
 *  Allows write access to the configuration in the PCIe Core.
 * 
$PEM(0..2)_CFG_WR   Address=(0x11800C0000028+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> DATA R/W     0x0        NS         Data to write. A write to this register starts a write operation.
 <31:0>  ADDR R/W     0x0        NS         Address to write. A write to this register starts a write operation.
                                            Following are the sub-fields of the ADDR field.
                                            
                                            31    - When set, asserts dbi_cs2 at PCIe core.
                                            30:12 - Not used (when asserted, result is address out of bounds -
                                                    write completes immediately).
                                            11:0  - The offset of the PCIe core cfg register being accessed.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PEM_CFG_RD = PEM Configuration Read
 * 
 *  Allows read access to the configuration in the PCIe Core.
 * 
$PEM(0..2)_CFG_RD   Address=(0x11800C0000030+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> DATA R/W/H   0x0        NS         Data.                                             
 <31:0>  ADDR R/W     0x0        NS         Address to read. A write to this register starts a read operation.
                                            Following are the sub-fields of the ADDR field.
                                            
                                            31:12 - Not used (when asserted, result is address out of bounds -
                                                    read returns all '1's).
                                            11:0  - The offset of the PCIe core cfg register being accessed.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PEM_TLP_CREDITS = PEM TLP Credits
 * 
 *  Specifies the number of credits the PEM for use in moving TLPs. When this register is written
 *  the credit values are
 *  reset to the register value. A write to this register should take place BEFORE traffic flow
 *  starts.
 * 
$PEM(0..2)_TLP_CREDITS   Address=(0x11800C0000038+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:56> NS       RAZ     NS         NS         Reserved.                                         
 <55:48> PEAI_PPF R/W     0x80       0x80       TLP credits for all inbound TLPs in the PEM. The  
                                                value in this register should not be changed. Values
                                                other than 0x80 can lead to unpredictable behavior.
 <47:24> NS       RAZ     NS         NS         Reserved.                                         
 <23:16> SLI_CPL  R/W/H   0x80       0x80       TLP 8B credits for Completion TLPs in the SLI.    
                                                Legal values are 0x24 to 0x80. When multiple PEMS
                                                are wire-OR'd together, the sum of all PEMs' SLI_CPL
                                                fields must not exceed 0x80. The reset value for this
                                                register is based on the pi_select_mode[1:0] straps;
                                                2'd0 = 2 lanes = 64 credits, 2'd1 = 1 lane = 42 credits,
                                                else 4 lanes = 128 credits. SW must reprogram this register
                                                for RC mode PEMs, since they always default to 4 lanes.
                                                SW may also need to reprogram this register for performance
                                                reasons (configured as the only PEM, but as 2-lane - in
                                                this case, this PEM can take all of the credits).
 <15:8>  SLI_NP   R/W/H   0x10       0x10       TLP 8B credits for Non-Posted TLPs in the SLI.    
                                                Legal values are 0x8 to 0x10. When multiple PEMS
                                                are wire-OR'd together, the sum of all PEMs' SLI_NP
                                                fields must not exceed 0x10. The reset value for this
                                                register is based on the pi_select_mode[1:0] straps;
                                                2'd0 = 2 lanes = 8 credits, 2'd1 = 1 lane = 5 credits,
                                                else 4 lanes = 16 credits. SW must reprogram this register
                                                for RC mode PEMs, since they always default to 4 lanes.
                                                SW may also need to reprogram this register for performance
                                                reasons (configured as the only PEM, but as 2-lane - in
                                                this case, this PEM can take all of the credits).
 <7:0>   SLI_P    R/W/H   0x80       0x80       TLP 8B credits for Posted TLPs in the SLI.        
                                                Legal values are 0x24 to 0x80. When multiple PEMS
                                                are wire-OR'd together, the sum of all PEMs' SLI_P
                                                fields must not exceed 0x80. The reset value for this
                                                register is based on the pi_select_mode[1:0] straps;
                                                2'd0 = 2 lanes = 64 credits, 2'd1 = 1 lane = 42 credits,
                                                else 4 lanes = 128 credits. SW must reprogram this register
                                                for RC mode PEMs, since they always default to 4 lanes.
                                                SW may also need to reprogram this register for performance
                                                reasons (configured as the only PEM, but as 2-lane - in
                                                this case, this PEM can take all of the credits).
                                                NOTE: For PEM0 in EP mode, updating this field from the
                                                PCIe Port via a windowed write requires 3 SLI_P credits
                                                which are returned to the pool after the update.  In addition
                                                a subsequent windowed write can cause an additional 3 SLI_P credits
                                                to be returned to the pool resulting in a total of 6 additional credits
                                                more than what this field is configured to be.
                                                Therefore any update to this register from the PCIe Port when PEM0 is in EP mode,
                                                SW must account for potential 6 when updating this field.
                                                For example, for 4-lane mode where PEM0 gets all 128 credits,
                                                this field needs to be written with a value of 122 credits.
                                                This will insure that the resulting value can not end up more
                                                than the 128 credits maximum.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PEM_P2N_BAR0_START = PEM PCIe to Npei BAR0 Start
 * 
 *  The starting address for addresses to forwarded to the SLI in RC Mode.
 * 
$PEM(0..2)_P2N_BAR0_START   Address=(0x11800C0000080+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:14> ADDR  R/W     0x0        0x0        The starting address of the 16KB address space that
                                             is the BAR0 address space.
 <13:0>  NS    RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PEM_P2N_BAR1_START = PEM PCIe to Npei BAR1 Start
 * 
 *  The starting address for addresses to forwarded to the SLI in RC Mode.
 * 
$PEM(0..2)_P2N_BAR1_START   Address=(0x11800C0000088+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:26> ADDR  R/W     0x0        0x0        The starting address of the 64MB address space    
                                             that is the BAR1 address space.
 <25:0>  NS    RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PEM_P2N_BAR2_START = PEM PCIe to Npei BAR2 Start
 * 
 *  The starting address for addresses to forwarded to the SLI in RC Mode.
 * 
$PEM(0..2)_P2N_BAR2_START   Address=(0x11800C0000090+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:41> ADDR  R/W     0x0        0x0        The starting address of the 2^41 address space    
                                             that is the BAR2 address space.
 <40:0>  NS    RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PEM_CPL_LUT_VALID = PEM Cmpletion Lookup Table Valid
 * 
 *  Bit set for outstanding tag read.
 * 
$PEM(0..2)_CPL_LUT_VALID   Address=(0x11800C0000098+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  TAG   RO/H    0x0        0x0        Bit vector set cooresponds to an outstanding tag  
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PEM_DBG_INFO_EN
 * 
 *  "PEM#_DBG_INFO_EN = PEM Debug Information Enable
 *  Allows PEM_DBG_INFO to generate interrupts when cooresponding enable bit is set."
 * 
$PEM(0..2)_DBG_INFO_EN   Address=(0x11800C00000A0+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:46> NS      RAZ     NS         NS         Reserved.                                         
 <45>    TPCDBE1 R/W     0x0        0x0        Allows PEM_DBG_INFO[45] to generate an interrupt. 
 <44>    TPCSBE1 R/W     0x0        0x0        Allows PEM_DBG_INFO[44] to generate an interrupt. 
 <43>    TPCDBE0 R/W     0x0        0x0        Allows PEM_DBG_INFO[43] to generate an interrupt. 
 <42>    TPCSBE0 R/W     0x0        0x0        Allows PEM_DBG_INFO[42] to generate an interrupt. 
 <41>    TNFDBE1 R/W     0x0        0x0        Allows PEM_DBG_INFO[41] to generate an interrupt. 
 <40>    TNFSBE1 R/W     0x0        0x0        Allows PEM_DBG_INFO[40] to generate an interrupt. 
 <39>    TNFDBE0 R/W     0x0        0x0        Allows PEM_DBG_INFO[39] to generate an interrupt. 
 <38>    TNFSBE0 R/W     0x0        0x0        Allows PEM_DBG_INFO[38] to generate an interrupt. 
 <37>    TPFDBE1 R/W     0x0        0x0        Allows PEM_DBG_INFO[37] to generate an interrupt. 
 <36>    TPFSBE1 R/W     0x0        0x0        Allows PEM_DBG_INFO[36] to generate an interrupt. 
 <35>    TPFDBE0 R/W     0x0        0x0        Allows PEM_DBG_INFO[35] to generate an interrupt. 
 <34>    TPFSBE0 R/W     0x0        0x0        Allows PEM_DBG_INFO[34] to generate an interrupt. 
 <33>    DATQ_PE R/W     0x0        0x0        Allows PEM_DBG_INFO[33] to generate an interrupt. 
 <32>    HDRQ_PE R/W     0x0        0x0        Allows PEM_DBG_INFO[32] to generate an interrupt. 
 <31>    RTRY_PE R/W     0x0        0x0        Allows PEM_DBG_INFO[31] to generate an interrupt. 
 <30>    ECRC_E  R/W     0x0        0x0        Allows PEM_DBG_INFO[30] to generate an interrupt. 
 <29>    RAWWPP  R/W     0x0        0x0        Allows PEM_DBG_INFO[29] to generate an interrupt. 
 <28>    RACPP   R/W     0x0        0x0        Allows PEM_DBG_INFO[28] to generate an interrupt. 
 <27>    RAMTLP  R/W     0x0        0x0        Allows PEM_DBG_INFO[27] to generate an interrupt. 
 <26>    RARWDNS R/W     0x0        0x0        Allows PEM_DBG_INFO[26] to generate an interrupt. 
 <25>    CAAR    R/W     0x0        0x0        Allows PEM_DBG_INFO[25] to generate an interrupt. 
 <24>    RACCA   R/W     0x0        0x0        Allows PEM_DBG_INFO[24] to generate an interrupt. 
 <23>    RACUR   R/W     0x0        0x0        Allows PEM_DBG_INFO[23] to generate an interrupt. 
 <22>    RAUC    R/W     0x0        0x0        Allows PEM_DBG_INFO[22] to generate an interrupt. 
 <21>    RQO     R/W     0x0        0x0        Allows PEM_DBG_INFO[21] to generate an interrupt. 
 <20>    FCUV    R/W     0x0        0x0        Allows PEM_DBG_INFO[20] to generate an interrupt. 
 <19>    RPE     R/W     0x0        0x0        Allows PEM_DBG_INFO[19] to generate an interrupt. 
 <18>    FCPVWT  R/W     0x0        0x0        Allows PEM_DBG_INFO[18] to generate an interrupt. 
 <17>    DPEOOSD R/W     0x0        0x0        Allows PEM_DBG_INFO[17] to generate an interrupt. 
 <16>    RTWDLE  R/W     0x0        0x0        Allows PEM_DBG_INFO[16] to generate an interrupt. 
 <15>    RDWDLE  R/W     0x0        0x0        Allows PEM_DBG_INFO[15] to generate an interrupt. 
 <14>    MRE     R/W     0x0        0x0        Allows PEM_DBG_INFO[14] to generate an interrupt. 
 <13>    RTE     R/W     0x0        0x0        Allows PEM_DBG_INFO[13] to generate an interrupt. 
 <12>    ACTO    R/W     0x0        0x0        Allows PEM_DBG_INFO[12] to generate an interrupt. 
 <11>    RVDM    R/W     0x0        0x0        Allows PEM_DBG_INFO[11] to generate an interrupt. 
 <10>    RUMEP   R/W     0x0        0x0        Allows PEM_DBG_INFO[10] to generate an interrupt. 
 <9>     RPTAMRC R/W     0x0        0x0        Allows PEM_DBG_INFO[9] to generate an interrupt.  
 <8>     RPMERC  R/W     0x0        0x0        Allows PEM_DBG_INFO[8] to generate an interrupt.  
 <7>     RFEMRC  R/W     0x0        0x0        Allows PEM_DBG_INFO[7] to generate an interrupt.  
 <6>     RNFEMRC R/W     0x0        0x0        Allows PEM_DBG_INFO[6] to generate an interrupt.  
 <5>     RCEMRC  R/W     0x0        0x0        Allows PEM_DBG_INFO[5] to generate an interrupt.  
 <4>     RPOISON R/W     0x0        0x0        Allows PEM_DBG_INFO[4] to generate an interrupt.  
 <3>     RECRCE  R/W     0x0        0x0        Allows PEM_DBG_INFO[3] to generate an interrupt.  
 <2>     RTLPLLE R/W     0x0        0x0        Allows PEM_DBG_INFO[2] to generate an interrupt.  
 <1>     RTLPMAL R/W     0x0        0x0        Allows PEM_DBG_INFO[1] to generate an interrupt.  
 <0>     SPOISON R/W     0x0        0x0        Allows PEM_DBG_INFO[0] to generate an interrupt.  
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PEM_BAR_CTL = PEM BAR Control
 * 
 *  Contains control for BAR accesses.
 * 
$PEM(0..2)_BAR_CTL   Address=(0x11800C00000A8+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ     NS         NS         Reserved.                                         
 <6:4>   BAR1_SIZ R/W     0x1        0x1        Pcie-Port0, Bar1 Size. 1 == 64MB, 2 == 128MB,     
                                                3 == 256MB, 4 == 512MB, 5 == 1024MB, 6 == 2048MB,
                                                0 and 7 are reserved.
 <3>     BAR2_ENB R/W     0x0        0x1        When set '1' BAR2 is enable and will respond when 
                                                clear '0' BAR2 access will cause UR responses.
 <2:1>   BAR2_ESX R/W     0x0        NS         Value will be XORed with pci-address[45:44] to    
                                                determine the endian swap mode.
 <0>     BAR2_CAX R/W     0x0        0x0        Value will be XORed with pcie-address[46] to      
                                                determine the L2 cache attribute.
                                                Not cached in L2 if XOR result is 1
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PEM_BAR2_MASK = PEM BAR2 MASK
 * 
 *  The mask pattern that is ANDED with the address from PCIe core for BAR2 hits.
 * 
$PEM(0..2)_BAR2_MASK   Address=(0x11800C00000B0+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:38> NS    RAZ     NS         NS         Reserved.                                         
 <37:3>  MASK  R/W     0x7ffffffff 0x7ffffffff The value to be ANDED with the address sent to    
                                             the Octeon memory.
 <2:0>   NS    RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PEM_INB_READ_CREDITS
 * 
 *  The number of in flight reads from PCIe core to SLI
 * 
$PEM(0..2)_INB_READ_CREDITS   Address=(0x11800C00000B8+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  NS    RAZ     NS         NS         Reserved.                                         
 <5:0>   NUM   R/W     0x20       0x20       The number of reads that may be in flight from    
                                             the PCIe core to the SLI. Min number is 2 max
                                             number is 32.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PEM_ECC_ENA
 * 
 *  Contains enables for ECC RAMs
 * 
$PEM(0..2)_ECC_ENA   Address=(0x11800C00000C0+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  NS         RAZ     NS         NS         Reserved.                                         
 <5>     TLP_NC_ENA R/W     0x1        0x1        ECC enable for TLP Non-Posted ctl Fifo            
 <4>     TLP_ND_ENA R/W     0x1        0x1        ECC enable for TLP Non-Posted data Fifo           
 <3>     TLP_PC_ENA R/W     0x1        0x1        ECC enable for TLP Posted ctl Fifo                
 <2>     TLP_PD_ENA R/W     0x1        0x1        ECC enable for TLP Posted data Fifo               
 <1>     TLP_CC_ENA R/W     0x1        0x1        ECC enable for TLP CPL ctl Fifo                   
 <0>     TLP_CD_ENA R/W     0x1        0x1        ECC enable for TLP CPL data Fifo                  
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PEM_ECC_SYND_CTRL
 * 
 *  PEM_ECC_SYND_CTL
 *  Contains Syndrome Control for ECC RAMs
 * 
$PEM(0..2)_ECC_SYND_CTRL   Address=(0x11800C00000C8+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:12> NS         RAZ     NS         NS         Reserved.                                         
 <11:10> TLP_NC_SYN R/W     0x0        0x0        Syndrome Flip bits for TLP Non-Posted ctl Fifo    
 <9:8>   TLP_ND_SYN R/W     0x0        0x0        Syndrome Flip bits for TLP Non-Posted data Fifo   
 <7:6>   TLP_PC_SYN R/W     0x0        0x0        Syndrome Flip bits for TLP Posted ctl Fifo        
 <5:4>   TLP_PD_SYN R/W     0x0        0x0        Syndrome Flip bits for TLP Posted data Fifo       
 <3:2>   TLP_CC_SYN R/W     0x0        0x0        Syndrome Flip bits for TLP CPL ctl Fifo           
 <1:0>   TLP_CD_SYN R/W     0x0        0x0        Syndrome Flip bits for TLP CPL data Fifo          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PEM_DBG_INFO
 * 
 *  "PEM#_DBG_INFO = PEM Debug Information
 *  General debug info."
 * 
$PEM(0..2)_DBG_INFO   Address=(0x11800C00000D0+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:46> NS      RAZ     NS         NS         Reserved.                                         
 <45>    C_C_DBE R/W1C/H 0x0        0x0        Detected a TLP CPL Fifo ctrl double bit error     
 <44>    C_C_SBE R/W1C/H 0x0        0x0        Detected a TLP CPL Fifo ctrl single bit error     
 <43>    C_D_DBE R/W1C/H 0x0        0x0        Detected a TLP CPL Fifo data double bit error     
 <42>    C_D_SBE R/W1C/H 0x0        0x0        Detected a TLP CPL Fifo data single bit error     
 <41>    N_C_DBE R/W1C/H 0x0        0x0        Detected a TLP Non-Posted Fifo ctrl double bit error
 <40>    N_C_SBE R/W1C/H 0x0        0x0        Detected a TLP Non-Posted fifo ctrl single bit error
 <39>    N_D_DBE R/W1C/H 0x0        0x0        Detected a TLP Non-Posted Fifo data double bit error
 <38>    N_D_SBE R/W1C/H 0x0        0x0        Detected a TLP Non-Posted Fifo data single bit error
 <37>    P_C_DBE R/W1C/H 0x0        0x0        Detected a TLP Posted Fifo ctrl double bit error  
 <36>    P_C_SBE R/W1C/H 0x0        0x0        Detected a TLP Posted Fifo ctrl single bit error  
 <35>    P_D_DBE R/W1C/H 0x0        0x0        Detected a TLP Posted Fifo data double bit error  
 <34>    P_D_SBE R/W1C/H 0x0        0x0        Detected a TLP Posted Fifo data single bit error  
 <33>    DATQ_PE R/W1C/H 0x0        0x0        Detected a Data Queue RAM parity error            
 <32>    HDRQ_PE R/W1C/H 0x0        0x0        Detected a Header Queue RAM parity error          
 <31>    RTRY_PE R/W1C/H 0x0        0x0        Detected a Retry RAM parity error                 
 <30>    ECRC_E  R/W1C/H 0x0        0x0        Received a ECRC error.                            
                                               radm_ecrc_err
 <29>    RAWWPP  R/W1C/H 0x0        0x0        Received a write with poisoned payload            
                                               radm_rcvd_wreq_poisoned
 <28>    RACPP   R/W1C/H 0x0        0x0        Received a completion with poisoned payload       
                                               radm_rcvd_cpl_poisoned
 <27>    RAMTLP  R/W1C/H 0x0        0x0        Received a malformed TLP                          
                                               radm_mlf_tlp_err
 <26>    RARWDNS R/W1C/H 0x0        0x0        Recieved a request which device does not support  
                                               radm_rcvd_ur_req
 <25>    CAAR    R/W1C/H 0x0        0x0        Completer aborted a request                       
                                               radm_rcvd_ca_req
                                               This bit will never be set because Octeon does
                                               not generate Completer Aborts.
 <24>    RACCA   R/W1C/H 0x0        0x0        Received a completion with CA status              
                                               radm_rcvd_cpl_ca
 <23>    RACUR   R/W1C/H 0x0        0x0        Received a completion with UR status              
                                               radm_rcvd_cpl_ur
 <22>    RAUC    R/W1C/H 0x0        0x0        Received an unexpected completion                 
                                               radm_unexp_cpl_err
 <21>    RQO     R/W1C/H 0x0        0x0        Receive queue overflow. Normally happens only when
                                               flow control advertisements are ignored
                                               radm_qoverflow
 <20>    FCUV    R/W1C/H 0x0        0x0        Flow Control Update Violation (opt. checks)       
                                               int_xadm_fc_prot_err
 <19>    RPE     R/W1C/H 0x0        0x0        When the PHY reports 8B/10B decode error          
                                               (RxStatus = 3b100) or disparity error
                                               (RxStatus = 3b111), the signal rmlh_rcvd_err will
                                               be asserted.
                                               rmlh_rcvd_err
 <18>    FCPVWT  R/W1C/H 0x0        0x0        Flow Control Protocol Violation (Watchdog Timer)  
                                               rtlh_fc_prot_err
 <17>    DPEOOSD R/W1C/H 0x0        0x0        DLLP protocol error (out of sequence DLLP)        
                                               rdlh_prot_err
 <16>    RTWDLE  R/W1C/H 0x0        0x0        Received TLP with DataLink Layer Error            
                                               rdlh_bad_tlp_err
 <15>    RDWDLE  R/W1C/H 0x0        0x0        Received DLLP with DataLink Layer Error           
                                               rdlh_bad_dllp_err
 <14>    MRE     R/W1C/H 0x0        0x0        Max Retries Exceeded                              
                                               xdlh_replay_num_rlover_err
 <13>    RTE     R/W1C/H 0x0        0x0        Replay Timer Expired                              
                                               xdlh_replay_timeout_err
                                               This bit is set when the REPLAY_TIMER expires in
                                               the PCIE core. The probability of this bit being
                                               set will increase with the traffic load.
 <12>    ACTO    R/W1C/H 0x0        0x0        A Completion Timeout Occured                      
                                               pedc_radm_cpl_timeout
 <11>    RVDM    R/W1C/H 0x0        0x0        Received Vendor-Defined Message                   
                                               pedc_radm_vendor_msg
 <10>    RUMEP   R/W1C/H 0x0        0x0        Received Unlock Message (EP Mode Only)            
                                               pedc_radm_msg_unlock
 <9>     RPTAMRC R/W1C/H 0x0        0x0        Received PME Turnoff Acknowledge Message          
                                               (RC Mode only)
                                               pedc_radm_pm_to_ack
 <8>     RPMERC  R/W1C/H 0x0        0x0        Received PME Message (RC Mode only)               
                                               pedc_radm_pm_pme
 <7>     RFEMRC  R/W1C/H 0x0        0x0        Received Fatal Error Message (RC Mode only)       
                                               pedc_radm_fatal_err
                                               Bit set when a message with ERR_FATAL is set.
 <6>     RNFEMRC R/W1C/H 0x0        0x0        Received Non-Fatal Error Message (RC Mode only)   
                                               pedc_radm_nonfatal_err
 <5>     RCEMRC  R/W1C/H 0x0        0x0        Received Correctable Error Message (RC Mode only) 
                                               pedc_radm_correctable_err
 <4>     RPOISON R/W1C/H 0x0        0x0        Received Poisoned TLP                             
                                               pedc__radm_trgt1_poisoned & pedc__radm_trgt1_hv
 <3>     RECRCE  R/W1C/H 0x0        0x0        Received ECRC Error                               
                                               pedc_radm_trgt1_ecrc_err & pedc__radm_trgt1_eot
 <2>     RTLPLLE R/W1C/H 0x0        0x0        Received TLP has link layer error                 
                                               pedc_radm_trgt1_dllp_abort & pedc__radm_trgt1_eot
 <1>     RTLPMAL R/W1C/H 0x0        0x0        Received TLP is malformed or a message.           
                                               pedc_radm_trgt1_tlp_abort & pedc__radm_trgt1_eot
                                               If the core receives a MSG (or Vendor Message)
                                               or if a received AtomicOp viloates address/length rules,
                                               this bit is set as well.
 <0>     SPOISON R/W1C/H 0x0        0x0        Poisoned TLP sent                                 
                                               peai__client0_tlp_ep & peai__client0_tlp_hv
                                               peai__client1_tlp_ep & peai__client1_tlp_hv (atomic_op).
                                               Throws PEM_INTSN_E::PEM(0..2)_ERROR_SPOISON.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PEM_BAR1_INDEX
 * 
 *  Contains address index and control bits for access to memory ranges of BAR-1. Index is build
 *  from supplied address [25:22].
 * 
$PEM(0..2)_BAR1_INDEX(0..15)   Address=(0x11800C0000100+a*0x1000000+b*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:24> NS       RAZ     NS         NS         Reserved.                                         
 <23:4>  ADDR_IDX R/W     0x0        NS         Address bits [41:22] sent to L2C                  
 <3>     CA       R/W     0x0        0x0        Set '1' when access is not to be cached in L2.    
 <2:1>   END_SWP  R/W     0x0        NS         Endian Swap Mode                                  
 <0>     ADDR_V   R/W     0x0        NS         Set '1' when the selected address range is valid. 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PEM_SPI_CTL
 * 
 *  PEM#_SPI_CTL register.
 * 
$PEM(0..2)_SPI_CTL   Address=(0x11800C0000180+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:14> NS         RAZ     NS         NS         Reserved.                                         
 <13>    START_BUSY R/W     0x0        0x0        Start/Busy status. Starts SPI xctn when written, reads 1 when EEPROM busy, 0 when complete.
 <12>    TVALID     R/W     0x0        0x0        Reads 1 if at least one valid entry was read from EEPROM and written to a CSR. Write to
                                                  clear status.
 <11:9>  CMD        R/W     0x0        0x0        SPI commands; WREN(110), WRDI(100), READ(011), WRITE(010), RDSR(101), WRSR(001)
 <8:0>   ADR        R/W     0x0        0x0        EEPROM read/write address.                        
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PEM_SPI_DATA
 * 
 *  "PEM#_SPI read/write data register. Contains most recently read or written data and is
 *  unpredictable upon power-up"
 * 
$PEM(0..2)_SPI_DATA   Address=(0x11800C0000188+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> PREAMBLE R/W/H   NS         NS         EEPROM PREAMBLE read or write data.               
 <47:45> NS       RAZ     NS         NS         EEPROM unused data field.                         
 <44>    CS2      R/W/H   NS         NS         EEPROM CS2 read or write data bit.                
 <43:32> ADR      R/W/H   NS         NS         EEPROM CFG ADR read or write data.                
 <31:0>  DATA     R/W/H   NS         NS         EEPROM DATA read or write data.                   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PEM_CLK_EN = PEM Clock Enable
 * 
 *  Clock Enable for ECLK and PCE_CLK
 * 
$PEM(0..2)_CLK_EN   Address=(0x11800C0000400+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:2>  NS          RAZ     NS         NS         Reserved.                                         
 <1>     PCECLK_GATE R/W/H   0x0        0x0        When set, pce_clk is gated off.                   
                                                   When clear, pce_clk is enabled.
 <0>     CSCLK_GATE  R/W/H   0x0        0x0        When set, eclk is gated off.                      
                                                   When clear, eclk is enabled.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PEM_STRAP = PEM Pin Strapping
 * 
 *  "Below are in pesc_csr
 *   The input strapping pins"
 * 
$PEM(0..2)_STRAP   Address=(0x11800C0000408+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS         RAZ     NS         NS         Reserved.                                         
 <3>     PILANESWAP RO/H    NS         NS         The value of the pi_select_laneswap pin           
 <2:0>   PIMODE     RO/H    NS         NS         The value of the pi_select_mode[2:0] pins         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PEM_CFG = PEM Application CFG
 * 
 *  Configuration of the PCIe Application
 * 
$PEM(0..2)_CFG   Address=(0x11800C0000410+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:5>  NS       RAZ     NS         NS         Reserved.                                         
 <4>     LANESWAP R/W/H   NS         NS         This field will overwrite the pin setting for lane swapping.
                                                When set, lane swapping is performed to/from the SerDes.
                                                When clear, no lane swapping is performed.
 <3>     HOSTMD   R/W/H   NS         NS         This field will overwrite the pin settings for host mode.
                                                When set, the PEM is configured to be a Root Complex.
                                                When clear, the PEM is configured to be an End Point.
 <2:0>   MD       R/W/H   NS         NS         This field will overwrite the pin settings for speed and lane
                                                configuration. This value is used to set the Maximum Link Width
                                                field in the core's Link Capabilities Register (CFG031) to
                                                indicate the maximum number of lanes supported. Note that less
                                                lanes than the specified maximum can be configured for use via
                                                the core's Link Control Register (CFG032) Negotiated Link Width
                                                field.
                                                NOTE - The lower two bits of the MD field must
                                                be the same across all configured PEMs!
                                                  000 - Gen2 Speed, 2-lanes
                                                  001 - Gen2 Speed, 1-lane
                                                  010 - Gen2 Speed, 4-lanes
                                                  011 - Rsvd
                                                  100 - Gen1 Speed, 2-lanes
                                                  101 - Gen1 Speed, 1-lane
                                                  110 - Gen1 Speed, 4-lanes
                                                  111 - Rsvd
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PEM_ON = PEM ON Status
 * 
 *  PEM is configured and ready
 * 
$PEM(0..2)_ON   Address=(0x11800C0000420+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:2>  NS     RAZ     NS         NS         Reserved.                                         
 <1>     PEMOOR RO/H    NS         NS         Indication to software that the PEM has been taken out of
                                              reset (ie bist is done) and it is safe to configure core CSRs.
 <0>     PEMON  R/W/H   NS         NS         Indication to the QLM that the PEM is out of reset, configured
                                              and ready to send/receive traffic.  Setting this bit will take
                                              the configured PIPE out of reset.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PEM_INT_SUM
 * 
 *  "PEM#_INT_SUM = PEM Interrupt Summary
 *  Interrupt conditions for the PEM."
 * 
$PEM(0..2)_INT_SUM   Address=(0x11800C0000428+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:14> NS     RAZ     NS         NS         Reserved.                                         
 <13>    CRS_DR R/W1C/H 0x0        0x0        Had a CRS Timeout when Retries were disabled.     
 <12>    CRS_ER R/W1C/H 0x0        0x0        Had a CRS Timeout when Retries were enabled.      
 <11>    RDLK   R/W1C/H 0x0        0x0        Received Read Lock TLP.                           
 <10>    EXC    RO/H    0x0        0x0        Set when the PEM_DBG_INFO register has a bit      
                                              set and its cooresponding PEM_DBG_INFO_EN bit
                                              is set.
 <9>     UN_BX  R/W1C/H 0x0        0x0        Received N-TLP for an unknown Bar.                
 <8>     UN_B2  R/W1C/H 0x0        0x0        Received N-TLP for Bar2 when bar2 is disabled.    
 <7>     UN_B1  R/W1C/H 0x0        0x0        Received N-TLP for Bar1 when bar1 index valid     
                                              is not set.
 <6>     UP_BX  R/W1C/H 0x0        0x0        Received P-TLP for an unknown Bar.                
 <5>     UP_B2  R/W1C/H 0x0        0x0        Received P-TLP for Bar2 when bar2 is disabeld.    
 <4>     UP_B1  R/W1C/H 0x0        0x0        Received P-TLP for Bar1 when bar1 index valid     
                                              is not set.
 <3>     PMEM   RO/H    0x0        0x0        Recived PME MSG.                                  
                                              (radm_pm_pme)
 <2>     PMEI   RO/H    0x0        0x0        PME Interrupt.                                    
                                              (cfg_pme_int)
 <1>     SE     R/W1C/H 0x0        0x0        System Error, RC DEode Only.                      
                                              (cfg_sys_err_rc)
 <0>     AERI   RO/H    0x0        0x0        Advanced Error Reporting Interrupt, RC Mode Only. 
                                              (cfg_aer_rc_err_int).
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PEM_INT_ENB
 * 
 *  "PEM#_INT_ENB = PEM Interrupt Enable
 *  Enables interrupt conditions for the PEM to generate an RSL interrupt."
 * 
$PEM(0..2)_INT_ENB   Address=(0x11800C0000430+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:14> NS     RAZ     NS         NS         Reserved.                                         
 <13>    CRS_DR R/W     0x0        0x1        Enables PEM_INT_SUM[13] to generate an            
                                              interrupt to the MIO.
 <12>    CRS_ER R/W     0x0        0x1        Enables PEM_INT_SUM[12] to generate an            
                                              interrupt to the MIO.
 <11>    RDLK   R/W     0x0        0x1        Enables PEM_INT_SUM[11] to generate an            
                                              interrupt to the MIO.
 <10>    EXC    R/W     0x0        0x1        Enables PEM_INT_SUM[10] to generate an            
                                              interrupt to the MIO.
 <9>     UN_BX  R/W     0x0        0x1        Enables PEM_INT_SUM[9] to generate an             
                                              interrupt to the MIO.
 <8>     UN_B2  R/W     0x0        0x1        Enables PEM_INT_SUM[8] to generate an             
                                              interrupt to the MIO.
 <7>     UN_B1  R/W     0x0        0x1        Enables PEM_INT_SUM[7] to generate an             
                                              interrupt to the MIO.
 <6>     UP_BX  R/W     0x0        0x1        Enables PEM_INT_SUM[6] to generate an             
                                              interrupt to the MIO.
 <5>     UP_B2  R/W     0x0        0x1        Enables PEM_INT_SUM[5] to generate an             
                                              interrupt to the MIO.
 <4>     UP_B1  R/W     0x0        0x1        Enables PEM_INT_SUM[4] to generate an             
                                              interrupt to the MIO.
 <3>     PMEM   R/W     0x0        0x1        Enables PEM_INT_SUM[3] to generate an             
                                              interrupt to the MIO.
 <2>     PMEI   R/W     0x0        0x1        Enables PEM_INT_SUM[2] to generate an             
                                              interrupt to the MIO.
 <1>     SE     R/W     0x0        0x1        Enables PEM_INT_SUM[1] to generate an             
                                              interrupt to the MIO.
 <0>     AERI   R/W     0x0        0x1        Enables PEM_INT_SUM[0] to generate an             
                                              interrupt to the MIO.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PEM_INT_ENB_INT
 * 
 *  "PEM#_INT_ENB_INT = PEM Interrupt Enable
 *  Enables interrupt conditions for the PEM to generate an RSL interrupt."
 * 
$PEM(0..2)_INT_ENB_INT   Address=(0x11800C0000438+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:14> NS     RAZ     NS         NS         Reserved.                                         
 <13>    CRS_DR R/W     0x0        0x1        "Enables PEM_INT_SUM[13] to generate an           
                                              interrupt to the SLI as SLI_INT_SUM[MAC#_INT]."
 <12>    CRS_ER R/W     0x0        0x1        "Enables PEM_INT_SUM[12] to generate an           
                                              interrupt to the SLI as SLI_INT_SUM[MAC#_INT]."
 <11>    RDLK   R/W     0x0        0x1        "Enables PEM_INT_SUM[11] to generate an           
                                              interrupt to the SLI as SLI_INT_SUM[MAC#_INT]."
 <10>    EXC    R/W     0x0        0x1        "Enables PEM_INT_SUM[10] to generate an           
                                              interrupt to the SLI as SLI_INT_SUM[MAC#_INT]."
 <9>     UN_BX  R/W     0x0        0x1        "Enables PEM_INT_SUM[9] to generate an            
                                              interrupt to the SLI as SLI_INT_SUM[MAC#_INT]."
 <8>     UN_B2  R/W     0x0        0x1        "Enables PEM_INT_SUM[8] to generate an            
                                              interrupt to the SLI as SLI_INT_SUM[MAC#_INT]."
 <7>     UN_B1  R/W     0x0        0x1        "Enables PEM_INT_SUM[7] to generate an            
                                              interrupt to the SLI as SLI_INT_SUM[MAC#_INT]."
 <6>     UP_BX  R/W     0x0        0x1        "Enables PEM_INT_SUM[6] to generate an            
                                              interrupt to the SLI as SLI_INT_SUM[MAC#_INT]."
 <5>     UP_B2  R/W     0x0        0x1        "Enables PEM_INT_SUM[5] to generate an            
                                              interrupt to the SLI as SLI_INT_SUM[MAC#_INT]."
 <4>     UP_B1  R/W     0x0        0x1        "Enables PEM_INT_SUM[4] to generate an            
                                              interrupt to the SLI as SLI_INT_SUM[MAC#_INT]."
 <3>     PMEM   R/W     0x0        0x1        "Enables PEM_INT_SUM[3] to generate an            
                                              interrupt to the SLI as SLI_INT_SUM[MAC#_INT]."
 <2>     PMEI   R/W     0x0        0x1        "Enables PEM_INT_SUM[2] to generate an            
                                              interrupt to the SLI as SLI_INT_SUM[MAC#_INT]."
 <1>     SE     R/W     0x0        0x1        "Enables PEM_INT_SUM[1] to generate an            
                                              interrupt to the SLI as SLI_INT_SUM[MAC#_INT]."
 <0>     AERI   R/W     0x0        0x1        "Enables PEM_INT_SUM[0] to generate an            
                                              interrupt to the SLI as SLI_INT_SUM[MAC#_INT]."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PEM_BIST_STATUS2
 * 
 *  "PEM#_BIST_STATUS2 = PEM BIST Status Register
 *  Results from BIST runs of PEM's memories."
 * 
$PEM(0..2)_BIST_STATUS2   Address=(0x11800C0000440+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:14> NS        RAZ     NS         NS         Reserved.                                         
 <13>    PEAI_P2E  RO      0x0        0x0        BIST Status for the peai__pesc_fifo               
 <12>    TLPN_D    RO      0x0        0x0        BIST Status for the tlp_n_fifo_data               
 <11>    TLPN_CTL  RO      0x0        0x0        BIST Status for the tlp_n_fifo_ctl                
 <10>    TLPP_D    RO      0x0        0x0        BIST Status for the tlp_p_fifo_data               
 <9>     TLPP_CTL  RO      0x0        0x0        BIST Status for the tlp_p_fifo_ctl                
 <8>     TLPC_D    RO      0x0        0x0        BIST Status for the tlp_c_fifo_data               
 <7>     TLPC_CTL  RO      0x0        0x0        BIST Status for the tlp_c_fifo_ctl                
 <6>     TLPAN_D   RO      0x0        0x0        BIST Status for the tlp_n_afifo_data              
 <5>     TLPAN_CTL RO      0x0        0x0        BIST Status for the tlp_n_afifo_ctl               
 <4>     TLPAP_D   RO      0x0        0x0        BIST Status for the tlp_p_afifo_data              
 <3>     TLPAP_CTL RO      0x0        0x0        BIST Status for the tlp_p_afifo_ctl               
 <2>     TLPAC_D   RO      0x0        0x0        BIST Status for the tlp_c_afifo_data              
 <1>     TLPAC_CTL RO      0x0        0x0        BIST Status for the tlp_c_afifo_ctl               
 <0>     M2S       RO      0x0        0x0        BIST Status for the m2s_fifo                      
-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the pip.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

 * 
 * PIP_BIST_STATUS = PIP's BIST Results
 * 
 *  
 * 
$PIP_BIST_STATUS   Address=(0x11800A0000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:20> NS    RAZ     NS         NS         Reserved.                                         
 <19:0>  BIST  RO      0x0        0x0        BIST Results.                                     
                                             HW sets a bit in BIST for for memory that fails
                                             BIST.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_INT_REG = PIP's Interrupt Register
 * 
 *  Any exception event that occurs is captured in the PIP_INT_REG.
 *  PIP_INT_REG will set the exception bit regardless of the value
 *  of PIP_INT_EN.  PIP_INT_EN only controls if an interrupt is
 *  raised to software.
 * 
$PIP_INT_REG   Address=(0x11800A0000008)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:13> NS      RAZ     NS         NS         Reserved.                                         
 <12>    PUNYERR R/W1C/H 0x0        0x0        Frame was received with length <=4B when CRC      
                                               stripping in IPD is enable
 <11>    LENERR  R/W1C/H 0x0        0x0        Frame was received with length error              
 <10>    MAXERR  R/W1C/H 0x0        0x0        Frame was received with length > max_length       
 <9>     MINERR  R/W1C/H 0x0        0x0        Frame was received with length < min_length       
 <8>     BEPERR  R/W1C/H 0x0        0x0        Parity Error in back end memory                   
 <7>     FEPERR  R/W1C/H 0x0        0x0        Parity Error in front end memory                  
 <6>     TODOOVR R/W1C/H 0x0        0x0        Todo list overflow (see PIP_BCK_PRS[HIWATER])     
 <5>     SKPRUNT R/W1C/H 0x0        0x0        Packet was engulfed by skipper                    
                                               This interrupt can occur with received PARTIAL
                                               packets that are truncated to SKIP bytes or
                                               smaller.
 <4>     BADTAG  R/W1C/H 0x0        0x0        A bad tag was sent from IPD                       
 <3>     PRTNXA  R/W1C/H 0x0        0x0        Non-existent port                                 
 <2>     BCKPRS  R/W1C/H 0x0        0x0        PIP asserted backpressure                         
 <1>     CRCERR  R/W1C/H 0x0        0x0        PIP calculated bad CRC                            
 <0>     PKTDRP  R/W1C/H 0x0        0x0        Packet Dropped due to QOS                         

Notes:
"* TODOOVR
The PIP Todo list stores packets that have been received and require work
queue entry generation.  PIP will normally assert backpressure when the
list fills up such that any error is normally is result of a programming
the PIP_BCK_PRS[HIWATER] incorrectly.  PIP itself can handle 29M
packets/sec @500MHz or 15Gbs @ 64B packets.
* SKPRUNT
If a packet size is less then the amount programmed in the per port
skippers, then there will be nothing to parse and the entire packet will
basically be skipped over.  This is probably not what the user desired, so
there is an indication to software.
* BADTAG
A tag is considered bad when it is resued by a new packet before it was
released by PIP.  PIP considers a tag released by one of two methods.
. QOS dropped so that it is released over the pip__ipd_release bus.
. WorkQ entry is validated by the pip__ipd_done signal
* PRTNXA
If PIP receives a packet that is not in the valid port range, the port
processed will be mapped into the valid port space (the mapping is
currently unpredictable) and the PRTNXA bit will be set.  PRTNXA will be
set for packets received under the following conditions:
* packet ports (ports 0-31)
GMX_INF_MODE[TYPE]==0 (SGMII), received port is 4-15 or 20-31
GMX_INF_MODE[TYPE]==1 (XAUI),  received port is 1-15 or 17-31
* upper ports (pci and loopback ports 32-63)
received port is 40-47 or 52-63
* BCKPRS
PIP can assert backpressure to the receive logic when the todo list
exceeds a high-water mark (see PIP_BCK_PRS for more details).  When this
occurs, PIP can raise an interrupt to software.
* CRCERR
Octane can compute CRC in two places.  Each RGMII port will compute its
own CRC, but PIP can provide an additional check or check loopback or
PCI ports. If PIP computes a bad CRC, then PIP will raise an interrupt.
* PKTDRP
PIP can drop packets based on QOS results received from IPD.  If the QOS
algorithm decides to drop a packet, PIP will assert an interrupt."

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_INT_EN = PIP's Interrupt Enable Register
 * 
 *  Determines if hardward should raise an interrupt to software
 *  when an exception event occurs.
 *  Attribute: -dv_fc_scratch=ALL.
 * 
$PIP_INT_EN   Address=(0x11800A0000010)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:13> NS      RAZ     NS         NS         Reserved.                                         
 <12>    PUNYERR R/W     0x0        0x0        Frame was received with length <=4B when CRC      
                                               stripping in IPD is enable
 <11>    LENERR  R/W     0x0        0x0        Frame was received with length error              
 <10>    MAXERR  R/W     0x0        0x0        Frame was received with length > max_length       
 <9>     MINERR  R/W     0x0        0x0        Frame was received with length < min_length       
 <8>     BEPERR  R/W     0x0        0x0        Parity Error in back end memory                   
 <7>     FEPERR  R/W     0x0        0x0        Parity Error in front end memory                  
 <6>     TODOOVR R/W     0x0        0x0        Todo list overflow (see PIP_BCK_PRS[HIWATER])     
 <5>     SKPRUNT R/W     0x0        0x0        Packet was engulfed by skipper                    
 <4>     BADTAG  R/W     0x0        0x0        A bad tag was sent from IPD                       
 <3>     PRTNXA  R/W     0x0        0x0        Non-existent port                                 
 <2>     BCKPRS  R/W     0x0        0x0        PIP asserted backpressure                         
 <1>     CRCERR  R/W     0x0        0x0        PIP calculated bad CRC                            
 <0>     PKTDRP  R/W     0x0        0x0        Packet Dropped due to QOS                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_STAT_CTL = PIP's Stat Control Register
 * 
 *  Controls how the PIP statistics counters are handled.
 * 
$PIP_STAT_CTL   Address=(0x11800A0000018)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS    RAZ     NS         NS         Reserved.                                         
 <0>     RDCLR R/W     0x1        0x1        Stat registers are read and clear                 
                                             0 = stat registers hold value when read
                                             1 = stat registers are cleared when read
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_GBL_CTL = PIP's Global Control Register
 * 
 *  Global control information.  These are the global checker enables for
 *  IPv4/IPv6 and TCP/UDP parsing.  The enables effect all ports.
 * 
$PIP_GBL_CTL   Address=(0x11800A0000020)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field        Field   Reset      Typical    Field                                             
 Pos     Name         Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:28> NS           RAZ     NS         NS         Reserved.                                         
 <27>    IHMSK_DIS    R/W     0x0        0x0        Instruction Header Mask Disable                   
                                                    0=Allow NTAG,NTT,NGRP,NQOS bits in the
                                                    instruction header to control which fields from
                                                    the instruction header are used for WQE WORD2.
                                                    1=Ignore the NTAG,NTT,NGRP,NQOS bits in the
                                                    instruction header and act as if these fields
                                                    were zero.  Thus always use the TAG,TT,GRP,QOS
                                                    (depending on the instruction header length)
                                                    from the instruction header for the WQE WORD2.
 <26>    DSA_GRP_TVID R/W     0x0        0x0        DSA Group Algorithm                               
                                                    Use the DSA source id to compute GRP
 <25>    DSA_GRP_SCMD R/W     0x0        0x0        DSA Group Algorithm                               
                                                    Use the DSA source id to compute GRP when the
                                                    DSA tag command to TO_CPU
 <24>    DSA_GRP_SID  R/W     0x0        0x0        DSA Group Algorithm                               
                                                    Use the DSA VLAN id to compute GRP
 <23:21> NS           RAZ     NS         NS         Reserved.                                         
 <20>    RING_EN      R/W     0x0        0x1        Enable DPI ring information in WQE                
 <19:17> SPARE        R/W     0x0        0x0        Spare Bits                                        
 <16>    IGNRS        R/W     0x0        0x0        Ignore the PKT_INST_HDR[RS] bit when set          
                                                    Does not apply to DPI ports (32-35)
                                                    When using 2-byte instruction header words,
                                                    either PIP_PRT_CFG[DYN_RS] or IGNRS should be set
 <15>    VS_WQE       R/W     0x0        0x0        Which DSA/VLAN CFI/ID to use when VLAN Stacking   
                                                    0=use the 1st (network order) VLAN
                                                    1=use the 2nd (network order) VLAN
 <14>    VS_QOS       R/W     0x0        0x0        Which DSA/VLAN priority to use when VLAN Stacking 
                                                    0=use the 1st (network order) VLAN
                                                    1=use the 2nd (network order) VLAN
 <13>    L2_MAL       R/W     0x1        0x1        Enable L2 malformed packet check                  
 <12>    TCP_FLAG     R/W     0x1        0x1        Enable TCP flags checks                           
 <11>    L4_LEN       R/W     0x1        0x1        Enable TCP/UDP length check                       
 <10>    L4_CHK       R/W     0x1        0x1        Enable TCP/UDP checksum check                     
 <9>     L4_PRT       R/W     0x1        0x1        Enable TCP/UDP illegal port check                 
 <8>     L4_MAL       R/W     0x1        0x1        Enable TCP/UDP malformed packet check             
 <7:6>   NS           RAZ     NS         NS         Reserved.                                         
 <5:4>   IP6_EEXT     R/W     0x1        0x3        Enable IPv6 early extension headers               
 <3>     IP4_OPTS     R/W     0x1        0x1        Enable IPv4 options check                         
 <2>     IP_HOP       R/W     0x1        0x1        Enable TTL (IPv4) / hop (IPv6) check              
 <1>     IP_MAL       R/W     0x1        0x1        Enable malformed check                            
 <0>     IP_CHK       R/W     0x1        0x1        Enable IPv4 header checksum check                 

Notes:
The following text describes the conditions in which each checker will
assert and flag an exception.  By disabling the checker, the exception will
not be flagged and the packet will be parsed as best it can.  Note, by
disabling conditions, packets can be parsed incorrectly (.i.e. IP_MAL and
L4_MAL could cause bits to be seen in the wrong place.  IP_CHK and L4_CHK
means that the packet was corrupted).
* IP_CHK
Indicates that an IPv4 packet contained an IPv4 header checksum
violations.  Only applies to packets classified as IPv4.
* IP_MAL
Indicates that the packet was malformed.  Malformed packets are defined as
packets that are not long enough to cover the IP header or not long enough
to cover the length in the IP header.
* IP_HOP
Indicates that the IPv4 TTL field or IPv6 HOP field is zero.
* IP4_OPTS
Indicates the presence of IPv4 options.  It is set when the length != 5.
This only applies to packets classified as IPv4.
* IP6_EEXT
Indicate the presence of IPv6 early extension headers.  These bits only
apply to packets classified as IPv6.  Bit 0 will flag early extensions
when next_header is any one of the following...
hop-by-hop (0)
destination (60)
routing (43)
Bit 1 will flag early extentions when next_header is NOT any of the
following...
TCP (6)
UDP (17)
fragmentation (44)
ICMP (58)
IPSEC ESP (50)
IPSEC AH (51)
IPCOMP
* L4_MAL
Indicates that a TCP or UDP packet is not long enough to cover the TCP or
UDP header.
* L4_PRT
Indicates that a TCP or UDP packet has an illegal port number either the
source or destination port is zero.
* L4_CHK
Indicates that a packet classified as either TCP or UDP contains an L4
checksum failure
* L4_LEN
Indicates that the TCP or UDP length does not match the the IP length.
* TCP_FLAG
Indicates any of the following conditions...
{URG, ACK, PSH, RST, SYN, FIN} : tcp_flag
6'b000001: (FIN only)
6'b000000: (0)
6'bxxx1x1: (RST+FIN+*)
6'b1xxx1x: (URG+SYN+*)
6'bxxx11x: (RST+SYN+*)
6'bxxxx11: (SYN+FIN+*)

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_GBL_CFG = PIP's Global Config Register
 * 
 *  Global config information that applies to all ports.
 * 
$PIP_GBL_CFG   Address=(0x11800A0000028)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:19> NS      RAZ     NS         NS         Reserved.                                         
 <18>    TAG_SYN R/W     0x0        0x0        Do not include src_crc for TCP/SYN&!ACK packets   
                                               0 = include src_crc
                                               1 = tag hash is dst_crc for TCP/SYN&!ACK packets
 <17>    IP6_UDP R/W     0x1        0x1        IPv6/UDP checksum is not optional                 
                                               0 = Allow optional checksum code
                                               1 = Do not allow optional checksum code
 <16>    MAX_L2  R/W     0x0        0x0        Config bit to choose the largest L2 frame size    
                                               Chooses the value of the L2 Type/Length field
                                               to classify the frame as length.
                                               0 = 1500 / 0x5dc
                                               1 = 1535 / 0x5ff
 <15:11> NS      RAZ     NS         NS         Reserved.                                         
 <10:8>  RAW_SHF R/W     0x0        0x0        RAW Packet shift amount                           
                                               Number of bytes to pad a RAW packet.
 <7:3>   NS      RAZ     NS         NS         Reserved.                                         
 <2:0>   NIP_SHF R/W     0x0        0x0        Non-IP shift amount                               
                                               Number of bytes to pad a packet that has been
                                               classified as not IP.

Notes:
"* IP6_UDP
IPv4 allows optional UDP checksum by sending the all 0's patterns.  IPv6
outlaws this and the spec says to always check UDP checksum.  This mode
bit allows the user to treat IPv6 as IPv4, meaning that the all 0's
pattern will cause a UDP checksum pass."

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_SFT_RST = PIP Soft Reset
 * 
 *  When written to a '1', resets the pip block
 * 
$PIP_SFT_RST   Address=(0x11800A0000030)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS    RAZ     NS         NS         Reserved.                                         
 <0>     RST   R/W     0x0        0x0        Soft Reset                                        

Notes:
When RST is set to a '1' by SW, PIP will get a short reset pulse (3 cycles
in duration).  Although this will reset much of PIP's internal state, some
CSRs will not reset.
. PIP_BIST_STATUS
. PIP_STAT0_PRT*
. PIP_STAT1_PRT*
. PIP_STAT2_PRT*
. PIP_STAT3_PRT*
. PIP_STAT4_PRT*
. PIP_STAT5_PRT*
. PIP_STAT6_PRT*
. PIP_STAT7_PRT*
. PIP_STAT8_PRT*
. PIP_STAT9_PRT*
. PIP_XSTAT0_PRT*
. PIP_XSTAT1_PRT*
. PIP_XSTAT2_PRT*
. PIP_XSTAT3_PRT*
. PIP_XSTAT4_PRT*
. PIP_XSTAT5_PRT*
. PIP_XSTAT6_PRT*
. PIP_XSTAT7_PRT*
. PIP_XSTAT8_PRT*
. PIP_XSTAT9_PRT*
. PIP_STAT_INB_PKTS*
. PIP_STAT_INB_OCTS*
. PIP_STAT_INB_ERRS*
. PIP_TAG_INC*

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_BCK_PRS = PIP's Back Pressure Register
 * 
 *  When to assert backpressure based on the todo list filling up
 * 
$PIP_BCK_PRS   Address=(0x11800A0000038)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    BCKPRS  RO/H    0x0        0x0        PIP is currently asserting backpressure to IOB    
                                               Backpressure from PIP will assert when the
                                               entries to the todo list exceed HIWATER.
                                               Backpressure will be held until the todo entries
                                               is less than or equal to LOWATER.
 <62:13> NS      RAZ     0x0        NS         Reserved.                                         
 <12:8>  HIWATER R/W     0x18       0x18       Water mark in the todo list to assert backpressure
                                               Legal values are 1-26.  A 0 value will deadlock
                                               the machine.  A value > 26, will trash memory
 <7:5>   NS      RAZ     0x0        NS         Reserved.                                         
 <4:0>   LOWATER R/W     0x4        0x4        Water mark in the todo list to release backpressure
                                               The LOWATER value should be < HIWATER.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_CLKEN
 * 
 *  
 * 
$PIP_CLKEN   Address=(0x11800A0000040)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS    RAZ     0x0        NS         Reserved.                                         
 <0>     CLKEN R/W     0x0        0x0        Controls the conditional clocking within PIP      
                                             0=Allow HW to control the clocks
                                             1=Force the clocks to be always on
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_IP_OFFSET = Location of the IP in the workQ entry
 * 
 *  An 8-byte offset to find the start of the IP header in the data portion of IP workQ entires
 * 
$PIP_IP_OFFSET   Address=(0x11800A0000060)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:3>  NS     RAZ     NS         NS         Reserved.                                         
 <2:0>   OFFSET R/W     0x0        0x0        Number of 8B ticks to include in workQ entry      
                                              prior to IP data
                                              0:  0 Bytes / IP start at WORD4 of workQ entry
                                              1:  8 Bytes / IP start at WORD5 of workQ entry
                                              2: 16 Bytes / IP start at WORD6 of workQ entry
                                              3: 24 Bytes / IP start at WORD7 of workQ entry
                                              4: 32 Bytes / IP start at WORD8 of workQ entry
                                              5: 40 Bytes / IP start at WORD9 of workQ entry
                                              6: 48 Bytes / IP start at WORD10 of workQ entry
                                              7: 56 Bytes / IP start at WORD11 of workQ entry

Notes:
In normal configurations, OFFSET must be set in the 0..4 range to allow the
entire IP and TCP/UDP headers to be buffered in HW and calculate the L4
checksum for TCP/UDP packets.
The MAX value of OFFSET is determined by the the types of packets that can
be sent to PIP as follows...
Packet Type                 MAX OFFSET
IPv4/TCP/UDP                 7
IPv6/TCP/UDP                 5
IPv6/without L4 parsing  6
If the L4 can be ignored, then the MAX OFFSET for IPv6 packets can increase
to 6.  Here are the following programming restrictions for IPv6 packets and
OFFSET==6:
. PIP_GBL_CTL[TCP_FLAG] == 0
. PIP_GBL_CTL[L4_LEN]   == 0
. PIP_GBL_CTL[L4_CHK]   == 0
. PIP_GBL_CTL[L4_PRT]   == 0
. PIP_GBL_CTL[L4_MAL]   == 0
. PIP_DEC_IPSEC[TCP]    == 0
. PIP_DEC_IPSEC[UDP]    == 0
. PIP_PRT_TAG[IP6_DPRT] == 0
. PIP_PRT_TAG[IP6_SPRT] == 0
. PIP_PRT_TAG[TCP6_TAG] == 0
. PIP_GBL_CFG[TAG_SYN]  == 0

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_TAG_SECRET = Initial value in tag generation
 * 
 *  The source and destination IV's provide a mechanism for each Octeon to be unique.
 * 
$PIP_TAG_SECRET   Address=(0x11800A0000068)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:16> DST   R/W     0x0        0x0        Secret for the destination tuple tag CRC calc     
 <15:0>  SRC   R/W     0x0        0x0        Secret for the source tuple tag CRC calc          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_TAG_MASK = Mask bit in the tag generation
 * 
 *  
 * 
$PIP_TAG_MASK   Address=(0x11800A0000070)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:0>  MASK  R/W     0x0        0x0        When set, MASK clears individual bits of lower 16 
                                             bits of the computed tag.  Does not effect RAW
                                             or INSTR HDR packets.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_TODO_ENTRY = Head entry of the Todo list (debug only)
 * 
 *  Summary of the current packet that has completed and waiting to be processed
 * 
$PIP_TODO_ENTRY   Address=(0x11800A0000078)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    VAL   RO/H    NS         NS         Entry is valid                                    
 <62>    NS    RAZ     NS         NS         Reserved.                                         
 <61:0>  ENTRY RO/H    NS         NS         Todo list entry summary                           
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_DEC_IPSEC = UDP or TCP ports to watch for DEC IPSEC
 * 
 *  PIP sets the dec_ipsec based on TCP or UDP destination port.
 * 
$PIP_DEC_IPSEC(0..3)   Address=(0x11800A0000080+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:18> NS    RAZ     NS         NS         Reserved.                                         
 <17>    TCP   R/W     0x0        0x0        This DPRT should be used for TCP packets          
 <16>    UDP   R/W     0x0        0x0        This DPRT should be used for UDP packets          
 <15:0>  DPRT  R/W     0x0        0x0        UDP or TCP destination port to match on           
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_RAW_WORD = The RAW Word2 of the workQ entry.
 * 
 *  The RAW Word2 to be inserted into the workQ entry of RAWFULL packets.
 * 
$PIP_RAW_WORD   Address=(0x11800A00000B0)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:56> NS    RAZ     NS         NS         Reserved.                                         
 <55:0>  WORD  R/W     0x0        0x0        Word2 of the workQ entry                          
                                             The 8-bit bufs field is still set by HW (IPD)
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_QOS_VLAN
 * 
 *  If the PIP indentifies a packet is DSA/VLAN tagged, then the QOS
 *  can be set based on the DSA/VLAN user priority.  These eight register
 *  comprise the QOS values for all DSA/VLAN user priority values.
 * 
$PIP_QOS_VLAN(0..7)   Address=(0x11800A00000C0+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:7>  NS    RAZ     NS         NS         Reserved.                                         
 <6:4>   QOS1  R/W     0x0        0x0        DSA/VLAN QOS level                                
                                             Selected when PIP_PRT_CFGx[QOS_VSEL] = 1
 <3>     NS    RAZ     NS         NS         Reserved.                                         
 <2:0>   QOS   R/W     0x0        0x0        DSA/VLAN QOS level                                
                                             Selected when PIP_PRT_CFGx[QOS_VSEL] = 0
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_QOS_WATCH
 * 
 *  Sets up the Configuration CSRs for the four QOS Watchers.
 *  Each Watcher can be set to look for a specific protocol,
 *  TCP/UDP destination port, or Ethertype to override the
 *  default QOS value.
 * 
$PIP_QOS_WATCH(0..7)   Address=(0x11800A0000100+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS      RAZ     NS         NS         Reserved.                                         
 <47:32> MASK    R/W     0x0        0x0        Mask off a range of values                        
 <31:28> NS      RAZ     NS         NS         Reserved.                                         
 <27:24> GRP     R/W     0x0        0x0        The GRP number of the watcher                     
 <23>    NS      RAZ     NS         NS         Reserved.                                         
 <22:20> WATCHER R/W     0x0        0x0        The QOS level of the watcher                      
 <19>    NS      RAZ     NS         NS         Reserved.                                         
 <18:16> TYP     R/W     0x0        0x0        The field for the watcher match against           
                                               0   = disable across all ports
                                               1   = protocol (ipv4)
                                               = next_header (ipv6)
                                               2   = TCP destination port
                                               3   = UDP destination port
                                               4   = Ether type
                                               5-7 = Reserved
 <15:0>  MATCH   R/W     0x0        0x0        The value to watch for                            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_FRM_LEN_CHK
 * 
 *  
 * 
$PIP_FRM_LEN_CHK(0..0)   Address=(0x11800A0000180+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS     RAZ     NS         NS         Reserved.                                         
 <31:16> MAXLEN R/W     0x600      0x600      Byte count for Max-sized frame check              
                                              PIP_PRT_CFGn[MAXERR_EN] enables the check for
                                              port n.
                                              If enabled, failing packets set the MAXERR
                                              interrupt and work-queue entry WORD2[opcode] is
                                              set to OVER_FCS (0x3, if packet has bad FCS) or
                                              OVER_ERR (0x4, if packet has good FCS).
                                              The effective MAXLEN used by HW is
                                              PIP_PRT_CFG[DSA_EN] == 0,
                                              PIP_FRM_LEN_CHK[MAXLEN] + 4*VV + 4*VS
                                              PIP_PRT_CFG[DSA_EN] == 1,
                                              PIP_FRM_LEN_CHK[MAXLEN] + PIP_PRT_CFG[SKIP]+4*VS
                                              If PTP_MODE, the 8B timestamp is prepended to the
                                              packet.  MAXLEN should be increased by 8 to
                                              compensate for the additional timestamp field.
 <15:0>  MINLEN R/W     0x40       0x40       Byte count for Min-sized frame check              
                                              PIP_PRT_CFGn[MINERR_EN] enables the check for
                                              port n.
                                              If enabled, failing packets set the MINERR
                                              interrupt and work-queue entry WORD2[opcode] is
                                              set to UNDER_FCS (0x6, if packet has bad FCS) or
                                              UNDER_ERR (0x8, if packet has good FCS).
                                              If PTP_MODE, the 8B timestamp is prepended to the
                                              packet.  MINLEN should be increased by 8 to
                                              compensate for the additional timestamp field.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_DSA_SRC_GRP
 * 
 *  
 * 
$PIP_DSA_SRC_GRP   Address=(0x11800A0000190)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:60> MAP15 R/W     0x0        0x0        DSA Group Algorithm                               
 <59:56> MAP14 R/W     0x0        0x0        DSA Group Algorithm                               
 <55:52> MAP13 R/W     0x0        0x0        DSA Group Algorithm                               
 <51:48> MAP12 R/W     0x0        0x0        DSA Group Algorithm                               
 <47:44> MAP11 R/W     0x0        0x0        DSA Group Algorithm                               
 <43:40> MAP10 R/W     0x0        0x0        DSA Group Algorithm                               
 <39:36> MAP9  R/W     0x0        0x0        DSA Group Algorithm                               
 <35:32> MAP8  R/W     0x0        0x0        DSA Group Algorithm                               
 <31:28> MAP7  R/W     0x0        0x0        DSA Group Algorithm                               
 <27:24> MAP6  R/W     0x0        0x0        DSA Group Algorithm                               
 <23:20> MAP5  R/W     0x0        0x0        DSA Group Algorithm                               
 <19:16> MAP4  R/W     0x0        0x0        DSA Group Algorithm                               
 <15:12> MAP3  R/W     0x0        0x0        DSA Group Algorithm                               
 <11:8>  MAP2  R/W     0x0        0x0        DSA Group Algorithm                               
 <7:4>   MAP1  R/W     0x0        0x0        DSA Group Algorithm                               
 <3:0>   MAP0  R/W     0x0        0x0        DSA Group Algorithm                               
                                             Use the DSA source id to compute GRP
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_DSA_VID_GRP
 * 
 *  
 * 
$PIP_DSA_VID_GRP   Address=(0x11800A0000198)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:60> MAP15 R/W     0x0        0x0        DSA Group Algorithm                               
 <59:56> MAP14 R/W     0x0        0x0        DSA Group Algorithm                               
 <55:52> MAP13 R/W     0x0        0x0        DSA Group Algorithm                               
 <51:48> MAP12 R/W     0x0        0x0        DSA Group Algorithm                               
 <47:44> MAP11 R/W     0x0        0x0        DSA Group Algorithm                               
 <43:40> MAP10 R/W     0x0        0x0        DSA Group Algorithm                               
 <39:36> MAP9  R/W     0x0        0x0        DSA Group Algorithm                               
 <35:32> MAP8  R/W     0x0        0x0        DSA Group Algorithm                               
 <31:28> MAP7  R/W     0x0        0x0        DSA Group Algorithm                               
 <27:24> MAP6  R/W     0x0        0x0        DSA Group Algorithm                               
 <23:20> MAP5  R/W     0x0        0x0        DSA Group Algorithm                               
 <19:16> MAP4  R/W     0x0        0x0        DSA Group Algorithm                               
 <15:12> MAP3  R/W     0x0        0x0        DSA Group Algorithm                               
 <11:8>  MAP2  R/W     0x0        0x0        DSA Group Algorithm                               
 <7:4>   MAP1  R/W     0x0        0x0        DSA Group Algorithm                               
 <3:0>   MAP0  R/W     0x0        0x0        DSA Group Algorithm                               
                                             Use the DSA source id to compute GRP
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_HG_PRI_QOS
 * 
 *  
 * 
$PIP_HG_PRI_QOS   Address=(0x11800A00001A0)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:13> NS     RAZ     NS         NS         Reserved.                                         
 <12>    UP_QOS RAZ     0x0        NS         When written to '1', updates the entry in the     
                                              HG_QOS_TABLE as specified by PRI to a value of
                                              QOS as follows
                                              HG_QOS_TABLE[PRI] = QOS
 <11>    NS     RAZ     NS         NS         Reserved.                                         
 <10:8>  QOS    R/W/H   0x0        NS         QOS Map level to priority                         
 <7:6>   NS     RAZ     NS         NS         Reserved.                                         
 <5:0>   PRI    R/W     0x0        NS         The priority level from HiGig header              
                                              HiGig/HiGig+ PRI = {1'b0, CNG[1:0], COS[2:0]}
                                              HiGig2       PRI = {DP[1:0], TC[3:0]}
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_VLAN_ETYPES
 * 
 *  
 * 
$PIP_VLAN_ETYPES(0..1)   Address=(0x11800A00001C0+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> TYPE3 R/W     0x8100     0x8100     VLAN Ethertype                                    
 <47:32> TYPE2 R/W     0x8100     0x8100     VLAN Ethertype                                    
 <31:16> TYPE1 R/W     0x8100     0x8100     VLAN Ethertype                                    
 <15:0>  TYPE0 R/W     0x8100     0x8100     VLAN Ethertype                                    
                                             Specifies ethertypes that will be parsed as
                                             containing VLAN information. Each TYPE is
                                             orthagonal; if all eight are not required, set
                                             multiple TYPEs to the same value (as in the
                                             0x8100 default value).
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_PRT_CFG
 * 
 *  
 * 
$PIP_PRT_CFG(0..3,16..19,24,32..35,36..39)   Address=(0x11800A0000200+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:56> NS         RAZ     NS         NS         Reserved.                                         
 <55>    NS         RAZ     NS         NS         Reserved.                                         
 <54:53> NS         RAZ     NS         NS         Reserved.                                         
 <52>    PAD_LEN    R/W     0x0        0x0        When set, disables the length check for pkts with 
                                                  padding in the client data
 <51>    VLAN_LEN   R/W     0x0        0x0        When set, disables the length check for DSA/VLAN  
                                                  pkts
 <50>    LENERR_EN  R/W     0x1        0x1        L2 length error check enable                      
                                                  Frame was received with length error
                                                  Typically, this check will not be enabled for
                                                  incoming packets on the DPI and sRIO ports
                                                  because the CRC bytes may not normally be
                                                  present.
 <49>    MAXERR_EN  R/W     0x1        0x1        Max frame error check enable                      
                                                  Frame was received with length > max_length
                                                  max_length is defined by PIP_FRM_LEN_CHK[MAXLEN]
 <48>    MINERR_EN  R/W     0x1        0x1        Min frame error check enable                      
                                                  Frame was received with length < min_length
                                                  Typically, this check will not be enabled for
                                                  incoming packets on the DPI and sRIO ports
                                                  because the CRC bytes may not normally be
                                                  present.
                                                  min_length is defined by PIP_FRM_LEN_CHK[MINLEN]
 <47:44> GRP_WAT_47 R/W     0x0        0x0        GRP Watcher enable                                
                                                  (Watchers 4-7)
 <43:40> QOS_WAT_47 R/W     0x0        0x0        QOS Watcher enable                                
                                                  (Watchers 4-7)
 <39:37> NS         RAZ     NS         NS         Reserved.                                         
 <36>    RAWDRP     R/W     0x0        0x0        Allow the IPD to RED drop a packet.               
                                                  Normally, IPD will never drop a packet that PIP
                                                  indicates is RAW.
                                                  0=never drop RAW packets based on RED algorithm
                                                  1=allow RAW packet drops based on RED algorithm
 <35:34> TAG_INC    R/W     0x0        0x0        Which of the 4 PIP_TAG_INC to use when            
                                                  calculating mask tag hash
 <33>    DYN_RS     R/W     0x0        0x0        Dynamically calculate RS based on pkt size and    
                                                  configuration.  If DYN_RS is set then
                                                  PKT_INST_HDR[RS] is not used.  When using 2-byte
                                                  instruction header words, either DYN_RS or
                                                  PIP_GBL_CTL[IGNRS] should be set.
 <32>    INST_HDR   R/W     0x0        0x0        8-byte INST_HDR is present on all packets         
                                                  Internally set for RAWFULL/RAWSCHED packets
                                                  on the DPI ports (32-35).
                                                  Internally cleared for all other packets on the
                                                  DPI ports (32-35).
                                                  Must be zero in DSA mode
 <31:28> GRP_WAT    R/W     0x0        0x0        GRP Watcher enable                                
 <27>    HG_QOS     R/W     0x0        0x0        When set, uses the HiGig priority bits as a       
                                                  lookup into the HG_QOS_TABLE (PIP_HG_PRI_QOS)
                                                  to determine the QOS value
                                                  HG_QOS must not be set when HIGIG_EN=0
 <26:24> QOS        R/W     0x0        0x0        Default QOS level of the port                     
 <23:20> QOS_WAT    R/W     0x0        0x0        QOS Watcher enable                                
                                                  (Watchers 0-3)
 <19>    QOS_VSEL   R/W     0x0        0x0        Which QOS in PIP_QOS_VLAN to use                  
                                                  0 = PIP_QOS_VLAN[QOS]
                                                  1 = PIP_QOS_VLAN[QOS1]
 <18>    QOS_VOD    R/W     0x0        0x0        QOS VLAN over Diffserv                            
                                                  if DSA/VLAN exists, it is used
                                                  else if IP exists, Diffserv is used
                                                  else the per port default is used
                                                  Watchers are still highest priority
 <17>    QOS_DIFF   R/W     0x0        0x0        QOS Diffserv                                      
 <16>    QOS_VLAN   R/W     0x0        0x0        QOS VLAN                                          
 <15:13> NS         RAZ     NS         NS         Reserved.                                         
 <12>    CRC_EN     RO      0x0        0x0        CRC Checking enabled                              
 <11>    HIGIG_EN   R/W     0x0        0x0        Enable HiGig parsing                              
                                                  Should not be set for DPI ports (ports 32-35)
                                                  Should not be set for sRIO ports (ports 40-47)
                                                  Should not be set for ports in which PTP_MODE=1
                                                  When HIGIG_EN=1:
                                                  DSA_EN field below must be zero
                                                  PIP_PRT_CFGB[ALT_SKP_EN] must be zero.
                                                  SKIP field below is both Skip I size and the
                                                  size of the HiGig* header (12 or 16 bytes)
 <10>    DSA_EN     R/W     0x0        0x0        Enable DSA tag parsing                            
                                                  Should not be set for sRIO (ports 40-47)
                                                  Should not be set for ports in which PTP_MODE=1
                                                  When DSA_EN=1:
                                                  HIGIG_EN field above must be zero
                                                  SKIP field below is size of DSA tag (4, 8, or
                                                  12 bytes) rather than the size of Skip I
                                                  total SKIP (Skip I + header + Skip II
                                                  must be zero
                                                  INST_HDR field above must be zero (non-DPI
                                                  ports)
                                                  PIP_PRT_CFGB[ALT_SKP_EN] must be zero.
                                                  For DPI ports, SLI_PKT*_INSTR_HEADER[USE_IHDR]
                                                  and DPI_INST_HDR[R] should be clear
                                                  MODE field below must be "skip to L2"
 <9:8>   MODE       R/W     0x0        0x0        Parse Mode                                        
                                                  0 = no packet inspection (Uninterpreted)
                                                  1 = L2 parsing / skip to L2
                                                  2 = IP parsing / skip to L3
                                                  3 = (illegal)
                                                  Must be 2 ("skip to L2") when in DSA mode.
 <7>     NS         RAZ     NS         NS         Reserved.                                         
 <6:0>   SKIP       R/W     0x0        0x0        Optional Skip I amount for packets.               
                                                  HW forces the SKIP to zero for packets on DPI
                                                  ports (32-35) when a PKT_INST_HDR is present.
                                                  See PIP_PRT_CFGB[ALT_SKP*] and PIP_ALT_SKIP_CFG.
                                                  See HRM sections "Parse Mode and Skip Length
                                                  Selection" and "Legal Skip Values"
                                                  for further details.
                                                  In DSA mode, indicates the DSA header length, not
                                                  Skip I size. (Must be 4,8,or 12)
                                                  In HIGIG mode, indicates both the Skip I size and
                                                  the HiGig header size (Must be 12 or 16).
                                                  If PTP_MODE, the 8B timestamp is prepended to the
                                                  packet.  SKIP should be increased by 8 to
                                                  compensate for the additional timestamp field.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_PRT_TAG
 * 
 *  
 * 
$PIP_PRT_TAG(0..3,16..19,24,32..35,36..39)   Address=(0x11800A0000400+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field        Field   Reset      Typical    Field                                             
 Pos     Name         Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:40> NS           RAZ     NS         NS         Reserved.                                         
 <39:36> GRPTAGBASE   R/W     0x0        0x0        Offset to use when computing group from tag bits  
                                                    when GRPTAG is set.
 <35:32> GRPTAGMASK   R/W     0x0        0x0        Which bits of the tag to exclude when computing   
                                                    group when GRPTAG is set.
 <31>    GRPTAG       R/W     0x0        0x0        When set, use the lower bit of the tag to compute 
                                                    the group in the work queue entry
                                                    GRP = WQE[TAG[3:0]] & ~GRPTAGMASK + GRPTAGBASE
 <30>    GRPTAG_MSKIP R/W     0x0        0x0        When set, GRPTAG will be used regardless if the   
                                                    packet IS_IP.
 <29:28> TAG_MODE     R/W     0x0        0x0        Which tag algorithm to use                        
                                                    0 = always use tuple tag algorithm
                                                    1 = always use mask tag algorithm
                                                    2 = if packet is IP, use tuple else use mask
                                                    3 = tuple XOR mask
 <27:26> INC_VS       R/W     0x0        0x0        determines the DSA/VLAN ID (VID) to be included in
                                                    tuple tag when VLAN stacking is detected
                                                    0 = do not include VID in tuple tag generation
                                                    1 = include VID (VLAN0) in hash
                                                    2 = include VID (VLAN1) in hash
                                                    3 = include VID ({VLAN0,VLAN1}) in hash
 <25>    INC_VLAN     R/W     0x0        0x0        when set, the DSA/VLAN ID is included in tuple tag
                                                    when VLAN stacking is not detected
                                                    0 = do not include VID in tuple tag generation
                                                    1 = include VID in hash
 <24>    INC_PRT      R/W     0x0        0x0        sets whether the port is included in tuple tag    
 <23>    IP6_DPRT     R/W     0x0        0x0        sets whether the TCP/UDP dst port is              
                                                    included in tuple tag for IPv6 packets
 <22>    IP4_DPRT     R/W     0x0        0x0        sets whether the TCP/UDP dst port is              
                                                    included in tuple tag for IPv4
 <21>    IP6_SPRT     R/W     0x0        0x0        sets whether the TCP/UDP src port is              
                                                    included in tuple tag for IPv6 packets
 <20>    IP4_SPRT     R/W     0x0        0x0        sets whether the TCP/UDP src port is              
                                                    included in tuple tag for IPv4
 <19>    IP6_NXTH     R/W     0x0        0x0        sets whether ipv6 includes next header in tuple   
                                                    tag hash
 <18>    IP4_PCTL     R/W     0x0        0x0        sets whether ipv4 includes protocol in tuple      
                                                    tag hash
 <17>    IP6_DST      R/W     0x0        0x0        sets whether ipv6 includes dst address in tuple   
                                                    tag hash
 <16>    IP4_DST      R/W     0x0        0x0        sets whether ipv4 includes dst address in tuple   
                                                    tag hash
 <15>    IP6_SRC      R/W     0x0        0x0        sets whether ipv6 includes src address in tuple   
                                                    tag hash
 <14>    IP4_SRC      R/W     0x0        0x0        sets whether ipv4 includes src address in tuple   
                                                    tag hash
 <13:12> TCP6_TAG     R/W     0x0        0x0        sets the tag_type of a TCP packet (IPv6)          
                                                    0 = ordered tags
                                                    1 = atomic tags
                                                    2 = Null tags
 <11:10> TCP4_TAG     R/W     0x0        0x0        sets the tag_type of a TCP packet (IPv4)          
                                                    0 = ordered tags
                                                    1 = atomic tags
                                                    2 = Null tags
 <9:8>   IP6_TAG      R/W     0x0        0x0        sets whether IPv6 packet tag type                 
                                                    0 = ordered tags
                                                    1 = atomic tags
                                                    2 = Null tags
 <7:6>   IP4_TAG      R/W     0x0        0x0        sets whether IPv4 packet tag type                 
                                                    0 = ordered tags
                                                    1 = atomic tags
                                                    2 = Null tags
 <5:4>   NON_TAG      R/W     0x0        0x0        sets whether non-IP packet tag type               
                                                    0 = ordered tags
                                                    1 = atomic tags
                                                    2 = Null tags
 <3:0>   GRP          R/W     0x0        0x0        4-bit value indicating the group to schedule to   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_QOS_DIFF
 * 
 *  
 * 
$PIP_QOS_DIFF(0..63)   Address=(0x11800A0000600+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:3>  NS    RAZ     NS         NS         Reserved.                                         
 <2:0>   QOS   R/W     0x0        0x0        Diffserv QOS level                                
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_STAT0_PRT
 * 
 *  "PIP Statistics Counters
 *  Note: special stat counter behavior
 *  1) Read and write operations must arbitrate for the statistics resources
 *  along with the packet engines which are incrementing the counters.
 *  In order to not drop packet information, the packet HW is always a
 *  higher priority and the CSR requests will only be satisified when
 *  there are idle cycles.  This can potentially cause long delays if the
 *  system becomes full.
 *  2) stat counters can be cleared in two ways.  If PIP_STAT_CTL[RDCLR] is
 *  set, then all read accesses will clear the register.  In addition,
 *  any write to a stats register will also reset the register to zero.
 *  Please note that the clearing operations must obey rule #1 above.
 *  3) all counters are wrapping - software must ensure they are read periodically
 *  4) The counters accumulate statistics for packets that are sent to PKI.  If
 *  PTP_MODE is enabled, the 8B timestamp is prepended to the packet.  This
 *  additional 8B of data is captured in the octet counts.
 *  PIP_STAT0_PRT = PIP_STAT_DRP_PKTS / PIP_STAT_DRP_OCTS"
 *  Attribute: -exempt_natural_alignment=a.
 * 
$PIP_STAT0_PRT(0..3,16..19,24,32..35,36..39)   Address=(0x11800A0000800+a*0x50)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> DRP_PKTS R/W/H   0x0        NS         Inbound packets marked to be dropped by the IPD   
                                                QOS widget per port
 <31:0>  DRP_OCTS R/W/H   0x0        NS         Inbound octets marked to be dropped by the IPD    
                                                QOS widget per port
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_STAT1_PRT
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$PIP_STAT1_PRT(0..3,16..19,24,32..35,36..39)   Address=(0x11800A0000808+a*0x50)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS    RAZ     NS         NS         Reserved.                                         
 <47:0>  OCTS  R/W/H   0x0        NS         Number of octets received by PIP (good and bad)   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_STAT2_PRT
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$PIP_STAT2_PRT(0..3,16..19,24,32..35,36..39)   Address=(0x11800A0000810+a*0x50)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> PKTS R/W/H   0x0        NS         Number of packets processed by PIP                
 <31:0>  RAW  R/W/H   0x0        NS         RAWFULL + RAWSCH Packets without an L1/L2 error   
                                            received by PIP per port
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_STAT3_PRT
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$PIP_STAT3_PRT(0..3,16..19,24,32..35,36..39)   Address=(0x11800A0000818+a*0x50)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> BCST R/W/H   0x0        NS         Number of indentified L2 broadcast packets        
                                            Does not include multicast packets
                                            Only includes packets whose parse mode is
                                            SKIP_TO_L2.
 <31:0>  MCST R/W/H   0x0        NS         Number of indentified L2 multicast packets        
                                            Does not include broadcast packets
                                            Only includes packets whose parse mode is
                                            SKIP_TO_L2.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_STAT4_PRT
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$PIP_STAT4_PRT(0..3,16..19,24,32..35,36..39)   Address=(0x11800A0000820+a*0x50)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> H65TO127 R/W/H   0x0        NS         Number of 65-127B packets                         
 <31:0>  H64      R/W/H   0x0        NS         Number of 1-64B packets                           
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_STAT5_PRT
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$PIP_STAT5_PRT(0..3,16..19,24,32..35,36..39)   Address=(0x11800A0000828+a*0x50)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> H256TO511 R/W/H   0x0        NS         Number of 256-511B packets                        
 <31:0>  H128TO255 R/W/H   0x0        NS         Number of 128-255B packets                        
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_STAT6_PRT
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$PIP_STAT6_PRT(0..3,16..19,24,32..35,36..39)   Address=(0x11800A0000830+a*0x50)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> H1024TO1518 R/W/H   0x0        NS         Number of 1024-1518B packets                      
 <31:0>  H512TO1023  R/W/H   0x0        NS         Number of 512-1023B packets                       
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_STAT7_PRT
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$PIP_STAT7_PRT(0..3,16..19,24,32..35,36..39)   Address=(0x11800A0000838+a*0x50)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> FCS   R/W/H   0x0        NS         Number of packets with FCS or Align opcode errors 
 <31:0>  H1519 R/W/H   0x0        NS         Number of 1519-max packets                        

Notes:
DPI does not check FCS, therefore FCS will never increment on DPI ports 32-35
sRIO does not check FCS, therefore FCS will never increment on sRIO ports 40-47

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_STAT8_PRT
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$PIP_STAT8_PRT(0..3,16..19,24,32..35,36..39)   Address=(0x11800A0000840+a*0x50)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> FRAG    R/W/H   0x0        NS         Number of packets with length < min and FCS error 
 <31:0>  UNDERSZ R/W/H   0x0        NS         Number of packets with length < min               

Notes:
DPI does not check FCS, therefore FRAG will never increment on DPI ports 32-35
sRIO does not check FCS, therefore FRAG will never increment on sRIO ports 40-47

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_STAT9_PRT
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$PIP_STAT9_PRT(0..3,16..19,24,32..35,36..39)   Address=(0x11800A0000848+a*0x50)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> JABBER R/W/H   0x0        NS         Number of packets with length > max and FCS error 
 <31:0>  OVERSZ R/W/H   0x0        NS         Number of packets with length > max               

Notes:
DPI does not check FCS, therefore JABBER will never increment on DPI ports 32-35
sRIO does not check FCS, therefore JABBER will never increment on sRIO ports 40-47 due to FCS
errors
sRIO does use the JABBER opcode to communicate sRIO error, therefore JABBER can increment
under the sRIO error conditions

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_STAT10_PRT
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$PIP_STAT10_PRT(0..3,16..19,24,32..35,36..39)   Address=(0x11800A0001480+a*0x10)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> BCAST R/W/H   0x0        NS         Number of packets with L2 Broadcast DMAC          
                                             that were dropped due to RED.
                                             The HW will consider a packet to be an L2
                                             broadcast packet when the 48-bit DMAC is all 1's.
                                             Only applies when the parse mode for the packet
                                             is SKIP-TO-L2.
 <31:0>  MCAST R/W/H   0x0        NS         Number of packets with L2 Mulitcast DMAC          
                                             that were dropped due to RED.
                                             The HW will consider a packet to be an L2
                                             multicast packet when the least-significant bit
                                             of the first byte of the DMAC is set and the
                                             packet is not an L2 broadcast packet.
                                             Only applies when the parse mode for the packet
                                             is SKIP-TO-L2.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_STAT11_PRT
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$PIP_STAT11_PRT(0..3,16..19,24,32..35,36..39)   Address=(0x11800A0001488+a*0x10)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> BCAST R/W/H   0x0        NS         Number of packets with L3 Broadcast Dest Address  
                                             that were dropped due to RED.
                                             The HW considers an IPv4 packet to be broadcast
                                             when all bits are set in the MSB of the
                                             destination address. IPv6 does not have the
                                             concept of a broadcast packets.
                                             Only applies when the parse mode for the packet
                                             is SKIP-TO-L2 and the packet is IP or the parse
                                             mode for the packet is SKIP-TO-IP.
 <31:0>  MCAST R/W/H   0x0        NS         Number of packets with L3 Multicast Dest Address  
                                             that were dropped due to RED.
                                             The HW considers an IPv4 packet to be multicast
                                             when the most-significant nibble of the 32-bit
                                             destination address is 0xE (i.e. it is a class D
                                             address). The HW considers an IPv6 packet to be
                                             multicast when the most-significant byte of the
                                             128-bit destination address is all 1's.
                                             Only applies when the parse mode for the packet
                                             is SKIP-TO-L2 and the packet is IP or the parse
                                             mode for the packet is SKIP-TO-IP.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_TAG_INC = Which bytes to include in the new tag hash algorithm
 * 
 *  # $PIP_TAG_INC@ = 0x300+@ @=(0..63) RegType=(RSL) RtlReg=(pip_tag_inc_csr_direct_TestbuilderTask)
 * 
$PIP_TAG_INC(0..63)   Address=(0x11800A0001800+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:0>   EN    R/W     0x0        0x0        Which bytes to include in mask tag algorithm      
                                             Broken into 4, 16-entry masks to cover 128B
                                             PIP_PRT_CFG[TAG_INC] selects 1 of 4 to use
                                             registers  0-15 map to PIP_PRT_CFG[TAG_INC] == 0
                                             registers 16-31 map to PIP_PRT_CFG[TAG_INC] == 1
                                             registers 32-47 map to PIP_PRT_CFG[TAG_INC] == 2
                                             registers 48-63 map to PIP_PRT_CFG[TAG_INC] == 3
                                             [7] coresponds to the MSB of the 8B word
                                             [0] coresponds to the LSB of the 8B word
                                             If PTP_MODE, the 8B timestamp is prepended to the
                                             packet.  The EN byte masks should be adjusted to
                                             compensate for the additional timestamp field.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_STAT_INB_PKTS
 * 
 *  Inbound stats collect all data sent to PIP from all packet interfaces.
 *  Its the raw counts of everything that comes into the block.  The counts
 *  will reflect all error packets and packets dropped by the PKI RED engine.
 *  These counts are intended for system debug, but could convey useful
 *  information in production systems.
 *  Attribute: -exempt_natural_alignment=a.
 * 
$PIP_STAT_INB_PKTS(0..3,16..19,24,32..35,36..39)   Address=(0x11800A0001A00+a*0x20)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  PKTS  R/W/H   0x0        NS         Number of packets without errors                  
                                             received by PIP
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_STAT_INB_OCTS
 * 
 *  Inbound stats collect all data sent to PIP from all packet interfaces.
 *  Its the raw counts of everything that comes into the block.  The counts
 *  will reflect all error packets and packets dropped by the PKI RED engine.
 *  These counts are intended for system debug, but could convey useful
 *  information in production systems. The OCTS will include the bytes from
 *  timestamp fields in PTP_MODE.
 *  Attribute: -exempt_natural_alignment=a.
 * 
$PIP_STAT_INB_OCTS(0..3,16..19,24,32..35,36..39)   Address=(0x11800A0001A08+a*0x20)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS    RAZ     NS         NS         Reserved.                                         
 <47:0>  OCTS  R/W/H   0x0        NS         Total number of octets from all packets received  
                                             by PIP
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_STAT_INB_ERRS
 * 
 *  Inbound stats collect all data sent to PIP from all packet interfaces.
 *  Its the raw counts of everything that comes into the block.  The counts
 *  will reflect all error packets and packets dropped by the PKI RED engine.
 *  These counts are intended for system debug, but could convey useful
 *  information in production systems.
 *  Attribute: -exempt_natural_alignment=a.
 * 
$PIP_STAT_INB_ERRS(0..3,16..19,24,32..35,36..39)   Address=(0x11800A0001A10+a*0x20)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:0>  ERRS  R/W/H   0x0        NS         Number of packets with errors                     
                                             received by PIP
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_BSEL_EXT_CFG
 * 
 *  tag, offset, and skip values to be used when using the corresponding extractor.
 * 
$PIP_BSEL_EXT_CFG(0..3)   Address=(0x11800A0002800+a*0x10)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:56> NS        RAZ     NS         NS         Reserved.                                         
 <55:40> UPPER_TAG R/W     0x0        NS         Extra Tag bits to be added to tag field from table
                                                 Only included when PIP_PRT_TAG[INC_PRT]=0
                                                 WORD2[TAG<31:16>]
 <39:32> TAG       R/W     0x0        NS         Extra Tag bits to be added to tag field from table
                                                 WORD2[TAG<15:8>]
 <31:25> NS        RAZ     NS         NS         Reserved.                                         
 <24:16> OFFSET    R/W     0x0        NS         Indicates offset to add to extractor mem adr      
                                                 to get final address to the lookup table
 <15:7>  NS        RAZ     NS         NS         Reserved.                                         
 <6:0>   SKIP      R/W     0x0        NS         Indicates number of bytes to skip from start of   
                                                 packet 0-64
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_BSEL_EXT_POS
 * 
 *  bit positions and valids to be used when using the corresponding extractor.
 * 
$PIP_BSEL_EXT_POS(0..3)   Address=(0x11800A0002808+a*0x10)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    POS7_VAL R/W     0x0        NS         Valid bit for bit position 7                      
 <62:56> POS7     R/W     0x0        NS         Bit position for the 8th bit  from 128 bit segment
                                                of pkt that is defined by the SKIP field of
                                                PIP_BSEL_EXT_CFG register.
 <55>    POS6_VAL R/W     0x0        NS         Valid bit for bit position 6                      
 <54:48> POS6     R/W     0x0        NS         Bit position for the 7th bit  from 128 bit segment
                                                of pkt that is defined by the SKIP field of
                                                PIP_BSEL_EXT_CFG register.
 <47>    POS5_VAL R/W     0x0        NS         Valid bit for bit position 5                      
 <46:40> POS5     R/W     0x0        NS         Bit position for the 6th bit  from 128 bit segment
                                                of pkt that is defined by the SKIP field of
                                                PIP_BSEL_EXT_CFG register.
 <39>    POS4_VAL R/W     0x0        NS         Valid bit for bit position 4                      
 <38:32> POS4     R/W     0x0        NS         Bit position for the 5th bit  from 128 bit segment
                                                of pkt that is defined by the SKIP field of
                                                PIP_BSEL_EXT_CFG register.
 <31>    POS3_VAL R/W     0x0        NS         Valid bit for bit position 3                      
 <30:24> POS3     R/W     0x0        NS         Bit position for the 4th bit  from 128 bit segment
                                                of pkt that is defined by the SKIP field of
                                                PIP_BSEL_EXT_CFG register.
 <23>    POS2_VAL R/W     0x0        NS         Valid bit for bit position 2                      
 <22:16> POS2     R/W     0x0        NS         Bit position for the 3rd bit  from 128 bit segment
                                                of pkt that is defined by the SKIP field of
                                                PIP_BSEL_EXT_CFG register.
 <15>    POS1_VAL R/W     0x0        NS         Valid bit for bit position 1                      
 <14:8>  POS1     R/W     0x0        NS         Bit position for the 2nd bit  from 128 bit segment
                                                of pkt that is defined by the SKIP field of
                                                PIP_BSEL_EXT_CFG register.
 <7>     POS0_VAL R/W     0x0        NS         Valid bit for bit position 0                      
 <6:0>   POS0     R/W     0x0        NS         Bit position for the 1st bit  from 128 bit segment
                                                of pkt that is defined by the SKIP field of
                                                PIP_BSEL_EXT_CFG register.

Notes:
Examples on bit positioning:
the most-significant-bit of the 3rd byte         ... PIP_BSEL_EXT_CFG*[SKIP]=1 POSn=15
(decimal) or
PIP_BSEL_EXT_CFG*[SKIP]=0 POSn=23 (decimal)
the least-significant-bit of the 5th byte        ... PIP_BSEL_EXT_CFG*[SKIP]=4 POSn=0
the second-least-significant bit of the 1st byte ... PIP_BSEL_EXT_CFG*[SKIP]=0 POSn=1
POSn_VAL and POSn correspond to <n> in the resultant index into
PIP_BSEL_TBL_ENT. When only x bits (0 < x < 7) are to be extracted,
POS[7:x] should normally be clear.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_ALT_SKIP_CFG
 * 
 *  
 * 
$PIP_ALT_SKIP_CFG(0..3)   Address=(0x11800A0002A00+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:57> NS    RAZ     NS         NS         Reserved.                                         
 <56>    LEN   R/W     0x0        NS         Indicates the length of the selection field       
                                             0 = 0,    BIT0
                                             1 = BIT1, BIT0
 <55:48> NS    RAZ     NS         NS         Reserved.                                         
 <47:46> NS    RAZ     NS         NS         Reserved.                                         
 <45:40> BIT1  R/W     0x0        NS         Indicates the bit location in the first word of   
                                             the packet to use to select the skip amount.
                                             BIT1 must be present in the packet.
 <39:38> NS    RAZ     NS         NS         Reserved.                                         
 <37:32> BIT0  R/W     0x0        NS         Indicates the bit location in the first word of   
                                             the packet to use to select the skip amount.
                                             BIT0 must be present in the packet.
 <31:24> NS    RAZ     NS         NS         Reserved.                                         
 <23>    NS    RAZ     NS         NS         Reserved.                                         
 <22:16> SKIP3 R/W     0x0        NS         Indicates number of bytes to skip from start of   
                                             packet 0-64
 <15>    NS    RAZ     NS         NS         Reserved.                                         
 <14:8>  SKIP2 R/W     0x0        NS         Indicates number of bytes to skip from start of   
                                             packet 0-64
 <7>     NS    RAZ     NS         NS         Reserved.                                         
 <6:0>   SKIP1 R/W     0x0        NS         Indicates number of bytes to skip from start of   
                                             packet 0-64
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_BSEL_TBL_ENT
 * 
 *  
 * 
$PIP_BSEL_TBL_ENT(0..511)   Address=(0x11800A0003000+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    TAG_EN R/W     0x0        NS         Enables the use of the TAG field                  
 <62>    GRP_EN R/W     0x0        NS         Enables the use of the GRP field                  
 <61>    TT_EN  R/W     0x0        NS         Enables the use of the TT field                   
 <60>    QOS_EN R/W     0x0        NS         Enables the use of the QOS field                  
 <59:40> NS     RAZ     NS         NS         Reserved.                                         
 <39:32> TAG    R/W     0x0        NS         TAG bits to be used if TAG_EN is set              
 <31:20> NS     RAZ     NS         NS         Reserved.                                         
 <19:16> GRP    R/W     0x0        NS         GRP field to be used if GRP_EN is set             
 <15:10> NS     RAZ     NS         NS         Reserved.                                         
 <9:8>   TT     R/W     0x0        NS         TT field to be used if TT_EN is set               
 <7:3>   NS     RAZ     NS         NS         Reserved.                                         
 <2:0>   QOS    R/W     0x0        NS         QOS field to be used if QOS_EN is set             
                                              
                                              include in the workQ entry for packets received
                                              on a PCI RAW port.  Measured from the beginning
                                              of the packet.
                                              include in the workQ entry.  From the beginning
                                              of the IP header.
                                              include in the workQ entry.  From the beginning
                                              of the packet.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PIP_PRT_CFGB
 * 
 *  
 * 
$PIP_PRT_CFGB(0..3,16..19,24,32..35,36..39)   Address=(0x11800A0008000+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:40> NS          RAZ     NS         NS         Reserved.                                         
 <39>    NS          RAZ     NS         NS         Reserved.                                         
 <38:37> ALT_SKP_SEL R/W     0x0        NS         Alternate skip selector                           
                                                   When enabled (ALT_SKP_EN), selects which of the
                                                   four PIP_ALT_SKIP_CFGx to use with the packets
                                                   arriving on the port-kind.
 <36>    ALT_SKP_EN  R/W     0x0        NS         Enable the alternate skip selector                
                                                   When enabled, the HW is able to recompute the
                                                   SKIP I value based on the packet contents.
                                                   Up to two of the initial 64 bits of the header
                                                   are used along with four PIP_ALT_SKIP_CFGx to
                                                   determine the updated SKIP I value.
                                                   The bits of the packet used should be present in
                                                   all packets.
                                                   PIP_PRT_CFG[DSA_EN,HIGIG_EN] must be disabled
                                                   when ALT_SKP_EN is set.
                                                   ALT_SKP_EN must not be set for DPI ports (32-35)
                                                   when a PKT_INST_HDR is present.
                                                   ALT_SKP_EN should not be enabled for ports which
                                                   have GMX_RX_FRM_CTL[PTP_MODE] set as the timestamp
                                                   will be prepended onto the initial 64 bits of the
                                                   packet.
 <35>    NS          RAZ     NS         NS         Reserved.                                         
 <34:33> BSEL_NUM    R/W     0x0        0x0        Which of the 4 bit select extractors to use       
                                                   (Alias to PIP_PRT_CFG)
 <32>    BSEL_EN     R/W     0x0        0x0        Enable to turn on/off use of bit select extractor 
                                                   (Alias to PIP_PRT_CFG)
 <31:0>  NS          RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the pko.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

 * 
 * PKO_REG_FLAGS
 * 
 *  
 * 
$PKO_REG_FLAGS   Address=(0x1180050000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:9>  NS        RAZ     NS         NS         RESERVED                                          
 <8>     DIS_PERF3 R/W     0x0        0x0        Set to disable inactive queue QOS skipping        
 <7>     DIS_PERF2 R/W     0x0        0x0        Set to disable inactive queue skipping            
 <6:4>   NS        RAZ     NS         NS         RESERVED                                          
 <3>     RESET     RAZ     0x0        0x0        Reset oneshot pulse                               
 <2>     STORE_BE  R/W     0x0        0x0        Force STORE0 byte write address to big endian     
 <1>     ENA_DWB   R/W     0x0        0x0        Set to enable DontWriteBacks                      
 <0>     ENA_PKO   R/W     0x0        0x0        Set to enable the PKO picker                      

Notes:
When set, ENA_PKO enables the PKO picker and places the PKO in normal operation. When set,
ENA_DWB enables the use of DontWriteBacks during the buffer freeing operations. When not set,
STORE_BE inverts bits[2:0] of the STORE0 byte write address. When set, RESET causes a 4-cycle
reset pulse to the entire box.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_REG_READ_IDX
 * 
 *  
 * 
$PKO_REG_READ_IDX   Address=(0x1180050000008)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         RESERVED                                          
 <15:8>  INC   R/W     0x0        0x0        Increment to add to current index for next index  
 <7:0>   IDX   R/W     0x0        0x0        Index to use for next memory CSR read             
                                             Attribute: -exempt_keyword=True.

Notes:
Provides the read index during a CSR read operation to any of the CSRs that are physically
stored as memories. The names of these CSRs begin with the prefix "PKO_MEM_". IDX[7:0] is the
read index. INC[7:0] is an increment that is added to IDX[7:0] after any CSR read. The
intended use is to initially write this CSR such that IDX=0 and INC=1. Then, the entire
contents of a CSR memory can be read with consecutive CSR read commands.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_REG_CMD_BUF
 * 
 *  
 * 
$PKO_REG_CMD_BUF   Address=(0x1180050000010)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:23> NS    RAZ     NS         NS         RESERVED                                          
 <22:20> POOL  R/W     0x0        0x0        Free list used to free command buffer segments    
 <19:13> NS    R/W     0x0        0x0        MBZ                                               
 <12:0>  SIZE  R/W     0x0        0x0        Number of uint64s per command buffer segment      

Notes:
Sets the command buffer parameters
The size of the command buffer segments is measured in uint64s.  The pool specifies (1 of 8
free lists to be used when freeing command buffer segments.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_REG_GMX_PORT_MODE
 * 
 *  
 * 
$PKO_REG_GMX_PORT_MODE   Address=(0x1180050000018)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  NS    RAZ     NS         NS         RESERVED                                          
 <5:3>   MODE1 R/W     0x0        0x0        # of GM1 ports = 16 >> MODE0, 0 <= MODE0 <= 4     
 <2:0>   MODE0 R/W     0x0        0x0        # of GM0 ports = 16 >> MODE0, 0 <= MODE0 <= 4     

Notes:
The system has a total of 4 + 4 + 4 + 4 + 1 ports and 4 + 4 + 1 + 1 + 1 engines (GMX0 + GMX1 +
PCI + LOOP + AGL).
This CSR sets the number of GMX0/GMX1 ports and amount of local storage per engine.
It has no effect on the number of ports or amount of local storage per engine for PCI, LOOP
and AGL.
When all GMX ports are used (MODE0=2), each GMX engine has 2.5kB of local storage.  Increasing
the value of MODEn by 1 decreases the number of GMX ports by a power of 2 and increases the
local storage per PKO GMX engine by a power of 2.  If one of the modes is 5, then only one of
interfaces GM0 or GM1 is present and the storage per engine of the existing interface is
doubled.  Modes 0 and 1 are illegal and, if selected, are treated as mode 2.
MODE[n] GM[n] PCI   LOOP  AGL   GM[n]                      PCI            LOOP           AGL
        ports ports ports ports storage/engine             storage/engine storage/engine
storage/engine
0       4     4     4     1     ( 2.5kB << (MODE[1-n]==5)) 2.5kB          2.5kB          2.5kB
1       4     4     4     1     ( 2.5kB << (MODE[1-n]==5)) 2.5kB          2.5kB          2.5kB
2       4     4     4     1     ( 2.5kB << (MODE[1-n]==5)) 2.5kB          2.5kB          2.5kB
3       2     4     4     1     ( 5.0kB << (MODE[1-n]==5)) 2.5kB          2.5kB          2.5kB
4       1     4     4     1     (10.0kB << (MODE[1-n]==5)) 2.5kB          2.5kB          2.5kB
5       0     4     4     1     (   0kB                  ) 2.5kB          2.5kB          2.5kB
where 0 <= n <= 1

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_REG_QUEUE_MODE
 * 
 *  
 * 
$PKO_REG_QUEUE_MODE   Address=(0x1180050000048)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:2>  NS    RAZ     NS         NS         RESERVED                                          
 <1:0>   MODE  R/W     0x0        0x0        # of queues = 256 >> MODE, 0 <= MODE <=2          

Notes:
Sets the number of queues and amount of local storage per queue
The system has a total of 256 queues and (256*8) words of local command storage.  This CSR
sets the number of queues that are used.  Increasing the value of MODE by 1 decreases the
number of queues by a power of 2 and increases the local storage per queue by a power of 2.
MODEn queues storage/queue
0     256     64B ( 8 words)
1     128    128B (16 words)
2      64    256B (32 words)

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_REG_ENGINE_INFLIGHT
 * 
 *  
 * 
$PKO_REG_ENGINE_INFLIGHT   Address=(0x1180050000050)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:56> NS       RAZ     NS         NS         RESERVED                                          
 <55:52> ENGINE13 R/W     0x4        0x4        Reserved.                                         
 <51:48> ENGINE12 R/W     0x4        0x4        Reserved.                                         
 <47:44> ENGINE11 R/W     0x4        0x4        Reserved.                                         
 <43:40> ENGINE10 R/W     0x4        0x4        Maximum number of inflight packets for engine10   
 <39:36> ENGINE9  R/W     0x4        0x4        Maximum number of inflight packets for engine9    
 <35:32> ENGINE8  R/W     0x4        0x4        Maximum number of inflight packets for engine8    
 <31:28> ENGINE7  R/W     0x4        0x4        Maximum number of inflight packets for engine7    
 <27:24> ENGINE6  R/W     0x4        0x4        Maximum number of inflight packets for engine6    
 <23:20> ENGINE5  R/W     0x4        0x4        Maximum number of inflight packets for engine5    
 <19:16> ENGINE4  R/W     0x4        0x4        Maximum number of inflight packets for engine4    
 <15:12> ENGINE3  R/W     0x4        0x4        Maximum number of inflight packets for engine3    
 <11:8>  ENGINE2  R/W     0x4        0x4        Maximum number of inflight packets for engine2    
 <7:4>   ENGINE1  R/W     0x4        0x4        Maximum number of inflight packets for engine1    
 <3:0>   ENGINE0  R/W     0x4        0x4        Maximum number of inflight packets for engine0    

Notes:
Sets the maximum number of inflight packets, per engine.  Values greater than 4 are illegal.
Setting an engine's value to 0 effectively stops the engine.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_REG_ENGINE_THRESH
 * 
 *  
 * 
$PKO_REG_ENGINE_THRESH   Address=(0x1180050000058)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:14> NS    RAZ     NS         NS         RESERVED                                          
 <13:0>  MASK  R/W     0x0        0x0        Mask[n]=0 disables packet send threshold for engine n
                                             Mask[n]=1 enables  packet send threshold for engine n
                                             Bits <13:11> are unused

Notes:
When not enabled, packet data may be sent as soon as it is written into PKO's internal
buffers.
When enabled and the packet fits entirely in the PKO's internal buffer, none of the packet
data will be sent until all of it has been written into the PKO's internal buffer.  Note that
a packet is considered to fit entirely only if the packet's size is <= BUFFER_SIZE-8.  When
enabled and the packet does not fit entirely in the PKO's internal buffer, none of the packet
data will be sent until at least BUFFER_SIZE-256 bytes of the packet have been written into
the PKO's internal buffer (note that BUFFER_SIZE is a function of PKO_REG_GMX_PORT_MODE above)

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_REG_TIMESTAMP
 * 
 *  
 * 
$PKO_REG_TIMESTAMP   Address=(0x1180050000060)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS       RAZ     NS         NS         RESERVED                                          
 <3:0>   WQE_WORD R/W     0x2        0x2        Specifies the 8-byte word in the WQE to which a PTP
                                                timestamp is written.  Values 0 and 1 are illegal.

Notes:
None.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_REG_BIST_RESULT
 * 
 *  
 * 
$PKO_REG_BIST_RESULT   Address=(0x1180050000080)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:30> NS      RAZ     NS         NS         RESERVED                                          
 <29>    CSR     RO      NS         0x0        BiST result of CSR      memories (0=pass, !0=fail)
 <28>    IOB     RO      NS         0x0        BiST result of IOB      memories (0=pass, !0=fail)
 <27>    OUT_DAT RO      NS         0x0        BiST result of OUT_DAT  memories (0=pass, !0=fail)
 <26>    OUT_CTL RO      NS         0x0        BiST result of OUT_CTL  memories (0=pass, !0=fail)
 <25>    OUT_STA RO      NS         0x0        BiST result of OUT_STA  memories (0=pass, !0=fail)
 <24>    OUT_WIF RO      NS         0x0        BiST result of OUT_WIF  memories (0=pass, !0=fail)
 <23:21> PRT_CHK RO      NS         0x0        BiST result of PRT_CHK  memories (0=pass, !0=fail)
 <20>    PRT_NXT RO      NS         0x0        BiST result of PRT_NXT  memories (0=pass, !0=fail)
 <19:12> PRT_PSB RO      NS         0x0        BiST result of PRT_PSB  memories (0=pass, !0=fail)
 <11>    NCB_INB RO      NS         0x0        BiST result of NCB_INB  memories (0=pass, !0=fail)
 <10>    PRT_QCB RO      NS         0x0        BiST result of PRT_QCB  memories (0=pass, !0=fail)
 <9:8>   PRT_QSB RO      NS         0x0        BiST result of PRT_QSB  memories (0=pass, !0=fail)
 <7:6>   PRT_CTL RO      NS         0x0        BiST result of PRT_CTL  memories (0=pass, !0=fail)
 <5:4>   DAT_DAT RO      NS         0x0        BiST result of DAT_DAT  memories (0=pass, !0=fail)
 <3:0>   DAT_PTR RO      NS         0x0        BiST result of DAT_PTR  memories (0=pass, !0=fail)

Notes:
Access to the internal BiST results
Each bit is the BiST result of an individual memory (per bit, 0=pass and 1=fail).

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_REG_ERROR
 * 
 *  
 * 
$PKO_REG_ERROR   Address=(0x1180050000088)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:3>  NS       RAZ     NS         NS         RESERVED                                          
 <2>     CURRZERO R/W1C/H 0x0        0x0        A packet data pointer has size=0                  
 <1>     DOORBELL R/W1C/H 0x0        0x0        A doorbell count has overflowed                   
 <0>     PARITY   R/W1C/H 0x0        0x0        Read parity error at port data buffer             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_REG_INT_MASK
 * 
 *  
 * 
$PKO_REG_INT_MASK   Address=(0x1180050000090)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:3>  NS       RAZ     NS         NS         RESERVED                                          
 <2>     CURRZERO R/W/H   0x0        0x0        Bit mask corresponding to PKO_REG_ERROR[2] above  
 <1>     DOORBELL R/W/H   0x0        0x0        Bit mask corresponding to PKO_REG_ERROR[1] above  
 <0>     PARITY   R/W/H   0x0        0x0        Bit mask corresponding to PKO_REG_ERROR[0] above  

Notes:
When a mask bit is set, the corresponding interrupt is enabled.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_REG_DEBUG0
 * 
 *  
 * 
$PKO_REG_DEBUG0   Address=(0x1180050000098)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  ASSERTS RO      0x0        0x0        Various assertion checks                          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_REG_DEBUG1
 * 
 *  
 * 
$PKO_REG_DEBUG1   Address=(0x11800500000A0)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  ASSERTS RO      0x0        0x0        Various assertion checks                          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_REG_DEBUG2
 * 
 *  
 * 
$PKO_REG_DEBUG2   Address=(0x11800500000A8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  ASSERTS RO      0x0        0x0        Various assertion checks                          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_REG_DEBUG3
 * 
 *  
 * 
$PKO_REG_DEBUG3   Address=(0x11800500000B0)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  ASSERTS RO      0x0        0x0        Various assertion checks                          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_REG_QUEUE_PTRS1
 * 
 *  
 * 
$PKO_REG_QUEUE_PTRS1   Address=(0x1180050000100)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:2>  NS    RAZ     NS         NS         RESERVED                                          
 <1>     IDX3  R/W/H   0x0        0x0        bit<3> of Index (distance from head) in the queue 
 <0>     QID7  R/W/H   0x0        0x0        bit<7> of Queue ID                                

Notes:
This CSR is used with PKO_MEM_QUEUE_PTRS and PKO_MEM_QUEUE_QOS to allow access to queues
128-255 and to allow up mapping of up to 16 queues per port. When programming queues 128-255,
the programming sequence must first write PKO_REG_QUEUE_PTRS1 and then write
PKO_MEM_QUEUE_PTRS or PKO_MEM_QUEUE_QOS for each queue.
See the descriptions of PKO_MEM_QUEUE_PTRS and PKO_MEM_QUEUE_QOS for further explanation of
queue programming.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_REG_QUEUE_PREEMPT
 * 
 *  
 * 
$PKO_REG_QUEUE_PREEMPT   Address=(0x1180050000108)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:2>  NS        RAZ     NS         NS         RESERVED                                          
 <1>     PREEMPTEE R/W/H   0x0        0x0        Allow this QID to be preempted.                   
                                                 0=cannot be preempted, 1=can be preempted
 <0>     PREEMPTER R/W/H   0x0        0x0        Preempts the servicing of packet on PID to        
                                                 allow this QID immediate servicing.  0=do not cause
                                                 preemption, 1=cause preemption.  Per PID, at most
                                                 1 QID can have this bit set.

Notes:
Per QID, setting both PREEMPTER=1 and PREEMPTEE=1 is illegal and sets only PREEMPTER=1.
This CSR is used with PKO_MEM_QUEUE_PTRS and PKO_REG_QUEUE_PTRS1.  When programming queues,
the programming sequence must first write PKO_REG_QUEUE_PREEMPT, then PKO_REG_QUEUE_PTRS1 and
then PKO_MEM_QUEUE_PTRS for each queue.  Preemption is supported only on queues that are
ultimately mapped to engines 0-7.  It is illegal to set preemptee or preempter for a queue
that is ultimately mapped to engines 8-11.
Also, PKO_REG_ENGINE_INFLIGHT must be at least 2 for any engine on which preemption is
enabled.
See the descriptions of PKO_MEM_QUEUE_PTRS for further explanation of queue programming.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_REG_PREEMPT
 * 
 *  
 *  Attribute: -dv_fc_scratch=ALL.
 * 
$PKO_REG_PREEMPT   Address=(0x1180050000110)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS       RAZ     NS         NS         RESERVED                                          
 <15:0>  MIN_SIZE R/W     0x0        0x0        Threshhold for packet preemption, measured in bytes.
                                                Only packets which have at least MIN_SIZE bytes
                                                remaining to be read can be preempted.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_MEM_QUEUE_PTRS
 * 
 *  
 * 
$PKO_MEM_QUEUE_PTRS   Address=(0x1180050001000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    S_TAIL   R/W/H   NS         0x0        Set if this QID is the tail of the static queues  
 <62>    STATIC_P R/W/H   NS         0x0        Set if any QID in this PID has static priority    
 <61>    STATIC_Q R/W/H   NS         0x0        Set if this QID has static priority               
 <60:53> QOS_MASK R/W/H   NS         0x0        Mask to control priority across 8 QOS rounds      
 <52:17> BUF_PTR  R/W/H   NS         0x0        Command buffer pointer, <23:17> MBZ               
 <16>    TAIL     R/W/H   NS         0x0        Set if this QID is the tail of the queue array    
 <15:13> IDX      WO      NS         0x0        Index[2:0] (distance from head) in the queue array
                                                Attribute: -exempt_keyword=True.
 <12:7>  PID      WO      NS         0x0        Port ID to which this queue is mapped             
 <6:0>   QID      R/W/H   NS         0x0        Queue ID[6:0]                                     

Notes:
Sets the queue to port mapping and the initial command buffer pointer, per queue Each queue
may map to at most one port. No more than 16 queues may map to a port. The set of queues that
is mapped to a port must be a contiguous array of queues. The port to which queue QID is
mapped is port PID. The index of queue QID in port PID's queue list is IDX. The last queue in
port PID's queue array must have its TAIL bit set. Unused queues must be mapped to port
63. STATIC_Q marks queue QID as having static priority. STATIC_P marks the port PID to which
QID is mapped as having at least one queue with static priority. If any QID that maps to PID
has static priority, then all QID that map to PID must have STATIC_P set. Queues marked as
static priority must be contiguous and begin at IDX 0. The last queue that is marked as having
static priority must have its S_TAIL bit set.
This CSR is a memory of 256 entries, and thus, the PKO_REG_READ_IDX CSR must be written before
any CSR read operations to this address can be performed.  A read of any entry that has not
been previously written is illegal and will result in unpredictable CSR read data.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_MEM_QUEUE_QOS
 * 
 *  
 * 
$PKO_MEM_QUEUE_QOS   Address=(0x1180050001008)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:61> NS       RAZ     NS         NS         RESERVED                                          
 <60:53> QOS_MASK R/W/H   NS         0x0        Mask to control priority across 8 QOS rounds      
 <52:13> NS       RAZ     NS         NS         RESERVED                                          
 <12:7>  PID      WO      NS         0x0        Port ID to which this queue is mapped             
 <6:0>   QID      R/W/H   NS         0x0        Queue ID                                          

Notes:
Sets the QOS mask, per queue. These QOS_MASK bits are logically and physically the same
QOS_MASK bits in PKO_MEM_QUEUE_PTRS. This CSR address allows the QOS_MASK bits to be written
during PKO operation without affecting any other queue state. The port to which queue QID is
mapped is port PID. Note that the queue to port mapping must be the same as was previously
programmed via the PKO_MEM_QUEUE_PTRS CSR.
This CSR is a memory of 256 entries, and thus, the PKO_REG_READ_IDX CSR must be written before
any CSR read operations to this address can be performed.  A read of any entry that has not
been previously written is illegal and will result in unpredictable CSR read data.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_MEM_PORT_PTRS
 * 
 *  
 * 
$PKO_MEM_PORT_PTRS   Address=(0x1180050001010)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:62> NS       RAZ     NS         NS         RESERVED                                          
 <61>    STATIC_P R/W/H   NS         0x0        Set if this PID has static priority               
 <60:53> QOS_MASK R/W/H   NS         0x0        Mask to control priority across 8 QOS rounds      
 <52:16> NS       RAZ     NS         NS         RESERVED                                          
 <15:10> BP_PORT  R/W/H   NS         0x0        PID listens to BP_PORT for per-packet backpressure
                                                Legitimate BP_PORTs: 0-15, 32-39, 63 (63 means no BP)
 <9:6>   EID      R/W/H   NS         0x0        Engine ID to which this port is mapped            
                                                Legal EIDs: 0-10, 15 (15 only if port not used)
 <5:0>   PID      R/W/H   NS         0x0        Port ID[5:0]                                      

Notes:
Sets the port to engine mapping, per port. Ports marked as static priority need not be
contiguous, but they must be the lowest numbered PIDs mapped to this EID and must have
QOS_MASK=0xff. If EID==8 or EID==9, then PID[1:0] is used to direct the packet to the correct
port on that interface.
EID==15 can be used for unused PKO-internal ports.
BP_PORT==63 means that the PKO-internal port is not backpressured.
BP_PORTs are assumed to belong to an interface as follows:
  36 <= BP_PORT < 40 -> loopback   interface
  32 <= BP_PORT < 36 -> PCIe       interface
  0  <= BP_PORT < 16 -> GMX        interface 0
The reset configuration is the following:
  PID EID(ext port) BP_PORT QOS_MASK STATIC_P
  -------------------------------------------
   0   0( 0)             0     0xff        0
   1   1( 1)             1     0xff        0
   2   2( 2)             2     0xff        0
   3   3( 3)             3     0xff        0
   4   0( 0)             4     0xff        0
   5   1( 1)             5     0xff        0
   6   2( 2)             6     0xff        0
   7   3( 3)             7     0xff        0
   8   0( 0)             8     0xff        0
   9   1( 1)             9     0xff        0
  10   2( 2)            10     0xff        0
  11   3( 3)            11     0xff        0
  12   0( 0)            12     0xff        0
  13   1( 1)            13     0xff        0
  14   2( 2)            14     0xff        0
  15   3( 3)            15     0xff        0
  -------------------------------------------
  16   4(16)            16     0xff        0
  17   5(17)            17     0xff        0
  18   6(18)            18     0xff        0
  19   7(19)            19     0xff        0
  20   4(16)             -     0xff        0
  21   5(17)             -     0xff        0
  22   6(18)             -     0xff        0
  23   7(19)             -     0xff        0
  24   4(16)             -     0xff        0
  25   5(17)             -     0xff        0
  26   6(18)             -     0xff        0
  27   7(19)             -     0xff        0
  28   4(16)             -     0xff        0
  29   5(17)             -     0xff        0
  30   6(18)             -     0xff        0
  31   7(19)             -     0xff        0
  -------------------------------------------
  32   8(32)            32     0xff        0
  33   8(33)            33     0xff        0
  34   8(34)            34     0xff        0
  35   8(35)            35     0xff        0
  -------------------------------------------
  36   9(36)            36     0xff        0
  37   9(37)            37     0xff        0
  38   9(38)            38     0xff        0
  39   9(39)            39     0xff        0
  -------------------------------------------
  40  10(24)             -     0xff        0
This CSR is a memory of 41 entries, and thus, the PKO_REG_READ_IDX CSR must be written before
any CSR read operations to this address can be performed.  A read of any entry that has not
been previously written is illegal and will result in unpredictable CSR read data.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_MEM_PORT_QOS
 * 
 *  
 * 
$PKO_MEM_PORT_QOS   Address=(0x1180050001018)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:61> NS       RAZ     NS         NS         RESERVED                                          
 <60:53> QOS_MASK R/W/H   NS         0x0        Mask to control priority across 8 QOS rounds      
 <52:10> NS       RAZ     NS         NS         RESERVED                                          
 <9:6>   EID      R/W/H   NS         0x0        Engine ID to which this port is mapped            
                                                Legal EIDs: 0-10
 <5:0>   PID      R/W/H   NS         0x0        Port ID[5:0]                                      

Notes:
Sets the QOS mask, per port. These QOS_MASK bits are logically and physically the same
QOS_MASK bits in PKO_MEM_PORT_PTRS. This CSR address allows the QOS_MASK bits to be written
during PKO operation without affecting any other port state. The engine to which port PID is
mapped is engine EID. Note that the port to engine mapping must be the same as was previously
programmed via the PKO_MEM_PORT_PTRS CSR.
This CSR is a memory of 41 entries, and thus, the PKO_REG_READ_IDX CSR must be written before
any CSR read operations to this address can be performed.  A read of any entry that has not
been previously written is illegal and will result in unpredictable CSR read data.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_MEM_PORT_RATE0
 * 
 *  
 * 
$PKO_MEM_PORT_RATE0   Address=(0x1180050001020)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:51> NS        RAZ     NS         NS         RESERVED                                          
 <50:32> RATE_WORD R/W/H   NS         0x0        Rate limiting adder per 8 byte                    
 <31:8>  RATE_PKT  R/W/H   NS         0x0        Rate limiting adder per packet                    
 <7:6>   NS        RAZ     NS         NS         RESERVED                                          
 <5:0>   PID       R/W/H   NS         0x0        Port ID[5:0]                                      

Notes:
This CSR is a memory of 41 entries, and thus, the PKO_REG_READ_IDX CSR must be written before
any CSR read operations to this address can be performed. A read of any entry that has not
been previously written is illegal and will result in unpredictable CSR read data.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_MEM_PORT_RATE1
 * 
 *  
 * 
$PKO_MEM_PORT_RATE1   Address=(0x1180050001028)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS       RAZ     NS         NS         RESERVED                                          
 <31:8>  RATE_LIM R/W/H   NS         0x0        Rate limiting accumulator limit                   
 <7:6>   NS       RAZ     NS         NS         RESERVED                                          
 <5:0>   PID      R/W/H   NS         0x0        Port ID[5:0]                                      

Notes:
Writing PKO_MEM_PORT_RATE1[PID,RATE_LIM] has the side effect of setting the corresponding
accumulator to zero.
This CSR is a memory of 41 entries, and thus, the PKO_REG_READ_IDX CSR must be written before
any CSR read operations to this address can be performed.  A read of any entry that has not
been previously written is illegal and will result in unpredictable CSR read data.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_MEM_COUNT0
 * 
 *  
 * 
$PKO_MEM_COUNT0   Address=(0x1180050001080)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  COUNT R/W1C/H NS         0x0        Total number of packets seen by PKO               

Notes:
Total number of packets seen by PKO, per port
A write to this address will clear the entry whose index is specified as COUNT[5:0].
This CSR is a memory of 41 entries, and thus, the PKO_REG_READ_IDX CSR must be written before
any CSR read operations to this address can be performed.  A read of any entry that has not
been previously written is illegal and will result in unpredictable CSR read data.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_MEM_COUNT1
 * 
 *  
 * 
$PKO_MEM_COUNT1   Address=(0x1180050001088)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS    RAZ     NS         NS         Reserved.                                         
 <47:0>  COUNT R/W1C/H NS         0x0        Total number of bytes seen by PKO                 

Notes:
Total number of bytes seen by PKO, per port
A write to this address will clear the entry whose index is specified as COUNT[5:0].
This CSR is a memory of 41 entries, and thus, the PKO_REG_READ_IDX CSR must be written before
any CSR read operations to this address can be performed.  A read of any entry that has not
been previously written is illegal and will result in unpredictable CSR read data.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_MEM_DEBUG0
 * 
 *  
 * 
$PKO_MEM_DEBUG0   Address=(0x1180050001100)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:36> FAU  RO/H    NS         0x0        Fetch and add command words                       
 <35:22> CMD  RO/H    NS         0x0        Command word                                      
 <21:16> SEGS RO/H    NS         0x0        Number of segments/gather size                    
 <15:0>  SIZE RO/H    NS         0x0        Packet length in bytes                            

Notes:
Internal per-port state intended for debug use only pko_prt_psb.cmnd[63:0]
This CSR is a memory of 11 entries, and thus, the PKO_REG_READ_IDX CSR must be written before
any CSR read operations to this address can be performed.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_MEM_DEBUG1
 * 
 *  
 * 
$PKO_MEM_DEBUG1   Address=(0x1180050001108)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    I    RO/H    NS         0x0        "I"  value used for free operation                
 <62:59> BACK RO/H    NS         0x0        Back value used for free operation                
 <58:56> POOL RO/H    NS         0x0        Pool value used for free operation                
 <55:40> SIZE RO/H    NS         0x0        Size in bytes                                     
 <39:0>  PTR  RO/H    NS         0x0        Data pointer                                      

Notes:
Internal per-port state intended for debug use only pko_prt_psb.curr[63:0]
This CSR is a memory of 11 entries, and thus, the PKO_REG_READ_IDX CSR must be written before
any CSR read operations to this address can be performed.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_MEM_DEBUG2
 * 
 *  
 * 
$PKO_MEM_DEBUG2   Address=(0x1180050001110)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    I    RO/H    NS         0x0        "I"  value used for free operation                
 <62:59> BACK RO/H    NS         0x0        Back value used for free operation                
 <58:56> POOL RO/H    NS         0x0        Pool value used for free operation                
 <55:40> SIZE RO/H    NS         0x0        Size in bytes                                     
 <39:0>  PTR  RO/H    NS         0x0        Data pointer                                      

Notes:
Internal per-port state intended for debug use only pko_prt_psb.head[63:0]
This CSR is a memory of 11 entries, and thus, the PKO_REG_READ_IDX CSR must be written before
any CSR read operations to this address can be performed.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_MEM_DEBUG3
 * 
 *  
 * 
$PKO_MEM_DEBUG3   Address=(0x1180050001118)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  DATA RO/H    NS         0x0        WorkQ data or Store0 pointer                      

Notes:
Internal per-port state intended for debug use only pko_prt_psb.resp[63:0]
This CSR is a memory of 11 entries, and thus, the PKO_REG_READ_IDX CSR must be written before
any CSR read operations to this address can be performed.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_MEM_DEBUG4
 * 
 *  
 * 
$PKO_MEM_DEBUG4   Address=(0x1180050001120)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:56> CURR_SIZ    RO/H    NS         0x0        Internal state                                    
 <55:40> CURR_OFF    RO/H    NS         0x0        Internal state                                    
 <39:34> CMND_SEGS   RO/H    NS         0x0        Internal state                                    
 <33:18> CMND_SIZ    RO/H    NS         0x0        Internal state                                    
 <17:12> CMND_OFF    RO/H    NS         0x0        Internal state                                    
 <11:10> UID         RO/H    NS         0x0        Internal state                                    
 <9>     DREAD_SOP   RO/H    NS         0x0        Internal state                                    
 <8>     INIT_DWRITE RO/H    NS         0x0        Internal state                                    
 <7>     CHK_ONCE    RO/H    NS         0x0        Internal state                                    
 <6>     CHK_MODE    RO/H    NS         0x0        Internal state                                    
 <5>     WAIT        RO/H    NS         0x0        Internal state                                    
                                                   Attribute: -exempt_keyword=True.
 <4:3>   MINOR       RO/H    NS         0x0        Internal state                                    
 <2:0>   MAJOR       RO/H    NS         0x0        Internal state                                    

Notes:
Internal per-port state intended for debug use only pko_prt_psb.state[63:0]
This CSR is a memory of 11 entries, and thus, the PKO_REG_READ_IDX CSR must be written before
any CSR read operations to this address can be performed.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_MEM_DEBUG5
 * 
 *  
 * 
$PKO_MEM_DEBUG5   Address=(0x1180050001128)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:56> NS        RAZ     NS         NS         RESERVED                                          
 <55>    PTP       RO/H    NS         0x0        Internal state                                    
 <54>    MAJOR_3   RO/H    NS         0x0        Internal state                                    
 <53:48> NXT_INFLT RO/H    NS         0x0        Internal state                                    
 <47:8>  CURR_PTR  RO/H    NS         0x0        Internal state                                    
 <7:0>   CURR_SIZ  RO/H    NS         0x0        Internal state                                    

Notes:
Internal per-port state intended for debug use only pko_prt_psb.state[127:64]
This CSR is a memory of 11 entries, and thus, the PKO_REG_READ_IDX CSR must be written before
any CSR read operations to this address can be performed.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_MEM_DEBUG6
 * 
 *  
 * 
$PKO_MEM_DEBUG6   Address=(0x1180050001130)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:37> NS         RO/H    NS         0x0        Internal state                                    
 <36:33> QID_OFFRES RO/H    NS         0x0        Internal state                                    
 <32:29> QID_OFFTHS RO/H    NS         0x0        Internal state                                    
 <28>    PREEMPTER  RO/H    NS         0x0        Internal state                                    
 <27>    PREEMPTEE  RO/H    NS         0x0        Internal state                                    
 <26>    PREEMPTED  RO/H    NS         0x0        Internal state                                    
 <25>    ACTIVE     RO/H    NS         0x0        Internal state                                    
 <24>    STATICB    RO/H    NS         0x0        Internal state                                    
 <23:21> QOS        RO/H    NS         0x0        Internal state                                    
 <20:16> QCB_RIDX   RO/H    NS         0x0        Internal state                                    
 <15:12> QID_OFFMAX RO/H    NS         0x0        Internal state                                    
 <11:8>  QID_OFF    RO/H    NS         0x0        Internal state                                    
 <7:0>   QID_BASE   RO/H    NS         0x0        Internal state                                    

Notes:
Internal per-port state intended for debug use only pko_prt_psb.port[63:0]
This CSR is a memory of 41 entries, and thus, the PKO_REG_READ_IDX CSR must be written before
any CSR read operations to this address can be performed.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_MEM_DEBUG7
 * 
 *  
 * 
$PKO_MEM_DEBUG7   Address=(0x1180050001138)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:59> QOS      RO/H    NS         0x0        QOS mask to enable the queue when set             
 <58>    TAIL     RO/H    NS         0x0        This queue is the last (tail) in the queue array  
 <57:45> BUF_SIZ  RO/H    NS         0x0        Command buffer remaining size in words            
 <44:12> BUF_PTR  RO/H    NS         0x0        Command word pointer                              
 <11:6>  QCB_WIDX RO/H    NS         0x0        Buffer write index for QCB                        
 <5:0>   QCB_RIDX RO/H    NS         0x0        Buffer read  index for QCB                        

Notes:
Internal per-queue state intended for debug use only pko_prt_qsb.state[63:0]
This CSR is a memory of 256 entries, and thus, the PKO_REG_READ_IDX CSR must be written before
any CSR read operations to this address can be performed.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_MEM_DEBUG8
 * 
 *  
 * 
$PKO_MEM_DEBUG8   Address=(0x1180050001140)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:42> NS        RAZ     NS         NS         RESERVED                                          
 <41:34> QID_QQOS  RO/H    NS         NS         QOS_MASK                                          
 <33>    NS        RAZ     NS         NS         RESERVED                                          
 <32:29> QID_IDX   RO/H    NS         NS         IDX                                               
 <28>    PREEMPTER RO/H    NS         0x0        Preempter                                         
 <27:8>  DOORBELL  RO/H    NS         0x0        Doorbell count                                    
 <7>     NS        RAZ     NS         NS         RESERVED                                          
 <6>     PREEMPTEE RO/H    NS         0x0        Preemptee                                         
 <5>     STATIC_P  RO/H    NS         0x0        Static priority                                   
 <4>     S_TAIL    RO/H    NS         0x0        Static tail                                       
 <3>     STATIC_Q  RO/H    NS         0x0        Static priority                                   
 <2:0>   QOS       RO/H    NS         0x0        QOS mask to enable the queue when set             

Notes:
Internal per-queue state intended for debug use only pko_prt_qsb.state[91:64]
This CSR is a memory of 256 entries, and thus, the PKO_REG_READ_IDX CSR must be written before
any CSR read operations to this address can be performed.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_MEM_DEBUG9
 * 
 *  
 * 
$PKO_MEM_DEBUG9   Address=(0x1180050001148)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:49> NS    RAZ     NS         NS         RESERVED                                          
 <48:32> PTRS0 RO/H    NS         0x0        Internal state                                    
 <31:17> NS    RAZ     NS         NS         RESERVED                                          
 <16:0>  PTRS3 RO/H    NS         0x0        Internal state                                    

Notes:
Internal per-port state intended for debug use only pko.dat.ptr.ptrs0, pko.dat.ptr.ptrs3
This CSR is a memory of 41 entries, and thus, the PKO_REG_READ_IDX CSR must be written before
any CSR read operations to this address can be performed.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_MEM_DEBUG10
 * 
 *  
 * 
$PKO_MEM_DEBUG10   Address=(0x1180050001150)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:49> NS    RAZ     NS         NS         RESERVED                                          
 <48:32> PTRS1 RO/H    NS         0x0        Internal state                                    
 <31:17> NS    RAZ     NS         NS         RESERVED                                          
 <16:0>  PTRS2 RO/H    NS         0x0        Internal state                                    

Notes:
Internal per-port state intended for debug use only pko.dat.ptr.ptrs1, pko.dat.ptr.ptrs2
This CSR is a memory of 41 entries, and thus, the PKO_REG_READ_IDX CSR must be written before
any CSR read operations to this address can be performed.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_MEM_DEBUG11
 * 
 *  
 * 
$PKO_MEM_DEBUG11   Address=(0x1180050001158)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:23> NS    RAZ     NS         NS         RESERVED                                          
 <22>    MAJ   RO/H    NS         0x0        Internal state                                    
 <21:19> UID   RO/H    NS         0x0        Internal state                                    
 <18>    SOP   RO/H    NS         0x0        Internal state                                    
 <17>    LEN   RO/H    NS         0x0        Internal state                                    
 <16>    CHK   RO/H    NS         0x0        Internal state                                    
 <15:3>  CNT   RO/H    NS         0x0        Internal state                                    
 <2:0>   MOD   RO/H    NS         0x0        Internal state                                    

Notes:
Internal per-port state intended for debug use only pko.out.sta.state[22:0]
This CSR is a memory of 41 entries, and thus, the PKO_REG_READ_IDX CSR must be written before
any CSR read operations to this address can be performed.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_MEM_DEBUG12
 * 
 *  
 * 
$PKO_MEM_DEBUG12   Address=(0x1180050001160)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:36> FAU  RO/H    NS         0x0        Fetch and add command words                       
 <35:22> CMD  RO/H    NS         0x0        Command word                                      
 <21:16> SEGS RO/H    NS         0x0        Number of segments/gather size                    
 <15:0>  SIZE RO/H    NS         0x0        Packet length in bytes                            

Notes:
Internal per-port state intended for debug use only pko.out.ctl.cmnd[63:0]
This CSR is a memory of 41 entries, and thus, the PKO_REG_READ_IDX CSR must be written before
any CSR read operations to this address can be performed.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_MEM_DEBUG13
 * 
 *  
 * 
$PKO_MEM_DEBUG13   Address=(0x1180050001168)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    I    RO/H    NS         0x0        "I"  value used for free operation                
 <62:59> BACK RO/H    NS         0x0        Back value used for free operation                
 <58:56> POOL RO/H    NS         0x0        Pool value used for free operation                
 <55:40> SIZE RO/H    NS         0x0        Size in bytes                                     
 <39:0>  PTR  RO/H    NS         0x0        Data pointer                                      

Notes:
Internal per-port state intended for debug use only pko.out.ctl.head[63:0]
This CSR is a memory of 41 entries, and thus, the PKO_REG_READ_IDX CSR must be written before
any CSR read operations to this address can be performed.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * PKO_MEM_DEBUG14
 * 
 *  
 * 
$PKO_MEM_DEBUG14   Address=(0x1180050001170)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  DATA RO/H    NS         0x0        Command words                                     

Notes:
Internal per-port state intended for debug use only pko.prt.psb.save[63:0]
This CSR is a memory of 123 entries, and thus, the PKO_REG_READ_IDX CSR must be written before
any CSR read operations to this address can be performed.

-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the pow.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

 * 
 * POW_PP_GRP_MSK
 * 
 *  Selects which group(s) a PP belongs to.  A '1' in any bit position sets the PP's membership in
 *  the corresponding group.  A value of 0x0 will prevent the PP from receiving new work.  Note:
 *  disabled or non-existent PP's should have this field set to 0xffff (the reset value) in order
 *  to
 *  maximize POW performance.
 *  Also contains the QOS level priorities for each PP.  0x0 is highest priority, and 0x7 the
 *  lowest.
 *  Setting the priority to 0xf will prevent that PP from receiving work from that QOS level.
 *  Priority values 0x8 through 0xe are reserved and should not be used.  For a given PP,
 *  priorities
 *  should begin at 0x0 and remain contiguous throughout the range.
 * 
$POW_PP_GRP_MSK(0..3)   Address=(0x1670000000000+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ     NS         NS         Reserved.                                         
 <47:44> QOS7_PRI R/W     0x0        NS         PP@ priority for QOS level 7                      
 <43:40> QOS6_PRI R/W     0x0        NS         PP@ priority for QOS level 6                      
 <39:36> QOS5_PRI R/W     0x0        NS         PP@ priority for QOS level 5                      
 <35:32> QOS4_PRI R/W     0x0        NS         PP@ priority for QOS level 4                      
 <31:28> QOS3_PRI R/W     0x0        NS         PP@ priority for QOS level 3                      
 <27:24> QOS2_PRI R/W     0x0        NS         PP@ priority for QOS level 2                      
 <23:20> QOS1_PRI R/W     0x0        NS         PP@ priority for QOS level 1                      
 <19:16> QOS0_PRI R/W     0x0        NS         PP@ priority for QOS level 0                      
 <15:0>  GRP_MSK  R/W     0xffff     0xffff     PP@ group mask                                    
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * POW_WQ_INT_THR
 * 
 *  Contains the thresholds for enabling and setting work queue interrupts.  For more information
 *  regarding this register, see the interrupt section.
 *  Note: Up to 4 of the POW's internal storage buffers can be allocated for hardware use and are
 *  therefore not available for incoming work queue entries.  Additionally, any PP that is not in
 *  the
 *  NULL_NULL state consumes a buffer.  Thus in a 4 PP system, it is not advisable to set either
 *  IQ_THR or DS_THR to greater than 512 - 4 - 4 = 504.  Doing so may prevent the interrupt from
 *  ever triggering.
 * 
$POW_WQ_INT_THR(0..15)   Address=(0x1670000000080+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:29> NS     RAZ     NS         NS         Reserved.                                         
 <28>    TC_EN  R/W     0x0        NS         Time counter interrupt enable for group @         
                                              TC_EN must be zero when TC_THR==0
 <27:24> TC_THR R/W     0x0        NS         Time counter interrupt threshold for group @      
                                              When TC_THR==0, POW_WQ_INT_CNT*[TC_CNT] is zero
 <23:21> NS     RAZ     NS         NS         Reserved.                                         
 <20:12> DS_THR R/W     0x0        NS         De-schedule count threshold for group @           
                                              DS_THR==0 disables the threshold interrupt
 <11:9>  NS     RAZ     NS         NS         Reserved.                                         
 <8:0>   IQ_THR R/W     0x0        NS         Input queue count threshold for group @           
                                              IQ_THR==0 disables the threshold interrupt
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * POW_WQ_INT_CNT
 * 
 *  Contains a read-only copy of the counts used to trigger work queue interrupts.  For more
 *  information regarding this register, see the interrupt section.
 * 
$POW_WQ_INT_CNT(0..15)   Address=(0x1670000000100+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:28> NS     RAZ     NS         NS         Reserved.                                         
 <27:24> TC_CNT RO      0x0        NS         Time counter current value for group @            
                                              HW sets TC_CNT to POW_WQ_INT_THR*[TC_THR] whenever:
                                              - corresponding POW_WQ_INT_CNT*[IQ_CNT]==0 and
                                                corresponding POW_WQ_INT_CNT*[DS_CNT]==0
                                              - corresponding POW_WQ_INT[WQ_INT<*>] is written
                                                with a 1 by SW
                                              - corresponding POW_WQ_INT[IQ_DIS<*>] is written
                                                with a 1 by SW
                                              - corresponding POW_WQ_INT_THR* is written by SW
                                              - TC_CNT==1 and periodic counter
                                                POW_WQ_INT_PC[PC]==0
                                              Otherwise, HW decrements TC_CNT whenever the
                                              periodic counter POW_WQ_INT_PC[PC]==0.
                                              TC_CNT is 0 whenever POW_WQ_INT_THR*[TC_THR]==0.
 <23:22> NS     RAZ     NS         NS         Reserved.                                         
 <21:12> DS_CNT RO      0x0        NS         De-schedule executable count for group @          
 <11:10> NS     RAZ     NS         NS         Reserved.                                         
 <9:0>   IQ_CNT RO      0x0        NS         Input queue executable count for group @          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * POW_QOS_THR
 * 
 *  Contains the thresholds for allocating POW internal storage buffers.  If the number of
 *  remaining
 *  free buffers drops below the minimum threshold (MIN_THR) or the number of allocated buffers
 *  for
 *  this QOS level rises above the maximum threshold (MAX_THR), future incoming work queue entries
 *  will be buffered externally rather than internally.  This register also contains a read-only
 *  count
 *  of the current number of free buffers (FREE_CNT), the number of internal buffers currently
 *  allocated to this QOS level (BUF_CNT), and the total number of buffers on the de-schedule list
 *  (DES_CNT) (which is not the same as the total number of de-scheduled buffers).
 * 
$POW_QOS_THR(0..7)   Address=(0x1670000000180+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:58> NS       RAZ     NS         NS         Reserved.                                         
 <57:48> DES_CNT  RO      0x0        NS         # of buffers on de-schedule list                  
 <47:46> NS       RAZ     NS         NS         Reserved.                                         
 <45:36> BUF_CNT  RO      0x0        NS         # of internal buffers allocated to QOS level @    
 <35:34> NS       RAZ     NS         NS         Reserved.                                         
 <33:24> FREE_CNT RO      0x1f7      NS         # of total free buffers                           
 <23:21> NS       RAZ     NS         NS         Reserved.                                         
 <20:12> MAX_THR  R/W     0x1ff      NS         Max threshold for QOS level @                     
 <11:9>  NS       RAZ     NS         NS         Reserved.                                         
 <8:0>   MIN_THR  R/W     0x0        NS         Min threshold for QOS level @                     
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * POW_QOS_RND
 * 
 *  Contains the round definitions for issuing new work.  Each round consists of 8 bits with each
 *  bit
 *  corresponding to a QOS level.  There are 4 rounds contained in each register for a total of 32
 *  rounds.  The issue logic traverses through the rounds sequentially (lowest round to highest
 *  round)
 *  in an attempt to find new work for each PP.  Within each round, the issue logic traverses
 *  through
 *  the QOS levels sequentially (highest QOS to lowest QOS) skipping over each QOS level with a
 *  clear
 *  bit in the round mask.  Note: setting a QOS level to all zeroes in all issue round registers
 *  will
 *  prevent work from being issued from that QOS level.
 * 
$POW_QOS_RND(0..7)   Address=(0x16700000001C0+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS     RAZ     NS         NS         Reserved.                                         
 <31:24> RND_P3 R/W     0xff       NS         Round mask for round @x4+3                        
 <23:16> RND_P2 R/W     0xff       NS         Round mask for round @x4+2                        
 <15:8>  RND_P1 R/W     0xff       NS         Round mask for round @x4+1                        
 <7:0>   RND    R/W     0xff       NS         Round mask for round @x4                          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * POW_WQ_INT = POW Work Queue Interrupt Register
 * 
 *  Contains the bits (1 per group) that set work queue interrupts and are used to clear these
 *  interrupts.  Also contains the input queue interrupt temporary disable bits (1 per group). For
 *  more information regarding this register, see the interrupt section.
 * 
$POW_WQ_INT   Address=(0x1670000000200)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS     RAZ     NS         NS         Reserved.                                         
 <31:16> IQ_DIS R/W1S   0x0        NS         Input queue interrupt temporary disable mask      
                                              Corresponding WQ_INT<*> bit cannot be set due to
                                              IQ_CNT/IQ_THR check when this bit is set.
                                              Corresponding IQ_DIS bit is cleared by HW whenever:
                                              - POW_WQ_INT_CNT*[IQ_CNT] is zero, or
                                              - POW_WQ_INT_CNT*[TC_CNT]==1 when periodic
                                                counter POW_WQ_INT_PC[PC]==0
 <15:0>  WQ_INT R/W1C   0x0        NS         Work queue interrupt bits                         
                                              Corresponding WQ_INT bit is set by HW whenever:
                                              - POW_WQ_INT_CNT*[IQ_CNT] >=
                                                POW_WQ_INT_THR*[IQ_THR] and the threshold
                                                interrupt is not disabled.
                                                IQ_DIS<*>==1 disables the interrupt.
                                                POW_WQ_INT_THR*[IQ_THR]==0 disables the int.
                                              - POW_WQ_INT_CNT*[DS_CNT] >=
                                                POW_WQ_INT_THR*[DS_THR] and the threshold
                                                interrupt is not disabled
                                                POW_WQ_INT_THR*[DS_THR]==0 disables the int.
                                              - POW_WQ_INT_CNT*[TC_CNT]==1 when periodic
                                                counter POW_WQ_INT_PC[PC]==0 and
                                                POW_WQ_INT_THR*[TC_EN]==1 and at least one of:
                                              - POW_WQ_INT_CNT*[IQ_CNT] > 0
                                              - POW_WQ_INT_CNT*[DS_CNT] > 0
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * POW_WQ_INT_PC = POW Work Queue Interrupt Periodic Counter Register
 * 
 *  Contains the threshold value for the work queue interrupt periodic counter and also a read-
 *  only
 *  copy of the periodic counter.  For more information regarding this register, see the interrupt
 *  section.
 * 
$POW_WQ_INT_PC   Address=(0x1670000000208)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:60> NS     RAZ     NS         NS         Reserved.                                         
 <59:32> PC     RO/H    0x0        NS         Work queue interrupt periodic counter             
 <31:28> NS     RAZ     NS         NS         Reserved.                                         
 <27:8>  PC_THR R/W     0x0        NS         Work queue interrupt periodic counter threshold   
 <7:0>   NS     RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * POW_NW_TIM = POW New Work Timer Period Register
 * 
 *  Sets the minimum period for a new work request timeout.  Period is specified in n-1 notation
 *  where the increment value is 1024 clock cycles.  Thus, a value of 0x0 in this register
 *  translates
 *  to 1024 cycles, 0x1 translates to 2048 cycles, 0x2 translates to 3072 cycles, etc...  Note:
 *  the
 *  maximum period for a new work request timeout is 2 times the minimum period.  Note: the new
 *  work
 *  request timeout counter is reset when this register is written.
 *  There are two new work request timeout cases:
 *  - WAIT bit clear.  The new work request can timeout if the timer expires before the pre-fetch
 *    engine has reached the end of all work queues.  This can occur if the executable work queue
 *    entry is deep in the queue and the pre-fetch engine is subject to many resets (i.e. high
 *  switch,
 *    de-schedule, or new work load from other PP's).  Thus, it is possible for a PP to receive a
 *  work
 *    response with the NO_WORK bit set even though there was at least one executable entry in the
 *    work queues.  The other (and typical) scenario for receiving a NO_WORK response with the
 *  WAIT
 *    bit clear is that the pre-fetch engine has reached the end of all work queues without
 *  finding
 *    executable work.
 *  - WAIT bit set.  The new work request can timeout if the timer expires before the pre-fetch
 *    engine has found executable work.  In this case, the only scenario where the PP will receive
 *  a
 *    work response with the NO_WORK bit set is if the timer expires.  Note: it is still possible
 *  for
 *    a PP to receive a NO_WORK response even though there was at least one executable entry in
 *  the
 *    work queues.
 *  In either case, it's important to note that switches and de-schedules are higher priority
 *  operations that can cause the pre-fetch engine to reset.  Thus in a system with many switches
 *  or
 *  de-schedules occuring, it's possible for the new work timer to expire (resulting in NO_WORK
 *  responses) before the pre-fetch engine is able to get very deep into the work queues.
 * 
$POW_NW_TIM   Address=(0x1670000000210)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:10> NS     RAZ     NS         NS         Reserved.                                         
 <9:0>   NW_TIM R/W     0x0        0x4        New work timer period                             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * POW_ECC_ERR = POW ECC Error Register
 * 
 *  Contains the single and double error bits and the corresponding interrupt enables for the ECC-
 *  protected POW index memory.  Also contains the syndrome value in the event of an ECC error.
 *  Also contains the remote pointer error bit and interrupt enable.  RPE is set when the POW
 *  detected
 *  corruption on one or more of the input queue lists in L2/DRAM (POW's local copy of the tail
 *  pointer
 *  for the L2/DRAM input queue did not match the last entry on the the list).   This is caused by
 *  L2/DRAM corruption, and is generally a fatal error because it likely caused POW to load bad
 *  work
 *  queue entries.
 *  This register also contains the illegal operation error bits and the corresponding interrupt
 *  enables as follows:
 *   <0> Received SWTAG/SWTAG_FULL/SWTAG_DESCH/DESCH/UPD_WQP from PP in NULL_NULL state
 *   <1> Received SWTAG/SWTAG_DESCH/DESCH/UPD_WQP from PP in NULL state
 *   <2> Received SWTAG/SWTAG_FULL/SWTAG_DESCH/GET_WORK from PP with pending tag switch to ORDERED
 *  or ATOMIC
 *   <3> Received SWTAG/SWTAG_FULL/SWTAG_DESCH from PP with tag specified as NULL_NULL
 *   <4> Received SWTAG_FULL/SWTAG_DESCH from PP with tag specified as NULL
 *   <5> Received SWTAG/SWTAG_FULL/SWTAG_DESCH/DESCH/UPD_WQP/GET_WORK/NULL_RD from PP with
 *  GET_WORK pending
 *   <6> Received SWTAG/SWTAG_FULL/SWTAG_DESCH/DESCH/UPD_WQP/GET_WORK/NULL_RD from PP with NULL_RD
 *  pending
 *   <7> Received CLR_NSCHED from PP with SWTAG_DESCH/DESCH/CLR_NSCHED pending
 *   <8> Received SWTAG/SWTAG_FULL/SWTAG_DESCH/DESCH/UPD_WQP/GET_WORK/NULL_RD from PP with
 *  CLR_NSCHED pending
 *   <9> Received illegal opcode
 *  <10> Received ADD_WORK with tag specified as NULL_NULL
 *  <11> Received DBG load from PP with DBG load pending
 *  <12> Received CSR load from PP with CSR load pending
 *  Attribute: -exempt_w1c_w=True.
 * 
$POW_ECC_ERR   Address=(0x1670000000218)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:45> NS     RAZ     NS         NS         Reserved.                                         
 <44:32> IOP_IE R/W     0x0        NS         Illegal operation interrupt enables               
 <31:29> NS     RAZ     NS         NS         Reserved.                                         
 <28:16> IOP    R/W1C   0x0        0x0        Illegal operation errors                          
 <15:14> NS     RAZ     NS         NS         Reserved.                                         
 <13>    RPE_IE R/W     0x0        NS         Remote pointer error interrupt enable             
 <12>    RPE    R/W1C   0x0        0x0        Remote pointer error                              
 <11:9>  NS     RAZ     NS         NS         Reserved.                                         
 <8:4>   SYN    RO/H    NS         NS         Syndrome value (only valid when DBE or SBE is set)
 <3>     DBE_IE R/W     0x0        NS         Double bit error interrupt enable                 
 <2>     SBE_IE R/W     0x0        NS         Single bit error interrupt enable                 
 <1>     DBE    R/W1C   0x0        0x0        Double bit error                                  
 <0>     SBE    R/W1C   0x0        0x0        Single bit error                                  
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * POW_INT_CTL = POW Internal Control Register
 * 
 *  Contains POW internal control values (for internal use, not typically for customer use):
 *  PFR_DIS = Disable high-performance pre-fetch reset mode.
 *  NBR_THR = Assert ncb__busy when the number of remaining coherent bus NBR credits equals is
 *  less
 *  than or equal to this value.
 * 
$POW_INT_CTL   Address=(0x1670000000220)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  NS      RAZ     NS         NS         Reserved.                                         
 <5>     PFR_DIS R/W     0x0        0x0        High-perf pre-fetch reset mode disable            
 <4:0>   NBR_THR R/W     0x2        0x2        NBR busy threshold                                
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * POW_NOS_CNT = POW No-schedule Count Register
 * 
 *  Contains the number of work queue entries on the no-schedule list.
 * 
$POW_NOS_CNT   Address=(0x1670000000228)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:10> NS      RAZ     NS         NS         Reserved.                                         
 <9:0>   NOS_CNT RO      0x0        NS         # of work queue entries on the no-schedule list   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * POW_PF_RST_MSK = POW Prefetch Reset Mask
 * 
 *  Resets the work prefetch engine when work is stored in an internal buffer (either when the add
 *  work arrives or when the work is reloaded from an external buffer) for an enabled QOS level
 *  (1 bit per QOS level).
 * 
$POW_PF_RST_MSK   Address=(0x1670000000230)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS      RAZ     NS         NS         Reserved.                                         
 <7:0>   RST_MSK R/W     0x0        NS         Prefetch engine reset mask                        
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * POW_IQ_INT = POW Input Queue Interrupt Register
 * 
 *  "Contains the bits (1 per QOS level) that can trigger the input queue interrupt.  An IQ_INT
 *  bit
 *  will be set if POW_IQ_CNT#QOS# changes and the resulting value is equal to POW_IQ_THR#QOS#."
 * 
$POW_IQ_INT   Address=(0x1670000000238)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS     RAZ     NS         NS         Reserved.                                         
 <7:0>   IQ_INT R/W1C   0x0        NS         Input queue interrupt bits                        
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * POW_IQ_INT_EN = POW Input Queue Interrupt Enable Register
 * 
 *  Contains the bits (1 per QOS level) that enable the input queue interrupt.
 * 
$POW_IQ_INT_EN   Address=(0x1670000000240)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS     RAZ     NS         NS         Reserved.                                         
 <7:0>   INT_EN R/W     0x0        NS         Input queue interrupt enable bits                 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * POW_WS_PC
 * 
 *  Counts the number of work schedules for each group.  Write to clear.
 * 
$POW_WS_PC(0..15)   Address=(0x1670000000280+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  WS_PC R/W1C   0x0        NS         Work schedule performance counter for group @     
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * POW_WA_PC
 * 
 *  Counts the number of add new work requests for each QOS level.  Write to clear.
 * 
$POW_WA_PC(0..7)   Address=(0x1670000000300+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  WA_PC R/W1C   0x0        NS         Work add performance counter for QOS level @      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * POW_IQ_CNT
 * 
 *  Contains a read-only count of the number of work queue entries for each QOS level.
 * 
$POW_IQ_CNT(0..7)   Address=(0x1670000000340+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS     RAZ     NS         NS         Reserved.                                         
 <31:0>  IQ_CNT RO      0x0        NS         Input queue count for QOS level @                 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * POW_WA_COM_PC = POW Work Add Combined Performance Counter
 * 
 *  Counts the number of add new work requests for all QOS levels.  Write to clear.
 * 
$POW_WA_COM_PC   Address=(0x1670000000380)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  WA_PC R/W1C   0x0        NS         Work add combined performance counter             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * POW_IQ_COM_CNT = POW Input Queue Combined Count Register
 * 
 *  Contains a read-only count of the total number of work queue entries in all QOS levels.
 * 
$POW_IQ_COM_CNT   Address=(0x1670000000388)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS     RAZ     NS         NS         Reserved.                                         
 <31:0>  IQ_CNT RO      0x0        NS         Input queue combined count                        
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * POW_TS_PC = POW Tag Switch Performance Counter
 * 
 *  Counts the number of tag switch requests.  Write to clear.
 * 
$POW_TS_PC   Address=(0x1670000000390)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  TS_PC R/W1C   0x0        NS         Tag switch performance counter                    
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * POW_DS_PC = POW De-Schedule Performance Counter
 * 
 *  Counts the number of de-schedule requests.  Write to clear.
 * 
$POW_DS_PC   Address=(0x1670000000398)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  DS_PC R/W1C   0x0        NS         De-schedule performance counter                   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * POW_IQ_THR
 * 
 *  Threshold value for triggering input queue interrupts.
 *  Attribute: -dv_fc_scratch=ALL.
 *  Attribute: -exempt_natural_alignment=a.
 * 
$POW_IQ_THR(0..7)   Address=(0x16700000003A0+a*0x8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS     RAZ     NS         NS         Reserved.                                         
 <31:0>  IQ_THR R/W     0xffffffff NS         Input queue threshold for QOS level @             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * POW_BIST_STAT = POW BIST Status Register
 * 
 *  Contains the BIST status for the POW memories ('0' = pass, '1' = fail).
 * 
$POW_BIST_STAT   Address=(0x16700000003F8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:12> NS    RAZ     NS         NS         Reserved.                                         
 <11>    CAM   RO      0x0        0x0        POW CAM BIST status                               
 <10>    NS    RAZ     NS         NS         Reserved.                                         
 <9:8>   NBR   RO      0x0        0x0        NCB receiver memory BIST status                   
 <7:6>   NS    RAZ     NS         NS         Reserved.                                         
 <5:4>   NBT   RO      0x0        0x0        NCB transmitter memory BIST status                
 <3>     IDX   RO      0x0        0x0        Index memory BIST status                          
                                             Attribute: -exempt_keyword=True.
 <2>     FIDX  RO      0x0        0x0        Forward index memory BIST status                  
 <1>     PEND  RO      0x0        0x0        Pending switch memory BIST status                 
 <0>     ADR   RO      0x0        0x0        Address memory BIST status                        
-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the rad.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

 * 
 * RAD_REG_CTL
 * 
 *  
 * 
$RAD_REG_CTL   Address=(0x1180070000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:7>  NS       RAZ     0x0        0x0        RESERVED                                          
 <6>     WC_DIS   R/W/H   0x0        0x0        Reserved. INTERNAL: Bug 17188 diagnostic disable. 
 <5:2>   MAX_READ R/W     0x8        0x8        Maximum number of outstanding data read commands  
 <1>     STORE_LE R/W     0x0        0x0        Force STORE0 byte write address to little endian  
 <0>     RESET    WO      0x0        0x0        Reset oneshot pulse (lasts for 4 cycles)          

Notes:
MAX_READ is a throttle to control NCB usage.  Values >8 are illegal.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RAD_REG_CMD_BUF
 * 
 *  
 * 
$RAD_REG_CMD_BUF   Address=(0x1180070000008)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:58> NS    RAZ     0x0        0x0        RESERVED                                          
 <57:49> DWB   R/W     0x0        NS         Number of DontWriteBacks                          
 <48:46> POOL  R/W     0x0        NS         Free list used to free command buffer segments    
 <45:33> SIZE  R/W     0x0        NS         Number of uint64s per command buffer segment      
 <32:0>  PTR   R/W     0x0        NS         Initial command buffer pointer[39:7] (128B-aligned)

Notes:
Sets the command buffer parameters
The size of the command buffer segments is measured in uint64s.  The pool specifies 1 of 8
free
lists to be used when freeing command buffer segments.  The PTR field is overwritten with the
next
pointer each time that the command buffer segment is exhausted.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RAD_REG_POLYNOMIAL
 * 
 *  
 *  Attribute: -dv_fc_scratch=ALL.
 * 
$RAD_REG_POLYNOMIAL   Address=(0x1180070000010)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS     RAZ     0x0        0x0        RESERVED                                          
 <7:0>   COEFFS R/W     0x1d       0x1d       coefficients of GF(2^8) irreducible polynomial    

Notes:
The polynomial is x^8 + C7*x^7 + C6*x^6 + C5*x^5 + C4*x^4 + C3*x^3 + C2*x^2 + C1*x^1 + C0.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RAD_REG_READ_IDX
 * 
 *  
 * 
$RAD_REG_READ_IDX   Address=(0x1180070000018)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         RESERVED                                          
 <31:16> INC   R/W     0x0        0x0        Increment to add to current index for next index  
 <15:0>  IDX   R/W     0x0        0x0        Index to use for next memory CSR read             
                                             Attribute: -exempt_keyword=True.

Notes:
Provides the read index during a CSR read operation to any of the CSRs that are physically
stored
as memories.  The names of these CSRs begin with the prefix "RAD_MEM_".
IDX[15:0] is the read index.  INC[15:0] is an increment that is added to IDX[15:0] after any
CSR read.
The intended use is to initially write this CSR such that IDX=0 and INC=1.  Then, the entire
contents of a CSR memory can be read with consecutive CSR read commands.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RAD_REG_BIST_RESULT
 * 
 *  
 * 
$RAD_REG_BIST_RESULT   Address=(0x1180070000080)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS      RAZ     NS         NS         RESERVED                                          
 <7>     STA     RO      NS         0x0        BiST result of the STA     memories               
 <6>     NCB_OUB RO      NS         0x0        BiST result of the NCB_OUB memories               
 <5:4>   NCB_INB RO      NS         0x0        BiST result of the NCB_INB memories               
 <3:0>   DAT     RO      NS         0x0        BiST result of the DAT     memories               

Notes:
Access to the internal BiST results
Each bit is the BiST result of an individual memory (per bit, 0=pass and 1=fail).

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RAD_REG_ERROR
 * 
 *  
 * 
$RAD_REG_ERROR   Address=(0x1180070000088)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ     NS         NS         RESERVED                                          
 <0>     DOORBELL R/W1C/H 0x0        0x0        A doorbell count has overflowed                   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RAD_REG_INT_MASK
 * 
 *  
 * 
$RAD_REG_INT_MASK   Address=(0x1180070000090)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ     NS         NS         RESERVED                                          
 <0>     DOORBELL R/W/H   0x0        0x0        Bit mask corresponding to RAD_REG_ERROR[0] above  

Notes:
When a mask bit is set, the corresponding interrupt is enabled.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RAD_REG_DEBUG0
 * 
 *  
 * 
$RAD_REG_DEBUG0   Address=(0x1180070000100)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:57> NS      RO/H    NS         NS         RESERVED                                          
 <56:32> LOOP    RO/H    NS         NS         Loop offset                                       
 <31:24> NS      RO/H    NS         NS         RESERVED                                          
 <23:22> NS      RO/H    NS         NS         RESERVED                                          
 <21:16> IRIDX   RO/H    NS         NS         IWords read index                                 
 <15:14> NS      RO/H    NS         NS         RESERVED                                          
 <13:8>  IWIDX   RO/H    NS         NS         IWords write index                                
 <7>     OWORDQV RO/H    NS         NS         Valid for OWORDQ                                  
 <6>     OWORDPV RO/H    NS         NS         Valid for OWORDP                                  
 <5>     COMMIT  RO/H    NS         NS         Waiting for write commit                          
 <4:0>   STATE   RO/H    NS         NS         Main state                                        
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RAD_REG_DEBUG1
 * 
 *  
 * 
$RAD_REG_DEBUG1   Address=(0x1180070000108)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  CWORD RO/H    NS         NS         CWord                                             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RAD_REG_DEBUG2
 * 
 *  
 * 
$RAD_REG_DEBUG2   Address=(0x1180070000110)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  OWORDP RO/H    NS         NS         OWordP                                            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RAD_REG_DEBUG3
 * 
 *  
 * 
$RAD_REG_DEBUG3   Address=(0x1180070000118)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  OWORDQ RO/H    NS         NS         OWordQ                                            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RAD_REG_DEBUG4
 * 
 *  
 * 
$RAD_REG_DEBUG4   Address=(0x1180070000120)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  RWORD RO/H    NS         NS         RWord                                             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RAD_REG_DEBUG5
 * 
 *  
 * 
$RAD_REG_DEBUG5   Address=(0x1180070000128)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:53> NS       RAZ     NS         NS         RESERVED                                          
 <52:50> NIROPC7  RO/H    NS         NS         NCBI ropc (stage7 grant)                          
 <49:48> NIRQUE7  RO/H    NS         NS         NCBI rque (stage7 grant)                          
 <47:43> NIRVAL7  RO/H    NS         NS         NCBI rval (stage7 grant)                          
 <42:40> NIROPC6  RO/H    NS         NS         NCBI ropc (stage6 arb)                            
 <39:38> NIRQUE6  RO/H    NS         NS         NCBI rque (stage6 arb)                            
 <37>    NIRARB6  RO/H    NS         NS         NCBI rarb (stage6 arb)                            
 <36:32> NIRVAL6  RO/H    NS         NS         NCBI rval (stage6 arb)                            
 <31:28> NIRIDX1  RO/H    NS         NS         NCBI ridx1                                        
 <27:24> NIWIDX1  RO/H    NS         NS         NCBI widx1                                        
 <23:20> NIRIDX0  RO/H    NS         NS         NCBI ridx0                                        
 <19:16> NIWIDX0  RO/H    NS         NS         NCBI widx0                                        
 <15:14> WCCREDS  RO/H    0x0        0x0        WC credits                                        
 <13:12> FPACREDS RO/H    0x1        0x0        POW credits                                       
 <11:10> NS       RAZ     NS         NS         RESERVED                                          
 <9:8>   POWCREDS RO/H    0x2        0x0        POW credits                                       
 <7:4>   N1CREDS  RO/H    0x8        0x0        NCBI1 credits                                     
 <3:0>   N0CREDS  RO/H    0x8        0x0        NCBI0 credits                                     
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RAD_REG_DEBUG6
 * 
 *  
 * 
$RAD_REG_DEBUG6   Address=(0x1180070000130)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:56> CNT  RO/H    NS         NS         CCTL count[7:0] (bytes)                           
 <55:40> SIZE RO/H    NS         NS         CCTL size (bytes)                                 
 <39:0>  PTR  RO/H    NS         NS         CCTL pointer                                      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RAD_REG_DEBUG7
 * 
 *  
 * 
$RAD_REG_DEBUG7   Address=(0x1180070000138)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:15> NS    RAZ     NS         NS         RESERVED                                          
 <14:0>  CNT   RO/H    NS         NS         CCTL count[22:8] (bytes)                          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RAD_REG_DEBUG8
 * 
 *  
 * 
$RAD_REG_DEBUG8   Address=(0x1180070000140)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:56> FLAGS RO/H    NS         NS         ICTL flags                                        
 <55:40> SIZE  RO/H    NS         NS         ICTL size (bytes)                                 
 <39:0>  PTR   RO/H    NS         NS         ICTL pointer                                      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RAD_REG_DEBUG9
 * 
 *  
 * 
$RAD_REG_DEBUG9   Address=(0x1180070000148)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:20> NS    RAZ     NS         NS         RESERVED                                          
 <19>    EOD   RO/H    NS         NS         ICTL eod flag                                     
 <18>    INI   RO/H    NS         NS         ICTL init flag                                    
 <17>    Q     RO/H    NS         NS         ICTL q enable                                     
 <16>    P     RO/H    NS         NS         ICTL p enable                                     
 <15:8>  MUL   RO/H    NS         NS         ICTL multiplier                                   
 <7:0>   IDX   RO/H    NS         NS         ICTL index                                        
                                             Attribute: -exempt_keyword=True.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RAD_REG_DEBUG10
 * 
 *  
 * 
$RAD_REG_DEBUG10   Address=(0x1180070000150)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:56> FLAGS RO/H    NS         NS         OCTL flags                                        
 <55:40> SIZE  RO/H    NS         NS         OCTL size (bytes)                                 
 <39:0>  PTR   RO/H    NS         NS         OCTL pointer                                      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RAD_REG_DEBUG11
 * 
 *  
 * 
$RAD_REG_DEBUG11   Address=(0x1180070000158)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:13> NS    RAZ     NS         NS         RESERVED                                          
 <12>    Q     RO/H    NS         NS         OCTL q flag                                       
 <11>    P     RO/H    NS         NS         OCTL p flag                                       
 <10>    WC    RO/H    NS         NS         OCTL write commit flag                            
 <9>     EOD   RO/H    NS         NS         OCTL eod flag                                     
 <8>     SOD   RO/H    NS         NS         OCTL sod flag                                     
 <7:0>   IDX   RO/H    NS         NS         OCTL index                                        
                                             Attribute: -exempt_keyword=True.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RAD_REG_DEBUG12
 * 
 *  
 * 
$RAD_REG_DEBUG12   Address=(0x1180070000160)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:15> NS      RAZ     NS         NS         RESERVED                                          
 <14:0>  ASSERTS RO      NS         NS         Various assertion checks                          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RAD_MEM_DEBUG0
 * 
 *  
 * 
$RAD_MEM_DEBUG0   Address=(0x1180070001000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  IWORD RO/H    NS         NS         IWord                                             

Notes:
This CSR is a memory of 32 entries, and thus, the RAD_REG_READ_IDX CSR must be written before
any
CSR read operations to this address can be performed.  A read of any entry that has not been
previously written is illegal and will result in unpredictable CSR read data.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RAD_MEM_DEBUG1
 * 
 *  
 * 
$RAD_MEM_DEBUG1   Address=(0x1180070001008)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  P_DAT RO/H    NS         NS         P data                                            

Notes:
This CSR is a memory of 256 entries, and thus, the RAD_REG_READ_IDX CSR must be written before
any
CSR read operations to this address can be performed.  A read of any entry that has not been
previously written is illegal and will result in unpredictable CSR read data.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RAD_MEM_DEBUG2
 * 
 *  
 * 
$RAD_MEM_DEBUG2   Address=(0x1180070001010)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  Q_DAT RO/H    NS         NS         Q data                                            

Notes:
This CSR is a memory of 256 entries, and thus, the RAD_REG_READ_IDX CSR must be written before
any
CSR read operations to this address can be performed.  A read of any entry that has not been
previously written is illegal and will result in unpredictable CSR read data.

-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the rnm.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

 * 
 * RNM_CTL_STATUS = RNM's Control/Status Register
 * 
 *  The RNM's interrupt enable register.
 *  Attribute: -dv_fc_scratch=ALL.
 *  Attribute: -exempt_w1c_w=True.
 * 
$RNM_CTL_STATUS   Address=(0x1180040000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:12> NS      RAZ     NS         NS         Reserved.                                         
 <11>    DIS_MAK R/W1S/H NS         NS         Disable use of Master AES KEY                     
 <10>    EER_LCK RO/H    0x0        0x0        Encryption enable register locked                 
 <9>     EER_VAL RO/H    0x0        0x0        Dormant encryption key match                      
 <8:5>   ENT_SEL R/W     0x0        0x0        ?                                                 
 <4>     EXP_ENT R/W     0x0        0x0        Exported entropy enable for random number generator
 <3>     RNG_RST R/W     0x0        0x0        Reset RNG as core reset.                          
 <2>     RNM_RST R/W     0x0        0x0        Reset the RNM as core reset except for register   
                                               logic.
 <1>     RNG_EN  R/W     0x0        0x0        Enable the output of the RNG.                     
 <0>     ENT_EN  R/W     0x0        0x0        Entropy enable for random number generator.       
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RNM_BIST_STATUS = RNM's BIST Status Register
 * 
 *  The RNM's Memory Bist Status register.
 * 
$RNM_BIST_STATUS   Address=(0x1180040000008)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:2>  NS    RAZ     NS         NS         Reserved.                                         
 <1>     RRC   RO      0x0        0x0        Status of RRC block bist.                         
 <0>     MEM   RO      0x0        0x0        Status of MEM block bist.                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RNM_EER_KEY = RNM's Encryption enable register
 * 
 *  The RNM's Encryption enable register
 * 
$RNM_EER_KEY   Address=(0x1180040000010)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  KEY WO      0x0        0x0        Dormant encryption key.  If dormant crypto is fuse
                                           enabled, crypto can be enable by writing this
                                           register with the correct key.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RNM_EER_DBG = RNM's Encryption enable debug register
 * 
 *  The RNM's Encryption enable debug register
 * 
$RNM_EER_DBG   Address=(0x1180040000018)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  DAT RO/H    NS         NS         Dormant encryption debug info.                    
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RNM_SERIAL_NUM = RNM's fuse serial number register
 * 
 *  The RNM's fuse serial number register
 * 
$RNM_SERIAL_NUM   Address=(0x1180040000020)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  DAT RO/H    NS         NS         Dormant encryption serial number                  

Notes:
Added RNM_SERIAL_NUM in pass 2.0
-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the rst.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

 * 
 * RST_INTSN_E
 * 
 *  Enumerates the different interrupts from RST.
 *  Attribute: -width=20.
 * 
$RST_INTSN_E
-----------------------------------------------------------------------------------------------------------------------------------
 Value                  Name                Description    
-----------------------------------------------------------------------------------------------------------------------------------
 0x6000+a               RST_INT_LINK(0..2)  See RST_INT[RST_LINK<a>].
 0x6008+a               RST_INT_PERST(0..2) See RST_INT[PERST<a>].
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RST_BOOT = RST Boot Register
 * 
 *  
 *  Attribute: -exempt_w1c_w=True.
 * 
$RST_BOOT   Address=(0x1180006001600)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    CHIPKILL    R/W1S   0x0        0x0        A 0->1 transition of CHIPKILL starts the CHIPKILL timer. When CHIPKILL=1 and the timer
                                                   expires, internal chip reset is asserted forever until the next chip reset. The CHIPKILL
                                                   timer can be stopped only by a chip (cold, warm, soft) reset. The length of the CHIPKILL
                                                   timer is specified by RST_CKILL[TIMER].
 <62>    JTCSRDIS    R/W     NS         0x0        When set, internal CSR access via JTAG TAP controller is disabled This field resets to 1
                                                   in Authentik mode, else 0.
 <61>    EJTAGDIS    R/W     NS         0x0        When set, external EJTAG access is disabled This field resets to 1 in Authentik mode, else 0.
 <60>    ROMEN       R/W     NS         0x0        When set, Authentik/eMMC boot ROM is visible in the boot bus address space.  This field
                                                   resets to 1 in an Authentik part or when booting from eMMC. Else, resets to 0.
 <59>    CKILL_PPDIS R/W     0x1        NS         When set, cores other than 0 are disabled during a CHIPKILL.  Writes have no effect when
                                                   RST_BOOT[CHIPKILL]=1.
 <58>    JT_TSTMODE  RO      NS         NS         JTAG test mode.                                   
 <57>    VRM_ERR     RO      NS         NS         VRM did not complete operations within 5.25mS of DCOK being asserted. PLLs were released
                                                   automatically.
 <56:37> NS          RAZ     NS         NS         Reserved.                                         
 <36:30> C_MUL       RO      NS         NS         Core clock multiplier.                            
                                                   C_MUL = (core CLK speed) / (ref clock speed)
                                                   'ref clock speed' should always be 50MHz.
 <29:24> PNR_MUL     RO      NS         NS         Coprocessor clock multiplier.                     
                                                   PNR_MUL = (coprocessor CLK speed) /(ref clock speed)
                                                   'ref clock speed' should always be 50MHz.
 <23:21> NS          RAZ     NS         NS         Reserved.                                         
 <20:18> LBOOT_OCI   R/W1C   NS         NS         Last boot cause mask; resets only with DCOK.      
                                                   <20> Reserved.
                                                   <19> Reserved.
                                                   <18> Reserved.
 <17:12> LBOOT_EXT   R/W1C   NS         NS         Last boot cause mask; resets only with DCOK.      
                                                   <17> Reserved.
                                                   <16> Warm reset due to Cntl2 link-down or hot-reset.
                                                   <15> Reserved.
                                                   <14> Cntl2 reset due to PERST2_L pin.
                                                   <13> Reserved.
                                                   <12> Warm reset due to PERST2_L pin.
 <11:2>  LBOOT       R/W1C/H NS         NS         Last boot cause mask; resets only with DCOK.      
                                                   <11> Soft reset due to watchdog.
                                                   <10> Soft reset due to RST_SOFT_RST write.
                                                   <9> Warm reset due to Cntl0 link-down or hot-reset.
                                                   <8> Warm reset due to Cntl1 link-down or hot-reset.
                                                   <7> Cntl1 reset due to PERST1_L pin.
                                                   <6> Cntl0 reset due to PERST0_L pin.
                                                   <5> Warm reset due to PERST1_L pin.
                                                   <4> Warm reset due to PERST0_L pin.
                                                   <3> Warm reset due to CHIP_RESET_L pin.
                                                   <2> Cold reset due to PLL_DC_OK pin.
 <1>     RBOOT       R/W     NS         NS         Determines whether core 0 remains in reset after chip cold/warm/soft reset.
 <0>     RBOOT_PIN   RO      NS         NS         Read-only access to REMOTE_BOOT pin.              
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RST_DELAY = RST Delay Register
 * 
 *  
 *  Attribute: -dv_fc_scratch=ALL.
 * 
$RST_DELAY   Address=(0x1180006001608)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field        Field   Reset      Typical    Field                                             
 Pos     Name         Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS           RAZ     NS         NS         Reserved.                                         
 <31:16> WARM_RST_DLY R/W     0x7ff      NS         Warm reset delay. A warm reset immediately causes an early warm-reset notification, but
                                                    the assertion of warm reset is delayed this many coprocessor-clock cycles. A warm/soft
                                                    reset will not change this field.
                                                    This must be at least 500 DCLK cycles.
 <15:0>  SOFT_RST_DLY R/W     0x7ff      NS         Soft reset delay. A soft reset immediately causes an early soft-reset notification, but
                                                    the assertion of soft reset is delayed this many coprocessor-clock cycles. A warm/soft
                                                    reset will not change this field.
                                                    This must be at least 500 DCLK cycles.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RST_CFG = RST Configuration Register
 * 
 *  
 * 
$RST_CFG   Address=(0x1180006001610)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field         Field   Reset      Typical    Field                                             
 Pos     Name          Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  BIST_DELAY    RO/H    NS         NS         Reserved.                                         
 <5:3>   NS            RAZ     NS         NS         Reserved.                                         
 <2>     CNTL_CLR_BIST R/W     0x0        0x0        Perform clear BIST during control-only reset, instead of a full BIST. A warm/soft reset
                                                     will not change this field.
 <1>     WARM_CLR_BIST R/W     0x0        0x0        Perform clear BIST during warm reset, instead of a full BIST. A warm/soft reset does not
                                                     change this field. Note that a cold reset always performs a full BIST.
 <0>     SOFT_CLR_BIST R/W     0x0        0x0        Perform clear BIST during soft reset, instead of a full BIST. A warm/soft reset does not
                                                     change this field. Note that a cold reset always performs a full BIST.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RST_INT = RST Interrupt Register
 * 
 *  
 * 
$RST_INT   Address=(0x1180006001628)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:11> NS       RAZ     NS         NS         Reserved.                                         
 <10:8>  PERST    R/W1C/H 0x0        NS         PERST*_L asserted while RST_CTL*[RST_RCV] = 1 and RST_CTL*[RST_CHIP] = 0. One bit
                                                corresponds to each controller. Throws RST_INTSN_E::RST_INT_PERST(0..2).
 <7:3>   NS       RAZ     NS         NS         Reserved.                                         
 <2:0>   RST_LINK R/W1C/H 0x0        NS         A controller link-down/hot-reset occurred while RST_CTL*[RST_LINK] = 0. Software must
                                                assert then deassert RST_SOFT_PRST*[SOFT_PRST]. One bit corresponds to each controller.
                                                Throws RST_INTSN_E::RST_INT_LINK(0..2).
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RST_CKILL = RST Chipkill Timer Register
 * 
 *  
 * 
$RST_CKILL   Address=(0x1180006001638)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:47> NS    RAZ     NS         NS         Reserved.                                         
 <46:0>  TIMER R/W     0x3ffffffff NS         Chipkill timer measured in SCLKs. Reads return current chipkill timer. Writes have no
                                             effect when RST_BOOT[CHIPKILL] = 1.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RST_CTL = RST Controllers Registers
 * 
 *  
 * 
$RST_CTL(0..2)   Address=(0x1180006001640+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:10> NS        RAZ     NS         NS         Reserved.                                         
 <9>     PRST_LINK R/W     0x0        NS         Controls whether corresponding controller link-down or hot-reset causes the assertion of
                                                 RST_SOFT_PRST*[SOFT_PRST].
                                                 A warm/soft reset does not change this field. On cold reset, this field is initialized to
                                                 0.
 <8>     RST_DONE  RO/H    NS         NS         Read-only access to controller reset status. RST_DONE is always zero (i.e. the controller
                                                 is held in reset) when:
                                                 RST_SOFT_PRST*[SOFT_PRST] = 1, or
                                                 RST_RCV = 1 and PERST*_L pin is asserted.
 <7>     RST_LINK  R/W     NS         NS         Reset link. Controls whether corresponding controller link-down reset or hot reset causes
                                                 a warm chip reset. On cold reset, this field is initialized as follows:
                                                 0 when RST_CTL*[HOST_MODE] = 1
                                                 1 when RST_CTL*[HOST_MODE] = 0
                                                 Note that a link-down or hot-reset event can never cause a warm chip reset when the
                                                 controller is in reset (i.e. can never cause a warm reset when RST_DONE = 0).
 <6>     HOST_MODE RO      NS         NS         Read-only access to the corresponding straps indicating PCIE*_MODE is host. For
                                                 controllers 2 and 3 this field is always set.
 <5:4>   NS        RAZ     NS         NS         Reserved.                                         
 <3>     RST_DRV   R/W     NS         NS         Controls whether PERST*_L is driven. A warm/soft reset does not change this field. On cold
                                                 reset, this field is initialized as follows:
                                                 0 when RST_CTL*[HOST_MODE] = 0
                                                 1 when RST_CTL*[HOST_MODE] = 1
                                                 When set, CN78XX drives the corresponding PERST*_L pin. Otherwise, CN78XX does not drive
                                                 the corresponding PERST*_L pin.
 <2>     RST_RCV   R/W     NS         NS         Controls whether PERST*_L is received. A warm/soft reset will not change this field. On
                                                 cold reset, this field is initialized as follows:
                                                 0 when RST_CTL*[HOST_MODE] = 1
                                                 1 when RST_CTL*[HOST_MODE] = 0
                                                 When RST_RCV is equal to 1, the PERST*_L value is received and may be used to reset the
                                                 controller and (optionally, based on RST_CHIP) warm reset the chip.
                                                 When RST_RCV is equal to 1 (and RST_CHIP = 0), RST_INT[PERST*] gets set when the PERST*_L
                                                 pin asserts. (This interrupt can alert software whenever the external reset pin initiates
                                                 a controller reset sequence.)
                                                 RST_VAL gives the PERST*_L pin value when RST_RCV = 1.
                                                 When RST_RCV = 0, the PERST*_L pin value is ignored.
 <1>     RST_CHIP  R/W     0x0        NS         Controls whether PERST*_L causes a chip warm reset like CHIP_RESET_L. A warm/soft reset
                                                 will not change this field. On cold reset, this field is initialized to 0.
                                                 When RST_RCV = 0, RST_CHIP is ignored.
                                                 When RST_RCV = 1, RST_CHIP = 1, and PERST*_L asserts, a chip warm reset is generated.
 <0>     RST_VAL   RO/H    NS         NS         Read-only access to PERST*_L. Unpredictable when RST_RCV = 0.
                                                 Reads as 1 when RST_RCV is equal to 1 and the
                                                 PERST*_L pin is asserted.
                                                 Reads as 0 when RST_RCV = 1 and the PERST*_L pin is not asserted.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RST_SOFT_RST = RST Soft Reset Register
 * 
 *  
 * 
$RST_SOFT_RST   Address=(0x1180006001680)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS       RAZ     NS         NS         Reserved.                                         
 <0>     SOFT_RST WO      0x0        NS         When set, resets the CN78XX core. When performing a soft reset from a remote PCIe host,
                                                always read this register and wait for the results before setting SOFT_RST to 1.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RST_SOFT_PRST = RST PCIe Soft Reset Registers
 * 
 *  
 * 
$RST_SOFT_PRST(0..2)   Address=(0x11800060016C0+a*0x8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:1>  NS        RAZ     NS         NS         Reserved.                                         
 <0>     SOFT_PRST R/W     NS         NS         Resets the PCIe logic and corresponding common logic associated with the SLI controller in
                                                 all modes, not just RC mode.
                                                 If the RST_CTL*[HOST_MODE] = 0, SOFT_PRST resets to 0.
                                                 If the RST_CTL*[HOST_MODE] = 1, SOFT_PRST resets to 1.
                                                 When CN78XX is configured to drive PERST*_L (i.e.
                                                 RST_CTLn[RST_DRV] = 1), this controls the output value on PERST*_L.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * RST_PP_POWER = RST PP Power Gating Control
 * 
 *  These bits should only be changed while the corresponding PP is in reset (see CIU3_PP_RST).
 * 
$RST_PP_POWER   Address=(0x1180006001700)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS    RAZ     NS         NS         Reserved.                                         
 <3:0>   GATE  R/W     0x0        0x0        When set, corresponding PP has voltage removed to save power.
-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the sata.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

The SATA controller implements three kinds of CSRs:
  * UCTL RSL-type registers: 2KB starting at address    0x1_1800_6C00_0000
    - Only 64-bit accesses are supported.
  * UAHC NCB-type registers: 8KB starting at address    0x1_6C00_0000_0000
    - Only 32-bit or 64-bit accesses are supported.

== UCTL ==================================================

UCTL registers are only accessible via RSL. They generally contain basic
clock controls, resets, and static configuration bits for the entire USB
subsystem.

Note that UCTL registers starting from 0x30 can be accessed only
after ACLK is enabled and UCTL_RST is deasserted.

Undefined offsets in the UCTL register region will return
64'hFFFFFFFF_FFFFFFFF on reads, writes will have no side-effects.
No addresses should alias.

The UCTL registers are big-endian.  They are not affected by the endian
configuration registers.

== UAHC =================================================

UAHC registers are implemented by the Host Controller,
access is provided to these registers over RSL or NCB. The only registers
that may require the high-performance NCB path are the AHCI Runtime registers.

Access to the UAHC registers follows the same rules as registers 0x30 to 0xF8
of the UCTL. In other words, ACLK must be enabled, UCTL_RST must be deasserted.

The UAHC registers require 8KB of address space. The interior mapping is:
  Offset            Register Type
  0x000 - 0x0FF     Generic Host Registers
  0x100 - 0x1FF     Port Registers
    0x100 - 0x17F     Port 0 Registers
    0x180 - 0x1FF     Port 1 Registers

For more information about the registers, see the AHCI v1.3 specification.
INTERNAL: For more on registers, see Synopsys DWC_ahsata SATA AHCI Databook v4.10a
sections 5.

UAHC registers may also be accessed by presenting an NCB-type address over
RSL. Registers accessed this way are statically mapped from UAHC's
little-endian mode to the RSL's big-endian.
 * 
 * SATA_UCTL_DMA_READ_CMD_E
 * 
 *  Enumerate IOI inbound command selections for DMA reads.
 *  Attribute: -width=1.
 * 
$SATA_UCTL_DMA_READ_CMD_E
-----------------------------------------------------------------------------------------------------------------------------------
 Value                  Name Description    
-----------------------------------------------------------------------------------------------------------------------------------
 0x0                    LDI Use LDT (allocate local).
 0x1                    LDT Use LDT (no allocate). Default.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UCTL_ENDIAN_MODE_E
 * 
 *  Enumerate endian mode selections.  Applies to NCB-type CSRs only (accessed over RSL or NCB).
 *  Attribute: -width=2.
 * 
$SATA_UCTL_ENDIAN_MODE_E
-----------------------------------------------------------------------------------------------------------------------------------
 Value                  Name   Description    
-----------------------------------------------------------------------------------------------------------------------------------
 0x0                    LITTLE Core is in little-endian mode. A-B-C-D-E-F-G-H becomes
                               A-B-C-D-E-F-G-H. This is the mode to use with Open-Source AHCI drivers when the core is in
                               little-endian mode.
 0x1                    BIG    Core is in big-endian mode. A-B-C-D-E-F-G-H becomes
                               H-G-F-E-D-C-B-A (swap bytes within the 32-bit word, then swap 32-bit words within 64-bit
                               doubleword). This is the mode to use with Open-Source XHCI drivers when the core is in
                               big-endian mode.
 0x2                    RSVD2  Reserved. A-B-C-D-E-F-G-H becomes D-C-B-A-H-G-F-E.
 0x3                    RSVD3  Reserved. A-B-C-D-E-F-G-H becomes E-F-G-H-A-B-C-D.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UCTL_INTSN_E
 * 
 *  Enumerates the different generated interrupts.
 *  Attribute: -width=20.
 * 
$SATA_UCTL_INTSN_E
-----------------------------------------------------------------------------------------------------------------------------------
 Value                  Name                         Description    
-----------------------------------------------------------------------------------------------------------------------------------
 0x6C001                SATA_UCTL_INTSTAT_XS_NCB_OOB See SATA_UCTL_INTSTAT[XS_NCB_OOB].
                                                     Attribute: -cib_rtl_module=sata.
 0x6C002                SATA_UCTL_INTSTAT_XM_BAD_DMA See SATA_UCTL_INTSTAT[XM_BAD_DMA].
                                                     Attribute: -cib_rtl_module=sata.
 0x6C010                SATA_UCTL_UAHC_INTRQ_IP      See SATA_UAHC_GBL_IS[IPS] and SATA_UAHC_PX_IS.
                                                     Attribute: -cib_rtl_module=sata.
                                                     Attribute: -intsn_complex=1.
                                                     Attribute: -intsn_level_sensitive=1.
 0x6C020                SATA_UCTL_UAHC_PME_REQ_IP    See SATA_UAHC_PX_IS[CPDS] and
                                                     SATA_UAHC_PX_IS[DMPS] and
                                                     SATA_UAHC_PX_IS[PCS] and
                                                     SATA_UAHC_PX_IS[SDBS] and
                                                     SATA_UAHC_PX_SNTF[PMN]
                                                     Attribute: -cib_rtl_module=sata.
                                                     Attribute: -intsn_complex=1.
                                                     Attribute: -intsn_level_sensitive=1.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UCTL_XM_BAD_DMA_TYPE_E
 * 
 *  Enumerate type of DMA error seen.
 *  Attribute: -width=4.
 * 
$SATA_UCTL_XM_BAD_DMA_TYPE_E
-----------------------------------------------------------------------------------------------------------------------------------
 Value                  Name               Description    
-----------------------------------------------------------------------------------------------------------------------------------
 0x0                    NONE               No error logged.
 0x1                    ADDR_OOB           AxAddr<63:40> != 0x0.
 0x2                    MULTIBEAT_BYTE     AxSize = 0x0 and AxLen != 0x0.
 0x3                    MULTIBEAT_HALFWORD AxSize = 0x1 and AxLen != 0x0.
 0x4                    MULTIBEAT_WORD     AxSize = 0x2 and AxLen != 0x0.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UCTL_CTL = UCTL Control Register
 * 
 *  Accessible by: always
 *  Reset by: IOI reset (srst_n)
 *  This register controls clocks, resets, power, and BIST for the SATA.
 * 
$SATA_UCTL_CTL   Address=(0x118006C000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field         Field   Reset      Typical    Field                                             
 Pos     Name          Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    CLEAR_BIST    R/W     0x0        0x0        BIST fast-clear mode select.                      
                                                     There are 2 major modes of BIST: full and clear. Full BIST is run by the BIST state
                                                     machine when clear_bist is deasserted during BIST. Clear BIST is run if clear_bist is
                                                     asserted during BIST. A Clear BIST run will simply clear all entries in SATA RAMs to 0x0.
                                                     To avoid race conditions, software must first perform a CSR write operation that puts the
                                                     clear_bist setting into the correct state and then perform another CSR write operation to
                                                     set the BIST trigger (keeping the clear_bist state constant).
                                                     CLEAR BIST completion is indicated by SATA_UCTL_BIST_STATUS[NDONE]. A BIST clear operation
                                                     takes almost 2,000 host-controller-clock cycles for the largest RAM.
 <62>    START_BIST    R/W     0x0        0x0        Rising edge starts BIST on the memories in SATA.  
                                                     To run BIST, both the host-controller clock must be configured and enabled, and should be
                                                     configured to the maximum available frequency given the available coprocessor clock and
                                                     dividers.
                                                     Also, the UCTL, UAHC, and UPHY should be held in software- initiated reset until BIST is
                                                     complete.
                                                     BIST defect status can be checked after FULL BIST completion, both of which are indicated
                                                     in SATA_UCTL_BIST_STATUS. The full BIST run takes almost 80,000 host-controller-clock
                                                     cycles
                                                     for the largest RAM.
 <61:31> NS            RAZ     NS         NS         Reserved.                                         
 <30>    A_CLK_EN      R/W     0x0        0x1        Host-controller-clock enable. When set to 1, the host-controller clock is generated. This
                                                     also enables access to UCTL registers 0x30-0xF8.
 <29>    A_CLK_BYP_SEL R/W     0x0        0x0        Select the bypass input to the host-controller-clock divider.
                                                     0 = use the divided coprocessor clock from the A_CLKDIV divider
                                                     1 = use the bypass clock from the GPIO pins
                                                     Generally bypass is only used for scan purposes.
                                                     This signal is just a multiplexer-select signal; it does not enable the host-controller
                                                     clock. You must still set A_CLK_EN separately. A_CLK_BYP_SEL select should not be
                                                     changed unless A_CLK_EN is disabled.
                                                     The bypass clock can be selected and running even if the host-controller-clock dividers
                                                     are not running.
 <28>    A_CLKDIV_RST  R/W     0x1        0x0        Host-controller-clock divider reset. Divided clocks are not generated while the divider is
                                                     being reset.
                                                     This also resets the suspend-clock divider.
 <27>    NS            RAZ     NS         NS         Reserved.                                         
 <26:24> A_CLKDIV_SEL  R/W     0x3        0x3        The hclk frequency is sclk frequency divided by A_CLKDIV_SEL.
                                                     The host-controller-clock frequency must be at or below 333MHz.
                                                     This field can be changed only when A_CLKDIV_RST = 1.
                                                     The divider values are the following:
                                                     0x0 = divide by 1 0x4 = divide by 6
                                                     0x1 = divide by 2 0x5 = divide by 8
                                                     0x2 = divide by 3 0x6 = divide by 16
                                                     0x3 = divide by 4 0x7 = divide by 24
 <23:5>  NS            RAZ     NS         NS         Reserved.                                         
 <4>     CSCLK_EN      R/W     0x0        0x1        Turns on the USB UCTL interface clock (coprocessor clock). This enables access to UAHC
                                                     registers via the IOI, as well as UCTL registers starting from 0x30 via the RSL bus.
 <3:2>   NS            RAZ     NS         NS         Reserved.                                         
 <1>     SATA_UAHC_RST R/W     0x0        0x0        Software reset; resets UAHC; active-high.         
                                                     INTERNAL: Note that soft-resetting the UAHC while it is active may cause violations of RSL
                                                     or NCB protocols.
 <0>     SATA_UCTL_RST R/W     0x0        0x0        Software reset; resets UCTL; active-high.         
                                                     Resets UAHC DMA and register shims. Resets UCTL RSL registers 0x30-0xF8.
                                                     Does not reset UCTL RSL registers 0x0-0x28.
                                                     UCTL RSL registers starting from 0x30 can be accessed only after the host-controller clock
                                                     is active and UCTL_RST is deasserted.
                                                     INTERNAL: Note that soft-resetting the UCTL while it is active may cause violations of
                                                     RSL, NCB, and CIB protocols.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UCTL_BIST_STATUS = UCTL BIST Status Register
 * 
 *  Accessible by: always
 *  Reset by: IOI reset (srst_n)
 *  Results from BIST runs of SATA's memories.
 *  Wait for NDONE==0, then look at defect indication.
 * 
$SATA_UCTL_BIST_STATUS   Address=(0x118006C000008)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field                     Field   Reset      Typical    Field                                             
 Pos     Name                      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:42> NS                        RAZ     NS         NS         Reserved.                                         
 <41>    UCTL_XM_R_BIST_NDONE      RO/H    0x1        0x0        BIST is not complete for the UCTL AxiMaster read-data FIFO.
 <40>    UCTL_XM_W_BIST_NDONE      RO/H    0x1        0x0        BIST is not complete for the UCTL AxiMaster write-data FIFO.
 <39:36> NS                        RAZ     NS         NS         Reserved.                                         
 <35>    UAHC_P0_RXRAM_BIST_NDONE  RO/H    0x1        0x0        BIST is not complete for the UAHC Port 0 RxFIFO RAM.
 <34>    UAHC_P1_RXRAM_BIST_NDONE  RO/H    0x1        0x0        BIST is not complete for the UAHC Port 1 RxFIFO RAM.
 <33>    UAHC_P0_TXRAM_BIST_NDONE  RO/H    0x1        0x0        BIST is not complete for the UAHC Port 0 TxFIFO RAM.
 <32>    UAHC_P1_TXRAM_BIST_NDONE  RO/H    0x1        0x0        BIST is not complete for the UAHC Port 1 TxFIFO RAM.
 <31:10> NS                        RAZ     NS         NS         Reserved.                                         
 <9>     UCTL_XM_R_BIST_STATUS     RO/H    0x0        0x0        BIST status of the UCTL AxiMaster read-data FIFO. 
 <8>     UCTL_XM_W_BIST_STATUS     RO/H    0x0        0x0        BIST status of the UCTL AxiMaster write-data FIFO.
 <7:4>   NS                        RAZ     NS         NS         Reserved.                                         
 <3>     UAHC_P0_RXRAM_BIST_STATUS RO/H    0x0        0x0        BIST status of the UAHC Port0 RxFIFO RAM.         
 <2>     UAHC_P1_RXRAM_BIST_STATUS RO/H    0x0        0x0        BIST status of the UAHC Port1 RxFIFO RAM.         
 <1>     UAHC_P0_TXRAM_BIST_STATUS RO/H    0x0        0x0        BIST status of the UAHC Port0 TxFIFO RAM.         
 <0>     UAHC_P1_TXRAM_BIST_STATUS RO/H    0x0        0x0        BIST status of the UAHC Port1 TxFIFO RAM.         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UCTL_SPARE0 = UCTL Spare Register 0
 * 
 *  Accessible by: always
 *  Reset by: IOI reset (srst_n)
 *  This register is spare.
 * 
$SATA_UCTL_SPARE0   Address=(0x118006C000010)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  SPARE R/W     0x0        NS         Spare.                                            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UCTL_INTSTAT = UCTL Interrupt Status Register
 * 
 *  Accessible by: always
 *  Reset by: IOI reset (srst_n)
 *  Summary of different bits of RSL interrupts.
 * 
$SATA_UCTL_INTSTAT   Address=(0x118006C000030)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:3>  NS         RAZ     NS         NS         Reserved.                                         
 <2>     XM_BAD_DMA R/W1C/H 0x0        0x0        Detected bad DMA access from UAHC to IOI. Error information is logged in
                                                  SATA_UCTL_SHIM_CFG[XM_BAD_DMA_*]. Received a DMA request from UAHC that violates the
                                                  assumptions made by the AXI-to-IOI shim. Such scenarios include: illegal length/size
                                                  combinations and address out-of-bounds.
                                                  For more information on exact failures, see description in
                                                  SATA_UCTL_SHIM_CFG[XM_BAD_DMA_TYPE].
                                                  The hardware does not translate the request correctly and results may violate IOI
                                                  protocols.
                                                  Throws SATA_UCTL_INTSN_E::SATA_UCTL_INTSTAT_XM_BAD_DMA.
 <1>     XS_NCB_OOB R/W1C/H 0x0        0x0        Detected out-of-bound register access to UAHC over IOI. The UAHC defines 1MB of register
                                                  space, starting at offset 0x0. Any accesses outside of this register space cause this bit
                                                  to be set to 1. Error information is logged in SATA_UCTL_SHIM_CFG[XS_NCB_OOB_*].
                                                  Throws SATA_UCTL_INTSN_E::SATA_UCTL_INTSTAT_XS_NCB_OOB.
 <0>     NS         RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UCTL_SHIM_CFG = UCTL Shim Configuration Register
 * 
 *  Accessible by: only when A_CLKDIV_EN
 *  Reset by: IOI reset (srst_n) or SATA_UCTL_CTL[SATA_UCTL_RST]
 *  This register allows configuration of various shim (UCTL) features.
 *  Fields XS_NCB_OOB_* are captured when there are no outstanding OOB errors indicated in INTSTAT
 *  and a new OOB error arrives.
 *  Fields XS_BAD_DMA_* are captured when there are no outstanding DMA errors indicated in INTSTAT
 *  and a new DMA error arrives.
 * 
$SATA_UCTL_SHIM_CFG   Address=(0x118006C0000E8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field           Field   Reset      Typical    Field                                             
 Pos     Name            Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    XS_NCB_OOB_WRN  RO/H    NS         NS         Read/write error log for out-of-bound UAHC register access.
                                                       0 = read, 1 = write
 <62:57> NS              RAZ     NS         NS         Reserved.                                         
 <56:48> XS_NCB_OOB_OSRC RO/H    NS         NS         SRCID error log for out-of-bound UAHC register access. The IOI outbound SRCID for the OOB
                                                       error.
 <47>    XM_BAD_DMA_WRN  RO/H    NS         NS         Read/write error log for bad DMA access from UAHC.
                                                       0 = read error log, 1 = write error log
 <46:44> NS              RAZ     NS         NS         Reserved.                                         
 <43:40> XM_BAD_DMA_TYPE RO/H    NS         NS         ErrType error log for bad DMA access from UAHC. Encodes the type of error encountered
                                                       (error largest encoded value has priority). See SATA_UCTL_XM_BAD_DMA_TYPE_E.
 <39:13> NS              RAZ     NS         NS         Reserved.                                         
 <12>    DMA_READ_CMD    R/W     0x1        0x1        Selects the IOI read command used by DMA accesses. See SATA_UCTL_DMA_READ_CMD_E.
 <11:10> NS              RAZ     NS         NS         Reserved.                                         
 <9:8>   DMA_ENDIAN_MODE R/W     0x1        0x1        Selects the endian format for DMA accesses to the L2C. See SATA_UCTL_ENDIAN_MODE_E.
 <7:2>   NS              RAZ     NS         NS         Reserved.                                         
 <1:0>   CSR_ENDIAN_MODE R/W     0x1        0x1        Selects the endian format for IOI CSR accesses to the UAHC. Note that when UAHC CSRs are
                                                       accessed via RSL, they are returned as big-endian. See SATA_UCTL_ENDIAN_MODE_E.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UCTL_SPARE1 = UCTL Spare Register 1
 * 
 *  Accessible by: only when A_CLKDIV_EN
 *  Reset by: IOI reset (srst_n) or SATA_UCTL_CTL[SATA_UCTL_RST]
 *  This register is spare.
 * 
$SATA_UCTL_SPARE1   Address=(0x118006C0000F8)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  SPARE R/W     0x0        NS         Spare.                                            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_GBL_CAP = AHCI HBA Capabilities Register
 * 
 *  See AHCI specification v1.3 section 3.1
 * 
$SATA_UAHC_GBL_CAP   Address=(0x16C0000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31>    S64A  RO      0x1        0x1        Supports 64-bit addressing.                       
 <30>    SNCQ  RO      0x1        0x1        Supports native command queuing.                  
 <29>    SSNTF RO      0x1        0x1        Supports SNotification register.                  
 <28>    SMPS  R/W     NS         NS         Supports mechanical presence switch.              
 <27>    SSS   R/W     NS         NS         Supports staggered spin-up.                       
 <26>    SALP  RO      0x1        0x1        Supports agressive link power management.         
 <25>    SAL   RO      0x1        0x1        Supports activity LED.                            
 <24>    SCLO  RO      0x1        0x1        Supports command list override.                   
 <23:20> ISS   RO      0x3        0x3        Interface speed support.                          
 <19>    SNZO  RO      0x0        0x0        Supports non-zero DMA offsets.                    
 <18>    SAM   RO      0x1        0x1        Supports AHCI mode only.                          
 <17>    SPM   RO      0x1        0x1        Supports port multiplier.                         
 <16>    FBSS  RO      0x1        0x1        Supports FIS-based switching.                     
 <15>    PMD   RO      0x1        0x1        PIO multiple DRQ block.                           
 <14>    SSC   RO      0x1        0x1        Slumber state capable.                            
 <13>    PSC   RO      0x1        0x1        Partial state capable.                            
 <12:8>  NCS   RO      0x1f       0x1f       Number of command slots.                          
 <7>     CCCS  RO      0x1        0x1        Command completion coalescing support.            
 <6>     EMS   RO      0x0        0x0        Enclosure management support.                     
 <5>     SXS   RO      NS         NS         Supports external SATA.                           
 <4:0>   NP    RO      0x1        0x1        Number of ports. 0x1 = 2 ports.                   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_GBL_GHC = AHCI Global HBA Control Register
 * 
 *  See AHCI specification v1.3 section 3.1
 * 
$SATA_UAHC_GBL_GHC   Address=(0x16C0000000004)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31>    AE    RO      0x1        0x1        AHCI enable.                                      
 <30:2>  NS    RAZ     NS         NS         Reserved.                                         
 <1>     IE    R/W     0x0        NS         Interrupt enable.                                 
 <0>     HR    R/W1/H  0x0        NS         HBA reset. Writing a '1' resets the UAHC. HW will clear this bit once
                                             reset is complete.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_GBL_IS = AHCI Interrupt Status Register
 * 
 *  See AHCI specification v1.3 section 3.1
 * 
$SATA_UAHC_GBL_IS   Address=(0x16C0000000008)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:3>  NS    RAZ     NS         NS         Reserved.                                         
 <2:0>   IPS   R/W1C/H 0x0        NS         Interrupt pending status.                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_GBL_PI = AHCI Ports Implemented Register
 * 
 *  See AHCI specification v1.3 section 3.1
 * 
$SATA_UAHC_GBL_PI   Address=(0x16C000000000C)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:2>  NS    RAZ     NS         NS         Reserved.                                         
 <1:0>   PI    R/W     0x0        NS         Ports implemented. This field is one-time writable, then becomes
                                             read-only.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_GBL_VS = AHCI Version Register
 * 
 *  See AHCI specification v1.3 section 3.1
 * 
$SATA_UAHC_GBL_VS   Address=(0x16C0000000010)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> MJR RO      0x1        0x1        Major version number.                             
 <15:0>  MNR RO      0x300      0x300      Minor version number. No DEVSLP support.          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_GBL_CCC_CTL = AHCI CCC Control Register
 * 
 *  See AHCI specification v1.3 section 3.1
 * 
$SATA_UAHC_GBL_CCC_CTL   Address=(0x16C0000000014)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> TV    R/W     0x1        0x0        Time-out value.  Writable only when SATA_UAHC_GBL_CCC_CTL[EN] = 0.
 <15:8>  CC    R/W     0x1        NS         Command completions.  Writable only when SATA_UAHC_GBL_CCC_CTL[EN] = 0.
 <7:3>   INTR  RO      0x2        0x2        Specifies the port interrupt used by the CCC feature.
 <2:1>   NS    RAZ     NS         NS         Reserved.                                         
 <0>     EN    R/W     0x0        NS         CCC enable.                                       
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_GBL_CCC_PORTS = AHCI CCC Ports Register
 * 
 *  See AHCI specification v1.3 section 3.1
 * 
$SATA_UAHC_GBL_CCC_PORTS   Address=(0x16C0000000018)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:2>  NS    RAZ     NS         NS         Reserved.                                         
 <1:0>   PRT   R/W     0x0        0x3        Per port CCC enable.                              
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_GBL_CAP2 = AHCI HBA Capabilities Extended Register
 * 
 *  See AHCI specification v1.3 section 3.1
 * 
$SATA_UAHC_GBL_CAP2   Address=(0x16C0000000024)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:6>  NS    RAZ     NS         NS         Reserved.                                         
 <5>     DESO  RO      0x0        0x0        Device sleep entrance from slumber only.          
 <4>     SADM  RO      0x0        0x0        Supports aggressive device sleep management.      
 <3>     SDS   RO      0x0        0x0        Supports device sleep.                            
 <2>     APST  RO      0x1        0x1        Automatic partial to slumber transitions.         
 <1>     NVMP  RO      0x0        0x0        NVMHCI present.                                   
 <0>     BOH   RO      0x0        0x0        Supports BIOS/OS handoff.                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_GBL_BISTAFR = UAHC BIST Activate FIS Register
 * 
 *  INTERNAL: See DWC_ahsata databook v4.10a
 *  This register is shared between SATA ports.  Before accessing this
 *  register, first select the required port by writing the port number
 *  to the SATA_UAHC_GBL_TESTR[PSEL] field.
 *  This register contains the pattern definition (bits 23:16 of the
 *  first DWORD) and the data pattern (bits 7:0 of the second DWORD)
 *  fields of the received BIST activate FIS.
 * 
$SATA_UAHC_GBL_BISTAFR   Address=(0x16C00000000A0)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:8>  NCP   RO      0x0        NS         Bits 7:0 of the 2nd DWORD of BIST activate FIS.   
                                             0xF1: low transition density pattern (LTDP)
                                             0xB5: high transition density pattern (HTDP)
                                             0xAB: low frequency spectral component pattern (LFSCP)
                                             0x7F: simultaneous switching outputs pattern (SSOP)
                                             0x78: mid frequency test pattern (MFTP)
                                             0x4A: high frequency test pattern (HFTP)
                                             0x7E: low frequency test pattern (LFTP)
                                             Else: lone bit pattern (LBP)
 <7:0>   PD    RO      0x0        NS         Bits 23:16 of the 1st DWORD of the BIST activate FIS.
                                             Only the following values are supported:
                                             0x10: Far-end retimed
                                             0xC0: Far-end transmit only
                                             0xE0: Far-end transmit only with scrambler bypassed
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_GBL_BISTCR = UAHC BIST Control Register
 * 
 *  INTERNAL: See DWC_ahsata databook v4.10a
 *  This register is shared between SATA ports.  Before accessing this
 *  register, first select the required port by writing the port number
 *  to the SATA_UAHC_GBL_TESTR[PSEL] field.
 * 
$SATA_UAHC_GBL_BISTCR   Address=(0x16C00000000A4)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field          Field   Reset      Typical    Field                                             
 Pos     Name           Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:26> NS             RAZ     NS         NS         Reserved.                                         
 <25>    OLD_PHY_READY  RO      0x0        0x0        Old phy_ready.                                    
 <24>    LATE_PHY_READY RO      0x0        0x0        Late phy_ready.                                   
 <23:21> NS             RAZ     NS         NS         Reserved.                                         
 <20>    FERLIB         WO      0x0        NS         Far-end retimed loopback.                         
 <19>    NS             RAZ     NS         NS         Reserved.                                         
 <18>    TXO            WO      0x0        NS         Transmit only.                                    
 <17>    CNTCLR         WO      0x0        NS         Counter clear.                                    
 <16>    NEALB          WO      0x0        NS         Near-end analog loopback.                         
 <15>    LLB            R/W     0x0        0x0        Lab loopback mode.                                
 <14>    NS             RAZ     NS         NS         Reserved.                                         
 <13>    ERRLOSSEN      R/W     0x1        0x1        Error loss detect enable.                         
 <12>    SDFE           R/W     0x1        0x1        Signal detect feature enable.                     
 <11>    NS             RAZ     NS         NS         Reserved.                                         
 <10:8>  LLC            R/W     0x7        0x0        Link layer control.                               
                                                      Bit 10: RPD - repeat primitive drop enable
                                                      Bit  9: DESCRAM - descrambler enable
                                                      Bit  8: SCRAM - scrambler enable
 <7>     NS             RAZ     NS         NS         Reserved.                                         
 <6>     ERREN          R/W     0x0        NS         Error enable.                                     
 <5>     FLIP           R/W     0x0        0x0        Flip disparity.                                   
 <4>     PV             R/W     0x0        NS         Pattern version.                                  
 <3:0>   PATTERN        RO      0x0        NS         SATA compliant pattern selection.                 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_GBL_BISTFCTR = UAHC BIST FIS Count Register
 * 
 *  INTERNAL: See DWC_ahsata databook v4.10a
 *  This register is shared between SATA ports.  Before accessing this
 *  register, first select the required port by writing the port number
 *  to the SATA_UAHC_GBL_TESTR[PSEL] field.
 * 
$SATA_UAHC_GBL_BISTFCTR   Address=(0x16C00000000A8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  COUNT RO      0x0        NS         Received BIST FIS count.                          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_GBL_BISTSR = UAHC BIST Status Register
 * 
 *  INTERNAL: See DWC_ahsata databook v4.10a
 * 
$SATA_UAHC_GBL_BISTSR   Address=(0x16C00000000AC)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:24> NS      RAZ     NS         NS         Reserved.                                         
 <23:16> BRSTERR RO      NS         NS         Burst error.                                      
 <15:0>  FRAMERR RO      NS         NS         Frame error.                                      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_GBL_BISTDECR = UAHC BIST DWORD Error Count Register
 * 
 *  INTERNAL: See DWC_ahsata databook v4.10a
 *  This register is shared between SATA ports.  Before accessing this
 *  register, first select the required port by writing the port number
 *  to the SATA_UAHC_GBL_TESTR[PSEL] field.
 * 
$SATA_UAHC_GBL_BISTDECR   Address=(0x16C00000000B0)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  DWERR RO      0x0        0x0        DWORD error count.                                
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_GBL_OOBR = UAHC OOB Register
 * 
 *  INTERNAL: See DWC_ahsata databook v4.10a
 *  This register is shared between SATA ports.  Before accessing this
 *  register, first select the required port by writing the port number
 *  to the SATA_UAHC_GBL_TESTR[PSEL] field.
 * 
$SATA_UAHC_GBL_OOBR   Address=(0x16C00000000BC)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31>    WE    R/W/H   0x0        0x0        Write enable.                                     
 <30:24> CWMIN R/W/H   0x7        NS         COMWAKE minimum value. Writable only if WE is set.
 <23:16> CWMAX R/W/H   0xe        NS         COMWAKE maximum value. Writable only if WE is set.
 <15:8>  CIMIN R/W/H   0x18       NS         COMINIT minimum value. Writable only if WE is set.
 <7:0>   CIMAX R/W/H   0x2b       NS         COMINIT maximum value. Writable only if WE is set.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_GBL_TIMER1MS = UAHC Timer 1ms Register
 * 
 *  INTERNAL: See DWC_ahsata databook v4.10a
 * 
$SATA_UAHC_GBL_TIMER1MS   Address=(0x16C00000000E0)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:20> NS    RAZ     NS         NS         Reserved.                                         
 <19:0>  TIMV  R/W     NS         NS         1ms timer value.  Writable only when SATA_UAHC_GBL_CCC_CTL[EN] is NOT set.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_GBL_GPARAM1R = UAHC Global Parameter1 Register
 * 
 *  INTERNAL: See DWC_ahsata databook v4.10a
 * 
$SATA_UAHC_GBL_GPARAM1R   Address=(0x16C00000000E8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31>    ALIGN_M    RO      0x0        0x0        RX data alignment mode (ALIGN_MODE).              
 <30>    RX_BUFFER  RO      0x1        0x1        RX data buffer mode (RX_BUFFER_MODE).             
 <29:28> PHY_DATA   RO      0x2        0x2        PHY data width (PHY_DATA_WIDTH).                  
 <27>    PHY_RST    RO      0x1        0x1        PHY reset mode (PHY_RST_MODE).                    
 <26:21> PHY_CTRL   RO      0x20       0x20       PHY control width (PHY_CTRL_W).                   
 <20:15> PHY_STAT   RO      0x20       0x20       PHY status width (PHY_STAT_W).                    
 <14>    LATCH_M    RO      0x0        0x0        Latch mode (LATCH_MODE).                          
 <13:11> PHY_TYPE   RO      0x2        0x2        PHY interface type (PHY_INTERFACE_TYPE).          
 <10>    RETURN_ERR RO      0x1        0x1        AMBA error response (RETURN_ERR_RESP).            
 <9:8>   AHB_ENDIAN RO      0x0        0x0        AHB bus endianness (AHB_ENDIANNESS).              
 <7>     S_HADDR    RO      0x0        0x0        AMBA slave address bus width (S_HADDR_WIDTH).     
 <6>     M_HADDR    RO      0x1        0x1        AMBA master address bus width (M_HADDR_WIDTH).    
 <5:3>   S_HDATA    RO      0x0        0x0        AMBA slave data width (S_HDATA_WIDTH).            
 <2:0>   M_HDATA    RO      0x1        0x1        AMBA master data width (M_HDATA_WIDTH).           
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_GBL_GPARAM2R = UAHC Global Parameter2 Register
 * 
 *  INTERNAL: See DWC_ahsata databook v4.10a
 * 
$SATA_UAHC_GBL_GPARAM2R   Address=(0x16C00000000EC)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:20> NS          RAZ     NS         NS         Reserved.                                         
 <19>    BIST_M      RO      0x0        0x0        BIST loopback checking depth (BIST_MODE).         
 <18>    FBS_MEM_S   RO      0x0        0x0        Context RAM memory location (FBS_MEM_S).          
 <17:16> FBS_PMPN    RO      0x3        0x3        Maximum number of port multiplier ports (FBS_PMPN_MAX).
 <15>    FBS_SUPPORT RO      0x1        0x1        FIS-based switching support (FBS_SUPPORT).        
 <14>    DEV_CP      RO      0x1        0x1        Cold presence detect (DEV_CP_DET).                
 <13>    DEV_MP      RO      0x1        0x1        Mechanical presence switch (DEV_MP_SWITCH).       
 <12>    ENCODE_M    RO      0x1        0x1        8b/10b encoding/decoding (ENCODE_MODE).           
 <11>    RXOOB_CLK_M RO      0x1        0x1        RX OOB clock mode (RXOOB_CLK_MODE).               
 <10>    RX_OOB_M    RO      0x1        0x1        RX OOB mode (RX_OOB_MODE).                        
 <9>     TX_OOB_M    RO      0x1        0x1        TX OOB mode (TX_OOB_MODE).                        
 <8:0>   RXOOB_CLK   RO      0x64       0x64       RX OOB clock frequency (RXOOB_CLK).               
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_GBL_PPARAMR = UAHC Port Parameter Register
 * 
 *  Port is selected by the SATA_UAHC_GBL_TESTR[PSEL] field.
 *  INTERNAL: See DWC_ahsata databook v4.10a
 * 
$SATA_UAHC_GBL_PPARAMR   Address=(0x16C00000000F0)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field        Field   Reset      Typical    Field                                             
 Pos     Name         Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:12> NS           RAZ     NS         NS         Reserved.                                         
 <11>    TX_MEM_M     RO      0x1        0x1        TX FIFO memory read port type (P#_TX_MEM_MODE).   
 <10>    TX_MEM_S     RO      0x0        0x0        TX FIFO memory type (P#_TX_MEM_SELECT).           
 <9>     RX_MEM_M     RO      0x1        0x1        RX FIFO memory read port type (P#_RX_MEM_MODE).   
 <8>     RX_MEM_S     RO      0x0        0x0        RX FIFO memory type (P#_RX_MEM_SELECT).           
 <7:4>   TXFIFO_DEPTH RO      0x7        0x7        TX FIFO depth in FIFO words.                      
 <3:0>   RXFIFO_DEPTH RO      0x7        0x7        RX FIFO depth in FIFO words.                      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_GBL_TESTR = UAHC Test Register
 * 
 *  INTERNAL: See DWC_ahsata databook v4.10a
 * 
$SATA_UAHC_GBL_TESTR   Address=(0x16C00000000F4)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:19> NS      RAZ     NS         NS         Reserved.                                         
 <18:16> PSEL    R/W     0x0        NS         Port select.                                      
 <15:1>  NS      RAZ     NS         NS         Reserved.                                         
 <0>     TEST_IF R/W     0x0        0x0        Test interface.                                   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_GBL_VERSIONR = UAHC Version Register
 * 
 *  INTERNAL: See DWC_ahsata databook v4.10a
 * 
$SATA_UAHC_GBL_VERSIONR   Address=(0x16C00000000F8)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  VER RO      0x343130c0 0x343130c0 SATA IP version number.                           
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_GBL_IDR = UAHC ID Register
 * 
 *  INTERNAL: See DWC_ahsata databook v4.10a
 * 
$SATA_UAHC_GBL_IDR   Address=(0x16C00000000FC)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  ID RO      0x0        0x0        Core ID.                                          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_P_CLB = UAHC Command List Base Address Register
 * 
 *  INTERNAL: See DWC_ahsata databook v4.10a
 * 
$SATA_UAHC_P(0..1)_CLB   Address=(0x16C0000000100+a*0x80)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:10> CLB   R/W     0x0        NS         Command list base address.                        
 <9:0>   NS    RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_P_FB = UAHC FIS Base Address Register
 * 
 *  INTERNAL: See DWC_ahsata databook v4.10a
 * 
$SATA_UAHC_P(0..1)_FB   Address=(0x16C0000000108+a*0x80)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  FB    R/W     0x0        NS         FIS base address.                                 
 <7:0>   NS    RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_P_IS = UAHC Interrupt Status Register
 * 
 *  INTERNAL: See DWC_ahsata databook v4.10a
 * 
$SATA_UAHC_P(0..1)_IS   Address=(0x16C0000000110+a*0x80)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31>    CPDS  R/W1C/H 0x0        NS         Cold port detect status.                          
 <30>    TFES  R/W1C/H 0x0        NS         Task file error status.                           
 <29>    HBFS  R/W1C/H 0x0        NS         Host bus fatal error status.                      
 <28>    HBDS  R/W1C/H 0x0        NS         Host bus data error status.                       
 <27>    IFS   R/W1C/H 0x0        NS         Interface fatal error status.                     
 <26>    INFS  R/W1C/H 0x0        NS         Interfave non-fatal error status.                 
 <25>    NS    RAZ     NS         NS         Reserved.                                         
 <24>    OFS   R/W1C/H 0x0        NS         Overflow status.                                  
 <23>    IMPS  R/W1C/H 0x0        NS         Incorrect port multiplier status.                 
 <22>    PRCS  RO/H    0x0        NS         PHY ready change status.                          
 <21:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7>     DMPS  R/W1C/H 0x0        NS         Device mechanical presence status.                
 <6>     PCS   RO/H    0x0        NS         Port connect change status.                       
 <5>     DPS   R/W1C/H 0x0        NS         Descriptor processed.                             
 <4>     UFS   RO      0x0        NS         Unknown FIS interrupt.                            
 <3>     SDBS  R/W1C/H 0x0        NS         Set device bits interrupt.                        
 <2>     DSS   R/W1C/H 0x0        NS         DMA setup FIS interrupt.                          
 <1>     PSS   R/W1C/H 0x0        NS         PIO setup FIS interrupt.                          
 <0>     DHRS  R/W1C/H 0x0        NS         Device to host register FIS interrupt.            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_P_IE = UAHC Interrupt Enable Register
 * 
 *  INTERNAL: See DWC_ahsata databook v4.10a
 * 
$SATA_UAHC_P(0..1)_IE   Address=(0x16C0000000114+a*0x80)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31>    CPDE  R/W     0x0        NS         Cold port detect enable.                          
 <30>    TFEE  R/W     0x0        NS         Task file error enable.                           
 <29>    HBFE  R/W     0x0        NS         Host bus fatal error enable.                      
 <28>    HBDE  R/W     0x0        NS         Host bus data error enable.                       
 <27>    IFE   R/W     0x0        NS         Interface fatal error enable.                     
 <26>    INFE  R/W     0x0        NS         Interfave non-fatal error enable.                 
 <25>    NS    RAZ     NS         NS         Reserved.                                         
 <24>    OFE   R/W     0x0        NS         Overflow enable.                                  
 <23>    IMPE  R/W     0x0        NS         Incorrect port multiplier enable.                 
 <22>    PRCE  R/W     0x0        NS         PHY ready change enable.                          
 <21:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7>     DMPE  R/W     0x0        NS         Device mechanical presence enable.                
 <6>     PCE   R/W     0x0        NS         Port connect change enable.                       
 <5>     DPE   R/W     0x0        NS         Descriptor processed enable.                      
 <4>     UFE   R/W     0x0        NS         Unknown FIS interrupt enable.                     
 <3>     SDBE  R/W     0x0        NS         Set device bits interrupt enable.                 
 <2>     DSE   R/W     0x0        NS         DMA setup FIS interrupt enable.                   
 <1>     PSE   R/W     0x0        NS         PIO setup FIS interrupt enable.                   
 <0>     DHRE  R/W     0x0        NS         Device to host register FIS interrupt enable.     
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_P_CMD = UAHC Command Register
 * 
 *  INTERNAL: See DWC_ahsata databook v4.10a
 * 
$SATA_UAHC_P(0..1)_CMD   Address=(0x16C0000000118+a*0x80)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:28> ICC   R/W     0x0        NS         Interface communication control.                  
 <27>    ASP   R/W     0x0        NS         Aggressive slumber/partial.                       
 <26>    ALPE  R/W     0x0        NS         Aggressive link power management enable.          
 <25>    DLAE  R/W     0x0        NS         Drive LED on ATAPI enable.                        
 <24>    ATAPI R/W     0x0        NS         Device is ATAPI.                                  
 <23>    APSTE R/W     0x0        NS         Automatic partial to slumber transitions enable.  
 <22>    FBSCP R/W     0x0        NS         FIS-based switching capable port. Write-once.     
 <21>    ESP   R/W     0x0        NS         External SATA port. Write-once.                   
 <20>    CPD   R/W     0x0        NS         Cold presence detection. Write-once.              
 <19>    MPSP  R/W     0x0        NS         Mechanical presence switch attached to port. Write-once.
 <18>    HPCP  R/W     NS         NS         Hot plug capable support. Write-once.             
 <17>    PMA   R/W     0x0        NS         Port multiplier attached.                         
 <16>    CPS   RO      0x0        NS         Cold presence state.                              
 <15>    CR    RO      0x0        NS         Command list running.                             
 <14>    FR    RO/H    0x0        NS         FIS receive running.                              
 <13>    MPSS  RO      NS         NS         Mechanical presence switch state.                 
 <12:8>  CCS   RO      0x0        NS         Current command slot.                             
 <7:5>   NS    RAZ     NS         NS         Reserved.                                         
 <4>     FRE   R/W     0x0        NS         FIS receive enable.                               
 <3>     CLO   WO      0x0        NS         Command list override.                            
 <2>     POD   R/W     0x0        NS         Power on device. R/W only if CPD=1, else read only.
 <1>     SUD   R/W     0x0        NS         Spin-up device. R/W only if SATA_UAHC_GBL_CAP[SSS]=1, else read only.
                                             Setting this bit triggers a COMRESET initialization sequence.
 <0>     ST    R/W     0x0        NS         Start.                                            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_P_TFD = UAHC Task File Data Register
 * 
 *  INTERNAL: See DWC_ahsata databook v4.10a
 * 
$SATA_UAHC_P(0..1)_TFD   Address=(0x16C0000000120+a*0x80)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:8>  TFERR RO      0x0        NS         Copy of task file error register.                 
 <7:0>   STS   RO/H    0x7f       NS         Copy of task file status register.                
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_P_SIG = UAHC Signature Register
 * 
 *  INTERNAL: See DWC_ahsata databook v4.10a
 * 
$SATA_UAHC_P(0..1)_SIG   Address=(0x16C0000000124+a*0x80)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  SIG RO/H    0xffffffff NS         Signature.                                        
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_P_SSTS = UAHC SATA Status Register
 * 
 *  INTERNAL: See DWC_ahsata databook v4.10a
 * 
$SATA_UAHC_P(0..1)_SSTS   Address=(0x16C0000000128+a*0x80)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:12> NS    RAZ     NS         NS         Reserved.                                         
 <11:8>  IPM   RO/H    0x0        NS         Interface power management.                       
 <7:4>   SPD   RO/H    0x0        NS         Current interface speed.                          
 <3:0>   DET   RO/H    0x0        NS         Device detection.                                 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_P_SCTL = UAHC SATA Control Register
 * 
 *  INTERNAL: See DWC_ahsata databook v4.10a
 * 
$SATA_UAHC_P(0..1)_SCTL   Address=(0x16C000000012C+a*0x80)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:10> NS    RAZ     NS         NS         Reserved.                                         
 <9:8>   IPM   R/W     0x0        NS         Interface power management transitions allowed.   
 <7:6>   NS    RAZ     NS         NS         Reserved.                                         
 <5:4>   SPD   R/W     0x0        NS         Speed allowed.                                    
 <3>     NS    RAZ     NS         NS         Reserved.                                         
 <2:0>   DET   R/W     0x0        NS         Device detection initialization.                  
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_P_SERR = UAHC SATA Error Register
 * 
 *  INTERNAL: See DWC_ahsata databook v4.10a
 * 
$SATA_UAHC_P(0..1)_SERR   Address=(0x16C0000000130+a*0x80)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:27> NS     RAZ     0x0        NS         Reserved.                                         
 <26>    DIAG_X R/W1C/H 0x0        NS         Exchanged.                                        
 <25>    DIAG_F R/W1C/H 0x0        NS         Unknown FIS type.                                 
 <24>    DIAG_T R/W1C/H 0x0        NS         Transport state transition error.                 
 <23>    DIAG_S R/W1C/H 0x0        NS         Link sequence error.                              
 <22>    DIAG_H R/W1C/H 0x0        NS         Handshake error.                                  
 <21>    DIAG_C R/W1C/H 0x0        NS         CRC error.                                        
 <20>    DIAG_D R/W1C/H 0x0        NS         Disparity error.                                  
 <19>    DIAG_B R/W1C/H 0x0        NS         10B to 8B decode error.                           
 <18>    DIAG_W R/W1C/H 0x0        NS         COMWAKE detected.                                 
 <17>    DIAG_I R/W1C/H 0x0        NS         PHY internal error.                               
 <16>    DIAG_N R/W1C/H 0x0        NS         PHY ready change.                                 
 <15:12> NS     RAZ     NS         NS         Reserved.                                         
 <11>    ERR_E  R/W1C/H 0x0        NS         Internal error.                                   
 <10>    ERR_P  R/W1C/H 0x0        NS         Protocol error.                                   
 <9>     ERR_C  R/W1C/H 0x0        NS         Non-recovered persistent communication error.     
 <8>     ERR_T  R/W1C/H 0x0        NS         Non-recovered transient data integrity error.     
 <7:2>   NS     RAZ     NS         NS         Reserved.                                         
 <1>     ERR_M  R/W1C/H 0x0        NS         Recovered communication error.                    
 <0>     ERR_I  R/W1C/H 0x0        NS         Recovered data integrity.                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_P_SACT = UAHC SATA Active Register
 * 
 *  INTERNAL: See DWC_ahsata databook v4.10a
 * 
$SATA_UAHC_P(0..1)_SACT   Address=(0x16C0000000134+a*0x80)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  DS R/W1S/H 0x0        NS         Device status.                                    
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_P_CI = UAHC Command Issue Register
 * 
 *  INTERNAL: See DWC_ahsata databook v4.10a
 * 
$SATA_UAHC_P(0..1)_CI   Address=(0x16C0000000138+a*0x80)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  CI R/W1S/H 0x0        NS         Command issued.                                   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_P_SNTF = UAHC SATA Notification Register
 * 
 *  INTERNAL: See DWC_ahsata databook v4.10a
 * 
$SATA_UAHC_P(0..1)_SNTF   Address=(0x16C000000013C+a*0x80)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:0>  PMN   R/W1C/H 0x0        NS         PM notify.                                        
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_P_FBS = UAHC FIS-Based Switching Control Register
 * 
 *  INTERNAL: See DWC_ahsata databook v4.10a
 *  Attribute: -exempt_w1c_w=True.
 * 
$SATA_UAHC_P(0..1)_FBS   Address=(0x16C0000000140+a*0x80)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:20> NS    RAZ     NS         NS         Reserved.                                         
 <19:16> DWE   RO      0x0        0x0        Device with error.                                
 <15:12> ADO   RO      0xf        0xf        Active device optimization.                       
 <11:8>  DEV   R/W     0x0        NS         Device to issue.                                  
 <7:3>   NS    RAZ     NS         NS         Reserved.                                         
 <2>     SDE   RO      0x0        0x0        Single device error.                              
 <1>     DEC   R/W1C/H 0x0        0x0        Device error clear.                               
 <0>     EN    R/W     0x0        NS         Enable.                                           
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_P_DMACR = UAHC DMA Control Register
 * 
 *  INTERNAL: See DWC_ahsata databook v4.10a
 * 
$SATA_UAHC_P(0..1)_DMACR   Address=(0x16C0000000170+a*0x80)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:4>   RXTS  R/W     NS         NS         Receive transaction size. This field is R/W when SATA_UAHC_PX_CMD[ST]=0
                                             and read only when SATA_UAHC_PX_CMD[ST]=1.
 <3:0>   TXTS  R/W     NS         NS         Transmit transaction size. This field is R/W when SATA_UAHC_PX_CMD[ST]=0
                                             and read only when SATA_UAHC_PX_CMD[ST]=1.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_P_PHYCR = UAHC PHY Control Register
 * 
 *  INTERNAL: See DWC_ahsata databook v4.10a
 * 
$SATA_UAHC_P(0..1)_PHYCR   Address=(0x16C0000000178+a*0x80)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  CTRL R/W     0x0        0x0        Port PHY control.                                 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SATA_UAHC_P_PHYSR = UAHC PHY Status Register
 * 
 *  INTERNAL: See DWC_ahsata databook v4.10a
 * 
$SATA_UAHC_P(0..1)_PHYSR   Address=(0x16C000000017C+a*0x80)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  STAT RO      0x0        0x0        Port PHY status.                                  
-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the sli.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

Add Lock Register (Set on Read, Clear on write), SW uses to control access to BAR0 space.

Total Address is 16Kb; 0x0000 - 0x3fff, 0x000 - 0x7fe(Reg, every other 8B)

General  5kb; 0x0000 - 0x13ff, 0x000 - 0x27e(Reg-General)
PktMem  10Kb; 0x1400 - 0x3bff, 0x280 - 0x77e(Reg-General-Packet)
Rsvd     1Kb; 0x3c00 - 0x3fff, 0x780 - 0x7fe(Reg-NCB Only Mode)

8070 - 80C0 saved for ports 2 through 7
0x80d0 free
81e0 - 82d0 Reserved for future subids
0x90F0 reserved SLI_PKT_PCIE_PORT2
91c0 reserved
91d0 reserved
91e0 reserved
0x13DA0 - 0x13DF0 reserved for ports 2 - 7
13e20 reserved
 * 
 * SLI_WIN_WR_ADDR
 * 
 *  SLI_WIN_WR_ADDR = SLI Window Write Address Register
 *  Contains the address to be writen to when a write operation is started by writing the
 *  SLI_WIN_WR_DATA register (see below).
 *  This register should NOT be used to write SLI_* registers.
 * 
$SLI_WIN_WR_ADDR   Address=(0x0)   Bus=(PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:49> NS      RAZ     NS         NS         Reserved.                                         
 <48>    IOBIT   RAZ     0x0        0x0        A 1 or 0 can be written here but this will always 
                                               read as '0'.
 <47:3>  WR_ADDR R/W     0x0        NS         The address that will be written to when the      
                                               SLI_WIN_WR_DATA register is written.
                                               [47:40] = NCB_ID
                                               [39:3]  = Address
                                               When [47:43] == SLI & [42:40] == 0 bits [39:0] are:
                                               [39:32] == x, Not Used
                                               [31:24] == RSL_ID
                                               [23:3]  == RSL Register Offset
 <2:0>   NS      RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_WIN_RD_ADDR = SLI Window Read Address Register
 * 
 *  The address to be read when the SLI_WIN_RD_DATA register is read.
 *  This register should NOT be used to read SLI_* registers.
 * 
$SLI_WIN_RD_ADDR   Address=(0x10)   Bus=(PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:51> NS      RAZ     NS         NS         Reserved.                                         
 <50:49> LD_CMD  R/W     0x3        NS         The load command sent wit hthe read.              
                                               0x3 == Load 8-bytes, 0x2 == Load 4-bytes,
                                               0x1 == Load 2-bytes, 0x0 == Load 1-bytes,
 <48>    IOBIT   R/W     0x0        0x0        A 1 or 0 can be written here but will not be used 
                                               in address generation.
 <47:0>  RD_ADDR R/W     0x0        NS         The address to be read from.                      
                                               [47:40] = NCB_ID
                                               [39:0]  = Address
                                               When [47:43] == SLI & [42:40] == 0 bits [39:0] are:
                                                    [39:32] == x, Not Used
                                                    [31:24] == RSL_ID
                                                    [23:0]  == RSL Register Offset
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_WIN_WR_DATA = SLI Window Write Data Register
 * 
 *  Contains the data to write to the address located in the SLI_WIN_WR_ADDR Register.
 *  Writing the least-significant-byte of this register will cause a write operation to take
 *  place.
 * 
$SLI_WIN_WR_DATA   Address=(0x20)   Bus=(PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  WR_DATA R/W     0x0        NS         The data to be written. Whenever the LSB of this  
                                               register is written, the Window Write will take
                                               place.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_WIN_WR_MASK = SLI Window Write Mask Register
 * 
 *  Contains the mask for the data in the SLI_WIN_WR_DATA Register.
 * 
$SLI_WIN_WR_MASK   Address=(0x30)   Bus=(PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS      RAZ     NS         NS         Reserved.                                         
 <7:0>   WR_MASK R/W     0xff       0x0        The data to be written. When a bit is '1'         
                                               the corresponding byte will be written. The values
                                               of this field must be contiguos and for 1, 2, 4, or
                                               8 byte operations and aligned to operation size.
                                               A Value of 0 will produce unpredictable results
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_WIN_RD_DATA = SLI Window Read Data Register
 * 
 *  Reading this register causes a window read operation to take place. Address read is that
 *  contained in the SLI_WIN_RD_ADDR
 *  register.
 * 
$SLI_WIN_RD_DATA   Address=(0x40)   Bus=(PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  RD_DATA RO/H    0x0        NS         The read data.                                    
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_MAC_NUMBER = SLI MAC Number
 * 
 *  When read from a MAC port it returns the MAC's port number.
 * 
$SLI_MAC_NUMBER   Address=(0x3E00)   Bus=(PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:9>  NS     RAZ     NS         NS         Reserved.                                         
 <8>     A_MODE RO/H    NS         NS         SLI in Authenticate Mode.                         
 <7:0>   NUM    RO/H    NS         NS         The mac number.                                   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_CTL_PORT
 * 
 *  Contains control for access for Port0
 *  Attribute: -exempt_natural_alignment=a.
 *  Attribute: -exempt_w1c_w=True.
 * 
$SLI_CTL_PORT(0..2)   Address=((0x11F0000010050+a*0x10), (0x50+a*0x10))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:22> NS        RAZ     NS         NS         Reserved.                                         
 <21>    INTD      RO/H    0x1        0x1        When '0' Intd wire asserted. Before mapping.      
 <20>    INTC      RO/H    0x1        0x1        When '0' Intc wire asserted. Before mapping.      
 <19>    INTB      RO/H    0x1        0x1        When '0' Intb wire asserted. Before mapping.      
 <18>    INTA      RO/H    0x1        0x1        When '0' Inta wire asserted. Before mapping.      
 <17>    DIS_PORT  R/W1C/H 0x0        0x0        When set the output to the MAC is disabled. This  
                                                 occurs when the MAC reset line transitions from
                                                 de-asserted to asserted. Writing a '1' to this
                                                 location will clear this condition when the MAC is
                                                 no longer in reset and the output to the MAC is at
                                                 the begining of a transfer.
 <16>    WAITL_COM R/W     0x0        NS         When set '1' casues the SLI to wait for a commit  
                                                 from the L2C before sending additional completions
                                                 to the L2C from a MAC.
                                                 Set this for more conservative behavior. Clear
                                                 this for more aggressive, higher-performance
                                                 behavior
 <15:14> INTD_MAP  R/W     0x3        0x3        Maps INTD to INTA(00), INTB(01), INTC(10) or      
                                                 INTD (11).
 <13:12> INTC_MAP  R/W     0x2        0x2        Maps INTC to INTA(00), INTB(01), INTC(10) or      
                                                 INTD (11).
 <11:10> INTB_MAP  R/W     0x1        0x1        Maps INTB to INTA(00), INTB(01), INTC(10) or      
                                                 INTD (11).
 <9:8>   INTA_MAP  R/W     0x0        0x0        Maps INTA to INTA(00), INTB(01), INTC(10) or      
                                                 INTD (11).
 <7>     CTLP_RO   R/W     0x0        0x1        Relaxed ordering enable for Completion TLPS.      
 <6>     NS        R/W     0x0        0x0        Reserved.                                         
 <5>     PTLP_RO   R/W     0x0        0x1        Relaxed ordering enable for Posted TLPS.          
 <4:1>   NS        R/W     0x0        0x0        Reserved.                                         
 <0>     WAIT_COM  R/W     0x0        0x0        When set '1' casues the SLI to wait for a commit  
                                                 from the L2C before sending additional stores to
                                                 the L2C from a MAC.
                                                 The SLI will request a commit on the last store
                                                 if more than one STORE operation is required on
                                                 the NCB.
                                                 Most applications will not notice a difference, so
                                                 should not set this bit. Setting the bit is more
                                                 conservative on ordering, lower performance
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_MEM_ACCESS_SUBID
 * 
 *  Contains address index and control bits for access to memory from Core PPs.
 *  Attribute: -exempt_natural_alignment=a.
 * 
$SLI_MEM_ACCESS_SUBID(12..27)   Address=((0x11F0000010020+a*0x10), (0x20+a*0x10))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:43> NS     RAZ     NS         NS         Reserved.                                         
 <42>    ZERO   R/W     0x0        0x0        Causes all byte reads to be zero length reads.    
                                              Returns to the EXEC a zero for all read data.
                                              This must be zero for sRIO ports.
 <41:39> PORT   R/W     0x0        NS         Physical MAC Port that reads/writes to            
                                              this subid are sent to. Must be <= 1, as there are
                                              only two ports present.
 <38>    NMERGE R/W     0x0        0x0        When set, no merging is allowed in this window.   
 <37:36> ESR    R/W     0x0        NS         ES<1:0> for reads to this subid.                  
                                              ES<1:0> is the endian-swap attribute for these MAC
                                              memory space reads.
 <35:34> ESW    R/W     0x0        NS         ES<1:0> for writes to this subid.                 
                                              ES<1:0> is the endian-swap attribute for these MAC
                                              memory space writes.
 <33:32> WTYPE  R/W     0x0        NS         ADDRTYPE<1:0> for writes to this subid            
                                              For PCIe:
                                              - ADDRTYPE<0> is the relaxed-order attribute
                                              - ADDRTYPE<1> is the no-snoop attribute
                                              For sRIO:
                                              - ADDRTYPE<1:0> help select an SRIO*_S2M_TYPE*
                                                entry
 <31:30> RTYPE  R/W     0x0        NS         ADDRTYPE<1:0> for reads to this subid             
                                              For PCIe:
                                              - ADDRTYPE<0> is the relaxed-order attribute
                                              - ADDRTYPE<1> is the no-snoop attribute
                                              For sRIO:
                                              - ADDRTYPE<1:0> help select an SRIO*_S2M_TYPE*
                                                entry
 <29:0>  BA     R/W     0x0        NS         Address Bits <63:34> for reads/writes that use    
                                              this subid.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_WINDOW_CTL = SLI's Window Control
 * 
 *  Access to register space on the NCB (caused by Window Reads/Writes) will wait for a period of
 *  time specified
 *  by this register before timeing out. Because a Window Access can access the RML, which has a
 *  fixed timeout of 0xFFFF
 *  core clocks, the value of this register should be set to a minimum of 0x200000 to ensure that
 *  a timeout to an RML register
 *  occurs on the RML 0xFFFF timer before the timeout for a BAR0 access from the MAC.
 * 
$SLI_WINDOW_CTL   Address=((0x11F00000102E0), (0x2E0))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  TIME  R/W     0x0        0x200000   Time to wait in core clocks for a                 
                                             BAR0 access to completeon the NCB
                                             before timing out. A value of 0 will cause no
                                             timeouts. A minimum value of 0x200000 should be
                                             used when this register is not set to 0x0.
                                             Attribute: -exempt_keyword=True.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_MEM_ACCESS_CTL = SLI's Memory Access Control
 * 
 *  Contains control for access to the MAC address space.
 * 
$SLI_MEM_ACCESS_CTL   Address=((0x11F00000102F0), (0x2F0))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:14> NS       RAZ     NS         NS         Reserved.                                         
 <13:10> MAX_WORD R/W     0x0        0x0        The maximum number of words to merge into a single
                                                write operation from the PPs to the MAC. Legal
                                                values are 1 to 16, where a '0' is treated as 16.
 <9:0>   TIMER    R/W     0x0        0x32       When the SLI starts a PP to MAC write it waits    
                                                no longer than the value of TIMER in eclks to
                                                merge additional writes from the PPs into 1
                                                large write. The values for this field is 1 to
                                                1024 where a value of '0' is treated as 1024.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_INT_SUM = SLI Interrupt Summary Register
 * 
 *  Set when an interrupt condition occurs, write '1' to clear.
 * 
$SLI_INT_SUM   Address=((0x11F0000010330), (0x330))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:61> NS        RAZ     NS         NS         Reserved.                                         
 <60>    ILL_PAD   R/W1C/H 0x0        0x0        Set when a BAR0 address R/W falls into theaddress 
                                                 range of the Packet-CSR, but for an unused
                                                 address.
 <59>    SPRT3_ERR R/W1C/H 0x0        0x0        Reserved.                                         
 <58>    SPRT2_ERR R/W1C/H 0x0        0x0        When an error response received on SLI port 2     
                                                 this bit is set.
 <57>    SPRT1_ERR R/W1C/H 0x0        0x0        When an error response received on SLI port 1     
                                                 this bit is set.
 <56>    SPRT0_ERR R/W1C/H 0x0        0x0        When an error response received on SLI port 0     
                                                 this bit is set.
 <55>    PINS_ERR  R/W1C/H 0x0        0x0        When a read error occurs on a packet instruction  
                                                 this bit is set.
 <54>    POP_ERR   R/W1C/H 0x0        0x0        When a read error occurs on a packet scatter      
                                                 pointer pair this bit is set.
 <53>    PDI_ERR   R/W1C/H 0x0        0x0        When a read error occurs on a packet data read    
                                                 this bit is set.
 <52>    PGL_ERR   R/W1C/H 0x0        0x0        When a read error occurs on a packet gather list  
                                                 read this bit is set.
 <51>    PIN_BP    R/W1C/H 0x0        0x0        Packet input count has exceeded the WMARK.        
                                                 See SLI_PKT_IN_BP
 <50>    POUT_ERR  R/W1C/H 0x0        0x0        Set when PKO sends packet data with the error bit 
                                                 set.
 <49>    PSLDBOF   R/W1C/H 0x0        0x0        Packet Scatterlist Doorbell count overflowed. Which
                                                 doorbell can be found in DPI_PINT_INFO[PSLDBOF]
 <48>    PIDBOF    R/W1C/H 0x0        0x0        Packet Instruction Doorbell count overflowed. Which
                                                 doorbell can be found in DPI_PINT_INFO[PIDBOF]
 <47:38> NS        RAZ     NS         NS         Reserved.                                         
 <37:36> DTIME     RO/H    0x0        0x0        Whenever SLI_DMAx_CNT[CNT] is not 0, the          
                                                 SLI_DMAx_TIM[TIM] timer increments every SLI
                                                 clock.
                                                 DTIME[x] is set whenever SLI_DMAx_TIM[TIM] >
                                                 SLI_DMAx_INT_LEVEL[TIME].
                                                 DTIME[x] is normally cleared by clearing
                                                 SLI_DMAx_CNT[CNT] (which also clears
                                                 SLI_DMAx_TIM[TIM]).
 <35:34> DCNT      RO/H    0x0        0x0        DCNT[x] is set whenever SLI_DMAx_CNT[CNT] >       
                                                 SLI_DMAx_INT_LEVEL[CNT].
                                                 DCNT[x] is normally cleared by decreasing
                                                 SLI_DMAx_CNT[CNT].
 <33:32> DMAFI     R/W1C/H 0x0        0x0        DMA set Forced Interrupts.                        
 <31:30> NS        RAZ     NS         NS         Reserved.                                         
 <29>    MAC2_INT  RO/H    0x0        0x0        Interrupt from MAC2.                              
                                                 See PEM2_INT_SUM (enabled by PEM2_INT_ENB_INT)
 <28>    MIO_INT2  RO/H    0x0        0x0        Interrupt from MIO for PORT 2.                    
                                                 See CIU_INT32_SUM0, CIU_INT_SUM1
                                                 (enabled by CIU_INT32_EN0, CIU_INT32_EN1)
 <27>    M3_UN_WI  R/W1C/H 0x0        0x0        Reserved.                                         
 <26>    M3_UN_B0  R/W1C/H 0x0        0x0        Reserved.                                         
 <25>    M3_UP_WI  R/W1C/H 0x0        0x0        Reserved.                                         
 <24>    M3_UP_B0  R/W1C/H 0x0        0x0        Reserved.                                         
 <23>    M2_UN_WI  R/W1C/H 0x0        0x0        Received Unsupported N-TLP for Window Register    
                                                 from MAC 0. This occurs when the window registers
                                                 are disabeld and a window register access occurs.
 <22>    M2_UN_B0  R/W1C/H 0x0        0x0        Received Unsupported N-TLP for Bar0 from MAC 0.   
                                                 This occurs when the BAR 0 address space is
                                                 disabeled.
 <21>    M2_UP_WI  R/W1C/H 0x0        0x0        Received Unsupported P-TLP for Window Register    
                                                 from MAC 0. This occurs when the window registers
                                                 are disabeld and a window register access occurs.
 <20>    M2_UP_B0  R/W1C/H 0x0        0x0        Received Unsupported P-TLP for Bar0 from MAC 0.   
                                                 This occurs when the BAR 0 address space is
                                                 disabeled.
 <19>    MAC1_INT  RO/H    0x0        0x0        Interrupt from MAC1.                              
                                                 See PEM1_INT_SUM (enabled by PEM1_INT_ENB_INT)
 <18>    MAC0_INT  RO/H    0x0        0x0        Interrupt from MAC0.                              
                                                 See PEM0_INT_SUM (enabled by PEM0_INT_ENB_INT)
 <17>    MIO_INT1  RO/H    0x0        0x0        Interrupt from MIO for PORT 1.                    
                                                 See CIU_INT33_SUM0, CIU_INT_SUM1
                                                 (enabled by CIU_INT33_EN0, CIU_INT33_EN1)
 <16>    MIO_INT0  RO/H    0x0        0x0        Interrupt from MIO for PORT 0.                    
                                                 See CIU_INT32_SUM0, CIU_INT_SUM1
                                                 (enabled by CIU_INT32_EN0, CIU_INT32_EN1)
 <15>    M1_UN_WI  R/W1C/H 0x0        0x0        Received Unsupported N-TLP for Window Register    
                                                 from MAC 1. This occurs when the window registers
                                                 are disabeld and a window register access occurs.
 <14>    M1_UN_B0  R/W1C/H 0x0        0x0        Received Unsupported N-TLP for Bar0 from MAC 1.   
                                                 This occurs when the BAR 0 address space is
                                                 disabeled.
 <13>    M1_UP_WI  R/W1C/H 0x0        0x0        Received Unsupported P-TLP for Window Register    
                                                 from MAC 1. This occurs when the window registers
                                                 are disabeld and a window register access occurs.
 <12>    M1_UP_B0  R/W1C/H 0x0        0x0        Received Unsupported P-TLP for Bar0 from MAC 1.   
                                                 This occurs when the BAR 0 address space is
                                                 disabeled.
 <11>    M0_UN_WI  R/W1C/H 0x0        0x0        Received Unsupported N-TLP for Window Register    
                                                 from MAC 0. This occurs when the window registers
                                                 are disabeld and a window register access occurs.
 <10>    M0_UN_B0  R/W1C/H 0x0        0x0        Received Unsupported N-TLP for Bar0 from MAC 0.   
                                                 This occurs when the BAR 0 address space is
                                                 disabeled.
 <9>     M0_UP_WI  R/W1C/H 0x0        0x0        Received Unsupported P-TLP for Window Register    
                                                 from MAC 0. This occurs when the window registers
                                                 are disabeld and a window register access occurs.
 <8>     M0_UP_B0  R/W1C/H 0x0        0x0        Received Unsupported P-TLP for Bar0 from MAC 0.   
                                                 This occurs when the BAR 0 address space is
                                                 disabeled.
 <7:6>   NS        R/W1C/H 0x0        0x0        Reserved.                                         
 <5>     PTIME     RO/H    0x0        0x0        Packet Timer has an interrupt. Which rings can    
                                                 be found in SLI_PKT_TIME_INT.
 <4>     PCNT      RO/H    0x0        0x0        Packet Counter has an interrupt. Which rings can  
                                                 be found in SLI_PKT_CNT_INT.
 <3>     IOB2BIG   R/W1C/H 0x0        0x0        A requested IOBDMA is to large.                   
 <2>     BAR0_TO   R/W1C/H 0x0        0x0        BAR0 R/W to a NCB device did not receive          
                                                 read-data/commit in 0xffff core clocks.
 <1>     NS        R/W1C/H 0x0        0x0        Reserved.                                         
 <0>     RML_TO    R/W1C/H 0x0        0x0        A read or write transfer did not complete         
                                                 within 0xffff core clocks.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_INT_ENB_PORT
 * 
 *  Used to allow the generation of interrupts (MSI/INTA) to the PORT X
 * 
$SLI_INT_ENB_PORT(0..2)   Address=((0x11F0000010340+a*0x10), (0x340+a*0x10))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:61> NS        R/W     0x0        0x0        Reserved.                                         
 <60>    ILL_PAD   R/W     0x0        0x0        Illegal packet csr address.                       
 <59>    SPRT3_ERR R/W     0x0        0x0        Error Response received on SLI port 3.            
 <58>    SPRT2_ERR R/W     0x0        0x0        Error Response received on SLI port 2.            
 <57>    SPRT1_ERR R/W     0x0        0x0        Error Response received on SLI port 1.            
 <56>    SPRT0_ERR R/W     0x0        0x0        Error Response received on SLI port 0.            
 <55>    PINS_ERR  R/W     0x0        0x0        Read Error during packet instruction fetch.       
 <54>    POP_ERR   R/W     0x0        0x0        Read Error during packet scatter pointer fetch.   
 <53>    PDI_ERR   R/W     0x0        0x0        Read Error during packet data fetch.              
 <52>    PGL_ERR   R/W     0x0        0x0        Read Error during gather list fetch.              
 <51>    PIN_BP    R/W     0x0        0x0        Packet Input Count exceeded WMARK.                
 <50>    POUT_ERR  R/W     0x0        0x0        Packet Out Interrupt, Error From PKO.             
 <49>    PSLDBOF   R/W     0x0        0x0        Packet Scatterlist Doorbell Count Overflow.       
 <48>    PIDBOF    R/W     0x0        0x0        Packet Instruction Doorbell Count Overflow.       
 <47:38> NS        R/W     0x0        0x0        Reserved.                                         
 <37:36> DTIME     R/W     0x0        0x0        DMA Timer Interrupts                              
 <35:34> DCNT      R/W     0x0        0x0        DMA Count Interrupts                              
 <33:32> DMAFI     R/W     0x0        0x0        DMA set Forced Interrupts                         
 <31:30> NS        R/W     0x0        0x0        Reserved.                                         
 <29>    MAC2_INT  R/W     0x0        0x1        Enables SLI_INT_SUM[29] to generate an            
                                                 interrupt to the PCIE-Port2 for MSI/inta.
                                                 SLI_INT_ENB_PORT2[MAC0_INT] sould NEVER be set.
                                                 SLI_INT_ENB_PORT2[MAC1_INT] sould NEVER be set.
 <28>    MIO_INT2  R/W     0x0        0x1        Enables SLI_INT_SUM[28] to generate an            
                                                 interrupt to the PCIE core for MSI/inta.
                                                 SLI_INT_ENB_PORT2[MIO_INT2] should NEVER be set.
 <27>    M3_UN_WI  R/W     0x0        0x0        Reserved.                                         
 <26>    M3_UN_B0  R/W     0x0        0x0        Reserved.                                         
 <25>    M3_UP_WI  R/W     0x0        0x0        Reserved.                                         
 <24>    M3_UP_B0  R/W     0x0        0x0        Reserved.                                         
 <23>    M2_UN_WI  R/W     0x0        0x1        Enables SLI_INT_SUM[23] to generate an            
                                                 interrupt to the PCIE core for MSI/inta.
 <22>    M2_UN_B0  R/W     0x0        0x1        Enables SLI_INT_SUM[22] to generate an            
                                                 interrupt to the PCIE core for MSI/inta.
 <21>    M2_UP_WI  R/W     0x0        0x1        Enables SLI_INT_SUM[21] to generate an            
                                                 interrupt to the PCIE core for MSI/inta.
 <20>    M2_UP_B0  R/W     0x0        0x1        Enables SLI_INT_SUM[20] to generate an            
                                                 interrupt to the PCIE core for MSI/inta.
 <19>    MAC1_INT  R/W     0x0        0x1        Enables SLI_INT_SUM[19] to generate an            
                                                 interrupt to the PCIE-Port1 for MSI/inta.
                                                 The valuse of this bit has NO effect on PCIE Port0.
                                                 SLI_INT_ENB_PORT0[MAC1_INT] sould NEVER be set.
 <18>    MAC0_INT  R/W     0x0        0x1        Enables SLI_INT_SUM[18] to generate an            
                                                 interrupt to the PCIE-Port0 for MSI/inta.
                                                 The valus of this bit has NO effect on PCIE Port1.
                                                 SLI_INT_ENB_PORT1[MAC0_INT] sould NEVER be set.
 <17>    MIO_INT1  R/W     0x0        0x1        Enables SLI_INT_SUM[17] to generate an            
                                                 interrupt to the PCIE core for MSI/inta.
                                                 SLI_INT_ENB_PORT0[MIO_INT1] should NEVER be set.
 <16>    MIO_INT0  R/W     0x0        0x1        Enables SLI_INT_SUM[16] to generate an            
                                                 interrupt to the PCIE core for MSI/inta.
                                                 SLI_INT_ENB_PORT1[MIO_INT0] should NEVER be set.
 <15>    M1_UN_WI  R/W     0x0        0x1        Enables SLI_INT_SUM[15] to generate an            
                                                 interrupt to the PCIE core for MSI/inta.
 <14>    M1_UN_B0  R/W     0x0        0x1        Enables SLI_INT_SUM[14] to generate an            
                                                 interrupt to the PCIE core for MSI/inta.
 <13>    M1_UP_WI  R/W     0x0        0x1        Enables SLI_INT_SUM[13] to generate an            
                                                 interrupt to the PCIE core for MSI/inta.
 <12>    M1_UP_B0  R/W     0x0        0x1        Enables SLI_INT_SUM[12] to generate an            
                                                 interrupt to the PCIE core for MSI/inta.
 <11>    M0_UN_WI  R/W     0x0        0x1        Enables SLI_INT_SUM[11] to generate an            
                                                 interrupt to the PCIE core for MSI/inta.
 <10>    M0_UN_B0  R/W     0x0        0x1        Enables SLI_INT_SUM[10] to generate an            
                                                 interrupt to the PCIE core for MSI/inta.
 <9>     M0_UP_WI  R/W     0x0        0x1        Enables SLI_INT_SUM[9] to generate an             
                                                 interrupt to the PCIE core for MSI/inta.
 <8>     M0_UP_B0  R/W     0x0        0x1        Enables SLI_INT_SUM[8] to generate an             
                                                 interrupt to the PCIE core for MSI/inta.
 <7:6>   NS        R/W/H   0x0        0x0        Reserved.                                         
 <5>     PTIME     R/W     0x0        0x1        Enables SLI_INT_SUM[5] to generate an             
                                                 interrupt to the PCIE core for MSI/inta.
 <4>     PCNT      R/W     0x0        0x1        Enables SLI_INT_SUM[4] to generate an             
                                                 interrupt to the PCIE core for MSI/inta.
 <3>     IOB2BIG   R/W     0x0        0x1        Enables SLI_INT_SUM[3] to generate an             
                                                 interrupt to the PCIE core for MSI/inta.
 <2>     BAR0_TO   R/W     0x0        0x1        Enables SLI_INT_SUM[2] to generate an             
                                                 interrupt to the PCIE core for MSI/inta.
 <1>     NS        R/W     0x0        0x1        Enables SLI_INT_SUM[1] to generate an             
                                                 interrupt to the PCIE core for MSI/inta.
 <0>     RML_TO    R/W     0x0        0x1        Enables SLI_INT_SUM[0] to generate an             
                                                 interrupt to the PCIE core for MSI/inta.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_SCRATCH_1 = SLI's Scratch 1
 * 
 *  A general purpose 64 bit register for SW use.
 *  Attribute: -dv_fc_scratch=ALL.
 * 
$SLI_SCRATCH_1   Address=((0x11F00000103C0), (0x3C0))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  DATA R/W     0x0        NS         The value in this register is totaly SW dependent.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_SCRATCH_2 = SLI's Scratch 2
 * 
 *  A general purpose 64 bit register for SW use.
 * 
$SLI_SCRATCH_2   Address=((0x11F00000103D0), (0x3D0))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  DATA R/W     0x0        NS         The value in this register is totaly SW dependent.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_DMA_INT_LEVEL
 * 
 *  SLI_DMAx_INT_LEVEL = SLI DMAx Interrupt Level
 *  Thresholds for DMA count and timer interrupts.
 * 
$SLI_DMA(0..1)_INT_LEVEL   Address=((0x11F00000103E0+a*0x10), (0x3E0+a*0x10))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> TIME R/W     0x0        NS         Whenever the SLI_DMAx_TIM[TIM] timer exceeds      
                                            this value, SLI_INT_SUM[DTIME<x>] is set.
                                            The SLI_DMAx_TIM[TIM] timer increments every SLI
                                            clock whenever SLI_DMAx_CNT[CNT]!=0, and is
                                            cleared when SLI_INT_SUM[DTIME<x>] is written with
                                            one.
                                            Attribute: -exempt_keyword=True.
 <31:0>  CNT  R/W     0x0        NS         Whenever SLI_DMAx_CNT[CNT] exceeds this value,    
                                            SLI_INT_SUM[DCNT<x>] is set.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_DMA_CNT
 * 
 *  SLI_DMAx_CNT = SLI DMA Count
 *  The DMA Count value.
 * 
$SLI_DMA(0..1)_CNT   Address=((0x11F0000010400+a*0x10), (0x400+a*0x10))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  CNT   R/W/H   0x0        NS         The DMA counter.                                  
                                             Writing this field will cause the written value
                                             to be subtracted from DMA. HW will optionally
                                             increment this field after it completes an
                                             OUTBOUND or EXTERNAL-ONLY DMA instruction. These
                                             increments may cause interrupts. Refer to
                                             SLI_DMAx_INT_LEVEL and SLI_INT_SUM[DCNT,DTIME].
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_DMA_TIM
 * 
 *  SLI_DMAx_TIM = SLI DMA Timer
 *  The DMA Timer value.
 * 
$SLI_DMA(0..1)_TIM   Address=((0x11F0000010420+a*0x10), (0x420+a*0x10))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  TIM   RO/H    0x0        NS         The DMA timer value.                              
                                             The timer will increment when SLI_DMAx_CNT[CNT]!=0
                                             and will clear when SLI_DMAx_CNT[CNT]==0
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_CTL_STATUS = SLI Control Status Register
 * 
 *  Contains control and status for SLI. Writes to this register are not ordered with writes/reads
 *  to the MAC Memory space.
 *  To ensure that a write has completed the user must read the register before making an
 *  access(i.e. MAC memory space)
 *  that requires the value of this register to be updated.
 * 
$SLI_CTL_STATUS   Address=((0x11F0000010570), (0x570))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:20> NS       RAZ     NS         NS         Reserved.                                         
 <19:14> P1_NTAGS R/W     0x20       0x20       Reserved.                                         
 <13:8>  P0_NTAGS R/W/H   0x20       0x20       Number of tags available for outbound TLPs to the 
                                                MACS. One tag is needed for each outbound TLP that
                                                requires a CPL TLP.
                                                This field should only be written as part of
                                                reset sequence, before issuing any reads, CFGs, or
                                                IO transactions from the core(s).
 <7:0>   CHIP_REV RO/H    NS         NS         The chip revision.                                
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_BIST_STATUS = SLI's BIST Status Register
 * 
 *  Results from BIST runs of SLI's memories.
 * 
$SLI_BIST_STATUS   Address=((0x11F0000010580), (0x580))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:31> NS      RAZ     NS         NS         Reserved.                                         
 <30>    N2P0_C  RO      0x0        0x0        BIST Status for N2P Port0 Cmd                     
 <29>    N2P0_O  RO      0x0        0x0        BIST Status for N2P Port0 Data                    
 <28:27> NS      RAZ     NS         NS         Reserved.                                         
 <26>    CPL_P0  RO      0x0        0x0        BIST Status for CPL Port 0                        
 <25>    CPL_P1  RO      0x0        0x0        BIST Status for CPL Port 1                        
 <24>    NS      RAZ     NS         NS         Reserved.                                         
 <23>    NS      RAZ     NS         NS         Reserved.                                         
 <22>    NS      RAZ     NS         NS         Reserved.                                         
 <21>    NS      RAZ     NS         NS         Reserved.                                         
 <20>    NS      RAZ     NS         NS         Reserved.                                         
 <19>    NS      RAZ     NS         NS         Reserved.                                         
 <18>    P2N0_C0 RO      0x0        0x0        BIST Status for P2N Port0 C0                      
 <17>    NS      RAZ     NS         NS         Reserved.                                         
 <16>    P2N0_N  RO      0x0        0x0        BIST Status for P2N Port0 N                       
 <15>    P2N0_P0 RO      0x0        0x0        BIST Status for P2N Port0 P0                      
 <14>    NS      RAZ     NS         NS         Reserved.                                         
 <13>    P2N1_C0 RO      0x0        0x0        BIST Status for P2N Port1 C0                      
 <12>    NS      RAZ     NS         NS         Reserved.                                         
 <11>    P2N1_N  RO      0x0        0x0        BIST Status for P2N Port1 N                       
 <10>    P2N1_P0 RO      0x0        0x0        BIST Status for P2N Port1 P0                      
 <9>     NS      RAZ     NS         NS         Reserved.                                         
 <8>     NS      RAZ     NS         NS         Reserved.                                         
 <7>     NS      RAZ     NS         NS         Reserved.                                         
 <6>     NS      RAZ     NS         NS         Reserved.                                         
 <5>     DSI1_1  RO      0x0        0x0        BIST Status for DSI1 Memory 1                     
 <4>     DSI1_0  RO      0x0        0x0        BIST Status for DSI1 Memory 0                     
 <3>     DSI0_1  RO      0x0        0x0        BIST Status for DSI0 Memory 1                     
 <2>     DSI0_0  RO      0x0        0x0        BIST Status for DSI0 Memory 0                     
 <1>     MSI     RO      0x0        0x0        BIST Status for MSI Memory Map                    
 <0>     NCB_CMD RO      0x0        0x0        BIST Status for NCB Outbound Commands             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_DATA_OUT_CNT = SLI DATA OUT COUNT
 * 
 *  The EXEC data out fifo-count and the data unload counter.
 * 
$SLI_DATA_OUT_CNT   Address=((0x11F00000105F0), (0x5F0))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:44> NS      RAZ     NS         NS         Reserved.                                         
 <43:28> P1_UCNT RAZ     0x0        NS         FIFO1 Unload Count. This counter is incremented by
                                               '1' every time a word is removed from Data Out
                                               FIFO1. Whose count is shown in P1_FCNT.
 <27:22> P1_FCNT RAZ     0x0        NS         FIFO1 Data Out Count. Number of address data words
                                               presently buffered in the FIFO1.
                                               MACs associated with FIFO1: NONE
 <21:6>  P0_UCNT RO/H    0x0        NS         FIFO0 Unload Count. This counter is incremented by
                                               '1' every time a word is removed from Data Out
                                               FIFO0. Whose count is shown in P0_FCNT.
 <5:0>   P0_FCNT RO/H    0x0        NS         FIFO0 Data Out Count. Number of address data words
                                               presently buffered in the FIFO0.
                                               MACs associated with FIFO0: PCIe0, PCIe1, PCIe2
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_LAST_WIN_RDATA0 = SLI Last Window Read Data
 * 
 *  The data from the last initiated window read by MAC 0.
 * 
$SLI_LAST_WIN_RDATA0   Address=((0x11F0000010600), (0x600))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  DATA RO/H    0x0        NS         Last window read data.                            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_LAST_WIN_RDATA1 = SLI Last Window Read Data
 * 
 *  The data from the last initiated window read by MAC 1.
 * 
$SLI_LAST_WIN_RDATA1   Address=((0x11F0000010610), (0x610))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  DATA RO/H    0x0        NS         Last window read data.                            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_STATE1 = SLI State 1
 * 
 *  State machines in SLI. For debug.
 * 
$SLI_STATE1   Address=((0x11F0000010620), (0x620))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:52> CPL1 RO/H    0x1        NS         CPL1 State                                        
 <51:40> CPL0 RO/H    0x1        NS         CPL0 State                                        
 <39>    ARB  RO/H    0x0        NS         ARB State                                         
 <38:0>  CSR  RO/H    0x1        NS         CSR State                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_STATE2 = SLI State 2
 * 
 *  State machines in SLI. For debug.
 * 
$SLI_STATE2   Address=((0x11F0000010630), (0x630))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:56> NS    RAZ     NS         NS         Reserved.                                         
 <55:48> NNP1  RAZ     0x0        NS         NNP1 State                                        
 <47>    NS    RAZ     NS         NS         Reserved.                                         
 <46>    RAC   RO/H    0x1        NS         RAC State                                         
 <45:31> CSM1  RO/H    0x1        NS         CSM1 State                                        
 <30:16> CSM0  RO/H    0x1        NS         CSM0 State                                        
 <15:8>  NNP0  RO/H    0x1        NS         NNP0 State                                        
 <7:0>   NND   RO/H    0x1        NS         NND State                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_STATE3 = SLI State 3
 * 
 *  State machines in SLI. For debug.
 * 
$SLI_STATE3   Address=((0x11F0000010640), (0x640))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:56> NS    RAZ     NS         NS         Reserved.                                         
 <55:41> PSM1  RO/H    0x1        NS         PSM1 State                                        
 <40:26> PSM0  RO/H    0x1        NS         PSM0 State                                        
 <25:13> NSM1  RO/H    0x1        NS         NSM1 State                                        
 <12:0>  NSM0  RO/H    0x1        NS         NSM0 State                                        
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PCIE_MSI_RCV_B1 = SLI MAC MSI Receive Byte 1
 * 
 *  Register where MSI writes are directed from the MAC.
 * 
$SLI_PCIE_MSI_RCV_B1   Address=((0x11F0000010650), (0x650))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:8>  INTR  R/W     0x0        NS         "A write to this register will result in a bit in 
                                             one of the SLI_MSI_RCV# registers being set.
                                             Which bit is set is dependent on the previously
                                             written using the SLI_MSI_WR_MAP register or if
                                             not previously written the reset value of the MAP."
 <7:0>   NS    RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PCIE_MSI_RCV_B2 = SLI MAC MSI Receive Byte 2
 * 
 *  Register where MSI writes are directed from the MAC.
 * 
$SLI_PCIE_MSI_RCV_B2   Address=((0x11F0000010660), (0x660))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:24> NS    RAZ     NS         NS         Reserved.                                         
 <23:16> INTR  R/W     0x0        NS         "A write to this register will result in a bit in 
                                             one of the SLI_MSI_RCV# registers being set.
                                             Which bit is set is dependent on the previously
                                             written using the SLI_MSI_WR_MAP register or if
                                             not previously written the reset value of the MAP."
 <15:0>  NS    RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PCIE_MSI_RCV_B3 = SLI MAC MSI Receive Byte 3
 * 
 *  Register where MSI writes are directed from the MAC.
 * 
$SLI_PCIE_MSI_RCV_B3   Address=((0x11F0000010670), (0x670))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:24> INTR  R/W     0x0        NS         "A write to this register will result in a bit in 
                                             one of the SLI_MSI_RCV# registers being set.
                                             Which bit is set is dependent on the previously
                                             written using the SLI_MSI_WR_MAP register or if
                                             not previously written the reset value of the MAP."
 <23:0>  NS    RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_LAST_WIN_RDATA2 = SLI Last Window Read Data
 * 
 *  The data from the last initiated window read by MAC 2.
 * 
$SLI_LAST_WIN_RDATA2   Address=((0x11F00000106C0), (0x6C0))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  DATA RO/H    0x0        NS         Last window read data.                            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_LAST_WIN_RDATA3 = SLI Last Window Read Data
 * 
 *  The data from the last initiated window read by MAC 3.
 * 
$SLI_LAST_WIN_RDATA3   Address=((0x11F00000106D0), (0x6D0))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  DATA RO/H    0x0        NS         Last window read data.                            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_OUT_SIZE
 * 
 *  SLI_PKT[0..31]_OUT_SIZE = SLI Packet Out Size
 *  Contains the BSIZE and ISIZE for output packet ports.
 * 
$SLI_PKT(0..31)_OUT_SIZE   Address=((0x11F0000010C00+a*0x10), (0xC00+a*0x10))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:23> NS    RAZ     NS         NS         Reserved.                                         
 <22:16> ISIZE R/W     0x0        NS         INFO BYTES size (bytes) for ring @. Legal sizes   
                                             are 0 to 120. Not used in buffer-pointer-only mode.
 <15:0>  BSIZE R/W     0x0        NS         BUFFER SIZE (bytes) for ring @.                   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_INSTR_ENB = SLI's Packet Instruction Enable
 * 
 *  Enables the instruction fetch for a Packet-ring.
 * 
$SLI_PKT_INSTR_ENB   Address=((0x11F0000011000), (0x1000))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  ENB   R/W     0x0        NS         When ENB<i>=1, instruction input ring i is enabled.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_OUT_ENB = SLI's Packet Output Enable
 * 
 *  Enables the output packet engines.
 * 
$SLI_PKT_OUT_ENB   Address=((0x11F0000011010), (0x1010))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  ENB   R/W     0x0        NS         When ENB<i>=1, packet output ring i is enabled.   
                                             If an error occurs on reading pointers for an
                                             output ring, the ring will be disabled by clearing
                                             the bit associated with the ring to '0'.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_INSTR_SIZE = SLI's Packet Instruction Size
 * 
 *  Determines if instructions are 64 or 32 byte in size for a Packet-ring.
 * 
$SLI_PKT_INSTR_SIZE   Address=((0x11F0000011020), (0x1020))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS     RAZ     NS         NS         Reserved.                                         
 <31:0>  IS_64B R/W     0x0        NS         When IS_64B<i>=1, instruction input ring i uses 64B
                                              instructions, else 32B instructions.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_SLIST_ROR = SLI's Packet Scatter List Relaxed Ordering
 * 
 *  The ROR field for the TLP when fetching Scatter List.
 * 
$SLI_PKT_SLIST_ROR   Address=((0x11F0000011030), (0x1030))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  ROR   R/W     0x0        NS         ADDRTYPE<0> for the packet output ring reads that 
                                             fetch buffer/info pointer pairs.
                                             ROR<i> becomes ADDRTYPE<0> in DPI/SLI reads that
                                             fetch buffer/info pairs from packet output ring i
                                             (from address SLI_PKTi_SLIST_BADDR+ in MAC memory
                                             space.)
                                             ADDRTYPE<0> is the relaxed-order attribute for PCIe
                                             , helps select an SRIO*_S2M_TYPE* entry with sRIO.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_SLIST_NS = SLI's Packet Scatter List No Snoop
 * 
 *  The NS field for the TLP when fetching Scatter List.
 * 
$SLI_PKT_SLIST_NS   Address=((0x11F0000011040), (0x1040))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  NSR   R/W     0x0        NS         ADDRTYPE<1> for the packet output ring reads that 
                                             fetch buffer/info pointer pairs.
                                             NSR<i> becomes ADDRTYPE<1> in DPI/SLI reads that
                                             fetch buffer/info pairs from packet output ring i
                                             (from address SLI_PKTi_SLIST_BADDR+ in MAC memory
                                             space.)
                                             ADDRTYPE<1> is the relaxed-order attribute for PCIe
                                             , helps select an SRIO*_S2M_TYPE* entry with sRIO.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_SLIST_ES = SLI's Packet Scatter List Endian Swap
 * 
 *  The Endian Swap for Scatter List Read.
 * 
$SLI_PKT_SLIST_ES   Address=((0x11F0000011050), (0x1050))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  ES R/W     0x0        NS         ES<1:0> for the packet output ring reads that     
                                          fetch buffer/info pointer pairs.
                                          ES<2i+1:2i> becomes ES<1:0> in DPI/SLI reads that
                                          fetch buffer/info pairs from packet output ring i
                                          (from address SLI_PKTi_SLIST_BADDR+ in MAC memory
                                          space.)
                                          ES<1:0> is the endian-swap attribute for these MAC
                                          memory space reads.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_IPTR = SLI's Packet Info Poitner
 * 
 *  Controls using the Info-Pointer to store length and data.
 * 
$SLI_PKT_IPTR   Address=((0x11F0000011070), (0x1070))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  IPTR  R/W     0x0        NS         When IPTR<i>=1, packet output ring i is in info-  
                                             pointer mode, else buffer-pointer-only mode.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_DPADDR = SLI's Packet Data Pointer Addr
 * 
 *  Used to detemine address and attributes for packet data writes.
 * 
$SLI_PKT_DPADDR   Address=((0x11F0000011080), (0x1080))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  DPTR  R/W     0x0        0xffffffff Determines whether buffer/info pointers are       
                                             DPTR format 0 or DPTR format 1.
                                             When DPTR<i>=1, the buffer/info pointers fetched
                                             from packet output ring i are DPTR format 0.
                                             When DPTR<i>=0, the buffer/info pointers fetched
                                             from packet output ring i are DPTR format 1.
                                             (Replace SLI_PKT_INPUT_CONTROL[D_ESR,D_NSR,D_ROR]
                                             in the HRM descriptions of DPTR format 0/1 with
                                             SLI_PKT_DATA_OUT_ES[ES<2i+1:2i>],
                                             SLI_PKT_DATA_OUT_NS[NSR<i>], and
                                             SLI_PKT_DATA_OUT_ROR[ROR<i>], respectively,
                                             though.)
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_DATA_OUT_ROR = SLI's Packet Data Out Relaxed Ordering
 * 
 *  The ROR field for the TLP when writing Packet Data.
 * 
$SLI_PKT_DATA_OUT_ROR   Address=((0x11F0000011090), (0x1090))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  ROR   R/W     0x0        NS         ADDRTYPE<0> or MACADD<60> for buffer/info writes. 
                                             ROR<i> becomes either ADDRTYPE<0> or MACADD<60>
                                             for writes to buffer/info pair MAC memory space
                                             addresses fetched from packet output ring i.
                                             ADDRTYPE<0> if SLI_PKT_DPADDR[DPTR<i>]=1, else
                                             MACADD<60>.
                                             In the latter case,ADDRTYPE<0> comes from DPTR<60>.
                                             ADDRTYPE<0> is the relaxed-order attribute for PCIe
                                             , helps select an SRIO*_S2M_TYPE* entry with sRIO.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_DATA_OUT_NS = SLI's Packet Data Out No Snoop
 * 
 *  The NS field for the TLP when writing packet data.
 * 
$SLI_PKT_DATA_OUT_NS   Address=((0x11F00000110A0), (0x10A0))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  NSR   R/W     0x0        NS         ADDRTYPE<1> or MACADD<61> for buffer/info writes. 
                                             NSR<i> becomes either ADDRTYPE<1> or MACADD<61>
                                             for writes to buffer/info pair MAC memory space
                                             addresses fetched from packet output ring i.
                                             ADDRTYPE<1> if SLI_PKT_DPADDR[DPTR<i>]=1, else
                                             MACADD<61>.
                                             In the latter case,ADDRTYPE<1> comes from DPTR<61>.
                                             ADDRTYPE<1> is the no-snoop attribute for PCIe
                                             , helps select an SRIO*_S2M_TYPE* entry with sRIO.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_DATA_OUT_ES = SLI's Packet Data Out Endian Swap
 * 
 *  The Endian Swap for writing Data Out.
 * 
$SLI_PKT_DATA_OUT_ES   Address=((0x11F00000110B0), (0x10B0))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  ES R/W     0x0        NS         ES<1:0> or MACADD<63:62> for buffer/info writes.  
                                          ES<2i+1:2i> becomes either ES<1:0> or
                                          MACADD<63:62> for writes to buffer/info pair
                                          MAC memory space addresses fetched from packet
                                          output ring i. ES<1:0> if SLI_PKT_DPADDR[DPTR<i>]=1
                                          , else MACADD<63:62>.
                                          In the latter case, ES<1:0> comes from DPTR<63:62>.
                                          ES<1:0> is the endian-swap attribute for these MAC
                                          memory space writes.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_OUT_BMODE = SLI's Packet Out Byte Mode
 * 
 *  Control the updating of the SLI_PKT#_CNT register.
 * 
$SLI_PKT_OUT_BMODE   Address=((0x11F00000110D0), (0x10D0))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  BMODE R/W     0x0        NS         Determines whether SLI_PKTi_CNTS[CNT] is a byte or
                                             packet counter.
                                             When BMODE<i>=1, SLI_PKTi_CNTS[CNT] is a byte
                                             counter, else SLI_PKTi_CNTS[CNT] is a packet
                                             counter.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_PCIE_PORT = SLI's Packet To MAC Port Assignment
 * 
 *  Assigns Packet Ports to MAC ports.
 * 
$SLI_PKT_PCIE_PORT   Address=((0x11F00000110E0), (0x10E0))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  PP R/W     0x0        NS         The physical MAC  port that the output ring uses. 
                                          Two bits are used per ring (i.e. ring 0 [1:0],
                                          ring 1 [3:2], ....). A value of '0 means
                                          that the Packetring is assign to MAC Port 0, a '1'
                                          MAC Port 1, '2' and '3' are reserved.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_INT_LEVELS
 * 
 *  SLI_PKT_INT_LEVELS = SLI's Packet Interrupt Levels
 *  Output packet interrupt levels.
 * 
$SLI_PKT_INT_LEVELS   Address=((0x11F0000011120), (0x1120))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:54> NS    RAZ     NS         NS         Reserved.                                         
 <53:32> TIME  R/W     0x0        NS         Output ring counter time interrupt threshold      
                                             SLI sets SLI_PKT_TIME_INT[PORT<i>] whenever
                                             SLI_PKTi_CNTS[TIMER] > TIME
                                             Attribute: -exempt_keyword=True.
 <31:0>  CNT   R/W     0x0        NS         Output ring counter interrupt threshold           
                                             SLI sets SLI_PKT_CNT_INT[PORT<i>] whenever
                                             SLI_PKTi_CNTS[CNT] > CNT
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_CNT_INT = SLI Packet Counter Interrupt
 * 
 *  The packets rings that are interrupting because of Packet Counters.
 * 
$SLI_PKT_CNT_INT   Address=((0x11F0000011130), (0x1130))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  PORT  R/W1C/H 0x0        NS         Output ring packet counter interrupt bits         
                                             SLI sets PORT<i> whenever
                                             SLI_PKTi_CNTS[CNT] > SLI_PKT_INT_LEVELS[CNT].
                                             SLI_PKT_CNT_INT_ENB[PORT<i>] is the corresponding
                                             enable.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_TIME_INT = SLI Packet Timer Interrupt
 * 
 *  The packets rings that are interrupting because of Packet Timers.
 * 
$SLI_PKT_TIME_INT   Address=((0x11F0000011140), (0x1140))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  PORT  R/W1C/H 0x0        NS         Output ring packet timer interrupt bits           
                                             SLI sets PORT<i> whenever
                                             SLI_PKTi_CNTS[TIMER] > SLI_PKT_INT_LEVELS[TIME].
                                             SLI_PKT_TIME_INT_ENB[PORT<i>] is the corresponding
                                             enable.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_CNT_INT_ENB = SLI Packet Counter Interrupt Enable
 * 
 *  Enable for the packets rings that are interrupting because of Packet Counters.
 * 
$SLI_PKT_CNT_INT_ENB   Address=((0x11F0000011150), (0x1150))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  PORT  R/W     0x0        NS         Output ring packet counter interrupt enables      
                                             When both PORT<i> and corresponding
                                             SLI_PKT_CNT_INT[PORT<i>] are set, for any i,
                                             then SLI_INT_SUM[PCNT] is set, which can cause
                                             an interrupt.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_TIME_INT_ENB = SLI Packet Timer Interrupt Enable
 * 
 *  The packets rings that are interrupting because of Packet Timers.
 * 
$SLI_PKT_TIME_INT_ENB   Address=((0x11F0000011160), (0x1160))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  PORT  R/W     0x0        NS         Output ring packet timer interrupt enables        
                                             When both PORT<i> and corresponding
                                             SLI_PKT_TIME_INT[PORT<i>] are set, for any i,
                                             then SLI_INT_SUM[PTIME] is set, which can cause
                                             an interrupt.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_INPUT_CONTROL = SLI's Packet Input Control
 * 
 *  Control for reads for gather list and instructions.
 * 
$SLI_PKT_INPUT_CONTROL   Address=((0x11F0000011170), (0x1170))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    PRD_ERST RO/H    0x0        NS         PRD Error Reset                                   
 <62:56> PRD_RDS  RO/H    0x0        NS         PRD Reads Out                                     
 <55>    GII_ERST RO/H    0x0        NS         GII Error Reset                                   
 <54:48> GII_RDS  RO/H    0x0        NS         GII Reads Out                                     
 <47:41> NS       RAZ     NS         NS         Reserved.                                         
 <40>    PRC_IDLE RO/H    0x0        NS         PRC In IDLE                                       
 <39:24> NS       RAZ     NS         NS         Reserved.                                         
 <23>    PIN_RST  R/W/H   0x0        0x0        Packet In Reset. When a gather-list read receives 
                                                an error this bit (along with SLI_INT_SUM[PGL_ERR])
                                                is set. When receiveing a PGL_ERR interrupt the SW
                                                should:
                                                1. Wait 2ms to allow any outstanding reads to return
                                                   or be timed out.
                                                2. Write a '0' to this bit.
                                                3. Startup the packet input again (all previous
                                                   CSR setting of the packet-input will be lost).
 <22>    PKT_RR   R/W     0x0        0x1        When set '1' the input packet selection will be   
                                                made with a Round Robin arbitration. When '0'
                                                the input packet ring is fixed in priority,
                                                where the lower ring number has higher priority.
 <21:9>  PBP_DHI  R/W     0x0        0x0        PBP_DHI replaces address bits that are used       
                                                for parse mode and skip-length when
                                                SLI_PKTi_INSTR_HEADER[PBP]=1.
                                                PBP_DHI becomes either MACADD<63:55> or MACADD<59:51>
                                                for the instruction DPTR reads in this case.
                                                The instruction DPTR reads are called
                                                "First Direct" or "First Indirect" in the HRM.
                                                When PBP=1, if "First Direct" and USE_CSR=0, PBP_DHI
                                                becomes MACADD<59:51>, else MACADD<63:55>.
 <8>     D_NSR    R/W     0x0        NS         ADDRTYPE<1> or MACADD<61> for packet input data   
                                                reads.
                                                D_NSR becomes either ADDRTYPE<1> or MACADD<61>
                                                for MAC memory space reads of packet input data
                                                fetched for any packet input ring.
                                                ADDRTYPE<1> if USE_CSR=1, else MACADD<61>.
                                                In the latter case, ADDRTYPE<1> comes from DPTR<61>.
                                                ADDRTYPE<1> is the no-snoop attribute for PCIe
                                                , helps select an SRIO*_S2M_TYPE* entry with sRIO.
 <7:6>   D_ESR    R/W     0x0        NS         ES<1:0> or MACADD<63:62> for packet input data    
                                                reads.
                                                D_ESR becomes either ES<1:0> or MACADD<63:62>
                                                for MAC memory space reads of packet input data
                                                fetched for any packet input ring.
                                                ES<1:0> if USE_CSR=1, else MACADD<63:62>.
                                                In the latter case, ES<1:0> comes from DPTR<63:62>.
                                                ES<1:0> is the endian-swap attribute for these MAC
                                                memory space reads.
 <5>     D_ROR    R/W     0x0        NS         ADDRTYPE<0> or MACADD<60> for packet input data   
                                                reads.
                                                D_ROR becomes either ADDRTYPE<0> or MACADD<60>
                                                for MAC memory space reads of packet input data
                                                fetched for any packet input ring.
                                                ADDRTYPE<0> if USE_CSR=1, else MACADD<60>.
                                                In the latter case, ADDRTYPE<0> comes from DPTR<60>.
                                                ADDRTYPE<0> is the relaxed-order attribute for PCIe
                                                , helps select an SRIO*_S2M_TYPE* entry with sRIO.
 <4>     USE_CSR  R/W     0x0        0x1        When set '1' the csr value will be used for       
                                                ROR, ESR, and NSR. When clear '0' the value in
                                                DPTR will be used. In turn the bits not used for
                                                ROR, ESR, and NSR, will be used for bits [63:60]
                                                of the address used to fetch packet data.
 <3>     NSR      R/W     0x0        NS         ADDRTYPE<1> for packet input instruction reads and
                                                gather list (i.e. DPI component) reads from MAC
                                                memory space.
                                                ADDRTYPE<1> is the no-snoop attribute for PCIe
                                                , helps select an SRIO*_S2M_TYPE* entry with sRIO.
 <2:1>   ESR      R/W     0x0        NS         ES<1:0> for packet input instruction reads and    
                                                gather list (i.e. DPI component) reads from MAC
                                                memory space.
                                                ES<1:0> is the endian-swap attribute for these MAC
                                                memory space reads.
 <0>     ROR      R/W     0x0        NS         ADDRTYPE<0> for packet input instruction reads and
                                                gather list (i.e. DPI component) reads from MAC
                                                memory space.
                                                ADDRTYPE<0> is the relaxed-order attribute for PCIe
                                                , helps select an SRIO*_S2M_TYPE* entry with sRIO.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_OUTPUT_WMARK = SLI's Packet Output Water Mark
 * 
 *  "Value that when the SLI_PKT#_SLIST_BAOFF_DBELL[DBELL} value is less then that backpressure
 *  for the rings will be applied."
 * 
$SLI_PKT_OUTPUT_WMARK   Address=((0x11F0000011180), (0x1180))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  WMARK R/W     0x0        0xe        Value when DBELL count drops below backpressure   
                                             for the ring will be applied to the PKO.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_INSTR_RD_SIZE = SLI Instruction Read Size
 * 
 *  The number of instruction allowed to be read at one time.
 * 
$SLI_PKT_INSTR_RD_SIZE   Address=((0x11F00000111A0), (0x11A0))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  RDSIZE R/W     0x0        NS         Number of instructions to be read in one MAC read 
                                              request for the 4 ports - 8 rings. Every two bits
                                              (i.e. 1:0, 3:2, 5:4..) are assign to the port/ring
                                              combinations.
                                              15:0  PKIPort0,Ring 7..0  31:16 PKIPort1,Ring 7..0
                                              47:32 PKIPort2,Ring 7..0  63:48 PKIPort3,Ring 7..0
                                              Two bit value are:
                                              0 - 1 Instruction
                                              1 - 2 Instructions
                                              2 - 3 Instructions
                                              3 - 4 Instructions
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_IN_PCIE_PORT = SLI's Packet In To MAC Port Assignment
 * 
 *  Assigns Packet Input rings to MAC ports.
 * 
$SLI_PKT_IN_PCIE_PORT   Address=((0x11F00000111B0), (0x11B0))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  PP R/W     0x0        NS         The MAC port that the Packet ring number is       
                                          assigned. Two bits are used per ring (i.e. ring 0
                                          [1:0], ring 1 [3:2], ....). A value of '0 means
                                          that the Packetring is assign to MAC Port 0, a '1'
                                          MAC Port 1, a '2' MAC Port 2, and a '3' MAC Port 3.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_PORT_IN_RST
 * 
 *  SLI_PKT_PORT_IN_RST = SLI Packet Port In Reset
 *  Vector bits related to ring-port for ones that are reset.
 * 
$SLI_PKT_PORT_IN_RST   Address=((0x11F00000111F0), (0x11F0))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> IN_RST  RO/H    0x0        NS         When asserted '1' the vector bit cooresponding    
                                               to the inbound Packet-ring is in reset.
 <31:0>  OUT_RST RO/H    0x0        NS         When asserted '1' the vector bit cooresponding    
                                               to the outbound Packet-ring is in reset.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_IN_INSTR_COUNTS = SLI Packet Input Instrutction Counts
 * 
 *  Keeps track of the number of instructions read into the FIFO and Packets sent to IPD.
 * 
$SLI_PKT_IN_INSTR_COUNTS   Address=((0x11F0000011200), (0x1200))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> WR_CNT RO/H    0x0        NS         Shows the number of packets sent to the IPD.      
 <31:0>  RD_CNT RO/H    0x0        NS         Shows the value of instructions that have had reads
                                              issued for them.
                                              to the Packet-ring is in reset.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_IN_BP = SLI Packet Input Backpressure
 * 
 *  Which input rings have backpressure applied.
 * 
$SLI_PKT_IN_BP   Address=((0x11F0000011210), (0x1210))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:0>  BP    RO/H    0x0        NS         A packet input  ring that has its count greater   
                                             than its WMARK will have backpressure applied.
                                             Each of the 32 bits coorespond to an input ring.
                                             When '1' that ring has backpressure applied an
                                             will fetch no more instructions, but will process
                                             any previously fetched instructions.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_CTL = SLI Packet Control
 * 
 *  Control for packets.
 * 
$SLI_PKT_CTL   Address=((0x11F0000011220), (0x1220))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:5>  NS      RAZ     NS         NS         Reserved.                                         
 <4>     RING_EN R/W     0x0        0x0        When '0' forces "relative Q position" received    
                                               from PKO to be zero, and replicates the back-
                                               pressure indication for the first ring attached
                                               to a PKO port across all the rings attached to a
                                               PKO port. When '1' backpressure is on a per
                                               port/ring.
 <3:0>   PKT_BP  R/W     0xf        0xf        When set '1' enable the port level backpressure for
                                               PKO ports associated with the bit.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_SLIST_BADDR
 * 
 *  "SLI_PKT[0..31]_SLIST_BADDR = SLI Packet ring# Scatter List Base Address
 *  Start of Scatter List for output packet pointers - MUST be 16 byte alligned"
 * 
$SLI_PKT(0..31)_SLIST_BADDR   Address=((0x11F0000011400+a*0x10), (0x1400+a*0x10))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  ADDR  R/W/H   0x0        NS         Base address for scatter list pointers.           
 <3:0>   NS    RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_SLIST_BAOFF_DBELL
 * 
 *  "SLI_PKT[0..31]_SLIST_BAOFF_DBELL = SLI Packet ring# Scatter List Base Address Offset and
 *  Doorbell
 *  The doorbell and base address offset for next read."
 * 
$SLI_PKT(0..31)_SLIST_BAOFF_DBELL   Address=((0x11F0000011800+a*0x10), (0x1800+a*0x10))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> AOFF  RO/H    0x0        NS         The offset from the SLI_PKT[0..31]_SLIST_BADDR    
                                             where the next SList pointer will be read.
                                             A write of 0xFFFFFFFF to the DBELL field will
                                             clear DBELL and AOFF
 <31:0>  DBELL R/W/H   0x0        0x0        Scatter list doorbell count. Writes to this field 
                                             will increment the value here. Reads will return
                                             present value. The value of this field is
                                             decremented as read operations are ISSUED for
                                             scatter pointers.
                                             A write of 0xFFFFFFFF will clear DBELL and AOFF
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_SLIST_FIFO_RSIZE
 * 
 *  "SLI_PKT[0..31]_SLIST_FIFO_RSIZE = SLI Packet ring# Scatter List FIFO and Ring Size.
 *  The number of scatter pointer pairs in the scatter list."
 * 
$SLI_PKT(0..31)_SLIST_FIFO_RSIZE   Address=((0x11F0000011C00+a*0x10), (0x1C00+a*0x10))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RO      0x0        NS         Reserverd.                                        
 <31:0>  RSIZE R/W     0x0        NS         The number of scatter pointer pairs contained in  
                                             the scatter list ring.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_IN_DONE_CNTS
 * 
 *  "SLI_PKT_IN_DONE[0..31]_CNTS = SLI Instruction Done ring# Counts
 *  Counters for instructions completed on Input rings."
 * 
$SLI_PKT_IN_DONE(0..31)_CNTS   Address=((0x11F0000012000+a*0x10), (0x2000+a*0x10))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RO      0x0        NS         Reserverd.                                        
 <31:0>  CNT   RO/H    0x0        NS         This field is incrmented by '1' when an instruction
                                             is completed. This field is incremented as the
                                             last of the data is read from the MAC.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_CNTS
 * 
 *  "SLI_PKT[0..31]_CNTS = SLI Packet ring# Counts
 *  The counters for output rings."
 * 
$SLI_PKT(0..31)_CNTS   Address=((0x11F0000012400+a*0x10), (0x2400+a*0x10))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:54> NS    RO      NS         NS         Reserved.                                         
 <53:32> TIMER RO/H    0x0        0x0        "Timer incremented every 1024 core clocks         
                                             when SLI_PKTS#_CNTS[CNT] is non zero. Field
                                             cleared when SLI_PKTS#_CNTS[CNT] goes to 0.
                                             Field is also cleared when SLI_PKT_TIME_INT is
                                             cleared.
                                             The first increment of this count can occur
                                             between 0 to 1023 core clocks."
 <31:0>  CNT   R/W/H   0x0        0x0        ring counter. This field is incremented as        
                                             packets are sent out and decremented in response to
                                             writes to this field.
                                             When SLI_PKT_OUT_BMODE is '0' a value of 1 is
                                             added to the register for each packet, when '1'
                                             and the info-pointer is NOT used the length of the
                                             packet plus 8 is added, when '1' and info-pointer
                                             mode IS used the packet length is added to this
                                             field.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_INSTR_BADDR
 * 
 *  "SLI_PKT[0..31]_INSTR_BADDR = SLI Packet ring# Instruction Base Address
 *  Start of Instruction for input packets."
 * 
$SLI_PKT(0..31)_INSTR_BADDR   Address=((0x11F0000012800+a*0x10), (0x2800+a*0x10))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:3>  ADDR  R/W/H   0x0        NS         Base address for Instructions.                    
 <2:0>   NS    RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_INSTR_BAOFF_DBELL
 * 
 *  "SLI_PKT[0..31]_INSTR_BAOFF_DBELL = SLI Packet ring# Instruction Base Address Offset and
 *  Doorbell
 *  The doorbell and base address offset for next read."
 * 
$SLI_PKT(0..31)_INSTR_BAOFF_DBELL   Address=((0x11F0000012C00+a*0x10), (0x2C00+a*0x10))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> AOFF  RO/H    0x0        NS         The offset from the SLI_PKT[0..31]_INSTR_BADDR    
                                             where the next instruction will be read.
 <31:0>  DBELL R/W/H   0x0        0x0        Instruction doorbell count. Writes to this field  
                                             will increment the value here. Reads will return
                                             present value. A write of 0xffffffff will set the
                                             DBELL and AOFF fields to '0'.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_INSTR_FIFO_RSIZE
 * 
 *  "SLI_PKT[0..31]_INSTR_FIFO_RSIZE = SLI Packet ring# Instruction FIFO and Ring Size.
 *  Fifo field and ring size for Instructions."
 * 
$SLI_PKT(0..31)_INSTR_FIFO_RSIZE   Address=((0x11F0000013000+a*0x10), (0x3000+a*0x10))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:55> MAX   RO/H    0x10       NS         Max Fifo Size.                                    
 <54:46> RRP   RO/H    0x0        NS         Fifo read pointer.                                
 <45:37> WRP   RO/H    0x0        NS         Fifo write pointer.                               
 <36:32> FCNT  RO/H    0x0        NS         Fifo count.                                       
 <31:0>  RSIZE R/W     0x0        NS         Instruction ring size.                            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_INSTR_HEADER
 * 
 *  "SLI_PKT[0..31]_INSTR_HEADER = SLI Packet ring# Instruction Header.
 *  VAlues used to build input packet header."
 * 
$SLI_PKT(0..31)_INSTR_HEADER   Address=((0x11F0000013400+a*0x10), (0x3400+a*0x10))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:44> NS       RAZ     NS         NS         Reserved                                          
                                                (A R/W field in real HW, but we require SW to
                                                always write zeroes.)
 <43>    PBP      R/W     0x0        NS         Enable Packet-by-packet mode.                     
                                                Allows DPI to generate PKT_INST_HDR[PM,SL]
                                                differently per DPI instruction.
                                                USE_IHDR must be set whenever PBP is set.
 <42:38> NS       RAZ     0x0        NS         Reserved                                          
                                                (A R/W field in real HW, but we require SW to
                                                always write zeroes.)
 <37:36> RPARMODE R/W     0x0        NS         Parse Mode. Becomes PKT_INST_HDR[PM]              
                                                when DPI_INST_HDR[R]==1 and PBP==0
 <35>    NS       RAZ     0x0        NS         Reserved                                          
                                                (A R/W field in real HW, but we require SW to
                                                always write zeroes.)
 <34:28> RSKP_LEN R/W     0x0        NS         Skip Length. Becomes PKT_INST_HDR[SL]             
                                                when DPI_INST_HDR[R]==1 and PBP==0
 <27:26> NS       R/W     0x0        NS         Reserved                                          
                                                (A R/W field in real HW, but we require SW to
                                                always write zeroes.)
 <25>    RNQOS    R/W     0x0        NS         Becomes PKT_INST_HDR[NQOS]                        
                                                when DPI_INST_HDR[R]==1
 <24>    RNGRP    R/W     0x0        NS         Becomes PKT_INST_HDR[NGRP]                        
                                                when DPI_INST_HDR[R]==1
 <23>    RNTT     R/W     0x0        NS         Becomes PKT_INST_HDR[NTT]                         
                                                when DPI_INST_HDR[R]==1
 <22>    RNTAG    R/W     0x0        NS         Becomes PKT_INST_HDR[NTAG]                        
                                                when DPI_INST_HDR[R]==1
 <21>    USE_IHDR R/W     0x0        NS         When set '1' DPI always prepends a PKT_INST_HDR   
                                                as part of the packet data sent to PIP/IPD,
                                                regardless of DPI_INST_HDR[R]. (DPI also always
                                                prepends a PKT_INST_HDR when DPI_INST_HDR[R]=1.)
                                                USE_IHDR must be set whenever PBP is set.
 <20:16> NS       R/W     0x0        NS         Reserved                                          
                                                (A R/W field in real HW, but we require SW to
                                                always write zeroes.)
 <15:14> PAR_MODE R/W     0x0        NS         Parse Mode. Becomes PKT_INST_HDR[PM]              
                                                when DPI_INST_HDR[R]==0 and USE_IHDR==1 and PBP==0
 <13>    NS       R/W     0x0        NS         Reserved                                          
                                                (A R/W field in real HW, but we require SW to
                                                always write zeroes.)
                                                instruction header sent to IPD.
 <12:6>  SKP_LEN  R/W     0x0        NS         Skip Length. Becomes PKT_INST_HDR[SL]             
                                                when DPI_INST_HDR[R]==0 and USE_IHDR==1 and PBP==0
 <5:4>   NS       R/W     0x0        NS         Reserved                                          
                                                (A R/W field in real HW, but we require SW to
                                                always write zeroes.)
 <3>     NQOS     R/W     0x0        NS         Becomes PKT_INST_HDR[NQOS]                        
                                                when DPI_INST_HDR[R]==0 (and USE_IHDR==1)
 <2>     NGRP     R/W     0x0        NS         Becomes PKT_INST_HDR[NGRP]                        
                                                when DPI_INST_HDR[R]==0 (and USE_IHDR==1)
 <1>     NTT      R/W     0x0        NS         Becomes PKT_INST_HDR[NTT]                         
                                                when DPI_INST_HDR[R]==0 (and USE_IHDR==1)
 <0>     NTAG     R/W     0x0        NS         Becomes PKT_INST_HDR[NTAG]                        
                                                when DPI_INST_HDR[R]==0 (and USE_IHDR==1)
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PKT_IN_BP
 * 
 *  "SLI_PKT[0..31]_IN_BP = SLI Packet ring# Input Backpressure
 *  The counters and thresholds for input packets to apply backpressure to processing of the
 *  packets."
 * 
$SLI_PKT(0..31)_IN_BP   Address=((0x11F0000013800+a*0x10), (0x3800+a*0x10))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> WMARK R/W     0xffffffff NS         "When CNT is greater than this threshold no more  
                                             packets will be processed for this ring.
                                             When writing this field of the SLI_PKT#_IN_BP
                                             register, use a 4-byte write so as to not write
                                             any other field of this register."
 <31:0>  CNT   R/W/H   0x0        0x0        "ring counter. This field is incremented by one   
                                             whenever OCTEON receives, buffers, and creates a
                                             work queue entry for a packet that arrives by the
                                             cooresponding input ring. A write to this field
                                             will be subtracted from the field value.
                                             When writing this field of the SLI_PKT#_IN_BP
                                             register, use a 4-byte write so as to not write
                                             any other field of this register."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_MSI_RCV0 = SLI MSI Receive0
 * 
 *  Contains bits [63:0] of the 256 bits of MSI interrupts.
 * 
$SLI_MSI_RCV0   Address=((0x11F0000013C10), (0x3C10))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  INTR R/W1C/H 0x0        0x0        Bits 63-0 of the 256 bits of MSI interrupt.       
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_MSI_RCV1 = SLI MSI Receive1
 * 
 *  Contains bits [127:64] of the 256 bits of MSI interrupts.
 * 
$SLI_MSI_RCV1   Address=((0x11F0000013C20), (0x3C20))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  INTR R/W1C/H 0x0        0x0        Bits 127-64 of the 256 bits of MSI interrupt.     
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_MSI_RCV2 = SLI MSI Receive2
 * 
 *  Contains bits [191:128] of the 256 bits of MSI interrupts.
 * 
$SLI_MSI_RCV2   Address=((0x11F0000013C30), (0x3C30))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  INTR R/W1C/H 0x0        0x0        Bits 191-128 of the 256 bits of MSI interrupt.    
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_MSI_RCV3 = SLI MSI Receive3
 * 
 *  Contains bits [255:192] of the 256 bits of MSI interrupts.
 * 
$SLI_MSI_RCV3   Address=((0x11F0000013C40), (0x3C40))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  INTR R/W1C/H 0x0        0x0        Bits 255-192 of the 256 bits of MSI interrupt.    
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_MSI_ENB0 = SLI MSI Enable0
 * 
 *  Used to enable the interrupt generation for the bits in the SLI_MSI_RCV0.
 * 
$SLI_MSI_ENB0   Address=((0x11F0000013C50), (0x3C50))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  ENB R/W/H   0x0        0xffffffffffffffffL Enables bit [63:0] of SLI_MSI_RCV0.               
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_MSI_ENB1 = SLI MSI Enable1
 * 
 *  Used to enable the interrupt generation for the bits in the SLI_MSI_RCV1.
 * 
$SLI_MSI_ENB1   Address=((0x11F0000013C60), (0x3C60))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  ENB R/W/H   0x0        0xffffffffffffffffL Enables bit [63:0] of SLI_MSI_RCV1.               
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_MSI_ENB2 = SLI MSI Enable2
 * 
 *  Used to enable the interrupt generation for the bits in the SLI_MSI_RCV2.
 * 
$SLI_MSI_ENB2   Address=((0x11F0000013C70), (0x3C70))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  ENB R/W/H   0x0        0xffffffffffffffffL Enables bit [63:0] of SLI_MSI_RCV2.               
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_MSI_ENB3 = SLI MSI Enable3
 * 
 *  Used to enable the interrupt generation for the bits in the SLI_MSI_RCV3.
 * 
$SLI_MSI_ENB3   Address=((0x11F0000013C80), (0x3C80))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  ENB R/W/H   0x0        0xffffffffffffffffL Enables bit [63:0] of SLI_MSI_RCV3.               
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_MSI_WR_MAP = SLI MSI Write MAP
 * 
 *  Used to write the mapping function of the SLI_PCIE_MSI_RCV to SLI_MSI_RCV registers.
 *  At reset, the mapping function is one-to-one, that is MSI_INT 1 maps to CIU_INT 1, 2 to 2, 3
 *  to 3, etc.
 * 
$SLI_MSI_WR_MAP   Address=((0x11F0000013C90), (0x3C90))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS      RAZ     NS         NS         Reserved.                                         
 <15:8>  CIU_INT R/W     0x0        NS         "Selects which bit in the SLI_MSI_RCV# (0-255)    
                                               will be set when the value specified in the
                                               MSI_INT of this register is recevied during a
                                               write to the SLI_PCIE_MSI_RCV register."
 <7:0>   MSI_INT R/W     0x0        NS         Selects the value that would be received when the 
                                               SLI_PCIE_MSI_RCV register is written.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_MSI_RD_MAP = SLI MSI Read MAP
 * 
 *  Used to read the mapping function of the SLI_PCIE_MSI_RCV to SLI_MSI_RCV registers.
 * 
$SLI_MSI_RD_MAP   Address=((0x11F0000013CA0), (0x3CA0))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS      RAZ     NS         NS         Reserved.                                         
 <15:8>  RD_INT  RO/H    0x0        NS         The value of the map at the location PREVIOUSLY   
                                               written to the MSI_INT field of this register.
 <7:0>   MSI_INT R/W     0x0        NS         Selects the value that would be received when the 
                                               SLI_PCIE_MSI_RCV register is written.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_PCIE_MSI_RCV = SLI MAC MSI Receive
 * 
 *  Register where MSI writes are directed from the MAC.
 * 
$SLI_PCIE_MSI_RCV   Address=((0x11F0000013CB0), (0x3CB0))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:8>  NS    RAZ     NS         NS         Reserved.                                         
 <7:0>   INTR  R/W     0x0        NS         "A write to this register will result in a bit in 
                                             one of the SLI_MSI_RCV# registers being set.
                                             Which bit is set is dependent on the previously
                                             written using the SLI_MSI_WR_MAP register or if
                                             not previously written the reset value of the MAP."
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_INT_ENB_CIU = SLI's Interrupt Enable CIU Register
 * 
 *  Used to enable the various interrupting conditions of SLI
 * 
$SLI_INT_ENB_CIU   Address=((0x11F0000013CD0), (0x3CD0))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:61> NS        R/W     0x0        0x0        Reserved.                                         
 <60>    ILL_PAD   R/W     0x0        0x0        Illegal packet csr address.                       
 <59>    SPRT3_ERR R/W     0x0        0x0        Error Response received on SLI port 3.            
 <58>    SPRT2_ERR R/W     0x0        0x0        Error Response received on SLI port 2.            
 <57>    SPRT1_ERR R/W     0x0        0x0        Error Response received on SLI port 1.            
 <56>    SPRT0_ERR R/W     0x0        0x0        Error Response received on SLI port 0.            
 <55>    PINS_ERR  R/W     0x0        0x0        Read Error during packet instruction fetch.       
 <54>    POP_ERR   R/W     0x0        0x0        Read Error during packet scatter pointer fetch.   
 <53>    PDI_ERR   R/W     0x0        0x0        Read Error during packet data fetch.              
 <52>    PGL_ERR   R/W     0x0        0x0        Read Error during gather list fetch.              
 <51>    PIN_BP    R/W     0x0        0x0        Packet Input Count exceeded WMARK.                
 <50>    POUT_ERR  R/W     0x0        0x0        Packet Out Interrupt, Error From PKO.             
 <49>    PSLDBOF   R/W     0x0        0x0        Packet Scatterlist Doorbell Count Overflow.       
 <48>    PIDBOF    R/W     0x0        0x0        Packet Instruction Doorbell Count Overflow.       
 <47:38> NS        R/W     0x0        0x0        Reserved.                                         
 <37:36> DTIME     R/W     0x0        0x0        DMA Timer Interrupts                              
 <35:34> DCNT      R/W     0x0        0x0        DMA Count Interrupts                              
 <33:32> DMAFI     R/W     0x0        0x0        DMA set Forced Interrupts                         
 <31:29> NS        R/W     0x0        0x0        Reserved.                                         
 <28>    MIO_INT2  R/W     0x0        0x0        Enables SLI_INT_SUM[28] to generate an            
                                                 interrupt on the RSL.
                                                 THIS SHOULD NEVER BE SET
 <27>    M3_UN_WI  R/W     0x0        0x0        Reserved.                                         
 <26>    M3_UN_B0  R/W     0x0        0x0        Reserved.                                         
 <25>    M3_UP_WI  R/W     0x0        0x0        Reserved.                                         
 <24>    M3_UP_B0  R/W     0x0        0x0        Reserved.                                         
 <23>    M2_UN_WI  R/W     0x0        0x1        Enables SLI_INT_SUM[23] to generate an            
                                                 interrupt on the RSL.
 <22>    M2_UN_B0  R/W     0x0        0x1        Enables SLI_INT_SUM[22] to generate an            
                                                 interrupt on the RSL.
 <21>    M2_UP_WI  R/W     0x0        0x1        Enables SLI_INT_SUM[21] to generate an            
                                                 interrupt on the RSL.
 <20>    M2_UP_B0  R/W     0x0        0x1        Enables SLI_INT_SUM[20] to generate an            
                                                 interrupt on the RSL.
 <19:18> NS        R/W     0x0        0x0        Reserved.                                         
 <17>    MIO_INT1  R/W     0x0        0x0        Enables SLI_INT_SUM[17] to generate an            
                                                 interrupt on the RSL.
                                                 THIS SHOULD NEVER BE SET
 <16>    MIO_INT0  R/W     0x0        0x0        Enables SLI_INT_SUM[16] to generate an            
                                                 interrupt on the RSL.
                                                 THIS SHOULD NEVER BE SET
 <15>    M1_UN_WI  R/W     0x0        0x1        Enables SLI_INT_SUM[15] to generate an            
                                                 interrupt on the RSL.
 <14>    M1_UN_B0  R/W     0x0        0x1        Enables SLI_INT_SUM[14] to generate an            
                                                 interrupt on the RSL.
 <13>    M1_UP_WI  R/W     0x0        0x1        Enables SLI_INT_SUM[13] to generate an            
                                                 interrupt on the RSL.
 <12>    M1_UP_B0  R/W     0x0        0x1        Enables SLI_INT_SUM[12] to generate an            
                                                 interrupt on the RSL.
 <11>    M0_UN_WI  R/W     0x0        0x1        Enables SLI_INT_SUM[11] to generate an            
                                                 interrupt on the RSL.
 <10>    M0_UN_B0  R/W     0x0        0x1        Enables SLI_INT_SUM[10] to generate an            
                                                 interrupt on the RSL.
 <9>     M0_UP_WI  R/W     0x0        0x1        Enables SLI_INT_SUM[9] to generate an             
                                                 interrupt on the RSL.
 <8>     M0_UP_B0  R/W     0x0        0x1        Enables SLI_INT_SUM[8] to generate an             
                                                 interrupt on the RSL.
 <7:6>   NS        R/W/H   0x0        0x0        Reserved.                                         
 <5>     PTIME     R/W     0x0        0x1        Enables SLI_INT_SUM[5] to generate an             
                                                 interrupt on the RSL.
 <4>     PCNT      R/W     0x0        0x1        Enables SLI_INT_SUM[4] to generate an             
                                                 interrupt on the RSL.
 <3>     IOB2BIG   R/W     0x0        0x1        Enables SLI_INT_SUM[3] to generate an             
                                                 interrupt on the RSL.
 <2>     BAR0_TO   R/W     0x0        0x1        Enables SLI_INT_SUM[2] to generate an             
                                                 interrupt on the RSL.
 <1>     NS        R/W     0x0        0x1        Enables SLI_INT_SUM[1] to generate an             
                                                 interrupt on the RSL.
 <0>     RML_TO    R/W     0x0        0x1        Enables SLI_INT_SUM[0] to generate an             
                                                 interrupt on the RSL.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_MSI_W1C_ENB0 = SLI MSI Write 1 To Clear Enable0
 * 
 *  Used to clear bits in SLI_MSI_ENB0.
 * 
$SLI_MSI_W1C_ENB0   Address=((0x11F0000013CF0), (0x3CF0))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  CLR R/W/H   0x0        0x0        A write of '1' to a vector will clear the         
                                           cooresponding bit in SLI_MSI_ENB0.
                                           A read to this address will return 0.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_MSI_W1C_ENB1 = SLI MSI Write 1 To Clear Enable1
 * 
 *  Used to clear bits in SLI_MSI_ENB1.
 * 
$SLI_MSI_W1C_ENB1   Address=((0x11F0000013D00), (0x3D00))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  CLR R/W/H   0x0        0x0        A write of '1' to a vector will clear the         
                                           cooresponding bit in SLI_MSI_ENB1.
                                           A read to this address will return 0.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_MSI_W1C_ENB2 = SLI MSI Write 1 To Clear Enable2
 * 
 *  Used to clear bits in SLI_MSI_ENB2.
 * 
$SLI_MSI_W1C_ENB2   Address=((0x11F0000013D10), (0x3D10))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  CLR R/W/H   0x0        0x0        A write of '1' to a vector will clear the         
                                           cooresponding bit in SLI_MSI_ENB2.
                                           A read to this address will return 0.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_MSI_W1C_ENB3 = SLI MSI Write 1 To Clear Enable3
 * 
 *  Used to clear bits in SLI_MSI_ENB3.
 * 
$SLI_MSI_W1C_ENB3   Address=((0x11F0000013D20), (0x3D20))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  CLR R/W/H   0x0        0x0        A write of '1' to a vector will clear the         
                                           cooresponding bit in SLI_MSI_ENB3.
                                           A read to this address will return 0.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_MSI_W1S_ENB0 = SLI MSI Write 1 To Set Enable0
 * 
 *  Used to set bits in SLI_MSI_ENB0.
 * 
$SLI_MSI_W1S_ENB0   Address=((0x11F0000013D30), (0x3D30))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  SET R/W/H   0x0        0x0        A write of '1' to a vector will set the           
                                           cooresponding bit in SLI_MSI_ENB0.
                                           A read to this address will return 0.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_MSI_W1S_ENB1
 * 
 *  SLI_MSI_W1S_ENB0 = SLI MSI Write 1 To Set Enable1
 *  Used to set bits in SLI_MSI_ENB1.
 * 
$SLI_MSI_W1S_ENB1   Address=((0x11F0000013D40), (0x3D40))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  SET R/W/H   0x0        0x0        A write of '1' to a vector will set the           
                                           cooresponding bit in SLI_MSI_ENB1.
                                           A read to this address will return 0.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_MSI_W1S_ENB2 = SLI MSI Write 1 To Set Enable2
 * 
 *  Used to set bits in SLI_MSI_ENB2.
 * 
$SLI_MSI_W1S_ENB2   Address=((0x11F0000013D50), (0x3D50))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  SET R/W/H   0x0        0x0        A write of '1' to a vector will set the           
                                           cooresponding bit in SLI_MSI_ENB2.
                                           A read to this address will return 0.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_MSI_W1S_ENB3 = SLI MSI Write 1 To Set Enable3
 * 
 *  Used to set bits in SLI_MSI_ENB3.
 * 
$SLI_MSI_W1S_ENB3   Address=((0x11F0000013D60), (0x3D60))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  SET R/W/H   0x0        0x0        A write of '1' to a vector will set the           
                                           cooresponding bit in SLI_MSI_ENB3.
                                           A read to this address will return 0.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_MAC_CREDIT_CNT = SLI MAC Credit Count
 * 
 *  Contains the number of credits for the MAC port FIFOs used by the SLI. This value needs to be
 *  set BEFORE S2M traffic
 *  flow starts. A write to this register will cause the credit counts in the SLI for the MAC
 *  ports to be reset to the value
 *  in this register.
 * 
$SLI_MAC_CREDIT_CNT   Address=((0x11F0000013D70), (0x3D70))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:54> NS      RAZ     NS         NS         Reserved.                                         
 <53>    P1_C_D  R/W     0x1        0x1        When set does not allow writing of P1_CCNT.       
 <52>    P1_N_D  R/W     0x1        0x1        When set does not allow writing of P1_NCNT.       
 <51>    P1_P_D  R/W     0x1        0x1        When set does not allow writing of P1_PCNT.       
 <50>    P0_C_D  R/W     0x1        0x1        When set does not allow writing of P0_CCNT.       
 <49>    P0_N_D  R/W     0x1        0x1        When set does not allow writing of P0_NCNT.       
 <48>    P0_P_D  R/W     0x1        0x1        When set does not allow writing of P0_PCNT.       
 <47:40> P1_CCNT R/W/H   0x80       0x80       Port1 C-TLP FIFO Credits.                         
                                               Legal values are 0x25 to 0x80.
 <39:32> P1_NCNT R/W/H   0x10       0x10       Port1 N-TLP FIFO Credits.                         
                                               Legal values are 0x5 to 0x10.
 <31:24> P1_PCNT R/W/H   0x80       0x80       Port1 P-TLP FIFO Credits.                         
                                               Legal values are 0x25 to 0x80.
 <23:16> P0_CCNT R/W/H   0x80       0x80       Port0 C-TLP FIFO Credits.                         
                                               Legal values are 0x25 to 0x80.
 <15:8>  P0_NCNT R/W/H   0x10       0x10       Port0 N-TLP FIFO Credits.                         
                                               Legal values are 0x5 to 0x10.
 <7:0>   P0_PCNT R/W/H   0x80       0x80       Port0 P-TLP FIFO Credits.                         
                                               Legal values are 0x25 to 0x80.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_S2M_PORT_CTL
 * 
 *  SLI_S2M_PORT@_CTL = SLI's S2M Port 0 Control
 *  Contains control for access from SLI to a MAC port.
 *  Writes to this register are not ordered with writes/reads to the MAC Memory space.
 *  To ensure that a write has completed the user must read the register before
 *  making an access(i.e. MAC memory space) that requires the value of this register to be
 *  updated.
 * 
$SLI_S2M_PORT(0..2)_CTL   Address=((0x11F0000013D80+a*0x10), (0x3D80+a*0x10))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:5>  NS     RAZ     NS         NS         Reserved.                                         
 <4>     WIND_D R/W     NS         NS         When set '1' disables access to the Window        
                                              Registers from the MAC-Port.
                                              When Authenticate-Mode is set the reset value of
                                              this field is "1" else "0'.
 <3>     BAR0_D R/W     NS         NS         When set '1' disables access from MAC to          
                                              BAR-0 address offsets: Less Than 0x330,
                                              0x3CD0, and greater than 0x3D70 excluding
                                              0x3e00.
                                              When Authenticate-Mode is set the reset value of
                                              this field is "1" else "0'.
 <2:0>   MRRS   R/W     0x2        0x2        Max Read Request Size                             
                                                0 = 128B
                                                1 = 256B
                                                2 = 512B
                                                3 = 1024B
                                                4 = 2048B
                                                5-7 = Reserved
                                              This field should not exceed the desired
                                              max read request size. This field is used to
                                              determine if an IOBDMA is too large.
                                              For a PCIe MAC, this field should not exceed
                                              PCIE*_CFG030[MRRS].
                                              For a sRIO MAC, this field should indicate a size
                                              of 256B or smaller.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * SLI_MAC_CREDIT_CNT2 = SLI MAC Credit Count2
 * 
 *  Contains the number of credits for the MAC port FIFOs (for MACs 2 and 3) used by the SLI. This
 *  value needs to be set BEFORE S2M traffic
 *  flow starts. A write to this register will cause the credit counts in the SLI for the MAC
 *  ports to be reset to the value
 *  in this register.
 * 
$SLI_MAC_CREDIT_CNT2   Address=((0x11F0000013E10), (0x3E10))   Bus=(NCB, PEXP)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:54> NS      RAZ     NS         NS         Reserved.                                         
 <53>    P3_C_D  R/W     0x1        0x1        When set does not allow writing of P3_CCNT.       
 <52>    P3_N_D  R/W     0x1        0x1        When set does not allow writing of P3_NCNT.       
 <51>    P3_P_D  R/W     0x1        0x1        When set does not allow writing of P3_PCNT.       
 <50>    P2_C_D  R/W     0x1        0x1        When set does not allow writing of P2_CCNT.       
 <49>    P2_N_D  R/W     0x1        0x1        When set does not allow writing of P2_NCNT.       
 <48>    P2_P_D  R/W     0x1        0x1        When set does not allow writing of P2_PCNT.       
 <47:40> P3_CCNT R/W/H   0x80       0x80       Port3 C-TLP FIFO Credits.                         
                                               Legal values are 0x25 to 0x80.
 <39:32> P3_NCNT R/W/H   0x10       0x10       Port3 N-TLP FIFO Credits.                         
                                               Legal values are 0x5 to 0x10.
 <31:24> P3_PCNT R/W/H   0x80       0x80       Port3 P-TLP FIFO Credits.                         
                                               Legal values are 0x25 to 0x80.
 <23:16> P2_CCNT R/W/H   0x80       0x80       Port2 C-TLP FIFO Credits.                         
                                               Legal values are 0x25 to 0x80.
 <15:8>  P2_NCNT R/W/H   0x10       0x10       Port2 N-TLP FIFO Credits.                         
                                               Legal values are 0x5 to 0x10.
 <7:0>   P2_PCNT R/W/H   0x80       0x80       Port2 P-TLP FIFO Credits.                         
                                               Legal values are 0x25 to 0x80.
-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the tim.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

 * 
 * TIM_REG_FLAGS
 * 
 *  
 * 
$TIM_REG_FLAGS   Address=(0x1180058000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:3>  NS      RAZ     NS         NS         RESERVED                                          
 <2>     RESET   RAZ     0x0        0x0        Reset oneshot pulse for free-running structures   
 <1>     ENA_DWB R/W     0x0        0x0        Enables non-zero DonwWriteBacks when set          
                                               When set, enables the use of
                                               DontWriteBacks during the buffer freeing
                                               operations.
 <0>     ENA_TIM R/W     0x0        0x0        Enables the TIM section when set                  
                                               When set, TIM is in normal operation.
                                               When clear, time is effectively stopped for all
                                               rings in TIM.

Notes:
TIM has a counter that causes a periodic tick every 1024 cycles. This counter is shared by all
rings. (Each tick causes the HW to decrement the time offset (i.e. COUNT) for all enabled
rings.)
When ENA_TIM==0, the HW stops this shared periodic counter, so there are no more ticks, and
there
are no more new bucket traversals (for any ring).
If ENA_TIM transitions 1->0, TIM will no longer create new bucket traversals, but there may
have been previous ones. If there are ring bucket traversals that were already pending but
not currently active (i.e. bucket traversals that need to be done by the HW, but haven't been
yet)
during this ENA_TIM 1->0 transition, then these bucket traversals will remain pending until
ENA_TIM is later set to one. Bucket traversals that were already in progress will complete
after the 1->0 ENA_TIM transition, though.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * TIM_REG_READ_IDX
 * 
 *  
 * 
$TIM_REG_READ_IDX   Address=(0x1180058000008)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         RESERVED                                          
 <15:8>  INC   R/W     0x0        0x0        Increment to add to current index for next index  
 <7:0>   INDEX R/W     0x0        0x0        Index to use for next memory CSR read             

Notes:
Provides the read index during a CSR read operation to any of the CSRs that are physically
stored
as memories.  The names of these CSRs begin with the prefix "TIM_MEM_".
IDX[7:0] is the read index.  INC[7:0] is an increment that is added to IDX[7:0] after any CSR
read.
The intended use is to initially write this CSR such that IDX=0 and INC=1.  Then, the entire
contents of a CSR memory can be read with consecutive CSR read commands.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * TIM_REG_BIST_RESULT
 * 
 *  
 * 
$TIM_REG_BIST_RESULT   Address=(0x1180058000080)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS    RAZ     NS         NS         RESERVED                                          
 <3:2>   STA   RO      NS         0x0        BiST result of the STA   memories (0=pass, !0=fail)
 <1>     NCB   RO      NS         0x0        BiST result of the NCB   memories (0=pass, !0=fail)
 <0>     CTL   RO      NS         0x0        BiST result of the CTL   memories (0=pass, !0=fail)

Notes:
Access to the internal BiST results
Each bit is the BiST result of an individual memory (per bit, 0=pass and 1=fail).

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * TIM_REG_ERROR
 * 
 *  
 * 
$TIM_REG_ERROR   Address=(0x1180058000088)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         RESERVED                                          
 <15:0>  MASK  R/W1C/H 0x0        0x0        Bit mask indicating the rings in error            

Notes:
A ring is in error if its interval has elapsed more than once without having been serviced.
During a CSR write to this register, the write data is used as a mask to clear the selected
mask
bits (mask'[15:0] = mask[15:0] & ~write_data[15:0]).

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * TIM_REG_INT_MASK
 * 
 *  
 *  Attribute: -dv_fc_scratch=ALL.
 * 
$TIM_REG_INT_MASK   Address=(0x1180058000090)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:16> NS    RAZ     NS         NS         RESERVED                                          
 <15:0>  MASK  R/W/H   0x0        0x0        Bit mask corresponding to TIM_REG_ERROR.MASK above

Notes:
Note that this CSR is present only in chip revisions beginning with pass2.
When mask bit is set, the interrupt is enabled.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * TIM_MEM_RING0
 * 
 *  
 * 
$TIM_MEM_RING0   Address=(0x1180058001000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:55> NS    RAZ     NS         NS         RESERVED                                          
 <54:24> BASE  R/W/H   0x0        0x0        Pointer[35:5] to bucket[0]                        
 <23:4>  BSIZE R/W/H   0x0        0x0        Number of buckets - 1                             
 <3:0>   RID   R/W/H   0x0        0x0        Ring ID                                           

Notes:
TIM_MEM_RING0 must not be written for a ring when TIM_MEM_RING1[ENA] is set for the ring.
Every write to TIM_MEM_RING0 clears the current bucket for the ring. (The current bucket is
readable via TIM_MEM_DEBUG2[BUCKET],TIM_MEM_DEBUG1[BUCKET].)
BASE is a 32-byte aligned pointer[35:0].  Only pointer[35:5] are stored because pointer[4:0] =
0.
This CSR is a memory of 16 entries, and thus, the TIM_REG_READ_IDX CSR must be written before
any
CSR read operations to this address can be performed.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * TIM_MEM_RING1
 * 
 *  
 * 
$TIM_MEM_RING1   Address=(0x1180058001008)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:43> NS       RAZ     NS         NS         RESERVED                                          
 <42>    ENA      R/W/H   0x0        0x0        Ring timer enable                                 
                                                When clear, the ring is disabled and TIM
                                                will not traverse any new buckets for the ring.
 <41:39> CPOOL    R/W/H   0x0        0x0        Free list used to free chunks                     
 <38:26> CSIZE    R/W/H   0x0        0x0        Number of words per chunk                         
 <25:4>  INTERVAL R/W/H   0x0        0x0        Timer interval - 1, measured in 1024 cycle ticks  
 <3:0>   RID      R/W/H   0x0        0x0        Ring ID                                           

Notes:
After a 1->0 transition on ENA, the HW will still complete a bucket traversal for the ring
if it was pending or active prior to the transition. (SW must delay to ensure the completion
of the traversal before reprogramming the ring.)
Every write to TIM_MEM_RING1 resets the current time offset for the ring to the INTERVAL
value.
(The current time offset for the ring is readable via TIM_MEM_DEBUG0[COUNT].)
CSIZE must be at least 16.  It is illegal to program CSIZE to a value that is less than 16.
This CSR is a memory of 16 entries, and thus, the TIM_REG_READ_IDX CSR must be written before
any
CSR read operations to this address can be performed.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * TIM_MEM_DEBUG0
 * 
 *  
 * 
$TIM_MEM_DEBUG0   Address=(0x1180058001100)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ     NS         NS         RESERVED                                          
 <47>    ENA      RO/H    NS         0x0        Ring timer enable                                 
 <46>    NS       RAZ     NS         NS         RESERVED                                          
 <45:24> COUNT    RO/H    NS         0x0        Time offset for the ring                          
                                                Set to INTERVAL and counts down by 1 every 1024
                                                cycles when ENA==1. The HW forces a bucket
                                                traversal (and resets COUNT to INTERVAL) whenever
                                                the decrement would cause COUNT to go negative.
                                                COUNT is unpredictable whenever ENA==0.
                                                COUNT is reset to INTERVAL whenever TIM_MEM_RING1
                                                is written for the ring.
 <23:22> NS       RAZ     NS         NS         RESERVED                                          
 <21:0>  INTERVAL RO/H    NS         0x0        Timer interval - 1                                

Notes:
Internal per-ring state intended for debug use only tim.ctl[47:0]
This CSR is a memory of 16 entries, and thus, the TIM_REG_READ_IDX CSR must be written before
any
CSR read operations to this address can be performed.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * TIM_MEM_DEBUG1
 * 
 *  
 * 
$TIM_MEM_DEBUG1   Address=(0x1180058001108)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:51> BUCKET RO/H    NS         0x0        Current bucket[12:0]                              
                                              Reset to 0 whenever TIM_MEM_RING0 is written for
                                              the ring. Incremented (modulo BSIZE) once per
                                              bucket traversal.
                                              See TIM_MEM_DEBUG2[BUCKET].
 <50:20> BASE   RO/H    NS         0x0        Pointer[35:5] to bucket[0]                        
 <19:0>  BSIZE  RO/H    NS         0x0        Number of buckets - 1                             

Notes:
Internal per-ring state intended for debug use only tim.sta[63:0]
This CSR is a memory of 16 entries, and thus, the TIM_REG_READ_IDX CSR must be written before
any
CSR read operations to this address can be performed.

-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * TIM_MEM_DEBUG2
 * 
 *  
 * 
$TIM_MEM_DEBUG2   Address=(0x1180058001110)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:24> NS     RAZ     NS         NS         RESERVED                                          
 <23:21> CPOOL  RO/H    NS         0x0        Free list used to free chunks                     
 <20:8>  CSIZE  RO/H    NS         0x0        Number of words per chunk                         
 <7>     NS     RO/H    NS         0x0        RESERVED                                          
 <6:0>   BUCKET RO/H    NS         0x0        Current bucket[19:13]                             
                                              See TIM_MEM_DEBUG1[BUCKET].

Notes:
Internal per-ring state intended for debug use only tim.sta[95:64]
This CSR is a memory of 16 entries, and thus, the TIM_REG_READ_IDX CSR must be written before
any
CSR read operations to this address can be performed.

-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the usbdrd.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

The USBDRD controller implements three kinds of CSRs:
  * UCTL RSL-type registers: 2KB starting at address    0x1_1800_6800_0000
  * UAHC NCB-type registers: 1MB starting at address    0x1_6800_0000_0000
  * UPHY indirect registers: indirect access via the UCTL_PORT*_CR_DBG_*
    registers. (See Synopsys PHY databook for details)
Note: These address examples are for instance 0.

== UCTL ==================================================

UCTL registers are only accessible via RSL. They generally contain basic
clock controls, resets, and static configuration bits for the entire USB
subsystem. UCTL registers support 64-bit register accesses.

Note that UCTL registers starting from 0x30 can be accessed only
after HCLK is enabled and UCTL_RST is deasserted.

Undefined offsets in the UCTL register region will return
64'hFFFFFFFF_FFFFFFFF on reads, writes will have no side-effects.
No addresses should alias.

The UCTL registers are big-endian.

== UAHC =================================================

UAHC registers are implemented by the Host Controller,
access is provided to these registers over RSL or NCB. The only registers
that may require the high-performance NCB path are the HOST-mode XHCI
Runtime registers, and DEVICE-mode EVENT registers.
UAHC registers only support 64-bit or 32-bit accesses.
Note that the CSR_ENDIAN_MODE setting only applies to UAHC registers
accessed over NCB.

Access to the UAHC registers follows the same rules as registers 0x30 to 0xF8
of the UCTL. In other words, HCLK must be enabled, UCTL_RST must be deasserted.

The UAHC registers require 1MB of address space. The interior mapping is:
  Offset                Register Type
  0x0_0000 - 0x0_7FFF   XHCI Registers (X* prefix)
    0x0000 - 0x001f       XHCI Capability Registers
    0x0020 - 0x005f       Operational Registers
    0x0420 - 0x043f       Port Registers
    0x0440 - 0x0443       Runtime Registers
    0x0460 - 0x047f       Interrupt Registers
    0x0480 - 0x0583       Doorbell Registers
    0x0880 - 0x08af       XHCI Extended Capabilities
  0x0_C100 - 0x0_C6FF   Global Registers (G* prefix)
  0x4_0000 - 0x7_FFFF   Internal RAM 0 Debug Access
  0x8_0000 - 0xB_FFFF   Internal RAM 1 Debug Access
  0xC_0000 - 0xF_FFFF   Internal RAM 2 Debug Access

For more information about the "XHCI Registers", see the XHCI specification.

UAHC registers may also be accessed by presenting an NCB-type address over
RSL. Registers accessed this way are statically mapped from UAHC's
little-endian mode to the RSL's big-endian.

== UPHY =================================================

The USB PHYs have control and status registers accessible via an indirect
mechanism using the UCTL.PORT*_CR_DBG_* registers. For more information,
see the PHY Databook.
INTERNAL: Due to the nature of the XHCI drivers, it's likely that all register accesses from XHCI
will go over NCB.
          For more on "Global Registers", see Synopsys DWC_usb3 Host Controller Databook v2.50a
sections 6.1.3 and 6.2.
          For more on XHCI registers, see Synopsys DWC_usb3 Host Controller Databook v2.50a
sections 6.1.5 and 6.4.
 * 
 * USBDRD_UAHC_DGCMD_CMDTYPE_E
 * 
 *  Commands for USBDRD(0..1)_UAHC_DGCMD[CMDTYPE].
 *  Any command encodings that are not present are considered Reserved.
 *  INTERNAL: Synopsys DWC_usb3 Databook v2.50a, section 6.3.1.6.1 for details.
 *
 *  Attribute: -width=8.
 * 
$USBDRD_UAHC_DGCMD_CMDTYPE_E
-----------------------------------------------------------------------------------------------------------------------------------
 Value                  Name                               Description    
-----------------------------------------------------------------------------------------------------------------------------------
 0x2                    SET_PERIODIC_PARAMETERS            Allows the software to program the periodic parameters.
                                                           USBDRD(0..1)_UAHC_DGCMDPAR[9:0] = Software should set this to the same value programmed
                                                           by the host through the Set SEL device request, in microseconds.
                                                           The Set SEL control transfer has 6 bytes of data and contains 4 values; Refer to the USB
                                                           3.0 spec, Section 9.4.12.
                                                           Offset Name  Meaning
                                                           0      U1SEL Time in s for U1 System Exit Latency
                                                           1      U1PEL Time in s for U1 Device to Host Exit Latency
                                                           2      U2SEL Time in s for U2 System Exit Latency
                                                           4      U2PEL Time in s for U2 Device to Host Exit Latency
                                                           If the device is enabled for U1 and U2, then the U2PEL should be programmed. If the device
                                                           is enabled only for U1, then U1PEL should be programmed into this parameter.
                                                           If the value is greater than 125us, then the software must program a value of zero into
                                                           this register.
 0x4                    SET_SCRATCHPAD_BUFFER_ARRAY_ADDR_L This command sets bits [31:0] of the external address of the scratchpad buffer
                                                           array used for save/restore to the value in USBDRD(0..1)_UAHC_DGCMDPAR.
                                                           If either this command or SET_SCRATCHPAD_BUFFER_ARRAY_ADDR_H is issued while the
                                                           controller is stopped (USBDRD(0..1)_UAHC_DCTL[RS]=0), the
                                                           USBDRD(0..1)_UAHC_DGCMD[CMDIOC] bit must be set to 0.
                                                           The device scratchpad buffer array has the same format as the xHCI scratchpad buffer
                                                           array; it contains an array of 64-bit pointers to data buffers that will be used to
                                                           save the controller's state.
 0x5                    SET_SCRATCHPAD_BUFFER_ARRAY_ADDR_H This command sets bits [63:32] of the external address of the scratchpad buffer
                                                           array used for save/restore to the value in USBDRD(0..1)_UAHC_DGCMDPAR.
                                                           If either this command or SET_SCRATCHPAD_BUFFER_ARRAY_ADDR_L is issued while the
                                                           controller is stopped (USBDRD(0..1)_UAHC_DCTL[RS]=0), the
                                                           USBDRD(0..1)_UAHC_DGCMD[CMDIOC] bit must be set to 0.
                                                           The device scratchpad buffer array has the same format as the xHCI scratchpad buffer
                                                           array; it contains an array of 64-bit pointers to data buffers that will be used to
                                                           save the controller's state.
 0x7                    TRANSMIT_DEVICE_NOTIFICATION       This command allows any device notification to be transmitted, using the notification type
                                                           and notification parameters specified in the DGCMDPAR register.
                                                             USBDRD(0..1)_UAHC_DGCMDPAR[3:0]  = Notification Type
                                                             USBDRD(0..1)_UAHC_DGCMDPAR[31:4] = Notification parameters, depends on the notification
                                                           type
                                                           For example, to transmit a Function Wake, software sets USBDRD(0..1)_UAHC_DGCMDPAR[3:0] to
                                                           1, and USBDRD(0..1)_UAHC_DGCMDPAR[10:4] to the Interface Number.
                                                           
                                                           This field relates to the Notification Type Specific field in a Device Notification
                                                           Transaction Packet as described in Section 8.5.6 of the USB3 Specification. The
                                                           following bits of the DGCMDPAR register have been put into the corresponding
                                                           DWORD described in Section 8.5.6 of the USB3 Specification:
                                                             USBDRD(0..1)_UAHC_DGCMDPAR[3:0]   into DWORD 1[7:4]  (Notification Type)
                                                             USBDRD(0..1)_UAHC_DGCMDPAR[27:4]  into DWORD 1[31:8] (Notification Type Specific)
                                                             USBDRD(0..1)_UAHC_DGCMDPAR[31:28] into DWORD 2[3:0]  (Notification Type Specific)
                                                           There is one exception for the Bus Interval Adjustment Device Notification:
                                                           USBDRD(0..1)_UAHC_DGCMDPAR[19:4] represents the Bus Interval Adjustment field; however,
                                                           in the USB3 specification, the Bus Interval Adjustment field is actually at 31:16 of DWORD
                                                           1.
                                                           In the case of Host Role Request, USBDRD(0..1)_UAHC_DGCMDPAR[3:0] = 4, and
                                                           USBDRD(0..1)_UAHC_DGCMDPAR[5:4] = RSP Phase.
 0x9                    SELECTED_FIFO_FLUSH                Flush the selected FIFO.
                                                           USBDRD(0..1)_UAHC_DGCMDPAR[4:0] = FIFO Number.
                                                           USBDRD(0..1)_UAHC_DGCMDPAR[5]   = 1 for TX FIFO and 0 for RX FIFO.
 0xA                    ALL_FIFO_FLUSH                     Flush all FIFOs.
                                                           This command does not use the USBDRD(0..1)_UAHC_DGCMDPAR field.
 0xC                    SET_ENDPOINT_NRDY                  Issuing this command will make the core think that the given endpoint is in an NRDY state.
                                                           If there are buffers available in that endpoint, the core will immediately transmit an
                                                           ERDY.
                                                           USBDRD(0..1)_UAHC_DGCMDPAR[4:0] = Physical Endpoint Number
 0x10                   RUN_SOC_BUS_LOOPBACK_TEST          When enabled, executes an SoC Bus Loopback test, which allows the data flow from transmit
                                                           to receive to be tested without any connection to a PHY.
                                                           1. Configure EP0 as a non-stream capable Bulk OUT endpoint with the desired MaxPacketSize.
                                                           2. Configure EP1 as a non-stream capable Bulk IN endpoint assigned to Tx-FIFO 0 with the
                                                              desired MaxPacketSize.
                                                           3. Issue this command with Parameter[0] set to '1', enabling Loopback mode.
                                                           4. Issue Start Transfer to EP0.
                                                           5. Issue Start Transfer to EP1.
                                                           6. The core reads data from the IN buffers and writes it back to the OUT buffers.
                                                              The IN and OUT must have an equal amount of data buffer. The Tx-FIFO 0 default value of
                                                              66 should be changed to 130 for loopback mode.
                                                           USBDRD(0..1)_UAHC_DGCMDPAR[0] = When 1, enables Loopback mode. When 0, disables Loopback
                                                           mode.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UCTL_DMA_READ_CMD_E
 * 
 *  Enumerate IOI inbound command selections for DMA reads.
 *  Attribute: -width=1.
 * 
$USBDRD_UCTL_DMA_READ_CMD_E
-----------------------------------------------------------------------------------------------------------------------------------
 Value                  Name Description    
-----------------------------------------------------------------------------------------------------------------------------------
 0x0                    LDI Use LDI (allocate).
 0x1                    LDT Use LDT (no allocate).
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UCTL_ECC_ERR_SOURCE_E
 * 
 *  Enumerate sources of ECC error log information.
 *  Attribute: -width=4.
 * 
$USBDRD_UCTL_ECC_ERR_SOURCE_E
-----------------------------------------------------------------------------------------------------------------------------------
 Value                  Name     Description    
-----------------------------------------------------------------------------------------------------------------------------------
 0x0                    NONE     No error logged.
 0x5                    RAM2_SBE UAHC RAM2 single-bit error.
 0x6                    RAM1_SBE UAHC RAM1 single-bit error.
 0x7                    RAM0_SBE UAHC RAM0 single-bit error.
 0xD                    RAM2_DBE UAHC RAM2 double-bit error.
 0xE                    RAM1_DBE UAHC RAM1 double-bit error.
 0xF                    RAM0_DBE UAHC RAM0 double-bit error.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UCTL_ENDIAN_MODE_E
 * 
 *  Enumerate endian mode selections.
 *  Attribute: -width=2.
 * 
$USBDRD_UCTL_ENDIAN_MODE_E
-----------------------------------------------------------------------------------------------------------------------------------
 Value                  Name   Description    
-----------------------------------------------------------------------------------------------------------------------------------
 0x0                    LITTLE Core is in little-endian mode. A-B-C-D-E-F-G-H becomes
                               A-B-C-D-E-F-G-H. This is the mode to use with Open-Source XHCI drivers when the core is in
                               little-endian mode.
 0x1                    BIG    Core is in big-endian mode. A-B-C-D-E-F-G-H becomes
                               H-G-F-E-D-C-B-A (swap bytes within the 32-bit word, then swap 32-bit words within 64-bit
                               doubleword). This is the mode to use with Open-Source XHCI drivers when the core is in
                               big-endian mode.
 0x2                    RSVD2  Reserved. A-B-C-D-E-F-G-H becomes D-C-B-A-H-G-F-E.
 0x3                    RSVD3  Reserved. A-B-C-D-E-F-G-H becomes E-F-G-H-A-B-C-D.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UCTL_INTSN_E
 * 
 *  Enumerates the different generated interrupts.
 *  Attribute: -width=20.
 * 
$USBDRD_UCTL_INTSN_E
-----------------------------------------------------------------------------------------------------------------------------------
 Value                  Name                                 Description    
-----------------------------------------------------------------------------------------------------------------------------------
 0x68001+a*0x1000       USBDRD(0..1)_UCTL_INTSTAT_XS_NCB_OOB See USBDRD(0..1)_UCTL_INTSTAT[XS_NCB_OOB].
                                                             Attribute: -cib_rtl_module=usbdrd.
 0x68002+a*0x1000       USBDRD(0..1)_UCTL_INTSTAT_XM_BAD_DMA See USBDRD(0..1)_UCTL_INTSTAT[XM_BAD_DMA].
                                                             Attribute: -cib_rtl_module=usbdrd.
 0x68010+a*0x1000       USBDRD(0..1)_UCTL_INTSTAT_RAM0_SBE   See USBDRD(0..1)_UCTL_INTSTAT[RAM0_SBE].
                                                             Attribute: -cib_rtl_module=usbdrd.
 0x68011+a*0x1000       USBDRD(0..1)_UCTL_INTSTAT_RAM0_DBE   See USBDRD(0..1)_UCTL_INTSTAT[RAM0_DBE].
                                                             Attribute: -cib_rtl_module=usbdrd.
 0x68012+a*0x1000       USBDRD(0..1)_UCTL_INTSTAT_RAM1_SBE   See USBDRD(0..1)_UCTL_INTSTAT[RAM1_SBE].
                                                             Attribute: -cib_rtl_module=usbdrd.
 0x68013+a*0x1000       USBDRD(0..1)_UCTL_INTSTAT_RAM1_DBE   See USBDRD(0..1)_UCTL_INTSTAT[RAM1_DBE].
                                                             Attribute: -cib_rtl_module=usbdrd.
 0x68014+a*0x1000       USBDRD(0..1)_UCTL_INTSTAT_RAM2_SBE   See USBDRD(0..1)_UCTL_INTSTAT[RAM2_SBE].
                                                             Attribute: -cib_rtl_module=usbdrd.
 0x68015+a*0x1000       USBDRD(0..1)_UCTL_INTSTAT_RAM2_DBE   See USBDRD(0..1)_UCTL_INTSTAT[RAM2_DBE].
                                                             Attribute: -cib_rtl_module=usbdrd.
 0x68042+a*0x1000       USBDRD(0..1)_UCTL_UAHC_USBSTS_HSE    See USBDRD(0..1)_UAHC_USBSTS[HSE].
                                                             Attribute: -cib_rtl_module=usbdrd.
                                                             Attribute: -intsn_level_sensitive=1.
 0x68080+a*0x1000+b     USBDRD(0..1)_UCTL_UAHC_IMAN(0..0)_IP See USBDRD(0..1)_UAHC_IMAN(0..0)[IP].
                                                             Attribute: -cib_rtl_module=usbdrd.
                                                             Attribute: -intsn_level_sensitive=1.
 0x680C0+a*0x1000       USBDRD(0..1)_UCTL_UAHC_DEV_INT       See USBDRD(0..1)_UAHC_GEVNTCOUNT[EVNTCOUNT]
                                                             Attribute: -cib_rtl_module=usbdrd.
                                                             Attribute: -intsn_complex=1.
                                                             Attribute: -intsn_level_sensitive=1.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UCTL_XM_BAD_DMA_TYPE_E
 * 
 *  Enumerate type of DMA error seen.
 *  Attribute: -width=4.
 * 
$USBDRD_UCTL_XM_BAD_DMA_TYPE_E
-----------------------------------------------------------------------------------------------------------------------------------
 Value                  Name               Description    
-----------------------------------------------------------------------------------------------------------------------------------
 0x0                    NONE               No error logged.
 0x1                    ADDR_OOB           AxAddr<64:42> != 0x0.
 0x2                    LEN_GT_16          AxLen > 0xF.   
 0x3                    MULTIBEAT_BYTE     AxSize = 0x0 and AxLen != 0x0.
 0x4                    MULTIBEAT_HALFWORD AxSize = 0x1 and AxLen != 0x0.
 0x5                    MULTIBEAT_WORD     AxSize = 0x2 and AxLen != 0x0.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UCTL_CTL = UCTL Control Register
 * 
 *  Accessible by: always
 *  Reset by: IOI reset (srst_n)
 *  This register controls clocks, resets, power, and BIST for the USB.
 * 
$USBDRD(0..1)_UCTL_CTL   Address=(0x1180068000000+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field                 Field   Reset      Typical    Field                                             
 Pos     Name                  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    CLEAR_BIST            R/W     0x0        0x0        BIST fast-clear mode select.                      
                                                             There are 2 major modes of BIST: full and clear. Full BIST is run by the BIST state
                                                             machine when clear_bist is deasserted during BIST. Clear BIST is run if clear_bist is
                                                             asserted during BIST. A Clear BIST run will simply clear all entries in USBDRD RAMs to
                                                             0x0.
                                                             To avoid race conditions, software must first perform a CSR write operation that puts the
                                                             clear_bist setting into the correct state and then perform another CSR write operation to
                                                             set the BIST trigger (keeping the clear_bist state constant).
                                                             CLEAR BIST completion is indicated by USBDRD(0..1)_UCTL_BIST_STATUS[NDONE]. A BIST clear
                                                             operation takes almost 2,000 host-controller-clock cycles for the largest RAM.
 <62>    START_BIST            R/W     0x0        0x0        Rising edge starts BIST on the memories in USBDRD.
                                                             To run BIST, both the host-controller clock must be configured and enabled, and should be
                                                             configured to the maximum available frequency given the available coprocessor clock and
                                                             dividers.
                                                             Also, the UCTL, UAHC, and UPHY should be held in software- initiated reset (using
                                                             UPHY_RST, UAHC_RST, UCTL_RST) until BIST is complete.
                                                             BIST defect status can be checked after FULL BIST completion, both of which are indicated
                                                             in USBDRD(0..1)_UCTL_BIST_STATUS. The full BIST run takes almost 80,000 host-controller-
                                                             clock cycles for the largest RAM.
 <61:60> REF_CLK_SEL           R/W     0x0        0x0        Choose reference clock source for the SuperSpeed and HighSpeed PLL blocks.
                                                               0x0 = Reference clock source for both PLLs is DLMC_REF_CLK0
                                                               0x1 = Reference clock source for both PLLs is DLMC_REF_CLK1
                                                               0x2 = Reference clock source for SuperSpeed PLL is DLMC_REF_CLK0,
                                                                     reference clock source for HighSpeed PLL is PLL_REF_CLK.
                                                               0x3 = Reference clock source for SuperSpeed PLL is DLMC_REF_CLK1,
                                                                     reference clock source for HighSpeed PLL is PLL_REF_CLK.
                                                             The DLMC_REF_CLK*'s are the shared reference clocks from the SERDES blocks.
                                                             The PLL_REF_CLK is a 50MHz reference clock from an on-chip PLL.
                                                             This value can be changed only during UPHY_RST.
                                                             Note: If REF_CLK_SEL = 0x0 or 0x1, then the DLMC_REF_CLK* input chosen
                                                             cannot be spread-spectrum.
 <59>    SSC_EN                R/W     0x1        0x1        Enables spread-spectrum clock production in the SuperSpeed function.
                                                             If the DLMC_REF_CLK* inputs are already spread-spectrum, then do not enable this feature.
                                                             The clocks sourced to the SuperSpeed function must have spread-spectrum to be compliant
                                                             with the USB specification.
                                                             This value may only be changed during UPHY_RST.
 <58:56> SSC_RANGE             R/W     0x0        0x0        Selects the range of spread spectrum modulation when ssc_en is asserted and the PHY is
                                                             spreading the SuperSpeed transmit clocks.
                                                             Applies a fixed offset to the phase accumulator.
                                                               0x0 : -4980 ppm downspread of clock
                                                               0x1 : -4492 ppm
                                                               0x2 : -4003 ppm
                                                               others: reserved
                                                             All of these settings are within the USB 3.0 specification.
                                                             The amount of EMI emission reduction might decrease as the
                                                             SSC_RANGE increases; therefore, the SSC_RANGE settings can
                                                             be registered to enable the amount of spreading to be adjusted
                                                             on a per-application basis.
                                                             This value may only be changed during UPHY_RST.
 <55:47> SSC_REF_CLK_SEL       R/W     0x0        0x0        Enables non-standard oscillator frequencies to generate targeted MPLL output rates. Input
                                                             corresponds to the frequency-synthesis coefficient.
                                                             [55:53]: modulus - 1,
                                                             [52:47]: 2's complement push amount
                                                             A value of 0x0 means this feature is disabled.
                                                             The legal values are:
                                                               If REF_CLK_SEL = 0x0 or 0x1, then:
                                                                 0x0 is the only legal value.
                                                               If REF_CLK_SEL = 0x2 or 0x3, then:
                                                                 0x0:   if DLMC_REF_CLK* is another supported frequency (see list in
                                                                        MPLL_MULTIPLIER description).
                                                             All other values are reserved.
                                                             This value may only be changed during UPHY_RST.
                                                             Note: If REF_CLK_SEL = 0x2 or 0x3, then MPLL_MULTPLIER, REF_CLK_DIV2, and SSC_REF_CLK_SEL
                                                             must all be programmed to the same frequency setting.
                                                               INTERNAL: If REF_CLK_SEL = 0x0 or 0x1, then:
                                                                           0x0 is the only legal value.
                                                                         If REF_CLK_SEL = 0x2 or 0x3, then:
                                                                           0x108: if DLMC_REF_CLK* is 19.2MHz, 24MHz, 26MHz, 38.4MHz, 48MHz,
                                                                                             52MHz, 76.8MHz, 96MHz, 104MHz.
                                                                           0x0:   if DLMC_REF_CLK* is another supported frequency (see list in
                                                                                  MPLL_MULTIPLIER description).
 <46:40> MPLL_MULTIPLIER       R/W     0x19       0x19       Multiplies the reference clock to a frequency suitable for intended operating speed. The
                                                             legal values are:
                                                               If REF_CLK_SEL = 0x0 or 0x1, then:
                                                                 0x19 = 100  MHz on DLMC_REF_CLK*
                                                               If REF_CLK_SEL = 0x2 or 0x3, then:
                                                                 0x32 =  50  MHz on DLMC_REF_CLK*
                                                                 0x19 =  100 MHz on DLMC_REF_CLK*
                                                                 0x28 =  125 MHz on DLMC_REF_CLK*
                                                             All other values are reserved.
                                                             This value may only be changed during UPHY_RST.
                                                             Note: If REF_CLK_SEL = 0x2 or 0x3, then MPLL_MULTPLIER, REF_CLK_DIV2, and SSC_REF_CLK_SEL
                                                             must all be programmed to the same frequency setting.
                                                               INTERNAL: If REF_CLK_SEL = 0x0 or 0x1, then:
                                                                            0x19 = 100  MHz on DLMC_REF_CLK*
                                                                            0x68 =  24  MHz on DLMC_REF_CLK*
                                                                            0x7D =  20  MHz on DLMC_REF_CLK*
                                                                            0x02 =  19.2MHz on DLMC_REF_CLK*
                                                                         If REF_CLK_SEL = 0x2 or 0x3, then:
                                                                            0x02 =  19.2MHz on DLMC_REF_CLK*
                                                                            0x7D =  20  MHz on DLMC_REF_CLK*
                                                                            0x68 =  24  MHz on DLMC_REF_CLK*
                                                                            0x64 =  25  MHz on DLMC_REF_CLK*
                                                                            0x60 =  26  MHz on DLMC_REF_CLK*
                                                                            0x41 =  38.4MHz on DLMC_REF_CLK*
                                                                            0x7D =  40  MHz on DLMC_REF_CLK*
                                                                            0x34 =  48  MHz on DLMC_REF_CLK*
                                                                            0x32 =  50  MHz on DLMC_REF_CLK*
                                                                            0x30 =  52  MHz on DLMC_REF_CLK*
                                                                            0x41 =  76.8MHz on DLMC_REF_CLK*
                                                                            0x1A =  96  MHz on DLMC_REF_CLK*
                                                                            0x19 =  100 MHz on DLMC_REF_CLK*
                                                                            0x30 =  104 MHz on DLMC_REF_CLK* if REF_CLK_DIV2 = 0x1
                                                                            0x18 =  104 MHz on DLMC_REF_CLK* if REF_CLK_DIV2 = 0x0
                                                                            0x28 =  125 MHz on DLMC_REF_CLK*
                                                                            0x19 =  200 MHz on DLMC_REF_CLK*
 <39>    REF_SSP_EN            R/W     0x0        0x1        Enables reference clock to the prescaler for SuperSpeed function. This should always be
                                                             enabled since this output clock is used to drive the UAHC suspend-mode clock during
                                                             low-power states.
                                                             This value can be changed only during UPHY_RST or during low-power states.
                                                             The reference clock must be running and stable before UPHY_RST is deasserted, and
                                                             before REF_SSP_EN is asserted.
 <38>    REF_CLK_DIV2          R/W     0x0        0x0        Divides the reference clock by 2 before feeding it into the REF_CLK_FSEL divider.
                                                             The legal values are:
                                                               If REF_CLK_SEL = 0x0 or 0x1, then:
                                                                 all DLMC_REF_CLK* frequencies: 0x0 is the only legal value.
                                                               If REF_CLK_SEL = 0x2 or 0x3, then:
                                                                 0x1: if DLMC_REF_CLK* is 125MHz.
                                                                 0x0: if DLMC_REF_CLK* is another supported frequency (see list in
                                                                      MPLL_MULTIPLIER description).
                                                             This value can be changed only during UPHY_RST.
                                                             Note: If REF_CLK_SEL = 0x2 or 0x3, then MPLL_MULTPLIER, REF_CLK_DIV2, and SSC_REF_CLK_SEL
                                                             must all be programmed to the same frequency setting.
                                                               INTERNAL: If REF_CLK_SEL = 0x0 or 0x1, then:
                                                                           all DLMC_REF_CLK* frequencies: 0x0 is the only legal value.
                                                                         If REF_CLK_SEL = 0x2 or 0x3, then:
                                                                           0x1: if DLMC_REF_CLK* is 125MHz.
                                                                           0x1: if DLMC_REF_CLK* is 40MHz, 76.8MHz, or 200MHz.
                                                                           0x0 or 0x1 if DLMC_REF_CLK* is 104MHz (depending on MPLL_MULTIPLIER setting)
                                                                           0x0: if DLMC_REF_CLK* is another supported frequency (see list in
                                                                                MPLL_MULTIPLIER description).
 <37:32> REF_CLK_FSEL          R/W     0x27       0x27       Selects the reference clock frequency for the SuperSpeed and HighSpeed PLL blocks.
                                                             The legal values are:
                                                               If REF_CLK_SEL = 0x0 or 0x1, then:
                                                                 0x27 = 100  MHz on DLMC_REF_CLK*
                                                               If REF_CLK_SEL = 0x2 or 0x3, then:
                                                                 0x07 is the only legal value.
                                                             All other values are reserved.
                                                             This value may only be changed during UPHY_RST.
                                                             Note: When REF_CLK_SEL = 0x2 or 0x3, the MPLL_MULTIPLIER, REF_CLK_DIV2, and
                                                             SSC_REF_CLK_SEL settings are used to configure the SuperSpeed reference clock
                                                             multiplier.
                                                               INTERNAL: If REF_CLK_SEL = 0x0 or 0x1, then:
                                                                           0x27 = 100  MHz on DLMC_REF_CLK*
                                                                           0x2A =  24  MHz on DLMC_REF_CLK*
                                                                           0x31 =  20  MHz on DLMC_REF_CLK*
                                                                           0x38 =  19.2MHz on DLMC_REF_CLK*
                                                                         If REF_CLK_SEL = 0x2 or 0x3, then:
                                                                           0x07 is the only legal value.
 <31>    NS                    RAZ     NS         NS         Reserved.                                         
 <30>    H_CLK_EN              R/W     0x0        0x1        Hclk enable. When set to 1, the host-controller clock is generated. This
                                                             also enables access to UCTL registers 0x30-0xF8.
 <29>    H_CLK_BYP_SEL         R/W     0x0        0x0        Select the bypass input to the hclk divider.      
                                                             0 = use the divided coprocessor clock from the H_CLKDIV divider
                                                             1 = use the bypass clock from the GPIO pins
                                                             This signal is just a multiplexer-select signal; it does not enable the host-controller
                                                             clock. You must still set H_CLKDIV_EN separately. H_CLK_BYP_SEL select should not be
                                                             changed unless H_CLKDIV_EN is disabled.
                                                             The bypass clock can be selected and running even if the hclk dividers
                                                             are not running.
                                                             INTERNAL: Generally bypass is only used for scan purposes.
 <28>    H_CLKDIV_RST          R/W     0x1        0x0        Hclk divider reset. Divided clocks are not generated while the divider is
                                                             being reset.
                                                             This also resets the suspend-clock divider.
 <27>    NS                    RAZ     NS         NS         Reserved.                                         
 <26:24> H_CLKDIV_SEL          R/W     0x3        0x3        The hclk frequency is sclk frequency divided by H_CLKDIV_SEL.
                                                             The hclk frequency must be at or below 300MHz.
                                                             The hclk frequency must be at or above 150MHz for full-rate USB3
                                                             operation.
                                                             The hclk frequency must be at or above 125MHz for any USB3
                                                             functionality.
                                                             If DRD_MODE = DEVICE, the hclk frequency must be at or above 125MHz for
                                                             correct USB2 functionality.
                                                             If DRD_MODE = HOST, the hclk frequency must be at or above 90MHz
                                                             for full-rate USB2 operation.
                                                             If DRD_MODE = HOST, the hclk frequency must be at or above 62.5MHz
                                                             for any USB2 operation.
                                                             This field can be changed only when H_CLKDIV_RST = 1.
                                                             The divider values are the following:
                                                             0x0 = divide by 1 0x4 = divide by 8
                                                             0x1 = divide by 2 0x5 = divide by 16
                                                             0x2 = divide by 4 0x6 = divide by 24
                                                             0x3 = divide by 6 0x7 = divide by 32
                                                             INTERNAL: 150MHz is from the maximum of:
                                                                         Synopsys DWC_usb3 Databook v2.50a, table A-16, row 1, col 12.
                                                                         Synopsys DWC_usb3 Databook v2.50a, table A-17, row 7, col 9.
                                                                         Synopsys DWC_usb3 Databook v2.50a, table A-16, row 7, col 9.
                                                                       DEVICE>125MHz is from Synopsys DWC_usb3 Databook v2.50a, section A.12.4.
                                                                       HOST2>62.5MHz in HOST mode is from Synopsys DWC_usb3 Databook v2.50a,
                                                                         section A.12.5, 3rd bullet in Note on page 894.
                                                                       HOST2>90MHz was arrived at from some math: 62.5MHz +
                                                                         (diff between row 1 and 2, col 12 of table A-16).
 <23:22> NS                    RAZ     NS         NS         Reserved.                                         
 <21>    USB3_PORT_PERM_ATTACH R/W     0x0        0x0        Indicates this port is permanently attached. This is a strap signal; it should be modified
                                                             only when UPHY_RST is asserted.
 <20>    USB2_PORT_PERM_ATTACH R/W     0x0        0x0        Indicates this port is permanently attached. This is a strap signal; it should be modified
                                                             only when UPHY_RST is asserted.
 <19>    NS                    RAZ     NS         NS         Reserved.                                         
 <18>    USB3_PORT_DISABLE     R/W     0x0        0x0        Disables the USB3 (SuperSpeed) portion of this PHY. When set to 1, this signal stops
                                                             reporting connect/disconnect events on the port and keeps the port in disabled state. This
                                                             could be used for security reasons where hardware can disable a port regardless of whether
                                                             XHCI driver enables a port or not.
                                                             USBDRD(0..1)_UAHC_HCSPARAMS1[MAXPORTS] is not affected by this signal.
                                                             This is a strap signal; it should be modified only when UPHY_RST is asserted.
 <17>    NS                    RAZ     NS         NS         Reserved.                                         
 <16>    USB2_PORT_DISABLE     R/W     0x0        0x0        Disables USB2 (HighSpeed/FullSpeed/LowSpeed) portion of this PHY. When set to 1, this
                                                             signal stops reporting connect/disconnect events on the port and keeps the port in
                                                             disabled state. This could be used for security reasons where hardware can disable a port
                                                             regardless of whether XHCI driver enables a port or not.
                                                             USBDRD(0..1)_UAHC_HCSPARAMS1[MAXPORTS] is not affected by this signal.
                                                             This is a strap signal; it should only be modified when UPHY_RST is asserted.
                                                             If Port0 is required to be disabled, ensure that the utmi_clk[0] is running at the normal
                                                             speed. Also, all the enabled USB2.0 ports should have the same clock frequency as Port0.
 <15>    NS                    RAZ     NS         NS         Reserved.                                         
 <14>    SS_POWER_EN           R/W     0x0        0x1        PHY SuperSpeed block power enable.                
                                                             This is a strap signal; it should only be modified when UPHY_RST is asserted.
 <13>    NS                    RAZ     NS         NS         Reserved.                                         
 <12>    HS_POWER_EN           R/W     0x0        0x1        PHY HighSpeed block power enable                  
                                                             This is a strap signal; it should only be modified when UPHY_RST is asserted.
 <11:5>  NS                    RAZ     NS         NS         Reserved.                                         
 <4>     CSCLK_EN              R/W     0x0        0x1        Turns on the USB UCTL interface clock (coprocessor clock). This enables access to UAHC
                                                             registers via the IOI, as well as UCTL registers starting from 0x30 via the RSL bus.
 <3>     DRD_MODE              R/W     0x1        0x0        Switches between Host or Device mode for USBDRD.  
                                                              1 - Device
                                                              0 - Host
 <2>     UPHY_RST              R/W     0x0        0x0        PHY reset; resets UPHY; active-high.              
 <1>     UAHC_RST              R/W     0x0        0x0        Software reset; resets UAHC; active-high.         
                                                             INTERNAL: Note that soft-resetting the UAHC while it is active may cause violations of RSL
                                                             or NCB protocols.
 <0>     UCTL_RST              R/W     0x0        0x0        Software reset; resets UCTL; active-high.         
                                                             Resets UAHC DMA and register shims. Resets UCTL RSL registers 0x30-0xF8.
                                                             Does not reset UCTL RSL registers 0x0-0x28.
                                                             UCTL RSL registers starting from 0x30 can be accessed only after the host-controller clock
                                                             is active and UCTL_RST is deasserted.
                                                             INTERNAL: Note that soft-resetting the UCTL while it is active may cause violations of
                                                             RSL, NCB, and CIB protocols.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UCTL_BIST_STATUS = UCTL BIST Status Register
 * 
 *  Accessible by: always
 *  Reset by: IOI reset (srst_n)
 *  Results from BIST runs of USBDRD's memories.
 *  Wait for NDONE==0, then look at defect indication.
 * 
$USBDRD(0..1)_UCTL_BIST_STATUS   Address=(0x1180068000008+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field                 Field   Reset      Typical    Field                                             
 Pos     Name                  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:42> NS                    RAZ     NS         NS         Reserved.                                         
 <41>    UCTL_XM_R_BIST_NDONE  RO/H    0x1        0x0        BIST is not complete for the UCTL AxiMaster read-data FIFO.
 <40>    UCTL_XM_W_BIST_NDONE  RO/H    0x1        0x0        BIST is not complete for the UCTL AxiMaster write-data FIFO.
 <39:35> NS                    RAZ     NS         NS         Reserved.                                         
 <34>    UAHC_RAM2_BIST_NDONE  RO/H    0x1        0x0        BIST is not complete for the UAHC RxFIFO RAM (RAM2).
 <33>    UAHC_RAM1_BIST_NDONE  RO/H    0x1        0x0        BIST is not complete for the UAHC TxFIFO RAM (RAM1).
 <32>    UAHC_RAM0_BIST_NDONE  RO/H    0x1        0x0        BIST is not complete for the UAHC descriptor/register cache (RAM0).
 <31:10> NS                    RAZ     NS         NS         Reserved.                                         
 <9>     UCTL_XM_R_BIST_STATUS RO/H    0x0        0x0        BIST status of the UCTL AxiMaster read-data FIFO. 
 <8>     UCTL_XM_W_BIST_STATUS RO/H    0x0        0x0        BIST status of the UCTL AxiMaster write-data FIFO.
 <7:3>   NS                    RAZ     NS         NS         Reserved.                                         
 <2>     UAHC_RAM2_BIST_STATUS RO/H    0x0        0x0        BIST status of the UAHC RxFIFO RAM (RAM2).        
 <1>     UAHC_RAM1_BIST_STATUS RO/H    0x0        0x0        BIST status of the UAHC TxFIFO RAM (RAM1).        
 <0>     UAHC_RAM0_BIST_STATUS RO/H    0x0        0x0        BIST status of the UAHC descriptor/register cache (RAM0).
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UCTL_SPARE0 = UCTL Spare Register 0
 * 
 *  Accessible by: always
 *  Reset by: IOI reset (srst_n)
 *  This register is spare.
 *  Attribute: -dv_fc_scratch=ALL.
 * 
$USBDRD(0..1)_UCTL_SPARE0   Address=(0x1180068000010+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  SPARE R/W     0x0        NS         Spare.                                            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UCTL_INTSTAT = UCTL Interrupt Status Register
 * 
 *  Accessible by: always
 *  Reset by: IOI reset (srst_n)
 *  Summary of different bits of RSL interrupts.
 *  DBE's are detected. SBE's are corrected. For debugging output for ECC DBE/SBE's,
 *  see UCTL_ECC register.
 * 
$USBDRD(0..1)_UCTL_INTSTAT   Address=(0x1180068000030+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:30> NS         RAZ     NS         NS         Reserved.                                         
 <29:22> NS         RAZ     NS         NS         Reserved.                                         
 <21>    RAM2_DBE   R/W1C/H 0x0        0x0        Detected double-bit error on the UAHC RxFIFO RAMs (RAM2). Throws
                                                  USBDRD_UCTL_INTSN_E::USBDRD(0..1)_UCTL_INTSTAT_RAM2_DBE.
 <20>    RAM2_SBE   R/W1C/H 0x0        0x0        Detected single-bit error on the UAHC RxFIFO RAMs (RAM2). Throws
                                                  USBDRD_UCTL_INTSN_E::USBDRD(0..1)_UCTL_INTSTAT_RAM2_SBE.
 <19>    RAM1_DBE   R/W1C/H 0x0        0x0        Detected double-bit error on the UAHC TxFIFO RAMs (RAM1). Throws
                                                  USBDRD_UCTL_INTSN_E::USBDRD(0..1)_UCTL_INTSTAT_RAM1_DBE.
 <18>    RAM1_SBE   R/W1C/H 0x0        0x0        Detected single-bit error on the UAHC TxFIFO RAMs (RAM1). Throws
                                                  USBDRD_UCTL_INTSN_E::USBDRD(0..1)_UCTL_INTSTAT_RAM2_SBE.
 <17>    RAM0_DBE   R/W1C/H 0x0        0x0        Detected double-bit error on the UAHC Desc/Reg Cache (RAM0). Throws
                                                  USBDRD_UCTL_INTSN_E::USBDRD(0..1)_UCTL_INTSTAT_RAM0_DBE.
 <16>    RAM0_SBE   R/W1C/H 0x0        0x0        Detected single-bit error on the UAHC Desc/Reg Cache (RAM0). Throws
                                                  USBDRD_UCTL_INTSN_E::USBDRD(0..1)_UCTL_INTSTAT_RAM0_SBE.
 <15:3>  NS         RAZ     NS         NS         Reserved.                                         
 <2>     XM_BAD_DMA R/W1C/H 0x0        0x0        Detected bad DMA access from UAHC to IOI. Error information is logged in
                                                  USBDRD(0..1)_UCTL_SHIM_CFG[XM_BAD_DMA_*]. Received a DMA request from UAHC that violates
                                                  the assumptions made by the AXI-to-IOI shim. Such scenarios include: illegal length/size
                                                  combinations and address out-of-bounds.
                                                  For more information on exact failures, see description in
                                                  USBDRD(0..1)_UCTL_SHIM_CFG[XM_BAD_DMA_TYPE].
                                                  The hardware does not translate the request correctly and results may violate IOI
                                                  protocols.
                                                  Throws USBDRD_UCTL_INTSN_E::USBDRD(0..1)_UCTL_INTSTAT_XM_BAD_DMA.
 <1>     XS_NCB_OOB R/W1C/H 0x0        0x0        Detected out-of-bound register access to UAHC over IOI. The UAHC defines 1MB of register
                                                  space, starting at offset 0x0. Any accesses outside of this register space cause this bit
                                                  to be set to 1. Error information is logged in USBDRD(0..1)_UCTL_SHIM_CFG[XS_NCB_OOB_*].
                                                  Throws USBDRD_UCTL_INTSN_E::USBDRD(0..1)_UCTL_INTSTAT_XS_NCB_OOB.
 <0>     NS         RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UCTL_PORT_CFG_HS = UCTL Port Configuration Registers
 * 
 *  Accessible by: only when H_CLKDIV_EN
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UCTL_RST]
 *  This register controls configuration and test controls for the port@ PHY.
 * 
$USBDRD(0..1)_UCTL_PORT(0..0)_CFG_HS   Address=(0x1180068000040+a*0x1000000+b*0x20)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field                Field   Reset      Typical    Field                                             
 Pos     Name                 Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:58> NS                   RAZ     NS         NS         Reserved.                                         
 <57:55> COMP_DIS_TUNE        R/W     0x4        0x4        Disconnect threshold voltage. Adjusts the voltage level for the threshold used to detect a
                                                            disconnect event at the host.
                                                            A positive binary bit setting change results in a +1.5% incremental change in the
                                                            threshold voltage level, while a negative binary bit setting change results in a -1.5%
                                                            incremental change in the threshold voltage level.
 <54:52> SQ_RX_TUNE           R/W     0x3        0x3        Squelch threshold adjustment. Adjusts the voltage level for the threshold used to detect
                                                            valid HighSpeed data.
                                                            A positive binary bit setting change results in a -5% incremental change in threshold
                                                            voltage level, while a negative binary bit setting change results in a +5% incremental
                                                            change in threshold voltage level.
 <51:48> TX_FSLS_TUNE         R/W     0x3        0x3        FullSpeed/LowSpeed source impedance adjustment. Adjusts the LowSpeed and FullSpeed single-
                                                            ended source
                                                            impedance while driving high. This parameter control is encoded in thermometer code.
                                                            A positive thermometer code change results in a -2.5% incremental change in source
                                                            impedance. A negative thermometer code change results in +2.5% incremental change in
                                                            source impedance. Any non-thermometer code setting (that is, 0x9) is not supported and
                                                            reserved.
 <47:46> NS                   RAZ     NS         NS         Reserved.                                         
 <45:44> TX_HS_XV_TUNE        R/W     0x3        0x3        Transmitter HighSpeed crossover adjustment. This bus adjusts the voltage at which the DP0
                                                            and DM0 signals cross while transmitting in HighSpeed mode.
                                                            11 = default setting
                                                            10 = +15 mV
                                                            01 = -15 mV
                                                            00 = reserved
 <43:42> TX_PREEMP_AMP_TUNE   R/W     0x1        0x1        HighSpeed transmitter pre-emphasis current control. Controls the amount of current
                                                            sourced to DP0 and DM0 after a J-to-K or K-to-J transition. The HighSpeed transmitter
                                                            pre-emphasis current is defined in terms of unit amounts. One unit amount is approximately
                                                            600 A and is defined as 1* pre-emphasis current.
                                                            0x3 = HighSpeed TX pre-emphasis circuit sources 3* pre-emphasis current.
                                                            0x2 = HighSpeed TX pre-emphasis circuit sources 2* pre-emphasis current.
                                                            0x1 = HighSpeed TX pre-emphasis circuit sources 1* pre-emphasis current.
                                                            0x0 = HighSpeed TX pre-emphasis is disabled.
                                                            If these signals are not used, set them to 0x0.
 <41>    NS                   RAZ     NS         NS         Reserved.                                         
 <40>    TX_PREEMP_PULSE_TUNE R/W     0x0        0x0        HighSpeed transmitter pre-emphasis duration control. Controls the duration for which the
                                                            HighSpeed pre-emphasis current is sourced onto DP0 or DM0. The HighSpeed transmitter
                                                            pre-emphasis duration is defined in terms of unit amounts. One unit of pre-emphasis
                                                            duration is approximately 580 ps and is defined as 1* pre-emphasis duration. This signal
                                                            is valid only if either TX_PREEMP_AMP_TUNE0[1] or TX_PREEMP_AMP_TUNE0[0] is set to 1.
                                                            1 = 1*, short pre-emphasis current duration
                                                            0 = 2*, long pre-emphasis current duration (design default)
                                                            If this signal is not used, set it to 0.
 <39:38> TX_RES_TUNE          R/W     0x1        0x1        USB source-impedance adjustment. Some applications require additional devices to be added
                                                            on the USB, such as a series switch, which can add significant series resistance. This bus
                                                            adjusts the driver source impedance to compensate for added series resistance on the USB.
                                                              0x3: source impedence is decreased by approximately 4 ohms.
                                                              0x2: source impedence is decreased by approximately 2 ohms.
                                                              0x1: design default
                                                              0x0: source impedence is increased by approximately 1.5 ohms.
                                                            Note: Any setting other than the default can result in source-impedance variation across
                                                            process, voltage, and temperature conditions that does not meet USB 2.0 specification
                                                            limits. If this bus is not used, leave it at the default setting.
 <37:36> TX_RISE_TUNE         R/W     0x1        0x1        HighSpeed transmitter rise-/fall-time adjustment. Adjusts the rise/fall times of the
                                                            HighSpeed waveform. A positive binary bit setting change results in a -4% incremental
                                                            change in the HighSpeed rise/fall time. A negative binary bit setting change results in a
                                                            +4% incremental change in the HighSpeed rise/fall time.
 <35:32> TX_VREF_TUNE         R/W     0x3        0x3        HighSpeed DC voltage-level adjustment. Adjusts the HighSpeed DC level voltage.
                                                            A positive binary bit setting change results in a +2.0% incremental change in HighSpeed
                                                            DC voltage level, while a negative binary bit setting change results in a -2.0%
                                                            incremental change in HighSpeed DC voltage level.
                                                            The default bit setting is intended to create a HighSpeed transmit
                                                            DC level of approximately 400mV.
 <31:7>  NS                   RAZ     NS         NS         Reserved.                                         
 <6:4>   OTGTUNE              R/W     0x4        0x4        "VBUS Valid Threshold Adjustment                  
                                                            Function: This bus adjusts the voltage level for the VBUS<#>
                                                            valid threshold. To enable tuning at the board level, connect this
                                                            bus to a register.
                                                            Note: A positive binary bit setting change results in a +3%
                                                            incremental change in threshold voltage level, while a negative
                                                            binary bit setting change results in a -3% incremental change
                                                            in threshold voltage level. "
 <3:2>   VATEST_ENABLE        R/W     0x0        0x0        Analog test-pin select. Enables analog test voltages to be placed on the ID0 pin.
                                                            0x0 = test functionality disabled
                                                            0x1 = test functionality enabled
                                                            0x2, 0x3 = reserved, invalid settings
                                                            See also the PHY databook for details on how to select which analog test voltage.
 <1>     LOOPBACK_ENABLE      R/W     0x0        0x0        Places the HighSpeed PHY in loopback mode, which concurrently enables HighSpeed receive
                                                            and transmit logic.
 <0>     ATERESET             R/W     0x0        0x0        Per-PHY ATE reset. When the USB core is powered up (not in suspend mode), an automatic
                                                            tester can use this to disable PHYCLOCK and FREECLK, then re-enable them with an aligned
                                                            phase.
                                                            1 = PHYCLOCK and FREECLK outputs are disabled.
                                                            0 = PHYCLOCK and FREECLK are available within a specific period after ATERESET is
                                                            deasserted.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UCTL_PORT_CFG_SS = UCTL Port Configuration Registers
 * 
 *  Accessible by: only when H_CLKDIV_EN
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UCTL_RST]
 *  This register controls configuration and test controls for the port@ PHY.
 * 
$USBDRD(0..1)_UCTL_PORT(0..0)_CFG_SS   Address=(0x1180068000048+a*0x1000000+b*0x20)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field                Field   Reset      Typical    Field                                             
 Pos     Name                 Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:61> TX_VBOOST_LVL        R/W     0x4        0x4        TX voltage-boost level. Sets the boosted transmit launch amplitude (mVppd). The default
                                                            bit setting is intended to set the launch amplitude to approximately 1,008 mVppd. A
                                                            single, positive binary bit setting change results in a +156 mVppd change in the Tx launch
                                                            amplitude.
                                                            A single, negative binary bit setting change results in a -156 mVppd change in the Tx
                                                            launch amplitude. All settings more than one binary bit change should not be used.
                                                            0x3 = 0.844 V launch amplitude
                                                            0x4 = 1.008 V launch amplitude
                                                            0x5 = 1.156 V launch amplitude
                                                            All others values are invalid.
 <60:58> LOS_BIAS             R/W     0x5        0x5        Loss-of-signal detector threshold-level control. A positive, binary bit setting change
                                                            results in a +15 mVp incremental change in the LOS threshold.
                                                            A negative binary bit setting change results in a -15 mVp incremental change in the LOS
                                                            threshold. The 0x0 setting is reserved and must not be used. The default 0x5 setting
                                                            corresponds to approximately 105 mVp.
                                                                0x0: invalid
                                                                0x1:  45 mV
                                                                0x2:  60 mV
                                                                0x3:  75 mV
                                                                0x4:  90 mV
                                                                0x5: 105 mV
                                                                0x6: 120 mV
                                                                0x7: 135 mV
 <57>    LANE0_EXT_PCLK_REQ   R/W     0x0        0x0        When asserted, this signal enables the pipe0_pclk output regardless of power state
                                                            (along with the associated increase in power consumption). You can use this input
                                                            to enable pipe0_pclk in the P3 state without going through a complete boot sequence.
 <56>    LANE0_TX2RX_LOOPBK   R/W     0x0        0x0        When asserted, data from TX predriver is looped back to RX slicers. LOS is bypassed and
                                                            based on the tx0_en input so that rx0_los = !tx_data_en.
 <55:42> NS                   RAZ     NS         NS         Reserved.                                         
 <41:32> PCS_RX_LOS_MASK_VAL  R/W     0x3e8      0x3e8      Configurable Loss-of-Signal Mask Width.           
                                                            Sets the number of reference clock cycles to mask the incoming LFPS in U3 and U2 states.
                                                            Masks the incoming LFPS for the number of reference clock cycles equal to the value of
                                                            pcs_rx_los_mask_val<9:0>. This control filters out short, non-compliant LFPS glitches
                                                            sent by a non-compliant host.
                                                            For normal operation, set to a targeted mask interval of 10us (value = 10us / Tref_clk).
                                                            If the USBDRD(0..1)_UCTL_CTL[REF_CLK_DIV2] is used, then (value = 10us / (2 * Tref_clk)).
                                                            These equations are based on the SuperSpeed reference clock frequency.
                                                            Setting this bus to 0x0 disables masking.
                                                            The value should be defined when the PHY is in reset. Changing this value during operation
                                                            might disrupt normal operation of the link.
                                                            The value of PCS_RX_LOS_MASK_VAL should be:
                                                                         Frequency DIV2 LOS_MASK
                                                                          125  MHz    0    0x4E2
                                                                          100  MHz    0    0x3E8
                                                                           50  MHz    0    0x1F4
                                                                INTERNAL: 200  MHz    1    0x3E8
                                                                          104  MHz    0    0x410
                                                                           96  MHz    0    0x3C0
                                                                           76.8MHz    1    0x180
                                                                           52  MHz    0    0x208
                                                                           48  MHz    0    0x1E0
                                                                           40  MHz    1    0x0C8
                                                                           38.4MHz    0    0x180
                                                                           26  MHz    0    0x104
                                                                           25  MHz    0    0x0FA
                                                                           24  MHz    0    0x0F0
                                                                           20  MHz    0    0x0C8
                                                                           19.2MHz    0    0x0C0
 <31:26> PCS_TX_DEEMPH_3P5DB  R/W     0x18       0x18       Fine-tune transmitter driver de-emphasis when set to 3.5db.
                                                            This static value sets the Tx driver de-emphasis value when pipeP_tx_deemph[1:0] is set to
                                                            0x1 (according to the PIPE3 specification). The values for transmit de-emphasis are
                                                            derived from the following equation:
                                                            TX de-emphasis (db) =
                                                            20 * log_base_10((128 - 2 * pcs_tx_deemph)/128)
                                                            In general, the parameter controls are static signals to be set prior to taking the PHY
                                                            out of reset. However, you can dynamically change these values on-the-fly for test
                                                            purposes. In this case, changes to the transmitter to reflect the current value occur only
                                                            after the pipeP_tx_deemph[1:0] input changes.
                                                            INTERNAL: Default Value is Package-Dependant.
 <25:20> PCS_TX_DEEMPH_6DB    R/W     0x23       0x23       Fine-tune transmitter driver de-emphasis when set to 6db.
                                                            This static value sets the Tx driver de-emphasis value when pipeP_tx_deemph[1:0] is set to
                                                            0x2 (according to the PIPE3 specification). This bus is provided for completeness and as a
                                                            second potential launch amplitude. The values for transmit de-emphasis are derived from
                                                            the following equation:
                                                            TX de-emphasis (db) =
                                                            20 * log_base_10((128 - 2 * pcs_tx_deemph)/128)
                                                            In general, the parameter controls are static signals to be set prior to taking the PHY
                                                            out of reset. However, you can dynamically change these values on-the-fly for test
                                                            purposes. In this case, changes to the transmitter to reflect the current value occur only
                                                            after the pipeP_tx_deemph[1:0] input changes.
                                                            INTERNAL: Default Value is Package-Dependant.
 <19:13> PCS_TX_SWING_FULL    R/W     0x7f       0x7f       Launch amplitude of the transmitter. Sets the launch amplitude of the transmitter. The
                                                            values for transmit amplitude are derived from the following equation:
                                                            TX amplitude (V) = vptx * ((pcs_tx_swing_full + 1)/128)
                                                            In general, the parameter controls are static signals to be set prior to taking the PHY
                                                            out of reset. However, you can dynamically change these values on-the-fly for test
                                                            purposes. In this case, changes to the transmitter to reflect the current value occur only
                                                            after the pipeP_tx_deemph[1:0] input changes.
                                                            INTERNAL: Default Value is Package-Dependant.
 <12:8>  LANE0_TX_TERM_OFFSET R/W     0x0        0x0        Transmitter termination offset. Reserved, set to 0x0.
 <7:6>   NS                   RAZ     NS         NS         Reserved.                                         
 <5>     RES_TUNE_ACK         RO/H    NS         0x0        While asserted, indicates a resistor tune is in progress.
 <4>     RES_TUNE_REQ         R/W     0x0        0x0        Rising edge triggers a resistor tune request (if one is not already in progress). When
                                                            asserted, RES_TUNE_ACK goes high until calibration of the termination impedance is
                                                            complete.
                                                            Tuning disrupts the normal flow of data; therefore, assert RES_TUNE_REQ only when the PHY
                                                            is inactive. The PHY automatically performs a tune when coming out of PRST.
 <3:0>   NS                   RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UCTL_PORT_CR_DBG_CFG = UCTL Port Debug Configuration Registers
 * 
 *  Accessible by: only when H_CLKDIV_EN
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UCTL_RST]
 *  This register allows indirect access to the configuration and test controls for the port@ PHY.
 *  
 *  To access the PHY registers indirectly through the CR interface, the HCLK must be running,
 *  UCTL_RST must be deasserted, and UPHY_RST must be deasserted. Software is responsible for
 *  ensuring that only one indirect access is ongoing at a time.
 *  
 *  To read a PHY register via indirect CR interface:
 *    1. Write UCTL_PORTn_CR_DBG_CFG with:
 *      * [DATA_IN] with the <<address>> of the register,
 *      * [CAP_ADDR], [CAP_DATA], [READ], and [WRITE] fields 0x0.
 *    2. Write UCTL_PORTn_CR_DBG_CFG with:
 *      * [DATA_IN] with the <<address>> of the register,
 *      * [CAP_ADDR] field 0x1,
 *      * [CAP_DATA], [READ], and [WRITE] fields 0x0.
 *    3. Poll for UCTL_PORTn_CR_DBG_STATUS[ACK] 0x1.
 *    4. Write UCTL_PORTn_CR_DBG_CFG with all 0x0's.
 *    5. Poll for UCTL_PORTn_CR_DBG_STATUS[ACK] 0x0.
 *    6. Write UCTL_PORTn_CR_DBG_CFG with:
 *      * [READ] field 0x1,
 *      * [DATA_IN], [CAP_ADDR], [CAP_DATA], and [WRITE] fields 0x0.
 *    7. Poll for UCTL_PORTn_CR_DBG_STATUS[ACK] 0x1.
 *    8. Read UCTL_PORTn_CR_DBG_STATUS[DATA_OUT]. This is the <<read data>>.
 *    9. Write UCTL_PORTn_CR_DBG_CFG with all 0x0's.
 *    10. Poll for UCTL_PORTn_CR_DBG_STATUS[ACK] 0x0.
 *  
 *  To write a PHY register via indirect CR interface:
 *    1. Write UCTL_PORTn_CR_DBG_CFG with:
 *      * [DATA_IN] with the <<address>> of the register,
 *      * [CAP_ADDR], [CAP_DATA], [READ], and [WRITE] fields 0x0.
 *    2. Write UCTL_PORTn_CR_DBG_CFG with:
 *      * [DATA_IN] with the <<address>> of the register,
 *      * [CAP_ADDR] field 0x1,
 *      * [CAP_DATA], [READ], and [WRITE] fields 0x0.
 *    3. Poll for UCTL_PORTn_CR_DBG_STATUS[ACK] 0x1.
 *    4. Write UCTL_PORTn_CR_DBG_CFG with all 0x0's.
 *    5. Poll for UCTL_PORTn_CR_DBG_STATUS[ACK] 0x0.
 *    6. Write UCTL_PORTn_CR_DBG_CFG with:
 *      * [DATA_IN] with the <<write data>>,
 *      * [CAP_ADDR], [CAP_DATA], [READ], and [WRITE] fields 0x0.
 *    7. Write UCTL_PORTn_CR_DBG_CFG with:
 *      * [DATA_IN] with the write data,
 *      * [CAP_DATA] field 0x1,
 *      * [CAP_ADDR], [READ], and [WRITE] fields 0x0.
 *    8. Poll for UCTL_PORTn_CR_DBG_STATUS[ACK] 0x1.
 *    9. Write UCTL_PORTn_CR_DBG_CFG with all 0x0's.
 *    10. Poll for UCTL_PORTn_CR_DBG_STATUS[ACK] 0x0.
 *    11. Write UCTL_PORTn_CR_DBG_CFG with:
 *      * [WRITE] field 0x1,
 *      * [DATA_IN], [CAP_ADDR], and [READ] fields 0x0.
 *    12. Poll for UCTL_PORTn_CR_DBG_STATUS[ACK] 0x1.
 *    13. Write UCTL_PORTn_CR_DBG_CFG with all 0x0's.
 *    14. Poll for UCTL_PORTn_CR_DBG_STATUS[ACK] 0x0.
 *  
 *  For partial writes, a read-modify write is required. Note that the CAP_ADDR steps (1-5)
 *  do not have to be repeated until the address needs changed.
 * 
$USBDRD(0..1)_UCTL_PORT(0..0)_CR_DBG_CFG   Address=(0x1180068000050+a*0x1000000+b*0x20)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ     NS         NS         Reserved.                                         
 <47:32> DATA_IN  R/W     0x0        0x0        Address or data to be written to the CR interface.
 <31:4>  NS       RAZ     NS         NS         Reserved.                                         
 <3>     CAP_ADDR R/W     0x0        0x0        Rising edge triggers the DATA_IN field to be captured as the address.
 <2>     CAP_DATA R/W     0x0        0x0        Rising edge triggers the DATA_IN field to be captured as the write data.
 <1>     READ     R/W     0x0        0x0        Rising edge triggers a register read operation of the captured address.
 <0>     WRITE    R/W     0x0        0x0        Rising edge triggers a register write operation of the captured address with the captured data.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UCTL_PORT_CR_DBG_STATUS = UCTL Port Debug Status Registers
 * 
 *  Accessible by: only when H_CLKDIV_EN
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UCTL_RST]
 *  This register allows indirect access to the configuration and test controls for the port@ PHY.
 *  For usage, see above description in CR_DBG_CFG.
 *  Attribute: -exempt_name_length=True.
 * 
$USBDRD(0..1)_UCTL_PORT(0..0)_CR_DBG_STATUS   Address=(0x1180068000058+a*0x1000000+b*0x20)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:48> NS       RAZ     NS         NS         Reserved.                                         
 <47:32> DATA_OUT RO/H    0x0        0x0        Last data read from the CR interface.             
 <31:1>  NS       RAZ     NS         NS         Reserved.                                         
 <0>     ACK      RO/H    0x0        0x0        Acknowledge that the CAP_ADDR, CAP_DATA, READ, WRITE commands have completed.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UCTL_HOST_CFG = UCTL Host Controller Configuration Register
 * 
 *  Accessible by: only when H_CLKDIV_EN
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UCTL_RST]
 *  This register allows configuration of various host controller (UAHC) features.
 *  Most of these are strap signals and should only be modified while the controller is not
 *  running.
 * 
$USBDRD(0..1)_UCTL_HOST_CFG   Address=(0x11800680000E0+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field              Field   Reset      Typical    Field                                             
 Pos     Name               Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:60> NS                 RAZ     NS         NS         Reserved.                                         
 <59:48> HOST_CURRENT_BELT  RO      NS         0x0        This signal indicates the minimum value of all received BELT values and the BELT that is
                                                          set by the Set LTV command.
 <47:38> NS                 RAZ     NS         NS         Reserved.                                         
 <37:32> FLA                R/W     0x20       0x20       HighSpeed jitter adjustment. Indicates the correction required to accommodate mac3 clock
                                                          and utmi clock jitter to measure 125us duration. With FLA tied to zero, the HighSpeed
                                                          125us micro-frame is counted for 123933ns. The value needs to be programmed in terms of
                                                          HighSpeed bit times in a 30 MHz cycle. Default value that needs to be driven is 0x20
                                                          (assuming 30 MHz perfect clock).
                                                          FLA connects to the FLADJ register defined in the XHCI spec in the PCI configuration
                                                          space. Each count is equal to 16 HighSpeed bit times. By default when this register is
                                                          set to 0x20, it gives 125us interval. Now, based on the clock accuracy, you can decrement
                                                          the count or increment the count to get the 125 us uSOF window.
                                                          This is a strap signal; it should only be modified when UAHC is in reset (soft-reset
                                                          okay).
 <31:29> NS                 RAZ     NS         NS         Reserved.                                         
 <28>    BME                R/W     0x1        0x1        Bus-master enable. This signal is used to disable the bus-mastering capability of the
                                                          host. Disabling this capability stalls DMA accesses.
 <27>    OCI_EN             R/W     0x0        0x0        Overcurrent-indication enable.                    
                                                          When enabled, OCI input to UAHC is taken from the MIO's GPIO signals and sense-converted
                                                          based on OCI_ACTIVE_HIGH_EN. The MIO GPIO multiplexer must be programmed accordingly.
                                                          When disabled, OCI input to UAHC is forced to the correct inactive state based on
                                                          OCI_ACTIVE_HIGH_EN.
                                                          This is a strap signal; it should only be modified when UAHC is in reset (soft-reset
                                                          okay).
 <26>    OCI_ACTIVE_HIGH_EN R/W     0x0        0x0        Overcurrent sense selection. The off-chip sense (high/low) is converted to match the host-
                                                          controller's active-high sense.
                                                          1 = overcurrent indication from off-chip source is active-high.
                                                          0 = overcurrent indication from off-chip source is active-low.
                                                          This is a strap signal; it should only be modified when UAHC is in reset (soft-reset
                                                          okay).
 <25>    PPC_EN             R/W     0x0        0x0        Port-power-control enable.                        
                                                          0 = USBDRD(0..1)_UAHC_HCCPARAMS[PPC] report port-power-control feature is unavailable.
                                                          1 = USBDRD(0..1)_UAHC_HCCPARAMS[PPC] reports port-power-control feature is available. PPC
                                                          output from UAHC is taken to the MIO's GPIO signals and sense-converted based on
                                                          PPC_ACTIVE_HIGH_EN. The MIO GPIO multiplexer must be programmed accordingly.
                                                          This is a strap signal; it should only be modified when UAHC is in reset (soft-reset
                                                          okay).
 <24>    PPC_ACTIVE_HIGH_EN R/W     0x0        0x0        Port power control sense selection. The active-high port-power-control output to off-chip
                                                          source is converted to match the off-chip sense.
                                                          1 = port-power control to off-chip source is active-high.
                                                          0 = port-power control to off-chip source is active-low.
                                                          This is a strap signal; it should only be modified when UAHC is in reset (soft reset
                                                          okay).
 <23:0>  NS                 RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UCTL_SHIM_CFG = UCTL Shim Configuration Register
 * 
 *  Accessible by: only when H_CLKDIV_EN
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UCTL_RST]
 *  This register allows configuration of various shim (UCTL) features.
 *  Fields XS_NCB_OOB_* are captured when there are no outstanding OOB errors indicated in INTSTAT
 *  and a new OOB error arrives.
 *  Fields XS_BAD_DMA_* are captured when there are no outstanding DMA errors indicated in INTSTAT
 *  and a new DMA error arrives.
 * 
$USBDRD(0..1)_UCTL_SHIM_CFG   Address=(0x11800680000E8+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field           Field   Reset      Typical    Field                                             
 Pos     Name            Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    XS_NCB_OOB_WRN  RO/H    NS         NS         Read/write error log for out-of-bound UAHC register access.
                                                       0 = read, 1 = write
 <62:60> NS              RAZ     NS         NS         Reserved.                                         
 <59:48> XS_NCB_OOB_OSRC RO/H    NS         NS         SRCID error log for out-of-bound UAHC register access. The IOI outbound SRCID for the OOB
                                                       error.
                                                       CSR bits Field bits Description
                                                       [59:58] [11:10] chipID
                                                       [57] [9] request source: 0 = core, 1 = IOI-device
                                                       [56:51] [8:3] core/IOI-device number. Note that for
                                                       IOI devices, [56]/[8] is always 0.
                                                       [50:48] [2:0] SubID
 <47>    XM_BAD_DMA_WRN  RO/H    NS         NS         Read/write error log for bad DMA access from UAHC.
                                                       0 = read error log, 1 = write error log
 <46:44> NS              RAZ     NS         NS         Reserved.                                         
 <43:40> XM_BAD_DMA_TYPE RO/H    NS         NS         ErrType error log for bad DMA access from UAHC. Encodes the type of error encountered
                                                       (error largest encoded value has priority). See USBDRD_UCTL_XM_BAD_DMA_TYPE_E.
 <39:13> NS              RAZ     NS         NS         Reserved.                                         
 <12>    DMA_READ_CMD    R/W     0x1        0x1        Selects the IOI read command used by DMA accesses. See USBDRD_UCTL_DMA_READ_CMD_E.
 <11:10> NS              RAZ     NS         NS         Reserved.                                         
 <9:8>   DMA_ENDIAN_MODE R/W     0x1        0x1        Selects the endian format for DMA accesses to the L2C. See USBDRD_UCTL_ENDIAN_MODE_E.
 <7:2>   NS              RAZ     NS         NS         Reserved.                                         
 <1:0>   CSR_ENDIAN_MODE R/W     0x1        0x1        Selects the endian format for IOI CSR accesses to the UAHC. Note that when UAHC CSRs are
                                                       accessed via RSL, they are returned as big-endian. See USBDRD_UCTL_ENDIAN_MODE_E.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UCTL_ECC = UCTL ECC Control/Debug Register
 * 
 *  Accessible by: only when H_CLKDIV_EN
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UCTL_RST]
 *  This register can be used to disable ECC checks, insert ECC errors, and debug ECC failures.
 *  Fields ECC_ERR* are captured when there are no outstanding ECC errors indicated in INTSTAT
 *  and a new ECC error arrives. Prioritization for multiple events occurring on the same cycle is
 *  indicated by the ECC_ERR_SOURCE enumeration: highest encoded value has highest priority.
 *  Fields *ECC_DIS: Disables SBE detection/correction and DBE detection.
 *  If ECC_DIS is 0x1, then no errors are detected.
 *  Fields *ECC_FLIP_SYND:  Flip the syndrom[1:0] bits to generate 1-bit/2-bits error for testing.
 *    0x0: normal operation
 *    0x1: SBE on bit[0]
 *    0x2: SBE on bit[1]
 *    0x3: DBE on bit[1:0]
 * 
$USBDRD(0..1)_UCTL_ECC   Address=(0x11800680000F0+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field                   Field   Reset      Typical    Field                                             
 Pos     Name                    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:60> NS                      RAZ     NS         NS         Reserved.                                         
 <59:56> ECC_ERR_SOURCE          RO/H    0x0        NS         Source of ECC error, see USBDRD_UCTL_ECC_ERR_SOURCE_E.
 <55:48> ECC_ERR_SYNDROME        RO/H    0x0        NS         Syndrome bits of the ECC error.                   
 <47:32> ECC_ERR_ADDRESS         RO/H    0x0        NS         RAM address of the ECC error.                     
 <31:9>  NS                      RAZ     NS         NS         Reserved.                                         
 <8:7>   UAHC_RAM2_ECC_FLIP_SYND R/W     0x0        0x0        Insert ECC error for testing purposes.            
 <6>     UAHC_RAM2_ECC_COR_DIS   R/W     0x0        0x0        Enables ECC correction on UAHC RxFIFO RAMs (RAM2).
 <5:4>   UAHC_RAM1_ECC_FLIP_SYND R/W     0x0        0x0        Insert ECC error for testing purposes.            
 <3>     UAHC_RAM1_ECC_COR_DIS   R/W     0x0        0x0        Enables ECC correction on UAHC TxFIFO RAMs (RAM1).
 <2:1>   UAHC_RAM0_ECC_FLIP_SYND R/W     0x0        0x0        Insert ECC error for testing purposes.            
 <0>     UAHC_RAM0_ECC_COR_DIS   R/W     0x0        0x0        Enables ECC correction on UAHC Desc/Reg cache (RAM0).
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UCTL_SPARE1 = UCTL Spare Register 1
 * 
 *  Accessible by: only when H_CLKDIV_EN
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UCTL_RST]
 *  This register is spare.
 * 
$USBDRD(0..1)_UCTL_SPARE1   Address=(0x11800680000F8+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  SPARE R/W     0x0        NS         Spare.                                            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_CAPLENGTH = XHCI Capability Length Register
 * 
 *  See XHCI specification v1.0 section 5.3.1.
 * 
$USBDRD(0..1)_UAHC_CAPLENGTH   Address=(0x1680000000000+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> HCIVERSION RO      0x100      0x100      Host controller interface version number.         
 <15:8>  NS         RAZ     NS         NS         Reserved.                                         
 <7:0>   CAPLENGTH  RO      0x20       0x20       Capability registers length.                      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_HCSPARAMS1 = XHCI Host-Controller Structural Parameters Register 1
 * 
 *  See XHCI specification v1.0 section 5.3.3.
 * 
$USBDRD(0..1)_UAHC_HCSPARAMS1   Address=(0x1680000000004+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:24> MAXPORTS RO      0x2        0x2        Maximum number of ports.                          
 <23:19> NS       RAZ     NS         NS         Reserved.                                         
 <18:8>  MAXINTRS RO      0x1        0x1        Maximum number of interrupters.                   
 <7:0>   MAXSLOTS RO      0x40       0x40       Maximum number of device slots.                   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_HCSPARAMS2 = XHCI Host-Controller Structural Parameters Register 2
 * 
 *  See XHCI specification v1.0 section 5.3.4.
 * 
$USBDRD(0..1)_UAHC_HCSPARAMS2   Address=(0x1680000000008+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field               Field   Reset      Typical    Field                                             
 Pos     Name                Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:27> MAXSCRATCHPADBUFS_L RO      0x1        0x1        Maximum number of scratchpad buffers[4:0].        
 <26>    SPR                 RO      0x1        0x1        Scratchpad restore.                               
 <25:21> MAXSCRATCHPADBUFS_H RO      0x0        0x0        Maximum number of scratchpad buffers[9:5].        
 <20:8>  NS                  RAZ     NS         NS         Reserved.                                         
 <7:4>   ERST_MAX            RO      0xf        0xf        Event ring segment table maximum.                 
 <3:0>   IST                 RO      0x1        0x1        Isochronous scheduling threshold.                 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_HCSPARAMS3 = XHCI Host-Controller Structural Parameters Register 3
 * 
 *  See XHCI specification v1.0 section 5.3.5.
 * 
$USBDRD(0..1)_UAHC_HCSPARAMS3   Address=(0x168000000000C+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field                  Field   Reset      Typical    Field                                             
 Pos     Name                   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> U2_DEVICE_EXIT_LATENCY RO      0x7ff      0x7ff      U2 device exit latency.                           
 <15:8>  NS                     RAZ     NS         NS         Reserved.                                         
 <7:0>   U1_DEVICE_EXIT_LATENCY RO      0xa        0xa        U1 device exit latency.                           
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_HCCPARAMS = XHCI Host-Controller Capability Parameters Register
 * 
 *  See XHCI specification v1.0 section 5.3.6.
 * 
$USBDRD(0..1)_UAHC_HCCPARAMS   Address=(0x1680000000010+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> XECP       RO      0x220      0x220      XHCI extended capabilities pointer.               
 <15:12> MAXPSASIZE RO      0xf        0xf        Maximum primary-stream-array size.                
 <11:9>  NS         RAZ     NS         NS         Reserved.                                         
 <8>     PAE        RO      0x0        0x0        Parse all event data.                             
 <7>     NSS        RO      0x0        0x0        No secondary SID support.                         
 <6>     LTC        RO      0x1        0x1        Latency tolerance messaging capability.           
 <5>     LHRC       RO      0x1        0x1        Light HC reset capability.                        
 <4>     PIND       RO      0x0        0x0        Port indicators.                                  
 <3>     PPC        RO      0x0        0x0        Port power control. Value is based on USBDRD(0..1)_UCTL_HOST_CFG[PPC_EN].
 <2>     CSZ        RO      0x1        0x1        Context size.                                     
 <1>     BNC        RO      0x0        0x0        BW negotiation capability.                        
 <0>     AC64       RO      0x1        0x1        64-bit addressing capability.                     
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_DBOFF = XHCI Doorbell Array Offset Register
 * 
 *  See XHCI specification v1.0 section 5.3.7.
 * 
$USBDRD(0..1)_UAHC_DBOFF   Address=(0x1680000000014+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:2>  DBOFF RO      0x120      0x120      Doorbell array offset.                            
 <1:0>   NS    RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_RTSOFF = XHCI Runtime Register-Space Offset Register
 * 
 *  See XHCI specification v1.0 section 5.3.8.
 * 
$USBDRD(0..1)_UAHC_RTSOFF   Address=(0x1680000000018+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:5>  RTSOFF RO      0x22       0x22       Runtime register-space offset.                    
 <4:0>   NS     RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_USBCMD = XHCI Command Register
 * 
 *  See XHCI specification v1.0 section 5.4.1.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET] or
 *  USBDRD(0..1)_UAHC_GCTL[CORESOFTRESET] or
 *  USBDRD(0..1)_UAHC_USBCMD[HCRST] or USBDRD(0..1)_UAHC_USBCMD[LHCRST] or
 *  USBDRD(0..1)_UAHC_DCTL[CSFTRST].
 *  Attribute: -exempt_w1c_w=True.
 * 
$USBDRD(0..1)_UAHC_USBCMD   Address=(0x1680000000020+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:12> NS     RAZ     NS         NS         Reserved.                                         
 <11>    EU3S   R/W     0x0        NS         Enable U3 MFINDEX stop.                           
 <10>    EWE    R/W     0x0        NS         Enable wrap event.                                
 <9>     CRS    WO      0x0        NS         Controller restore state.                         
 <8>     CSS    WO      0x0        NS         Controller save state.                            
 <7>     LHCRST R/W1S/H 0x0        NS         Light-host-controller reset.                      
 <6:4>   NS     RAZ     NS         NS         Reserved.                                         
 <3>     HSEE   R/W     0x0        NS         Host-system-error enable.                         
 <2>     INTE   R/W     0x0        NS         Interrupter enable.                               
 <1>     HCRST  R/W1S/H 0x0        NS         Host-controller reset.                            
 <0>     R_S    R/W     0x0        NS         Run/stop.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_USBSTS = XHCI Status Register
 * 
 *  See XHCI specification v1.0 section 5.4.2.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET] or
 *  USBDRD(0..1)_UAHC_GCTL[CORESOFTRESET] or
 *  USBDRD(0..1)_UAHC_USBCMD[HCRST] or USBDRD(0..1)_UAHC_USBCMD[LHCRST] or
 *  USBDRD(0..1)_UAHC_DCTL[CSFTRST].
 * 
$USBDRD(0..1)_UAHC_USBSTS   Address=(0x1680000000024+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:13> NS    RAZ     NS         NS         Reserved.                                         
 <12>    HCE   RO/H    0x0        NS         Host-controller error.                            
 <11>    CNR   RO/H    0x0        NS         Controller not ready.                             
 <10>    SRE   R/W1C/H 0x0        NS         Save/restore error.                               
 <9>     RSS   RO/H    0x0        NS         Restore state status.                             
 <8>     SSS   RO/H    0x0        NS         Save state status.                                
 <7:5>   NS    RAZ     NS         NS         Reserved.                                         
 <4>     PCD   R/W1C/H 0x0        NS         Port-change detect.                               
 <3>     EINT  R/W1C/H 0x0        NS         Event interrupt.                                  
 <2>     HSE   R/W1C/H 0x0        NS         Host-system error. The typical software response to an HSE is to reset the core.
                                             Throws USBDRD_UCTL_INTSN_E::USBDRD_UAHC_USBSTS_HSE.
 <1>     NS    RAZ     NS         NS         Reserved.                                         
 <0>     HCH   RO/H    0x1        NS         HC halted.                                        
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_PAGESIZE = XHCI Page-Size Register
 * 
 *  See XHCI specification v1.0 section 5.4.3.
 * 
$USBDRD(0..1)_UAHC_PAGESIZE   Address=(0x1680000000028+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> NS       RAZ     NS         NS         Reserved.                                         
 <15:0>  PAGESIZE RO      0x1        0x1        Page size.                                        
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_DNCTRL = XHCI Device Notification Control Register
 * 
 *  See XHCI specification v1.0 section 5.4.4.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET] or
 *  USBDRD(0..1)_UAHC_GCTL[CORESOFTRESET] or
 *  USBDRD(0..1)_UAHC_USBCMD[HCRST] or USBDRD(0..1)_UAHC_USBCMD[LHCRST] or
 *  USBDRD(0..1)_UAHC_DCTL[CSFTRST].
 * 
$USBDRD(0..1)_UAHC_DNCTRL   Address=(0x1680000000034+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> NS    RAZ     NS         NS         Reserved.                                         
 <15:0>  N     R/W     0x0        NS         Notification enable.                              
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_CRCR = XHCI Command Ring Control Register
 * 
 *  See XHCI specification v1.0 section 5.4.5.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET] or
 *  USBDRD(0..1)_UAHC_GCTL[CORESOFTRESET] or
 *  USBDRD(0..1)_UAHC_USBCMD[HCRST] or USBDRD(0..1)_UAHC_USBCMD[LHCRST] or
 *  USBDRD(0..1)_UAHC_DCTL[CSFTRST].
 * 
$USBDRD(0..1)_UAHC_CRCR   Address=(0x1680000000038+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field        Field   Reset      Typical    Field                                             
 Pos     Name         Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  CMD_RING_PTR WO      0x0        NS         Command ring pointer bits<63:6>.                  
 <5:4>   NS           RAZ     NS         NS         Reserved.                                         
 <3>     CRR          RO/H    0x0        NS         Command ring running.                             
 <2>     CA           WO      0x0        0x0        Command abort.                                    
                                                    Attribute: -no_soft_reset=1.
 <1>     CS           WO      0x0        0x0        Command stop.                                     
                                                    Attribute: -no_soft_reset=1.
 <0>     RCS          WO      0x0        NS         Ring Cycle State                                  
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_DCBAAP = XHCI Device Context Base-Address-Array Pointer Register
 * 
 *  See XHCI specification v1.0 section 5.4.6.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET] or
 *  USBDRD(0..1)_UAHC_GCTL[CORESOFTRESET] or
 *  USBDRD(0..1)_UAHC_USBCMD[HCRST] or USBDRD(0..1)_UAHC_USBCMD[LHCRST] or
 *  USBDRD(0..1)_UAHC_DCTL[CSFTRST].
 * 
$USBDRD(0..1)_UAHC_DCBAAP   Address=(0x1680000000050+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  DCBAAP R/W     0x0        NS         Device context base address array pointer bits<63:6>.
 <5:0>   NS     RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_CONFIG = XHCI Configuration Register
 * 
 *  See XHCI specification v1.0 section 5.4.7.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET] or
 *  USBDRD(0..1)_UAHC_GCTL[CORESOFTRESET] or
 *  USBDRD(0..1)_UAHC_USBCMD[HCRST] or USBDRD(0..1)_UAHC_USBCMD[LHCRST] or
 *  USBDRD(0..1)_UAHC_DCTL[CSFTRST].
 * 
$USBDRD(0..1)_UAHC_CONFIG   Address=(0x1680000000058+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:8>  NS         RAZ     NS         NS         Reserved.                                         
 <7:0>   MAXSLOTSEN R/W     0x0        NS         Maximum device slots enabled                      
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_PORTSC = XHCI Port Status and Control Registers
 * 
 *  See XHCI specification v1.0 section 5.4.8.
 *  Port 1 is USB3.0 SuperSpeed link. Port 0 is USB2.0 HighSpeed/FullSpeed/LowSpeed link.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET] or
 *  USBDRD(0..1)_UAHC_GCTL[CORESOFTRESET] or
 *  USBDRD(0..1)_UAHC_USBCMD[HCRST] or USBDRD(0..1)_UAHC_DCTL[CSFTRST].
 *  Attribute: -exempt_w1c_w=True.
 * 
$USBDRD(0..1)_UAHC_PORTSC(0..1)   Address=(0x1680000000420+a*0x10000000000+b*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31>    WPR       WO      0x0        NS         Warm port reset.                                  
 <30>    DR        RO/H    NS         0x0        Device removable.                                 
 <29:28> NS        RAZ     NS         NS         Reserved.                                         
 <27>    WOE       R/W     0x0        0x0        Wake-on-overcurrent enable.                       
                                                 Attribute: -no_soft_reset=1.
 <26>    WDE       R/W     0x0        NS         Wake-on-disconnect enable.                        
                                                 Attribute: -no_soft_reset=1.
 <25>    WCE       R/W     0x0        NS         Wake-on-connect enable.                           
                                                 Attribute: -no_soft_reset=1.
 <24>    CAS       RO/H    0x0        NS         Cold-attach status.                               
 <23>    CEC       R/W1C/H 0x0        NS         Port-configuration-error change.                  
                                                 Attribute: -no_soft_reset=1.
 <22>    PLC       R/W1C/H 0x0        NS         Port-link-state change.                           
                                                 Attribute: -no_soft_reset=1.
 <21>    PRC       R/W1C/H 0x0        NS         Port-reset change.                                
                                                 Attribute: -no_soft_reset=1.
 <20>    OCC       R/W1C/H 0x0        NS         Overcurrent change.                               
                                                 Attribute: -no_soft_reset=1.
 <19>    WRC       R/W1C/H 0x0        NS         Warm-port-reset change.                           
                                                 Attribute: -no_soft_reset=1.
 <18>    PEC       R/W1C/H 0x0        NS         Port enabled/disabled change.                     
                                                 Attribute: -no_soft_reset=1.
 <17>    CSC       R/W1C/H 0x0        NS         Connect-status change.                            
                                                 Attribute: -no_soft_reset=1.
 <16>    LWS       WO      0x0        NS         Port-link-state write strobe.                     
 <15:14> PIC       R/W/H   0x0        0x0        Port indicator control.                           
                                                 Attribute: -no_soft_reset=1.
 <13:10> PORTSPEED RO/H    0x0        0x0        Port speed.                                       
                                                 Attribute: -no_soft_reset=1.
 <9>     PP        R/W/H   0x1        0x1        Port power.                                       
                                                 Attribute: -no_soft_reset=1.
 <8:5>   PLS       R/W/H   0x5        NS         Port-link state.                                  
                                                 Attribute: -no_soft_reset=1.
 <4>     PR        R/W1S/H 0x0        NS         Port reset.                                       
                                                 Attribute: -no_soft_reset=1.
 <3>     OCA       RO/H    0x0        0x0        Overcurrent active.                               
 <2>     NS        RAZ     NS         NS         Reserved.                                         
 <1>     PED       R/W1C/H 0x0        NS         Port enabled/disabled.                            
                                                 Attribute: -no_soft_reset=1.
 <0>     CCS       RO/H    0x0        NS         Current connect status.                           
                                                 Attribute: -no_soft_reset=1.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_PORTPMSC_20 = XHCI Port Power Management Status/Control Registers (HighSpeed)
 * 
 *  See XHCI specification v1.0 section 5.4.9.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET] or
 *  USBDRD(0..1)_UAHC_GCTL[CORESOFTRESET] or
 *  USBDRD(0..1)_UAHC_USBCMD[HCRST] or USBDRD(0..1)_UAHC_DCTL[CSFTRST].
 * 
$USBDRD(0..1)_UAHC_PORTPMSC_20(0..0)   Address=(0x1680000000424+a*0x10000000000+b*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field             Field   Reset      Typical    Field                                             
 Pos     Name              Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:28> PORT_TEST_CONTROL R/W     0x0        0x0        Port test control.                                
 <27:17> NS                RAZ     NS         NS         Reserved.                                         
 <16>    HLE               R/W     0x0        NS         Hardware LPM enable.                              
 <15:8>  L1_DEVICE_SLOT    R/W     0x0        NS         L1 device slot.                                   
 <7:4>   HIRD              R/W     0x0        NS         Host-initiated resume duration.                   
 <3>     RWE               R/W     0x0        NS         Remove wake enable.                               
 <2:0>   L1S               RO/H    0x0        NS         L1 status.                                        
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_PORTLI_20 = XHCI Port Link Information Registers (HighSpeed)
 * 
 *  See XHCI specification v1.0 section 5.4.10.
 * 
$USBDRD(0..1)_UAHC_PORTLI_20(0..0)   Address=(0x1680000000428+a*0x10000000000+b*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  NS    RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_PORTHLPMC_20 = XHCI Port Hardware LPM Control Registers (HighSpeed)
 * 
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET] or
 *  USBDRD(0..1)_UAHC_GCTL[CORESOFTRESET] or
 *  USBDRD(0..1)_UAHC_USBCMD[HCRST] or USBDRD(0..1)_UAHC_DCTL[CSFTRST].
 *  See XHCI specification v1.? section ?.
 *  INTERNAL: TODO (new unreleased XHCI errata!)
 * 
$USBDRD(0..1)_UAHC_PORTHLPMC_20(0..0)   Address=(0x168000000042C+a*0x10000000000+b*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:14> NS         RAZ     NS         NS         Reserved.                                         
 <13:10> HIRDD      R/W     0x0        NS         TODO unreleased XHCI errata                       
 <9:2>   L1_TIMEOUT R/W     0x0        NS         TODO: unreleased XHCI errata                      
 <1:0>   HIRDM      R/W     0x0        NS         Host-initiated resume-duration mode.              
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_PORTPMSC_SS = XHCI Port Power Management Status/Control Registers (SuperSpeed)
 * 
 *  See XHCI specification v1.0 section 5.4.9.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET] or
 *  USBDRD(0..1)_UAHC_GCTL[CORESOFTRESET] or
 *  USBDRD(0..1)_UAHC_USBCMD[HCRST] or USBDRD(0..1)_UAHC_DCTL[CSFTRST].
 * 
$USBDRD(0..1)_UAHC_PORTPMSC_SS(1..1)   Address=(0x1680000000424+a*0x10000000000+b*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:17> NS         RAZ     NS         NS         Reserved.                                         
 <16>    FLA        R/W     0x0        NS         Force link PM accept.                             
 <15:8>  U2_TIMEOUT R/W     0x0        NS         U2 timeout.                                       
                                                  Attribute: -no_soft_reset=1.
 <7:0>   U1_TIMEOUT R/W     0x0        NS         U1 timeout.                                       
                                                  Attribute: -no_soft_reset=1.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_PORTLI_SS = XHCI Port Link Information Registers (SuperSpeed)
 * 
 *  See XHCI specification v1.0 section 5.4.10.
 * 
$USBDRD(0..1)_UAHC_PORTLI_SS(1..1)   Address=(0x1680000000428+a*0x10000000000+b*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field          Field   Reset      Typical    Field                                             
 Pos     Name           Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> NS             RAZ     NS         NS         Reserved.                                         
 <15:0>  LINKERRORCOUNT RO/H    0x0        NS         Link error count.                                 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_PORTHLPMC_SS = XHCI Port Hardware LPM Control Registers (SuperSpeed)
 * 
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET] or
 *  USBDRD(0..1)_UAHC_GCTL[CORESOFTRESET] or
 *  USBDRD(0..1)_UAHC_USBCMD[HCRST] or USBDRD(0..1)_UAHC_DCTL[CSFTRST].
 *  See XHCI specification v1.? section ?.
 *  INTERNAL: TODO: (new unreleased XHCI errata!)
 * 
$USBDRD(0..1)_UAHC_PORTHLPMC_SS(1..1)   Address=(0x168000000042C+a*0x10000000000+b*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  NS    RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_MFINDEX = XHCI Microframe Index Register
 * 
 *  See XHCI specification v1.0 section 5.5.1.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET] or
 *  USBDRD(0..1)_UAHC_GCTL[CORESOFTRESET] or
 *  USBDRD(0..1)_UAHC_USBCMD[HCRST] or USBDRD(0..1)_UAHC_USBCMD[LHCRST] or
 *  USBDRD(0..1)_UAHC_DCTL[CSFTRST].
 * 
$USBDRD(0..1)_UAHC_MFINDEX   Address=(0x1680000000440+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:14> NS      RAZ     NS         NS         Reserved.                                         
 <13:0>  MFINDEX RO/H    0x0        NS         Microframe index.                                 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_IMAN = XHCI Interrupt Management Registers
 * 
 *  See XHCI specification v1.0 section 5.5.2.1.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET] or
 *  USBDRD(0..1)_UAHC_GCTL[CORESOFTRESET] or
 *  USBDRD(0..1)_UAHC_USBCMD[HCRST] or USBDRD(0..1)_UAHC_USBCMD[LHCRST] or
 *  USBDRD(0..1)_UAHC_DCTL[CSFTRST].
 *  Attribute: -exempt_w1c_w=True.
 * 
$USBDRD(0..1)_UAHC_IMAN(0..0)   Address=(0x1680000000460+a*0x10000000000+b*0x20)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:2>  NS    RAZ     NS         NS         Reserved.                                         
 <1>     IE    R/W     0x0        0x1        Interrupt enable.                                 
 <0>     IP    R/W1C/H 0x0        NS         Interrupt pending.                                
                                             Throws USBDRD_UCTL_INTSN_E::USBDRD(0..1)_UCTL_UAHC_IMAN(0..0)_IP.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_IMOD = XHCI Interrupt Moderation Registers
 * 
 *  See XHCI specification v1.0 section 5.5.2.2.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET] or
 *  USBDRD(0..1)_UAHC_GCTL[CORESOFTRESET] or
 *  USBDRD(0..1)_UAHC_USBCMD[HCRST] or USBDRD(0..1)_UAHC_USBCMD[LHCRST] or
 *  USBDRD(0..1)_UAHC_DCTL[CSFTRST].
 * 
$USBDRD(0..1)_UAHC_IMOD(0..0)   Address=(0x1680000000464+a*0x10000000000+b*0x20)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> IMODC R/W     NS         NS         Interrupt moderation counter.                     
 <15:0>  IMODI R/W     0xfa0      0xfa0      Interrupt moderation interval.                    
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_ERSTSZ = XHCI Event-Ring Segment-Table Size Registers
 * 
 *  See XHCI specification v1.0 section 5.5.2.3.1.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET] or
 *  USBDRD(0..1)_UAHC_GCTL[CORESOFTRESET] or
 *  USBDRD(0..1)_UAHC_USBCMD[HCRST] or USBDRD(0..1)_UAHC_USBCMD[LHCRST] or
 *  USBDRD(0..1)_UAHC_DCTL[CSFTRST].
 * 
$USBDRD(0..1)_UAHC_ERSTSZ(0..0)   Address=(0x1680000000468+a*0x10000000000+b*0x20)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> NS     RAZ     NS         NS         Reserved.                                         
 <15:0>  ERSTSZ R/W     0x0        NS         Event-ring segment-table size.                    
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_ERSTBA = XHCI Event-Ring Segment-Table Base-Address Registers
 * 
 *  See XHCI specification v1.0 section 5.5.2.3.2.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET] or
 *  USBDRD(0..1)_UAHC_GCTL[CORESOFTRESET] or
 *  USBDRD(0..1)_UAHC_USBCMD[HCRST] or USBDRD(0..1)_UAHC_USBCMD[LHCRST] or
 *  USBDRD(0..1)_UAHC_DCTL[CSFTRST].
 * 
$USBDRD(0..1)_UAHC_ERSTBA(0..0)   Address=(0x1680000000470+a*0x10000000000+b*0x20)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:6>  ERSTBA R/W     0x0        NS         Event-ring segment-table base-address bits<63:6>. 
 <5:0>   NS     RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_ERDP = XHCI Event Ring Dequeue Pointer Registers
 * 
 *  See XHCI specification v1.0 section 5.5.2.3.3.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET] or
 *  USBDRD(0..1)_UAHC_GCTL[CORESOFTRESET] or
 *  USBDRD(0..1)_UAHC_USBCMD[HCRST] or USBDRD(0..1)_UAHC_USBCMD[LHCRST] or
 *  USBDRD(0..1)_UAHC_DCTL[CSFTRST].
 *  Attribute: -exempt_w1c_w=True.
 * 
$USBDRD(0..1)_UAHC_ERDP(0..0)   Address=(0x1680000000478+a*0x10000000000+b*0x20)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  ERDP R/W     0x0        NS         Event ring dequeue pointer bits<63:4>.            
 <3>     EHB  R/W1C/H 0x0        NS         Event handler busy                                
 <2:0>   DESI R/W     0x0        NS         Dequeue ERST segment index.                       
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_DB = XHCI Doorbell Registers
 * 
 *  See XHCI specification v1.0 section 5.6.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET] or
 *  USBDRD(0..1)_UAHC_GCTL[CORESOFTRESET] or
 *  USBDRD(0..1)_UAHC_USBCMD[HCRST] or USBDRD(0..1)_UAHC_USBCMD[LHCRST] or
 *  USBDRD(0..1)_UAHC_DCTL[CSFTRST].
 *  INTERNAL: XHCI spec, page 32: there are USBDRD(0..1)_UAHC_HCSPARAMS1[MAXSLOTS]+1 doorbell
 *  registers.
 *  Attribute: -exempt_natural_alignment=b.
 * 
$USBDRD(0..1)_UAHC_DB(0..64)   Address=(0x1680000000480+a*0x10000000000+b*0x4)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> DBSTREAMID WO      0x0        NS         Doorbell stream ID.                               
 <15:8>  NS         RAZ     NS         NS         Reserved.                                         
 <7:0>   DBTARGET   WO      0x0        NS         Doorbell target.                                  
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_USBLEGSUP = XHCI Legacy Support Capability Register
 * 
 *  See XHCI specification v1.0 section 7.1.1.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET] or
 *  USBDRD(0..1)_UAHC_GCTL[CORESOFTRESET] or
 *  USBDRD(0..1)_UAHC_USBCMD[HCRST] or USBDRD(0..1)_UAHC_DCTL[CSFTRST].
 * 
$USBDRD(0..1)_UAHC_USBLEGSUP   Address=(0x1680000000880+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field                    Field   Reset      Typical    Field                                             
 Pos     Name                     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:25> NS                       RAZ     NS         NS         Reserved.                                         
 <24>    HC_OS_OWNED_SEMAPHORES   R/W     0x0        NS         HC OS-owned semaphore.                            
 <23:17> NS                       RAZ     NS         NS         Reserved.                                         
 <16>    HC_BIOS_OWNED_SEMAPHORES R/W     0x0        NS         HC BIOS-owned semaphore.                          
 <15:8>  NEXTCAPPTR               RO      0x4        0x4        Next XHCI extended-capability pointer.            
 <7:0>   CAPID                    RO      0x1        0x1        Capability ID = USB legacy support.               
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_USBLEGCTLSTS = XHCI Legacy Support Control/Status Register
 * 
 *  See XHCI specification v1.0 section 7.1.2.
 *  Note that the SMI interrupts are not connected to anything in an Octeon configuration.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET] or
 *  USBDRD(0..1)_UAHC_GCTL[CORESOFTRESET] or
 *  USBDRD(0..1)_UAHC_USBCMD[HCRST] or USBDRD(0..1)_UAHC_DCTL[CSFTRST].
 *  Attribute: -exempt_w1c_w=True.
 * 
$USBDRD(0..1)_UAHC_USBLEGCTLSTS   Address=(0x1680000000884+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field                   Field   Reset      Typical    Field                                             
 Pos     Name                    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31>    SMI_ON_BAR              R/W1C/H 0x0        NS         System management interrupt on BAR. Never generated.
 <30>    SMI_ON_PCI_COMMAND      R/W1C/H 0x0        NS         System management interrupt on PCI command. Never generated.
 <29>    SMI_ON_OS_OWNERSHIP     R/W1C/H 0x0        NS         System management interrupt on OS ownership change. This bit is set to 1 whenever
                                                               UAHC_USBLEGSUP[HC_OS_OWNED_SEMAPHORES] transitions.
 <28:21> NS                      RAZ     NS         NS         Reserved.                                         
 <20>    SMI_ON_HOSTSYSTEMERR    RO/H    0x0        NS         System-management interrupt on host-system error. Shadow bit of UAHC_USBSTS[HSE]. Refer to
                                                               XHCI Section 5.4.2 for definition and effects of the events associated with this bit being
                                                               set to 1.
                                                               To clear this bit to a 0, system software must write a 1 to UAHC_USBSTS[HSE].
 <19:17> NS                      RAZ     NS         NS         Reserved.                                         
 <16>    SMI_ON_EVENT_INTERRUPT  RO/H    0x0        NS         System-management interrupt on event interrupt. Shadow bit of UAHC_USBSTS[EINT]. Refer to
                                                               XHCI Section 5.4.2 for definition. This bit automatically clears when [EINT] clears and
                                                               sets when [EINT] sets.
 <15>    SMI_ON_BAR_EN           R/W     0x0        NS         System-management interrupt on BAR enable.        
 <14>    SMI_ON_PCI_COMMAND_EN   R/W     0x0        NS         System-management interrupt on PCI command enable.
 <13>    SMI_ON_OS_OWNERSHIP_EN  R/W     0x0        NS         System-management interrupt on OS ownership enable.
 <12:5>  NS                      RAZ     NS         NS         Reserved.                                         
 <4>     SMI_ON_HOSTSYSTEMERR_EN R/W     0x0        NS         System-management interrupt on host-system error enable
 <3:1>   NS                      RAZ     NS         NS         Reserved.                                         
 <0>     USB_SMI_EN              R/W     0x0        NS         USB system-management interrupt enable.           
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_SUPTPRT2_DW0 = XHCI Supported-Protocol-Capability (USB 2.0) Register 0
 * 
 *  See XHCI specification v1.0 section 7.2.
 * 
$USBDRD(0..1)_UAHC_SUPTPRT2_DW0   Address=(0x1680000000890+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:24> MAJORREV   RO      0x2        0x2        Major revision.                                   
 <23:16> MINORREV   RO      0x0        0x0        Minor revision.                                   
 <15:8>  NEXTCAPPTR RO      0x4        0x4        Next capability pointer.                          
 <7:0>   CAPID      RO      0x2        0x2        Capability ID = supported protocol.               
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_SUPTPRT2_DW1 = XHCI Supported-Protocol-Capability (USB 2.0) Register 1
 * 
 *  See XHCI specification v1.0 section 7.2.
 * 
$USBDRD(0..1)_UAHC_SUPTPRT2_DW1   Address=(0x1680000000894+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  NAME RO      0x20425355 0x20425355 Name string: 'USB'.                               
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_SUPTPRT2_DW2 = XHCI Supported-Protocol-Capability (USB 2.0) Register 2
 * 
 *  See XHCI specification v1.0 section 7.2.
 * 
$USBDRD(0..1)_UAHC_SUPTPRT2_DW2   Address=(0x1680000000898+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field        Field   Reset      Typical    Field                                             
 Pos     Name         Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:28> PSIC         RO      0x0        NS         Protocol speed ID count.                          
 <27:21> NS           RAZ     NS         NS         Reserved.                                         
 <20>    BLC          RO      0x0        NS         BESL LPM Capability.                              
 <19>    HLC          RO      0x1        NS         Hardware LMP Capability.                          
 <18>    IHI          RO      0x0        NS         Integrated hub implemented.                       
 <17>    HSO          RO      0x0        NS         HighSpeed only.                                   
 <16>    NS           RAZ     NS         NS         Reserved.                                         
 <15:8>  COMPATPRTCNT RO      0x1        0x1        Compatible port count.                            
 <7:0>   COMPATPRTOFF RO      0x1        0x1        Compatible port offset.                           
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_SUPTPRT2_DW3 = XHCI Supported-Protocol-Capability (USB 2.0) Register 3
 * 
 *  See XHCI specification v1.? section 7.2.
 *  INTERNAL: TODO (new unreleased XHCI errata!)
 * 
$USBDRD(0..1)_UAHC_SUPTPRT2_DW3   Address=(0x168000000089C+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field        Field   Reset      Typical    Field                                             
 Pos     Name         Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:5>  NS           RAZ     NS         NS         Reserved.                                         
 <4:0>   PROTSLOTTYPE RO      0x0        0x0        Protocol slot type.                               
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_SUPTPRT3_DW0 = XHCI Supported-Protocol-Capability (USB 3.0) Register 0
 * 
 *  See XHCI specification v1.0 section 7.2.
 * 
$USBDRD(0..1)_UAHC_SUPTPRT3_DW0   Address=(0x16800000008A0+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:24> MAJORREV   RO      0x3        0x3        Major revision.                                   
 <23:16> MINORREV   RO      0x0        0x0        Minor revision.                                   
 <15:8>  NEXTCAPPTR RO/H    0x0        0x0        Next Capability Pointer                           
                                                  Value depends on USBDRD(0..1)_UAHC_GUCTL[EXTCAPSUPTEN].
                                                  If EXTCAPSUPTEN = 0, value is 0x0. If = 1, value is 0x4.
 <7:0>   CAPID      RO      0x2        0x2        Capability ID = supported protocol.               
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_SUPTPRT3_DW1 = XHCI Supported-Protocol-Capability (USB 3.0) Register 1
 * 
 *  See XHCI specification v1.0 section 7.2.
 * 
$USBDRD(0..1)_UAHC_SUPTPRT3_DW1   Address=(0x16800000008A4+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  NAME RO      0x20425355 0x20425355 Name string: 'USB'.                               
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_SUPTPRT3_DW2 = XHCI Supported-Protocol-Capability (USB 3.0) Register 2
 * 
 *  See XHCI specification v1.0 section 7.2.
 * 
$USBDRD(0..1)_UAHC_SUPTPRT3_DW2   Address=(0x16800000008A8+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field        Field   Reset      Typical    Field                                             
 Pos     Name         Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:28> PSIC         RO      0x0        NS         Protocol speed ID count.                          
 <27:16> NS           RAZ     NS         NS         Reserved.                                         
 <15:8>  COMPATPRTCNT RO      0x1        0x1        Compatible port count.                            
 <7:0>   COMPATPRTOFF RO      0x2        0x2        Compatible port offset.                           
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_SUPTPRT3_DW3 = XHCI Supported-Protocol-Capability (USB 3.0) Register 3
 * 
 *  See XHCI specification v1.? section 7.2.
 *  INTERNAL: TODO (new unreleased XHCI errata!)
 * 
$USBDRD(0..1)_UAHC_SUPTPRT3_DW3   Address=(0x16800000008AC+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field        Field   Reset      Typical    Field                                             
 Pos     Name         Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:5>  NS           RAZ     NS         NS         Reserved.                                         
 <4:0>   PROTSLOTTYPE RO      0x0        0x0        Protocol slot type.                               
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GSBUSCFG0 = UAHC Bus Configuration Register 0
 * 
 *  This register can be used to configure the core after power-on or a change in mode of
 *  operation. This register mainly contains AXI system-related configuration parameters.
 *  Do not change this register after the initial programming. The application must program
 *  this register before starting any transactions on AXI.
 *  When INCRBRSTENA is enabled, it has the highest priority over other burst lengths. The
 *  core always perform the largest burst when enabled.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: The AXI cache signals are not connected in Cavium's hookup, so the *REQINFO fields
 *  can be ignored.
 *            See Synopsys DWC_usb3 Databook v2.50a, section 6.2.1.1.
 * 
$USBDRD(0..1)_UAHC_GSBUSCFG0   Address=(0x168000000C100+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field          Field   Reset      Typical    Field                                             
 Pos     Name           Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:28> DATRDREQINFO   R/W     0x0        0x0        AXI-cache for data-read operations. Always set to 0x0.
 <27:24> DESRDREQINFO   R/W     0x0        0x0        AXI-cache for descriptor-read operations. Always set to 0x0.
 <23:20> DATWRREQINFO   R/W     0x0        0x0        AXI-cache for data-write operations. Always set to 0x0.
 <19:16> DESWRREQINFO   R/W     0x0        0x0        AXI-cache for descriptor-write operations. Always set to 0x0.
 <15:12> RESERVED_1     R/W     0x0        0x0        Reserved.                                         
                                                      These are apparently backed by read/write registers.
 <11>    DATBIGEND      R/W     0x0        0x0        Data access is big-endian. Keep this set to 0 (little-endian) and use the
                                                      USBDRD(0..1)_UCTL_SHIM_CFG[DMA_ENDIAN_MODE] setting instead.
 <10>    DESCBIGEND     R/W     0x0        0x0        Descriptor access is big-endian. Keep this set to 0 (little-endian) and use the
                                                      USBDRD(0..1)_UCTL_SHIM_CFG[DMA_ENDIAN_MODE] setting instead.
 <9:8>   RESERVED_0     R/W     0x0        0x0        Reserved.                                         
                                                      Read must ignore.
 <7>     INCR256BRSTENA R/W     0x0        0x0        INCR256 burst-type enable. Always set to 0.       
 <6>     INCR128BRSTENA R/W     0x0        0x0        INCR128 burst-type enable. Always set to 0.       
 <5>     INCR64BRSTENA  R/W     0x0        0x0        INCR64 burst-type enable. Always set to 0.        
 <4>     INCR32BRSTENA  R/W     0x0        0x0        INCR32 burst-type enable. Always set to 0.        
 <3>     INCR16BRSTENA  R/W     0x1        0x1        INCR16 burst-type enable. Allows the AXI master to generate INCR 16-beat bursts.
 <2>     INCR8BRSTENA   R/W     0x1        0x1        INCR8 burst-type enable. Allows the AXI master to generate INCR eight-beat bursts.
 <1>     INCR4BRSTENA   R/W     0x1        0x1        INCR4 burst-type enable. Allows the AXI master to generate INCR four-beat bursts.
 <0>     INCRBRSTENA    R/W     0x1        0x1        Undefined-length INCR burst-type enable.          
                                                      This bit determines the set of burst lengths to be utilized by
                                                      the master interface. It works in conjunction with the
                                                      GSBUSCFG0[7:1] enables (INCR*BRSTENA).
                                                      If disabled, the AXI master will use only the following burst lengths:
                                                        1, 4, 8, 16 (assuming the INCR*BRSTENA are set to their reset values)
                                                      If enabled, the AXI master uses any length less than or equal to the largest-enabled
                                                      burst length based on the INCR*BRSTENA fields.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GSBUSCFG1 = UAHC Bus Configuration Register 1
 * 
 *  This register can be used to configure the core after power-on or a change in mode of
 *  operation. This register mainly contains AXI system-related configuration parameters.
 *  Do not change this register after the initial programming. The application must program
 *  this register before starting any transactions on AXI.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.2.1.2.
 * 
$USBDRD(0..1)_UAHC_GSBUSCFG1   Address=(0x168000000C104+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field          Field   Reset      Typical    Field                                             
 Pos     Name           Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:13> NS             RAZ     NS         NS         Reserved.                                         
 <12>    EN1KPAGE       R/W     0x0        0x0        1K page-boundary enable.                          
                                                      0 = AXI breaks transfers at the 4K page boundary (default)
                                                      1 = AXI breaks transfers at the 1K page boundary
 <11:8>  PIPETRANSLIMIT R/W     0xf        0xf        AXI pipelined transfers burst-request limit. Controls the number of outstanding pipelined
                                                      transfers requests the AXI master will push to the AXI slave. Once the AXI master reaches
                                                      this limit, it does not make more requests on the AXI ARADDR and AWADDR buses until the
                                                      associated data phases complete. This field is encoded as follows:
                                                      0x0 = 1 request 0x8 = 9 requests
                                                      0x1 = 2 requests 0x9 = 10 requests
                                                      0x2 = 3 requests 0xA = 11 requests
                                                      0x3 = 4 requests 0xB = 12 requests
                                                      0x4 = 5 requests 0xC = 13 requests
                                                      0x5 = 6 requests 0xD = 14 requests
                                                      0x6 = 7 requests 0xE = 15 requests
                                                      0x7 = 8 requests 0xF = 16 requests
 <7:0>   RESERVED_1     R/W     0x0        0x0        Reserved.                                         
                                                      Read must ignore.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GTXTHRCFG = UAHC TX Threshold Control Register
 * 
 *  In a normal case, a Tx burst will start as soon as one packet is prefetched.
 *  This works well as long as the system bus is faster than the USB3.0 bus (a
 *  1024-bytes packet takes ~2.2 uS on the USB bus in SuperSpeed mode). If the system bus
 *  latency is larger than 2.2 uS to access a 1024-byte packet, then starting a burst on 1-packet
 *  condition leads to an early abort of the burst causing unnecessary performance reduction.
 *  This register allows the configuration of threshold and burst size
 *  control. This feature is enabled by [USBTXPKTCNTSEL].
 *  Transmit Path:
 *    * The Tx Threshold is controlled by [USBTXPKTCNT], and the Tx burst size is
 *      controlled by [USBMAXTXBURSTSIZE].
 *    * Selecting optimal Tx FIFO size, Tx Threshold, and Tx burst size avoids Tx burst aborts due
 *      to an underrun if the system bus is slower than USB. Once in a while an underrun is OK,
 *      and there is no functional issue.
 *    * A larger threshold will affect the performance, since the scheduler is idle during this
 *      time.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.2.1.3.
 * 
$USBDRD(0..1)_UAHC_GTXTHRCFG   Address=(0x168000000C108+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field             Field   Reset      Typical    Field                                             
 Pos     Name              Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:30> RESERVED_0        R/W     0x0        0x0        Reserved.                                         
                                                         Read must ignore.
 <29>    USBTXPKTCNTSEL    R/W     0x0        0x0        USB Transmit packet-count enable. Enables/disables the USB transmission multipacket
                                                         thresholding:
                                                         0 = USB transmission multipacket thresholding is disabled, the core can only start
                                                         transmission on the USB after the entire packet has been fetched into the corresponding
                                                         TXFIFO.
                                                         1 = USB transmission multipacket thresholding is enabled. The core can only start
                                                         transmission on the USB after USBTXPKTCNT amount of packets for the USB transaction
                                                         (burst) are already in the corresponding TXFIFO. This mode is only valid in host mode.
                                                         This mode is only used for SuperSpeed.
 <28>    NS                RAZ     NS         NS         Reserved.                                         
 <27:24> USBTXPKTCNT       R/W     0x0        0x0        USB transmit-packet count. Specifies the number of packets that must be in the TXFIFO
                                                         before the core can start transmission for the corresponding USB transaction (burst). This
                                                         field is only valid when USBTXPKTCNTSEL = 1. Valid values are from 0x1 to 0xF.
                                                         Note: This field must be less than or equal to the USBMAXTXBURSTSIZE field.
 <23:16> USBMAXTXBURSTSIZE R/W     0x0        0x0        USB maximum TX burst size. When USBTXPKTCNTSEL = 1, this field specifies the maximum bulk
                                                         OUT burst the core should do. When the system bus is slower than the USB, TX FIFO can
                                                         underrun during a long burst. Program a smaller value to this field to limit the TX burst
                                                         size that the core can do. It only applies to SuperSpeed Bulk, Isochronous, and Interrupt
                                                         OUT endpoints in the host mode. Valid values are from 0x1 to 0x10.
 <15:14> RESERVED_2        R/W     0x0        0x0        Reserved.                                         
                                                         Read must ignore.
 <13:11> NS                RAZ     NS         NS         Reserved.                                         
 <10:0>  RESERVED_4        R/W     0x0        0x0        Reserved.                                         
                                                         These are apparently backed by read/write registers.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GRXTHRCFG = UAHC RX Threshhold Control Register
 * 
 *  In a normal case, an Rx burst will start as soon as 1-packet space is available.
 *  This works well as long as the system bus is faster than the USB3.0 bus (a
 *  1024-bytes packet takes ~2.2 uS on the USB bus in SuperSpeed mode). If the system bus latency
 *  is larger than 2.2 uS to access a 1024-byte packet, then starting a burst on 1-packet
 *  condition leads to an early abort of the burst causing unnecessary performance reduction.
 *  This register allows the configuration of threshold and burst size control. This feature
 *  is enabled by USBRXPKTCNTSEL.
 *  Receive Path:
 *  * The Rx Threshold is controlled by USBRXPKTCNT and the Rx burst size is controlled
 *    by USBMAXRXBURSTSIZE.
 *  * Selecting optimal Rx FIFO size, Rx Threshold, and Rx burst size avoids Rx burst aborts due
 *    to overrun if the system bus is slower than USB. Once in a while overrun is OK, and there
 *    is no functional issue.
 *  * Some devices do not support terminating ACK retry. With these devices Host cannot set ACK=0
 *    and Retry=0 and do retry later and you have to retry immediately. For such devices,
 *    minimize retry due to underrun. Setting threshold and burst size guarantees this.
 *  * A larger Rx threshold affects the performance since the scheduler is idle during this time.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.2.1.4.
 * 
$USBDRD(0..1)_UAHC_GRXTHRCFG   Address=(0x168000000C10C+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field             Field   Reset      Typical    Field                                             
 Pos     Name              Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:30> NS                RAZ     NS         NS         Reserved.                                         
 <29>    USBRXPKTCNTSEL    R/W     0x0        0x0        USB receive-packet-count enable. Enables/disables the USB reception multipacket
                                                         thresholding:
                                                         0 = the core can only start reception on the USB when the RX FIFO has space for at least
                                                         one packet.
                                                         1 = the core can only start reception on the USB when the RX FIFO has space for at least
                                                         USBRXPKTCNT amount of packets.
                                                         This mode is only used for SuperSpeed.
                                                         In device mode, setting this bit to 1 also enables the functionality of reporting
                                                         NUMP in the ACK TP based on the RX FIFO space instead of reporting a fixed NUMP derived
                                                         from USBDRD(0..1)_UAHC_DCFG[NUMP].
 <28>    NS                RAZ     NS         NS         Reserved.                                         
 <27:24> USBRXPKTCNT       R/W     0x0        0x0        USB receive-packet count.                         
                                                         In host-mode, specifies space (in number of packets) that must be available in
                                                         the RX FIFO before the core can start the corresponding USB RX transaction (burst).
                                                         In device mode, specifies the space (in number of packets) that must be available in
                                                         the RX FIFO before the core can send ERDY for a flow-controlled enpoint.
                                                         This field is only valid when USBRXPKTCNTSEL = 1. The valid values are from 0x1 to 0xF.
                                                         Note: This field must be less than or equal to the USBMAXRXBURSTSIZE field.
 <23:19> USBMAXRXBURSTSIZE R/W     0x0        0x0        USB maximum receive-burst size.                   
                                                         In host-mode, specifies the maximum bulk IN burst the core should do.
                                                         When the system bus is slower than the USB, RX FIFO can overrun during a long burst.
                                                         Program a smaller value to this field to limit the RX burst size that the core can do. It
                                                         only applies to SuperSpeed Bulk, Isochronous, and Interrupt IN endpoints in the host mode.
                                                         In device mode, specified the NUMP value that will be sent in ERDy for an OUT endpoint.
                                                         This field is only valid when USBRXPKTCNTSEL = 1. The valid values are from 0x1 to 0x10.
 <18:16> NS                RAZ     NS         NS         Reserved.                                         
 <15>    RESERVED_3        R/W     0x0        0x0        Reserved.                                         
                                                         These are apparently backed by read/write registers.
 <14:11> NS                RAZ     NS         NS         Reserved.                                         
 <10:0>  RESERVED_5        R/W     0x0        0x0        Reserved.                                         
                                                         Read must ignore.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GCTL = UAHC Control Register
 * 
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.2.1.5.
 * 
$USBDRD(0..1)_UAHC_GCTL   Address=(0x168000000C110+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field            Field   Reset      Typical    Field                                             
 Pos     Name             Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:19> PWRDNSCALE       R/W     0x618      0x618      Power down scale. The USB3 suspend-clock input replaces pipe3_rx_pclk as a clock source to
                                                        a small part of the USB3 core that operates when the SuperSpeed PHY is in its lowest power
                                                        (P3) state, and therefore does not provide a clock. This field specifies how many suspend-
                                                        clock periods fit into a 16 kHz clock period. When performing the division, round up the
                                                        remainder.
                                                        For example, when using an 32-bit PHY and 25-MHz suspend clock, PWRDNSCALE = 25000 kHz/16
                                                        kHz = 1563 (rounded up).
                                                        The minimum suspend-clock frequency is 32 KHz, and maximum suspend-clock frequency is 125
                                                        MHz.
                                                        The LTSSM uses Suspend clock for 12-ms and 100-ms timers during suspend mode. According to
                                                        the USB 3.0 specification, the accuracy on these timers is 0% to +50%.
                                                        12 ms + 0~+50% accuracy = 18 ms  (Range is  12 ms  - 18 ms)
                                                        100 ms + 0~+50% accuracy = 150 ms (Range is 100 ms - 150 ms).
                                                        The suspend clock accuracy requirement is:
                                                        ( 12,000/62.5) * (GCTL[31:19]) * actual suspend_clk_period should be between 12,000 and
                                                        18,000
                                                        (100,000/62.5) * (GCTL[31:19]) * actual suspend_clk_period should be between 100,000 and
                                                        150,000
                                                        For example, if your suspend_clk frequency varies from 7.5 MHz to 10.5MHz, then the value
                                                        needs to programmed is: Power Down Scale = 10500/16 = 657 (rounded up; and fastest
                                                        frequency used)
 <18>    MASTERFILTBYPASS R/W     0x0        0x0        Master Filter Bypass                              
                                                        When this bit is set to 1, all the filters in the
                                                        controller's filter module will be bypassed. The double
                                                        synchronizers to mac_clk preceding the filters will also be
                                                        bypassed. For enabling the filters, this bit should be 0.
 <17>    BYPSSETADDR      R/W     0x0        0x0        Bypass SetAddress in Device Mode                  
                                                        Always set to 0.
                                                        INTERNAL: When set, core uses the value in USBDRD(0..1)_UAHC_DCFG[DEVADDR] directly
                                                        for comparing the device address tokens. In simulation, this can be used to avoid
                                                        sending a SET_ADDRESS command.
 <16>    U2RSTECN         R/W     0x0        0x0        If the SuperSpeed commenction fails during POLL or LMP exchange, the device connects
                                                        at non-SuperSpeed mode. If this bit is set, then device attemps three more times to
                                                        connect at SuperSpeed, even if it previously failed to operate in SuperSpeed mode.
                                                        This bit is only applicable in device mode.
 <15:14> FRMSCLDWN        R/W     0x0        0x0        Frame scale down. Scales down device view of a SOF/USOF/ITP duration.
                                                        For SuperSpeed/HighSpeed mode:
                                                        0x3 = interval is 15.625 us
                                                        0x2 = interval is 31.25 us
                                                        0x1 = interval is 62.5 us
                                                        0x0 = interval is 125 us
                                                        For FullSpeed mode, the scale-down value is multiplied by 8.
 <13:12> PRTCAPDIR        R/W     0x2        0x2        2'b01: for Host configurations                    
                                                        2'b10: for Device configurations
 <11>    CORESOFTRESET    R/W     0x0        0x0        Core soft reset: 1 = soft reset to core, 0 = no soft reset.
                                                        Clears the interrupts and all the USBDRD(0..1)_UAHC_* CSRs except the
                                                        following registers: USBDRD(0..1)_UAHC_GCTL, USBDRD(0..1)_UAHC_GUCTL,
                                                        USBDRD(0..1)_UAHC_GSTS,
                                                        USBDRD(0..1)_UAHC_GRLSID, USBDRD(0..1)_UAHC_GGPIO, USBDRD(0..1)_UAHC_GUID,
                                                        USBDRD(0..1)_UAHC_GUSB2PHYCFG[*],
                                                        USBDRD(0..1)_UAHC_GUSB3PIPECTL[*].
                                                        When you reset PHYs (using USBDRD(0..1)_UAHC_GUBS3PHYCFG or USBDRD(0..1)_UAHC_GUSB3PIPECTL
                                                        registers), you must keep the core in reset state until PHY
                                                        clocks are stable. This controls the bus, ram, and mac domain
                                                        resets.
                                                        Note: Under soft reset, accesses to USBDRD(0..1)_UAHC_* CSRs other than
                                                        USBDRD(0..1)_UAHC_GCTL may fail (Timeout).
                                                        Note: This bit is for debug purposes only. Use USBDRD(0..1)_UAHC_USBCMD.HCRESET in host
                                                        mode and USBDRD(0..1)_UAHC_DCTL[CSFTRST] in device mode for soft reset.
                                                        INTERNAL: Refer to Reset Generation on Synopsys Databook page 250.
 <10>    SOFITPSYNC       R/W     0x0        0x0        Synchronize ITP to reference clock. In host mode, if this bit is set to:
                                                        0 = the core keeps the UTMI/ULPI PHY on the first port in non-suspended state whenever
                                                        there is a SuperSpeed port that is not in Rx.Detect, SS.Disable, and U3 state.
                                                        1 = the core keeps the UTMI/ULPI PHY on the first port in non-suspended state whenever the
                                                        other non-SuperSpeed ports are not in suspended state.
                                                        This feature is useful because it saves power by suspending UTMI/ULPI when SuperSpeed only
                                                        is active and it helps resolve when the PHY does not transmit a host resume unless it is
                                                        placed in suspend state.
                                                        This bit must be programmed as a part of initialization at power-on reset, and must not be
                                                        dynamically changed afterwards.
                                                        Note: USBDRD(0..1)_UAHC_USB2PHYCFG[*][SUSPHY] eventually decides to put the UTMI/ULPI PHY
                                                        into suspend state. In addition, when this bit is set to 1, the core generates ITP off of
                                                        the REF_CLK-based counter. Otherwise, ITP and SOF are generated off of UTMI/ULPI_CLK[0]
                                                        based counter. To program the reference clock period inside the core, refer to
                                                        USBDRD(0..1)_UAHC_GUCTL[REFCLKPER].
                                                        Note: If you plan to enable hardware-based LPM (PORTPMSC.HLE = 1), this feature cannot be
                                                        used. Turn off this feature by setting this bit to zero and use the
                                                        USBDRD(0..1)_UAHC_GFLADJ[GFLADJ_REFCLK_LPM_SEL] feature.
                                                        Note: If you set this bit to 1, the USBDRD(0..1)_UAHC_GUSB2PHYCFG[U2_FREECLK_EXISTS] bit
                                                        must be set to zero.
                                                        This bit is only used in host-mode.
                                                        INTERNAL: If you do not plan to ever use this feature or the
                                                        USBDRD(0..1)_UAHC_GFLADJ[GFLADJ_REFCLK_LPM_SEL] feature, the minimum frequence for the
                                                        ref_clk can be as low as 32KHz. You can connect the SUSPEND_CLK (as low as 32 KHz) to
                                                        REF_CLK.
 <9>     U1U2TIMERSCALE   R/W     0x0        0x0        Disable U1/U2 timer scaledown. If set to 1, along with SCALEDOWN =0x1, disables the scale
                                                        down of U1/U2 inactive timer values.
                                                        This is for simulation mode only.
 <8>     DEBUGATTACH      R/W     0x0        0x0        Debug attach. When this bit is set:               
                                                        SuperSpeed link proceeds directly to the polling-link state (USBDRD(0..1)_UAHC_DCTL[RS]
                                                        register is asserted) without checking remote termination.
                                                        Link LFPS polling timeout is infinite
                                                        Polling timeout during TS1 is infinite (in case link is waiting for TXEQ to finish).
 <7:6>   RAMCLKSEL        R/W     0x0        0x0        RAM clock select. Always keep set to 0x0.         
 <5:4>   SCALEDOWN        R/W     0x0        0x0        Scale-down mode. When scale-down mode is enabled for simulation, the core uses scaled-down
                                                        timing values, resulting in faster simulations. When scale-down mode is disabled, actual
                                                        timing values are used. This is required for hardware operation.
                                                        HighSpeed/FullSpeed/LowSpeed modes:
                                                        0x0 = disables all scale-downs. Actual timing values are used.
                                                        0x1 = enables scale-down of all timing values. These include:
                                                        speed enumeration
                                                        HNP/SRP
                                                        suspend and resume
                                                        0x2 = N/A
                                                        0x3 = enables bits <0> and <1> scale-down timing values.
                                                        SuperSpeed mode:
                                                        0x0 = disables all scale-downs. Actual timing values are used.
                                                        0x1 = enables scaled down SuperSpeed timing and repeat values including:
                                                        number of TxEq training sequences reduce to eight
                                                        LFPS polling burst time reduce to 100 ns
                                                        LFPS warm reset receive reduce to 30 us.
                                                        0x2 = no TxEq training sequences are sent. Overrides bit<4>.
                                                        0x3 = enables bits<0> and <1> scale-down timing values.
                                                        INTERNAL: Refer to the rtl_vip_scaledown_mapping.xls file under <workspace>/sim/SoC_sim
                                                        directory for the complete list.
 <3>     DISSCRAMBLE      R/W     0x0        0x0        Disable scrambling. Transmit request to link partner on next transition to recovery or polling.
 <2>     U2EXIT_LFPS      R/W     0x1        0x1        If this bit is,                                   
                                                        0: the link treats 248ns LFPS as a valid U2 exit.
                                                        1: the link waits for 8us of LFPS before it detects a valid U2 exit.
                                                        This bit is added to improve interoperability with a third party host
                                                        controller. This host controller in U2 state while performing
                                                        receiver detection generates an LFPS glitch of about 4s
                                                        duration. This causes the device to exit from U2 state because
                                                        the LFPS filter value is 248ns. With the new functionality enabled,
                                                        the device can stay in U2 while ignoring this glitch from the host
                                                        controller.
 <1>     NS               RAZ     NS         NS         Reserved.                                         
 <0>     DSBLCLKGTNG      R/W     0x0        0x0        Disable clock gating. When set to 1 and the core is in low-power mode, internal clock
                                                        gating is disabled, which means the clocks are always running. This bit can be set to 1
                                                        after power-up reset.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GPMSTS = UAHC Global Power Management Status Register
 * 
 *  This debug register gives information on which event caused the hibernation exit.
 *  These registers are for debug purposes. They provide debug information on the internal status
 *  and state machines.
 *  Global Debug Registers have design-specific information, and are used by for
 *  debugging purposes. These registers are not intended to be used by the customer. If any
 *  debug assistance is needed for the silicon, contact Customer Support with a dump
 *  of these registers.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.2.4.1.
 *            Contact Synopsys directly.
 * 
$USBDRD(0..1)_UAHC_GPMSTS   Address=(0x168000000C114+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:28> PORTSEL  WO      NS         NS         This field selects the port number. Always 0x0.   
 <27:17> NS       RAZ     NS         NS         Reserved.                                         
 <16:12> U3WAKEUP RO/H    0x0        NS         This field gives the USB 3.0 port wakeup conditions
                                                Bit [12]: Overcurrent Detected
                                                Bit [13]: Resume Detected
                                                Bit [14]: Connect Detected
                                                Bit [15]: Disconnect Detected
                                                Bit [16]: Last Connection State
 <11:10> NS       RAZ     NS         NS         Reserved.                                         
 <9:0>   U2WAKEUP RO/H    0x0        NS         This field indicates the USB 2.0 port wakeup conditions
                                                Bit [0]: Overcurrent Detected
                                                Bit [1]: Resume Detected
                                                Bit [2]: Connect Detected
                                                Bit [3]: Disconnect Detected
                                                Bit [4]: Last Connection State
                                                Bit [5]: ID Change Detected
                                                Bit [6]: SRP Request Detected
                                                Bit [7]: ULPI Interrupt Detected
                                                Bit [8]: USB Reset Detected
                                                Bit [9]: Resume Detected Changed
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GSTS = UAHC Status Register
 * 
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.2.1.6.
 * 
$USBDRD(0..1)_UAHC_GSTS   Address=(0x168000000C118+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field         Field   Reset      Typical    Field                                             
 Pos     Name          Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:20> CBELT         RO/H    0x3e8      0x3e8      Current BELT value. In host mode, indicates the minimum value of all received device BELT
                                                     values and the BELT value that is set by the Set Latency Tolerance Value command.
 <19:8>  NS            RAZ     NS         NS         Reserved.                                         
 <7>     HOST_IP       RO/H    0x0        NS         Host interrupt pending. Indicates that there is a pending interrupt pertaining to xHC in
                                                     the host-event queue.
 <6>     DEVICE_IP     RO/H    0x0        NS         Device interrupt pending. Indicates that there is a pending interrupt pertaining to
                                                     peripheral (device) operation in the Device event queue.
 <5>     CSRTIMEOUT    R/W1C/H 0x0        0x0        CSR timeout. When set to 1, indicates that software performed a write or read operation to
                                                     a core register that could not be completed within 0xFFFF host-controller clock cycles.
 <4>     BUSERRADDRVLD R/W1C/H 0x0        0x0        Bus-error address valid. Indicates that USBDRD(0..1)_UAHC_GBUSERRADDR_* is valid and
                                                     reports the first bus address that encounters a bus error.
 <3:2>   NS            RAZ     NS         NS         Reserved.                                         
 <1:0>   CURMOD        RO/H    0x0        0x0        Current mode of operation. 0x0 for device, 0x1 for host.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GUCTL1 = UAHC Global User Control Register 1
 * 
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.2.1.7.
 * 
$USBDRD(0..1)_UAHC_GUCTL1   Address=(0x168000000C11C+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field             Field   Reset      Typical    Field                                             
 Pos     Name              Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:2>  RESERVED_0        R/W     0x0        0x0        Reserved.                                         
 <1>     OVRLD_L1_SUSP_COM R/W     0x0        0x0        Always set to 0x0.                                
 <0>     LOA_FILTER_EN     R/W     0x0        0x0        If this bit is set the USB 2.0 port babble is checked at least three
                                                         consecutive times before the port is disabled. This prevents false
                                                         triggering of the babble condition when using low quality cables.
                                                         This bit is only valid in host mode.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GRLSID = UAHC Release ID Register
 * 
 *  This is a read-only register that contains the release number of the core.
 *  INTERNAL: Original name: GSNPSID = Synopsys ID
 *            See Synopsys DWC_usb3 Databook v2.50a, section 6.2.1.8.
 * 
$USBDRD(0..1)_UAHC_GRLSID   Address=(0x168000000C120+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  RELEASEID RO      0x5533250a 0x5533250a Software can use this register to configure release-specific features in the driver.
                                                 
                                                 INTERNAL: Synopsys ID
                                                         * SynopsysID[31:16] indicates Core Identification Number. 0x5533 is ASCII for U3
                                                 (DWC_usb3).
                                                         * SynopsysID[15:0] indicates the release number. Current Release is 2.50a.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GGPIO = UAHC General-Purpose I/O Register
 * 
 *  The application can use this register for general purpose input and output ports or for
 *  debugging.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.2.1.9.
 * 
$USBDRD(0..1)_UAHC_GGPIO   Address=(0x168000000C124+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> GPO R/W     0x0        0x0        General purpose output. These outputs are not connected to anything. Can be used as scratch.
 <15:0>  GPI RO      0x0        0x0        General purpose input. These inputs are tied 0x0. 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GUID = UAHC User ID Register
 * 
 *  This is a read/write register containing the User ID. The power-on value for this register is
 *  specified as the User Identification Register. This register can be used in the following
 *  ways:
 *    * To store the version or revision of your system
 *    * To store hardware configurations that are outside the core
 *    * As a scratch register
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.2.1.10.
 * 
$USBDRD(0..1)_UAHC_GUID   Address=(0x168000000C128+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  USERID R/W     0xdecafbad NS         User ID. Application-programmable ID field.       
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GUCTL = UAHC User-Control Register
 * 
 *  This register provides a few options for the software to control the core behavior in the Host
 *  mode.
 *  Most of the options are used to improve host inter-operability with different devices.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.2.1.11.
 * 
$USBDRD(0..1)_UAHC_GUCTL   Address=(0x168000000C12C+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field               Field   Reset      Typical    Field                                             
 Pos     Name                Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:22> REFCLKPER           R/W     0x8        0x8        Reference-clock period. Indicates (in terms of ns) the period of REF_CLK. The default
                                                           value is set to 0x8 (8 ns/125 MHz).
                                                           This field needs to be updated during power on initialization if
                                                           USBDRD(0..1)_UAHC_GCTL[SOFITPSYNC] = 1 or
                                                           USBDRD(0..1)_UAHC_GFLADJ[GFLADJ_REFCLK_LPM_SEL] = 1. The progammable maximum value
                                                           62 ns, and the minimum value is 8 ns. You use a reference clock with a period that is
                                                           a integer multiple, so that ITP can meet the jitter margin of 32ns. The allowable
                                                           REF_CLK frequencies whose period is not integer multiples are 16/17/19.2/24/39.7MHz.
                                                           This field should not be set to 0x0 at any time. If you do not plan to use this feature,
                                                           then you need to set this field to 0x8, the default value.
 <21>    NOEXTRDL            R/W     0x0        0x0        No extra delay between SOF and the first packet.  
                                                           Some HighSpeed devices misbehave when the host sends a packet immediately after an SOF.
                                                           However, adding an extra delay between an SOF and the first packet can reduce the USB data
                                                           rate and performance.
                                                           This bit is used to control whether the host should wait for 2 us before it sends the
                                                           first packet after a SOF, or not. You can set this bit to 1 to improve the performance if
                                                           those problematic devices are not a concern in your host environment.
                                                           0 = host waits for 2 us after an SOF before it sends the first USB packet.
                                                           1 = host does not wait after an SOF before it sends the first USB packet.
 <20:18> PSQEXTRRESSP        R/W     0x0        0x0        PSQ extra reserved space. This is a debug feature, and is not intended for normal usage.
                                                           This parameter specifies how much additional space in the PSQ (protocol-status queue) must
                                                           be reserved before the U3PTL initiates a new USB transaction and burst beats.
 <17>    SPRSCTRLTRANSEN     R/W     0x0        0x0        Sparse control transaction enable. Some devices are slow in responding to control
                                                           transfers. Scheduling multiple transactions in one microframe/frame can cause these
                                                           devices to misbehave. If this bit is set to 1, the host controller schedules transactions
                                                           for a control transfer in different microframes/frames.
 <16>    RESBWHSEPS          R/W     0x0        0x0        Reserving 85% bandwidth for HighSpeed periodic EPs. By default, host conroller reserves
                                                           80% of the bandwidth for periodic EPs. If this bit is set, the bandwidth is relaxed to
                                                           85% to accommodate two HighSpeed, high-bandwidth ISOC EPs.
                                                           USB 2.0 required 80% bandwidth allocated for ISOC traffic. If two high bandwidth ISOC
                                                           devices (HD webcams) are connected, and if each requires 1024-bytes * 3 packets per
                                                           microframe, then the bandwidth required is around 82%. If this bit is set to 1, it is
                                                           possible to connect two webcams of 1024 bytes * 3 payload per microframe each. Otherwise,
                                                           you may have to reduce the resolution of the webcams.
 <15>    CMDEVADDR           R/W     0x1        0x1        Compliance mode for device address. When set to 1, slot ID can have different value than
                                                           device address if max_slot_enabled < 128.
                                                           1 = increment device address on each address device command.
                                                           0 = device address is equal to slot ID.
                                                           The XHCI compliance requires this bit to be set to 1. The 0 mode is for debug purpose
                                                           only. This allows you to easily identify a device connected to a port in the Lecroy or
                                                           Eliisys trace during hardware debug.
                                                           This bit is used in host mode only.
 <14>    USBHSTINAUTORETRYEN R/W     0x0        0x0        Host IN auto-retry enable. When set, this field enables the auto-retry feature. For IN
                                                           transfers (non-isochronous) that encounter data packets with CRC errors or internal
                                                           overrun scenarios, the auto-retry feature causes the host core to reply to the device with
                                                           a non-terminating retry ACK (i.e. an ACK transaction packet with Retry = 1 and NumP != 0).
                                                           If the auto-retry feature is disabled (default), the core responds with a terminating
                                                           retry ACK (i.e. an ACK transaction packet with Retry = 1 and NumP = 0).
 <13>    ENOVERLAPCHK        R/W     0x0        0x0        Enable Check for LFPS Overlap During Remote Ux Exit.
                                                           If this bit is set to:
                                                             1: The SuperSpeed link when exiting U1/U2/U3 waits for either
                                                             the remote link LFPS or TS1/TS2 training symbols before it
                                                             confirms that the LFPS handshake is complete. This is done to
                                                             handle the case where the LFPS glitch causes the link to start
                                                             exiting from the low power state. Looking for the LFPS overlap
                                                             makes sure that the link partner also sees the LFPS.
                                                             0: When the link exists U1/U2/U3 because of a remote exit, it
                                                             does not look for an LFPS overlap.
 <12>    EXTCAPSUPTEN        R/W     0x0        0x0        External Extended Capability Support Enable.      
                                                           If disabled, a read USBDRD(0..1)_UAHC_SUPTPRT3_DW0[NEXTCAPPTR]
                                                           will return 0 in the Next Capability Pointer field. This
                                                           indicates there are no more capabilities. If enabled, a read
                                                           to USBDRD(0..1)_UAHC_SUPTPRT3_DW0[NEXTCAPPTR] will return 4 in the
                                                           Next Capability Pointer field.
                                                           
                                                           Always set to 0x0.
 <11>    INSRTEXTRFSBODI     R/W     0x0        0x0        Insert extra delay between FullSpeed bulk OUT transactions. Some FullSpeed devices are
                                                           slow to receive bulk OUT data and can get stuck when there are consecutive bulk OUT
                                                           transactionswith short inter-transaction delays. This bit is used to control whether the
                                                           host inserts extra delay between consecutive bulk OUT transactions to a FullSpeed
                                                           endpoint.
                                                           1 = host inserts about 12us extra delay between consecutive bulk OUT transactions to an
                                                           FullSpeed endpoint to work around the device issue.
                                                           0 = host does not insert extra delay.
                                                           Setting this bit to 1 reduces the bulk OUT transfer performance for most of the FullSpeed
                                                           devices.
 <10:9>  DTCT                R/W     0x0        0x0        Device timeout coarse tuning. This field determines how long the host waits for a response
                                                           from device before considering a timeout.
                                                           The core first checks the DTCT value. If it is 0, then the timeout value is defined by the
                                                           DTFT. If it is non-zero, then it uses the following timeout values:
                                                           0x0 = 0 us; use DTFT value instead
                                                           0x1 = 500 us
                                                           0x2 = 1.5 ms
                                                           0x3 = 6.5 ms
 <8:0>   DTFT                R/W     0x10       0x10       Device timeout fine tuning. This field determines how long the host waits for a response
                                                           from a device before considering a timeout. For DTFT to take effect, DTCT must be set to
                                                           0x0.
                                                           The DTFT value specifies the number of 125MHz clock cycles * 256 to count before
                                                           considering a device timeout. For the 125 MHz clock cycles (8 ns period), this is
                                                           calculated as follows:
                                                           [DTFT value] * 256 * 8 (ns)
                                                           DTFT Value Calculation Timeout
                                                           0x2 2 * 256 * 8 4 us
                                                           0x5 5 * 256 * 8 10 us
                                                           0xA 10 * 256 * 8 20 us
                                                           0x10 16 * 256 * 8 32 us
                                                           0x19 25 * 256 * 8 51 us
                                                           0x31 49 * 256 * 8 100 us
                                                           0x62 98 * 256 * 8 200 us
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GBUSERRADDR = UAHC Bus-Error-Address Register
 * 
 *  When the AXI Master Bus returns "Error" response, the "SoC Bus Error" is generated. In the
 *  Host mode, the host_system_err port indicates this condition. In addition, it is also
 *  indicated in the USBSTS.HSE field.
 *  Due to the nature of AXI, it is possible that multiple AXI transactions are active at a time.
 *  The Host Controller does not keep track of the start address of all outstanding
 *  transactions. Instead, it keeps track of the start address of the DMA transfer associated
 *  with all active transactions. It is this address that is reported in the GBUSERRADDR when
 *  a bus error occurs.
 *  For example, if the Host Controller initiates a DMA transfer to write 1k of packet data
 *  starting at buffer address 0xABCD0000, and this DMA is broken up into multiple 256B bursts
 *  on the AXI, then if a bus error occurs on any of these associated AXI transfers, the
 *  GBUSERRADDR reflects the DMA start address of 0xABCD0000 regardless of which AXI transaction
 *  received the error.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.2.1.12.
 * 
$USBDRD(0..1)_UAHC_GBUSERRADDR   Address=(0x168000000C130+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  BUSADDR RO/H    0x0        0x0        Bus address bits<63:0>. Contains the lower 32 bits of the first bus address that
                                               encountered an SoC bus error. It is valid when USBDRD(0..1)_UAHC_GSTS[BUSERRADDRVLD] = 1.
                                               It can only be cleared by resetting the core.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GPRTBIMAP = UAHC SuperSpeed Port-to-Bus Instance Mapping Register
 * 
 *  This register specifies the SuperSpeed USB instance number to which each USB 3.0 port is
 *  connected. By default, USB 3.0 ports are evenly distributed among all SuperSpeed USB
 *  instances. Software can program this register to specify how USB 3.0 ports are connected
 *  to SuperSpeed USB instances.
 *  The UAHC only implements one SuperSpeed bus-instance, so this register should always be 0.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.2.2.1.
 * 
$USBDRD(0..1)_UAHC_GPRTBIMAP   Address=(0x168000000C138+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS     RAZ     NS         NS         Reserved.                                         
 <3:0>   BINUM1 R/W     0x0        0x0        SuperSpeed USB instance number for port 1         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GHWPARAMS0 = UAHC Hardware Parameters Register 0
 * 
 *  These registers contain the hardware configuration options selected at compile-time.
 *  INTERNAL: Register field names refer to Synopsys DWC_USB3_* parameters of the same suffix.
 *            See Synopsys DWC_usb3 Databook v2.50a, section 6.2.3.1.
 * 
$USBDRD(0..1)_UAHC_GHWPARAMS0   Address=(0x168000000C140+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:24> AWIDTH    RO      0x40       0x40       USB core bus-address width.                       
 <23:16> SDWIDTH   RO      0x20       0x20       USB core bus slave-data width.                    
 <15:8>  MDWIDTH   RO      0x40       0x40       USB core bus master-data width.                   
 <7:6>   SBUS_TYPE RO      0x1        0x1        USB core bus slave type: AXI.                     
 <5:3>   MBUS_TYPE RO      0x1        0x1        USB core bus master type: AXI.                    
 <2:0>   MODE      RO      0x2        0x2        Operation mode: 0x2: Dual-role device.            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GHWPARAMS1 = UAHC Hardware Parameters Register 1
 * 
 *  These registers contain the hardware configuration options selected at compile-time.
 *  INTERNAL: Register field names refer to Synopsys DWC_USB3_* parameters of the same suffix.
 *            See Synopsys DWC_usb3 Databook v2.50a, section 6.2.3.2.
 * 
$USBDRD(0..1)_UAHC_GHWPARAMS1   Address=(0x168000000C144+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field             Field   Reset      Typical    Field                                             
 Pos     Name              Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31>    EN_DBC            RAZ     NS         NS         Enable debug capability.                          
 <30>    RM_OPT_FEATURES   RO      0x0        0x0        Remove optional features.                         
 <29>    SYNC_RST          RO      0x0        0x0        Synchronous reset coding.                         
 <28>    RAM_BUS_CLKS_SYNC RO      0x0        0x0        RAM_CLK and BUS_CLK are synchronous.              
                                                         INTERNAL: (appears to be orthogonal from the RAM_CLK_TO_BUS_CLK parameter)
 <27>    MAC_RAM_CLKS_SYNC RO      0x0        0x0        MAC3_CLK and RAM_CLK are synchronous.             
 <26>    MAC_PHY_CLKS_SYNC RO      0x0        0x0        MAC3_CLK and PHY_CLK are synchronous.             
 <25:24> EN_PWROPT         RO      0x1        0x1        Power optimization mode.                          
                                                         Bit <0>: clock-gating feature available.
                                                         Bit <1>: hibernation feature available.
 <23>    SPRAM_TYP         RO      0x1        0x1        SRAM type: one-port RAMs.                         
 <22:21> NUM_RAMS          RO      0x3        0x3        Number of RAMs.                                   
 <20:15> DEVICE_NUM_INT    RO      0x1        0x1        Number of event buffers (and interrupts) in device-mode.
 <14:12> ASPACEWIDTH       RO      0x4        0x4        Native interface address-space port width.        
 <11:9>  REQINFOWIDTH      RO      0x4        0x4        Native interface request/response-info port width.
 <8:6>   DATAINFOWIDTH     RO      0x4        0x4        Native interface data-info port width.            
 <5:3>   BURSTWIDTH_M1     RO      0x7        0x7        Width - 1 of AXI Length field.                    
 <2:0>   IDWIDTH_M1        RO      0x3        0x3        Width - 1 of AXI ID field.                        
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GHWPARAMS2 = UAHC Hardware Parameters Register 2
 * 
 *  These registers contain the hardware configuration options selected at compile-time.
 *  INTERNAL: Register field names refer to Synopsys DWC_USB3_* parameters of the same suffix.
 *            See Synopsys DWC_usb3 Databook v2.50a, section 6.2.3.3.
 * 
$USBDRD(0..1)_UAHC_GHWPARAMS2   Address=(0x168000000C148+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  USERID RO      0xdecafbad 0xdecafbad User ID.                                          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GHWPARAMS3 = UAHC Hardware Parameters Register 3
 * 
 *  These registers contain the hardware configuration options selected at compile-time.
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.2.3.4.
 * 
$USBDRD(0..1)_UAHC_GHWPARAMS3   Address=(0x168000000C14C+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field                      Field   Reset      Typical    Field                                             
 Pos     Name                       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31>    NS                         RAZ     NS         NS         Reserved.                                         
 <30:23> CACHE_TOTAL_XFER_RESOURCES RO      0x8        0x8        Maximum number of transfer resources in the core. 
 <22:18> NUM_IN_EPS                 RO      0x4        0x4        Maximum number of device-mode IN endpoints active.
 <17:12> NUM_EPS                    RO      0x8        0x8        Number of device-mode single-directional endpoints.
 <11>    ULPI_CARKIT                RO      0x0        0x0        ULPI Carkit is not supported.                     
 <10>    VENDOR_CTL_INTERFACE       RO      0x0        0x0        UTMI+ PHY vendor control interface enabled.       
 <9:8>   NS                         RAZ     NS         NS         Reserved.                                         
 <7:6>   HSPHY_DWIDTH               RO      0x2        0x2        Data width of the UTMI+ PHY interface: 0x2 = 8-or-16 bits.
 <5:4>   FSPHY_INTERFACE            RO      0x0        0x0        USB 1.1 FullSpeed serial transceiver interface.   
 <3:2>   HSPHY_INTERFACE            RO      0x1        0x1        HighSpeed PHY interface: 0x1 = UTMI+.             
 <1:0>   SSPHY_INTERFACE            RO      0x1        0x1        SuperSpeed PHY interface: 0x1 = PIPE3.            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GHWPARAMS4 = UAHC Hardware Parameters Register 4
 * 
 *  These registers contain the hardware configuration options selected at compile-time.
 *  INTERNAL: Register field names refer to Synopsys DWC_USB3_* parameters of the same suffix.
 *            See Synopsys DWC_usb3 Databook v2.50a, section 6.2.3.5.
 * 
$USBDRD(0..1)_UAHC_GHWPARAMS4   Address=(0x168000000C150+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field                   Field   Reset      Typical    Field                                             
 Pos     Name                    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:28> BMU_LSP_DEPTH           RO      0x4        0x4        Depth of the BMU-LSP status buffer.               
 <27:24> BMU_PTL_DEPTH_M1        RO      0x7        0x7        Depth of the BMU-PTL source/sink buffers minus 1. 
 <23>    EN_ISOC_SUPT            RO      0x1        0x1        Isochronous support enabled.                      
 <22>    NS                      RAZ     NS         NS         Reserved.                                         
 <21>    EXT_BUFF_CONTROL        RO      0x0        0x0        Enables device external buffer control sideband controls
 <20:17> NUM_SS_USB_INSTANCES    RO      0x1        0x1        Number of SuperSpeed bus instances.               
 <16:13> HIBER_SCRATCHBUFS       RO      0x1        0x1        Number of hibernation scratchpad buffers.         
 <12:6>  NS                      RAZ     NS         NS         Reserved.                                         
 <5:0>   CACHE_TRBS_PER_TRANSFER RO      0x4        0x4        Number of TRBs per transfer that can be cached.   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GHWPARAMS5 = UAHC Hardware Parameters Register 5
 * 
 *  These registers contain the hardware configuration options selected at compile-time.
 *  INTERNAL: Register field names refer to Synopsys DWC_USB3_* parameters of the same suffix.
 *            See Synopsys DWC_usb3 Databook v2.50a, section 6.2.3.6.
 * 
$USBDRD(0..1)_UAHC_GHWPARAMS5   Address=(0x168000000C154+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field           Field   Reset      Typical    Field                                             
 Pos     Name            Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:28> NS              RAZ     NS         NS         Reserved.                                         
 <27:22> DFQ_FIFO_DEPTH  RO      0x10       0x10       Size of the BMU descriptor fetch-request queue.   
 <21:16> DWQ_FIFO_DEPTH  RO      0x20       0x20       Size of the BMU descriptor write queue.           
 <15:10> TXQ_FIFO_DEPTH  RO      0x8        0x8        Size of the BMU Tx request queue.                 
 <9:4>   RXQ_FIFO_DEPTH  RO      0x8        0x8        Size of the BMU Rx request queue.                 
 <3:0>   BMU_BUSGM_DEPTH RO      0x8        0x8        Depth of the BMU-BUSGM source/sink buffers.       
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GHWPARAMS6 = UAHC Hardware Parameters Register 6
 * 
 *  These registers contain the hardware configuration options selected at compile-time.
 *  INTERNAL: Register field names refer to Synopsys DWC_USB3_* parameters of the same suffix.
 *            See Synopsys DWC_usb3 Databook v2.50a, section 6.2.3.7.
 * 
$USBDRD(0..1)_UAHC_GHWPARAMS6   Address=(0x168000000C158+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field          Field   Reset      Typical    Field                                             
 Pos     Name           Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> RAM0_DEPTH     RO      0x740      0x740      RAM0 Depth.                                       
 <15>    EN_BUS_FILTERS RO      0x1        0x1        VBus filters support.                             
 <14>    EN_BC          RO      0x0        0x0        Battery-charging support.                         
 <13>    EN_OTG_SS      RO      0x0        0x0        OTG SuperSpeed support.                           
 <12>    EN_ADP         RO      0x0        0x0        ADP support.                                      
 <11>    HNP_SUPPORT    RO      0x0        0x0        HNP support.                                      
 <10>    SRP_SUPPORT    RO      0x0        0x0        SRP support.                                      
 <9:8>   NS             RAZ     NS         NS         Reserved.                                         
 <7>     EN_FPGA        RO      0x0        0x0        FPGA implementation.                              
 <6>     EN_DBG_PORTS   RO      0x0        0x0        Debug ports for FGPA.                             
 <5:0>   PSQ_FIFO_DEPTH RO      0x20       0x20       Size of the BMU-protocol status queue.            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GHWPARAMS7 = UAHC Hardware Parameters Register 7
 * 
 *  These registers contain the hardware configuration options selected at compile-time.
 *  INTERNAL: Register field names refer to Synopsys DWC_USB3_* parameters of the same suffix.
 *            See Synopsys DWC_usb3 Databook v2.50a, section 6.2.3.8.
 * 
$USBDRD(0..1)_UAHC_GHWPARAMS7   Address=(0x168000000C15C+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> RAM2_DEPTH RO      0x308      0x308      RAM2 depth.                                       
 <15:0>  RAM1_DEPTH RO      0x4ce      0x4ce      RAM1 depth.                                       
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GDBGFIFOSPACE = UAHC Debug Queue/FIFO Space Available Register
 * 
 *  These registers are for debug purposes. They provide debug information on the internal status
 *  and state machines.
 *  Global Debug Registers have design-specific information, and are used by for
 *  debugging purposes. These registers are not intended to be used by the customer. If any
 *  debug assistance is needed for the silicon, contact Customer Support with a dump
 *  of these registers.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.2.4.2.
 *            Contact Synopsys directly.
 * 
$USBDRD(0..1)_UAHC_GDBGFIFOSPACE   Address=(0x168000000C160+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field          Field   Reset      Typical    Field                                             
 Pos     Name           Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> SPACEAVAILABLE RO/H    0x82       NS         Space available in the selected FIFO.             
 <15:8>  NS             RAZ     NS         NS         Reserved.                                         
 <7:0>   SELECT         R/W     0x0        0x0        FIFO/queue select/port-select.                    
                                                      FIFO/queue select: <7:5> indicates the FIFO/queue type; <4:0> indicates the FIFO/queue
                                                      number.
                                                      For example, 0x21 refers to RxFIFO_1, and 0x5E refers to TxReqQ_30.
                                                      0x1F-0x0: TxFIFO_31 to TxFIFO_0
                                                      0x3F-0x20: RxFIFO_31 to RxFIFO_0
                                                      0x5F-0x40: TxReqQ_31 to TxReqQ_0
                                                      0x7F-0x60: RxReqQ_31 to RxReqQ_0
                                                      0x9F-0x80: RxInfoQ_31 to RxInfoQ_0
                                                      0xA0: DescFetchQ
                                                      0xA1: EventQ
                                                      0xA2: ProtocolStatusQ
                                                      Port-select: <3:0> selects the port-number when accessing USBDRD(0..1)_UAHC_GDBGLTSSM.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GDBGLTSSM = UAHC LTSSM Debug Register
 * 
 *  In multi-port host configuration, the port-number is defined by
 *  USBDRD(0..1)_UAHC_GDBGFIFOSPACE[SELECT][3:0].
 *  Value of this register may change immediately after reset.
 *  See description in DBGFIFOSPACE.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.2.4.3.
 * 
$USBDRD(0..1)_UAHC_GDBGLTSSM   Address=(0x168000000C164+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field           Field   Reset      Typical    Field                                             
 Pos     Name            Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:27> NS              RAZ     NS         NS         Reserved.                                         
 <26>    LTDBTIMEOUT     RO/H    0x0        NS         LTDB timeout.                                     
 <25:22> LTDBLINKSTATE   RO/H    0x4        NS         LTDB link state.                                  
 <21:18> LTDBSUBSTATE    RO/H    0x0        NS         LTDB substate.                                    
 <17:0>  DEBUGPIPESTATUS RO/H    0x10440    NS         Debug PIPE Status.                                
                                                       <17> Elastic Buffer Mode
                                                       <16> Tx Elec Idle
                                                       <15> Rx Polarity
                                                       <14> Tx Detect Rx/Loopback
                                                       <13:11> LTSSM PHY command State
                                                       0x0: PHY_IDLE (PHY command state is in IDLE. No PHY request pending)
                                                       0x1: PHY_DET (Request to start Receiver detection)
                                                       0x2: PHY_DET_3 (Wait for Phy_Status (Receiver detection))
                                                       0x3: PHY_PWR_DLY (Delay Pipe3_PowerDown P0 -> P1/P2/P3 request)
                                                       0x4: PHY_PWR_A (Delay for internal logic)
                                                       0x5: PHY_PWR_B (Wait for Phy_Status(Power state change request))
                                                       <10:9> Power Down
                                                       <8> RxEq Train
                                                       <7:6> Tx Deemphasis
                                                       <5:3> LTSSM Clock State
                                                       0x0: CLK_NORM (PHY is in non-P3 state and PCLK is running)
                                                       0x1: CLK_TO_P3 (P3 entry request to PHY)
                                                       0x2: CLK_WAIT1 (Wait for Phy_Status (P3 request))
                                                       0x3: CLK_P3 (PHY is in P3 and PCLK is not running)
                                                       0x4: CLK_TO_P0 (P3 exit request to PHY)
                                                       0x5: CLK_WAIT2 (Wait for Phy_Status (P3 exit request))
                                                       <2> Tx Swing
                                                       <1> Rx Termination
                                                       <0> Tx Ones/Zeros
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GDBGLNMCC = UAHC LNMCC Debug Register
 * 
 *  See description in DBGFIFOSPACE.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.2.4.4.
 * 
$USBDRD(0..1)_UAHC_GDBGLNMCC   Address=(0x168000000C168+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:9>  NS         RAZ     NS         NS         Reserved.                                         
 <8:0>   LNMCC_BERC RO/H    NS         NS         This field indicates the bit error rate information for the port
                                                  selected in the GDBGFIFOSPACE.PortSelect field.
                                                  
                                                  This field is for debug purposes only.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GDBGBMU = UAHC BMU Debug Register
 * 
 *  See description in DBGFIFOSPACE.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.2.4.5.
 * 
$USBDRD(0..1)_UAHC_GDBGBMU   Address=(0x168000000C16C+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:8>  BMU_BCU_DBG RO/H    0x0        NS         BMU_BCU debug information.                        
 <7:4>   BMU_DCU_DBG RO/H    0x0        NS         BMU_DCU debug information.                        
 <3:0>   BMU_CCU_DBG RO/H    0x0        NS         BMU_CCU debug information.                        
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GDBGLSPMUX = UAHC LSP Multiplexer Debug Register
 * 
 *  See description in DBGFIFOSPACE.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.2.4.6.
 *            This register is for Synopsys internal use only.
 * 
$USBDRD(0..1)_UAHC_GDBGLSPMUX   Address=(0x168000000C170+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field                Field   Reset      Typical    Field                                             
 Pos     Name                 Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:24> RESERVED_0           R/W     0x0        0x0        Reserved.                                         
                                                            Read must ignore.
 <23:16> LATRACEPORTMUXSELECT R/W     0x0        0x0        logic_analyzer_trace port multiplexer select. Only bits<21:16> are used. For details on
                                                            how the mux controls the debug traces, refer to the verilog file.
                                                            A value of 0x3F drives 0s on the logic_analyzer_trace signal. If you plan to OR (instead
                                                            using a mux) this signal with other trace signals in your system to generate a common
                                                            trace signal, you can use this feature.
 <15>    ENDBC                R/W     0x0        0x0        Enable debugging of the Debug Capability LSP. Use HOSTSELECT to select the DbC LSP debug
                                                            information presented in the GDBGLSP register.
                                                            INTERNAL: Note this can only be used if DebugCapabaility was enabled at compile.
 <14>    RESERVED_1           R/W     0x0        0x0        Reserved.                                         
                                                            Read must ignore.
 <13:0>  HOSTSELECT           R/W     0x0        0x0        Host select. Selects the LSP debug information presented in USBDRD(0..1)_UAHC_GDBGLSP.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GDBGLSP = UAHC LSP Debug Register
 * 
 *  See description in DBGFIFOSPACE.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.2.4.7.
 *            This register is for Synopsys internal use only.
 * 
$USBDRD(0..1)_UAHC_GDBGLSP   Address=(0x168000000C174+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  LSP_DBG RO/H    0x0        NS         LSP debug information.                            
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GDBGEPINFO = UAHC Endpoint Information Debug Register
 * 
 *  See description in DBGFIFOSPACE.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.2.4.8.
 *            This register is for Synopsys internal use only.
 * 
$USBDRD(0..1)_UAHC_GDBGEPINFO   Address=(0x168000000C178+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  ENDPT_DBG RO/H    0x0        NS         Endpoint debug information, bits<63:0>.           
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GPRTBIMAP_HS = UAHC HighSpeed Port-to-Bus Instance Mapping Register
 * 
 *  This register specifies the HighSpeed USB instance number to which each USB 2.0 port is
 *  connected. By default, USB 2.0 ports are evenly distributed among all HighSpeed USB
 *  instances. Software can program this register to specify how USB 2.0 ports are connected
 *  to HighSpeed USB instances.
 *  The UAHC only implements one HighSpeed bus-instance, so this register should always be 0.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.20a, section 6.2.2.2.
 * 
$USBDRD(0..1)_UAHC_GPRTBIMAP_HS   Address=(0x168000000C180+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS     RAZ     NS         NS         Reserved.                                         
 <3:0>   BINUM1 R/W     0x0        0x0        HighSpeed USB instance number for port 1.         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GPRTBIMAP_FS = UAHC Full/LowSpeed Port-to-Bus Instance Mapping Register
 * 
 *  This register specifies the FullSpeed/LowSpeed USB instance number to which each USB 1.1 port
 *  is connected. By default, USB 1.1 ports are evenly distributed among all FullSpeed/LowSpeed
 *  USB instances.
 *  Software can program this register to specify how USB 1.1 ports are connected to
 *  FullSpeed/LowSpeed USB instances.
 *  The UAHC only implements one FullSpeed/LowSpeed bus-instance, so this register should always
 *  be 0.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.20a, section 6.2.2.3.
 * 
$USBDRD(0..1)_UAHC_GPRTBIMAP_FS   Address=(0x168000000C188+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:4>  NS     RAZ     NS         NS         Reserved.                                         
 <3:0>   BINUM1 R/W     0x0        0x0        FullSpeed USB instance number for port 1.         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GUSB2PHYCFG = UAHC USB2 PHY-Configuration Registers
 * 
 *  This register is used to configure the core after power-on. It contains USB 2.0 and USB 2.0
 *  PHY-related configuration parameters. The application must program this register before
 *  starting any transactions on either the SoC bus or the USB.
 *  Per-port registers are implemented.
 *  Note: Do not make changes to this register after the initial programming.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.20a, section 6.2.5.1.
 * 
$USBDRD(0..1)_UAHC_GUSB2PHYCFG(0..0)   Address=(0x168000000C200+a*0x10000000000+b*0x4)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field                    Field   Reset      Typical    Field                                             
 Pos     Name                     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31>    PHYSOFTRST               R/W     0x0        0x0        PHY soft reset. Causes the usb2phy_reset signal to be asserted to reset a UTMI PHY.
 <30>    U2_FREECLK_EXISTS        R/W     0x1        0x1        Specifies whether your USB 2.0 PHY provides a free-running
                                                                PHY clock, which is active when the clock control input is active.
                                                                If your USB 2.0 PHY provides a free-running PHY clock, it must
                                                                be connected to the utmi_clk[0] input. The remaining utmi_clk[n]
                                                                must be connected to the respective port clocks. The core uses
                                                                the Port-0 clock for generating the internal mac2 clock.
                                                                0: USB 2.0 free clock does not exist
                                                                1: USB 2.0 free clock exists
                                                                Note: This field must be set to zero if you enable ITP generation based
                                                                on the ref_clk counter, GCTL.SOFITPSYNC=1, or GFLADJ.
                                                                GFLADJ_REFCLK_LPM_SEL=1.
 <29>    ULPI_LPM_WITH_OPMODE_CHK R/W     0x0        0x0        Support the LPM over ULPI without NOPID token to the ULPI PHY.
                                                                Always 0x0.
 <28:25> NS                       RAZ     NS         NS         Reserved.                                         
 <24:19> RESERVED_1               R/W     0x0        0x0        Reserved.                                         
                                                                Read must ignore.
 <18>    ULPIEXTVBUSINDICATOR     R/W     0x0        0x0        Reserved (unused in this configuration).          
 <17>    ULPIEXTVBUSDRV           R/W     0x0        0x0        Reserved (unused in this configuration).          
 <16>    ULPICLKSUSM              R/W     0x0        0x0        Reserved (unused in this configuration).          
 <15>    ULPIAUTORES              R/W     0x0        0x0        Reserved (unused in this configuration).          
 <14>    NS                       RAZ     NS         NS         Reserved.                                         
 <13:10> USBTRDTIM                R/W     0x9        0x9        USB 2.0 turnaround time. Sets the turnaround time in PHY clock cycles. Specifies the
                                                                response time for a MAC request to the packet FIFO controller (PFC) to fetch data from the
                                                                DFIFO (SPRAM).
                                                                The following are the required values for the minimum SoC bus frequency of 60 MHz. USB
                                                                turnaround time is a critical certification criteria when using long cables and five hub
                                                                levels.
                                                                When the MAC interface is 8-bit UTMI+/ULPI, the required values for this field is 0x9.
                                                                If SoC bus clock is less than 60 MHz, and USB turnaround time is not critical, this field
                                                                can be set to a larger value.
 <9>     XCVRDLY                  R/W     0x0        0x0        Transceiver Delay                                 
                                                                Enables a delay between the assertion of the UTMI Transceiver Select signal (for
                                                                HighSpeed) and the assertion of the TxValid signal during a HighSpeed Chirp.
                                                                When this bit is set to 1, a delay of approximately 2.5us is introduced from
                                                                the time when the Transceiver Select is set to 0x0, to the time when the TxValid
                                                                is driven to 0 for sending the chirp-K. This delay is required for some UTMI PHYs.
                                                                This bit is only valid in device mode.
 <8>     ENBLSLPM                 R/W     0x1        0x1        Enable utmi_sleep_n and utmi_l1_suspend_n. The application uses this field to control
                                                                utmi_sleep_n and utmi_l1_suspend_n assertion to the PHY in the L1 state.
                                                                1 = utmi_sleep_n and utmi_l1_suspend_n assertion from the core is transferred to the
                                                                external PHY.
                                                                0 = utmi_sleep_n and utmi_l1_suspend_n assertion from the core is not transferred to
                                                                the external PHY.
                                                                When hardware LPM is enabled, this bit should be set high for Port0.
 <7>     PHYSEL                   WO      0x0        0x0        USB 2.0 HighSpeed PHY or USB 1.1 FullSpeed Serial Transceiver Select
 <6>     SUSPHY                   R/W     0x0        0x1        Suspend USB2.0 HighSpeed/FullSpeed/LowSpeed PHY. When set, USB2.0 PHY enters suspend mode
                                                                if suspend conditions are valid. Application needs to set this bit to 1 after the
                                                                core initialization is completed.
 <5>     FSINTF                   RO      0x0        0x0        FullSpeed serial-interface select. Always reads as 0x0.
 <4>     ULPI_UTMI_SEL            RO      0x0        0x0        ULPI or UTMI+ select. Always reads as 0x0, indicating UTMI+.
 <3>     PHYIF                    R/W     0x0        0x0        PHY interface width: 1 = 16-bit, 0 = 8-bit.       
                                                                All the enabled 2.0 ports should have the same clock frequency as Port0 clock frequency
                                                                (utmi_clk[0]).
                                                                The UTMI 8-bit and 16-bit modes cannot be used together for different ports at the same
                                                                time (i.e., all the ports should be in 8-bit mode, or all of them should be in 16-bit
                                                                mode).
 <2:0>   TOUTCAL                  R/W     0x0        0x0        High/FullSpeed timeout calibration.               
                                                                The number of PHY clock cycles, as indicated by the application in this field, is
                                                                multiplied by a bit-time factor; this factor is added to the HighSpeed/FullSpeed
                                                                interpacket timeout duration in the core to account for additional delays introduced by
                                                                the PHY. This might be required, since the delay introduced by the PHY in generating the
                                                                linestate condition can vary among PHYs.
                                                                The USB standard timeout value for HighSpeed operation is 736 to 816 (inclusive) bit
                                                                times. The USB standard timeout value for FullSpeed operation is 16 to 18 (inclusive) bit
                                                                times. The application must program this field based on the speed of connection.
                                                                The number of bit times added per PHY clock are:
                                                                HighSpeed operation:
                                                                - one 30-MHz PHY clock = 16 bit times
                                                                - one 60-MHz PHY clock = 8 bit times
                                                                FullSpeed operation:
                                                                - one 30-MHz PHY clock = 0.4 bit times
                                                                - one 60-MHz PHY clock = 0.2 bit times
                                                                - one 48-MHz PHY clock = 0.25 bit times
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GUSB2I2CCTL = UAHC USB2 I2C Control Register
 * 
 *  Reserved for future use.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.20a, section 6.2.5.2.
 * 
$USBDRD(0..1)_UAHC_GUSB2I2CCTL(0..0)   Address=(0x168000000C240+a*0x10000000000+b*0x4)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  NS    RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GUSB3PIPECTL = UAHC USB3 Pipe-Control Registers
 * 
 *  This register is used to configure the core after power-on. It contains USB 3.0 and USB 3.0
 *  PHY-related configuration parameters. The application must program this register before
 *  starting any transactions on either the SoC bus or the USB.
 *  Per-port registers are implemented.
 *  Note: Do not make changes to this register after the initial programming.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.20a, section 6.2.5.4.
 * 
$USBDRD(0..1)_UAHC_GUSB3PIPECTL(0..0)   Address=(0x168000000C2C0+a*0x10000000000+b*0x4)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field                 Field   Reset      Typical    Field                                             
 Pos     Name                  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31>    PHYSOFTRST            R/W     0x0        0x0        USB3 PHY Soft Reset (PHYSoftRst)                  
                                                             After setting this bit to 1, the software needs to clear this bit.
                                                             INTERNAL: For more information, refer to Synopsys Databook Figure 5-8 on page 253.
 <30>    HSTPRTCMPL            R/W     0x0        0x0        Host port compliance. Setting this bit to 1 enables placing the SuperSpeed port link into
                                                             a compliance state, which allows testing of the PIPE PHY compliance patterns without
                                                             having to have a test fixture on the USB 3.0 cable. By default, this bit should be set
                                                             to 0.
                                                             In compliance-lab testing, the SuperSpeed port link enters compliance after failing the
                                                             first polling sequence after power on. Set this bit to 0, when you run compliance tests.
                                                             The sequence for using this functionality is as follows:
                                                             Disconnect any plugged in devices.
                                                             Set USBDRD(0..1)_UAHC_USBCMD[HCRST] = 1 or power-on-chip reset.
                                                             Set USBDRD(0..1)_UAHC_PORTSC[PP] = 0.
                                                             Set HSTPRTCMPL = 1. This places the link into compliance state.
                                                             To advance the compliance pattern, follow this sequence (toggle HSTPRTCMPL):
                                                             Set HSTPRTCMPL = 0.
                                                             Set HSTPRTCMPL = 1. Toggle the HSTPRTCMPL bit to advance the link to the next compliance
                                                             pattern.
                                                             To exit from the compliance state, set UAHC_USBCMD[HCRST = 1 or power-on-chip reset.
 <29>    U2SSINACTP3OK         R/W     0x0        0x0        P3 OK for U2/SSInactive:                          
                                                             1 = during link state U2/SS.Inactive, put PHY in P3
                                                             0 = during link state U2/SS.Inactive, put PHY in P2 (Default)
 <28>    DISRXDETP3            R/W     0x0        0x0        Disables receiver detection in P3. If PHY is in P3 and the core needs to perform receiver
                                                             detection:
                                                             1 = core changes the PHY power state to P2 and then performs receiver detection. After
                                                             receiver detection, core changes PHY power state to P3.
                                                             0 = core performs receiver detection in P3 (default)
 <27>    UX_EXIT_IN_PX         R/W     0x0        0x0        UX exit in Px:                                    
                                                             1 = the core does U1/U2/U3 exit in PHY power state P1/P2/P3 respectively
                                                             0 = the core does U1/U2/U3 exit in PHY power state P0 (default behavior)
                                                             This bit is added for SuperSpeed PHY workaround where SuperSpeed PHY injects a glitch
                                                             on pipe3_RxElecIdle while receiving Ux exit LFPS, and pipe3_PowerDown change is in
                                                             progress.
                                                             INTERNAL: Note: This bit is used by third-party SuperSpeed PHY. It should be set to '0'
                                                             for Synopsys PHY.
 <26>    PING_ENCHANCE_EN      R/W     0x0        0x0        Ping enhancement enable. When set to 1, the downstream-port U1-ping-receive timeout
                                                             becomes 500 ms instead of 300 ms. Minimum Ping.LFPS receive duration is 8 ns (one mac3_clk
                                                             cycle). This field is valid for the downstream port only.
                                                             INTERNAL: Note: This bit is used by third-party SuperSpeed PHY. It should be set to '0'
                                                             for Synopsys PHY.
 <25>    U1U2EXITFAIL_TO_RECOV R/W     0x0        0x0        U1U2exit fail to recovery. When set to 1, and U1/U2 LFPS handshake fails, the LTSSM
                                                             transitions from U1/U2 to recovery instead of SS inactive.
                                                             If recovery fails, then the LTSSM can enter SS.Inactive. This is an enhancement only. It
                                                             prevents interoperability issue if the remote link does not do the proper handshake.
 <24>    REQUEST_P1P2P3        R/W     0x1        0x1        Always request P1/P2/P3 for U1/U2/U3.             
                                                             1 = the core always requests PHY power change from P0 to P1/P2/P3 during U0 to U1/U2/U3
                                                             transition.
                                                             0 = if immediate Ux exit (remotely initiated, or locally initiated) happens, the core does
                                                             not request P1/P2/P3 power state change.
                                                             INTERNAL: Note: This bit should be set to '1' for Synopsys PHY. For third-party SuperSpeed
                                                             PHY, check with your PHY vendor.
 <23>    STARTRXDETU3RXDET     WO      0x0        0x0        Start receiver detection in U3/Rx.Detect.         
                                                             If DISRXDETU3RXDET is set to 1 during reset, and the link is in U3 or Rx.Detect state, the
                                                             core starts receiver detection on rising edge of this bit.
                                                             This bit is valid for downstream ports only, and this feature must not be enabled for
                                                             normal operation.
                                                             INTERNAL: If have to use this feature, contact Synopsys.
 <22>    DISRXDETU3RXDET       R/W     0x0        0x0        Disable receiver detection in U3/Rx.Detect. When set to 1, the core does not do receiver
                                                             detection in U3 or Rx.Detect state. If STARTRXDETU3RXDET is set to 1 during reset,
                                                             receiver detection starts manually.
                                                             This bit is valid for downstream ports only, and this feature must not be enabled for
                                                             normal operation.
                                                             INTERNAL: If have to use this feature, contact Synopsys.
 <21:19> DELAYPX               R/W     0x1        0x1        Delay P1P2P3. Delay P0 to P1/P2/P3 request when entering U1/U2/U3 until (DELAYPX * 8)
                                                             8B10B error occurs, or Pipe3_RxValid drops to 0.
                                                             DELAYPXTRANSENTERUX must reset to 1 to enable this functionality.
                                                             INTERNAL: Should always be 0x1 for a Synopsys PHY.
 <18>    DELAYPXTRANSENTERUX   R/W     0x1        0x1        Delay PHY power change from P0 to P1/P2/P3 when link state changing from U0 to U1/U2/U3
                                                             respectively.
                                                             1 = when entering U1/U2/U3, delay the transition to P1/P2/P3 until the pipe3 signals,
                                                             Pipe3_RxElecIlde is 1 and pipe3_RxValid is 0
                                                             0 = when entering U1/U2/U3, transition to P1/P2/P3 without checking for Pipe3_RxElecIlde
                                                             and pipe3_RxValid.
                                                             INTERNAL: Note: This bit should be set to '1' for Synopsys PHY. It is also used by third-
                                                             party SuperSpeed PHY.
 <17>    SUSPEND_EN            R/W     0x0        0x0        Suspend USB3.0 SuperSpeed PHY (Suspend_en). When set to 1, and if suspend conditions are
                                                             valid, the USB 3.0 PHY enters suspend mode. Application
                                                             needs to set this bit to 1 after the core initialization is completed.
 <16:15> DATWIDTH              RO      0x0        0x0        PIPE data width.                                  
                                                             0x0 = 32 bits
                                                             0x1 = 16 bits
                                                             0x2 = 8 bits
                                                             0x3 = reserved
                                                             One clock cycle after reset, these bits receive the value seen on the pipe3_DataBusWidth.
                                                             This will always be 0x0.
                                                             INTERNAL: The simulation testbench uses the coreConsultant parameter to configure the VIP.
                                                                       These bits in the coreConsultant parameter should match your PHY data width and
                                                             the pipe3_DataBusWidth port.
 <14>    ABORTRXDETINU2        R/W     0x0        0x0        Abort Rx Detect in U2.                            
                                                             When set, and the link state is U2, then the core will abort receiver
                                                             detection if it receives U2 exit LFPS from the remote link partner.
                                                             This bit is for downstream port only.
                                                             INTERNAL: Note: This bit is used by third-party SuperSpeed PHY. It should be set to '0'
                                                             for Synopsys PHY.
 <13>    SKIPRXDET             R/W     0x0        0x0        Skip RX detect. When set to 1, the core skips RX detection if pipe3_RxElecIdle is low.
                                                             Skip is defined as waiting for the appropriate timeout, then repeating the operation.
 <12>    LFPSP0ALGN            R/W     0x0        0x0        LFPS P0 align. When set to 1:                     
                                                             the core deasserts LFPS transmission on the clock edge that it requests Phy power state 0
                                                             when exiting U1, U2, or U3 low power states. Otherwise, LFPS transmission is asserted one
                                                             clock earlier.
                                                             the core requests symbol transmission two pipe3_rx_pclks periods after the PHY asserts
                                                             PhyStatus as a result of the PHY switching from P1 or P2 state to P0 state.
                                                             For USB 3.0 Host, Device, and DRD cores this is not required.
 <11>    P3P2TRANOK            R/W     0x0        0x0        P3 P2 transitions OK.                             
                                                             1 = the core transitions directly from Phy power state P2 to P3 or from state P3 to P2.
                                                             0 = P0 is always entered as an intermediate state during transitions between P2 and P3, as
                                                             defined in the PIPE3 specification.
                                                             According to PIPE3 specification, any direct transition between P3 and P2 is illegal.
                                                             INTERNAL: This bit is used only for some non-Synopsys PHYs that cannot do LFPS in P3.
                                                                       Note: This bit is used by third-party SuperSpeed PHY. It should be set to '0'
                                                             for Synopsys PHY.
 <10>    P3EXSIGP2             R/W     0x0        0x0        P3 exit signal in P2. When set to 1, the core always changes the PHY power state to P2,
                                                             before attempting a U3 exit handshake.
                                                             INTERNAL: Note: This bit is used by third-party SuperSpeed PHY. It should be set to '0'
                                                             for Synopsys PHY.
 <9>     LFPSFILT              R/W     0x0        0x0        LFPS filter. When set to 1, filter LFPS reception with pipe3_RxValid in PHY power state
                                                             P0, ignore LFPS reception from the PHY unless both pipe3_Rxelecidle and pipe3_RxValid are
                                                             deasserted.
 <8>     RXDET2POLLLFPSCTRL    R/W     0x0        0x0        RX_DETECT to Polling.LFPS Control                 
                                                               * 0x0 (Default): Enables a 400us delay to start Polling LFPS after
                                                                 RX_DETECT. This allows VCM offset to settle to a proper level.
                                                               * 0x1: Disables the 400us delay to start Polling LFPS after RX_DETECT.
 <7>     RESERVED_0            R/W     0x0        0x0        Reserved.                                         
                                                             Read must ignore.
 <6>     TXSWING               R/W     0x0        0x0        Tx swing. Refer to the PIPE3 specificiation.      
 <5:3>   TXMARGIN              R/W     0x0        0x0        Tx margin. Refer to the PIPE3 specificiation, table 5-3.
 <2:1>   TXDEEMPHASIS          R/W     0x1        0x1        Tx de-emphasis. The value driven to the PHY is controlled by the LTSSM during USB3
                                                             compliance mode. Refer to the PIPE3 specificiation, table 5-3.
 <0>     ELASTICBUFFERMODE     R/W     0x0        0x0        Elastic buffer mode. Refer to the PIPE3 specificiation, table 5-3.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GTXFIFOSIZ = UAHC TX FIFO Size Registers
 * 
 *  This register holds the internal RAM start address/depth of each TxFIFO implemented. Unless
 *  packet size/buffer size for each endpoint is different and application-specific, it is
 *  recommended that the software use the default value. One register per FIFO.
 *  One register per FIFO.
 *  Host reset values = 0:{0x0000_0082} 1:{0x0082_0103} 2:{0x0185_0205}
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.20a, section 6.2.6.1.
 *            For more information, refer to the BMU section in Block Descriptions on Synopsys
 *  Databook page 238.
 * 
$USBDRD(0..1)_UAHC_GTXFIFOSIZ(0..3)   Address=(0x168000000C300+a*0x10000000000+b*0x4)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> TXFSTADDR R/W     NS         NS         Transmit FIFOn RAM start address. Contains the memory start address for TxFIFOn.
                                                 Reset values:
                                                 Device mode:
                                                    TXFIFO0 : 0x0
                                                    TXFIFO1 : 0x42
                                                    TXFIFO2 : 0x1c6
                                                    TXFIFO3 : 0x34a
                                                 Host mode:
                                                    TXFIFO0 : 0x0
                                                    TXFIFO1 : 0x82
                                                    TXFIFO2 : 0x185
                                                    TXFIFO3 : 0x38a
 <15:0>  TXFDEP    R/W     NS         NS         TxFIFOn depth. This value is in terms of TX RAM data width.
                                                 minimum value = 0x20, maximum value = 0x8000.
                                                 Reset values:
                                                 Device mode:
                                                    TXFIFO0 : 0x42
                                                    TXFIFO1 : 0x184
                                                    TXFIFO2 : 0x184
                                                    TXFIFO3 : 0x184
                                                 Host mode:
                                                    TXFIFO0 (FSLS) : 0x82
                                                    TXFIFO1 (HS)   : 0x103
                                                    TXFIFO2 (SS)   : 0x205
                                                 INTERNAL: For more information, see the Hardware Integration chapter of the Synopsys
                                                 Databook.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GRXFIFOSIZ = UAHC RX FIFO Size Registers
 * 
 *  The application can program the internal RAM start address/depth of the each RxFIFO as shown
 *  below. It is recommended that software use the default value. In Host mode, per-port
 *  registers are implemented.
 *  One register per FIFO.
 *  Host reset values = 0:{0x0000_0084} 1:{0x0084_0104} 2:{0x0188_0180}
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.20a, section 6.2.6.2.
 *            For more information, see the BMU section in Block Descriptions on Synopsys Databook
 *  page 238.
 * 
$USBDRD(0..1)_UAHC_GRXFIFOSIZ(0..2)   Address=(0x168000000C380+a*0x10000000000+b*0x4)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> RXFSTADDR R/W     NS         NS         RxFIFOn RAM start address.  This field contains the memory start address for RxFIFOn.
                                                 Device mode:
                                                    RXFIFO0 : 0x0
                                                    RXFIFO1 : 0x185
                                                    RXFIFO2 : 0x185
                                                 Host mode:
                                                    RXFIFO0 : 0x0
                                                    RXFIFO1 : 0x84
                                                    RXFIFO2 : 0x188
 <15:0>  RXFDEP    R/W     NS         NS         RxFIFOn depth. This value is in terms of RX RAM Data width.
                                                 minimum value = 0x20. maximum value = 0x4000.
                                                 Device mode:
                                                    RXFIFO0 : 0x185
                                                    RXFIFO1 : 0x0
                                                    RXFIFO2 : 0x0
                                                 Host mode:
                                                    RXFIFO0 : 0x84
                                                    RXFIFO1 : 0x104
                                                    RXFIFO2 : 0x180
                                                 INTERNAL: For more information, see the Hardware Integration chapter of the Synopsys
                                                 Databook.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GEVNTADR = Global Event Buffer Address Register
 * 
 *  This register holds the Event Buffer DMA Address pointer. Software must initialize this
 *  address once during power-on initialization. Software must not change the value of this
 *  register after it is initialized.
 *  Software must only use the GEVNTCOUNTn register for event processing. The lower n bits of the
 *  address must be USBDRD(0..1)_UAHC_GEVNTSIZ_(0)[EVNTSIZ]-aligned.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET] or
 *  USBDRD(0..1)_UAHC_GCTL[CORESOFTRESET] or
 *  USBDRD(0..1)_UAHC_USBCMD[HCRST] or USBDRD(0..1)_UAHC_USBCMD[LHCRST] or
 *  USBDRD(0..1)_UAHC_DCTL[CSFTRST].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.2.7.1.
 * 
$USBDRD(0..1)_UAHC_GEVNTADR(0)   Address=(0x168000000C400+a*0x10000000000+b*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:0>  EVNTADR R/W/H   0x0        0x0        Holds the start address of the external memory    
                                               for the Event Buffer. During operation, hardware does not update
                                               this address.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GEVNTSIZ = Global Event Buffer Size Register
 * 
 *  This register holds the Event Buffer Size and the Event Interrupt Mask bit. During power-on
 *  initialization, software must initialize the size with the number of bytes allocated for
 *  the Event Buffer. The Event Interrupt Mask will mask the interrupt, but events are still
 *  queued. After configuration, software must preserve the Event Buffer Size value when
 *  changing the Event Interrupt Mask.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET] or
 *  USBDRD(0..1)_UAHC_GCTL[CORESOFTRESET] or
 *  USBDRD(0..1)_UAHC_USBCMD[HCRST] or USBDRD(0..1)_UAHC_USBCMD[LHCRST] or
 *  USBDRD(0..1)_UAHC_DCTL[CSFTRST].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.2.7.2.
 * 
$USBDRD(0..1)_UAHC_GEVNTSIZ(0)   Address=(0x168000000C408+a*0x10000000000+b*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31>    EVNTINTMASK R/W     0x0        0x0        When set to 1, this prevents the interrupt from being generated.
                                                   However, even when the mask is set, the events are queued.
 <30:16> NS          R/W     NS         NS         Reserved.                                         
 <15:0>  EVNTSIZ     R/W     0x0        0x0        Holds the size of the Event Buffer in bytes; must be a multiple of
                                                   four. This is programmed by software once during initialization.
                                                   The minimum size of the event buffer is 32 bytes.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GEVNTCOUNT = Global Event Buffer Count Register
 * 
 *  This register holds the number of valid bytes in the Event Buffer. During initialization,
 *  software must initialize the count by writing 0 to the Event Count field. Each time the
 *  hardware writes a new event to the Event Buffer, it increments this count. Most events
 *  are four bytes, but some events may span over multiple four byte entries. Whenever the
 *  count is greater than zero, the hardware raises the corresponding interrupt
 *  line (depending on the USBDRD(0..1)_UAHC_GEVNTSIZ(0)[EVNTINTMASK]). On an interrupt, software
 *  processes one or more events out of the Event Buffer. Afterwards, software must write the
 *  Event Count field with the number of bytes it processed.
 *  Clock crossing delays may result in the interrupt's continual assertion after software
 *  acknowledges the last event. Therefore, when the interrupt line is asserted, software must
 *  read the GEVNTCOUNT register and only process events if the GEVNTCOUNT is greater than 0.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET] or
 *  USBDRD(0..1)_UAHC_GCTL[CORESOFTRESET] or
 *  USBDRD(0..1)_UAHC_USBCMD[HCRST] or USBDRD(0..1)_UAHC_USBCMD[LHCRST] or
 *  USBDRD(0..1)_UAHC_DCTL[CSFTRST].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.2.7.3.
 * 
$USBDRD(0..1)_UAHC_GEVNTCOUNT(0)   Address=(0x168000000C40C+a*0x10000000000+b*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> RESERVED_0 R/W     0x0        0x0        Reserved.                                         
                                                  These are apparently backed by read/write registers.
 <15:0>  EVNTCOUNT  R/W/H   0x0        0x0        When read, returns the number of valid events in the Event Buffer (in bytes).
                                                  When written, hardware decrements the count by the value written.
                                                  The interrupt line remains high when count is not 0.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GHWPARAMS8 = UAHC Hardware Parameters Register 8
 * 
 *  These registers contain the hardware configuration options selected at compile-time.
 *  INTERNAL: Register field names refer to Synopsys DWC_USB3_* parameters of the same suffix.
 *            See Synopsys DWC_usb3 Databook v2.20a, section 6.2.3.9.
 * 
$USBDRD(0..1)_UAHC_GHWPARAMS8   Address=(0x168000000C600+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field             Field   Reset      Typical    Field                                             
 Pos     Name              Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  DCACHE_DEPTH_INFO RO      0x708      NS         Dcache depth.                                     
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GTXFIFOPRIDEV
 * 
 *  This register specifies the relative DMA priority level among the Device TXFIFOs (one per IN
 *  endpoint).
 *  Each register bit[n] controls the priority (1: high, 0: low) of each TXFIFO[n]. When multiple
 *  TXFIFOs compete for DMA service at a given time (i.e., multiple TXQs contain TX DMA requests
 *  and their corresponding TXFIFOs have space available), the TX DMA arbiter grants access on a
 *  packet-basis in the following manner:
 *    1. High-priority TXFIFOs are granted access using round-robin arbitration
 *    2. Low-priority TXFIFOs are granted access using round-robin arbitration only after the
 *       high-priority TXFIFOs have no further processing to do (i.e., either the TXQs are empty
 *       or the corresponding TXFIFOs are full).
 *  For scatter-gather packets, the arbiter grants successive DMA requests to the same FIFO until
 *  the entire packet is completed.
 *  When configuring periodic IN endpoints, software must set register bit[n]=1, where n is the
 *  TXFIFO assignment. This ensures that the DMA for isochronous or interrupt IN endpoints are
 *  prioritized over bulk or control IN endpoints.
 *  This register is present only when the core is configured to operate in the device mode
 *  (includes DRD and OTG modes). The register size corresponds to the number of Device IN
 *  endpoints.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET] or
 *  USBDRD(0..1)_UAHC_GCTL[CORESOFTRESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.2.9.1.
 * 
$USBDRD(0..1)_UAHC_GTXFIFOPRIDEV   Address=(0x168000000C610+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:4>  NS          RAZ     NS         NS         Reserved.                                         
 <3:0>   TX_PRIORITY R/W     0x0        0x0        Each register bit[n] controls the priority (1: high, 0: low) of TXFIFO[n] within a speed
                                                   group.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GTXFIFOPRIHST = Global Host TX FIFO DMA Priority Register
 * 
 *  This register specifies the relative DMA priority level among the Host TXFIFOs (one per USB
 *  bus instance) within the associated speed group (SuperSpeed or HighSpeed/FullSpeed/LowSpeed).
 *  When multiple TXFIFOs compete for DMA service at a given time, the TXDMA arbiter grants access
 *  on a packet-basis in the following manner:
 *    1. Among the FIFOs in the same speed group (SuperSpeed or HighSpeed/FullSpeed/LowSpeed):
 *      a. High-priority TXFIFOs are granted access using round-robin arbitration
 *      b. Low-priority TXFIFOs are granted access using round-robin arbitration only after the
 *         high priority TXFIFOs have no further processing to do (i.e., either the TXQs are empty
 *         or thecorresponding TXFIFOs are full).
 *    2. The TX DMA arbiter prioritizes the SuperSpeed group or HighSpeed/FullSpeed/LowSpeed group
 *       according to the ratio programmed in the USBDRD(0..1)_UAHC_GDMAHLRATIO register.
 *  For scatter-gather packets, the arbiter grants successive DMA requests to the same FIFO until
 *  the entire packet is completed.
 *  The register size corresponds to the number of configured USB bus instances; for example, in
 *  the default configuration, there are 3 USB bus instances (1 SuperSpeed, 1 HighSpeed, and 1
 *  FullSpeed/LowSpeed).
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.2.9.2.
 * 
$USBDRD(0..1)_UAHC_GTXFIFOPRIHST   Address=(0x168000000C618+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:3>  NS          RAZ     NS         NS         Reserved.                                         
 <2:0>   TX_PRIORITY R/W     0x0        0x0        Each register bit[n] controls the priority (1: high, 0: low) of TXFIFO[n] within a speed
                                                   group.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GRXFIFOPRIHST = Global Host RX FIFO DMA Priority Register
 * 
 *  This register specifies the relative DMA priority level among the Host RXFIFOs (one per USB
 *  bus instance) within the associated speed group (SuperSpeed or HighSpeed/FullSpeed/LowSpeed).
 *  When multiple RXFIFOs compete for DMA service at a given time, the RxXDMA arbiter grants
 *  access on a packet-basis in the following manner:
 *    1. Among the FIFOs in the same speed group (SuperSpeed or HighSpeed/FullSpeed/LowSpeed):
 *      a. High-priority RXFIFOs are granted access using round-robin arbitration
 *      b. Low-priority RXFIFOs are granted access using round-robin arbitration only after high-
 *         priority RXFIFOs have no further processing to do (i.e., either the RXQs are empty or
 *         the corresponding RXFIFOs do not have the required data).
 *    2. The RX DMA arbiter prioritizes the SuperSpeed group or HighSpeed/FullSpeed/LowSpeed group
 *       according to the ratio programmed in the USBDRD(0..1)_UAHC_GDMAHLRATIO register.
 *  For scatter-gather packets, the arbiter grants successive DMA requests to the same FIFO until
 *  the entire packet is completed.
 *  The register size corresponds to the number of configured USB bus instances; for example, in
 *  the default configuration, there are 3 USB bus instances (1 SuperSpeed, 1 HighSpeed, and 1
 *  FullSpeed/LowSpeed).
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.2.9.3.
 * 
$USBDRD(0..1)_UAHC_GRXFIFOPRIHST   Address=(0x168000000C61C+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:3>  NS          RAZ     NS         NS         Reserved.                                         
 <2:0>   RX_PRIORITY R/W     0x0        0x0        Each register bit[n] controls the priority (1: high, 0: low) of RXFIFO[n] within a speed
                                                   group.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GDMAHLRATIO = Global Host FIFO DMA High-Low Priority Ratio Regsiter
 * 
 *  This register specifies the relative priority of the SuperSpeed FIFOs with respect to the
 *  HighSpeed/FullSpeed/LowSpeed FIFOs. The DMA arbiter prioritizes the
 *  HighSpeed/FullSpeed/LowSpeed round-robin arbiter group every DMA High-Low Priority Ratio
 *  grants as indicated in the register separately for TX and RX.
 *  To illustrate, consider that all FIFOs are requesting access simultaneously, and the ratio is
 *  4. SuperSpeed gets priority for 4 packets, HighSpeed/FullSpeed/LowSpeed gets priority for 1
 *  packet, SuperSpeed gets priority for 4 packets, HighSpeed/FullSpeed/LowSpeed gets priority for
 *  1 packet, and so on.
 *  If FIFOs from both speed groups are not requesting access simultaneously then,
 *   * if SuperSpeed got grants 4 out of the last 4 times, then HighSpeed/FullSpeed/LowSpeed get
 *     the priority on any future request.
 *   * if HighSpeed/FullSpeed/LowSpeed got the grant last time, SuperSpeed gets the priority on
 *     the next request.
 *   * if there is a valid request on either SuperSpeed or HighSpeed/FullSpeed/LowSpeed, a grant
 *     is always awarded; there is no idle.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.2.9.5.
 * 
$USBDRD(0..1)_UAHC_GDMAHLRATIO   Address=(0x168000000C624+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:13> NS       RAZ     NS         NS         Reserved.                                         
 <12:8>  RX_RATIO R/W     0x8        0x8        Speed ratio for RX arbitration.                   
 <7:5>   NS       RAZ     NS         NS         Reserved.                                         
 <4:0>   TX_RATIO R/W     0x8        0x8        Speed ratio for TX arbitration.                   
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_GFLADJ = Global Frame Length Adjustment Register
 * 
 *  This register provides options for the software to control the core behavior with respect to
 *  SOF (Start of Frame) and ITP (Isochronous Timestamp Packet) timers and frame timer
 *  functionality. It provides option to override the sideband signal fladj_30mhz_reg. In
 *  addition, it enables running SOF or ITP frame timer counters completely off of the ref_clk.
 *  This facilitates hardware LPM in host mode with the SOF or ITP counters being run off of the
 *  ref_clk signal.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.2.9.6.
 * 
$USBDRD(0..1)_UAHC_GFLADJ   Address=(0x168000000C630+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field                         Field   Reset      Typical    Field                                             
 Pos     Name                          Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31>    GFLADJ_REFCLK_240MHZDECR_PLS1 R/W     0x0        0x0        This field indicates that the decrement value that the controller applies for
                                                                     each ref_clk must be GFLADJ_REFCLK_240MHZ_DECR and
                                                                     GFLADJ_REFCLK_240MHZ_DECR +1 alternatively on each ref_clk.
                                                                     Set this bit to 1 only if GFLADJ_REFCLK_LPM_SEL is set to 1 and the
                                                                     fractional component of 240/ref_frequency is greater than or equal to 0.5.
                                                                     Example:
                                                                       If the ref_clk is 19.2 MHz then,
                                                                       - GUCTL.REF_CLK_PERIOD = 52
                                                                       - GFLADJ.GFLADJ_REFCLK_240MHZ_DECR = (240/19.2) = 12.5
                                                                       - GFLADJ.GFLADJ_REFCLK_240MHZDECR_PLS1 = 1
                                                                       If the ref_clk is 24 MHz then,
                                                                       - GUCTL.REF_CLK_PERIOD = 41
                                                                       - GFLADJ.GFLADJ_REFCLK_240MHZ_DECR = (240/24) = 10
                                                                       - GFLADJ.GFLADJ_REFCLK_240MHZDECR_PLS1 = 0
 <30:24> GFLADJ_REFCLK_240MHZ_DECR     R/W     0x0        0x0        This field indicates the decrement value that the controller applies for each
                                                                     ref_clk in order to derive a frame timer in terms of a 240-MHz clock. This
                                                                     field must be programmed to a non-zero value only if
                                                                     GFLADJ_REFCLK_LPM_SEL is set to 1.
                                                                     The value is derived as follows:
                                                                       GFLADJ_REFCLK_240MHZ_DECR = 240/ref_clk_frequency
                                                                     Examples:
                                                                       If the ref_clk is 24 MHz then,
                                                                       - GUCTL.REF_CLK_PERIOD = 41
                                                                       - GFLADJ.GFLADJ_REFCLK_240MHZ_DECR = 240/24 = 10
                                                                       If the ref_clk is 48 MHz then,
                                                                       - GUCTL.REF_CLK_PERIOD = 20
                                                                       - GFLADJ.GFLADJ_REFCLK_240MHZ_DECR = 240/48 = 5
                                                                       If the ref_clk is 17 MHz then,
                                                                       - GUCTL.REF_CLK_PERIOD = 58
                                                                       - GFLADJ.GFLADJ_REFCLK_240MHZ_DECR = 240/17 = 14
 <23>    GFLADJ_REFCLK_LPM_SEL         R/W     0x0        0x0        This bit enables the functionality of running SOF/ITP counters on the
                                                                     ref_clk.
                                                                     This bit must not be set to 1 if USBDRD(0..1)_UAHC_GCTL[SOFITPSYNC] bit is set to 1.
                                                                     Similarly, if GFLADJ_REFCLK_LPM_SEL set to 1, USBDRD(0..1)_UAHC_GCTL[SOFITPSYNC]
                                                                     must not be set to 1. When GFLADJ_REFCLK_LPM_SEL is set to 1 the
                                                                     overloading of the suspend control of the USB 2.0 first port PHY
                                                                     (UTMI) with USB 3.0 port states is removed. Note that the
                                                                     ref_clk frequencies supported in this mode are
                                                                     16/17/19.2/20/24/39.7/40 MHz.
                                                                     Note: If you set this bit to 1, the GUSB2PHYCFG.U2_FREECLK_EXISTS
                                                                     bit must be set to 0.
                                                                     INTERNAL: The utmi_clk[0] signal of the core must be
                                                                     connected to the FREECLK of the PHY.
 <22>    RESERVED_0                    R/W     0x0        0x0        Reserved.                                         
                                                                     These are apparently backed by read/write registers.
 <21:8>  GFLADJ_REFCLK_FLADJ           R/W     0x0        0x0        This field indicates the frame length adjustment to be applied when
                                                                     SOF/ITP counter is running off of the ref_clk.
                                                                     This register value is used to adjust
                                                                     - ITP interval when GCTL[SOFITPSYNC] is set to 1
                                                                     - both SOF and ITP interval when GLADJ.GFLADJ_REFCLK_LPM_SEL
                                                                       is set to 1.
                                                                     This field must be programmed to a non-zero value only if
                                                                     GFLADJ_REFCLK_LPM_SEL is set to 1 or GCTL.SOFITPSYNC is set to
                                                                     1.
                                                                     The value is derived as below:
                                                                       FLADJ_REF_CLK_FLADJ=((125000/ref_clk_period_integer)-
                                                                       (125000/ref_clk_period)) * ref_clk_period
                                                                     where,
                                                                     - the ref_clk_period_integer is the integer value of the ref_clk period got
                                                                       by truncating the decimal (fractional) value that is programmed in the
                                                                       GUCTL.REF_CLK_PERIOD field
                                                                     - the ref_clk_period is the ref_clk period including the fractional value.
                                                                     Examples:
                                                                       If the ref_clk is 24 MHz then,
                                                                       - GUCTL.REF_CLK_PERIOD = 41
                                                                       - GFLADJ.GLADJ_REFCLK_FLADJ = ((125000/41)-
                                                                       (125000/41.6666))*41.6666 = 2032 (ignoring the fractional value)
                                                                       If the ref_clk is 48 MHz then,
                                                                       - GUCTL.REF_CLK_PERIOD = 20
                                                                       - GFLADJ.GLADJ_REFCLK_FLADJ = ((125000/20)-
                                                                       (125000/20.8333))*20.8333 = 5208 (ignoring the fractional value)
 <7>     GFLADJ_30MHZ_REG_SEL          R/W     0x0        0x0        This field selects whether to use the input signal fladj_30mhz_reg or the
                                                                     GFLADJ.GFLADJ_30MHZ to adjust the frame length for the SOF/ITP.
                                                                     When this bit is set to,
                                                                     1, the controller uses the register field GFLADJ.GFLADJ_30MHZ value
                                                                     0, the controller uses the input signal fladj_30mhz_reg value
 <6>     RESERVED_1                    R/W     0x0        0x0        Reserved.                                         
                                                                     These are apparently backed by read/write registers.
 <5:0>   GFLADJ_30MHZ                  R/W     0x0        0x0        This field indicates the value that is used for frame length adjustment
                                                                     instead of considering from the sideband input signal fladj_30mhz_reg.
                                                                     This enables post-silicon frame length adjustment in case the input signal
                                                                     fladj_30mhz_reg is connected to a wrong value or is not valid. The
                                                                     controller uses this value if GFLADJ.GFLADJ_30MHZ_REG_SEL is set to
                                                                     1 and the SOF/ITP counters are running off of UTMI(ULPI) clock
                                                                     (GFLADJ_REFCLK_LPM_SEL is 0 and GCTL.SOFITPSYNC is 1 or 0). for
                                                                     For details on how to set this value, refer to section 5.2.4 Frame Length
                                                                     Adjustment Register (FLADJ) of the the xHCI Specification.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_DCFG = Device Configuration Register
 * 
 *  This register configures the core in Device mode after power-on or after certain control
 *  commands or enumeration. Do not make changes to this register after initial programming.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.3.1.1.
 * 
$USBDRD(0..1)_UAHC_DCFG   Address=(0x168000000C700+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field          Field   Reset      Typical    Field                                             
 Pos     Name           Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:24> RESERVED_0     R/W     0x0        0x0        Reserved.                                         
                                                      These are apparently backed by read/write registers.
 <23>    IGNORESTREAMPP R/W     0x0        0x0        This bit only affects stream-capable bulk endpoints.
                                                      When this bit is set to 0x0 and the controller receives a Data Packet with the
                                                      Packet Pending (PP) bit set to 0 for OUT endpoints, or it receives an ACK
                                                      with the NumP field set to 0 and PP set to 0 for IN endpoints, the core
                                                      attempts to search for another stream (CStream) to initiate to the host.
                                                      However, there are two situations where this behavior is not optimal:
                                                       - When the host is setting PP=0 even though it has not finished the
                                                      stream, or
                                                       - When the endpoint on the device is configured with one transfer
                                                      resource and therefore does not have any other streams to initiate to the
                                                      host.
                                                      When this bit is set to 0x1, the core ignores the Packet Pending bit for the
                                                      purposes of stream selection and does not search for another stream when
                                                      it receives DP(PP=0) or ACK(NumP=0, PP=0). This can enhance the
                                                      performance when the device system bus bandwidth is low
 <22>    LPMCAP         R/W     0x0        0x0        LPM Capable                                       
                                                      The application uses this bit to control the controller's core LPM
                                                      capabilities. If the core operates as a non-LPM-capable device, it cannot
                                                      respond to LPM transactions.
                                                        0x0: LPM capability is not enabled.
                                                        0x1: LPM capability is enabled.
 <21:17> NUMP           R/W     0x4        0x4        Number of Receive Buffers                         
                                                      This bit indicates the number of receive buffers to be reported in the ACK
                                                      TP.
                                                      The DWC_usb3 controller uses this field if USBDRD(0..1)_UAHC_GRXTHRCFG[USBRXPKTCNTSEL]
                                                      is set to 0x0. The application can program this value based on RxFIFO size,
                                                      buffer sizes programmed in descriptors, and system latency.
                                                      For an OUT endpoint, this field controls the number of receive buffers
                                                      reported in the NumP field of the ACK TP transmitted by the core.
                                                      INTERNAL: Note: This bit is used in host mode when Debug Capability is enabled.
 <16:12> INTRNUM        R/W     0x0        0x0        Interrupt number                                  
                                                      Indicates interrupt/EventQ number on which non-endpoint-specific device-related
                                                      interrupts (see DEVT) are generated.
 <11:10> RESERVED_1     RO/H    0x2        0x0        Reserved.                                         
                                                      Read must ignore.
 <9:3>   DEVADDR        R/W     0x0        0x0        Device Address.                                   
                                                      The application must perform the following
                                                       - Program this field after every SetAddress request.
                                                       - Reset this field to zero after USB reset.
 <2:0>   DEVSPD         R/W     0x4        0x4        Device Speed                                      
                                                      Indicates the speed at which the application requires the core to connect, or
                                                      the maximum speed the application can support. However, the actual bus
                                                      speed is determined only after the chirp sequence is completed, and is
                                                      based on the speed of the USB host to which the core is connected.
                                                        - 0x4: SuperSpeed (USB 3.0 PHY clock is 125 MHz or 250 MHz)
                                                        - 0x0: High-speed (USB 2.0 PHY clock is 30 MHz or 60 MHz)
                                                        - 0x1: Full-speed (USB 2.0 PHY clock is 30 MHz or 60 MHz)
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_DCTL = Device Control Register
 * 
 *  This register controls the
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.3.1.2.
 *  Attribute: -exempt_w1c_w=True.
 * 
$USBDRD(0..1)_UAHC_DCTL   Address=(0x168000000C704+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field           Field   Reset      Typical    Field                                             
 Pos     Name            Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31>    RS              R/W     0x0        0x0        Run/Stop.                                         
                                                       The software writes 1 to this bit to start the device controller operation.
                                                       To stop the device controller operation, the software must remove any active
                                                       transfers and write 0 to this bit. When the controller is stopped, it sets the
                                                       USBDRD(0..1)_UAHC_DSTS[DEVCTRLHLT] bit when the core is idle and the lower layer finishes
                                                       the disconnect process.
                                                       The Run/Stop bit must be used in following cases as specified:
                                                          1. After power-on reset and CSR initialization, the software must write 1 to this bit
                                                          to start the device controller. The controller does not signal connect to the host
                                                          until this bit is set.
                                                          2. The software uses this bit to control the device controller to perform a soft
                                                          disconnect. When the software writes 0 to this bit, the host does not see that
                                                          the device is connected. The device controller stays in the disconnected state
                                                          until the software writes 1 to this bit. The minimum duration of keeping this bit
                                                          cleared is 30ms in SuperSpeed and 10ms in High/Full/LowSpeed.
                                                          If the software attempts a connect after the soft disconnect or detects a
                                                          disconnect event, it must set USBDRD(0..1)_UAHC_DCTL[ULSTCHNGREQ] to
                                                          "Rx.Detect" before reasserting the Run/Stop bit.
                                                          INTERNAL: 3. When the USB or Link is in a lower power state and the Two Power Rails
                                                          configuration is selected, software writes 0 to this bit to indicate that it is going
                                                          to turn off the Core Power Rail. After the software turns on the Core Power Rail
                                                          again and re-initializes the device controller, it must set this bit to start the
                                                          device controller. For more details, see Low Power Operation on page 599.
 <30>    CSFTRST         R/W1S/H 0x0        0x0        Core Soft Reset.                                  
                                                       Resets the all clock domains as follows:
                                                       - Clears the interrupts and all the CSRs except the following registers:
                                                         GCTL, GUCTL, GSTS, GSNPSID, GGPIO, GUID, GUSB2PHYCFGn registers,
                                                         GUSB3PIPECTLn registers, DCFG, DCTL, DEVTEN, DSTS
                                                       - All module state machines (except the SoC Bus Slave Unit) are reset to the
                                                          IDLE state, and all the TxFIFOs and the RxFIFO are flushed.
                                                       - Any transactions on the SoC bus Master are terminated as soon as possible,
                                                         after gracefully completing the last data phase of a SoC bus transfer. Any
                                                         transactions on the USB are terminated immediately.
                                                       The application can write this bit at any time to reset the core. This is a self-clearing
                                                       bit; the core clears this bit after all necessary logic is reset in the core,
                                                       which may take several clocks depending on the corefs current state. Once this
                                                       bit is cleared, the software must wait at least 3 PHY clocks before accessing the
                                                       PHY domain (synchronization delay). Typically, software reset is used during
                                                       software development and also when you dynamically change the PHY selection
                                                       bits in the USB configuration registers listed above. When you change the PHY,
                                                       the corresponding clock for the PHY is selected and used in the PHY domain.
                                                       Once a new clock is selected, the PHY domain must be reset for proper
                                                       operation.
 <29>    RESERVED_0      R/W     0x0        0x0        Reserved.                                         
                                                       These are apparently backed by read/write registers.
 <28:24> HIRD_THRES      R/W     0x0        0x0        HIRD Threshold.                                   
                                                       The core asserts output signals utmi_l1_suspend_n and utmi_sleep_n on the basis of this
                                                       signal:
                                                       * The core asserts utmi_l1_suspend_n to put the PHY into Deep Low-Power
                                                         mode in L1 when both of the following are true:
                                                         - HIRD value is greater than or equal to the value in HIRD_Thres[3:0]
                                                         - HIRD_Thres[4] is set to 1'b1.
                                                       * The core asserts utmi_sleep_n on L1 when one of the following is true:
                                                         - If the HIRD value is less than HIRD_Thres[3:0] or
                                                         - HIRD_Thres[4] is set to 1'b0.
 <23>    APPL1RES        R/W     0x0        0x0        LPM Response Programmed by Application.           
                                                       Handshake response to LPM token specified by device application. Response
                                                       depends on USBDRD(0..1)_UAHC_DCFG[LPMCap].
                                                        LPMCap is 0x0 - The core always responds with Timeout (that is, no
                                                        response).
                                                        LPMCap is 0x1 - The core response is based on the value of this bit:
                                                          - 0x0: The core responds with an ACK upon a successful LPM transaction,
                                                            which requires all of the following are satisfied
                                                            - There are no PID/CRC5 errors in both the EXT token and the LPM token
                                                            (if not true, inactivity results in a timeout ERROR)
                                                            - A valid bLinkState = 0001B (L1) is received in the LPM transaction (else
                                                            STALL)
                                                            - No data is pending in the Transmit FIFO and OUT endpoints not in flow
                                                            controlled state (else NYET)
                                                         - 0x1: The core responds with an ACK upon a successful LPM, independent
                                                           of transmit FIFO status and OUT endpoint flow control state. The LPM
                                                           transaction is successful if all of the following are satisfied.
                                                           - There are no PID/CRC5 errors in both the EXT token and the LPM token
                                                           (else ERROR)
                                                           - A valid bLinkState = 0001B (L1) is received in the LPM transaction (else
                                                           STALL)
 <22:20> NS              RAZ     NS         NS         Reserved.                                         
 <19>    KEEPCONNECT     WO      0x0        0x0        Always write 0.                                   
                                                       INTERNAL: Writing this bit to 0x1 does nothing since we don't have hibernation feature.
 <18>    L1HIBERNATIONEN WO      0x0        0x0        Always write 0.                                   
                                                       INTERNAL: Writing this bit to 0x1 does nothing since we don't have hibernation feature.
 <17>    CRS             WO      0x0        0x0        Controller Restore State.                         
                                                       This command is similar to the USBDRD(0..1)_UAHC_USBCMD[CRS] bit in host mode and
                                                       initiates the restore process. When software sets this bit to 1, the controller
                                                       immediately sets USBDRD(0..1)_UAHC_DSTS[RSS] to 1. When the controller has finished
                                                       the restore process, it sets USBDRD(0..1)_UAHC_DSTS[RSS] to 0.
                                                       Note: When read, this field always returns 0.
 <16>    CSS             WO      0x0        0x0        Controller Save State.                            
                                                       This command is similar to the USBDRD(0..1)_UAHC_USBCMD[CSS] bit in host mode and
                                                       initiates the restore process. When software sets this bit to 1, the controller
                                                       immediately sets USBDRD(0..1)_UAHC_DSTS[SSS] to 1. When the controller has finished
                                                       the save process, it sets USBDRD(0..1)_UAHC_DSTS[SSS] to 0.
                                                       Note: When read, this field always returns 0.
 <15:13> NS              RAZ     NS         NS         Reserved.                                         
 <12>    INITU2ENA       R/W     0x0        0x0        Initiate U2 Enable.                               
                                                        0: May not initiate U2 (default)
                                                        1: May initiate U2
                                                       On USB reset, hardware clears this bit to 0. Software sets this bit after receiving
                                                       SetFeature(U2_ENABLE), and clears this bit when ClearFeature(U2_ENABLE) is
                                                       received.
                                                       If USBDRD(0..1)_UAHC_DCTL[ACCEPTU2ENA] is 0, the link immediately exits U2 state.
 <11>    ACCEPTU2ENA     R/W     0x0        0x0        Accept U2 Enable.                                 
                                                        0: Reject U2 except when Force_LinkPM_Accept bit is set (default)
                                                        1: Core accepts transition to U2 state if nothing is pending on the
                                                           application side.
                                                       On USB reset, hardware clears this bit to 0. Software sets this bit after receiving
                                                       a SetConfiguration command.
 <10>    INITU1ENA       R/W     0x0        0x0        Initiate U1 Enable.                               
                                                        0: May not initiate U1 (default)
                                                        1: May initiate U1
                                                       On USB reset, hardware clears this bit to 0. Software sets this bit after receiving
                                                       SetFeature(U1_ENABLE), and clears this bit when ClearFeature(U1_ENABLE) is
                                                       received.
                                                       If USBDRD(0..1)_UAHC_DCTL[ACCEPTU1ENA] is 0, the link immediately exits U1 state.
 <9>     ACCEPTU1ENA     R/W     0x0        0x0        Accept U1 Enable.                                 
                                                        0: Reject U1 except when Force_LinkPM_Accept bit is set (default)
                                                        1: Core accepts transition to U1 state if nothing is pending on the
                                                           application side.
                                                       On USB reset, hardware clears this bit to 0. Software sets this bit after receiving
                                                       a SetConfiguration command.
 <8:5>   ULSTCHNGREQ     WO      0x0        0x0        USB/Link State Change Request.                    
                                                       Software writes this field to issue a USB/Link state change request. A change in
                                                       this field indicates a new request to the core. If software wants to issue the same
                                                       request back-to-back, it must write a 0 to this field between the two requests. The
                                                       result of the state change request is reflected in USBDRD(0..1)_UAHC_DSTS[USBLNKST].
                                                       These bits are self-cleared on the MAC Layer exiting suspended state.
                                                       If software is updating other fields of the USBDRD(0..1)_UAHC_DCTL register and not
                                                       intending to force any link state change, then it must write a 0 to this field.
                                                       SuperSpeed Compliance mode is normally entered and controlled by the remote link
                                                       partner. Refer to the USB3 specification. Alternatively, you can force the local link
                                                       directly into Compliance mode, by resetting the SuperSpeed link with the
                                                       USBDRD(0..1)_UAHC_DCTL[RS] bit set to zero. If you then write 0xA to the ULSTCHNGREQ
                                                       field and 1 to USBDRD(0..1)_UAHC_DCTL[RS], the Link will go to Compliance. Once you
                                                       are in Compliance, you may alternately write 0x0 and 0xA to this field to advance
                                                       the compliance pattern.
                                                       In SS mode:
                                                         Value    Requested Link State Transition/Action
                                                           0x0     No Action
                                                           0x4     SS.Disabled
                                                           0x5     Rx.Detect
                                                           0x6     SS.Inactive
                                                           0x8     Recovery
                                                           0xA     Compliance
                                                           Others  Reserved
                                                       In HS/FS/LS mode:
                                                         Value    Requested USB state transition
                                                           0x8     Remote wakeup request
                                                           Others  Reserved
                                                           The Remote wakeup request should be issued 2us after the device goes into
                                                           suspend state (USBDRD(0..1)_UAHC_DSTS[USBLNKST] is 0x3).
 <4:1>   TSTCTL          R/W     0x0        0x0        Test Control.                                     
                                                       0x0    Test mode disabled
                                                       0x1    Test_J mode
                                                       0x2    Test_K mode
                                                       0x3    Test_SE0_NAK mode
                                                       0x4    Test_Packet mode
                                                       0x5    Test_Force_Enable
                                                       Others Reserved
 <0>     NS              RAZ     NS         NS         Reserved.                                         
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_DEVTEN = Device Event Enable Register
 * 
 *  This register controls the generation of Device-Specific events.
 *  If an enable bit is set to 0, the event will not be generated.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.3.1.2.
 * 
$USBDRD(0..1)_UAHC_DEVTEN   Address=(0x168000000C708+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field               Field   Reset      Typical    Field                                             
 Pos     Name                Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:13> NS                  RAZ     NS         NS         Reserved.                                         
 <12>    VNDRDEVTSTRCVEDEN   R/W     0x0        0x0        Vendor Device Test LMP Received Event.            
 <11:10> NS                  RAZ     NS         NS         Reserved.                                         
 <9>     ERRTICERREN         R/W     0x0        0x0        Erratic Error Event Enable.                       
 <8>     NS                  RAZ     NS         NS         Reserved.                                         
 <7>     SOFEN               R/W     0x0        0x0        Start of (micro)Frame Enable.                     
                                                           For debug purposes only; normally software must disable this event.
 <6>     U3L2L1SUSPEN        R/W     0x0        0x0        U3/L2-L1 Suspend Event Enable.                    
 <5>     HIBERNATIONREQEVTEN R/W     0x0        0x0        This bit enables/disables the generation of the Hibernation Request Event.
                                                           INTERNAL: Writing this bit to 0x1 does nothing since we don't have hibernation feature.
 <4>     WKUPEVTEN           R/W     0x0        0x0        Resume/Remote Wakeup Detected Event Enable.       
 <3>     ULSTCNGEN           R/W     0x0        0x0        USB/Link State Change Event Enable.               
 <2>     CONNECTDONEEN       R/W     0x0        0x0        Connection Done Enable.                           
 <1>     USBRSTEN            R/W     0x0        0x0        USB Reset Enable.                                 
 <0>     DISCONNEVTEN        R/W     0x0        0x0        Disconnect Detected Event Enable.                 
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_DSTS = Device Status Register
 * 
 *  This register indicates the status of the device controller with respect to USB-related
 *  events.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.3.1.3.
 * 
$USBDRD(0..1)_UAHC_DSTS   Address=(0x168000000C70C+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field       Field   Reset      Typical    Field                                             
 Pos     Name        Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:30> NS          RAZ     NS         NS         Reserved.                                         
 <29>    DCNRD       RO/H    0x0        0x0        Device Controller Not Ready.                      
                                                   Will always read-as-zero.
                                                   INTERNAL: Bit is only used with hibernation.
 <28>    SRE         R/W1C/H 0x0        0x0        Save/Restore Error                                
                                                   This bit is currently not supported.
 <27:26> NS          RAZ     NS         NS         Reserved.                                         
 <25>    RSS         RO      0x0        0x0        Restore State Status.                             
                                                   This bit is similar to the USBDRD(0..1)_USBSTS[RSS] in host mode.
                                                   When the controller has finished the restore process, it will complete the
                                                   command by setting RSS to 0.
                                                   Will always read-as-zero.
                                                   INTERNAL: Bit is only used with hibernation.
 <24>    SSS         RO      0x0        0x0        Save State Status.                                
                                                   This bit is similar to the USBDRD(0..1)_UAHC_USBSTS[SSS] in host mode.
                                                   When the controller has finished the save process, it will complete the
                                                   command by setting SSS to 0.
                                                   Will always read-as-zero.
                                                   INTERNAL: Bit is only used with hibernation.
 <23>    COREIDLE    RO/H    NS         NS         Core Idle.                                        
                                                   The bit indicates that the core finished transferring all RxFIFO data to
                                                   system memory, writing out all completed descriptors, and all Event Counts
                                                   are zero.
                                                   Note: While testing for Reset values, mask out the read value. This bit
                                                   represents the changing state of the core and does not hold a static value.
 <22>    DEVCTRLHLT  RO/H    0x0        0x0        Device Controller Halted.                         
                                                   When 1, the core does not generate Device events.
                                                   - This bit is set to 0 when the USBDRD(0..1)_UAHC_DCTL[RS] register is set to 1.
                                                   - The core sets this bit to 1 when, after software sets USBDRD(0..1)_UAHC_DCTL[RS] to 0,
                                                   the core is
                                                     idle and the lower layer finishes the disconnect process.
 <21:18> USBLNKST    RO/H    0x4        0x4        USB/Link State.                                   
                                                   In SuperSpeed mode, uses LTSSM State:
                                                      - 0x0: U0
                                                      - 0x1: U1
                                                      - 0x2: U2
                                                      - 0x3: U3
                                                      - 0x4: SS_DIS
                                                      - 0x5: RX_DET
                                                      - 0x6: SS_INACT
                                                      - 0x7: POLL
                                                      - 0x8: RECOV
                                                      - 0x9: HRESET
                                                      - 0xa: CMPLY
                                                      - 0xb: LPBK
                                                      - 0xf: Resume/Reset
                                                      - others: Reserved.
                                                   In High/Full/LowSpeed mode:
                                                      - 0x0: On state
                                                      - 0x2: Sleep (L1) state
                                                      - 0x3: Suspend (L2) state
                                                      - 0x4: Disconnected state (Default state)
                                                      - 0x5: Early Suspend state
                                                      - others: Reserved.
                                                   The link state Resume/Reset indicates that the core received a resume or
                                                   USB reset request from the host while the link was in hibernation. Software
                                                   must write '8' (Recovery) to the USBDRD(0..1)_UAHC_DCTL[ULSTCHNGREQ] field to acknowledge
                                                   the resume/reset request.
 <17>    RXFIFOEMPTY RO/H    0x1        0x1        RxFIFO Empty Indication.                          
 <16:3>  SOFFN       RO/H    0x0        0x0        Frame/MicroFrame Number of the Received SOF.      
                                                   When the core is operating at high-speed,
                                                   - [16:6] indicates the frame number
                                                   - [5:3] indicates the microframe number
                                                   When the core is operating at full-speed,
                                                   - [16:14] is not used, software can ignore these 3 bits.
                                                   - [13:3] indicates the frame number
 <2:0>   CONNECTSPD  RO/H    0x4        0x4        Connected Speed.                                  
                                                   Indicates the speed at which the controller core has come up after speed
                                                   detection through a chirp sequence.
                                                    0x4: SuperSpeed (PHY clock is running at 125 or 250 MHz)
                                                    0x0: High-speed (PHY clock is running at 60 MHz)
                                                    0x1: Full-speed (PHY clock is running at 60 MHz)
                                                    0x2: Low-speed  (not supported)
                                                    0x3: Full-speed (PHY clock is running at 48 MHz)
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_DGCMDPAR = Device Generic Command Parameter Register
 * 
 *  This register indicates the device command parameter.
 *  This must be programmed before or along with USBDRD(0..1)_UAHC_DGCMD.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET] or
 *  USBDRD(0..1)_UAHC_GCTL[CORESOFTRESET] or
 *  USBDRD(0..1)_UAHC_USBCMD[HCRST] or USBDRD(0..1)_UAHC_USBCMD[LHCRST] or
 *  USBDRD(0..1)_UAHC_DCTL[CSFTRST].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.3.1.4.
 * 
$USBDRD(0..1)_UAHC_DGCMDPAR   Address=(0x168000000C710+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  PARAM R/W     0x0        0x0        Device Generic Command Parameter.                 
                                             Usage depends on which USBDRD(0..1)_UAHC_DGCMD[CMDTYPE] is used,
                                             see usage notes in USBDRD_UAHC_DGCMD_CMDTYPE_E descriptions.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_DGCMD = Device Generic Command Register
 * 
 *  This register enables software to program the core using a single generic command interface to
 *  send link management packets and notifications. This register contains command, control, and
 *  status fields relevant to the current generic command, while the USBDRD(0..1)_UAHC_DGCMDPAR
 *  register provides the command parameter.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET] or
 *  USBDRD(0..1)_UAHC_GCTL[CORESOFTRESET] or
 *  USBDRD(0..1)_UAHC_USBCMD[HCRST] or USBDRD(0..1)_UAHC_USBCMD[LHCRST] or
 *  USBDRD(0..1)_UAHC_DCTL[CSFTRST].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.3.1.5.
 *  Attribute: -exempt_w1c_w=True.
 * 
$USBDRD(0..1)_UAHC_DGCMD   Address=(0x168000000C714+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> NS        RAZ     NS         NS         Reserved.                                         
 <15>    CMDSTATUS RO      0x0        0x0        Command Status.                                   
                                                  1: CmdErr - Indicates that the device controller encountered an error
                                                     while processing the command.
                                                  0: Indicates command success
 <14:11> NS        RAZ     NS         NS         Reserved.                                         
 <10>    CMDACT    R/W1S/H 0x0        0x0        Command Active.                                   
                                                 The software sets this bit to 1 to enable the device controller to execute the
                                                 generic command.
                                                 The device controller sets this bit to 0 after executing the command.
 <9>     NS        RAZ     NS         NS         Reserved.                                         
 <8>     CMDIOC    WO      0x0        0x0        Command Interrupt on Complete.                    
                                                 When this bit is set, the device controller issues a Generic Command
                                                 Completion event after executing the command. Note that this interrupt is
                                                 mapped to USBDRD(0..1)_UAHC_DCFG[INTRNUM].
                                                 Note: This field must not set to 1 if the USBDRD(0..1)_UAHC_DCTL[RS] field is 0.
 <7:0>   CMDTYP    WO      0x0        0x0        Specifies the type of command the software driver is requesting the core to
                                                 perform. See USBDRD_UAHC_DGCMD_CMDTYPE_E for encodings and usage.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_DALEPENA = Device Active USB Endpoint Enable Register
 * 
 *  This register indicates whether a USB endpoint is active in a given configuration or
 *  interface.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET] or
 *  USBDRD(0..1)_UAHC_GCTL[CORESOFTRESET] or
 *  USBDRD(0..1)_UAHC_USBCMD[HCRST] or USBDRD(0..1)_UAHC_USBCMD[LHCRST] or
 *  USBDRD(0..1)_UAHC_DCTL[CSFTRST].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.3.2.1.
 * 
$USBDRD(0..1)_UAHC_DALEPENA   Address=(0x168000000C720+a*0x10000000000)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field    Field   Reset      Typical    Field                                             
 Pos     Name     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  USBACTEP R/W     0x0        0x0        This field indicates if a USB endpoint is active in the current configuration
                                                and interface. It applies to USB IN endpoints 0-15 and OUT endpoints 0-15,
                                                with one bit for each of the 32 possible endpoints. Even numbers are for
                                                USB OUT endpoints, and odd numbers are for USB IN endpoints, as
                                                follows:
                                                 Bit[0]: USB EP0-OUT
                                                 Bit[1]: USB EP0-IN
                                                 Bit[2]: USB EP1-OUT
                                                 Bit[3]: USB EP1-IN
                                                The entity programming this register must set bits 0 and 1 because they
                                                enable control endpoints that map to physical endpoints (resources) after
                                                USBReset.
                                                Application software clears these bits for all endpoints (other than EP0-OUT
                                                and EP0-IN) after detecting a USB reset. After receiving SetConfiguration
                                                and SetInterface requests, the application must program endpoint registers
                                                accordingly and set these bits.
                                                INTERNAL: For more information, see 'Flexible Endpoint Mapping' on Synopsys DWC_usb3
                                                Databook v2.50a, page 82.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_DEPCMDPAR2_ = Device Physical Endpoint-n Command Parameter 2 Register
 * 
 *  This register indicates the physical endpoint command Parameter 2. It must be programmed
 *  before issuing the command.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET] or
 *  USBDRD(0..1)_UAHC_GCTL[CORESOFTRESET] or
 *  USBDRD(0..1)_UAHC_USBCMD[HCRST] or USBDRD(0..1)_UAHC_USBCMD[LHCRST] or
 *  USBDRD(0..1)_UAHC_DCTL[CSFTRST].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.3.2.2.
 * 
$USBDRD(0..1)_UAHC_DEPCMDPAR2_(0..15)   Address=(0x168000000C800+a*0x10000000000+b*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  PARAM2 R/W     NS         NS         Physical endpoint command Parameter 2             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_DEPCMDPAR1_ = Device Physical Endpoint-n Command Parameter 1 Register
 * 
 *  This register indicates the physical endpoint command Parameter 1. It must be programmed
 *  before issuing the command.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET] or
 *  USBDRD(0..1)_UAHC_GCTL[CORESOFTRESET] or
 *  USBDRD(0..1)_UAHC_USBCMD[HCRST] or USBDRD(0..1)_UAHC_USBCMD[LHCRST] or
 *  USBDRD(0..1)_UAHC_DCTL[CSFTRST].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.3.2.3.
 * 
$USBDRD(0..1)_UAHC_DEPCMDPAR1_(0..15)   Address=(0x168000000C804+a*0x10000000000+b*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  PARAM1 R/W     NS         NS         Physical endpoint command Parameter 1             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_DEPCMDPAR0_ = Device Physical Endpoint-n Command Parameter 0 Register
 * 
 *  This register indicates the physical endpoint command Parameter 0. It must be programmed
 *  before issuing the command.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET] or
 *  USBDRD(0..1)_UAHC_GCTL[CORESOFTRESET] or
 *  USBDRD(0..1)_UAHC_USBCMD[HCRST] or USBDRD(0..1)_UAHC_USBCMD[LHCRST] or
 *  USBDRD(0..1)_UAHC_DCTL[CSFTRST].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.3.2.4.
 * 
$USBDRD(0..1)_UAHC_DEPCMDPAR0_(0..15)   Address=(0x168000000C808+a*0x10000000000+b*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field  Field   Reset      Typical    Field                                             
 Pos     Name   Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:0>  PARAM0 R/W     NS         NS         Physical endpoint command Parameter 0             
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * USBDRD_UAHC_DEPCMD = Device Physical Endpoint-n Command Register
 * 
 *  This register enables software to issue physical endpoint-specific commands. This register
 *  contains command, control, and status fields relevant to the current generic command,
 *  while the USBDRD(0..1)_UAHC_DEPCMDPAR* registers provide command parameters and return
 *  status information.
 *  Several fields (including CMDTYPE) are write-only, so their read values are undefined. After
 *  power-on, prior to issuing the first endpoint command, the read value of this register is
 *  undefined. In particular, the CMDACT bit may be set after power-on. In this case, it is safe
 *  to issue an endpoint command.
 *  Reset by: IOI reset (srst_n) or USBDRD(0..1)_UCTL_CTL[UAHC_RESET] or
 *  USBDRD(0..1)_UAHC_GCTL[CORESOFTRESET] or
 *  USBDRD(0..1)_UAHC_USBCMD[HCRST] or USBDRD(0..1)_UAHC_USBCMD[LHCRST] or
 *  USBDRD(0..1)_UAHC_DCTL[CSFTRST].
 *  INTERNAL: See Synopsys DWC_usb3 Databook v2.50a, section 6.3.2.5.
 * 
$USBDRD(0..1)_UAHC_DEPCMD(0..15)   Address=(0x168000000C80C+a*0x10000000000+b*0x10)   Bus=(NCB)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field         Field   Reset      Typical    Field                                             
 Pos     Name          Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <31:16> COMMANDPARAM  R/W     NS         NS         Command or Event Parameters.                      
                                                     When this register is written:
                                                       Command Parameters:
                                                         For Start Transfer command:
                                                           - [31:16]: StreamID. The USB StreamID assigned to this transfer
                                                         For Start Transfer command applied to an isochronous endpoint:
                                                           - [31:16]: StartMicroFramNum: Indicates the (micro)frame number to
                                                           which the first TRB applies
                                                         For Update Transfer, End Transfer, and Start New Configuration
                                                         commands:
                                                           - [22:16]: Transfer Resource Index (XferRscIdx). The hardware-assigned
                                                           transfer resource index for the transfer, which was returned
                                                           in response to the Start Transfer command. The application
                                                           software-assigned transfer resource index for a Start New
                                                           Configuration command.
                                                     When this register is read:
                                                       Event Parameters:
                                                         For XferNotReady, XferComplete, and Stream events on Bulk Endpoints:
                                                           - [31:16]: StreamID. Applies only to bulk endpoints that support streams. This
                                                                      indicates the StreamID of the transfer for which the event is
                                                                      generated
                                                         For XferInProgress:
                                                           - [31:16]: Isochronous Microframe Number (IsocMicroFrameNum): Indicates the
                                                                      microframe number of the beginning of the interval that generated
                                                                      the XferInProgress event (debug purposes only)
                                                         For XferNotReady events on Isochronous Endpoints:
                                                           - [31:16]: Isochronous Microframe Number (IsocMicroFrameNum). Indicates the
                                                                      microframe number during which the endpoint was not ready
                                                           Note: controller core represents USB bus time as a 14-bit value on the bus and also
                                                           in the DSTS register (USBDRD(0..1)_UAHC_DSTS[SOFFN]), but as a 16-bit value in the
                                                           XferNotReady event. Use the 16-bit value to interact with Isochronous endpoints via
                                                           the StartXfer command. The extra two bits that the controller core produces will be
                                                           necessary for handling wrap-around conditions in the interaction between software
                                                           and hardware.
                                                         EPCmdCmplt events
                                                           For all EPCmdCmplt events
                                                             - [27:24]: Command Type. The command type that completed (Valid only in a DEPEVT
                                                                        event. Undefined when read from the
                                                                        USBDRD(0..1)_UAHC_DEPCMD(0..15)[COMMANDPARAM] field).
                                                           For EPCmdCmplt event in response to Start Transfer command:
                                                             - [22:16]: Transfer Resource Index (XferRscIdx). The internal hardware transfer
                                                                        resource index assigned to this transfer. This index must be used in
                                                                        all Update Transfer and End Transfer commands.
 <15:12> CMDSTATUS     R/W     NS         NS         Command Completion Status.                        
                                                     Additional information about the completion of this command is available in
                                                     this field.
                                                     Within an XferNotReady event:
                                                       [15]: Indicates the reason why the XferNotReady event is generated:
                                                         - 0: XferNotActive: Host initiated a transfer, but the requested transfer is not
                                                           present in the hardware
                                                         - 1: XferActive: Host initiated a transfer, the transfer is present, but no valid TRBs
                                                           are available
                                                       [14]: Not Used
                                                       [13:12]: For control endpoints, indicates what stage was requested when the transfer was
                                                       not ready:
                                                         - 0x1: Control Data Request
                                                         - 0x2: Control Status Request
                                                     Within an XferComplete or XferInProgress event:
                                                       [15]: LST bit of the completed TRB (XferComplete only)
                                                       [15]: MissedIsoc: Indicates the interval did not complete successfully (XferInProgress
                                                       only)
                                                       [14]: IOC bit of the TRB that completed
                                                       [13]: Indicates the TRB completed with a short packet reception or the last packet of an
                                                       isochronous interval
                                                       [12]: Reserved
                                                       If the host aborts the data stage of a control transfer, software may receive a
                                                       XferComplete event with the EventStatus field equal to 0. This is a valid event
                                                       that must be processed as a part of the Control Transfer Programming Model.
                                                     Within a Stream Event:
                                                       [15:12]:
                                                         - 0x2: StreamNotFound: This stream event is issued when the stream-capable endpoint
                                                           performed a search in its transfer resource cache, but could not find an active
                                                           and ready stream.
                                                         - 0x1: StreamFound: This stream event is issued when the stream-capable endpoint found
                                                           an active and ready stream in its transfer resource cache, and initiated traffic for
                                                           that stream to the host. The ID of the selected Stream is in the EventParam field.
                                                     In response to a Start Transfer command:
                                                       [15:12]:
                                                         - 0x2: Indicates expiry of the bus time reflected in the Start Transfer command.
                                                         - 0x1: Indicates there is no transfer resource available on the endpoint.
                                                     In response to a Set Transfer Resource (DEPXFERCFG) command:
                                                       [15:12]:
                                                         - 0x1: Indicates an error has occurred because software is requesting more transfer
                                                           resources to be assigned than have been configured in the hardware.
                                                     In response to a End Transfer command:
                                                       [15:12]:
                                                         - 0x1: Indicates an invalid transfer resource was specified.
                                                       INTERNAL: For abort handling, see also Synopsys DWC_usb3 Databook v2.50a, Section 8.4.
 <11>    HIPRI_FORCERM R/W     NS         NS         HighPriority: Only valid for Start Transfer command.
                                                     ForceRM: Only valid for End Transfer command.
 <10>    CMDACT        R/W     NS         NS         Software sets this bit to 1 to enable the device endpoint controller to
                                                     execute the generic command.
                                                     The device controller sets this bit to 0 when the CMDSTATUS field is valid and
                                                     the endpoint is ready to accept another command. This does not imply that
                                                     all the effects of the previously-issued command have taken place.
 <9>     RESERVED_0    RAZ     NS         NS         Reserved.                                         
                                                     Uninitialized, read must ignore.
 <8>     CMDIOC        R/W     NS         NS         Command Interrupt on Complete.                    
                                                     When this bit is set, the device controller issues a generic Endpoint
                                                     Command Complete event after executing the command. Note that this
                                                     interrupt is mapped to DEPCFG.IntrNum. When the DEPCFG command is
                                                     executed, the command interrupt on completion goes to the interrupt
                                                     pointed by the USBDRD(0..1)_UAHC_DCFG[INTRNUM] in the current command.
                                                     Note: This field must not set to 1 if the USBDRD(0..1)_UAHC_DCTL[RS] field is 0.
 <7:4>   RESERVED_1    RAZ     NS         NS         Reserved.                                         
                                                     Uninitialized, read must ignore.
 <3:0>   CMDTYP        R/W     NS         NS         Command Type.                                     
                                                     Specifies the type of command the software driver is requesting the core to
                                                     perform.
                                                     0x0: Reserved
                                                     0x1: Set Endpoint Configuration (64 or 96-bit Parameter)
                                                     0x2: Set Endpoint Transfer Resource Configuration (32-bit Parameter)
                                                     0x3: Get Endpoint State (No Parameter Needed)
                                                     0x4: Set Stall (No Parameter Needed)
                                                     0x5: Clear Stall (see Set Stall, No Parameter Needed)
                                                     0x6: Start Transfer (64-bit Parameter)
                                                     0x7: Update Transfer (No Parameter Needed)
                                                     0x8: End Transfer (No Parameter Needed)
                                                     0x9: Start New Configuration (No Parameter Needed)
-----------------------------------------------------------------------------------------------------------------------------------


// -*- csr3-text -*-
// ***********************************************************************
// *  CAVIUM CONFIDENTIAL AND PROPRIETARY NOTE
// *
// *  This software contains information confidential and proprietary
// *  to Cavium, Inc. It shall not be reproduced in whole or in part,
// *  or transferred to other documents, or disclosed to third parties,
// *  or used for any purpose other than that for which it was obtained,
// *  without the prior written consent of Cavium, Inc.
// *
// *  Copyright 2013, Cavium, Inc.  All rights reserved.
// *
// ***********************************************************************
// * DO NOT EDIT: This file was autogenerated by csr3.
// * This file duplicates the csr information in a convenient tabular format.
// * To make changes, please edit the vrm.csr file in this directory.
// * NOTE: Not all information is present in this file!
// ***********************************************************************

 * 
 * VRM_TWS_TWSI_SW_S
 * 
 *  Format for software to write data to external regulator.
 * 
$VRM_TWS_TWSI_SW_S
-----------------------------------------------------------------------------------------------------------------------------------
 Bit       Field Field          
 Pos       Name Description    
-----------------------------------------------------------------------------------------------------------------------------------
 w0<51>    V    Valid.         
 w0<50>    R    Read.          
 w0<49:48> SIZE Size of payload.
 w0<47:40> ADDR Slave address. External regulator ID.
 w0<39:32> IA   Internal CSR address of registers within external regulator.
 w0<31:0>  DATA Data to/from external regulator, includes PEC.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * VRM_TWS_TWSI_SW = VRM TWSI to Software Register
 * 
 *  This register allows SW to write data into I2C Controller directly.
 *  This register is for diagnostic use only.
 *  Attribute: -exempt_natural_alignment=a.
 * 
$VRM(0)_TWS_TWSI_SW   Address=(0x1180021000008+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63>    V       RC/W/H  0x0        NS         Valid bit.                                        
                                               Set on a write operation (should always be written with a 1).
                                               Cleared when a TWSI master-mode operation completes.
                                               Cleared when a TWSI configuration register access completes.
                                               Cleared when the TWSI device reads the register if SLONLY = 1.
 <62>    SL_ONLY RO      0x0        0x0        Reserved.                                         
 <61>    EIA     RO      0x0        0x0        Reserved.                                         
 <60:57> OP      RO      0x1        0x1        Reserved.                                         
 <56>    R       R/W/H   0x0        NS         Read bit or result. If this bit is set on a CSR write when SLONLY = 0, the operation is a
                                               read operation (if clear, it is a write operation).
                                               On a CSR read, this bit returns the result indication for the most recent master-mode
                                               operation, 1 = success, 0 = failure.
 <55>    SOVR    RO      0x1        0x1        Reserved.                                         
 <54>    SIZE_B3 RO      0x0        0x0        Reserved.                                         
 <53:52> SIZE    R/W/H   0x0        NS         Size minus one. Specifies the size in bytes of the master-mode operation.
                                               (0 = 1 byte, 1 = 2 bytes, 3 = 4 bytes).
 <51:50> SCR     RO      0x0        0x0        Reserved.                                         
 <49:47> UN_ADDR RO      0x0        0x0        Reserved.                                         
 <46:40> ADDR    R/W/H   0x0        NS         Address field. The address of the remote device for a master-mode operation.
                                               Note that when mastering a 7-bit OP, ADDR<6:0> should not take any of the values 0x78,
                                               0x79, 0x7A nor 0x7B, as these 7-bit addresses are reserved to extend to 10-bit addressing.
 <39:32> IA      R/W/H   0x0        0x0        Internal Address. Used when launching a combined master-mode operation.
 <31:0>  DATA    R/W/H   0x0        NS         Data field.                                       
                                               Used on a write operation when:
                                               Initiating a master-mode write operation (SLONLY = 0).
                                               Writing a TWSI configuration register (SLONLY = 0).
                                               The read value is updated by:
                                               A write operation to this register.
                                               Master-mode completion (contains error code).
                                               TWSI configuration-register read (contains result).
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * VRM_ALT_FUSE = VRM Alternative Fuse Register
 * 
 *  
 *  Attribute: -dv_fc_scratch=ALL.
 *  Attribute: -exempt_natural_alignment=a.
 * 
$VRM(0)_ALT_FUSE   Address=(0x1180021000018+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field     Field   Reset      Typical    Field                                             
 Pos     Name      Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:40> NS        RAZ     NS         NS         Reserved.                                         
 <39:32> TRAN_TEMP R/W     0x0        NS         Transition temperature for V calculation.         
 <31:24> MAX_STEP  RAZ     NS         NS         V step.                                           
 <23:16> SLOPE     R/W     NS         NS         Slope.                                            
 <15:8>  V_BASE    R/W     NS         NS         Base voltage. Minimum voltage that gets written to voltage regulator.
 <7:0>   V_MAX     R/W     NS         NS         Max voltage. Maximum voltage that gets written to voltage regulator.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * VRM_TELEMETRY_READ = VRM Telemetry Read Register
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$VRM(0)_TELEMETRY_READ   Address=(0x1180021000028+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:32> NS    RAZ     NS         NS         Reserved.                                         
 <31:16> IOUT  RO      NS         NS         Current reading from external regulator.          
 <15:0>  VOUT  RO      NS         NS         Voltage reading from external regulator.          
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * VRM_TELEMETRY_CMND = VRM Telemetry Command Register
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$VRM(0)_TELEMETRY_CMND   Address=(0x1180021000038+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:2>  NS    RAZ     NS         NS         Reserved.                                         
 <1:0>   CMND  R/W/H   NS         NS         This command will initiate a read instruction to the external voltage regulator
                                             into VRM_TELEMETRY_READ.
                                             0x0 = Do nothing.
                                             0x1 or 0x3 Read V.
                                             0x2 = Read I.
                                             Hardware clears CMND to indicate operation completed.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * VRM_MISC_INFO = VRM Miscellaneous Register
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$VRM(0)_MISC_INFO   Address=(0x1180021000048+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field                    Field   Reset      Typical    Field                                             
 Pos     Name                     Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:40> NS                       RAZ     NS         NS         Reserved.                                         
 <39:16> VRM_CTL_RCV_STATUS_ERROR RO/H    NS         NS         Holds the received status read from the external controller only for failing status.
 <15:13> VRM_CTL_CUR_STATE        RO/H    NS         NS         Current state of the VRM_CTL.                     
 <12:11> VRM_TYPE                 RO/H    NS         NS         VRM_TYPE identifies the type of device connected to the chip.
                                                                0x0 = Linear type, default or PMBus.
                                                                0x1 = VID type, ISL6367
                                                                0x2-3 = Reserved.
 <10>    BOOT_SEQ                 RO/H    NS         NS         Boot sequence was completed.                      
 <9>     TS_FUSE_STS              RO/H    NS         NS         Set if VRM fuses were loaded.                     
 <8>     VRM_FUSE_STS             RO/H    NS         NS         Set if VRM fuses were loaded.                     
 <7:0>   CMND                     RO/H    NS         NS         Last command send to the external voltage regulator.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * VRM_TS_TEMP_CONV_CTL = VRM Temp Sensor Analog Alternate Conversion Register
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$VRM(0)_TS_TEMP_CONV_CTL   Address=(0x1180021000058+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field      Field   Reset      Typical    Field                                             
 Pos     Name       Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:13> NS         RAZ     NS         NS         Reserved.                                         
 <12>    RESET_SM   R/W     0x0        NS         This will force the temperature conversion state machine into the reset state until
                                                  RESET_SM is cleared.
 <11>    SW_ACCESS  R/W     0x0        NS         If set, software controls inputs of analog temperature sensor.
 <10:2>  TS_SWITCH  R/W     0x14e      NS         Alternate software access to control temperature sensor switches.
 <1>     TS_CURR2EN R/W     0x0        NS         Controls curr2_en pin on analog temperature sensor block.
 <0>     STROBE     R/W     0x0        NS         Controls strobe pin on analog temperature sensor block.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * VRM_TS_TEMP_CONV_RESULT = VRM Temp Sensor Result Register
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$VRM(0)_TS_TEMP_CONV_RESULT   Address=(0x1180021000068+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field          Field   Reset      Typical    Field                                             
 Pos     Name           Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:24> NS             RAZ     NS         NS         Reserved.                                         
 <23>    N_VALID        RO/H    0x0        NS         When set N_VALUE is valid.                        
 <22:12> N_VALUE        RO/H    0x0        NS         N cycle count values after calibration initiated. Qualified by N_VALID.
 <11>    TEMP_VALID     RO/H    0x0        NS         When set TEMP_CORRECTED is valid.                 
                                                      This bit is pulsed on each conversion, and as such software may not be able to observe the
                                                      cycle in which TEMP_VALID is set.
 <10:0>  TEMP_CORRECTED RO/H    0x0        NS         Corrected temperature read out from the temp sensor module.
                                                      Has valid data after TEMP_VALID transitions.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * VRM_TS_TEMP_CONV_COEFF_FSM = VRM Temp Sensor Conversion Coefficient and FSM Register
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$VRM(0)_TS_TEMP_CONV_COEFF_FSM   Address=(0x1180021000078+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field   Field   Reset      Typical    Field                                             
 Pos     Name    Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:58> NS      RAZ     NS         NS         Reserved.                                         
 <57:48> T_FSM   R/W     0xfa       NS         Sets time interval for FSM update.                
 <47:38> NS      RAZ     NS         NS         Reserved.                                         
 <37:32> COEFF_A R/W     0x1f       NS         Coefficient A value for polynomial fit.           
                                               <37> is a sign bit to flip the shifted results.
                                               <36:32> dictates the amount of right shift.
 <31:25> NS      RAZ     NS         NS         Reserved.                                         
 <24:16> COEFF_B R/W     0x100      NS         Coefficient B value for polynomial fit. It should be a positive number and between 1 and
                                               2.
                                               <24> is the integer part should always be 1.
                                               <23:16> form the fractional part.
 <15:12> NS      RAZ     NS         NS         Reserved.                                         
 <11:0>  COEFF_C R/W     0x0        NS         Coefficient C value for polynomial fit.           
                                               A 2's complement number.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * VRM_TS_TEMP_NOFF_MC = VRM Temp Sensor Noff Coefficient Register
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$VRM(0)_TS_TEMP_NOFF_MC   Address=(0x1180021000088+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field Field   Reset      Typical    Field                                             
 Pos     Name  Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:28> NS    RAZ     NS         NS         Reserved.                                         
 <27:16> MC    R/W     0xbb8      NS         MC value, default is 3000 decimal.                
 <15:11> NS    RAZ     NS         NS         Reserved.                                         
 <10:0>  NOFF  R/W     0x0        0x0        N cycle count offset, used to subtract the appropriate count from N cycle.
                                             It should be such that at 0 degrees C, the difference between NOFF and NCYCLE is 0.
-----------------------------------------------------------------------------------------------------------------------------------


 * 
 * VRM_FUSE_BYPASS = VRM Fuse Bypass Register
 * 
 *  
 *  Attribute: -exempt_natural_alignment=a.
 * 
$VRM(0)_FUSE_BYPASS   Address=(0x1180021000098+a*0x1000000)   Bus=(RSL)
-----------------------------------------------------------------------------------------------------------------------------------
 Bit     Field           Field   Reset      Typical    Field                                             
 Pos     Name            Type    Value      Value      Description                                       
-----------------------------------------------------------------------------------------------------------------------------------
 <63:3>  NS              RAZ     NS         NS         Reserved.                                         
 <2>     CTL_HW_BYPASS   R/W     0x0        0x0        If set, bypass VRM control hardware responsible for controlling external voltage
                                                       regulator so software can send commands to the regulator.
 <1>     CTL_FUSE_BYPASS R/W     0x0        0x0        If set, bypass V_MAX, V_BASE, MAX_STEP, SLOPE, TRAN_TEMP fuses which feed the PMBus VRM controller.
 <0>     TS_FUSE_BYPASS  R/W     0x0        0x0        If set, bypass MC and NOFF fuses which feed the temperature sensor.
-----------------------------------------------------------------------------------------------------------------------------------



