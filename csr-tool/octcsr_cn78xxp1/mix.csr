# -*- csr3 -*-
# You must run "csr3 rtl" after editing this file!
---
name: MIX
attributes:
  block_index_affects_offset: "True"
  dv_fc_scratch_exempt: "NCB"
  dv_testbuilder_ignore_block_index: "True"
enums:
  - name: MIX_INTSN_E
    title: MIX Interrupt Source Enumeration
    attributes:
      width: "20"
    description: Enumerates the different MIX-generated interrupts.
    values:
      - name: MIX(0..1)_ODBLOVF
        value: 0x10000 + a*0x10
        attributes:
          cib_rtl_module: "mix"
          intsn_lsb_mismatch: "True"
        description: MIX ODBLOVF interrupt; see MIX(0..1)_ISR[ODBLOVF].

      - name: MIX(0..1)_IDBLOVF
        value: 0x10001 + a*0x10
        attributes:
          cib_rtl_module: "mix"
          intsn_lsb_mismatch: "True"
        description: MIX IDBLOVF interrupt; see MIX(0..1)_ISR[IDBLOVF].

      - name: MIX(0..1)_ORTHRESH
        value: 0x10002 + a*0x10
        attributes:
          cib_rtl_module: "mix"
          intsn_lsb_mismatch: "True"
        description: MIX ORTHRESH interrupt; see MIX(0..1)_ISR[ORTHRESH].

      - name: MIX(0..1)_IRTHRESH
        value: 0x10003 + a*0x10
        attributes:
          cib_rtl_module: "mix"
          intsn_lsb_mismatch: "True"
        description: MIX IRTHRESH interrupt; see MIX(0..1)_ISR[IRTHRESH].

      - name: MIX(0..1)_DATA_DRP
        value: 0x10004 + a*0x10
        attributes:
          cib_rtl_module: "mix"
          intsn_lsb_mismatch: "True"
        description: MIX DATA_DRP interrupt; see MIX(0..1)_ISR[DATA_DRP].

      - name: MIX(0..1)_IRUN
        value: 0x10005 + a*0x10
        attributes:
          cib_rtl_module: "mix"
          intsn_lsb_mismatch: "True"
        description: MIX IRUN interrupt; see MIX(0..1)_ISR[IRUN].

      - name: MIX(0..1)_ORUN
        value: 0x10006 + a*0x10
        attributes:
          cib_rtl_module: "mix"
          intsn_lsb_mismatch: "True"
        description: MIX ORUN interrupt; see MIX(0..1)_ISR[ORUN].

      - name: MIX(0..1)_TS
        value: 0x10007 + a*0x10
        attributes:
          cib_rtl_module: "mix"
          intsn_lsb_mismatch: "True"
        description: MIX TS interrupt; see MIX(0..1)_ISR[TS].


registers:
  - name: MIX(0..1)_ORING1
    title: MIX Outbound Ring Register 1
    address: 0x1070000100000 + a*0x800
    bus: NCB
    description: |
      To write to this register, a device issues an IOBST instruction directed at the MIO. To read
      this register, a device issues an IOBLD64 instruction directed at the MIO.
    fields:
      - name: OSIZE
        bits: 63..44
        access: R/W
        reset: 0x0
        typical: --
        description: |
          Represents the outbound ring (O-Ring) buffer's size (in 8-byte words). The ring can be as
          large as 1MB entries.
          This CSR must be setup written by software poweron (when ODBELL/ORCNT=0).

      - name: --
        bits: 43..42
        access: RAZ
        reset: --
        typical: --
        description: Reserved.

      - name: OBASE
        bits: 41..3
        access: R/W
        reset: 0x0
        typical: --
        description: |
          Represents the 8-byte aligned base address of the first outbound ring (O-Ring) entry in
          system memory.
          Software must only write to this register during power-on/boot code.

      - name: --
        bits: 2..0
        access: RAZ
        reset: --
        typical: --
        description: Reserved.


  - name: MIX(0..1)_ORING2
    title: MIX Outbound Ring Register 2
    address: 0x1070000100008 + a*0x800
    bus: NCB
    description: |
      To write to this register, a device issues an IOBST instruction directed at the MIO. To read
      this register, a device issues an IOBLD64 instruction directed at the MIO.
    fields:
      - name: --
        bits: 63..52
        access: RAZ
        reset: --
        typical: --
        description: Reserved.

      - name: OTLPTR
        bits: 51..32
        access: RO/H
        reset: 0x0
        typical: --
        description: |
          The outbound ring tail pointer selects the O-Ring entry that the hardware will process
          next. After the hardware completes sending an outbound packet, it increments the O-Ring
          tail pointer.
          The O-Ring tail pointer hardware increment is always modulo MIX(0..1)_ORING2[OSIZE].
          This field is read-only to software.

      - name: --
        bits: 31..20
        access: RAZ
        reset: --
        typical: --
        description: Reserved.

      - name: ODBELL
        bits: 19..0
        access: R/W/H
        reset: 0x0
        typical: --
        description: |
          Represents the cumulative total of pending outbound ring (O-Ring) buffer entries. Each
          O-Ring buffer entry contains:
          an L2/DRAM byte pointer along with a
          a byte length.
          After software inserts new entries into the O-Ring Buffer, it 'rings the doorbell with the
          count of the newly inserted entries.' When the MIX hardware receives the doorbell ring, it
          increments the current doorbell count by the CSR write value.
          Software must never cause the doorbell count for the O-Ring to exceed the size of
          MIX(0..1)_ORING1[OSIZE]. A read of the CSR indicates the current doorbell count.


  - name: MIX(0..1)_IRING1
    title: MIX Inbound Ring Register 1
    address: 0x1070000100010 + a*0x800
    bus: NCB
    description: |
      To write to this register, a device issues an IOBST instruction directed at the MIO. To read
      this register, a device issues an IOBLD64 instruction directed at the MIO.
    fields:
      - name: ISIZE
        bits: 63..44
        access: R/W
        reset: 0x0
        typical: --
        description: |
          Represents the inbound ring (I-Ring) buffer's size (in 8-byte words). The ring can be as
          large as 1MB entries.
          This CSR must be setup written by software poweron (when IDBELL/IRCNT=0).

      - name: --
        bits: 43..42
        access: RAZ
        reset: --
        typical: --
        description: Reserved.

      - name: IBASE
        bits: 41..3
        access: R/W
        reset: 0x0
        typical: --
        description: |
          Represents the 8-byte aligned base address of the first inbound ring
          (I-Ring) entry in system memory.
          Software must only write to this register during power-on/boot code.

      - name: --
        bits: 2..0
        access: RAZ
        reset: --
        typical: --
        description: Reserved.


  - name: MIX(0..1)_IRING2
    title: MIX Inbound Ring Register 2
    address: 0x1070000100018 + a*0x800
    bus: NCB
    description: |
      To write to this register, a device issues an IOBST instruction directed at the MIO. To read
      this register, a device issues an IOBLD64 instruction directed at the MIO.
    fields:
      - name: --
        bits: 63..52
        access: RAZ
        reset: --
        typical: --
        description: Reserved.

      - name: ITLPTR
        bits: 51..32
        access: RO/H
        reset: 0x0
        typical: --
        description: |
          The inbound ring (I-Ring) tail pointer selects the I-Ring entry that the hardware will
          process next. After the hardware completes receiving an inbound packet, it increments the
          I-Ring tail pointer.
          The I-Ring tail pointer hardware increment is always modulo MIX(0..1)_IRING2[ISIZE].
          This field is read-only to software.

      - name: --
        bits: 31..20
        access: RAZ
        reset: --
        typical: --
        description: Reserved.

      - name: IDBELL
        bits: 19..0
        access: R/W/H
        reset: 0x0
        typical: --
        description: |
          Represents the cumulative total of pending inbound ring (I-Ring) buffer entries. Each
          I-Ring buffer entry contains:
          an L2/DRAM byte pointer along with a
          a Byte Length.
          After software inserts a new entry into the I-Ring buffer, it 'rings the doorbell for the
          inbound ring.' When the MIX hardware receives the doorbell ring, it advances the doorbell
          count for the I-Ring.
          Software must never cause the doorbell count for the I-Ring to exceed the size of
          MIX(0..1)_IRING1[ISIZE]. A read of the CSR indicates the current doorbell count.


  - name: MIX(0..1)_CTL
    title: MIX Control Register
    address: 0x1070000100020 + a*0x800
    bus: NCB
    description: |
      To write to this register, a device issues an IOBST instruction directed at the MIO. To read
      this register, a device issues an IOBLD64 instruction directed at the MIO.
    fields:
      - name: --
        bits: 63..12
        access: RAZ
        reset: --
        typical: --
        description: Reserved.

      - name: TS_THRESH
        bits: 11..8
        access: R/W
        reset: 0x0
        typical: 0x0
        description: |
          TimeStamp interrupt threshold. When the number of pending Timestamp interrupts
          (MIX(0..1)_TSCTL[TSCNT] is greater than
          MIX(0..1)_CTL[TS_THRESH], then a programmable TimeStamp interrupt is issued (see
          MIX(0..1)_INTR[TS].
          For CN78XX, since the implementation only supports four outstanding timestamp interrupts,
          this field should only be programmed from [0..3].

      - name: CRC_STRIP
        bits: 7
        access: R/W
        reset: 0
        typical: 0
        description: |
          Hardware CRC strip enable. When enabled, the last 4 bytes (CRC) of the ingress packet are
          not included in cumulative packet byte length. In other words, the cumulative LEN field
          for all I-Ring buffer entries associated with a given ingress packet will be 4 bytes less
          (so that the final 4B hardware CRC packet data is not processed by software).

      - name: BUSY
        bits: 6
        access: RO/H
        reset: 0
        typical: 0
        description: |
          MIX busy status bit. MIX asserts busy status any time there are:
          L2/DRAM read operations in-flight
          L2/DRAM write operations in-flight
          After EN = 0, the MIX eventually completes any 'in-flight' transactions, at which point
          the BUSY deasserts.

      - name: EN
        bits: 5
        access: R/W/H
        reset: 0
        typical: 0
        description: |
          MIX enable bit. When EN = 0, MIX no longer arbitrates for any new L2/DRAM read/write
          requests on the IOI. MIX completes any requests that are currently pending for the IOI.

      - name: RESET
        bits: 4
        access: R/W
        reset: 1
        typical: 0
        description: |
          MIX soft reset. When software writes a 1 to this field, the MIX logic executes a soft
          reset.
          During a soft reset, CSR accesses are not affected. However, the values of the fields are
          affected by soft reset (except
          MIX(0..1)_CTL[RESET] itself).
          After power-on, the MIX-BGX are held in reset until RESET is written to 0. Software must
          also perform a MIX(0..1)_CTL CSR read after this write to ensure the soft reset de-
          assertion has had sufficient time to propagate to all MIO-MIX internal logic before any
          subsequent MIX CSR accesses are issued.
          The intended 'soft reset' sequence is:
          Write EN = 0 (to prevent any NEW transactions from being started)
          Wait for BUSY = 0 (to indicate that all in-flight transactions have completed)
          Write RESET = 1, followed by a MIX(0..1)_CTL register read and wait for the result.
          Re-initialize the MIX just as would be done for a hard reset.
          Once the MIX has been soft-reset, please refer to MIX Bring-up Sequence, MIX Bring-up
          Sequence to complete the MIX re-initialization sequence.
          Please also refer to MIX Block Reset on MIX block reset.

      - name: LENDIAN
        bits: 3
        access: R/W
        reset: 0
        typical: 0
        description: |
          Packet little-endian mode enable.
          0 = big-endian mode
          1 = little-endian mode
          When the mode is set, MIX byte-swaps packet data load/store operations at the MIX/IOB
          boundary.

      - name: NBTARB
        bits: 2
        access: R/W
        reset: 0
        typical: 0
        description: |
          MIX CB-request arbitration mode. When cleared to 0, the arbiter is fixed priority with the
          following priority scheme:
          Highest Priority:  I-Ring Packet Write Request
          O-Ring Packet Read Request
          I-Ring Entry Write Request
          I-Ring Entry Read Request
          O-Ring Entry Read Request
          When set to 1, the arbiter is round robin.

      - name: MRQ_HWM
        bits: 1..0
        access: R/W
        reset: 0x0
        typical: 0x1
        description: |
          MIX CB-request FIFO programmable high watermark.
          The MRQ contains 16 CB-requests which are CSR read/write requests. If the MRQ backs up
          with HWM entries, then new CB-requests are stalled.
          [0]: HWM = 11
          [1]: HWM = 10
          [2]: HWM = 9
          [3]: HWM = 8


  - name: MIX(0..1)_IRHWM
    title: MIX I-Ring High Watermark Threshold Register
    address: 0x1070000100028 + a*0x800
    bus: NCB
    description: |
      To write to this register, a device issues an IOBST instruction directed at the MIO. To read
      this register, a device issues an IOBLD64 instruction directed at the MIO.
    fields:
      - name: --
        bits: 63..40
        access: RAZ
        reset: --
        typical: --
        description: Reserved.

      - name: IBPLWM
        bits: 39..20
        access: R/W
        reset: 0x0
        typical: 0x0
        description: |
          I-Ring backpressure low-watermark threshold.
          When the number of available I-Ring entries (IDBELL) is less than IBPLWM, the BGX-MAC does
          the following:
          * in full-duplex mode: send periodic PAUSE packets.
          * in half-duplex mode: force collisions.
          This programmable mechanism is provided as a means to backpressure input traffic early
          enough so that packets are not dropped by CN78XX.

      - name: IRHWM
        bits: 19..0
        access: R/W
        reset: 0x0
        typical: 0x0
        description: |
          I-Ring entry high-watermark threshold. Used to determine when the number of inbound
          packets in system memory
          (MIX(0..1)_IRCNT[IRCNT]) exceeds this IRHWM threshold.


  - name: MIX(0..1)_IRCNT
    title: MIX I-Ring Pending Entry Counter Register
    address: 0x1070000100030 + a*0x800
    bus: NCB
    description: |
      To write to this register, a device issues an IOBST instruction directed at the MIO. To read
      this register, a device issues an IOBLD64 instruction directed at the MIO.
    fields:
      - name: --
        bits: 63..20
        access: RAZ
        reset: --
        typical: --
        description: Reserved.

      - name: IRCNT
        bits: 19..0
        access: R/W/H
        reset: 0x0
        typical: 0x0
        description: |
          Pending number of I-Ring packets.
          Whenever hardware writes a completion code of Done, Trunc, CRCErr or Err, it increments
          the IRCNT (to indicate to software the number of pending Input packets in system memory).
          The hardware guarantees that the completion code write is always visible in system memory
          before it increments the IRCNT.
          Reading IRCNT returns the current inbound packet count.
          Writing IRCNT decrements the count by the value written.
          This register is used to generate interrupts to alert software of pending inbound MIX
          packets in system memory.
          In the case of inbound packets that span multiple I-Ring entries, software must keep track
          of the number of I-Ring Entries associated with a given inbound packet to reclaim the
          proper number of I-Ring Entries for re-use.


  - name: MIX(0..1)_ORHWM
    title: MIX O-Ring High Watermark Threshold Register
    address: 0x1070000100038 + a*0x800
    bus: NCB
    description: |
      To write to this register, a device issues an IOBST instruction directed at the MIO. To read
      this register, a device issues an IOBLD64 instruction directed at the MIO.
    fields:
      - name: --
        bits: 63..20
        access: RAZ
        reset: --
        typical: --
        description: Reserved.

      - name: ORHWM
        bits: 19..0
        access: R/W
        reset: 0x0
        typical: 0x0
        description: |
          O-Ring entry high-watermark threshold. Used to determine when the number of outbound
          packets in system memory that can be reclaimed (MIX(0..1)_ORCNT[ORCNT]) exceeds this ORHWM
          threshold.


  - name: MIX(0..1)_ORCNT
    title: MIX O-Ring Entry Sent Counter Register
    address: 0x1070000100040 + a*0x800
    bus: NCB
    description: |
      To write to this register, a device issues an IOBST instruction directed at the MIO. To read
      this register, a device issues an IOBLD64 instruction directed at the MIO.
    fields:
      - name: --
        bits: 63..20
        access: RAZ
        reset: --
        typical: --
        description: Reserved.

      - name: ORCNT
        bits: 19..0
        access: R/W/H
        reset: 0x0
        typical: 0x0
        description: |
          Pending number of O-Ring packets.
          Whenever hardware removes a packet from the O-Ring, it increments the ORCNT (to indicate
          to software the number of Output packets in system memory that can be reclaimed).
          Reading ORCNT returns the current count.
          Writing ORCNT decrements the count by the value written.
          This register is used to generate interrupts to alert software of pending outbound MIX
          packets that have been removed from system memory. (See MIX(0..1)_ISR[ORTHRESH]
          description for more details.)
          For outbound packets, the number of O-Ring Packets is equal to the number of O-Ring
          Entries.


  - name: MIX(0..1)_ISR
    title: MIX Interrupt/Status Register
    address: 0x1070000100048 + a*0x800
    bus: NCB
    description: |
      This register provides a summary of the MIX interrupt bits. To write to this register, a
      device issues an IOBST instruction directed at the MIO. To read this register, a device issues
      an IOBLD64 instruction directed at the MIO.
    fields:
      - name: --
        bits: 63..8
        access: RAZ
        reset: --
        typical: --
        description: Reserved.

      - name: TS
        bits: 7
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          Timestamp interrupt. Throws MIX_INTSN_E:MIX(0..1)_INT_TS. This bit is set and the
          interrupt generated when the number of pending timestamp interrupts
          (MIX(0..1)_TSCTL[TSCNT]) is greater than the timestamp interrupt threshold
          (MIX(0..1)_CTL[TS_THRESH]) value.

      - name: ORUN
        bits: 6
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          O-ring packet count underflow detected. Throws MIX_INTSN_E::MIX(0..1)_INT_ORUN. If
          software writes a larger value than what is currently in the MIX(0..1)_ORCNT[ORCNT], then
          hardware reports the underflow condition.
          The MIX(0..1)_ORCNT[IOCNT] will clamp to zero.
          If an ORUN underflow condition is detected, the integrity of the MIX hardware state has
          been compromised. To recover, Software must issue a software reset sequence. (See
          MIX(0..1)_CTL[RESET.]

      - name: IRUN
        bits: 5
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          I-ring packet count underflow detected. Throws MIX_INTSN_E::MIX(0..1)_INT_IRUN. If
          software writes a larger value than what is currently in the MIX(0..1)_IRCNT[IRCNT], then
          hardware reports the underflow condition.
          The MIX(0..1)_IRCNT[IRCNT] will clamp to zero.
          If an IRUN underflow condition is detected, the integrity of the MIX hardware state has
          been compromised. To recover, software must issue a software reset sequence. (See
          MIX(0..1)_CTL[RESET]).

      - name: DATA_DRP
        bits: 4
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          Data was dropped due to RX FIFO full. Throws MIX_INTSN_E::MIX(0..1)_INT_DATA_DRP. If this
          event does occur, DATA_DRP is set and the interrupt is generated.

      - name: IRTHRESH
        bits: 3
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          Inbound ring packet threshold exceeded. Throws MIX_INTSN_E::MIX(0..1)_INT_IRTHRESH. When
          the pending number of inbound packets in system memory (IRCNT) has exceeded a programmable
          threshold (IRHWM), this bit is set and the interrupt is generated.

      - name: ORTHRESH
        bits: 2
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          Outbound ring packet threshold exceeded. Throws MIX_INTSN_E::MIX(0..1)_INT_ORTHRESH. When
          the pending number of outbound packets in system memory (ORCNT) has exceeded a
          programmable threshold (ORHWM), this bit is set and the interrupt is generated.

      - name: IDBLOVF
        bits: 1
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          "Inbound doorbell (IDBELL) overflow detected. Throws MIX_INTSN_E::MIX(0..1)_INT_IDBLOVF.
          If software attempts to write to the MIX(0..1)_IRING2[IDBELL] with a value greater than
          the remaining number of I-Ring buffer entries
          (MIX(0..1)_REMCNT[IREMCNT]), then the following occurs:
          The MIX(0..1)_IRING2[IDBELL] write is IGNORED
          IDBLOVF is set and the interrupt is generated.
          Software should keep track of the # of I-Ring entries in use (i.e. the cumulative number
          of IDBELL write operations), and ensure that future IDBELL write operations don't exceed
          the size of the I-Ring Buffer (MIX(0..1)_IRING2[ISIZE]). Software must reclaim I-Ring
          entries by keeping track of the number of IRing entries, and writing to the
          MIX(0..1)_IRCNT[IRCNT].
          The MIX(0..1)_IRCNT[IRCNT] register represents the total number of packets (not IRing
          entries) and software must further keep track of the number of I-Ring entries associated
          with each packet as they are processed.
          There is no recovery from an IDBLOVF Interrupt. If it occurs, it is an indication that
          software has overwritten the I-Ring buffer, and the only recourse is a hardware reset."

      - name: ODBLOVF
        bits: 0
        access: R/W1C/H
        reset: 0
        typical: 0
        description: |
          Outbound doorbell (ODBELL) overflow detected. Throws MIX_INTSN_E::MIX(0..1)_INT_ODBLOVF.
          If software attempts to write to MIX(0..1)_ORING2[ODBELL] with a value greater than the
          remaining number of O-Ring buffer entries
          (MIX(0..1)_REMCNT[OREMCNT]), then the following occurs:
          The MIX(0..1)_IRING2[ODBELL] write operation is IGNORED
          ODBLOVF is set and the interrupt is generated.
          Software should keep track of the number of I-Ring entries in use (i.e. the cumulative
          number of ODBELL write operations), and ensure that future ODBELL write operations don't
          exceed the size of the O-Ring buffer (MIX(0..1)_ORING2[OSIZE]). Software must reclaim
          O-Ring entries by writing to MIX(0..1)_ORCNT[ORCNT].
          There is no recovery from an ODBLOVF Interrupt. If it occurs, it is an indication that
          software has overwritten the O-Ring buffer, and the only recourse is a hardware reset.


  - name: MIX(0..1)_REMCNT
    title: MIX Ring Buffer Remainder Counts Register
    address: 0x1070000100058 + a*0x800
    bus: NCB
    description: |
      This register contains the MIX ring buffer remainder counts (useful for hardware debug only).
      To read this register, a device issues an IOBLD64 directed at the MIO.
    fields:
      - name: --
        bits: 63..52
        access: RAZ
        reset: 0x0
        typical: 0x0
        description: Reserved.

      - name: IREMCNT
        bits: 51..32
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: |
          Remaining I-Ring buffer count. Reflects the number of unused/remaining I-Ring entries that
          hardware currently detects in the I-Ring buffer. Hardware uses this value to detect I-Ring
          doorbell overflows. (See MIX(0..1)_ISR[IDBLOVF].)
          When software writes the MIX(0..1)_IRING1[ISIZE], IREMCNT is loaded with the
          MIX(0..1)_IRING2[ISIZE] value. (Note: ISIZE should only be written at power-on, when it is
          known that there are no I-Ring entries currently in use by hardware.) When software writes
          to the IDBELL register, the IREMCNT is decremented by the CSR write value. When hardware
          issues an I-Ring write request (onto the IOI), REMCNT is incremented by 1.

      - name: --
        bits: 31..20
        access: RAZ
        reset: 0x0
        typical: 0x0
        description: Reserved.

      - name: OREMCNT
        bits: 19..0
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: |
          Remaining O-Ring buffer count. Reflects the number of unused/remaining O-Ring entries that
          hardware currently detects in the O-Ring buffer. Hardware uses this value to detect O-Ring
          doorbell overflows. (See MIX(0..1)_ISR[ODBLOVF].)
          When software writes the MIX(0..1)_ORING1[OSIZE], OREMCNT is loaded with the
          MIX(0..1)_ORING2[OSIZE] value. (Note: [OSIZE] should only be written at power-on, when it
          is known that no O-Ring entries are currently in use by hardware.) When software writes to
          the ODBELL register, OREMCNT is decremented by the CSR write value. When software writes
          to OREMCNT, it is decremented by the CSR write value.


  - name: MIX(0..1)_TSTAMP
    title: MIX Timestamp Register
    address: 0x1070000100060 + a*0x800
    bus: NCB
    description: This register contains the MIX timestamp value.
    fields:
      - name: TSTAMP
        bits: 63..0
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: |
          MIX timestamp value. When software sets up an O-Ring entry with
          [47] = 1 (TSTAMP), the packet is tagged with a special 'SOP with TSTAMP' flag as it is
          sent to the BGX. Later the BGX sends sample strobe(s) to capture a global 64-bit timestamp
          value, followed by a 'commit' strobe which writes the last sampled value into the outbound
          timestamp FIFO (max depth = 4) and increments
          MIX(0..1)_TSCTL[TSCNT] to indicate the total number of pending timestamp interrupts.
          If the number of pending timestamp interrupts (MIX(0..1)_TSCTL[TSCNT]) is greater than the
          MIX(0..1)_CTL[TS_THRESH] value, then a programmable interrupt is also triggered (see
          MIX(0..1)_ISR[TS].
          Software then reads MIX(0..1)_TSTAMP[TSTAMP], and must then write MIX(0..1)_TSCTL, which
          will decrement MIX(0..1)_TSCTL[TSCNT] to indicate that a single timestamp interrupt has
          been serviced.
          The MIO-MIX hardware tracks up to MAX = 4 outstanding timestamped outbound packets at a
          time. All subsequent O-RING entries with SOP-TSTAMP will be stalled until software can
          service the 4 outstanding interrupts. Software can read
          MIX(0..1)_TSCTL to determine the number of pending timestamp interrupts (TSCNT), plus the
          number of outstanding timestamp requests in flight (TSTOT), as well as the number of
          available timestamp entries (TSAVL).
          A MIX_TSTAMP read when
          MIX(0..1)_TSCTL[TSCNT] = 0 will result in a return value of all zeroes. Software should
          only read this register when
          MIX(0..1)_ISR[TS] = 1 (or when MIX(0..1)_TSCTL[TSCNT] != 0) to retrieve the timestamp
          value recorded by hardware. If software reads the TSTAMP when hardware has not recorded a
          valid timestamp, then an all zeroes value is returned.


  - name: MIX(0..1)_TSCTL
    title: MIX Timestamp Control Register
    address: 0x1070000100068 + a*0x800
    bus: NCB
    description: |
      This register contains the control fields for MIX timestamps. Software can read this register
      to determine the number pending timestamp interrupts ([TSCNT]), the number outstanding
      timestamp requests in flight ([TSTOT]), and the number of available timestamp entries (TSAVL)
      in the timestamp FIFO.
      Writing to this register advances the MIX(0..1)_TSTAMP FIFO head pointer by 1 and decrements
      the [TSCNT, TSTOT] pending counts by 1. For example, if software reads [TSCNT] = 2 (two
      pending timestamp interrupts), it would immediately issue this sequence:
      a MIX(0..1)_TSTAMP[TSTAMP] read operation followed by MIX(0..1)_TSCTL write operation (i.e. it
      gets the timestamp value, pops the timestamp FIFO, and decrements pending counts by 1).
      a MIX(0..1)_TSTAMP[TSTAMP] read operation followed by MIX(0..1)_TSCTL write operation.
      Note for Software: A MIX(0..1)_TSCTL write operation is ignored when
      MIX(0..1)_TSCTL[TSCNT] = 0 (i.e., TimeStamp FIFO empty).
    fields:
      - name: --
        bits: 63..21
        access: RAZ
        reset: --
        typical: --
        description: Reserved.

      - name: TSAVL
        bits: 20..16
        access: RO/H
        reset: 0x4
        typical: 0x4
        description: |
          Number of MIX timestamp entries available for use. TSAVL MAX = 4 (implementation depth of
          timestamp FIFO).
          TSAVL = [IMPLEMENTATION_DEPTH = 4(MAX) - TSCNT].

      - name: --
        bits: 15..13
        access: RAZ
        reset: --
        typical: --
        description: Reserved.

      - name: TSTOT
        bits: 12..8
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: |
          Number of pending MIX timestamp requests in flight. TSTOT must never exceed MAX = 4
          (implementation depth of timestamp FIFO).

      - name: --
        bits: 7..5
        access: RAZ
        reset: --
        typical: --
        description: Reserved.

      - name: TSCNT
        bits: 4..0
        access: RO/H
        reset: 0x0
        typical: 0x0
        description: |
          Number of pending MIX timestamp interrupts. TSCNT must never exceed MAX=4 (implementation
          depth of timestamp FIFO).


  - name: MIX(0..1)_BIST
    title: MIX BIST Register
    address: 0x1070000100078 + a*0x800
    bus: NCB
    description: |
      This register contains the BIST status for the MIX memories: 0 = pass or never run, 1 = fail.
      To read this register, a device issues an IOBLD64 instruction directed at the MIO.
    attributes:
      dv_bist_all_fail_test: "ALL"
    fields:
      - name: --
        bits: 63..6
        access: RAZ
        reset: 0x0
        typical: 0x0
        description: Reserved.

      - name: OPFDAT
        bits: 5
        access: RO/H
        reset: 0
        typical: 0
        description: BIST results for AGO OPF buffer RAM.

      - name: MRGDAT
        bits: 4
        access: RO/H
        reset: 0
        typical: 0
        description: BIST results for AGI MRG buffer RAM.

      - name: MRQDAT
        bits: 3
        access: RO/H
        reset: 0
        typical: 0
        description: BIST results for NBR CSR RDREQ RAM.

      - name: IPFDAT
        bits: 2
        access: RO/H
        reset: 0
        typical: 0
        description: BIST results for MIX inbound packet RAM.

      - name: IRFDAT
        bits: 1
        access: RO/H
        reset: 0
        typical: 0
        description: BIST results for MIX I-Ring entry RAM.

      - name: ORFDAT
        bits: 0
        access: RO/H
        reset: 0
        typical: 0
        description: BIST results for MIX O-Ring entry RAM.



