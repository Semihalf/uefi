
Board Validation with the Bringup and Diagnostic Kit
====================================================

Overview
--------

This document is a step by step procedure for verifying proper
hardware functionality of boards based on OCTEON processors.  The
target audenice is either board designers or validation engineers
charged with the task of verifing hardware. By following this guide,
the following goals should be met.

.Final Goals
* The OCTEON processor booted and running software.
* All packet interfaces verfied as operational.
* Miscelanious I/O busses verfied as operational, such as TWSI and SMI/MDIO.
* If applicable, PCIe as a root complex verfied as operational.
* If applicable, SRIO verfied as operational.
* DRAM configured and tested.
* Board ready to be handed to software for further development.


Step 1 - Minimum Prerequisites
------------------------------

Certain minimum requirements must be met before progress can continue.
OCTEON must progress through the reset sequence documented in the
hardware manual. OCTEON's UART0 must be connected to a serial terminal
in order to monitor the boot progress.

* OCTEON reference clock must be at 50 Mhz.
* OCTEON reset sequence must follow the hardware reference manual.
* UART0 connected to a serial terminal. Baud rate of 115200, no parity, one stop bit.
* If booting from flash, a NOR flash must be connected to OCTEON's bootbus.

Step 2 - Boot the BDK
---------------------

Burn bdk-boot.bin to NOR flash
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Use a flash programmer to burn the image *bdk-boot.bin* to the
beginning of the NOR flash.

Boot over PCIe
~~~~~~~~~~~~~~

The target board must be connected as a PCIe endpoint to a PC system
running Linux.

. Apply any additional power need for the target board.
. Boot the PCIe host PC into Linux.
. Install the BDK on the PC by following the instructions in link:bdk.html[BDK documentation].
. Issue the following shell commands.

[source, sh]
----
$ export OCTEON_REMOTE_PROTCOL=pci
$ bdk-remote boot bdk-boot/bdk-boot.bin
----

Boot over EJTAG
~~~~~~~~~~~~~~~

The BDK has been tested with multiple EJTAG probes.  The best
supported probe is the Macraigor mpDemon.  The following section
details the process of booting the BDK using the mpDemon. Other EJTAG
probes should be similar.

Get the latest mpDemon Firmware
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Firmware and software updates are available for free from the Macraigor
website. Be sure the software installed meets the minimum version lists
below.

----
Model		Minimum Firmware
-----		----------------
mpDemon		3.0.3.9
----

Macraigor website with details about the mpDemon::

link:http://www.macraigor.com/mpDemon.htm[]

Link to the latest firmware for the mpDemon::

link:http://www.macraigor.com/downloads/mpDemon_Update.zip[]


Setting up a Macraigor mpDemon for use with Octeon
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Connect to the 9 pin serial port on the mpDemon with a straight through
serial cable. Using a baud rate of 19200, no parity, 8 bits, and 1 stop bit,
you should get the following menu after hitting return:

----
    Macraigor Systems mpDemon(tm) version 3.0.3.9

Licenses           :
API Baud Rate      : 115200
Use DHCP?          : Yes
DHCP Hostname      : mpdemon1
TCP/IP Address     : 192.168.162.166
       Mask        : 255.255.255.  0
       Gateway     : 192.168.162.  1
MAC Address        : 00.60.bf.01.01.b7
API TCP/IP Port    : 1000
OCDREMOTE          : JTAG speed 1
                   : JTAG TDO <- [1]CN63xx=8888 [2]CN63xx=8889 [3]CN63xx=8890 [4]CN63xx=8891 [5]CN63xx=8892 [6]CN63xx=8893 <- TDI

   mpDemon Command Menu:

  B - Set Serial API baud Rate             D - Set DHCP option
  N - Set DHCP hostName
  O - Set OCDREMOTE Configuration          T - Test OCDREMOTE Configuration
  L - Update License Code(s)               C - Set Macraigor API TCP/IP port
  P - Ping TCP/IP address                  J - Analyze JTAG Scan Chain
  E - Display Error Log                    R - Reboot mpDemon
  Type Command (<Enter> will refresh screen) ->
----

. Choose "D" to enable DHCP for the probe.
+
----
Type Command (<Enter> will refresh screen) -> D
Use DHCP? (Y/N) ->y
----

. Choose "N" to set the hostname that will be used during DHCP to name the
device. The following example configures the probe to use the name of
"mpdemon1".
+
----
Type Command (<Enter> will refresh screen) -> N
DHCP hostname ->mpdemon1

MUST REBOOT mpDEMON FOR DHCP CHANGE TO TAKE EFFECT
----

. Choose "O" to configure the builtin GDB remote stub. This is used to allow
interactive debugging using the GDB remote protocol. Again, the following
example is from a CN63XX.
+
----
  Type Command (<Enter> will refresh screen) -> O

Initial JTAG speed (1 - 8) [1] ->1
OCDREMOTE          : JTAG speed 1
                   : JTAG TDO <- [1]CN63xx=8888 [2]CN63xx=8889 [3]CN63xx=8890 [4]CN63xx=8891 [5]CN63xx=8892 [6]CN63xx=
8893 <- TDI
Do you want to change the JTAG chain [no]? y
Number of Devices in Scan Chain (0 - 16) [6] ->6
Device List:
            ...
            Cavium 64-bit Family:
              301x CN300x CN3020 CN31xx CN36xx
              CN38xx CN502X CN52xx CN56xx CN58xx
              CN63xx CN68xx N3 O1P O2P
              O9N O52 O56 O5020
            ...

Device1 [CN63xx] --> CN63xx
TCP/IP port number : [8888] ->

Device2 [CN63xx] --> CN63xx
TCP/IP port number : [8889] ->

Device3 [CN63xx] --> CN63xx
TCP/IP port number : [8890] ->

Device4 [CN63xx] --> CN63xx
TCP/IP port number : [8891] ->

Device5 [CN63xx] --> CN63xx
TCP/IP port number : [8892] ->

Device6 [CN63xx] --> CN63xx
TCP/IP port number : [8893] ->
   Reboot mpDemon to run with new parameters
   hit any key to continue
----

. At this time, configuration is complete. Reboot the probe with the "R" command
and view the new configuration.
+
----
  Type Command (<Enter> will refresh screen) -> r
Are you sure you want to reboot? y
Rebooting...
OK

    Macraigor Systems mpDemon(tm) version 3.0.3.9

Licenses           :
API Baud Rate      : 115200
Use DHCP?          : Yes
DHCP Hostname      : mpdemon1
TCP/IP Address     : 192.168.162. 53
       Mask        : 255.255.255.  0
       Gateway     : 192.168.162.  1
MAC Address        : 00.60.bf.01.01.b7
API TCP/IP Port    : 1000
OCDREMOTE          : JTAG speed 1
                   : JTAG TDO <- [1]CN63xx=8888 [2]CN63xx=8889 [3]CN63xx=8890 [4]CN63xx=8891 [5]CN63xx=8892 [6]CN63xx=
8893 <- TDI

   mpDemon Command Menu:

  B - Set Serial API baud Rate             D - Set DHCP option
  N - Set DHCP hostName
  O - Set OCDREMOTE Configuration          T - Test OCDREMOTE Configuration
  L - Update License Code(s)               C - Set Macraigor API TCP/IP port
  P - Ping TCP/IP address                  J - Analyze JTAG Scan Chain
  E - Display Error Log                    R - Reboot mpDemon
  Type Command (<Enter> will refresh screen) ->
----


Configuring the BDK Host tools to use the mpDemon
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The environment variable *OCTEON_REMOTE_PROTOCOL* controls how the
*bdk-remote* utility communicates with OCTEON.  Tot use the native
capabilities of the Macraigor mpDemon, this variable should be set as
follows:

[source, sh]
----
export OCTEON_REMOTE_PROTOCOL=macraigor:mpdemon1,1000,1
----

The different parts of this environment variable are defined below.

macraigor::

This is the EJTAG protocol being used. For the mpdemon, this is the best
protocol.

mpdemon1::

This is the hostname of the mpDemon.  You can either use a name or
IPv4 address in X.X.X.X format.

1000::

This is the TCP/IP port number used to connect to the mpDemon.  This
matches the "API TCP/IP Port" configuration of the probe.  The default
port is '1000' for the mpDemon.

1::

This is the EJTAG clock speed divider.  Generally the fastest speed of
'1' is best.  If you have trouble, try increasing this value to '2' or
'3'.  If trouble persists, try '8'.

Booting the BDK
^^^^^^^^^^^^^^^

Now that the mpDemon is configured and the *OCTEON_REMOTE_PROTCOL*
envionment variable is set, the BDK can be booted on the board.  Issue
the following *bdk-remote* command.

[source, sh]
----
bdk-remote boot bdk-boot/bdk-boot.bin
----

Successful Booting
~~~~~~~~~~~~~~~~~~

If everything went well, the following output should be visible in the
serial terminal.  If booting did not succeed, re-check step 1.

.Example Successful Boot
----
include::boot_messages.capture[]
include::main_menu.capture[]
Menu choice: (0INS)>
----


Step 3 - Configure the Board
----------------------------

TBD


Step 4 - Test TWSI
------------------

TBD


Step 5 - Test SMI/MDIO
----------------------

TBD


Step 6 - Test PCIe
------------------

TBD


Step 7 - Test the RGMII/MII Management Ports
--------------------------------------------

TBD


Step 8 - Test SGMII
-------------------

TBD


Step 9 - Test XAUI
------------------

TBD


Step 10 - Test Interlaken
-------------------------

TBD


Step 11 - Test SRIO
-------------------

TBD


Step 12 - Configure DDR
-----------------------

TBD


Step 13 - Test DDR
------------------

TBD


Step 14 - Test NAND
-------------------

TBD


Step 15 - Test USB
------------------

TBD


Step 16 - Test GPIO
-------------------

TBD

Final Words
-----------


